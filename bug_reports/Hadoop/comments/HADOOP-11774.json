[anonymous FTP call made on Windows NT, FTPFileSystem.disconnect() API is not handling the exception raised by FTPClient by commons-net-3.1.jar, FTPFileSystem.disconnect() internally calls FTPClient->logout() and FTPClient->disconnect(). Both these methods throws Exceptions.If a connection exception happens, we are likely not being able to connect with FTP Server. calling logout() will try to connect to FTP server again and access resources., Hi, after investigation and tests, we figured out that some configurations in FTPFIleSystem class in hadoop common project were hard-coded. 
The code is as follows.
      client.setFileTransferMode(FTP.BLOCK_TRANSFER_MODE);
      client.setFileType(FTP.BINARY_FILE_TYPE);
      client.setBufferSize(DEFAULT_BUFFER_SIZE);

According to RFP documentation(https://tools.ietf.org/html/rfc959), there are three transfer mode for FTP generally.(Stream, Block, Compressed) However, IIS FTP server does not support BLOCK_TRANSFER_MODE apparently, and it gives a connection reset error when you run a command after another.

I think it is more reasonable to allow user to configure these. I can commit the change to this if no one else has already worked on this. 

Any comments?, We changed the source code to use the "stream mode" and tested with IIS FTP server. It worked fine.]