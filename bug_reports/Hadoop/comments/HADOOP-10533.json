[Looks like this is triggered on a line that is {{in.close()}}, if the input stream is null.

This shouldn't happen at construction time -because the opening code should have failed, but it does appear possible
in the {{seek()}} command, which first closes the existing stream, then calls {{store.retrieve(key, pos)}} -an operation that can return null if S3 doesn't have that key.

At the very least, {{close()}} should be made robust against a null inner input stream; maybe the seek operation should convert a null retrieve operation into an {{IOException}}. 
, Hi [~benkimkimben]
This JIRA has no updates since 11/Oct/12. Is it still a problem? Right now, it is time to clean up 0.23 JIRAs. If it is still a problem in 2.x. Please retarget it to 2.x. Thanks!, Hi Chen
I tested it with CDH4.5.0(hadoop-2.0.0+1518) and doesn't seem to have same problem. I'am able to successfully run a wordcount MRv1 job with s3n protocol.
So is it pretty safe to say this issue is fixed on other 2.x.x versions?, Hi [~benkimkimben]
Thank you for the reply. Since it is not a problem for 2.x, would you mind remove 2.x from the target version? , Or close it if it is not a problem for 1.x either. , can we leave this open, but I'll move to hadoop/ fs/s3, as the check for null input on close is still thre., looking at this code, the only way the inner {{in}} stream can be null is if the {{store.retrieve(key)}} operation returned null. It does this if any exception is raised when trying to retrieve the data *that is not an instance of or subclass of IOException*, or the http response returned null

Either
# Something is going wrong with the GET, and that exception is being  logged at debug, then discarded.
# the HTTP request is returning a null response and this is not being picked up.

having the constructor and seek() operations check for null values and raise an IOE is the solution here; making close more robust wise, but does not address the real problem, marking as relates-to HADOOP-10589, though they are dissimilar in root cause -the checking for null input stream at close is different]