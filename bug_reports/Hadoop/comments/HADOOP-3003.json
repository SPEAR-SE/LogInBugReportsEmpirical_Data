[3003_20080311.patch: should fix this problem., In particular, I think you mean that the user information in the configuration could have been modified by a login process, and that we want the updated user information.  Is that right?

Also, I don't see why FsRef needs a Key, why cache values cannot just be FileSystem instances.  The only place where the FsRef's key is used is in closeAll(), where map.entrySet() could be instead used to iterate through all key/value pairs, no?
, > ... updated user information. Is that right?
That's is true.

In HADOOP-2915, there is a discussion about using WeakReference in the cache, so that un-referenced fs could be closed automatically.  In that case, the cache values have to be FsRef (extending WeakReference).  You are right that we don't need FsRef currently.  Do you want me to remove it or keep it for future use?
See https://issues.apache.org/jira/browse/HADOOP-2915?focusedCommentId=12575175#action_12575175, It was lucky that this problem does not exist in 0.16.1 since the username in conf remains constant during FileSystem creation., > Do you want me to remove it or keep it for future use?

Please remove it.  We should not keep dead code around for future use, since plans often change and then we end up with just dead code.


, -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12377663/3003_20080311.patch
against trunk revision 619744.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 6 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit -1.  The applied patch generated 192 release audit warnings (more than the trunk's current 0 warnings).

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests -1.  The patch failed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1952/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1952/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1952/artifact/trunk/build/test/checkstyle-errors.html
Release audit warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1952/artifact/trunk/current/releaseAuditDiffWarnings.txt
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1952/console

This message is automatically generated., 3003_20080313.patch: removed FsRef, -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12377835/3003_20080313.patch
against trunk revision 619744.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 6 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests -1.  The patch failed core unit tests.

    contrib tests -1.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1985/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1985/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1985/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1985/console

This message is automatically generated., 3003_20080318.patch: fixed some bugs., +1

A thought: the filesystem cache keys are now <user,scheme,authority>.  Since URIs have a user field, it is tempting to use a  URI for the key, instead of defining a new class: scheme://user@host:port/.  The only problem would be if the FileSystem URI's authority includes a user, especially if it is a different user.  For example, the S3 FileSystem puts a user in the authority, but that should be consistent with the S3 login.  Unfortunately, its probably not consistent with the way we're determining the username used by the cache, using UnixUserGroupInformation.login().  The bug is that login() should be per-filesystem, not static.
, +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12378180/3003_20080318.patch
against trunk revision 619744.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 6 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1995/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1995/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1995/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1995/console

This message is automatically generated., I just committed this. Thanks Nicholas!, Integrated in Hadoop-trunk #434 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/434/])]