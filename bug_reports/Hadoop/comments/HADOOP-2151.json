[This is because globPaths decides invoke {{listPaths}} on directories only if there is a glob specified for that 'component' of path.

I think we should change it to use {{listPaths}} at every component if there is a glob specified anywhere to start with. Otherwise just return the path. Minimizing {{listPaths}} is not required when a glob is specified since the user is already willing to pay the cost. 

, correction : Once there is glob, we can {{listPaths}} if a glob is specified for the component otherwise check {{exists()}} for the component.. or something like that.. :) we don't need to list all the 5k users for /user/foo/*/., Attached is a patch which addresses this problem. globPaths basically checks if the path exits by calling exists() for only those paths which were expanded via listPaths in previous iteration. This is done by passing a new flag for the recursive function to indicating if previous component was glob or not., I think it should check for existence after noticing a glob.. not just when prev component is glob.

{code}

  globPaths(path) {
     ...
     return globPathsLevel(..., false);
   }

   globPthsLevel(..., shouldExist) {
   ....
   if ( fp.hasPattern() ) {
       shouldExist = true;
       ...
    } else { 
       if ( !shouldExists || exists(tmpPath) ) {
          tmpList.add(tmpPath);
    }
    ....
     return globPathsLevel(..., shouldExist);
   }
{code}

note that {{shouldExist}} is never set to false once it is true.
Also whats with the underscores at the end :)? We don't have that in other parts of hadoop.
, Thanks Raghu. Here is an updated patch. And also got rid of ArrayList. We allocate new array only when we filter out parents., Another update with testcase. , +1., Thanks for reviewing Raghu. Making this PA., +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12369083/HADOOP-2151-3.patch
against trunk revision r593708.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1086/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1086/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1086/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1086/console

This message is automatically generated., I just committed this. Thanks Lohit!, Integrated in Hadoop-Nightly #302 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/302/])]