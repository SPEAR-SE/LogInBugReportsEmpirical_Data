[The actual scripting I wrote actually checks (and fails) when you are root.
The function I wrote is called "failIfUserIsRoot"
https://github.com/apache/hadoop/blob/trunk/dev-support/docker/hadoop_env_checks.sh#L58

Docker has the nasty effect of falling back to the root user in a container if something goes wrong (or if you use an 'old' docker version).
If this happens then the files that are mapped in the docker container are then written by 'root' during the build. The effect: When you leave the docker again you cannot delete these files and directories anymore.
Because it is in general a "Bad Idea" to work as the root user I used "are you root in the container" as a 'detection' to know something went wrong.

So if there is a need to change anything then I think a simple extra line in the BUILDING.TXT should suffice.
, Thanks [~nielsbasjes] for the comment! I agree it's ok not to support root user, and update the building doc. Considering the following codes assumes it's normal user (not root), I thought it would be good to detect if it's root user or not, if it is then fails fast. 

In *start-build-env.sh*:
{code}
RUN groupadd --non-unique -g ${GROUP_ID} ${USER_NAME}
RUN useradd -g ${GROUP_ID} -u ${USER_ID} -k /root -m ${USER_NAME}
ENV HOME /home/${USER_NAME}
...
docker run --rm=true -t -i \
  -v "${PWD}:/home/${USER_NAME}/hadoop" \
  -w "/home/${USER_NAME}/hadoop" \
  -v "${HOME}/.m2:/home/${USER_NAME}/.m2" \
  -u "${USER_NAME}" \
  "hadoop-build-${USER_NAME}"
{code}, Uploaded a patch to:
1. Update the BUILDING.txt doc to say root user isn't supported;
2. Let the docker start script fail faster when root user is used

Kindly give it a review, thanks., [~aw] and [~nielsbasjes], do you think we need this? It should be of no risk. Thanks.]