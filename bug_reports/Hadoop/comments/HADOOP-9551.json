[Adding one important note (before I forget). If this Jira is a strait forward backport, hadoop native library will be absolutely required to run Hadoop on Windows. Today, native library is required for production (for some behaviors), but not strictly needed to run Hadoop on Windows. For example, downstream projects can still run unittests on Windows without having to worry about the native library, and this is what they do today. We should make sure that this dependency is not broken with this Jira. , Attaching the backport for branch-1-win. My above comment still needs to be addressed + need to more testing., Attaching the patch which addresses my above comment. Patch is ready for the final review.
, Rebasing the patch., +1

I am not sure how do we resolve the native library dependency for downstream projects?
My observation in Hive seems like this: HADOOP_HOME environment variable needs to be set on Windows in order to run Hive unit tests because Hadoop needs to find 'winutils.exe'.
Once this change is in, native library will be required.
Hive may need to change its 'hadoop.cmd' to add '-Djava.library.path=%HADOOP_HOME%\lib\native\Windows_NT-amd64-64'.

, Thanks Chuan for the review.

bq. I am not sure how do we resolve the native library dependency for downstream projects?
This (branch-1-win) patch has the fallback to original Java APIs (with a warning), to avoid breaking downstream project unittests in branch-1 (since this is a stable codebase already). I did not want to add the fallback in trunk, since I'd like to find a more permanent solution going forward. Ideally, we should try to solve this in Hadoop such that downstream projects don't have to worry about hadoop.dll., Sorry. I think I mis-read your patch.

Should we fall back to Chris's original implementation instead of Java's API?
Because Java API's behavior seems incorrect according to the following bug report.
http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6203387, {quote}
Should we fall back to Chris's original implementation instead of Java's API?
{quote}

I think not.  With my older implementation, we had observed some stability problems on hosts under load.  It involved forking extra processes for shell commands.  The shell timeout would kick in, and the command would fail, causing {{DiskChecker}} to erroneously flag a volume as bad.

In practice, I think Windows will never execute the fallback.  Since hadoop.dll is required for correctness on Windows in various ways, any realistic deployment will have the native code available.
, bq. In practice, I think Windows will never execute the fallback. Since hadoop.dll is required for correctness on Windows in various ways, any realistic deployment will have the native code available.

Sound good to me! I also noticed trunk has the same logic. I already added +1 before., +1 for the patch.  Thanks, Ivan!

I have a couple of additional notes related to this patch, but none of this needs to prevent committing the current patch:

# I think it would be good to backport {{TestDiskChecker}} to branch-1 and branch-1-win.  I've filed HADOOP-9843 for this.
# We want to use {{assumeTrue}} for skipping tests that don't apply to the current platform.  I didn't recommend making the change in this patch, because trunk currently uses {{if (WINDOWS)}} for this too.  Cross-branch maintenance will be easier if we keep these the same.  We already have HADOOP-9427 to track cleaning those up.  I updated its Target Version to include branch-1-win.  We can clean up both branches in the scope of that issue.
, Thanks Chuan and Chris for the review! I committed the patch to branch-1-win.]