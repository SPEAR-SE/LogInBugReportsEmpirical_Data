[-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12533310/hadoop-jdk.tools.txt
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 javac.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1140//console

This message is automatically generated., I may be misremembering things, but I thought that on some OS/JDK versions that this was needed.  I think MacOS X was one of these, but I am not certain of this.  Before removing it, we really should check with [~tucu00] who wrote most of the pom stuff to see if he remembers anything about that.

Again I could be totally wrong about this and if so please removing extra dependencies is always a good thing in my book., I didnt get why buildbot failed. It didnt even tried to compile., in theory it might be needed only in case that you have JDK installed but you are building with JRE. But JRE6 do not contains javac anymore., You can see the build log from the build failure here: https://builds.apache.org/job/PreCommit-HADOOP-Build/1140/artifact/trunk/patchprocess/patchJavacWarnings.txt.  Looks like for some reason it suddenly couldn't find com.sun.javadoc., To compile you need a JDK, JREs don't bundle javac/javadoc and corresponding classes.

The dependency on *tools.jar* is within a profile which is meant for *nix platforms other than Mac (see snipped below). As the dependency is defined with *system* scope, maven does not attempt to download it from a repo, instead uses the <systemPath> element to find it.

{code}
    <profile>
      <id>os.linux</id>
      <activation>
        <os>
          <family>!Mac</family>
        </os>
      </activation>
      <properties>
        <build.platform>${os.name}-${os.arch}-${sun.arch.data.model}</build.platform>
      </properties>
      <dependencies>
        <dependency>
          <groupId>jdk.tools</groupId>
          <artifactId>jdk.tools</artifactId>
          <version>1.6</version>
          <scope>system</scope>
          <systemPath>${java.home}/../lib/tools.jar</systemPath>
        </dependency>
      </dependencies>
    </profile>
{code}

If you are making a JAR including the dependency classes in it (thing I strongly discourage) then you should use a profile to exclue the jdk.tools/jdk.tools groupId/artifactId.


, Forgot to mention, but the tools.jar is needed in the classpath, I believe for some of the findbugs/javadoc/jdiff (don't recall exactly which on) logic we have in the build., maven does not attempt to fetch it from repo during compile, but during building jar with maven assembly plugin it does, its most likely bug in assembly plugin., I tested it with mvn compile / openjdk7 and it compiles hadoop fine without that jdk.tools dependency., @Radim, you could exclude jdk.tools it your project POM and you'd be all set. As I've mentioned before, tools.jar is not required for compilation but for findbugs/jdiff reports., I opened maven assembly plugin bug - MASSEMBLY-616.

Maven FAQ recommend similar way: http://maven.apache.org/general.html#tools-jar-dependency and googling does not discovered any other approach.

I could not find these JDK tools deployed in maven repo, i found only old runtime http://repo1.maven.org/maven2/com/sun/rt/1.5.0_06/rt-1.5.0_06.pom i will propose to add tools.jar into maven repo because its now GPLed., This is bug in maven assembly plugin. Hadoop POM follows currently best known method for including tools.jar in classpath. Nothing else can be done in hadoop pom.]