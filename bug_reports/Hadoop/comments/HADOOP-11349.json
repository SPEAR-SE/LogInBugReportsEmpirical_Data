[+1., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12685906/HADOOP-11349.patch
  against trunk revision ddffcd8.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 65 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5197//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5197//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5197//console

This message is automatically generated., #  We should consider catching {{Throwable}} to make it more robust. 
# {{out.close}} may throw an exception that will hide the original problem, we probably should just  catch and log it without throwing, to make sure that the original exception is thrown

Please add a whitespace after {{catch}} , The findbugs warnings are coming for System.out and System.err being null. Nothing to do with code change.
Has Jenkins build env changed recently ? Because even in MapReduce, a similar issue was raised - MAPREDUCE-6184, Findbugs issue seems to be cause by http://sourceforge.net/p/findbugs/bugs/918/ as mentioned in comments section of MAPREDUCE-6184, Thanks [~jira.shegalov] for the review. 
Attached a new patch addressing these comments.

Kindly review [~jira.shegalov] and [~cmccabe], {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12685949/HADOOP-11349.002.patch
  against trunk revision db73cc9.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 65 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5201//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5201//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5201//console

This message is automatically generated., Fingbugs issues unrelated to code change, I meant findbugs., How about using {{IOUtils.cleanup}}?  That's what we use in other places to clean up streams.

thanks, [~cmccabe], yeah that will be far more cleaner. Uploading a new patch., Good idea, [~cmccabe]! It also addresses an additional comment I had for the 002 patch that the exception should be included in the log.

Thanks for updating the patch, [~varun_saxena]! 

Instead of blindly wrapping the Throwable, you should do it only if it's not {{instanceof IOException}}. Since you have to do this check twice, maybe add a helper method., [~jira.shegalov], addressed your comment in the new patch. Kindly review., I apologize if it seems like I'm nitpicking here, but I really don't like catching Throwable.

Our usual idiom for this kind of thing is:

{code}
boolean success = false;
try {
  out = ...
  success = true;
} finally {
  if (!success) {
    IOUtils.cleanup(out)
  }
}
{code}

This avoids the need to wrap the exception (or to rethrow the exception at all).

Thanks again for taking this one up, and sorry for the nitpick!, [~cmccabe], I think it's much better, your suggestion does not qualify as nitpicking :), +1 for using the success flag idiom.  [~varun_saxena], thank you for picking up this patch., [~cmccabe] and others, I have updated the patch with the suggested change(using a flag)., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12686074/HADOOP-11349.003.patch
  against trunk revision 5776a41.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 111 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5212//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5212//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5212//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12686088/HADOOP-11349.004.patch
  against trunk revision 5776a41.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 111 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.ha.TestSshFenceByTcpPort

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5213//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5213//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5213//console

This message is automatically generated., +1.  Test failure is not related (and findbugs is the upstream issue we know about with migration to new FB)
Will commit in a few, thanks all, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12686099/HADOOP-11349.005.patch
  against trunk revision 1340617.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 111 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5215//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5215//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5215//console

This message is automatically generated., FAILURE: Integrated in Hadoop-trunk-Commit #6684 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6684/])
HADOOP-11349. RawLocalFileSystem leaks file descriptor while creating a file if creat succeeds but chmod fails. (Varun Saxena via Colin P.  McCabe) (cmccabe: rev 03867eb1bb173c66b5eb3bebf2fe03a1188635b5)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, Thanks for the review and commit [~cmccabe], FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #36 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/36/])
HADOOP-11349. RawLocalFileSystem leaks file descriptor while creating a file if creat succeeds but chmod fails. (Varun Saxena via Colin P.  McCabe) (cmccabe: rev 03867eb1bb173c66b5eb3bebf2fe03a1188635b5)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #771 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/771/])
HADOOP-11349. RawLocalFileSystem leaks file descriptor while creating a file if creat succeeds but chmod fails. (Varun Saxena via Colin P.  McCabe) (cmccabe: rev 03867eb1bb173c66b5eb3bebf2fe03a1188635b5)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1968 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1968/])
HADOOP-11349. RawLocalFileSystem leaks file descriptor while creating a file if creat succeeds but chmod fails. (Varun Saxena via Colin P.  McCabe) (cmccabe: rev 03867eb1bb173c66b5eb3bebf2fe03a1188635b5)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #34 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/34/])
HADOOP-11349. RawLocalFileSystem leaks file descriptor while creating a file if creat succeeds but chmod fails. (Varun Saxena via Colin P.  McCabe) (cmccabe: rev 03867eb1bb173c66b5eb3bebf2fe03a1188635b5)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #38 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/38/])
HADOOP-11349. RawLocalFileSystem leaks file descriptor while creating a file if creat succeeds but chmod fails. (Varun Saxena via Colin P.  McCabe) (cmccabe: rev 03867eb1bb173c66b5eb3bebf2fe03a1188635b5)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1988 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1988/])
HADOOP-11349. RawLocalFileSystem leaks file descriptor while creating a file if creat succeeds but chmod fails. (Varun Saxena via Colin P.  McCabe) (cmccabe: rev 03867eb1bb173c66b5eb3bebf2fe03a1188635b5)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
]