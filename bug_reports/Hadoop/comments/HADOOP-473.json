[The proposed patch does read-ahead/seek-back even when the initial newline character is '\n'.  

That is needlessly wasteful.  The could should be simplified to:

      if (c == '\n')
         break;
         
      if (c == '\r') {
        
        long curPos = in.getPos();
        char nextC = (char)in.read();
        
        // EOF -1 is also != '\n' so will work with Mac and EOF
        if (nextC != '\n')) {
          
          // seek back 1 char because the line ending is only 1 char
          in.seek(curPos);
        }

        break;
      }
, +1 with the read-ahead removal., Sorry it took me so long.  I had the patch a couple of days ago I was just in the middle of testing.  Here is an updated patch that removes the read ahead and fixes the same problem of line endings in the getRecordReader method of TextInputFormat.  This has been lightly tested., I just committed this.  Thanks James & Dennis!]