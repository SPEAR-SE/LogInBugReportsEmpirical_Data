[A patch for review.  This passes all unit tests., DataXceiveServer should either declare
        boolean shouldListen = true;
as volatile or use DataNode.shouldRun instead

==========
DataNode.register() should loop on
      while( shouldRun ) {
instead of
      while( true ) {

==========
The DataNode thread itself is interrupted in shutdownAll(), but we never call it.
Who is interrupting the main data-node thread?

==========
Even if it is interrupted the RPC will ignore this inrrupt
RPC.waitForProxy()
    while (true) {
      try {
.................
      } catch (InterruptedException ie) {
        // IGNORE
      }
    }
May be this is one of the main problems with all our Mini clusters?

==========
DataNode.runAndWait() calls join() and catches InterruptedException
      try {
        t.join();
      } catch (InterruptedException e) {
        if (Thread.currentThread().isInterrupted()) {
          // did someone knock?
          return;
        }
      }
Here is what documentation on join says:
void java.lang.Thread.join()

Waits for this thread to die.

Throws: InterruptedException if another thread has interrupted the current thread.
The interrupted status of the current thread is cleared when this exception is thrown.

Does it make any sense to check isInterrupted()?

==========
The NameNode should be also checked that it
- closes all files
- closes all soccets
- correctly handles InterruptedException

, Fixed problems mentioned above except for the one with RPC.waitForProxy()
I decided not to make changes in RPC, since this would be a rather big change, and also
since the problem is not as bad as I initially thought.
waitForProxy is called  in constructors and shutdown cannot be called until the object is instantiated.
Also checked the name-node code.
All unit tests pass, and I see some improvement in the execution time.
Please review., +1 Code reviewed.
, +1, because http://issues.apache.org/jira/secure/attachment/12354285/Interrupts.patch applied and successfully tested against trunk revision http://svn.apache.org/repos/asf/lucene/hadoop/trunk/522597. Results are at http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch, I just committed this.  Thanks, Konstantin!, Integrated in Hadoop-Nightly #39 (See http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/39/)]