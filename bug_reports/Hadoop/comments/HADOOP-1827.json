[I think the benefits of having the Combiner and Reducer share an API outweigh the cost of requiring the outputs of the reduce to be sortable. I haven't seen a case where making the output of the reduce sortable was a problem. (Well, Arun did point out that NullWritable can't be used. However, I think that is better fixed by making NullWritable comparable.), Also, if we have a chain of MR jobs, Maps of the next job will not work if the current bunch of Reducers doesn't output WritableComparable keys., I am also in favor of living with it. Programs not needing Comparable interface will just fake to implement the interface. We can add documentation to Reducer about this issue. , This also came up when retrofitting generics in HADOOP-1231 (in fact, it kind of exposes the issue), and the feeling was that the benefits of having a uniform interface outweigh the problems. I agree that documenting this wrinkle would be good.]