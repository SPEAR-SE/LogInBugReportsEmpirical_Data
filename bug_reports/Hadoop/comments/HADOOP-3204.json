[AFAIK nothing will happen if  {{FSError}} is thrown in {{LocalFSMerger}}. All the operations done in {{LocalFSMerger}} throw IOException and hence {{LocalFSMerger}} expects IOException. I think a better approach would be to make {{FSError}} extend {{IOException}} or something like that. Fixing the code to catch {{FSerror}} when {{IOException}} is expected is incorrect. Thoughts?, bq. All the operations done in LocalFSMerger throw IOException and hence LocalFSMerger expects IOException. I think a better approach would be to make FSError extend IOException or something like that. Fixing the code to catch FSerror when IOException is expected is incorrect.

I disagree. Per HADOOP-3154 and HADOOP-3166, it is critical that any worker threads whose death could result in data loss are handled by (or kill) the main thread, including (perhaps especially) Errors. Besides, FSError cannot extend both Error and IOException., Attaching a patch for review., {code}
    public synchronized Throwable getFailureCause() {
      return mergeThrowable == null ? null : mergeThrowable;
    }
{code}

Is equivalent to "return mergeThrowable". The synchronization is probably unnecessary for the get., Some nits - the method getFailureCause should be called something else. While the name sounds like it can tell us the failure cause whatsoever but in reality you just depend on the mergeThrowable field. Actually at this point of time, it might make sense to do something better - whenever you get a merge error (be it ramfs or localfs), you can probably invoke umbilical.shuffleError and die. , Also, why is the try-finally block in LocalFSMerger.run required? unless you have a reason you should leave that as it was., Incorporated the changes mentioned above. Attaching a patch., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12379872/HADOOP-3204-v2.patch
against trunk revision 645773.

    @author +1.  The patch does not contain any @author tags.

    tests included -1.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2203/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2203/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2203/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2203/console

This message is automatically generated., One style issue: instead of doing getMergeError, you should probably do getShuffleError. The code should look like

{noformat}
if (getShuffleError() != null) {
  ioe.initCause(getShuffleError())
}

Throwable getShuffleError() {
  //returns only mergeThrowable for now
  return mergeThrowable;
}
{noformat}, Actually, you probably could improve the printing of the exception in the webUI/log file as a separate jira. In this patch just have the necessary changes required for handling Throwable (FSError)., Attaching a patch that incorporates Devaraj's comments., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12379906/HADOOP-3204-v2.1.patch
against trunk revision 645773.

    @author +1.  The patch does not contain any @author tags.

    tests included -1.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2206/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2206/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2206/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2206/console

This message is automatically generated., I just committed this. Thanks, Amar!, Integrated in Hadoop-trunk #458 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/458/])]