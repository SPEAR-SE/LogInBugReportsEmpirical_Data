[Thanks [~xiaochen] for report this.I will attach a patch later.

I'm able to reproduce this on trunk when I add the following configuration to kms-site.xml.

 
{code:java}
<configuration>
    <property>
        <name>hadoop.kms.key.provider.uri</name>
        <value>jcek://file@/${user.home}/kms.keystore</value>
    </property>
</configuration>
{code}
I replace 'jceks' with 'jcek'. \{{hadoop.kms.key.provider.uri}}  is not null when  \{{keyProvider}} is initialized.But \{{keyProvider}} is not initialized  when we give  wrong \{{hadoop.kms.key.provider.uri}}.\{{keyProvider}}  is initialized by scheme \{{jceks}} in \{{JavaKeyStoreProvider.java}}.

 
{code:java}
/**
 * The factory to create JksProviders, which is used by the ServiceLoader.
 */
public static class Factory extends KeyProviderFactory {
  @Override
  public KeyProvider createProvider(URI providerName,
                                    Configuration conf) throws IOException {
    if (SCHEME_NAME.equals(providerName.getScheme())) {
      return new JavaKeyStoreProvider(providerName, conf);
    }
    return null;
  }
}
{code}
what do you think?

 

 

 , Thanks [~zhenyi] for looking into this. I still do not have the diagnostics so can't say for sure, but what you said makes sense to me.

In any case, I think we should be fine here to just do a supportability Jira to get rid of the NPE. Maybe by validating the keyProvider object is not null, and throw a friendly exception with the provider string., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 19s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 18m 14s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m  0s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 18s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 26s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 18s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 34s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 19s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 13m  5s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 13m  5s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 20s{color} | {color:orange} hadoop-common-project/hadoop-kms: The patch generated 3 new + 2 unchanged - 0 fixed = 5 total (was 2) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 28s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m  9s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  0m 44s{color} | {color:red} hadoop-common-project/hadoop-kms generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  4m  5s{color} | {color:red} hadoop-kms in the patch failed. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 37s{color} | {color:red} The patch generated 1 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 75m 27s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hadoop-common-project/hadoop-kms |
|  |  org.apache.hadoop.crypto.key.kms.server.KMSWebApp.isExitSystem isn't final but should be  At KMSWebApp.java:be  At KMSWebApp.java:[line 87] |
| Failed junit tests | hadoop.crypto.key.kms.server.TestKMS |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |
| JIRA Issue | HADOOP-15234 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12912396/HADOOP-15234.001.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux c854cd19c1b3 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / a9c14b1 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/14227/artifact/out/diff-checkstyle-hadoop-common-project_hadoop-kms.txt |
| findbugs | https://builds.apache.org/job/PreCommit-HADOOP-Build/14227/artifact/out/new-findbugs-hadoop-common-project_hadoop-kms.html |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/14227/artifact/out/patch-unit-hadoop-common-project_hadoop-kms.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14227/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-HADOOP-Build/14227/artifact/out/patch-asflicense-problems.txt |
| Max. process+thread count | 304 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-kms U: hadoop-common-project/hadoop-kms |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14227/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks for the patch [~zhenyi].

Some comments:
 * We can actually use preconditions {{checkArgument}} method to check the variable and provide the exception message.
 * Suggest to use {{HADOOP_SECURITY_KEY_PROVIDER_PATH}} from {{CommonConfigurationKeysPublic}} instead of hard code.
 * Idea of testing is good. Suggest to instead of using {{isExitSystem}}, use a more self-explaining variable name like {{rethrowExceptionForTesting}}, We all can agree that {{keyProvider}} being null is a bad thing.
Instead of adding {{isExitSystem}} and deciding whether to rethrow or exit makes the code little bit unreadable.
We can take a shortcut in this patch and skip the test.
We can just do a null check and throw {{IllegalStateException}} with the message.

, Thanks you [~xiaochen] and [~shahrs87] help me review the patch.I hava taken your comments in HADOOP-15234.002.patch., [~zhenyi]: Sorry for asking you to make 2-3 revisions for such a simple patch.
But I am not a big fan of using Preconditions.
We are creating a string even if we are not going to use it.
We can just add a basic null check instead of {{Preconditions}} and then create a string for the exception if keyprovider is null.
Also lets wait for Xiao to come back and see whether he is comfortable to push this patch w/o unit tests., For this specific case, i.e.,  invalid scheme name for provider uri, should we throw in the implementation of KeyProviderFactory#createProvider such as JavaKeyStoreProvider#createprovider and KMSCientProvider#createProvider with more specific exception message for invalid scheme like we do for the authority and port check in KMSClientProvider#createProvdier? 
, {quote} should we throw in the implementation of KeyProviderFactory#createProvider such as JavaKeyStoreProvider#createprovider and KMSCientProvider#createProvider
{quote}
How do you know what key provider it is trying to create ?
Are you trying to say that we compare the passed scheme with all the schemes and try to find the best fit ?
IMO it is too much spoon feeding to administrators. We just have 3-4 schemes and it shouldn't be too difficult to figure out the right scheme.
bq. with more specific exception message for invalid scheme like we do for the authority and port check in KMSClientProvider#createProvdier?
In these checks, we know the scheme was {{kms://}} and there is something wrong with authority and port.

, Thanks all for the comments.
bq. Sorry for asking you to make 2-3 revisions for such a simple patch.
While I appreciate the friendliness, IMO there is nothing to be sorry about. We're all trying to solve the problem in the best way. Even if the problem appears simple, as it turned out here the possible solutions are many, and I think it's common to iterate over a few patches - it's simply development. :)

bq. without unit tests
I'm okay here given this is a supportability improvement.

bq. Preconditions
Since here we're just doing a one-off at service startup time, which is a rare operation and not performance critical, I'd vote for readability. Null check and throw is fine by me too.

bq. should we throw in the implementation of 
Maybe I misunderstood, please let me know if so.
The factory [depends on|https://github.com/apache/hadoop/blob/113f401f41ee575cb303ceb647bc243108d93a04/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyProviderFactory.java#L97] the null check to create the correct provider out of all the factories loaded by service loader. So throwing in one of them would not work. 
It may be reasonable to throw instead of returning null in {{KeyProviderFactory#get}}, but that class is {{InterfaceAudience.Public}}.

I do have 1 comment on the patch:
Can we add {{providerString}} to the message being thrown, so the exception is more self-explaining?, Thanks [~xiaochen],[~shahrs87] and [~xyao] for reviewing the patch.I have added \{{providerString}} to the exception message in HADOOP-15234.003.patch., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 24s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 18m 11s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 32s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 20s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 30s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 35s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 24s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 13m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 13m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 21s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 29s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m  1s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 40s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m  5s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 35s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 77m 12s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:d4cc50f |
| JIRA Issue | HADOOP-15234 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12913776/HADOOP-15234.003.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux c075e4adbb0b 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 3f7bd46 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14289/testReport/ |
| Max. process+thread count | 341 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-kms U: hadoop-common-project/hadoop-kms |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14289/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks for revving [~zhenyi].
Patch 4 LGTM, pending 1 nit: {{initialized,please}} missed a space after the coma.

Will wait for a couple days to see if Rushabh and Xiaoyu have any comments., +1 (non-binding) from me too for v3 patch., Thanks [~xiaochen] and [~shahrs87] for  reviewing the patch.I have added  a space in \{{HADOOP-15234.004.patch}}., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 15m 52s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 17m  7s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 31s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 22s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m  4s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 36s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 23s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 16m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 16m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 29s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 32s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 20s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m  7s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 35s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 94m 48s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:d4cc50f |
| JIRA Issue | HADOOP-15234 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12914052/HADOOP-15234.004.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 3c8528a1259d 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / dd05871 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14298/testReport/ |
| Max. process+thread count | 289 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-kms U: hadoop-common-project/hadoop-kms |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14298/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, {quote}IMO it is too much spoon feeding to administrators. We just have 3-4 schemes and it shouldn't be too difficult to figure out the right scheme.
{quote}
[~shahrs87] , good point. I'm OK with the current approach.

 

[~zhenyi] , can you add a simple test case with an invalid KMS URI  like the empty one mentioned in the description and verify the exception is thrown and no NPE.

 

 

 , If you are going to create a new patch, I have one change.
Replace {{Preconditions.checkArgument(keyProvider != null, errmsg)}} with {{Preconditions.checkNotNull(keyProvider, errormsg)}}, From discussion above [~shahrs87] and myself were okay with no test, because adding test would unnecessarily complicate the existing code. [~xyao] please comment if you feel strongly.

+1 from me pending Rushabh's comment above, [~xiaochen] , I'm OK without unit test if it complicates the production code. +1 from me too. , Thanks [~shahrs87] for  your great comment. I have replaced \{{Preconditions.checkArgument(keyProvider != null, errmsg)}} with \{{Preconditions.checkNotNull(keyProvider, errormsg)}} in \{{HADOOP-15234.005.patch}}., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  1m  3s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 21m 34s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 18m 49s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 21s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 29s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m  2s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 51s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 15m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 15m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 22s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 31s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 34s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m  7s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 33s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 89m 45s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:d4cc50f |
| JIRA Issue | HADOOP-15234 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12914661/HADOOP-15234.005.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 16cd8abaff96 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 5e013d5 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14316/testReport/ |
| Max. process+thread count | 302 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-kms U: hadoop-common-project/hadoop-kms |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14316/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks [~zhenyi] for the patch.
+1 non-binding to v5 of patch., Pushed to trunk! Thank you for the work [~zhenyi], and [~shahrs87] for review., SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #13847 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/13847/])
HADOOP-15234. Throw meaningful message on null when initializing (xiao: rev 21c66614610a3c3c9189832faeb120a2ba8069bb)
* (edit) hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSWebApp.java
]