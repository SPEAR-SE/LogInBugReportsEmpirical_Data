[Stack traces showing the deadlock.  One thread has the Token class lock and is trying to log a warning, while the other thread has the logger lock and is trying to acquire the Token class lock.

{noformat}
"Thread-61":
at org.apache.hadoop.security.token.Token.getClassForIdentifier(Token.java:110)
- waiting to lock <0x00000000eebea800> (a java.lang.Class for org.apache.hadoop.security.token.Token)
at org.apache.hadoop.security.token.Token.decodeIdentifier(Token.java:132)
at org.apache.hadoop.security.token.Token.identifierToString(Token.java:314)
at org.apache.hadoop.security.token.Token.toString(Token.java:334)
at org.apache.log4j.or.DefaultRenderer.doRender(DefaultRenderer.java:37)
at org.apache.log4j.or.RendererMap.findAndRender(RendererMap.java:80)
at org.apache.log4j.spi.LoggingEvent.getRenderedMessage(LoggingEvent.java:368)
at org.apache.log4j.helpers.PatternParser$BasicPatternConverter.convert(PatternParser.java:402)
at org.apache.log4j.helpers.PatternConverter.format(PatternConverter.java:65)
at org.apache.log4j.PatternLayout.format(PatternLayout.java:506)
at org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:310)
at org.apache.log4j.WriterAppender.append(WriterAppender.java:162)
at org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:251)
- locked <0x00000000ee9651c0> (a org.apache.hadoop.mapred.TezContainerLogAppender)
at org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:66)
at org.apache.log4j.Category.callAppenders(Category.java:206)
- locked <0x00000000ee959360> (a org.apache.log4j.spi.RootLogger)
at org.apache.log4j.Category.forcedLog(Category.java:391)
at org.apache.log4j.Category.log(Category.java:856)
at org.apache.commons.logging.impl.Log4JLogger.debug(Log4JLogger.java:155)
at org.apache.tez.dag.app.launcher.LocalContainerLauncher$2.run(LocalContainerLauncher.java:331)
at java.lang.Thread.run(Thread.java:744)

"Thread-62":
at org.apache.log4j.Category.callAppenders(Category.java:205)
- waiting to lock <0x00000000ee959360> (a org.apache.log4j.spi.RootLogger)
at org.apache.log4j.Category.forcedLog(Category.java:391)
at org.apache.log4j.Category.log(Category.java:856)
at org.apache.commons.logging.impl.Log4JLogger.warn(Log4JLogger.java:197)
at org.apache.hadoop.security.token.Token.getClassForIdentifier(Token.java:118)
- locked <0x00000000eebea800> (a java.lang.Class for org.apache.hadoop.security.token.Token)
at org.apache.hadoop.security.token.Token.decodeIdentifier(Token.java:132)
at org.apache.hadoop.security.token.Token.identifierToString(Token.java:314)
at org.apache.hadoop.security.token.Token.toString(Token.java:334)
at java.lang.String.valueOf(String.java:2854)
at java.lang.StringBuilder.append(StringBuilder.java:128)
at org.apache.hadoop.security.SecurityUtil.setTokenService(SecurityUtil.java:360)
at org.apache.tez.dag.app.launcher.LocalContainerLauncher$2.run(LocalContainerLauncher.java:347)
at java.lang.Thread.run(Thread.java:744)
{noformat}, Patch that moves the logging in Token.getClassIdentifier to outside the critical section.  Don't know of an easy way to unit test this., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12629076/HADOOP-10346.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3578//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3578//console

This message is automatically generated., +1, patch looks good., +1 for the patch.  Jason, thank you for contributing the fix., Thanks for the review, Chris!  Committing this., I committed this to trunk, branch-2, and branch-2.4., SUCCESS: Integrated in Hadoop-trunk-Commit #5181 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5181/])
HADOOP-10346. Deadlock while logging tokens. Contributed by Jason Lowe (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1569382)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/Token.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #486 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/486/])
HADOOP-10346. Deadlock while logging tokens. Contributed by Jason Lowe (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1569382)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/Token.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1678 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1678/])
HADOOP-10346. Deadlock while logging tokens. Contributed by Jason Lowe (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1569382)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/Token.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1703 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1703/])
HADOOP-10346. Deadlock while logging tokens. Contributed by Jason Lowe (jlowe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1569382)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/Token.java
, Do we know which patch caused this? To see if 2.3 also needs this., It looks like this was caused by MAPREDUCE-4148 which was fixed in 2.0.2-alpha.  It's not something that can happen unless the service loader doesn't find the token identifier class which isn't a normal situation, so I'm doubtful this is necessary for 2.3.]