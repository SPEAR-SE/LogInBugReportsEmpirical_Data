[We shouldn't need a clean-X target for every compile-X target, since compile-X targets should place things in the build directory and the build directory should be removed by the single clean target.  We should also try not to clutter the top-level build.xml.  If a separate clean-X target is required for productive development in some subtree, then it should be placed in a separate build.xml or Makefile in that  source subtree.  It can then remove appropriate items from the top-level build directory.  But, ideally, the top-level 'clean' target should be able to remove all generated items by simply removing the top-level build directory., This is an orthogonal approach but I like it too.
In this case we should not have any clean-X targets at all.
Some more details on this particular issue. 
The real problem is that "compile-libhdfs" creates temporary files in the source directory.
Sure they need to be cleaned, but they should not be created there in the first place.
I think this have already been discussed, don't remember where.

, Here's a patch which ensures that no temporary files are created in the src/c++/libhdfs; including .o/.so etc. They are all put in build/libhdfs. In fact I've ensured that even the doxygen generated docs go to build/libhdfs/docs and can be packaged aptly.

Konstantin - can you please confirm that it works for you? thanks.

I've kept the 'clean-libhdfs' target around in build.xml so that devs working on libhdfs can use it without needing to invoke the top-level 'clean' which nukes the 'build' directory., I just committed this.  Thanks, Arun!]