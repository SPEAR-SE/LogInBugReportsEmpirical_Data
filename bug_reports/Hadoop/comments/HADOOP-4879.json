[Attaching a simple fix. Testing in progress., This patch fixes the problem by renaming the contentEquals to equals. It also adds a hashCode function and test cases., Also add equals and hashCode for Counters.Group., +1, I just committed this. Thanks, Owen!, I have one concern with the implementation of Counter.equals. Basically, should the value of a Counter count in the equality check ? IMO, it seems like the value does not define the identity of the object, and hence it must not be checked in equals. For instance, if we add a counter to a Collection, and then increment it's value, and then try to retrieve it from the collection, it may not work because the value is changed, right ?

Originally, I'd requested Amar to have contentEquals only in test methods because that's all where it was needed. For some reason though it was moved to the main code as well., That is not a particularly compelling reason, because it applies to all mutable Java types. If you use IntWritables in a hashMap as keys, you are required to not change them. Same with HashSets. If the intent was just to support testing code, they should have been written in the test classes as static methods. Having non-standard equals functions is problematic and can easily lead to bugs. Arguably, we should separate out the name part of the counters so that they can be reused between counters, which would require a lot less memory to store. But that would be a separate issue., Integrated in Hadoop-trunk #698 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/698/])
    ]