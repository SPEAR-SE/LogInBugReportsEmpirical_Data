[
An item in a job history log line is separated by "=".
However, the value for the item "COUNTERS" contains "=", which cause the parser misbehaves.

For the lines like: 

Job JOBID="job_200803072233_0001" FINISH_TIME="1204929332820" JOB_STATUS="SUCCESS" FINISHED_MAPS="24" FINISHED_REDUCES="15" FAILED_MAPS="0" FAILED_REDUCES="0" COUNTERS="Job Counters .Launched map tasks=24,Job Counters .Launched reduce tasks=15Map-Reduce Framework.Map input records=2894276,Map-Reduce Framework.Map output records=2894276,Map-Reduce Framework.Map input bytes=3227015845,Map-Reduce Framework.Map output bytes=3232268034,Map-Reduce Framework.Combine input records=0,Map-Reduce Framework.Combine output records=0,Map-Reduce Framework.Reduce input groups=2526981,Map-Reduce Framework.Reduce input records=2894276,Map-Reduce Framework.Reduce output records=2894276"

The extracted value for COUNTERS is 

Job Counters .Launched map tasks


which is clearly wrong.

The expected value is:

Job Counters .Launched map tasks=24,Job Counters .Launched reduce tasks=15Map-Reduce Framework.Map input records=2894276,Map-Reduce Framework.Map output records=2894276,Map-Reduce Framework.Map input bytes=3227015845,Map-Reduce Framework.Map output bytes=3232268034,Map-Reduce Framework.Combine input records=0,Map-Reduce Framework.Combine output records=0,Map-Reduce Framework.Reduce input groups=2526981,Map-Reduce Framework.Reduce input records=2894276,Map-Reduce Framework.Reduce output records=2894276"

Clearly, the "=" chars in the value cuased the confusion.

The chars "=" in the value is added by the makeCompactString method of Counters class
as separators between a counter name and its value.

I suggest we use colon char (":") instead as the separator.
I'll attach a patch sortly.
 , Attached is the patch, which contains one char change  (from "=" to ":")
, -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12377468/patch.2978.txt
against trunk revision 619744.

    @author +1.  The patch does not contain any @author tags.

    tests included -1.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1919/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1919/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1919/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1919/console

This message is automatically generated., +1 on this, although a unit test would be good.

Should we make a 0.16.2 target for this?, 
Maybe the MiniCluster test can be expanded to test JobHistory?
I see a test case  TestJobStatusPersistency, though it is for the newer implementation of JobHistory.
, Runping, could you pls submit a test case and resubmit the patch. Thanks!, 
I have a off-line test that can parse the modified JobHistory log. 
The patch itself is just one char change, but it is not trivial to create a unit test for testing the JobHistory log. Plus, post 0.17, we will use the new serialized format for job history objects, thus it will be a thrown away work.

, I just committed this. Thanks, Runping!, Integrated in Hadoop-trunk #433 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/433/])]