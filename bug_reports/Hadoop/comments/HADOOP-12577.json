[Only hadoop-project/pom.xml contains commons-collections version 3.2.1

find . -name pom.xml -print0 | xargs -0 grep -C 2 -e 'commons-collections'
./hadoop-common-project/hadoop-common/pom.xml-    </dependency>
./hadoop-common-project/hadoop-common/pom.xml-    <dependency>
./hadoop-common-project/hadoop-common/pom.xml:      <groupId>commons-collections</groupId>
./hadoop-common-project/hadoop-common/pom.xml:      <artifactId>commons-collections</artifactId>
./hadoop-common-project/hadoop-common/pom.xml-      <scope>compile</scope>
./hadoop-common-project/hadoop-common/pom.xml-    </dependency>
--
--
./hadoop-mapreduce-project/hadoop-mapreduce-client/pom.xml-    </dependency>
./hadoop-mapreduce-project/hadoop-mapreduce-client/pom.xml-    <dependency>
./hadoop-mapreduce-project/hadoop-mapreduce-client/pom.xml:      <groupId>commons-collections</groupId>
./hadoop-mapreduce-project/hadoop-mapreduce-client/pom.xml:      <artifactId>commons-collections</artifactId>
./hadoop-mapreduce-project/hadoop-mapreduce-client/pom.xml-      <scope>provided</scope>
./hadoop-mapreduce-project/hadoop-mapreduce-client/pom.xml-    </dependency>
--
--
./hadoop-project/pom.xml-      </dependency>
./hadoop-project/pom.xml-      <dependency>
./hadoop-project/pom.xml:        <groupId>commons-collections</groupId>
./hadoop-project/pom.xml:        <artifactId>commons-collections</artifactId>
./hadoop-project/pom.xml-        <version>3.2.2</version>
./hadoop-project/pom.xml-      </dependency>
--
--
./hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/pom.xml-
./hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/pom.xml-    <dependency>
./hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/pom.xml:      <groupId>commons-collections</groupId>
./hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/pom.xml:      <artifactId>commons-collections</artifactId>
./hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/pom.xml-    </dependency>
./hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/pom.xml-, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 7s {color} | {color:blue} docker + precommit patch detected. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 32s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 9s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 9s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 13s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 11s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 9s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 11s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 10s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 8s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 8s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 9s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 9s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 10s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green} 0m 1s {color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 9s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 10s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 0m 9s {color} | {color:green} hadoop-project in the patch passed with JDK v1.8.0_66. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 0m 9s {color} | {color:green} hadoop-project in the patch passed with JDK v1.7.0_85. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 27s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 7m 24s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:date2015-11-17 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12772803/HADOOP-12577.001.patch |
| JIRA Issue | HADOOP-12577 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  xml  |
| uname | Linux 986f6eaad46f 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HADOOP-Build/patchprocess/apache-yetus-4659377/precommit/personality/hadoop.sh |
| git revision | trunk / dfbde3f |
| JDK v1.7.0_85  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8081/testReport/ |
| modules | C: hadoop-project U: hadoop-project |
| Max memory used | 228MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8081/console |


This message was automatically generated.

, Thanks for reporting this, [~jojochuang]!.

I just read the link you shared (http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/). We are not actually using in Hadoop the library InvokerTransformer mentioned there. That leads me to believe that Hadoop is not affected by this vulnerability. Do you agree with that assessment?

I am okay upgrading the library version, but if it doesn't affect us directly, I'd like to postpone this to our next minor release of 2.8.0 instead of forcing this into the maintenance lines. What do you think?, Hi [~vinodkv] I agree with you. 
I checked the code and found no usage of the "unsafe classes". I also run the full suite of unit tests and did not find anything broken by upgrading to the new version of commons-collections.

It is possible Hadoop is still vulnerable to the attack through transitive dependencies, but that's out of our hand. , You may well be correct that there is no vulnerability in hadoop - but in some sense that almost does not matter. There are many corporate security departments that are going to raise red flags about the presence of this library in the classpath. Explaining to them why you think you're not vulnerable may or may not work, and it's hard to prove a negative. In my experience it's easiest to just do the upgrade.
, +1 on [~yoderme]'s comment. Internal infosec may not sign off unless it is upgraded., Hi, 

I am no security expert, but from the link it seems Hadoop does not need to use any of these classes to be vulnerable. They just need to be in the classpath, and the exploit will dynamically load them during deserialization. Also, as it's pointed out elsewhere, commons-collections is just an example of how Java deserialization can be exploited, and a more thorough solution to this would be to ensure Hadoop does not do object deserialization from untrusted sources. It seems things like RMI, JMX, JMS and other IPC mechanisms could be exploitable using this technique., Okay, I hear you guys - though it isn't entirely clear of the precise attack paths in the context of interaction with Hadoop services, it is safe to upgrade.

Given that the commons upgrade is a compatible one, I am +1 to the patch. Checking this into all the release lines., FAILURE: Integrated in Hadoop-trunk-Commit #8862 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8862/])
HADOOP-12577. Bumped up commons-collections version to 3.2.2 to address (vinodkv: rev 70c26703f462e97361924eaf6cbf80be1fce309f)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-project/pom.xml
, Committed this to trunk, branch-2, branch-2.7, branch-2.7.2, branch-2.6. 

Thanks [~jojochuang] for the great bug report and a quick patch!, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #704 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/704/])
HADOOP-12577. Bumped up commons-collections version to 3.2.2 to address (vinodkv: rev 70c26703f462e97361924eaf6cbf80be1fce309f)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-project/pom.xml
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2645 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2645/])
HADOOP-12577. Bumped up commons-collections version to 3.2.2 to address (vinodkv: rev 70c26703f462e97361924eaf6cbf80be1fce309f)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-project/pom.xml
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #715 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/715/])
HADOOP-12577. Bumped up commons-collections version to 3.2.2 to address (vinodkv: rev 70c26703f462e97361924eaf6cbf80be1fce309f)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-project/pom.xml
, Thanks [~vinodkv]!

Now the open question here is whether we need to do a quick release that contains only this security fix or we make this part of the planned release activities (2.6.3 and 2.7.2), the main implication being the timing of this security fix. Thoughts?, FAILURE: Integrated in Hadoop-Yarn-trunk #1438 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/1438/])
HADOOP-12577. Bumped up commons-collections version to 3.2.2 to address (vinodkv: rev 70c26703f462e97361924eaf6cbf80be1fce309f)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-project/pom.xml
, My 2c is to roll some quick releases, since it'll guarantee we get this out in a timely manner. The previous 2.7.2 RC was sunk because of HDFS-8676 and the fix is still not committed (though seems close). It'll be easier to vote on quick releases with just the security fix too., FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #632 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/632/])
HADOOP-12577. Bumped up commons-collections version to 3.2.2 to address (vinodkv: rev 70c26703f462e97361924eaf6cbf80be1fce309f)
* hadoop-project/pom.xml
* hadoop-common-project/hadoop-common/CHANGES.txt
, I agree it might be good to create quick releases for this., FAILURE: Integrated in Hadoop-Hdfs-trunk #2571 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2571/])
HADOOP-12577. Bumped up commons-collections version to 3.2.2 to address (vinodkv: rev 70c26703f462e97361924eaf6cbf80be1fce309f)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-project/pom.xml
, backport this to 2.6?, [~stevel@apache.org], this is already included in 2.6 since 2.6.3., OK]