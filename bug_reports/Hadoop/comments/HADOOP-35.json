[Alright, well, for diagnostic purposes, I added a "health" stat to each file in -ls. The getFileHealth() function I define could probably be stuck into a utility class somewhere... especially if it were to be called periodically during a mapreduce run. The patch also refactors how the "Configuration" instance is used in the DFSShell.

Also, I had to add a try/catch around the call to getHints(), because for several of my existing files I get the following stack track when trying to call getHints():

Exception in thread "main" java.io.IOException: java.lang.NullPointerException
        at org.apache.hadoop.ipc.Client.call(Client.java:301)
        at org.apache.hadoop.ipc.RPC$Invoker.invoke(RPC.java:141)
        at org.apache.hadoop.dfs.$Proxy0.getHints(Unknown Source)
        at org.apache.hadoop.dfs.DFSClient.getHints(DFSClient.java:69)
        at org.apache.hadoop.dfs.DistributedFileSystem.getFileCacheHints(DistributedFileSystem.java:63)
        at org.apache.hadoop.dfs.DFSShell.getFileHealth(DFSShell.java:43)
        at org.apache.hadoop.dfs.DFSShell.ls(DFSShell.java:117)
        at org.apache.hadoop.dfs.DFSShell.main(DFSShell.java:283), Duplicate of HADOOP-83]