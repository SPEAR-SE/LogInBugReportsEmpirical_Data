[- Failure #1
-* Stacktrace
{noformat}
java.lang.AssertionError: expected:<5> but was:<6>
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.failNotEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:128)
	at org.junit.Assert.assertEquals(Assert.java:472)
	at org.junit.Assert.assertEquals(Assert.java:456)
	at org.apache.hadoop.ipc.TestIPC.checkBlocking(TestIPC.java:753)
	at org.apache.hadoop.ipc.TestIPC.testIpcWithReaderQueuing(TestIPC.java:658)
{noformat}
-* Standard Output
{noformat}
2014-03-10 23:16:14,826 INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(49)) - Using callQueue class java.util.concurrent.LinkedBlockingQueue
2014-03-10 23:16:15,422 INFO  ipc.Server (Server.java:run(575)) - Starting Socket Reader #1 for port 34710
2014-03-10 23:16:16,422 INFO  ipc.Server (Server.java:run(797)) - IPC Server Responder: starting
2014-03-10 23:16:16,427 INFO  ipc.Server (Server.java:run(644)) - IPC Server listener on 34710: starting
2014-03-10 23:16:17,154 INFO  ipc.TestIPC (TestIPC.java:checkBlocking(734)) - (initial clients) need:3 connections have:2
2014-03-10 23:16:17,255 INFO  ipc.TestIPC (TestIPC.java:checkBlocking(737)) - ipc layer should be blocked
2014-03-10 23:16:17,284 INFO  ipc.TestIPC (TestIPC.java:checkBlocking(748)) - (max clients) need:5 connections have:4
2014-03-10 23:16:17,790 INFO  ipc.TestIPC (TestIPC.java:checkBlocking(759)) - releasing the calls
2014-03-10 23:16:17,932 INFO  ipc.Server (Server.java:stop(2374)) - Stopping server on 34710
2014-03-10 23:16:17,935 INFO  ipc.Server (Server.java:run(676)) - Stopping IPC Server listener on 34710
2014-03-10 23:16:17,938 INFO  ipc.Server (Server.java:run(802)) - Stopping IPC Server Responder
2014-03-10 23:16:18,060 INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(49)) - Using callQueue class java.util.concurrent.LinkedBlockingQueue
2014-03-10 23:16:18,073 INFO  ipc.Server (Server.java:run(575)) - Starting Socket Reader #1 for port 36003
2014-03-10 23:16:18,094 INFO  ipc.Server (Server.java:run(797)) - IPC Server Responder: starting
2014-03-10 23:16:18,097 INFO  ipc.Server (Server.java:run(644)) - IPC Server listener on 36003: starting
2014-03-10 23:16:18,151 INFO  ipc.TestIPC (TestIPC.java:checkBlocking(737)) - ipc layer should be blocked
{noformat}
- Failure #2
-* Stacktrace
{noformat}
java.lang.AssertionError: expected:<5> but was:<7>
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.failNotEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:128)
	at org.junit.Assert.assertEquals(Assert.java:472)
	at org.junit.Assert.assertEquals(Assert.java:456)
	at org.apache.hadoop.ipc.TestIPC.checkBlocking(TestIPC.java:753)
	at org.apache.hadoop.ipc.TestIPC.testIpcWithReaderQueuing(TestIPC.java:658)
{noformat}
-* Standard Output
{noformat}
2014-03-11 01:33:32,797 INFO  ipc.Server (Server.java:run(676)) - Stopping IPC Server listener on 39232
2014-03-11 01:33:32,890 INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(49)) - Using callQueue class java.util.concurrent.LinkedBlockingQueue
2014-03-11 01:33:32,907 INFO  ipc.Server (Server.java:run(575)) - Starting Socket Reader #1 for port 44314
2014-03-11 01:33:32,929 INFO  ipc.Server (Server.java:run(797)) - IPC Server Responder: starting
2014-03-11 01:33:32,935 INFO  ipc.Server (Server.java:run(644)) - IPC Server listener on 44314: starting
2014-03-11 01:33:33,039 INFO  ipc.TestIPC (TestIPC.java:checkBlocking(737)) - ipc layer should be blocked
2014-03-11 01:33:33,552 INFO  ipc.TestIPC (TestIPC.java:checkBlocking(759)) - releasing the calls
2014-03-11 01:33:33,667 INFO  ipc.Server (Server.java:stop(2374)) - Stopping server on 44314
2014-03-11 01:33:33,673 INFO  ipc.Server (Server.java:run(802)) - Stopping IPC Server Responder
2014-03-11 01:33:33,679 INFO  ipc.Server (Server.java:run(676)) - Stopping IPC Server listener on 44314
2014-03-11 01:33:33,685 INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(49)) - Using callQueue class java.util.concurrent.LinkedBlockingQueue
2014-03-11 01:33:33,693 INFO  ipc.Server (Server.java:run(575)) - Starting Socket Reader #1 for port 39796
2014-03-11 01:33:33,697 INFO  ipc.Server (Server.java:run(797)) - IPC Server Responder: starting
2014-03-11 01:33:33,697 INFO  ipc.Server (Server.java:run(644)) - IPC Server listener on 39796: starting
2014-03-11 01:33:33,741 INFO  ipc.TestIPC (TestIPC.java:checkBlocking(737)) - ipc layer should be blocked
2014-03-11 01:33:33,753 INFO  ipc.TestIPC (TestIPC.java:checkBlocking(748)) - (max clients) need:5 connections have:3
{noformat}

Both cases look similar., Hi [~szetszwo],
Thank you for creating this JIRA and adding the detailed failure information!

I have recently seen similar error as well:
* Stacktrace
{noformat}
java.lang.AssertionError: expected:<28> but was:<22>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at org.junit.Assert.assertEquals(Assert.java:542)
	at org.apache.hadoop.ipc.TestIPC.checkBlocking(TestIPC.java:752)
	at org.apache.hadoop.ipc.TestIPC.testIpcWithReaderQueuing(TestIPC.java:661)
{noformat}

* Standard Output
{noformat}
......
2015-10-12 14:02:26,581 INFO  ipc.CallQueueManager (CallQueueManager.java:<init>(53)) - Using callQueue class java.util.concurrent.LinkedBlockingQueue
2015-10-12 14:02:26,581 INFO  ipc.Server (Server.java:run(605)) - Starting Socket Reader #1 for port 51555
2015-10-12 14:02:26,581 INFO  ipc.Server (Server.java:run(605)) - Starting Socket Reader #2 for port 51555
2015-10-12 14:02:26,582 INFO  ipc.Server (Server.java:run(605)) - Starting Socket Reader #3 for port 51555
2015-10-12 14:02:26,582 INFO  ipc.Server (Server.java:run(605)) - Starting Socket Reader #4 for port 51555
2015-10-12 14:02:26,584 INFO  ipc.Server (Server.java:run(827)) - IPC Server Responder: starting
2015-10-12 14:02:26,585 INFO  ipc.Server (Server.java:run(674)) - IPC Server listener on 51555: starting
2015-10-12 14:02:26,599 INFO  ipc.TestIPC (TestIPC.java:checkBlocking(736)) - ipc layer should be blocked
2015-10-12 14:02:26,617 INFO  ipc.TestIPC (TestIPC.java:checkBlocking(747)) - (max clients) need:28 connections have:22
{noformat}

And it also appears to be the line {{assertEquals(maxAccept, server.getNumOpenConnections());}} is causing this.
I will propose a fix shortly., Attached patch 001 fixes the failure locally.

- I studied the patch in the linked JIRA HADOOP-9956 and the change looks great.
- I suspect that sleeping 100 milliseconds in {{TestIPC#checkBlocking}} is not sufficient for all runs.
- I locally removed the {{Thread#sleep}} calls and the failure reproduces.
- After applying the fix the test passes 100% locally
- The test method {{testIpcWithReaderQueuing}} has a timeout, so that we don't need to worry about the rare situation where the while loop becomes infinite.

Please review and comment. I'm also including the author [~daryn]. Thanks very much!, I'm assigning to myself for now in order to submit the patch., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  10m  6s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |  10m 52s | There were no new javac warning messages. |
| {color:green}+1{color} | release audit |   0m 25s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   1m 35s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 57s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 42s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   2m 33s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:red}-1{color} | common tests |   8m 21s | Tests failed in hadoop-common. |
| | |  36m 35s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.ipc.TestRPC |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12766924/HADOOP-10406.001.patch |
| Optional Tests | javac unit findbugs checkstyle |
| git revision | trunk / cf23f2c |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/7829/artifact/patchprocess/testrun_hadoop-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/7829/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/7829/console |


This message was automatically generated., The test failure is not relevant., Minor comment, I'd recommend using GenericTestUtils.waitFor since that's our normal idiom for this. Also it bounds how long we wait so it doesn't hang indefinitely. Otherwise seems fine, thanks Xiao!, Thanks Andrew for the comment! Updated patch 002 to use {{GenericTestUtils}}., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 9s {color} | {color:blue} docker + precommit patch detected. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 22s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 5m 1s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 4m 5s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 14s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 14s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 33s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 52s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 58s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 1m 32s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 4m 13s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 4m 13s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 4m 6s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 4m 6s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 14s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 13s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 46s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 49s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 0s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 6m 5s {color} | {color:red} hadoop-common in the patch failed with JDK v1.8.0_60. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 6m 44s {color} | {color:green} hadoop-common in the patch passed with JDK v1.7.0_79. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 23s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 44m 34s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.7.0_79 Failed junit tests | hadoop.test.TestTimedOutTestsListener |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.7.1 Server=1.7.1 Image:test-patch-base-hadoop-date2015-10-21 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12767727/HADOOP-10406.002.patch |
| JIRA Issue | HADOOP-10406 |
| Optional Tests |  asflicense  javac  javadoc  mvninstall  unit  findbugs  checkstyle  compile  |
| uname | Linux 38d64960284e 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HADOOP-Build/patchprocess/apache-yetus-5d4f0d0/dev-support/personality/hadoop.sh |
| git revision | trunk / 0c4af0f |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_60 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_79 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/7901/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_60.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HADOOP-Build/7901/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_60.txt |
| JDK v1.7.0_79  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/7901/testReport/ |
| Max memory used | 226MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/7901/console |


This message was automatically generated.

, +1 will commit shortly, Committed to trunk, thanks for fixing this Xiao!, Thanks for the review and commit Andrew!, FAILURE: Integrated in Hadoop-trunk-Commit #8684 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8684/])
HADOOP-10406. TestIPC.testIpcWithReaderQueuing may fail. Contributed by (wang: rev d1cdce77faba1a9a69fe7894ecec937d2975499b)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestIPC.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #580 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/580/])
HADOOP-10406. TestIPC.testIpcWithReaderQueuing may fail. Contributed by (wang: rev d1cdce77faba1a9a69fe7894ecec937d2975499b)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestIPC.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #1302 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/1302/])
HADOOP-10406. TestIPC.testIpcWithReaderQueuing may fail. Contributed by (wang: rev d1cdce77faba1a9a69fe7894ecec937d2975499b)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestIPC.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #565 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/565/])
HADOOP-10406. TestIPC.testIpcWithReaderQueuing may fail. Contributed by (wang: rev d1cdce77faba1a9a69fe7894ecec937d2975499b)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestIPC.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2513 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2513/])
HADOOP-10406. TestIPC.testIpcWithReaderQueuing may fail. Contributed by (wang: rev d1cdce77faba1a9a69fe7894ecec937d2975499b)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestIPC.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #524 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/524/])
HADOOP-10406. TestIPC.testIpcWithReaderQueuing may fail. Contributed by (wang: rev d1cdce77faba1a9a69fe7894ecec937d2975499b)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestIPC.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2461 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2461/])
HADOOP-10406. TestIPC.testIpcWithReaderQueuing may fail. Contributed by (wang: rev d1cdce77faba1a9a69fe7894ecec937d2975499b)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestIPC.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, Reopening this issue since this issue seems to happen after the fix:

{quote}
Tests run: 34, Failures: 1, Errors: 1, Skipped: 0, Time elapsed: 115.75 sec <<< FAILURE! - in org.apache.hadoop.ipc.TestIPC
testIpcWithReaderQueuing(org.apache.hadoop.ipc.TestIPC)  Time elapsed: 0.074 sec  <<< FAILURE!
java.lang.AssertionError: expected:<5> but was:<10>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at org.junit.Assert.assertEquals(Assert.java:542)
	at org.apache.hadoop.ipc.TestIPC.checkBlocking(TestIPC.java:804)
	at org.apache.hadoop.ipc.TestIPC.testIpcWithReaderQueuing(TestIPC.java:695)

testSerial(org.apache.hadoop.ipc.TestIPC)  Time elapsed: 60.037 sec  <<< ERROR!
java.lang.Exception: test timed out after 60000 milliseconds
	at sun.misc.Unsafe.park(Native Method)
	at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)
	at java.util.concurrent.ThreadPoolExecutor.awaitTermination(ThreadPoolExecutor.java:1468)
	at org.apache.hadoop.ipc.Client$ClientExecutorServiceFactory.unrefAndCleanup(Client.java:196)
	at org.apache.hadoop.ipc.Client.stop(Client.java:1287)
	at org.apache.hadoop.ipc.TestIPC.internalTestSerial(TestIPC.java:287)
	at org.apache.hadoop.ipc.TestIPC.testSerial(TestIPC.java:262)
{quote}, Thanks for reporting this [~ozawa].
So it turns out that the actual > expected and actual < expected failures are different. The initial patch to add waiting mechanism only fixed the actual < expected failure.
I'll try to work on reproducing and fixing the actual > expected., [~xiaochen], thanks for pinging me in HADOOP-12605. I think I found the cause. I would like to start working on this.

I think it would be better to close this and continue to work in HADOOP-12605 because the patch is already committed. The patch was improvement but just turned out to be not enough.
, Thanks [~iwasakims], fine by me. Will follow up on HADOOP-12605. BTW good RCA in there!]