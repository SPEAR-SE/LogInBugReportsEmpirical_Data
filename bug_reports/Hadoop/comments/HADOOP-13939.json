[Exactly that scenario works fine for me.  Are you sure the issue is that the libjars arg isn't being parsed?, [~templedf] Yes, just rechecked.

{code}
public class MainClass extends Configured implements Tool {
    private static final Logger log = LoggerFactory.getLogger(MainClass.class);
    public static void main(String[] args) throws Exception {
        int res = ToolRunner.run(HBaseConfiguration.create(), new MainClass(), args);
        System.exit(res);
    }
    @Override
    public int run(String[] args) throws Exception {
        Configuration conf = this.getConf();
        log.info(conf.get("tmpjars"));
        return 0;
    }
}
{code}

{noformat}
hadoop jar file.jar MainClass -libjars /Users/vlogvinskiy/.m2/repository/com/test/0.0.1/test-0.0.1.jar
23:48:21,252  INFO EventsToJourneysJobMain:69 -
{noformat}

{noformat}
hadoop jar file.jar -libjars /Users/vlogvinskiy/.m2/repository/com/test/0.0.1/test-0.0.1.jar
23:48:42,677  INFO EventsToJourneysJobMain:69 - file:/Users/vlogvinskiy/.m2/repository/com/test/0.0.1/test-0.0.1.jar
{noformat}

More information with debug file GenericOptionsParser on line:
{code}
this.commandLine = parser.parse(opts, this.preProcessForWindows(args), true);   //version 2.7.2 from maven repo
{code}

With MainClass:
{noformat}
commandLine = {CommandLine@1337} 
 args = {LinkedList@1343}  size = 3
  0 = "MainClass"
  1 = "-libjars"
  2 = "/Users/vlogvinskiy/.m2/repository/com/test/0.0.1/test-0.0.1.jar"
 options = {ArrayList@1344}  size = 0
{noformat}

Without MainClass argument:
{noformat}
commandLine = {CommandLine@1337} 
 args = {LinkedList@1342}  size = 0
 options = {ArrayList@1343}  size = 1
  0 = {Option@1345} "[ option: libjars  [ARG] :: comma separated jar files to include in the classpath. ]"
   opt = "libjars"
   longOpt = null
   argName = "paths"
   description = "comma separated jar files to include in the classpath."
   required = false
   optionalArg = false
   numberOfArgs = 1
   type = null
   values = {ArrayList@1350}  size = 1
   valuesep = '\u0000' 0
{noformat}, This applies to any generic option, not just -libjars; perhaps the title should be updated appropriately?   I just spent too much time trying to figure out why my generic options weren't getting recognized!

 ]