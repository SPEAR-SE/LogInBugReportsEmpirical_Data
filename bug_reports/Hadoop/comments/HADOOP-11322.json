[A quick patch attached., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12682584/HADOOP-11322.patch
  against trunk revision c298a9a.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-kms.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5110//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5110//console

This message is automatically generated., I go through the patch, yes, we should check the opType.
And in current code, it doesn't affect functionality, since in {{KMSACLs}} implementation, {{hasAccessToKey}} will check the opType too....
Anyway, we'd better to fix this. 

+1
, Will hold to commit until tomorrow and wait to see if there are other comments., Thanks [~hitliuyi] for review. 
{quote}
And in current code, it doesn't affect functionality, since in KMSACLs implementation, hasAccessToKey will check the opType too....
{quote}
Actually it will affect functionality. Let's image such an scenario: For key testKey1, we don't configure any ACL policy for testKey1 and only create a default key policy for operation GENERATE_EEK, such as 
{code}
<property>
    <name>default.key.acl.GENERATE_EEK</name>
    <value>*</value>
 </property>
{code}
Then for operation GENERATE_EEK of key testKey1, KeyAuthorizationKeyProvider.checkAccess will fail and threw an exception as acls.isACLPresent(aclName, opType) return false. This will skip the check in acls.hasAccessToKey(aclName, ugi, opType). Actually in the above scenario, checkAccess should return true as we didn't configure ACL for testKey1 and the default key ACL of operation GENERATE_EEK is allowAll. 
The scenario described above is unusual, but it does exist. , Right, if we remove all other default values in acl files (In my mind, I thought we kept it, yes, actually we could remove them), it does happen as you said and it's a bug. 

So, please write a test case to reproduce the issue., Updated the patch: add some test cases and remove a few unnecessary imports in TestKMS., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12683039/HADOOP-11322.patch.2
  against trunk revision a4df9ee.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-kms.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5114//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5114//console

This message is automatically generated., +1 looks good to me.
Next time, you can use the name {{HADOOP-11322.2.patch}} instead of {{HADOOP-11322.patch.2}} for the new patch., Thanks [~hitliuyi]] for review., Commit to trunk and branch-2. Thanks [~dian.fu] for the contribution., FAILURE: Integrated in Hadoop-trunk-Commit #6601 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6601/])
HADOOP-11322. key based ACL check in KMS always check KeyOpType.MANAGEMENT even actual KeyOpType is not MANAGEMENT. (Dian Fu via yliu) (yliu: rev 61a2510b55317867c8539a4df295f5afb85da5d4)
* hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KeyAuthorizationKeyProvider.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #754 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/754/])
HADOOP-11322. key based ACL check in KMS always check KeyOpType.MANAGEMENT even actual KeyOpType is not MANAGEMENT. (Dian Fu via yliu) (yliu: rev 61a2510b55317867c8539a4df295f5afb85da5d4)
* hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KeyAuthorizationKeyProvider.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #16 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/16/])
HADOOP-11322. key based ACL check in KMS always check KeyOpType.MANAGEMENT even actual KeyOpType is not MANAGEMENT. (Dian Fu via yliu) (yliu: rev 61a2510b55317867c8539a4df295f5afb85da5d4)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java
* hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KeyAuthorizationKeyProvider.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1944 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1944/])
HADOOP-11322. key based ACL check in KMS always check KeyOpType.MANAGEMENT even actual KeyOpType is not MANAGEMENT. (Dian Fu via yliu) (yliu: rev 61a2510b55317867c8539a4df295f5afb85da5d4)
* hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java
* hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KeyAuthorizationKeyProvider.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #16 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/16/])
HADOOP-11322. key based ACL check in KMS always check KeyOpType.MANAGEMENT even actual KeyOpType is not MANAGEMENT. (Dian Fu via yliu) (yliu: rev 61a2510b55317867c8539a4df295f5afb85da5d4)
* hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KeyAuthorizationKeyProvider.java
* hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #16 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/16/])
HADOOP-11322. key based ACL check in KMS always check KeyOpType.MANAGEMENT even actual KeyOpType is not MANAGEMENT. (Dian Fu via yliu) (yliu: rev 61a2510b55317867c8539a4df295f5afb85da5d4)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java
* hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KeyAuthorizationKeyProvider.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1968 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1968/])
HADOOP-11322. key based ACL check in KMS always check KeyOpType.MANAGEMENT even actual KeyOpType is not MANAGEMENT. (Dian Fu via yliu) (yliu: rev 61a2510b55317867c8539a4df295f5afb85da5d4)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KeyAuthorizationKeyProvider.java
* hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java
, Nice find here guys, thanks for taking care of this. FWIW patch looks good to me too :)]