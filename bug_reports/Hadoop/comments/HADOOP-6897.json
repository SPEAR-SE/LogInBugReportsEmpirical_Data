[The fix is trivial. So no unit test is included., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12451172/mkdirs.patch
  against trunk revision 981714.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h4.grid.sp2.yahoo.net/661/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h4.grid.sp2.yahoo.net/661/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h4.grid.sp2.yahoo.net/661/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h4.grid.sp2.yahoo.net/661/console

This message is automatically generated., There's a wierd incompatibility within the various overloads of {{FileSystem.mkdirs}} .

{{static boolean FileSystem.mkdirs(FileSystem fs, Path path, FsPermission permission)}} assigns the specified permission to all directories constructed on the way to path , including the last one, {{path}} itself .

{{fs.mkdirs(path, permission)}} behaves very differently.  The intermediate directories, if any, that get created, are born with the permissions of {{permission}} , but the leaf directory, {{path}} , seems to get its permissions set to a MASKED permission mask, at least when {{FileSystem}} is a DFS.

At the very least, this behavior should be documented.  A better remedy, in my opinion, would be for {{FileSystem.mkdirs(Path, FsPermission)}} to change behavior so all directories created have permission bits named by the {{FsPermission}} parameter in all of the calls that have one., Dick, you made a good observation. But my understanding of their semantics is a little different from yours.

I believe static boolean FileSystem.mkdirs(FileSystem fs, Path path, FsPermission permission) assigns masked permission to intermediate directories, if any, that get created, and assigns the given permission to the leaf directory.

On the other hand fs.mkdirs(path, permission) assign the masked permission to all newly created directories.

Another subtle difference is that if the directory already exists, static boolean FileSystem mkdirs would go ahead and change the directory's permission. But boolean fs.mkdirs would simply return true without changing its permission., Hi Hairong, could you also clarify javadoc for the expected behavior of public static boolean mkdirs(FileSystem fs, Path dir, FsPermission permission)?, Nicholas, shall we discuss the expected behavior of the static mkdirs method? At least I think it should be consistent with the regular mkdirs except that it sets the absolute permission., I think that the static mkdirs(..) is confusing to users.  There are only a few lines of codes inside.  Why don't we just deprecate it now and remove it in the future?

In the meantime, we could update the javadoc as follows:
{code}
/** 
 * This method is equivalent to the following codes:
 *
 *    if (fs.mkdirs(dir)) {
 *      fs.setPermission(dir, permission);
 *      return true;
 *    }
 *    return false;
 */
{code}, This utility is used by Map/Reduce. So removing it may not be an option. :-(, Map/Reduce could just replace it with two or three lines of codes.

I forgot to mention that there is another drawback about the static mkdir(..).  Some users calling it do not realize that it is actually more expensive compared with the non-static mkdir(..) -- it requires one more rpc calls., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12451172/mkdirs.patch
  against trunk revision 1031422.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/26//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/26//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/26//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12451172/mkdirs.patch
  against trunk revision 1071364.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/265//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/265//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/265//console

This message is automatically generated., I second Nicholas' comment:

bq. I think that the static mkdirs(..) is confusing to users. There are only a few lines of codes inside. Why don't we just deprecate it now and remove it in the future?

This should already be covered by the FileSystem#mkdir/mkdirs methods now. I do not see why we should have a static method for mkdirs and create anymore., Cancelling patch since this appears to be a non-issue now?, It's still an issue. The patch seems valid. We cannot remove the static mkdirs since it has different behavior than member ones.
It sets the permission without applying umask., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  4s{color} | {color:red} HADOOP-6897 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HADOOP-6897 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12451172/mkdirs.patch |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14372/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

]