[This patch returns the JobStatus of the already running job instead of trying to submit it twice.
We've not seen any job.xml errors on our cluster since we applied this., submitting patch for checks, suggest this goes into 0.15.2 as well as 0.16.0, -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12371143/HADOOP-2228-v1.patch
against trunk revision r601518.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests -1.  The patch failed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1280/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1280/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1280/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1280/console

This message is automatically generated., I'm not sure the hbase test failing had anything to to with this patch. Hbase guys said that test is a bit unstable, could anyone with more insight have a look please?, I don't think this patch is going to solve the problem. The reason is this that a {{job}} is not removed immediately from the {{jobs}} list even though it may have succeeded (or failed). 
The JobTracker works on a specific directory per job and the directory name is based on the jobid. The jobIds assigned by the JobTracker should never clash since the jobId is really unique (to clarify, the jobId is a combination of the JobTracker startup timestamp and a counter that keeps track of submitted jobs). Of course, the possibility of a bug here cannot be ruled out but it requires investigation...

I feel that this issue can be addressed in 0.16 and marking it as such., I'm not convinced that's the case, as the job is still running (not failed/completed) when this error occurs.
We've had the patch on our clusters for about two weeks now and have not seen the problem appear once in that time, where it usually would happen once a day., +1 this makes sense. If the submit failed on the client, but not the server, when you retry it will already be running., Sorry Johan, I had missed that part of JobClient that creates a proxy. That proxy has the retry mechanism and hence you might run into the situation you described., Putting the patch back to the queue., I just committed this. Thanks, Johan!, +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12371143/HADOOP-2228-v1.patch
against trunk revision r604440.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1355/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1355/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1355/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1355/console

This message is automatically generated., Integrated in Hadoop-Nightly #334 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/334/])]