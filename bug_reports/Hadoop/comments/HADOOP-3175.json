[Thanks Edward for looking into this. I am setting the fix version to "0.17" since this is a very user visible problem., Yes, that's a good idea., Escape parsing(CommandFormat.parse()) for the native OS commands when appear ' - '., Submitting., does '{{-put - file}}' work with this? Looks like args after "-" are not added to parameter list. Do you want to call the test 'testUdanax'?, Oh. It's my habit-forming namings., >> does 'put - file' work with this? Looks like args after "" are not added to parameter list.

I don't see why rest (ex. '> /dev/null') should remain as argument of parameter list.
Would you explain it more clearly?, bq.  I don't see why rest (ex. '> /dev/null') 
"> /dev/null" is not part of the command. That is interpreted by the user shell. I don't think there is a requirement that "-" should only be the last arg. Could also add test case where it is not the last arg to your test?

Would replacing {noformat}if (args[pos].charAt(0) == '-')  ... {noformat} with  {noformat} if (args[pos].charAt(0) == '-' && arg[pos].length > 0) ... {noformat} be enough for the fix?, Then, { '>', '/dev/null' } will be added to parameter list and return the exception of "Illegal number of arguments".
IMO, Should be escaped for the native OS commands when appear ' - '., I didn't quite follow the adding ">" and "/dev/null" to the test. 

I will see if I can submit a slightly modified version of your patch. , Please review this v01.patch., If dststr.equals("-") in copyToLocal(), it will be redirect to cat().
We don't need an rest arguments to add to parameter list.

{code}
    if (dststr.equals("-")) {
      ...
      cat(srcstr, verifyChecksum);
    } else {
      ...
      copyToLocal(srcFS, p, f, copyCrc);
    }
{code}

And, I added a testFsShell() to TestFileSystem., Updated patch attached.

What I meant is that adding {code}
cf = new CommandFormat("put", 2, 10000);
assertEquals(cf.parse(new String[] {"-put", "-", "dest"}, 1).get(1), "dest"); {code}

to your test fails the test, but it should not. Attached patch fixes that.
, +1 I always wants a 2 percent something else., +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12379682/3175_v02.patch
against trunk revision 645773.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 3 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2187/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2187/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2187/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2187/console

This message is automatically generated., I just committed this. Thanks Edward!, I can't believe I missed this !

How about backporting it to 0.16.3 ?
, This affects only 0.17 and above.
, Oops my mistake. Sorry for that., Integrated in Hadoop-trunk #456 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/456/])]