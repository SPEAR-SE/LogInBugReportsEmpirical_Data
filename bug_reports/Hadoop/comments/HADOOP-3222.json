[I don't think this should require super user privilege. In particular, users should be able to run it on directories that they own or have read-access on. One specific use case is finding the distribution of a directory's data blocks., >> I don't think this should require super user privilege. In particular, users should be able to run it on directories that they own or have read-access on. One specific use case is finding the distribution of a directory's data blocks.

+1 , There are several reasons that fsck is better started by a superuser:
- fsck may access a lot of files/dirs.  If we check permission for each file/dir, the performance may be a problem.
- fsck uses namenode resource intensively.  It will be relatively easy to use it for DDOS.
- fsck traditionaly is used for checking and repairing file system, which is an admin operation.  If we need some command for finding the distribution of a directory's data blocks, we are better to create a new one.

Even if we don't require superuser to run fsck, we have to define what are the permissions required for fsck and its options.  There is no permission check for fsck currently, i.e. any user can run fsck in any dir., Apart from getting block locations users might not find any use of fsck. Would it easier if we had another command to get block locations for users and make fsck superuser only task because fsck also has options such as -move / -delete which might be best restricted to super user., The DDOS possibility is not relevant. It is clearly possible to do many many other ways until we have user-based throttling in the name node.

It doesn't seem like the file permission check should be a performance problem as long as you don't do the recursive check each time, which would be rather pointless. *smile*

Our fsck is much more useful to non-root users precisely because you can limit it to a given directory tree. It is completely desirable for me to ask if any blocks in my directory are missing.

I agree that move and delete both should require write permission and move should be to some location that is in the user's home dir...
, I agree that it makes sense to make fsck do permission checking for the nodes that it traverses. If a user does a fsck on files/directories that he/she has access to (using permissions) then that invocation of fsck should be allowed. 

Since "/" is usually owned by super-user, only super-user should be allowed to run fsck on "/"., I agree to what Owen and Dhurba suggested. At the minimum, should we have the permission check. Consider this.
hadoop dfs -ls honors permission, so, userA will not be able to see directory listing of userB. While userA can always run hadoop fsck and get the listing of userB's directory, Close this issue as INVALID.]