[Attached patch fixes 57 out of the 105 'Performance' issues as noted by findbugs... basically everything in mapred (and some related to SequenceFile) ., +1

http://issues.apache.org/jira/secure/attachment/12357639/HADOOP-1387_1_20070518.patch applied and successfully tested against trunk revision r539243.

Test results:   http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/159/testReport/
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/159/console, I just took a quick look to see what kind of changes go into FindBug fixes.

regd :
{code}
--- src/webapps/job/analysejobhistory.jsp	(revision 539486)
+++ src/webapps/job/analysejobhistory.jsp	(working copy)
@@ -82,8 +82,8 @@
 	}
 	Comparator<JobHistory.Task> cMap = new Comparator<JobHistory.Task>(){
 	  public int compare(JobHistory.Task t1, JobHistory.Task t2){
-	    Long l1 = new Long(t1.getLong(Keys.FINISH_TIME) - t1.getLong(Keys.START_TIME)); 
-	    Long l2 = new Long(t2.getLong(Keys.FINISH_TIME) - t2.getLong(Keys.START_TIME)) ;
+	    Long l1 = t1.getLong(Keys.FINISH_TIME) - t1.getLong(Keys.START_TIME); 
+	    Long l2 = t2.getLong(Keys.FINISH_TIME) - t2.getLong(Keys.START_TIME);
 	    return l2.compareTo(l1); 
 	  }
 	}; 
{code}
Does this reduce an allocation? Should it be: {{long l1 =  ...;  long l2 = ...;}} . , Good catch Raghu... fixed now. Thanks!, I just committed this.  Thanks, Arun!, Integrated in Hadoop-Nightly #97 (See http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/97/)]