[I'm attaching a patch to allow the space character.

I've also added tests that specifically cover user and group names with spaces.  This way, we'll be able to catch regressions on any machine running the tests, not just machines where the logged-in user happens to have spaces in the group name., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12594052/HADOOP-9768-trunk.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2839//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2839//console

This message is automatically generated., I'm canceling the patch for a moment.  I realized that the allowable characters are mentioned in the command usage output, so I'll want to update that too., I'm uploading new patches that also update the list of valid characters displayed by command usage.  While I was in there, I corrected a typo too., +1

Look good to me! Thanks for fix the problem, Chris!, +1 for the trunk patch. Verified on Windows and OS X. Nice use of {{assertIllegalArguments}}., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12594101/HADOOP-9768-trunk.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.cli.TestCLI

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2844//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2844//console

This message is automatically generated., +1 for the branch-1 patch also. Verified on Windows and OS X., +1 from me also. Thanks for the fix Chris!, Looks like the trunk-2 patch breaks the TestCLI because of the updated help msg. We also need to update the expected msg for TestCLI accordingly., This patch makes it incorrect for Linux / Unix users. i.e. if the user / group had a space, it would not be marked as invalid. Hence, -1. Please aim for a cross-platform solution., Thanks, Ravi.  I've uploaded version 3 of the patches to allow space only on Windows.  I've also fixed the failure in {{TestCLI}}.  There is no way to express conditional logic based on platform in testConf.xml, so I'm using a wildcard to match the allowable characters.  We now need a separate patch for branch-1-win.  The branch-1 patch won't apply cleanly to branch-1-win due to a minor difference in imports in the test class.

However, I'm now wondering why the Hadoop code is attempting to duplicate validation rules that are enforced at the OS and inconsistent across OSes.  This validation code is over 5 years old, and I haven't been able to trace the history of why we're doing it.  I'm pretty sure the current code isn't even correct across different Unixes, especially when you consider the possibility of customization via PAM modules.  If we just pass through to the OS and let it report validation failures, then we can remove this portability/maintenance burden.  Of course, this would be a longer-term consideration.  For right now, I'm interested to hear if the current patches look acceptable., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12594243/HADOOP-9768-trunk.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2847//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2847//console

This message is automatically generated., +1 for the new patches also., Hi Chris!

Thanks for updating the patches. They look good to me. +1. 

I agree, we should not be duplicating anything which the OS does anyway. I agree we can handle that in a separate JIRA., Thanks for the reviews, Arpit and Ravi!

{quote}
I agree, we should not be duplicating anything which the OS does anyway. I agree we can handle that in a separate JIRA.
{quote}

Thanks, Ravi.  I filed HADOOP-9778 to track this.

[~jingzhao], are you still +1 for the new patch?  If so, then I would like to commit it today.
, Sorry for the delay. +1 for the new patch., Thanks, Jing!  I plan on committing this later today.  It looks like I'll need to wait a bit for HADOOP-9783 to get committed first.  That patch is going to rename {{Shell#WINDOWS}} to {{Shell#IS_WINDOWS}}, so I'll need to do a very minor rebase before I commit to trunk., HADOOP-9652 was reverted from trunk, so I proceeded with committing this to trunk.  I couldn't merge down from there, because HADOOP-9652 was not reverted from branch-2.  I've left a comment on HADOOP-9652 asking for a revert on branch-2., I've committed to trunk, branch-1, and branch-1-win.  I'm leaving the issue open, pending revert of HADOOP-9652 from branch-2 so that I can commit this to branch-2 and branch-2.1-beta., SUCCESS: Integrated in Hadoop-trunk-Commit #4187 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4187/])
HADOOP-9768. Moving from 2.1.0-beta to 2.1.1-beta in CHANGES.txt, because this patch did not make it into the 2.1.0-beta RC. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1508527)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
, At this point, I've committed the patch to all relevant branches: trunk, branch-2, branch-2.1-beta, branch-1, and branch-1-win.  However, this did not make it to branch-2.1-beta in time for the 2.1.0-beta RC.  I need to set Fix Version to 2.1.1-beta, but that isn't listed.  I've emailed common-dev asking a jira admin to create that.  I'm going to keep this issue open until I can set the correct Fix Version., SUCCESS: Integrated in Hadoop-Yarn-trunk #287 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/287/])
HADOOP-9768. Moving from 2.1.0-beta to 2.1.1-beta in CHANGES.txt, because this patch did not make it into the 2.1.0-beta RC. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1508527)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1477 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1477/])
HADOOP-9768. Moving from 2.1.0-beta to 2.1.1-beta in CHANGES.txt, because this patch did not make it into the 2.1.0-beta RC. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1508527)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1504 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1504/])
HADOOP-9768. Moving from 2.1.0-beta to 2.1.1-beta in CHANGES.txt, because this patch did not make it into the 2.1.0-beta RC. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1508527)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
]