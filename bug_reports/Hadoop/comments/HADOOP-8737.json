[-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542691/HADOOP-8737.001.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1371//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1371//console

This message is automatically generated., I don't think this will always work.

{{JAVA_HOME}} is often set to JVM-home, whereas if you want jni.h then you need {{JDK_HOME}}, which is not so formally defined. 

Maven, Ant, etc find {{JAVA_HOME}} from whatever env variable is defined, falling back to some guesswork -but they are often happy with just the JRE. 

Assuming that {{JAVA_HOME}} always points to a JDK with the jni.h file in a specific subdir is very brittle. At the least, the logic should use a JDK_HOME env var which would be set to JAVA_HOME iff the env var had not already been set., Hi Steve,

Maven requires a JDK to build source code, not simply a JRE:
http://stackoverflow.com/questions/2222560/build-failed-question-maven-jre-or-jdk-problem

The issue is that the JRE does not contain {{javac}}, and without that, you can't do very much with Maven or ant.

However-- Maven can be configured to use a different {{javac}} than the one it finds in {{JAVA_HOME}}.  Perhaps we should support this for the native build as well.  Let's open a separate JIRA for that.  It would be a new feature that has never been supported in the past, and it's not a blocker for this change., Testing done:  I tested this by building everything on a machine with multiple JVMs installed, and verifying that it used the correct one for the native build (even when a different one was installed as the "default" (meaning it was linked to from {{/usr/local/lib/libjvm.so}}, etc.), Steve,
Per Colin we currently assume JAVA_HOME contains a JDK, the only JRE we currently support (Oracle/Sun) doesn't ship a jre with javac. I agree that it would be useful to distinguish uses of JAVA_HOME between building (requires a JDK) and running (doesn't require a JDK), wan to file another jira for that?, Just a heads up that this completely breaks on OS X and likely other non-Linux systems., Hi Allen,

Thanks for letting me know you're having problems under OS X.  Can you clarify what the problem is?

Searching around brings up references to {{JAVA_HOME}} not being set on OS X.  However, the native build is already using {{JAVA_HOME}}.  For example, {{./hadoop-common-project/hadoop-common/pom.xml}} contains this text:
{code}
   <configuration>
     <javahPath>${env.JAVA_HOME}/bin/javah</javahPath>
       <javahClassNames>
         <javahClassName>org.apache.hadoop.io.compress.zlib.ZlibCompressor</javahClassName>
         <javahClassName>org.apache.hadoop.io.compress.zlib.ZlibDecompressor</javahClassName>
{code}, Currently (not to my liking) we don't support other OSes that Linux for native stuff. The attached patch does not break the non-native build in OSX. And, currently, to run Hadoop in OSX I have to make sure JAVA_HOME is currently set. 



, Colin: The patch hard codes paths that don't exist on some platforms.

Alejandro: The native code does compile on OS X with a few line changes.  , @Allen, would you please submit a patch for it? It would quite useful for many developers (including me) to be able to build/run Hadoop native stuff on OSX, specially to be able to run Hadoop in secure mode.Thanks in advance., And we can then look at how address the issue Colin is trying to fix in this JIRA while ensuring things run on OSX., To be more concrete, those paths don't exist because that isn't where the Java lib directory lives.  For systems that support multi-arch/bitness (OS X, Solaris, etc), it will definitely pick the wrong library., @Allen, it makes sense. But we shouldn't worry about platforms that we don't build native stuff for.

Said this, I'd love to be able to build natively for OSX. I'll help testing the patch, and I'll get cycles for a native guy to verify the native changes (I'm completely ignorant of that). Then we can figure out how to do this JIRA in a more cross-platform way.

Looking forward to see your patch for OSX., You'll note that I'm not giving any official vote on it.  Commit or not, I don't really care.  Just pointing out that this is another portability break in case someone cares.

As my patches, I've posted several variations of various parts of my portability patches over the years. I really have no intention at the time of this writing to expend the effort to update them on JIRA again.  While "patches accepted" is the common mantra, "patches committed" is not. I don't have someone who I sit next to that I can tap on the shoulder and blanket +1 them, especially since portability work is tricky and there are lots of subtle bugs.  (For example, the group code in libhadoop on OS X is quite entertaining...)

In the case of this one, like a lot of the other patches that blatantly break any attempts at portability, I'll just rip it out and replace with my own code. I already replace other parts of the system with more functional equivalents (like the krb5 filter...) so one more isn't going to hurt.

, I am going to post a new version of the patch that surrounds this code in
{code}
IF("${CMAKE_SYSTEM}" MATCHES "Linux")
{code}

On non-Linux platforms, we can fall back on the old method of detecting JNI installations.

Allen, I believe this will address your concerns., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542881/HADOOP-8737.002.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.ha.TestZKFailoverController

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1377//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1377//console

This message is automatically generated., Allen,
Thanks for the feedback, I filed HADOOP-8744 to fix the native build, per Colin and Tucu this change does not regress here.

Colin,
Thanks for addressing Allen's feedback via the check. I'll check out and test your latest patch., +1 patch and testing above lgtm, I've committed this and merged to branch-2 (ran the native build there for sanity). Thanks for fixing this Colin., Integrated in Hadoop-Hdfs-trunk-Commit #2718 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2718/])
    HADOOP-8737. cmake: always use JAVA_HOME to find libjvm.so, jni.h, jni_md.h. Contributed by Colin Patrick McCabe (Revision 1378444)

     Result = SUCCESS
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1378444
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/JNIFlags.cmake
, Integrated in Hadoop-Common-trunk-Commit #2655 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2655/])
    HADOOP-8737. cmake: always use JAVA_HOME to find libjvm.so, jni.h, jni_md.h. Contributed by Colin Patrick McCabe (Revision 1378444)

     Result = SUCCESS
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1378444
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/JNIFlags.cmake
, Integrated in Hadoop-Mapreduce-trunk-Commit #2684 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2684/])
    HADOOP-8737. cmake: always use JAVA_HOME to find libjvm.so, jni.h, jni_md.h. Contributed by Colin Patrick McCabe (Revision 1378444)

     Result = FAILURE
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1378444
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/JNIFlags.cmake
, Integrated in Hadoop-Hdfs-trunk #1149 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1149/])
    HADOOP-8737. cmake: always use JAVA_HOME to find libjvm.so, jni.h, jni_md.h. Contributed by Colin Patrick McCabe (Revision 1378444)

     Result = FAILURE
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1378444
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/JNIFlags.cmake
, Integrated in Hadoop-Mapreduce-trunk #1180 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1180/])
    HADOOP-8737. cmake: always use JAVA_HOME to find libjvm.so, jni.h, jni_md.h. Contributed by Colin Patrick McCabe (Revision 1378444)

     Result = SUCCESS
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1378444
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/JNIFlags.cmake
, Integrated in Hadoop-Common-trunk-Commit #2682 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2682/])
    HADOOP-8764. CMake: HADOOP-8737 broke ARM build. Contributed by Trevor Robinson (Revision 1380984)

     Result = SUCCESS
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1380984
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/JNIFlags.cmake
, Integrated in Hadoop-Hdfs-trunk-Commit #2745 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2745/])
    HADOOP-8764. CMake: HADOOP-8737 broke ARM build. Contributed by Trevor Robinson (Revision 1380984)

     Result = SUCCESS
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1380984
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/JNIFlags.cmake
, Integrated in Hadoop-Mapreduce-trunk-Commit #2706 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2706/])
    HADOOP-8764. CMake: HADOOP-8737 broke ARM build. Contributed by Trevor Robinson (Revision 1380984)

     Result = FAILURE
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1380984
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/JNIFlags.cmake
, Integrated in Hadoop-Hdfs-trunk #1156 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1156/])
    HADOOP-8764. CMake: HADOOP-8737 broke ARM build. Contributed by Trevor Robinson (Revision 1380984)

     Result = SUCCESS
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1380984
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/JNIFlags.cmake
, Integrated in Hadoop-Mapreduce-trunk #1187 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1187/])
    HADOOP-8764. CMake: HADOOP-8737 broke ARM build. Contributed by Trevor Robinson (Revision 1380984)

     Result = SUCCESS
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1380984
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/JNIFlags.cmake
]