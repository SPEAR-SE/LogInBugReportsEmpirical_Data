[Attached patch adds the passed jar (the argument) to CLASSPATH before RunJar is invoked. This solves the {{HADOOP_CLASSPATH=Y.jar hadoop jar X.jar Main}} failing case described above.

Another workaround would of course be to manually add such a jar to HADOOP_CLASSPATH, such as {{HADOOP_CLASSPATH=X.jar:Y.jar hadoop jar X.jar Main}} but remembering to do that is annoyingly painful when it can be fixed without issues., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12574763/HADOOP-9424.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2349//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2349//console

This message is automatically generated., This looks reasonable.  I can't think of any reason we wouldn't want to put the passed jar on the classpath before invoking RunJar., Thanks Colin!

bq. Also please list what manual steps were performed to verify this patch.
# I tested the (above) described approach with and without the fix to validate the change.
# I also tested other normal jars and erroneous arguments to validate that the addition does not cause any form of incompatible issues., +1, This change would basically load X.jar in the system classloader. RunJar also loads any classes and resources in a classes directory in X.jar, and any embedded JARs in a lib directory, but these would not be added to the system classpath with this fix. So the same scenario that you describe could occur for Bar in X.jar and Foo in an embedded JAR.

I'm also wary of making an environmental/classpath change like this without running tests with Hive, Pig etc. Perhaps Bigtop testing could help here.

What's the scenario that you are seeing this in? Is the workaround not sufficient?, The workaround is sufficient, but seems unnecessary and unintuitive to users to automatically perform. That is, they wouldn't realize this is what's hitting them immediately.

The lib/ point is a good one; that may be expected as well if we're doing this. But just for starters we could add the jar at least onto the classpath?, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12574763/HADOOP-9424.patch |
| Optional Tests | javadoc javac unit shellcheck |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6280/console |


This message was automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12574763/HADOOP-9424.patch |
| Optional Tests | javadoc javac unit shellcheck |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6301/console |


This message was automatically generated., Coming over from HADOOP-13410, I would rather take the opposite approach. What's included in HADOOP_CLASSPATH should be considered more like "user classes". I would rather put the content of HADOOP_CLASSPATH in the user classloader that loads the jar and remove it from the CLASSPATH. That way, the jar in the argument and the content of the HADOOP_CLASSPATH would be visible to each other. Note that the isolated classloading (HADOOP_CLIENT_CLASSLOADER) already takes that approach., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  5s{color} | {color:red} HADOOP-9424 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12574763/HADOOP-9424.patch |
| JIRA Issue | HADOOP-9424 |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/10215/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Looks like this proposed approach does not appear to be entirely desirable., I would keep this issue open as it still is a real issue. Let's find a way to address this in the best way possible. It is not as urgent as other issues, so we can take some time to think it through.]