[This is strange actually. If the file.out.index does not exist in the directory, then we should get an IOException and the handler for IOException in the doGet method sends a SC_GONE status in the HTTP response. This should be seen as 410 on the client and not 500 (in the exception reported by the client: 'Server returned HTTP response code: 500'). '500' means that there was an internal error in the servlet which could have been caused due to some other problem like a NPE (could have been due to something like HADOOP-1123). Another thing pointing to this direction is that the map output will be declared as 'lost' in the same exception handler code in the doGet method, and the JobTracker will reexecute the map. So the job should not hang. , I tried some random mapouput link on 0.10.1 and 0.12.3.  

In 0.10.1, it returned 500. 
in 0.12.3, it returned 410.

On the web (in 0.10.1) 
==============================
HTTP ERROR: 500

/hadoop1/mapred/local/task_0198_m_000251_0/file.out.index

RequestURI=/mapOutput

Powered by Jetty://

==============================

When the original error happened, I found the file.out.index at the different directory.  /hadoop4/mapred/local/task_0198_m_000251_0/file.out.index instead of /hadoop1.  That's how I thought it's something to do with the full drive.

> Another thing pointing to this direction is that the map output will be declared as 'lost' in the same exception handler code in the doGet method, and the JobTracker will reexecute the map. So the job should not hang.
>
Was this a fix after 0.10.1? 
If so, we can change this to 'won't fix'.
, Resolving this for now. The comments made earlier explain the reason. Also, HADOOP-1252 should take care of this situation it it ever happens. In case the problem appears even with the fix for HADOOP-1252, then we can reopen this.]