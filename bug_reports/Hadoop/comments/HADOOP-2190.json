[Attached  patch throws out error for ls, lsr, du, dus commands for non-existing files. There were 2 changes DistributedFileSyste.listPaths() was not returning null for non-existing files and  FileSystem.listPaths() was consuming null returned from underlying listPaths and returning zero length Path[] array. So, I have made changes at few places so that listPaths returns null when required. I ran the tests and they look good. If anyone could take a look at the changes and approve it, I will prepare test cases and update another patch. The issue reported was also seen on local filesystem. fixing the second issue also takes care of local filesystem.

Below is the output after the patch
{noformat}
ls/lsr command 
[ hadoop-trunk]$ hadoop dfs -ls empty
Found 0 items
[ hadoop-trunk]$ hadoop dfs -ls nofile
ls: Could not get listing for nofile
[ hadoop-trunk]$ hadoop dfs -lsr nofile
lsr: Could not get listing for nofile

du command
[ hadoop-trunk]$ hadoop dfs -du empty
Found 0 items
[ hadoop-trunk]$ hadoop dfs -du nofile
du: Could not get listing for nofile

[ hadoop-trunk]$ hadoop dfs -dus empty
empty   0
[ hadoop-trunk]$ hadoop dfs -dus nofile
dus: dus: No match: nofile
[ hadoop-trunk]$
{noformat}, Can the command output be along the lines of what we see on linux?

RHEL throws this:
ls: /doesnotexist: No such file or directory, sure, if patch is approved I will make these changes while adding testcase., It will be a good idea to remove the dependency of this patch on the deprecated FileSystem.listPath API, Another patch, which now calls listStatus instead of deprecated listPaths(Path) . updated test case and changes suggested by Mukund., this patch fixes the issue but only on the FsShell side.The previous patch fix it on the filesystem side which would requrioe changes to all the filesysstems. Also, this just checks to see if the directory/ does not exist only if it gets 0 listings from listStatus. , this one takes care of globbing of non existent globs and returns an error, also added a test case for that., +1 looks good. , +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12375521/Hadoop-2190_2.patch
against trunk revision 619744.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 5 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1789/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1789/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1789/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1789/console

This message is automatically generated., just committed this. Thanks Mahadev!, Integrated in Hadoop-trunk #400 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/400/])]