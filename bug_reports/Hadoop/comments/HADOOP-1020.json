[Is this on Windows?  The Path code behaves differently on Windows.

Can you provide a standalone test?  Adding something to TestPath might be appropriate., A unit test might simply check that, e.g.: fs == FileSystem.getLocal(conf)., The TestPath.java.patch attachment adds the suggested test case to TestPath.  The last 2 assertions in TestPath.testGetFileSystem fail on both Windows and Linux:
    assertEquals(new Path("file:///","C:/foo/bar").getFileSystem(conf), FileSystem.getLocal(conf));
    assertEquals(new Path("file:///","/foo/bar").getFileSystem(conf), FileSystem.getLocal(conf));
where the conf object has an "fs.default.name" set to a dfs filesytem. 

The second assertion on Linux and both on Windows fails with:
  expected:<DFS[org.apache.hadoop.dfs.DFSClient@1cd66ea]> but was:<LocalFS>
  junit.framework.AssertionFailedError: expected:<DFS[org.apache.hadoop.dfs.DFSClient@1cd66ea]> but was:<LocalFS>
        at org.apache.hadoop.fs.TestPath.testGetFileSystem(TestPath.java:145)

The first assertion on Linux fails with:
    No FileSystem for scheme: C
    java.io.IOException: No FileSystem for scheme: C
        at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:157)
        at org.apache.hadoop.fs.Path.getFileSystem(Path.java:163)
        at org.apache.hadoop.fs.TestPath.testGetFileSystem(TestPath.java:145)

Given the lack of specification in Path, the expected behaviour is not clear.
, Windows pathnames are problematic as URIs.  For back-compatibility, I special-cased things on Windows so that a path that begins with <letter><colon> is treated as though it begins file:///<letter><colon>.  This handling is disabled on other operating systems.  Perhaps we should disable it altogether, but then I fear lots of things would break on Windows.

That explains the first assertion failing on Linux.  The failure of the second assertion looks like a bug to me.
, Jira mangled the second occurrence of <letter><colon> in the previous comment., The bug was an erroneous optimization in the Path(Path,Path) constructor.  I removed that and added a test case in the attached patch.

Nigel, does this fix things for you on Windows?, -1, because 2 attempts failed to build and test the latest attachment (http://issues.apache.org/jira/secure/attachment/12352066/HADOOP-1020.patch) against trunk revision http://svn.apache.org/repos/asf/lucene/hadoop/trunk/512006. Please note that this message is automatically generated and may represent a problem with the automation system and not the patch. Results are at http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch, -1, because 2 attempts failed to build and test the latest attachment (http://issues.apache.org/jira/secure/attachment/12352066/HADOOP-1020.patch</a>) against trunk revision <a href=) against trunk revision http://svn.apache.org/repos/asf/lucene/hadoop/trunk/512006. Please note that this message is automatically generated and may represent a problem with the automation system and not the patch. Results are at http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch, The problem with TestSymLink was that hadoop.tmp.dir had c:/... in it, and this is by default used as the basis for hadoop.system.dir, but it's not a valid HDFS path, since it contains a colon, and the system dir is located in the default filesystem, HDFS in this case.

Here's a new version of that patch that fixes that by explicitly specifying a relative path for hadoop.system.dir in contrib tests.
, -1, because javac generated 768 warnings (more than the acceptable 766 warnings) when testing the latest attachment (http://issues.apache.org/jira/secure/attachment/12352189/HADOOP-1020-2.patch) against trunk revision http://svn.apache.org/repos/asf/lucene/hadoop/trunk/512461. Please note that this message is automatically generated and may represent a problem with the automation system and not the patch. Results are at http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch, -1, because 3 attempts failed to build and test the latest attachment http://issues.apache.org/jira/secure/attachment/12352189/HADOOP-1020-2.patch</a>) against trunk revision <a href= against trunk revision http://svn.apache.org/repos/asf/lucene/hadoop/trunk/512499. Please note that this message is automatically generated and may represent a problem with the automation system and not the patch. Results are at http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch, +1, because http://issues.apache.org/jira/secure/attachment/12352189/HADOOP-1020-2.patch applied and successfully tested against trunk revision http://svn.apache.org/repos/asf/lucene/hadoop/trunk/512499. Results are at http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch, I just committed this.]