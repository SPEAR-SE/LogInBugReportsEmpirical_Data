[I have a patch in progress that splits the build into a hadoop-kms-lib module for the main class files and hadoop-kms for the final built war.  With this in place, the long class file names get packaged into lib/hadoop-kms-lib.jar inside the war so that we avoid the long path problem without needing to change a lot of class names and do arbitrary refactorings just to satisfy the path length limitation., [~cnauroth], no need to split KMS in 2 modules, adding {{<attachClasses>true</attachClasses>}} to the configuration of the war plugin in the kms pom would create a KMS JAR and use it within the WAR., [~tucu00], thanks for the tip., Here is the patch.  It turns out what we really want is {{<archiveClasses>true</archiveClasses>}}.  {{attachClasses}} helps publish the jar as an artifact for use in other projects, but we don't need to expose these classes beyond KMS., LGTM, +1, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12666525/HADOOP-11063.1.patch
  against trunk revision 1a09536.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-kms.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4651//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4651//console

This message is automatically generated., bq. -1 tests included. The patch doesn't appear to include any new or modified tests.

No tests are required, because this is a change in packaging only.

I committed this to trunk and branch-2.  Alejandro, thank you for the code review., SUCCESS: Integrated in Hadoop-Yarn-trunk #671 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/671/])
HADOOP-11063. KMS cannot deploy on Windows, because class names are too long. Contributed by Chris Nauroth. (cnauroth: rev b44b2ee4adb78723c221a7da8fd35ed011d0905c)
* hadoop-common-project/hadoop-kms/pom.xml
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1862 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1862/])
HADOOP-11063. KMS cannot deploy on Windows, because class names are too long. Contributed by Chris Nauroth. (cnauroth: rev b44b2ee4adb78723c221a7da8fd35ed011d0905c)
* hadoop-common-project/hadoop-kms/pom.xml
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1887 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1887/])
HADOOP-11063. KMS cannot deploy on Windows, because class names are too long. Contributed by Chris Nauroth. (cnauroth: rev b44b2ee4adb78723c221a7da8fd35ed011d0905c)
* hadoop-common-project/hadoop-kms/pom.xml
* hadoop-common-project/hadoop-common/CHANGES.txt
]