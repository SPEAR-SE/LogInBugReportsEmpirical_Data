[I could submit a quick fix patch that unmarks JobTracker.finalizeJob synchronized, but I don't really know if that would break other things, or if it could miss other deadlock paths.

Anybody else know more about this code?
, It would be nice to get this fixed for 0.15.0, since it does deadlock the jobtracker.  I can submit the patch I describe if someone thinks that's a good idea., This should take care of the deadlock. Esentially, this patch locks the JobTracker before killing a job or changing its priority., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12367179/2001.patch
against trunk revision r582443.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests -1.  The patch failed core unit tests.

    contrib tests -1.  The patch failed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/896/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/896/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/896/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/896/console

This message is automatically generated., Sorry, should have checked for compilation problems before submitting the patch. Here is the correct patch., +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12367181/2001.patch
against trunk revision r582443.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/897/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/897/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/897/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/897/console

This message is automatically generated., That seems wrong (though, like I say, I don't really know this code).  If you have to hold the jobtracker lock in order to hold the per-job lock, then why bother acquiring the per-job lock at all?, bq. If you have to hold the jobtracker lock in order to hold the per-job lock, then why bother acquiring the per-job lock at all?

It's a limitation of the current code-base where one does have to lock the {{JobTracker}} to manipulate {{JobInProgress}}, see HADOOP-869 for more details.

-*-*-

The culprit code is 2 features:
a) Change job priority
b) Kill a job

IMHO a better fix, short-to-mid term, is to remove {{JobTracker#getJob(String)}} (of course, deprecate for 0.15.0) so as to prevent similar synchronization issues in the future. Relying on anyone locking the {{JobTracker}} before calling methods on {{JobInProgress}} is fairly brittle.

W.r.t current issue we could provide the above features by:
a) Introduce a synchronized, package-private {{JobTracker#setJobPriority(String, Priority))}} method which is called by jobdetails.jsp. This would change the job's priority and call {{JobTracker.resortPriority}}, which could be made a synchronized method too.
b) Use {{JobTracker#killJob(String)}} rather than {{JobInProgress.kill}} from jobdetails.jsp, Arun, could you pls upload a patch as per your comments (if you have it ready). Thanks., Here is a a patch implementing what I described in my previous comment..., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12367306/HADOOP-2001_2_20071006.patch
against trunk revision r583037.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests -1.  The patch failed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/907/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/907/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/907/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/907/console

This message is automatically generated., I just committed this. Thanks, Arun!, Integrated in Hadoop-Nightly #267 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/267/]), Need to merge to 0.14.4]