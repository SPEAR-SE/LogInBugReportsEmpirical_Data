[
This happens in 15.1 as well.  It is particularly problematic when there is one small and one large partition available for storage.  If the smaller partition is listed first, then it will be filled without any reference to available space and the status display will show available space because the larger partition is still free.

Aggressive rebalancing can stave off the problem, but that is more of a band-aid than a solution.

It is also a real problem that when the disk fills up, the file system is corrupted in a way that is very difficult to recover from.

, The cause of block size being 0 is that block size is not past as a parameter in block transfer protocol. So a Block object is initialized, we set its block size to be zero that leads to a parameter of zero when getNextVolume is called. There are three options:
1. change the DatanodeProtocol to pass the expected block size as well.
2. not to pass the block size in protocol, but use the default block size. The problem with this approach is to block size is a client size configuration.
3. use a big number like 128m as the block size. This may not work for bigger block size but should work most of the time., "reserved" space is incremented by default block size to compensate for the fact that block size is not transfered in protocol. 
Should we add a different version of volume.getAvailable() that returns negative number if left over space is less than the reserved? Currently it returns 0.
, or change '>=' to '>'  in {code}
if (volume.getAvailable() >= blockSize) { return volume; }{code}, '>' does make sense even if we implement other options.. we do in fact need more space the block size (checksum, native filesystem overhead etc).
, The patches takes the option 3.

Regarding Raghu's comments. Alghough the reservered space is incremented by default block size,  the default block size is not reserved when non-dfs usage takes more space than the reserved space (i.e. when available is less than remaining). Yes, I agree that it makes sense to change >= to >.
, Approach 3 breaks some junit tests that use SimulatedDataSet.This new patch takes the approach 2 instead. It also fixed a minor error in SimulatedDataSet., Yes, that should turn on volume switching if one of them is full.
Some comments.
- It is better to move declaration of estimateBlockSize up together with all other member declarations
- Use JavaDoc style comment for estimateBlockSize instead of the regular ones. That way I can see the description whenever I move the cursor over the variable in Eclipse.
- Do we plan to apply it to previous releases 0.14 or 0.15? If not then could you please also remove unused pieces of code
-# import org.apache.hadoop.io.Text;
-# private void enumerateThreadGroup()
-# short opStatus

, The patch incorporated most of Konstantin's comments except that I did not remove the unused method and variable. I need some time to investigate why they are there without being used., Yes, if there is a doubt whether we should remove these two warnings lets not do it as a part of this patch.
But lets not forget to investigate later on.
+1, +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12373542/diskfull2.patch
against trunk revision r613359.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1650/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1650/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1650/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1650/console

This message is automatically generated., I just committed this. Thank you Hairong., Integrated in Hadoop-Nightly #374 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/374/])]