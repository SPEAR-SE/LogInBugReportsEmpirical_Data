[Currently the shell's trashbin works for default file system that is hdfs and when fully qualified hdfs uri is given. 
It does not  work for for viewfs., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479005/trash1.patch
  against trunk revision 1102123.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/441//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/441//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/441//console

This message is automatically generated., Looks like this patch gets rid of the check against trash.isEnabled() -- is that intentional?

Also, it seems this should be straight-forward to unit test., trash.isEnabled() was redundant - #moveToTrash() checks that first. #moveToApropriateTrash() calls #moveToTrash().
The unit test ended being small code but harder than it looked (partly because of home dir being /Users and /user in different
systems - we want to the test to work on linux and mac.)
Did some further cleanup of tests and resolved a bug in chRootedFs().
The FileSystem cache causes some weird problems -- one thinks one gets independent FileSystems but not true because of wd., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479439/trash2.patch
  against trunk revision 1103971.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 15 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/464//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/464//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/464//console

This message is automatically generated., Hey Sanjay. I'm trying to follow this patch. Is the change to getHomeDirectory in ViewFileSystem just for the sake of the tests?, Good question. Yes and no.
If you recall, when I did FileContext and AbstractFileSystem, the home directory came from the server side. Our current default of /user/<uname> is used for FileSystem since it has no notion of a server defaults. 
Enter Viewfs -- there is no notion of a server side. Also a viewfs could have mount points to different file systems; so I can't pick the ss defaults for home directory from any one of them. 
This hit home when i tried to run the tests because the mac and linux and hdfs have different home directory pathname.
SO the test exposed a real problem in the system design by the fact that our tests run on different platforms and hence different file systems. 

I haven't figured out what is the cleanest way to fix this (but I give a suggestion below that I will file as a jira).
The intermediate solution is that the person configuring the view file system will create a mount point for  /user or /Users etc  depending on what he wants as the default home dir. So I simply coded a rule in viewfilesystem impl,  for now,  to see if it has mount point of /user or /Users etc, till we figure out a better solution.

Here is proposal on which I am going to shortly file a jira: let the viewfs config indicate the home directory. In a sense 
it is like a SS default. Should this simply be a key in the config or something else (like pick it up from a hdfs?)

I could have made the tests work by simply not using a mount point and test path starting with  "/user" or "/Users" but then it does not test our most common usecase. BTW I plan to add a test to HDFS also.
", Minor fix - removal of a warning,, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479557/trash3.patch
  against trunk revision 1104426.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 15 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/466//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/466//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/466//console

This message is automatically generated., Hi Sanjay. I think adding a configuration for viewfs for the home directory pattern would be the best route. eg a C-style format string like "/user/%s/" could be used.

If you want to commit this as is to fix the bug and do that in a separate JIRA, that's fine. +1 or happy to re-review if you want to do the config option in this one., Thanks. I will file a separate jira because it is not clear to me if the config should be for only viewfs or a more general config variable that applies to all file systems. 
Further, Doug and I debated this on HDFS-593; so i misspoke that we had added SS config - the patch did not go through since Doug didn't think it was important enough, although he agreed that it wasn't a client side property., I had forgot to do "git add .."; the new tests are now part of the patch., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480126/trash4.patch
  against trunk revision 1126287.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 17 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 2 release audit warnings (more than the trunk's current 1 warnings).

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.fs.viewfs.TestViewFsTrash

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/505//testReport/
Release audit warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/505//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/505//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/505//console

This message is automatically generated., - Looks like new files need license headers.
- there's an empty tearDown method
- is TestViewFsTrash.TestLFS used?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480312/trash5.patch
  against trunk revision 1127215.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 17 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.fs.viewfs.TestViewFsTrash

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/519//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/519//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/519//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480338/trash6.patch
  against trunk revision 1127215.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 17 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.fs.viewfs.TestViewFsTrash

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/521//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/521//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/521//console

This message is automatically generated., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480383/trash7.patch
  against trunk revision 1127215.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 17 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/524//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/524//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/524//console

This message is automatically generated., Committed the patch, Integrated in Hadoop-Common-trunk-Commit #620 (See [https://builds.apache.org/hudson/job/Hadoop-Common-trunk-Commit/620/])
    HADOOP-7284 Trash and shell's rm does not work for viewfs (Sanjay Radia)

sradia : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1127642
Files : 
* /hadoop/common/trunk/CHANGES.txt
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ChRootedFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/shell/Delete.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/ViewFileSystemTestSetup.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/TestTrash.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/Trash.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestChRootedFs.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestChRootedFileSystem.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestViewFsTrash.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestFSMainOperationsLocalFileSystem.java
, Was the latest revision reviewed? There are lots of diffs between trash3.patch which I had +1ed and trash7.patch which was committed (eg the use of "/homes" as a default home directory, which is very Yahoo specific), This patch seems to also have broken the HDFS build. I am going to temporarily revert it., Integrated in Hadoop-Common-trunk-Commit #621 (See [https://builds.apache.org/hudson/job/Hadoop-Common-trunk-Commit/621/])
    Revert HADOOP-7284 (r1127642) since it broke the HDFS build.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1127679
Files : 
* /hadoop/common/trunk/CHANGES.txt
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ChRootedFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/shell/Delete.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/ViewFileSystemTestSetup.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/TestTrash.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/Trash.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestChRootedFs.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestChRootedFileSystem.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestViewFsTrash.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestFSMainOperationsLocalFileSystem.java
, Sorry for breaking the HDFS build - will check this.
Todd after you last review I merely fixed the bug when running the test on hudson
 -- the /homes is NOT a Yahoo thing but Linux default for Hudson machines.
 You had agreed that I should file a jira to specify how a home dir is
specified for the different implementations of file system on various platforms.  , bq. the /homes is NOT a Yahoo thing but Linux default for Hudson machines.

Only for the Hudson machines in *.yahoo.net ;-) I've never seen /homes/ anywhere else.


Also, I thought this test was supposed to set up a LocalFileSystem subclass (TestLFS) that responded with a directory inside build/ as a home dir?, In HADOOP-7326, we've noted that the TestLFS implementation seems deficient - but a really good idea if it worked!, > Also, I thought this test was supposed to set up a LocalFileSystem subclass (TestLFS) that responded with a directory inside build/ as a home dir?

I don't recall saying that.
The homedir needs to be set for ViewFs anyway - my patch sets it up via set of rules. 
A jira is needed to discuss what is the correct way to set home dir: server side or config for  HDFS, config for viewfs or something more consistent., bq. I don't recall saying that.

I understood this part of the patch to indicate that:

{code}
+  static class TestLFS extends LocalFileSystem {
+    Path home;
+    TestLFS() throws IOException {
+      this(new Path(FileSystemTestHelper.TEST_ROOT_DIR));
+    }
+    TestLFS(Path home) throws IOException {
+      super();
+      this.home = home;
+    }
+    public Path getHomeDirectory() {
+      return home;
+    }
+  }
{code}

bq. The homedir needs to be set for ViewFs anyway - my patch sets it up via set of rules. 

right -- but the inclusion of /homes/ and not /home is very Yahoo-centric. The standard linux/bsd heirarchy puts home dirs in /home, not /homes., My comment re TestLFS was of course directed at the version in TestTrash, not the new TestViewFsTrash proposed in the patch, which I haven't reviewed., Todd, 
I originally copied  LFS from the base test but then realized that there is more fundamental issue with homedir. One needs to be able to configure home dir 
based on whatever your local convention is. (HDFS-593 identified this issue a long time ago and a patch was available but Doug felt it wasn't high priority).

Turns out if I had used LFS in this Jira,  it would have masked the real problem.
The  design, implementation of trash and its tests has many issues.
Also getting the test to work on Hudson is a valid use case (nothing to do with Yahoo).
We both agreed that a jira is needed to address the homedir issue properly.
If I remove /homes then it will not work on Hudson unless I mask it out with LFS. 
Please propose an alternate solution. I will also think of an alternate solution. 


, I agree it's nice to work on Hudson -- but I want to confine that to the test code. Unfortunately as is, it will work on the Apache Hudson but maybe not on other people's Hudsons or local boxes, right?

Would the client-side conf be a lot of work? It seems like it would avoid all of this complication, simplify the tests, and let it pass on everyone's boxes?

Maybe we could look at the $HOME environment variable to figure out the path?, The reason I didn't do the config option is that the user will have to write code to
determine what value to set based on the environment in which he runs. (I wrote the config option code but then realized that it was not the right solution and didn't want to make a new config parameter public and then be forced to pull it out later.)

The $HOME may not work since the $HOME on my desktop is not the right one for HDFS to which  I am submitting the job. My admin has set up a viewfs config that matches the
hdfs cluster in which my job will run. The $HOME of the submitting machine is not
relevant.

This is a fairly subtle problem - I am not sure which solution is right  otherwise I would have put it in. The solution in this patch is:  the viewfilesystem impl
has a set of heuristics that make it work for some common conventions: /user /Users, /home, /homes. It is an okay solution but clearner not general enough to work in all environments. In the short term it will work till we figure out a cleaner solution. , Integrated in Hadoop-Common-trunk #700 (See [https://builds.apache.org/hudson/job/Hadoop-Common-trunk/700/])
    Revert HADOOP-7284 (r1127642) since it broke the HDFS build.
HADOOP-7284 Trash and shell's rm does not work for viewfs (Sanjay Radia)

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1127679
Files : 
* /hadoop/common/trunk/CHANGES.txt
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ChRootedFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/shell/Delete.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/ViewFileSystemTestSetup.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/TestTrash.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/Trash.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestChRootedFs.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestChRootedFileSystem.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestViewFsTrash.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestFSMainOperationsLocalFileSystem.java

sradia : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1127642
Files : 
* /hadoop/common/trunk/CHANGES.txt
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ChRootedFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/shell/Delete.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/ViewFileSystemTestSetup.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/TestTrash.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/Trash.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestChRootedFs.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestChRootedFileSystem.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestViewFsTrash.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestFSMainOperationsLocalFileSystem.java
, Given that this Jira is stuck I will change it to use a config value in the viewfs config.
I am not sure if this is the right solution and in the short term i preferred my original solution till we figure out the right one. 
But there are more important things HDFS needs so I rather compromise than debate.
I am testing the updated patch and will post it shortly., Updated patch.
Uses videwfs's config to set homedir.

Note I have retained the signature of
trashShell()'s original signature and added
an overloaded trashShell so that the 
tests in the hdfs project do not need to be changed., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480629/trash8.patch
  against trunk revision 1128003.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 17 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.fs.viewfs.TestViewFsTrash

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/533//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/533//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/533//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480632/trash9.patch
  against trunk revision 1128003.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 17 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.fs.viewfs.TestViewFsTrash

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/534//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/534//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/534//console

This message is automatically generated., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480908/trash10.patch
  against trunk revision 1128789.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 17 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/540//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/540//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/540//console

This message is automatically generated., as I was reviewing trash10.patch I did some trivial cleanup: fixed up a couple of typos, renamed "homedir" to "homedirPrefix", and relocated the new variable definition up to the top of the classes along with the rest of 
them.

Sanjay, if these edits look OK to you, then +1., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480962/trash11.patch
  against trunk revision 1128789.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 18 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/546//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/546//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/546//console

This message is automatically generated., Integrated in Hadoop-Common-trunk-Commit #632 (See [https://builds.apache.org/hudson/job/Hadoop-Common-trunk-Commit/632/])
    HADOOP-7284 Trash and shell's rm does not work for viewfs

sradia : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1129989
Files : 
* /hadoop/common/trunk/CHANGES.txt
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ViewFs.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ChRootedFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/InodeTree.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/shell/Delete.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/ViewFileSystemTestSetup.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/TestTrash.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/Trash.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestChRootedFs.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestChRootedFileSystem.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestViewFsTrash.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/Constants.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestFSMainOperationsLocalFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ConfigUtil.java
, Integrated in Hadoop-Common-trunk #706 (See [https://builds.apache.org/hudson/job/Hadoop-Common-trunk/706/])
    HADOOP-7284 Trash and shell's rm does not work for viewfs

sradia : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1129989
Files : 
* /hadoop/common/trunk/CHANGES.txt
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ViewFs.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ChRootedFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ViewFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/InodeTree.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/shell/Delete.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/ViewFileSystemTestSetup.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/TestTrash.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/Trash.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestChRootedFs.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestChRootedFileSystem.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestViewFsTrash.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/Constants.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/viewfs/TestFSMainOperationsLocalFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/viewfs/ConfigUtil.java
, Work apparently related to the issues being discussed here, were also discussed in HADOOP-6345 and HADOOP-7175., Marking JIRA resolved, since Sanjay committed this last week.]