[I believe this was a side-effect of the MAPREDUCE-5960 change.  [~jira.shegalov] would you mind taking a look?, Jason, I added a regression test and a fix., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12687342/HADOOP-11409.001.patch
  against trunk revision a095622.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 3 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5273//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5273//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5273//console

This message is automatically generated., findbugs report appears unrelated. , Thanks for the patch, Gera!

When we throw the exception due to lacking a scheme, it would be very helpful to users to mention the property where the bad URI originated to show them what needs to be changed.

The unit test should have an Assert.fail call or something similar after the getFileContext call, otherwise the lack of throwing an exception for a bad fs URI will still pass the test.

"Excpected" s/b "Expected", Thanks for review, Jason! 002 to accommodate for your comments. In addition I made the UNFsE message in AbstractFileSystem more descriptive., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12687845/HADOOP-11409.002.patch
  against trunk revision 316613b.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 3 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.ha.TestZKFailoverControllerStress

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5295//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5295//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5295//console

This message is automatically generated., +1 lgtm.  Findbug warnings and test failure is unrelated.  Committing this., Thanks, Gera!  I committed this to trunk and branch-2., FAILURE: Integrated in Hadoop-trunk-Commit #6751 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6751/])
HADOOP-11409. FileContext.getFileContext can stack overflow if default fs misconfigured. Contributed by Gera Shegalov (jlowe: rev b9d49761f72078a0a83137ba8197d08b71f385e0)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileContext.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #46 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/46/])
HADOOP-11409. FileContext.getFileContext can stack overflow if default fs misconfigured. Contributed by Gera Shegalov (jlowe: rev b9d49761f72078a0a83137ba8197d08b71f385e0)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileContext.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #780 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/780/])
HADOOP-11409. FileContext.getFileContext can stack overflow if default fs misconfigured. Contributed by Gera Shegalov (jlowe: rev b9d49761f72078a0a83137ba8197d08b71f385e0)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileContext.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1978 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1978/])
HADOOP-11409. FileContext.getFileContext can stack overflow if default fs misconfigured. Contributed by Gera Shegalov (jlowe: rev b9d49761f72078a0a83137ba8197d08b71f385e0)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileContext.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #43 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/43/])
HADOOP-11409. FileContext.getFileContext can stack overflow if default fs misconfigured. Contributed by Gera Shegalov (jlowe: rev b9d49761f72078a0a83137ba8197d08b71f385e0)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileContext.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #47 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/47/])
HADOOP-11409. FileContext.getFileContext can stack overflow if default fs misconfigured. Contributed by Gera Shegalov (jlowe: rev b9d49761f72078a0a83137ba8197d08b71f385e0)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileContext.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1997 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1997/])
HADOOP-11409. FileContext.getFileContext can stack overflow if default fs misconfigured. Contributed by Gera Shegalov (jlowe: rev b9d49761f72078a0a83137ba8197d08b71f385e0)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileContext.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/AbstractFileSystem.java
]