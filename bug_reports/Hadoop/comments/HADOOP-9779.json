[+1 for the idea., Added RpcConstants.CLIENT_ID_LENGTH and changed RetryCache to use CLIENT_ID_LENGTH ., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12594712/HADOOP-9779.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2863//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2863//console

This message is automatically generated., +1.

There may be other places in the code that use a raw 16, but we can convert them later now that the constant exists., I see no reason to define another RpcRetryCache#clientIdLength. Also capacity calculation of RetryCache where 16 is used has no relationship to UUID length. I think Jing's patch is covering this quite comprehensively in HDFS-5025. We should perhaps go with it., OK, I'll check Jing's patch., Updated the patch based on HDFS-5025's patch. Changes are as follows:

1. ClientId.BYTE_LENGTH uses RpcConstants.CLIENT_ID_LENGTH.
2. RetryCache constructor uses maxCapacity instead of hardcoded 16.
3. CacheEntry uses ClientId.getMsb/getLsb instead of calculating its values directly., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12595390/HADOOP-9779.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2903//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2903//console

This message is automatically generated., Thanks for looking at this, Tsuyoshi.  However, I think I agree with Suresh here-- HDFS-5025 probably did all we need for the client ID length.  I don't see any need for {{RpcConstants.CLIENT_ID_LENGTH}} if all it is used for is initializing {{ClientId.BYTE_LENGTH}}.

bq. 2. RetryCache constructor uses maxCapacity instead of hardcoded 16.

Unless I'm misunderstanding something, this change doesn't seem related to the client ID length.  I would suggest a separate JIRA for this one to avoid confusion.

So:
* close this as a duplicate of HDFS-5025?
* create separate JIRA for RetryCache constants?

sound good?, Yes, I agree with you., Close as a duplicated issue of HDFS-5025., Moved to HADOOP-9821 and HADOOP-9822.]