[Thanks for the patch, [~nkollar].  Looks to me like that conditional should also be handling the case where {{conf.get()}} returns null.  In that case you should get a warning.  The easiest thing to do may be to pass {{""}} as the default to the {{conf.get()}} call., [~templedf] thanks for the comments! Attached patch HADOOP-14459_2.patch. It seems that the original problem (HADOOP-8588) is no longer present with getTrimmedStrings, looks like only getStrings caused NPE in this case. In the second diff, a warning is emitted if the value is not defined, or is set to null. If it is undefined, then SerializationFactory will use the defaults passed to getTrimmedStrings, but for empty value nothing is added. Daniel, what do you think?, I think that works for me.  I think the last thing that would make it really crisp for me would be to add a statement to the log warning that says the default settings are being used.  Other than that, LGTM., [~templedf] looks like if were using getTrimmedStrings like in HADOOP-11512, we wouldn't get the NPE which HADOOP-8588 intend to solve. How about just simply replacing getStrings to getTrimmedStrings? I think it would solve both this NPE and NPE in HADOOP-8588. Attached HADOOP-14459_3.patch, could you please review?, Patch looks good to me.  My one comment is that it would be nice to add a comment to the test explaining why it doesn't appear to be doing anything useful, so that the next person isn't confused by it., Thanks Daniel for your comment, added a comment to the new test case., Works for me.  Last thing is that the spacing is off on all the comment lines but the first, and you may as well make it a javadoc comment., [~templedf] uploaded patch with fixed spacing., LGTM +1, Oops, wait.  In my last pass before committing, I noticed that there's now an extra space after the colon in the for loop.  Since I'm gonna make you post a new patch for that, you should also change {{<code>X</code>}} to {code}{@code X}{code} in the javadocs., [~templedf] done, attached patch. Is there any style checker which failed before committing? Asking this so next time I should also execute it before attaching a patch., Yes, there is.  It runs when you press the Submit Patch button.  My bad.  I should have noticed that there wasn't a Jenkins report.  I pressed the button for you.  Expect a report in a few hours., Ok, can I execute it from Maven?, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 13m  4s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 13m 53s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 36s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  1s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 32s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 20s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 53s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 36s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 10m 24s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 36s{color} | {color:orange} hadoop-common-project/hadoop-common: The patch generated 2 new + 15 unchanged - 2 fixed = 17 total (was 17) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 57s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 19s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 28s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  7m 20s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 32s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 73m 59s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:71bbb86 |
| JIRA Issue | HADOOP-14459 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12890174/HADOOP-14459_6.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 2aa270049ca3 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 453d48b |
| Default Java | 1.8.0_144 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/13447/artifact/patchprocess/diff-checkstyle-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/13447/testReport/ |
| modules | C: hadoop-common-project/hadoop-common U: hadoop-common-project/hadoop-common |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/13447/console |
| Powered by | Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks for the patches, [~nkollar].  Committed to trunk and branch-3.0., SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #13023 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/13023/])
HADOOP-14459. SerializationFactory shouldn't throw a (templedf: rev 20e9ce3ab33599d2ac6859a8319e1ce0bf0a4363)
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/serializer/SerializationFactory.java
* (edit) hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/io/serializer/TestSerializationFactory.java
, There is a test-patch profile for Maven, but it's a pain to use.  It's usually easier to just post the patch and let Jenkins do the work., Thanks [~templedf] for reviewing and committing this patch!]