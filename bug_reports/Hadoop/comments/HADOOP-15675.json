[bq.  stopped working on trunk somewhere between April and July 2018.

AFAIK, nothing has changed in Yetus that would impact checkstyle during that time frame.  More than likely, the code around the patch changed during that time frame.

Also:

{code}
dev-support/bin/test-patch  --plugins="-checkstyle" test.patch
{code}

a) That's an old version of Yetus.  Hadoop can't upgrade the in-tree version until 0.8.0 is released. (See HADOOP-14671)

b) -checkstyle should actually disable the checkstyle plugin.  If it doesn't, Yetus probably has a bug there.  But given that's such an old version... 
, After playing with this a bit, 

a) checkstyle in HDFS for Hadoop doesn't work because someone munged the suppressions file:

{code}
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-checkstyle-plugin:3.0.0:checkstyle (default-cli) on project hadoop-hdfs: An error has occurred in Checkstyle report generation. Failed during checkstyle execution: Failed to load suppressions file from: /testptch/hadoop/hadoop-hdfs-project/hadoop-hdfs/target/checkstyle-suppressions.xml: Unable to parse /testptch/hadoop/hadoop-hdfs-project/hadoop-hdfs/target/checkstyle-suppressions.xml - invalid files or checks or message format: Dangling meta character '*' near index 0
{code}

b) Yetus should be reporting that checkstyle failed to work rather than blankly saying it passed due to no differences., HDDS-119 is the culprit. , Thanks Allen for the lightning triage! Agreed Yetus should rather fail so people can notice...

I have pinged HDDFS-119 for the checkstyle fix as well., Thanks [~aw] and [~xiaochen] for the comments and for fixing the issue! It seems that reverting HDDS-119 fixed it when run by the pre commit.

It still shows false positive report for me locally (without the "-checkstyle"), but you are right [~aw], that can be because the in-tree version of yetus is very old., While working with YETUS-660, it's become evident that the strategy of bundling the checkstyle suppressions file into the hadoop-build-tools jar makes it extremely likely that checkstyle changes will get missed during a build.  I believe I have a way to mitigate it during precommit, but as it stands, individual users are *very likely* to have problems., Thanks [~aw] for creating YETUS-660! I think it would be good to have it working for the precommit at least.]