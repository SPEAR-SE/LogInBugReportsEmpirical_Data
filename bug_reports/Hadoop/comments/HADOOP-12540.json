[[~gouravk], I have started seeing failures in {{TestAzureFileSystemInstrumentation#testClientErrorMetrics}} since I committed your HADOOP-12508 patch.  The failure is intermittent in nature, so I didn't spot the problem before I committed.  Would you please fix this test?  Note that this is one of the live tests, so you'll need to set up credentials to a live Azure Storage account in azure-test.xml or azure-auth-keys.xml for testing your patch., This will be a test-only fix.  You'll need to come up with a different way to simulate an error so that we can assert the metrics system counted the error correctly., The patch provides a new way to induce client error thus ensuring test functions as expected. Instead of relying on the delete mechanism we simulate the error now by creating a file, then acquiring a short lease on it and then trying to write on it without the lease
, Hi [~gouravk].  Yes, I think this will work fine overall.  A few nitpicks:

# The attached patch file appears to be UTF-16.  Please make sure to save as ASCII in the next revision.  I tested the current patch revision by running {{iconv -f UTF-16 -t ASCII HADOOP-12540.01.patch}}.
# Please remove the {{System.out}} call, which I assume is left over from debugging.
# There is a small chance of a resource leak if {{fs.create}} succeeds, but then {{testAccount.acquireShortLease}} throws an exception.  I recommend moving both the {{fs.create}} and the {{testAccount.acquireShortLease}} within the first {{try}} block.

Thank you!, Thanks [~cnauroth] for the review. Addressed your comments and re-submitting patch now, {code}
    String leaseID = "";
{code}

If the attempt to create the file or acquire the lease fails with an exception, then {{leaseID}} will remain the empty string.  Then, in the {{finally}} block, it would call {{testAccount.releaseLease}} with an empty string.  Is that legal?  I was expecting to see {{leaseID}} set to {{null}} before the {{try}} block, and then the {{finally}} block guards the {{releaseLease}} with a check for {{null}} before making the call.

I'll be +1 (pending Jenkins) after that's addressed.  Thanks!, I see patch v02 now sets {{leaseID}} to {{null}}, but then there is still an unguarded {{releaseLease}} in the {{finally}} block.  Similar to my last question, is it legal to pass {{null}} to the {{releaseLease}} call?  Intuitively, I would think not, so I was really looking for this in the {{finally}} block:

{code}
    if (leaseID != null) {
      testAccount.releaseLease(leaseID, fileName);
    }
{code}

BTW, I noticed you deleted the old v02 patch and uploaded a new one with the same name.  Instead, would you please leave the old files there and use a new file name with the revision number incremented?  We prefer to maintain an unaltered history of the patch revisions.

Thanks again!, Done, yes that was missing, addressed it now. The new v03 patch should have the fix, Patch v03 looks good.  +1 pending Jenkins., | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 14s {color} | {color:blue} docker + precommit patch detected. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 20s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 15s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 14s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 9s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 16s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 33s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 13s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 15s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 17s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 13s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 13s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 15s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 15s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 8s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 13s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 41s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 15s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 15s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 1m 7s {color} | {color:green} hadoop-azure in the patch passed with JDK v1.8.0_66. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 1m 21s {color} | {color:green} hadoop-azure in the patch passed with JDK v1.7.0_79. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 29s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 11m 46s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.7.0 Server=1.7.0 Image:test-patch-base-hadoop-date2015-11-04 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12770460/HADOOP-12540.03.patch |
| JIRA Issue | HADOOP-12540 |
| Optional Tests |  asflicense  javac  javadoc  mvninstall  unit  findbugs  checkstyle  compile  |
| uname | Linux 1d30182d439c 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HADOOP-Build/patchprocess/apache-yetus-d0f6847/precommit/personality/hadoop.sh |
| git revision | trunk / 194251c |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_66 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_79 |
| findbugs | v3.0.0 |
| JDK v1.7.0_79  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8019/testReport/ |
| modules | C: hadoop-tools/hadoop-azure U: hadoop-tools/hadoop-azure |
| Max memory used | 226MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8019/console |


This message was automatically generated.

, I have committed this to trunk and branch-2.  Gaurav, thank you for contributing the patch., FAILURE: Integrated in Hadoop-trunk-Commit #8757 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8757/])
HADOOP-12540. TestAzureFileSystemInstrumentation#testClientErrorMetrics (cnauroth: rev 0fb1867fd62b5df664ad66386d6067db8fbf2317)
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/metrics/TestAzureFileSystemInstrumentation.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk-Java8 #639 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/639/])
HADOOP-12540. TestAzureFileSystemInstrumentation#testClientErrorMetrics (cnauroth: rev 0fb1867fd62b5df664ad66386d6067db8fbf2317)
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/metrics/TestAzureFileSystemInstrumentation.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2569 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2569/])
HADOOP-12540. TestAzureFileSystemInstrumentation#testClientErrorMetrics (cnauroth: rev 0fb1867fd62b5df664ad66386d6067db8fbf2317)
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/metrics/TestAzureFileSystemInstrumentation.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk #1362 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/1362/])
HADOOP-12540. TestAzureFileSystemInstrumentation#testClientErrorMetrics (cnauroth: rev 0fb1867fd62b5df664ad66386d6067db8fbf2317)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/metrics/TestAzureFileSystemInstrumentation.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #628 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/628/])
HADOOP-12540. TestAzureFileSystemInstrumentation#testClientErrorMetrics (cnauroth: rev 0fb1867fd62b5df664ad66386d6067db8fbf2317)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/metrics/TestAzureFileSystemInstrumentation.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #572 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/572/])
HADOOP-12540. TestAzureFileSystemInstrumentation#testClientErrorMetrics (cnauroth: rev 0fb1867fd62b5df664ad66386d6067db8fbf2317)
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/metrics/TestAzureFileSystemInstrumentation.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #2510 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2510/])
HADOOP-12540. TestAzureFileSystemInstrumentation#testClientErrorMetrics (cnauroth: rev 0fb1867fd62b5df664ad66386d6067db8fbf2317)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/metrics/TestAzureFileSystemInstrumentation.java
]