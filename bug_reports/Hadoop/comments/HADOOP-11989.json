[Below snippets need to be modified to include double dash also while constructing the command.

{code:title=Shell.java|borderStyle=solid}
/** Return a command for determining if process with specified pid is alive. */
  public static String[] getCheckProcessIsAliveCommand(String pid) {
    return Shell.WINDOWS ?
      new String[] { Shell.WINUTILS, "task", "isAlive", pid } :
      new String[] { "kill", "-0", isSetsidAvailable ? "-" + pid : pid };
 }
{code}

{code:title=Shell.java|borderStyle=solid}
/** Return a command to send a signal to a given pid */
  public static String[] getSignalKillCommand(int code, String pid) {
    return Shell.WINDOWS ? new String[] { Shell.WINUTILS, "task", "kill", pid } :
      new String[] { "kill", "-" + code, isSetsidAvailable ? "-" + pid : pid };
 }
{code}, Please provide it as a patch. Assuming we have enough test-cases already, Jenkins should be able to validate it on the usual OS we run tests on., [~vinodkv] Duplicating YARN-3561 issue and will provide a patch for this soon., I could think of two approaches to do this,

# Adding double dash (--) in all cases irrespective of whether setsid is enabled or not
# Adding double dash (--) only when setsid is enabled

Currently submitting the patch based on approach 1. (created trunk branch)

[~vinodkv] Please review the patch., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 37s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 29s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 28s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   1m  6s | The applied patch generated  1 new checkstyle issues (total was 97, now 98). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 33s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 40s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | common tests |  22m 58s | Tests passed in hadoop-common. |
| | |  59m 55s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12733565/HADOOP-11989.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / a6af024 |
| checkstyle |  https://builds.apache.org/job/PreCommit-HADOOP-Build/6729/artifact/patchprocess/diffcheckstylehadoop-common.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6729/artifact/patchprocess/testrun_hadoop-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/6729/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf901.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6729/console |


This message was automatically generated., Assuming the setSIDIsAvailable works on fedora/deb, it should work on all systems.. right? [~stevel@apache.org], my main concern is whether the {{--}} prefix works across all versions of Unix

though a test on OS/X answers that
{code}
$ kill -0 -- 1971
kill: illegal process id: --
{code}

Now, assuming that all platforms which support {{setsid}} also support {{--}} in kill, the string could be built up with setsid awareness checked first
{code}
if (isSetsidAvailable) 
 // kill -X -- -pid
else
// kill -X pid

after all, the -- is only needed on some setsid-aware platforms


, bq. my main concern is whether the -- prefix works across all versions of Unix

It does.  It's actually a POSIX shell trick from way back., Allen -thanks for that.

Looking in to why it was failing for me, it's because my shell is "fish", not "bash". Switch to bash and all works, so it will work in any bash shell spawned by the NM.

We don't care about cygwin any more, do we?, Maybe its best if this patch adds a unit test for the kill wrapper... right?  , [~stevel@apache.org] Thanks for your comment, and I did check this command usage on debain as well as OS/X. And now tested in cygwin as well, it works with double dash (--). Please suggest whether I need to modify the patch or not.

[~jayunit100] sure, will try to add test and resubmit the patch., Tried adding test case but it fails with,
{quote}
ExitCodeException exitCode=1: kill: illegal process id: --
{quote} 

Added a test case by getting the current process id and doing "kill -0 -- <proc_id>" to check command execute properly with out any any ExitCodeException (since its an running process).

But the same command works in shell, but not through test case. (my working environment is OS/X)

{code}
       public void testCheckProcessAliveCommand() throws Exception {
		String processName = ManagementFactory.getRuntimeMXBean().getName();
		long processId = Long.parseLong(processName.split("@")[0]);
		String[] isAliveCommand = Shell.getCheckProcessIsAliveCommand(String
				.valueOf(processId));
		System.out.println(Arrays.toString(isAliveCommand));
		Shell.ShellCommandExecutor shexec = new Shell.ShellCommandExecutor(
				isAliveCommand);
		try {
			shexec.execute();
		} catch (Exception e) {
			e.printStackTrace();
			fail("command should not throw exception : " + e.getMessage());
		}
	}
{code}

Can anyone please help me out here? Thanks., I missed looking at this before. I have the proper fix and unit test case at HADOOP-12317. Your test case is failing because the "--"  is needed only when using the negative process id. See the documentation link I posted in that jira. Appreciate your review of the patch at HADOOP-12317., tagging HADOOP-12317 as the successor]