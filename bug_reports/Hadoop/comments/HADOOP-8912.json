[Please do not submit this, until HADOOP-8911 is submitted., Let's do this for trunk and branch-2 as well., I have patches ready for trunk also. I am just waiting for this to be accepted and will submit the other patches., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12548601/HADOOP-8912.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1599//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1599//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12548647/HADOOP-8912.trunk.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1606//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1606//console

This message is automatically generated., Maybe I'm missing something, but I don't see how this will actually prevent CRLF and LF files from getting checked in to the repo, since actual commits/merges are done via svn, not git. The svn repo is mirrored to a git repo, but that repo is read only., I am not sure how many people pull from git, but this would help only a subset of developers.
This will only prevent CR/LF from developers, who clone from a git repo, make changes and submit a patch., Ah, got it. Thanks for the explanation. It will help for those developers who clone the git repo and `git add ...' their files before generating a patch. In that case, it will help somewhat to commit this, but it won't solve the problem 100% of the time.

Raja, do you happen to know if there's a semantically equivalent thing we could do for svn, to ensure that committers don't check in bad line endings?, It can definitely be achieved with a pre-commit hook with svn. A small script that disallows CRLF for known file types and text files would do the trick. It should be pretty straight forward to do this.
I am not quite sure with apache infrastructure, if they let you run these triggers on their servers etc.,, +1 for the patch. We should figure out a way to do this for svn and do it in a separate jira., I committed the patch to trunk, branch-2 and 1-win.

Thank you for the patch Raja., Integrated in Hadoop-Hdfs-trunk-Commit #2915 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2915/])
    HADOOP-8912. Adding missing CHANGES.txt changes in the previous commit 1397437. (Revision 1397438)
HADOOP-8912. Add .gitattributes file to prevent CRLF and LF mismatches for source and text files. Contributed by Raja Aluri. (Revision 1397437)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1397438
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt

suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1397437
Files : 
* /hadoop/common/trunk/.gitattributes
, Integrated in Hadoop-Common-trunk-Commit #2853 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2853/])
    HADOOP-8912. Adding missing CHANGES.txt changes in the previous commit 1397437. (Revision 1397438)
HADOOP-8912. Add .gitattributes file to prevent CRLF and LF mismatches for source and text files. Contributed by Raja Aluri. (Revision 1397437)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1397438
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt

suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1397437
Files : 
* /hadoop/common/trunk/.gitattributes
, Integrated in Hadoop-Mapreduce-trunk-Commit #2877 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2877/])
    HADOOP-8912. Adding missing CHANGES.txt changes in the previous commit 1397437. (Revision 1397438)
HADOOP-8912. Add .gitattributes file to prevent CRLF and LF mismatches for source and text files. Contributed by Raja Aluri. (Revision 1397437)

     Result = FAILURE
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1397438
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt

suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1397437
Files : 
* /hadoop/common/trunk/.gitattributes
, Integrated in Hadoop-Hdfs-trunk #1193 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1193/])
    HADOOP-8912. Adding missing CHANGES.txt changes in the previous commit 1397437. (Revision 1397438)
HADOOP-8912. Add .gitattributes file to prevent CRLF and LF mismatches for source and text files. Contributed by Raja Aluri. (Revision 1397437)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1397438
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt

suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1397437
Files : 
* /hadoop/common/trunk/.gitattributes
, Integrated in Hadoop-Mapreduce-trunk #1224 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1224/])
    HADOOP-8912. Adding missing CHANGES.txt changes in the previous commit 1397437. (Revision 1397438)
HADOOP-8912. Add .gitattributes file to prevent CRLF and LF mismatches for source and text files. Contributed by Raja Aluri. (Revision 1397437)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1397438
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt

suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1397437
Files : 
* /hadoop/common/trunk/.gitattributes
]