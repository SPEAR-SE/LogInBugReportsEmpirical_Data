[I'm not going offer any of my limited time to help with this, but I will note that I've worked on build files in the past that <exec> a native tar -xf and then run the build file in the expanded directory just to check that the redistributable works. That is, it's possible to automated the test that your redistributables build.

That said, I'm normally reluctant to provide redists that compile, as encouraging people to check out from SVN actually put them half-way to doing a real fix to correct a problem -lets you answer the "does the problem go away in SVN_HEAD" question, and if the answer is no, puts them in a place to do the patch. Perhaps native code is special in that you do need to rebuild it for different target platforms. In which case, perhaps someone needs to be thinking of source RPM/deb packages., I agree that releases should be buildable when unpacked: if they're not, that should be a blocking bug.

However I do not see that we need Ant-independent builds.  We currently require Ant to build Hadoop.  So this part does not seem like a bug.  Changing things so that the native code can be built without Ant would be a new feature that we should discuss separately from making sure that native sources in release tarballs are buildable.  Does that make sense?
, One possible deficiency in the current native code compilation is that On modern 64-bit capable intel processors, we would compile either 32-bit or 64-bit native library depending on the version of JVM being used by ant.

Typically, we invoke the build process twice, with 32-bit and 64-bit jvm without cleaning the build directory, so that the release version can be used without worrying about which version of jvm is used in the cluster.

Might it be better if we just build both 32-bit and 64-bit versions up front?, The native parts can be compiled separately. They are autoconf'd. What does need to get fixed:

* Autoconf files that should not be committed (config.guess, config.sub, ltmain.sh) need to be removed
* The ant scripts need to call the standard autoreconf commands themselves for developers
* When src tarballs are made the equlivent of make dist needs to be called so that there are no autoconf version problems its all in one configure script

The current setup can result in weird errors on various platforms depending on what auto toolchains you have installed. This isn't hard almost all the right places are in the current build.xml files. The tarball make dist part is slightly harder.
]