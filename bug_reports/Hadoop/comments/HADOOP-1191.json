[This patch addresses the issue., I just committed  this.  Thanks, Devaraj!, Argh.  I committed this too soon.  It causes unit tests to hang.  I talked to Owen & he saw the underlying problem: Client.java traps InterruptedException, so Thread.join() won't return if the thread is in an RPC when interrupted.  I have a patch I will submit soon., This changes Client.call()'s signature to throw InterruptedException, changing a public API in a patch for a point release.  But I don't think anyone actually uses this public API, instead using the RPC api layered on top of it, so I doubt this will break anyone.  Now, if a protocol method declares that it throws InterruptedException, then an RPC can be interrupted, as expected.

TaskUmbilicalProtocol.progress() is also changed to throw InterrruptedException.  This change only affects client-side code, and so is back-compatible., +1 to the improved fix., -1, because the patch command could not apply the latest attachment http://issues.apache.org/jira/secure/attachment/12354785/1191-2.patch as a patch to trunk revision http://svn.apache.org/repos/asf/lucene/hadoop/trunk/524929. Please note that this message is automatically generated and may represent a problem with the automation system and not the patch. Results are at http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch, I committed this., Integrated in Hadoop-Nightly #46 (See http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/46/)]