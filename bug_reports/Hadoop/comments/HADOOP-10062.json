[Platform, JDK version?, I use CentOS 6.4 and JDK 1.6.0_31., I confirmed the change of the value in the test.
And I confirmed that there was the case which a order of the handling of MetricsSystemImpl#publishMetrics reversed.
This problem can be solved by synchronizing MetricsSystemImpl#publishMetricsNow.

I attach a patch file.
, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12612808/HADOOP-10062.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3269//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3269//console

This message is automatically generated., Since publishMetrics is already synchronized, I don't see how the additional lock help. The barrier fix in the test looks more promising. Can you verify that the barrier only fix works?, I tested the patch only for fixing of the barrier. But, the failure of the test sometimes occurred.
I dumped the values of metrics in MetricsSystemImpl#publishMetrics method.  And timestamp in the record seems to reverse at the time of the failure (HADOOP-10062-failed.txt).
In other words a order to call MetricsSystemImpl#publishMetrics seems to have a problem., I think the following has more to do with the failure than anything else:
{code}
WARN  impl.MetricsSinkAdapter (MetricsSinkAdapter.java:putMetricsImmediate(112)) - hanging couldn't fulfill an immediate putMetrics request in time. Abandoning.
{code}

Is your environment physical or virtual?, bq.  Is your environment physical or virtual?

I confirmed it in both physical and virtual. 
And, the following message was output in TestMetricsSystemImpl#testHangingSink and it was output both success and fail.

{code}
WARN  impl.MetricsSinkAdapter (MetricsSinkAdapter.java:putMetricsImmediate(112)) - hanging couldn't fulfill an immediate putMetrics request in time. Abandoning.
{code}, I attach a patch which has only barrier fix., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12615090/HADOOP-10062.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3306//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3306//console

This message is automatically generated., I'd like to revive interest in this. We see this test fail with some regularity in our CI environment (CentOS 6 w/ JDK 7).

Clearly we need the fix in the current patch as the test waits on the wrong barrier.

In addition, MetricsSystemImpl.publicMetricsNow() is not quite correct in synchronization because sinks.size() > 0 are checked unsynchronized (sinks is not a thread-safe data structure). So that needs to be fixed. However, I don't believe that is causing this test to fail (I don't think sinks are mutated while test threads run).

Is the failure reproduced with the barrier fix? If so, could it be some kind of missed signals between the sink thread and the main thread, or something along that line? These are guesses at the moment., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12615090/HADOOP-10062.patch
  against trunk revision d336d13.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5402//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5402//console

This message is automatically generated., OK, after looking into it a little more I believe [~sinchii]'s original patch is essentially right. The barrier usage is obviously wrong, but what might be more relevant is the following line of code in MetricsSystemImpl.publishMetricsNow():

{code}
publishMetrics(sampleMetrics(), true);
{code}

Although sampleMetrics() and publishMetrics() are individually synchronized, the line as a whole is invoked without synchronization. Thus it is racy, and the publishing order of the samples can be inverted.

Somewhat apart from this, the publishMetricsNow() method should be synchronized to be thread safe (as sinks is not a thread-safe data structure). I'll post that patch shortly., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12692418/HADOOP-10062.003.patch
  against trunk revision 5805dc0.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5406//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5406//console

This message is automatically generated., I'd appreciate a review of the patch. Thanks!, This would fix the test, but the test will probably fail again if one set the regular metrics publish interval to be small. A cleaner fix would change the system to use ScheduledExecutorService (instead of the timer) with a thread pool of one thread and have publishMetricsNow do an out of band service.execute(...)., Thanks for your feedback [~vicaya]!

I did look at the timer-driven regular publishing route, but it seems to me that by synchronizing publishMetricsNow() an inversion cannot happen even with regular publishing (inversion meaning earlier sampling pushed to the sinks later). In both code paths (onTimerEvent() and publishMetricsNow()), sample --> publish --> sinkadapter enqueue() would happen atomically while holding the lock. Assuming SinkQueue is a FIFO queue, this would certainly guarantee no inversion.

Could you kindly point out under what conditions a failure would occur? Thanks!

Having said that, I do like the idea of using ScheduledExecutorService over the Timer, as in general it is more robust in case of unexpected exceptions. I could make that change if needed., You're right. Your current fix is good enough for correctness and low risk. +1 for the patch. Using ScheduledExecutorService is just a little cleaner, which can be deferred., Thanks Luke. I'd greatly appreciate if you could merge it at some point (both to trunk and branch-2).

I'll also update the title to reflect the fact that there was really an issue with the non-test metrics code (after all the multi-threaded test did flush out the issue so it did its job :))., Ping?, Hi [~sjlee0], the patch LGTM. Kick off Jenkins again now. 
+1 pending on Jenkins result., Thanks [~djp]!, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12692418/HADOOP-10062.003.patch
  against trunk revision cc6bbfc.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5591//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5591//console

This message is automatically generated., I have commit 003.patch to trunk and branch-2. Thanks [~sjlee0] for contributing a patch and [~vicaya] for review!, FAILURE: Integrated in Hadoop-trunk-Commit #7016 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7016/])
HADOOP-10062. race condition in MetricsSystemImpl#publishMetricsNow that causes incorrect results.  (Contributed by Sangjin Lee) (junping_du: rev 0b567f424673b5cea1c3bc23b2bd268ef6b7625f)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/metrics2/impl/TestMetricsSystemImpl.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #95 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/95/])
HADOOP-10062. race condition in MetricsSystemImpl#publishMetricsNow that causes incorrect results.  (Contributed by Sangjin Lee) (junping_du: rev 0b567f424673b5cea1c3bc23b2bd268ef6b7625f)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/metrics2/impl/TestMetricsSystemImpl.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #829 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/829/])
HADOOP-10062. race condition in MetricsSystemImpl#publishMetricsNow that causes incorrect results.  (Contributed by Sangjin Lee) (junping_du: rev 0b567f424673b5cea1c3bc23b2bd268ef6b7625f)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/metrics2/impl/TestMetricsSystemImpl.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #2027 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2027/])
HADOOP-10062. race condition in MetricsSystemImpl#publishMetricsNow that causes incorrect results.  (Contributed by Sangjin Lee) (junping_du: rev 0b567f424673b5cea1c3bc23b2bd268ef6b7625f)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/metrics2/impl/TestMetricsSystemImpl.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #92 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/92/])
HADOOP-10062. race condition in MetricsSystemImpl#publishMetricsNow that causes incorrect results.  (Contributed by Sangjin Lee) (junping_du: rev 0b567f424673b5cea1c3bc23b2bd268ef6b7625f)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/metrics2/impl/TestMetricsSystemImpl.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #96 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/96/])
HADOOP-10062. race condition in MetricsSystemImpl#publishMetricsNow that causes incorrect results.  (Contributed by Sangjin Lee) (junping_du: rev 0b567f424673b5cea1c3bc23b2bd268ef6b7625f)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/metrics2/impl/TestMetricsSystemImpl.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2046 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2046/])
HADOOP-10062. race condition in MetricsSystemImpl#publishMetricsNow that causes incorrect results.  (Contributed by Sangjin Lee) (junping_du: rev 0b567f424673b5cea1c3bc23b2bd268ef6b7625f)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/metrics2/impl/TestMetricsSystemImpl.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java
* hadoop-common-project/hadoop-common/CHANGES.txt
]