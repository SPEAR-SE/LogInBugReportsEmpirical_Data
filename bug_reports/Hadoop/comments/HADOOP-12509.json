[{code}
Key k1 already exists in jceks://file@/home/jenkins/jenkins-slave/workspace/Hadoop-common-trunk-Java8/hadoop-common-project/hadoop-kms/target/427cd298-0850-4b6e-9eda-315ad083a4eb/kms.keystore
Stacktrace

java.lang.AssertionError: Key k1 already exists in jceks://file@/home/jenkins/jenkins-slave/workspace/Hadoop-common-trunk-Java8/hadoop-common-project/hadoop-kms/target/427cd298-0850-4b6e-9eda-315ad083a4eb/kms.keystore
	at org.junit.Assert.fail(Assert.java:88)
	at org.apache.hadoop.crypto.key.kms.server.TestKMS$3$3.run(TestKMS.java:810)
	at org.apache.hadoop.crypto.key.kms.server.TestKMS$3$3.run(TestKMS.java:772)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1669)
	at org.apache.hadoop.crypto.key.kms.server.TestKMS.doAs(TestKMS.java:266)
	at org.apache.hadoop.crypto.key.kms.server.TestKMS.access$100(TestKMS.java:75)
{code}, Not a fix, simply removes the catch and information-losing downgrade to an assert+ error text. Also adding some text for the other asserts and move to <> tags, in the same test case., That stack trace seems oddly clipped.  It's missing the part that points to what test was run.  I poked around Jenkins, but I didn't find a build where that test failed.  A pointer would be appreciated.

Your patch is, as you say, just a cleanup of the test.  Want me to take a stab at finding the actual issue?  I've spent the last few weeks digging around in the KMS., That's part of the problem: the stack trace was missing. Hence the patch.

The jenkins run which was saw this was on saturday; it seems to have been deleted already. I have the page in my browser, so can get a PDF of it, which I'm about to attach.

As to fixing it, yes. I think getting this patch in would be a start, Thanks for the test output.  I really see no reason for this test to have failed.

On your patch, I would recommend adding:

{code}
        Assert.assertTrue("KeyProvider was created with existing keys",
            kp.getKeys().isEmpty());
{code}

after the KP creation.

Also, it seems kinda wrong to fix just one of the tests.  I've started a round of cleanup on the whole of TestKMS.  Seems like we should file a separate JIRA to clean up the tests, and leave this one for actually fixing the issue, should we ever track it down., Dan, this was the one failing on Jenkins; I have enough of those without worrying about the details of adjacent tests.

Like you say, cleanup is separate]