[Attached are a patch to AbstractMapWritable and unit test that demonstrates the NullPointerException for current version of MapWritable., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12458910/AbstractMapWritable.java
  against trunk revision 1031422.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/57//console

This message is automatically generated., Could anyone help me out with properly submitting a patch and use Hudson?  I have attached 3 files:
* AbstractMapWritable.diff which is the output of svn diff.
* AbstractMapWritable.java which is the full source with the patch.
* TestMapWritableNPE.java which is a unit test that demonstrates when the NullPointerException is thrown.

Thanks!, I tidied the new test a bit, putting it into the current TestMapWritable class and using UTF8 as the "foreign class" instead of a one-off example Writable.

Hopefully Hudson will find this patch more digestible; I followed the submission guidelines except for building the tar, which proved cumbersome on CentOS.  , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12466768/HADOOP-7021.patch
  against trunk revision 1051659.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The applied patch generated 1050 javac compiler warnings (more than the trunk's current 1048 warnings).

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/146//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/146//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/146//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12466768/HADOOP-7021.patch
  against trunk revision 1071364.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The applied patch generated 1074 javac compiler warnings (more than the trunk's current 1072 warnings).

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/253//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/253//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/253//console

This message is automatically generated., Hi Jhon,

Your patch contains hardcore tabs, can you remove them?
Also configure your IDE with correct coding formatter rules. Hadoop indentation is two spaces., Thanks Uma for checking the patch. Following you comments I have removed the tabs., Updated patch using the the latest hadoop-common trunk. A code review is requested for this patch., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12490322/HADOOP-7021.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:


    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/37//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/37//artifact/trunk/target/newPatchFindbugsWarningshadoop-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/37//artifact/trunk/target/newPatchFindbugsWarningshadoop-annotations.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/37//console

This message is automatically generated., Does anyone know how to find out which tests did this patch fail?
 
-1 core tests. The patch failed these core unit tests:

Thanks!, Ran dev-support/test-patch.sh using the patch: http://issues.apache.org/jira/secure/attachment/12490322/HADOOP-7021.patch on a fresh svn checkout of hadoop-trunk and this is my output:

+1 overall.  

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version ) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 system test framework.  The patch passed system test framework compile.




======================================================================
======================================================================
    Finished build.
======================================================================
======================================================================
, I accidentally changed the status of this issue to "In Progress" and I can not change it back to "Patch Available" could someone assist me with this?

Also, I have noticed that this issue was submitted more than a year ago (with code to fix the issue), since then I have updated the patch and test code for formatting and to be compatible with the update build layout. Is there anything else that need to done to get this patch review and committed? Thanks., I assigned it to you.  Can you now transition it back to Patch Available?

The best way to get some attention is to send a message to the dev mailing list, politely asking for someone to please look at this.  I will try to have a look at it in a few days if I have a chance., Updated patch to reflect mvn directory structure., Thanks for your help Doug., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12503833/HADOOP-7021.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated 15 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 7 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/378//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/378//artifact/trunk/hadoop-common-project/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/378//console

This message is automatically generated., Received -1 overall but that was due to warnings in findbugs and javadocs which are unrelated to the code introduced by the patch. Resubmitting for review., Any reason this hasn't made it in yet?  Seems like every time John manages to get Hudson to look at this patch, there's some unrelated (or at least not locally reproducable) problem that causes a -1... , {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12503833/HADOOP-7021.patch
  against trunk revision 82db334.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5899//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5899//console

This message is automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12503833/HADOOP-7021.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f0f5e3c |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6545/console |


This message was automatically generated., I don't know why jenkins thinks this doesn't apply.  Let's fire it off., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12503833/HADOOP-7021.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 8f7c236 |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6552/console |


This message was automatically generated., Thanks a lot [~jlee@mindset-media.com] and [~tpierce] for your work on this issue! I'm sorry this has been neglected for so long.

This seems like a legitimate issue. Its unfortunate that we've labeled this class Public and Stable. :( Maybe we will have to put this in trunk only as a backward incompatible change.

I wonder whether the fix is to reconcile newClasses (only on an add) as in this patch, or to actually never let it diverge. Specially because we are also not marking getNewClasses() as private. Here it seems to be diverging because readFields doesn't do "the right thing" . Although it is never explicitly documented, readFields seems to be expected to clear out the original data in the object. Is my understanding correct?
, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12731612/HADOOP-7021.02.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 08f0ae4 |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6563/console |


This message was automatically generated.]