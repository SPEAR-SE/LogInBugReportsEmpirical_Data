[Can we cause counters to somehow be updated far less frequently?, 
Currently tasks are reporting their progress (and now counters) every second.  Is there any reason for this to be so frequent?  Shall I try setting Task.PROGRESS_INTERVAL to 5 seconds instead?

, It might also be interesting to profile the counter code.  I wonder how much faster it would be if instead of a Map<String,Long> we used a Map<String,CounterValue> where CounterValue is defined as something like:

private class CounterValue { long value; }

Then incrementing the value would not require creating a new Long instance., Another possible optimization in JobInProgress#updateTaskStatus might be to keep, for each task, its previous counter values, then compute the difference between those and the new values, and update global counters incrementally rather than recomputing them from scratch each time.  This might not actually reduce the amount of computation much, but it might greatly decrease the amount of allocated objects, and object allocations are considerably more expensive than arithmetic., Could the global counters be computed lazily, on demand, with JobInProgress#updateTaskStatus only updating local values?

, Yes, the per-job totals can be compted lazily.  This is implemented in the patch attached to 1041.

These two Jiras are separate issues with the same code.  Would it make sense to merge them (i.e. close this one as a dup)?

, Yes, looks like HADOOP-1048 is subsumed by HADOOP-1041, This issue is now being tracked as part of Hadoop-1041.]