[this comes from the behavior of java.io.File.renameTo(File)
to see it:
{noformat}
    System.out.println("move to empty dir");
    File tmp = File.createTempFile("tmp_", "_dir");
    tmp.delete();
    tmp.mkdirs();
    File a = new File(tmp, "a");
    File c = new File(tmp, "b/c");
    a.mkdirs();
    new FileWriter(new File(a, "part")).close();
    c.mkdirs();
    System.out.println(a.renameTo(c)); // true
    System.out.println(Arrays.toString(c.listFiles())); // b/c/part

    System.out.println("move to non empty dir");
    File a2 = new File(tmp, "a2");
    File c2 = new File(tmp, "b2/c2");
    a2.mkdirs();
    new FileWriter(new File(a2, "part")).close();
    c2.mkdirs();
    new FileWriter(new File(c2, "dummy")).close();
    System.out.println(a2.renameTo(c2)); // false
{noformat}

Which RawLocalFileSystem is using:
http://svn.apache.org/viewvc/hadoop/common/branches/branch-0.20/src/core/org/apache/hadoop/fs/RawLocalFileSystem.java?view=markup
{noformat}
249 public boolean rename(Path src, Path dst) throws IOException {
250   if (pathToFile(src).renameTo(pathToFile(dst))) {
251     return true;
252   }
253   return FileUtil.copy(this, src, this, dst, true, getConf());
254 }
{noformat}

I would suggest something like:
{noformat}
public boolean rename(Path src, Path dst) throws IOException {
  File srcFile = pathToFile(src);
  File dstFile = pathToFile(dst);
  if (dstFile.exists() && dstFile.isDirectory()) {
    dstFile = new File(destFile, srcFile.getName());
  }
  if (srcFile.renameTo(dstFile)) {
    return true;
  }
  return FileUtil.copy(this, src, this, new Path(dstFile.toURI()), true, getConf());
}
{noformat}
Or possibly move this logic up in the mv command to pass the final path as dst instead of just what was passed to the mv command, Please see discussion from HADOOP-6240., thanks for the link.
What about the branch 20.x ?, branch 20.x, since some of the applications could be dependent on the behavior they might be getting from their implementation of the file system, we decided not to break the compatibility by retaining the old behavior. ]