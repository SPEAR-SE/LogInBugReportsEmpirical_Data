[Ok, this is indeed a deadlock... the issue is that there is a differing order of locks of the parent and child Progress objects in Progress.java.

As shown in the stack trace {{Progress.complete}} locks the child first and then the parent, where as {{Progress.toString(StringBuffer)}} locks the parent first and then the child... straight-forward fix is to ensure that parent is always locked first e.g. in {{Progress.complete}}., Well, it's a little bigger than that. What's happening is that there are 2-3 methods that traverse the tree-like structure of Progress methods, and at least two of them traverse (and obtain locks) in different directions, hence the deadlock. (One of) the right solution is to obtain locks in one direction only - so we lock when going downwards from the root node. This happens in get(), getInternal(), and toString(). If you need to traverse upwards towards the root (in complete()), you either release your lock before getting your parent's (which is what I've chosen to do, since we don't need transactional semantics), or you get locks in the same direction as other traversal methods. 

Another somewhat related issue is that Progress::get(), which is called quite often, always traverses upwards to find the root of a structure. Since a node's root never changes, it should be cached at each node. This certainly improves performance for get(), but it also offers a synch mechanism should we ever need to write code that needs to lock multiple nodes and traverse upwards towards the root. In such a case, the methods can lock the root object to get sole access control to the entire structure. We don't need this for now, but it's a good mechanism to have for the future. 

I have attached a patch (1970_patch01) with these changes, along with lots of comments for reference. , Since this is a fix for 0.14.2, and I shouldn't be adding any new functionality, I've only fixed the problem with the deadlock in 1970_patch02. In a separate issues (HADOOP-1974), I have detailed the larger solution, including caching the root node. , I just committed this. Thanks, Vivek!

(In the future, please generate your patches without the prefix using svn diff from the HADOOP_HOME., Integrated in Hadoop-Nightly #259 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/259/])]