[
1.patch attached. DFSClient.DFSInputStream now maintains a member deadNodes. It clears the list when no live datanode could be found for any block.
, 2.patch contains a small correction.
, +1, because http://issues.apache.org/jira/secure/attachment/12350178/HADOOP-893-2.patch applied and successfully tested against trunk revision r502402., This patch conflicts with HADOOP-692.  Which should take priority?, I vote for HADOOP-692. It has been much better reviewed and it bigger., 
Yes, HADDOP-692. I will update this patch after that. Also Dhruba still hasn't got around to reveiwing this patch., +1. Code looks good.

The patch re-determines alive/dead datanodes only when all the replicas of a block reside on dead-datanodes. Suppose an application opened a file and kept the handle active for an extended period of time (when datanodes can go down and come back up). The randomization behaviour of selecting a random remote node is now going to be different from earlier., It could be helpful to write a simple test using the MiniDFSCluster to test this functionality. Especially to ensure that re-determination of alive/dead occurs when all datanodes for a block are found to be "dead"., 
I am planning to do manual test of various cases including the case where all the nodes are unresponsive. I will look into how we can shutdown nodes in MiniDFSCluster.

Yes, it does change the randomization behavior from earlier. This is one of the changes from existing code.




, 
Corrected the patch after rack-aware  changes. Change is that this patch does not modify DFSClient.bestNode(). bestNodes() does not select a random datanode any more. , Tested with various cases of datanodes going down.
, +1, because http://issues.apache.org/jira/secure/attachment/12350586/HADOOP-893-3.patch applied and successfully tested against trunk revision r504682., I just committed this.  Thanks, Raghu!]