[How about adding this check to the patch queue? That way users submitting patches would become responsible for adding proper headers and not (in the worst case) RM., Attaching patch 2509.patch.1

Before applying this patch download [Latest ART JAR|http://arat.googlecode.com/files/rat-0.5.1.jar] and copy it to lib folder. The jar needs to be "added" to SVN

Once the jar is present at the correct location execute the new auditing target
{quote}
ant releaseaudit 
{quote}

The output of RAT can get a bit too much to read on the console so a better idea is to put it in a log file
{quote}
ant releaseaudit -l build.log
{quote}

Currently its listing a lot of files but once we fix it, we can add it to the "daily build" and if needed make the build fail if license is missing
, Looks like a good start.  A couple suggestions:

 # just have 1 target called 'rat' (it does more than just headers)
 # require the user to download the library (so they get the latest one)
 # add a check for the rat*.jar library before executing the target and fail gracefully
 # perhaps set failonerror (or errorproperty?) so the build will (or can) fail if the rat report indicates an error (provided rat exits with non-zero on error), Attached file 2509.patch.2

Incorporated the following items
{quote}
1. just have 1 target called 'rat' (it does more than just headers)
2. require the user to download the library (so they get the latest one)
3. add a check for the rat*.jar library before executing the target and fail gracefully
{quote}

Is this absolutely critical ... 
{quote}
4. perhaps set failonerror (or errorproperty?) so the build will (or can) fail if the rat report indicates an error (provided rat exits with non-zero on erro)
{quote}

I feel point #4 is something that is "nice to have"  add on may be we can submit the path to fix 1,2,3 and then change the category to "Improvement" and have the priority as "Major".

Please comment.
, Submitting  again with "Grant license to ASF",    If rat.Report exists and gets executed (assuming all the required libraries are in place) but finds missing license headers the JVM which executes rat.Report will still exit with error code 0. So checking the JVM exist code is of no help. 

We can either look for text in the rat.Report output and then fail if say a word XXX exists or we write our own ant task which extends the functionality of rat.Report and then  exist with System.exit (1) when any issues are found. This needs further investigation.


, Ok, let's drop item 4 for now.  RAT is actually moving to the Apache incubator project so more development will occur in the near future (I hope).  Once it's moved there, we can file RFE's for RAT to allow more command line control.  So +1 for this patch., ok great !, This issue was originally about fixing source headers, but turned into adding a rat target to the build.  I have updated the summary and will file a new issue for the header fixes., I updated the patch so it applied and committed it.  Thanks Hrishikesh!, After giving it a thought its not fair to ask the user to put the rat jar in <hadoopbasedir>/lib directory. Since we don't ship the file user should have control over where to keep the extra jar files

The user should either add the ratjar to the system class path or use -lib as a ant command line argument

E.g.
User download rat.jar to directory named $HOME/myjars then the correct way to execute releaseaudit target is 
{quote}
ant -lib $HOME/myjars releaseaudit
{quote}

Attached patch 2509.patch.3

Awating comments... should we reopen the issue and apply patch 2509.patch.3 ?, Reopening as a better solution is available.
, Apply patch 2509.patch.3 , +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12373550/2509.patch.3
against trunk revision r613923.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1671/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1671/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1671/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1671/console

This message is automatically generated., This issue was already committed to 0.16.  Please file a new issue for the improvement and attach the patch.  Mark the new issue for fixing in 0.17.
]