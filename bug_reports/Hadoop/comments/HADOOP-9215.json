[Note I'm using cmake version 2.6-patch 4.  Someone on different jira mentioned using 2.8 fixes this issue, I can't easily install that to test., If a specific version of cmake is required, then the build should fail without it.

http://www.cmake.org/cmake/help/v2.8.10/cmake.html#command:cmake_minimum_required

{noformat}
cmake_minimum_required: Set the minimum required version of cmake for a project.

  cmake_minimum_required(VERSION major[.minor[.patch[.tweak]]]
                         [FATAL_ERROR])

If the current version of CMake is lower than that required it will stop processing the project and report an error. When a version higher than 2.4 is specified the command implicitly invokes

  cmake_policy(VERSION major[.minor[.patch[.tweak]]])

which sets the cmake policy version level to the version specified. When version 2.4 or lower is given the command implicitly invokes

  cmake_policy(VERSION 2.4)

which enables compatibility features for CMake 2.4 and lower.

The FATAL_ERROR option is accepted but ignored by CMake 2.6 and higher. It should be specified so CMake versions 2.4 and lower fail with an error instead of just a warning.{noformat}, bq. Note I'm using cmake version 2.6-patch 4. Someone on different jira mentioned using 2.8 fixes this issue, I can't easily install that to test.

A newer version of cmake fixes this issue (pretty much any version newer than the ancient CentOS 5 version).  If you can't upgrade, a workaround is running "mvn compile" twice (yeah, I know, it sucks.)

I would welcome a patch to fix this (since we still want to support CentOS 5).  The easiest way to do that is probably to manually make the symlink from libhadoop.so to libhadoop.so.1.0.0 (and so forth) in the CMakeLists.txt script.  This could be put into a library file similar to how we do with {{JNIFlags.cmake}}., I also have rhel6 boxes which have cmake 2.6 on them so its not just centOs 5. Also taking a quick look at centos 6.3 I see cmake-2.6.4-5.el6.src.rpm.  (from here http://vault.centos.org/6.3/os/Source/SPackages/)  What version of CentOs has cmake 2.8?  

# cat /etc/redhat-release
Red Hat Enterprise Linux Server release 6.3 (Santiago)
# rpm -qa | grep cmake
cmake-2.6.4-5.el6.x86_64


What Jira introduced this dependency?  Personally I don't think we should be mandating cmake 2.8 version if its not in or easily available for rhel5 or rhel6/CentOs6. I'll go look some more to see if there is easier way for me to get it but it doesn't currently easily come up in yum list for me.

In the very least I think we should have it fail as Charles mentioned.

, We definitely need to support CMake 2.6 since it is present on RHEL5, which we want to support.

I'll take a look at working around this issue in the CMakeLists.txt., here's a patch which solves the issue.

tested with cmake version 2.6-patch 4 on CentOS release 5.8 (Final)., this patch also moves a bunch of common utility functions to {{functions.cmake}}.  This is similar to how we use {{JNIFlags.cmake}} from different {{CMakeLists.txt}}., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12565052/HADOOP-9215.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager:

                  org.apache.hadoop.util.TestNativeCodeLoader
                  org.apache.hadoop.hdfs.server.blockmanagement.TestBlockManager
                  org.apache.hadoop.fs.TestHdfsNativeCodeLoader

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2054//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2054//console

This message is automatically generated., Thanks Colin for taking this on.  So I now see the libhadoop.so and libhdfs.so in :

./hadoop-common-project/hadoop-common/target/native/libhadoop.so
./hadoop-hdfs-project/hadoop-hdfs/target/native/libhdfs.so

However looking more I don't see any *.so* in the tarball or hadoop-dist that is generated.  I'm pretty sure without this change I saw these:
./hadoop-dist/target/hadoop-3.0.0-SNAPSHOT/lib/native/libhadoop.so.1.0.0
./hadoop-dist/target/hadoop-3.0.0-SNAPSHOT/lib/native/libhdfs.so.0.0.0
, Colin - can you please take a look at the failing tests? I'd really like to get this in, it's the only one blocking 2.0.3-alpha for now. Thanks!, Here is a different solution which just runs 'make' twice.  The second make exits almost immediately (make has a very quick startup/shutdown time).  On CentOS 5, this has the side effect of creating the libhadoop.so symlink.

I thought of some other workarounds, but they were all pretty cumbersome.  Even doing the symlink manually did not seem to work-- something in the first invocation of make deletes it on CentOS 5.

A few years from now we can bump up the minimum required version for cmake and drop the hack., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12565162/HADOOP-9215.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2058//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2058//console

This message is automatically generated., Sorry to make you rev the patch again, but can you add a short comment above the second make invocation which explains this workaround, and points to HADOOP-9215? I can see a well-meaning contributor removing it down the line otherwise., The new patch passes all org.apache.hadoop.util.TestNativeCodeLoader and the other tests to ensure that the native libraries are loaded.  No additional tests are included, since the only way to reproduce the problem is to run with cmake 2.6, which is not installed on the build cluster.

However, I verified that the patch fixed the bug with cmake version 2.6-patch 4, on CentOS release 5.8., added a comment, I now see all the *.so files I expect.  so I'm +1 if Todd's good with it.  Thanks Colin!, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12565193/HADOOP-9215.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2059//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2059//console

This message is automatically generated., Yep, looks good to me. Only throwing up in my mouth a tiny bit :) Will commit momentarily., Committed to trunk and branch-2. Thanks for looking into this, Thomas and Colin., Integrated in Hadoop-trunk-Commit #3253 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3253/])
    HADOOP-9215. when using cmake-2.6, libhadoop.so doesn't get created (only libhadoop.so.1.0.0). Contributed by Colin Patrick McCabe. (Revision 1434530)

     Result = SUCCESS
todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1434530
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-pipes/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
, Integrated in Hadoop-Yarn-trunk #99 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/99/])
    HADOOP-9215. when using cmake-2.6, libhadoop.so doesn't get created (only libhadoop.so.1.0.0). Contributed by Colin Patrick McCabe. (Revision 1434530)

     Result = SUCCESS
todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1434530
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-pipes/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
, Integrated in Hadoop-Hdfs-trunk #1288 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1288/])
    HADOOP-9215. when using cmake-2.6, libhadoop.so doesn't get created (only libhadoop.so.1.0.0). Contributed by Colin Patrick McCabe. (Revision 1434530)

     Result = FAILURE
todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1434530
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-pipes/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
, Integrated in Hadoop-Mapreduce-trunk #1316 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1316/])
    HADOOP-9215. when using cmake-2.6, libhadoop.so doesn't get created (only libhadoop.so.1.0.0). Contributed by Colin Patrick McCabe. (Revision 1434530)

     Result = FAILURE
todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1434530
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/pom.xml
* /hadoop/common/trunk/hadoop-tools/hadoop-pipes/pom.xml
* /hadoop/common/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/pom.xml
]