[I think that perhaps this JIRA should have been filed under a different project? This JIRA project is for Hadoop Common., org.apache.hadoop.metrics2.sink.GraphiteSink is in hadoop-common, no?, Oh my bad, I misunderstood what you were getting at here. Yes, I think this the right place. Please carry on. :), [~raviprak] Noticed that you are watching this and were involved with the previous work on the GraphiteSink. I was wondering if you could give me some feedback on this patch before I start working on backporting it. I noticed that the associated test does not actually test the connection as it is mocked. Any thoughts on if the test needs to be changed also?, Hi Dave! Thanks for your contribution! The general approach of creating a base class and extending seems reasonable to me. Please *do* write tests, so that if in the future something breaks this functionality, we discover it before reaching production., Thanks for reviewing. I'll create tests and patches for backporting., [~raviprak] Patch 2 contains updated patch with tests. It appears that the GraphiteSink class is the same in trunk, branch-2, and branch-2.7. Do I need to generate a patch for each of these branches considering that they are the same? Still working on a patch for branch-2.6., Looks like GraphiteSink was refactored in branch-2.7, but does not have any different functionality. Might be able to backport this all the way back to branch-2.6 with no harm., FWIW, I replaced the GraphiteSink class file in my local hadoop installation (CDH 5.4.2) with the new class files. When I started the Hadoop processes without the 'udp=true' parameter, I got a connection refused in the logs. Seems to duplicate what I saw earlier. When I added the 'udp=true' parameter, it connected and started sending metrics., I had a misunderstanding. I was under the impression that Graphite and StatsD used the same protocol. It turns out that the StatsD protocol is different (<metricname>:<value>|<type>) and the StatsD daemon listens on UDP. Graphite listens on TCP with a different plaintext protocol (<metric path> <metric value> <metric timestamp>). I think that I can either close this ticket and open a new one for a StatsD metrics2 sink, or just change the description of this ticket and supply a new patch. Is there a preference?, [~raviprak] I have the StatsD sink working, just want to make a few minor tweaks tomorrow and test some more locally. Please let me know whether I should close this ticket and open a new one, or just modify this ticket to reflect the new goal of adding a StatsD sink., I'm going to close this and create a new ticket. I'll link it here when I create it., Hi Dave! Either way you choose is fine by me. We may also end up breaking out all the MetricsSinks because of this comment. https://issues.apache.org/jira/browse/HADOOP-10949?focusedCommentId=14715894&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14715894]