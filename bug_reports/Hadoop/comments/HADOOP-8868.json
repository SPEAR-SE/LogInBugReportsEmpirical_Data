[Attaching the patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12548362/HADOOP-8868.branch-1-win.chmod.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1586//console

This message is automatically generated., So we are using JAVA API to resolve the path to a normalized form? Ideally the FileUtil method could take File arguments instead of strings but we'd like to avoid changing the public API.
In what cases can we get a mix of slashes on the string path?, Thanks Bikas for the review.

bq. So we are using JAVA API to resolve the path to a normalized form? Ideally the FileUtil method could take File arguments instead of strings but we'd like to avoid changing the public API.
Right. Having File APIs would be great (as Java polishes this up nicely), however, for compat reasons this makes more sense.

bq. In what cases can we get a mix of slashes on the string path?
In one case, a path with only forward slashes was sent to winutils. The path was longer to MAX_PATH (260 chars) so it was prepended with  "\\?\" to tell the OS that the path is longer than 260. In this scenario we had both forward and backward slashes. Now, it makes more sense to do the slash conversion in Java then in winutils, given that Java provides better/tested cross-platform support. Make sense?, Ok. This also avoids cases where a path is composed of a root path from config/default which might contain / and a subpath from locaFS that contains a \.
+1, +1 for the change. I committed the patch to branch-1-win. Thank you Ivan.]