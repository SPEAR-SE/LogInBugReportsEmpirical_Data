[Hi [~mukhadin], thanks for reporting this issue.
Just to be clear, what is the expected error message here? A NamingException is logged here, although CommunicationException message is not logged. I think we can log the query itself, and also the returned result., [~jojochuang], thank you for paying attention!

I'm pretty fine with messages, suggestion was to print stack trace of exceptions, something like:
{code:title=WARN level|borderStyle=solid}
    try {
        // ...
    } catch (CommunicationException e) {
      LOG.warn("Connection is closed, will try to reconnect", e);
    } catch (NamingException e) {
      LOG.warn("Exception trying to get groups for user " + user, e);
      return emptyResults;
    }
{code}

Or if it will generate to much logs - just to provide stack trace on DEBUG level:
{code:title=DEBUG level|borderStyle=solid}
    try {
        // ...
    } catch (CommunicationException e) {
      LOG.warn("Connection is closed, will try to reconnect");
      LOG.debug("Root cause is", e);
    } catch (NamingException e) {
      LOG.warn("Exception trying to get groups for user " + user + ": " + e.getMessage());
      LOG.debug("Root cause is", e);
      return emptyResults;
    }
{code}

----

Had to write something similar to _LdapGroupsMapping_ today to understand what is wrong with my environment and configuration properties.
Exception message only may be not informative enough - today had a problem with self-signed CA and only the 3rd level exception says me this., [~mbuzdov], thank you for reporting the issue.  Since you've already had to debug this in your environment, would you be interested in contributing a patch?  If so, instructions on how to contribute are here:

https://wiki.apache.org/hadoop/HowToContribute

(If you don't want to contribute a patch, then that's fine too, and someone else in the community will pick it up.), [~cnauroth], I didn't debug it as it is, just prepare my own class based on the _Hadoop_ sources to understand problems on my side.
So to contribute I will need to prepare environment on my side to run unit / integration tests at least.

Have too much work right now. If it waits for couple weeks - then it will be my pleasure to provide a patch.
If not - no problem, will provide patch next time for another JIRA.
, FYI -- here' s a list of status codes and what you can refer from the exceptions. We've also had issues with troubleshooting LDAP, so I'm really looking forward to having this place., [~mukhadin], would you mind if I work on this and provide a patch?
I've been debugging LDAP group mapping issues and have some understanding of the error messages., [~jojochuang], sure, will be glad if you will work on this.

But I'm not sure if it is reasonable to handle _LDAP Status Codes_. My suggestion was to add exception/root cause into the logs {color:gray}and not just to ignore it{color}.

----

So my suggestion was just to adjust sources next way:
{code:title=WARN level|borderStyle=solid}
    try {
        // ...
    } catch (CommunicationException e) {
      LOG.warn("Connection is closed, will try to reconnect", e);
    } catch (NamingException e) {
      LOG.warn("Exception trying to get groups for user " + user, e);
      return emptyResults;
    }
{code}
{color:gray}_P.S.:_ And to check if unit/integration test are fine of course.{color}, Thanks. Sure, I think adding the exception plus root cause will help. But some of the error messages are obscure, and I am thinking to add hints for troubleshooting., And just BTW, you probably hit HADOOP-12862 when using your LDAP with self signed certificates., Uploaded v01 to show that I am still working on it.
However, I would really love to see other LdapGroupsMapping fixes to be committed before moving further, as working on two patches at the same code scope creates conflicts., [~jojochuang], please let me share few review comments:
* No need to include in this patch _truststore_ related changes.
* There are tabulation related problems in the patch.
* As for me you've introduced too much complication to exception handling - IMO it should be just maintainable and implemented in common way.
As a Hadoop admin I will prefer to have standard stack traces to analyze for sure, but not just suggestions {color:gray}(_explainException()_ method){color} of what might be a problem cause. Standard LDAP error codes are easy to google, never had problems with this.
* No unit test changes was needed?, [~jojochuang], what relates to the self-signed certificates I didn't have any problems with them as soon as I saw details in stack trace.
Please follow e.g. [Hortonworks manual page >>|https://docs.hortonworks.com/HDPDocuments/Ambari-2.2.1.1/bk_Ambari_Security_Guide/content/_configure_ambari_to_use_ldap_server.html], there are two ways to handle this case:
* Adding _LDAPS Server_'s certificate to _JDK_ keystore - which is less secure, since all other _JDK_ applications will also trust this certificate. But it is fine in most of the cases.
* Generating your own JKS truststore and set up [related properties>>|https://hadoop.apache.org/docs/r2.7.1/hadoop-project-dist/hadoop-common/core-default.xml] during configuration, i.e.:
** hadoop.security.group.mapping.ldap.ssl.keystore
** hadoop.security.group.mapping.ldap.ssl.keystore.password.file

This  works for me, so please check it on your side.]