[The proper call is:

{code}
b64.decode(val.getBytes(), 0, val.getLength());
{code}

Yes, it is confusing, but doing anything else would not perform acceptably. If you look at the javadoc for getBytes(), you'll see why your call fails., I should also comment that I'm almost done with a patch that re-designs the generic serialization framework that includes native support for ProtocolBuffers, Thrift, Avro, and Writables. I already have all of the serializations working with both SequenceFiles and TFiles (with serialization layered on top named OFiles)., Thanks for the quick feedback. I'm not sure I understand why calling it like that would make a difference -- if the bytes we want to decode amount to the entire string that should have the same effect as b64.decode(val.getBytes()), no? I looked at the api here: http://www.docjar.com/docs/api/org/apache/hadoop/io/Text.html#getBytes and it didn't specify anything unusual. Is Text encoding the bytes differently from String?

In either case, I'm glad to hear that you're working on improving the serialization framework -- I think a lot of people, myself included, will really appreciate that when it gets released. Thanks!, Ah, just found the javadocs hosted by apache -- now I see what the issue was. Thanks. Is there a case where it's useful to dump the entire byte array and not just the valid ones?, No, it is never useful to look at the trailing bytes. They are just random bytes left over from a previous value.]