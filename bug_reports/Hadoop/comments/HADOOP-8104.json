[trunk POMs specify jackson 1.8.8, where are you seeing 1.7.1 being pulled?, It's pulled in from jersey.  I have a patch which fixes this.  Will post in a sec.

From mvn dependency:tree

{code}
[INFO] +- com.sun.jersey:jersey-json:jar:1.8:compile   
[INFO] |  +- org.codehaus.jettison:jettison:jar:1.1:compile
[INFO] |  |  \- stax:stax-api:jar:1.0.1:compile
[INFO] |  +- com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile
[INFO] |  |  \- javax.xml.bind:jaxb-api:jar:2.2.2:compile
[INFO] |  |     \- javax.activation:activation:jar:1.1:compile
[INFO] |  +- org.codehaus.jackson:jackson-core-asl:jar:1.7.1:compile
[INFO] |  +- org.codehaus.jackson:jackson-jaxrs:jar:1.7.1:compile 
[INFO] |  \- org.codehaus.jackson:jackson-xc:jar:1.7.1:compile
{code}, * Bump the Jersey version from 1.8 to 1.9.1

* Standardize on Jackson 1.8.3 to avoid inconsistency., Will this now break HBase or other projects which also use Jersey? HBase appears to use jersey 1.4., I wouldn't expect it to, but we definitely should do some testing to make sure.  I will post the results here as soon as I get them., @Colin's dependency tree. In which Hadoop maven subproject are you getting that dependency tree output? This seems odd as jackson is defined in the dependencyManagement section with version 1.8.8, Hi Alejandro,

I have posted the complete dependency tree in case you want to look at it.  You can get the same output yourself by running {{mvn dependency:tree}}.  The project that is pulling in jackson 1.7.1 appears to be hadoop-common.  The reason why it is pulled in is because Jersey 1.8 explicitly depends on jackson 1.7.1, and not a later version.  The mixed versions are creating runtime exceptions.

There is a StackOverflow question about this exact problem at http://stackoverflow.com/questions/6537287/jersey-and-jackson-maven-dependency-issues, I just checked, and it seems that HBASE already uses a different version of both Jersey and Jackson.  So I don't think it will be affected by this change.  It's also worth noting that they have this comment:

{{code}}
    <!-- While jackson is also a dependency of both jersey and avro, these
         can bring in jars from different, incompatible versions. We force
         the same version with these dependencies -->
{{code}}

By the way, I DID try adding those dependencies to HDFS, but it didn't resolve the version problem for HDFS., It seems that the bug was introduced by this change: https://issues.apache.org/jira/browse/HADOOP-7470

Previously to that, we were at Jackson 1.7.1 in trunk, which was the same version that Jersey was pulling in., There is no need to bump up jersey to get the right version of jackson. What you need to do is to define explicitly in the dependencymanagement section in hadoop-project/pom.xml the version of the jackson you want for the jackson artifacts not directly used by Hadoop (but brought it by jersey).

The attached patch adds jackson-core-asl/jackson-jaxrs/jackson-xc versions 1.8.8 to the dependencymanagement section.

I've run a 'mvn dependency:tree' for the whole project and only jackson 1.8.8 artifacts are being resolved with this patch., HADOOP-7470 tried to fix the exact same problem on hbase's site, but with Jackson 1.5.5. The problem is that ivy in 1.0 depends on jersey master (meaning jackson won't be pulled), while trunk maven pulls jersey's dependencies. Since we need Jackson independently of Jersey, I think we should exclude the jackson dependency from jersey. Have you tested whether jersey 1.8 works with jackson 1.8.8. , Hi Alejandro,

I have confirmed that the patch you attached also solves the problem.  With it, I only get jackson 1.8.8 .jar files in my install directory-- no 1.7.1 jars.

I guess the unanswered question is whether Jersey 1.8 can handle Jackson 1.8.8, which is not what it was originally designed to work against.

It seems that we both proposed patches that solve the problem.  I don't have a strong preference for which fix we take.  I do feel that we should add a unit test to keep this from happening again.  It seems that serializing a map is sufficient to expose this particular version skew problem., Just a note-- I did more than just verify that the 1.7.1 jars were missing. I also checked that Jackson didn't crash, which was the original problem., Thanks Colin for verifying things work. 

Yes, dependencies have to be properly curated, HADOOP-7538, we have not done this yet., I think we can go with the Alejandro's version of the patch which adds remaining jackson artifacts, but we should also exclude jackson dependency from jersey. Maven is said to be undeterministic about conflicting versions. , You should not exclude those jackson artifacts that jersey pulls in unless you are 100% certain they are not use by jersey. If you do the exclusion, no artifact will come at all (this is for ackson-core-asl/jackson-jaxrs/jackson-xc)

Regarding about conflicting versions, Maven version resolution rules may seem complicated but they are very precise and predictable., bq. I think we can go with the Alejandro's version of the patch which adds remaining jackson artifact

Sounds good to me., bq. You should not exclude those jackson artifacts that jersey pulls in unless you are 100% certain they are not use by jersey. If you do the exclusion, no artifact will come at all (this is for ackson-core-asl/jackson-jaxrs/jackson-xc)
If we are going to add jackson-(core-asl|jaxrs|xc) as explicit dependencies in pom, then we should exclude them from jersey so that jersey does not bring it's own versions. I am not suggesting just excluding them, but not adding them to pom. 
bq. Regarding about conflicting versions, Maven version resolution rules may seem complicated but they are very precise and predictable.
Not a maven expert myself, that is what was discussed in the linked StackOverflow question. But in any case, we shouldn't create a version conflict in the first place. , @Enis first comment, my patch is adding those jackson artifacts to the *dependency management* section, this means that they are not added to Hadoop classpath unless somebody add them to the a *dependencies* section explicitly or they are pulled as transitive dependency. In the current case is the later. So, what the addition to the *dependency management* section does is to force a particular version in case somebody is bring the artifact in. Hope this clarifies., @Alejandro, 
Thanks for explaining. I did not notice that the changes are in dependency management rather than explicit deps. I think the main issue here was caused by the fact that jackson-mapper is a direct dependency, but other jackson dependencies are transitive deps through jersey, and maven did not bring up 1.8.8 jackson-core-asl from jackson-mapper 1.8.8, but reused 1.7.1.
{code}
[INFO] +- org.apache.avro:avro:jar:1.5.3:compile
[INFO] |  +- org.codehaus.jackson:jackson-mapper-asl:jar:1.8.8:compile
[INFO] |  |  \- org.codehaus.jackson:jackson-core-asl:jar:1.7.1:compile
{code}

Anyway, I think the patch solves the issue. Colin, have you tested it?

, Hi Enis,

I tested both patches, and they work.  See my comments above., +1 to HADOOP-8104.patch, Oops, wrong patch name, I meant HADOOP-7470.patch (got confused that the jira # doesn't match the patch name, let's upload a new patch named HADOOP-8104 to minimize confusion), re-uploading patch this time with the correct name., committed to trunk and branch-0.23, Integrated in Hadoop-Hdfs-trunk-Commit #1872 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/1872/])
    HADOOP-8104. Inconsistent Jackson versions (tucu) (Revision 1294784)

     Result = SUCCESS
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1294784
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-project/pom.xml
, Integrated in Hadoop-Common-0.23-Commit #610 (See [https://builds.apache.org/job/Hadoop-Common-0.23-Commit/610/])
    Merge -r 1294783:1294784 from trunk to branch. FIXES: HADOOP-8104 (Revision 1294788)

     Result = SUCCESS
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1294788
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-project/pom.xml
, Integrated in Hadoop-Hdfs-0.23-Commit #598 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Commit/598/])
    Merge -r 1294783:1294784 from trunk to branch. FIXES: HADOOP-8104 (Revision 1294788)

     Result = SUCCESS
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1294788
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-project/pom.xml
, Integrated in Hadoop-Common-trunk-Commit #1798 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/1798/])
    HADOOP-8104. Inconsistent Jackson versions (tucu) (Revision 1294784)

     Result = SUCCESS
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1294784
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-project/pom.xml
, Integrated in Hadoop-Mapreduce-0.23-Commit #610 (See [https://builds.apache.org/job/Hadoop-Mapreduce-0.23-Commit/610/])
    Merge -r 1294783:1294784 from trunk to branch. FIXES: HADOOP-8104 (Revision 1294788)

     Result = ABORTED
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1294788
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-project/pom.xml
, Integrated in Hadoop-Mapreduce-trunk-Commit #1806 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/1806/])
    HADOOP-8104. Inconsistent Jackson versions (tucu) (Revision 1294784)

     Result = ABORTED
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1294784
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-project/pom.xml
, Integrated in Hadoop-Hdfs-trunk #970 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/970/])
    HADOOP-8104. Inconsistent Jackson versions (tucu) (Revision 1294784)

     Result = SUCCESS
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1294784
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-project/pom.xml
, Integrated in Hadoop-Hdfs-0.23-Build #183 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/183/])
    Merge -r 1294783:1294784 from trunk to branch. FIXES: HADOOP-8104 (Revision 1294788)

     Result = FAILURE
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1294788
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-project/pom.xml
, Integrated in Hadoop-Mapreduce-0.23-Build #211 (See [https://builds.apache.org/job/Hadoop-Mapreduce-0.23-Build/211/])
    Merge -r 1294783:1294784 from trunk to branch. FIXES: HADOOP-8104 (Revision 1294788)

     Result = FAILURE
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1294788
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-project/pom.xml
, Integrated in Hadoop-Mapreduce-trunk #1005 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1005/])
    HADOOP-8104. Inconsistent Jackson versions (tucu) (Revision 1294784)

     Result = SUCCESS
tucu : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1294784
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-project/pom.xml
, I just pulled this into 0.23.3, Integrated in Hadoop-Hdfs-0.23-Build #245 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/245/])
    svn merge -c 1294784 FIXES: HADOOP-8104. Inconsistent Jackson versions (tucu) (Revision 1332802)

     Result = SUCCESS
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1332802
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-project/pom.xml
]