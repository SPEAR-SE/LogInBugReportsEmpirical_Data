[Hi

After initial analysis i found that in the jets3t jar, this particular change
https://bitbucket.org/jmurty/jets3t/diff/src/org/jets3t/service/impl/rest/httpclient/HttpMethodReleaseInputStream.java?diff2=3709f8458ba6&at=default

{code}
             if (!underlyingStreamConsumed) {
                 // Underlying input stream has not been consumed, abort method
                 // to force connection to be closed and cleaned-up.
-                httpMethod.abort();
+                httpResponse.getEntity().consumeContent(); //Current version consumes entity in a utility
             }
-            httpMethod.releaseConnection();
             alreadyReleased = true;
         }
{code}

is causing the issue as instead of aborting it chooses to consume the stream before closing, This is discussed with the JetS3t's developer. This is the bug introduced between JetS3t release 0.8.1 and 0.9.0. Will be fixed in the upcoming release of JetS3t
https://bitbucket.org/jmurty/jets3t/issues/218/httpmethodreleaseinputstream-close-abort, that's good to see the plan for a fix, worrying to see the quote "This change is very likely to break things in subtle or even non-subtle ways,". , Closing as a wontfix as there is a solution "move to S3a". That has a lot of logic about when to skip forwards vs. close, seek optimisation for different io policies, metrics on all of this, etc.]