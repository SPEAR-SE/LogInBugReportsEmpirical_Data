[Existing tests in {{TestGlobPaths}} were designed to catch the regressed bug.  However permission checking was disabled and the priviledged vs unpriviledged fs management was buggy.

The existing logic made re-fixing that bug not straightforward.  I reverted it back to be more inline with 0.23's implementation, while retaining the additional rpc reducing optimizations added in 2.x.

I separated the logic into multiple methods, removed funky code for using/removing a root placeholder status by only using when necessary, doing a simple immediate file status if the path contains no globs, etc., [~cmccabe], could you take a look since you made most of the changes after my 0.23 overhaul?

(We've been running with this patch internally since it was a deployment blocker for our users), {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12660251/HADOOP-10942.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4436//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4436//console

This message is automatically generated., bq. Colin Patrick McCabe, could you take a look since you made most of the changes after my 0.23 overhaul?

Will take a look.  I was on vacation last week so that's why I haven't responded til now, It seems like there's a bunch of things going on here:

* The globber will sometimes erroneously return a permission denied exception when there is a non-terminal wildcard.  For example, when listing {{/a*/b}}, if there is a file named /alpha, the glob will fail.  This bug does *not* occur for superusers, which is why the existing tests and casual testing didn't catch it.  You mention that this was a "fix" which was regressed between 0.23 and branch-2... is there a JIRA number for this already?

* Optimizations: you mention "doing a simple immediate file status if the path contains no globs, etc".  The existing code already does this.  It was added in HADOOP-9877.  Are we missing a case?  I didn't understand the comment about "Additional optimizations to reduce rpcs actually increases them if directories contain 1 item."  Which specific optimization(s) are increasing RPCs for you and how can we avoid this?

* You added a comment that "FileContext returns a path to the home dir of the user that started the jvm instead of the ugi user so we'll just workaround it."  I wasn't aware of this issue.  Is there a JIRA number?  This seems like an inconsistency that we should note in the test, along with a link to the JIRA that should fix it.

* There's a bunch of reorganization here, perhaps almost a rewrite of the main part of the globber.

Let's split these into separate JIRAs so that it's easier to review., I created HADOOP-10958 for the globber test rework (I think it's going to be a giant patch, although simple in concept.).  I created HADOOP-10957 for the urgent globber bug, and posted a small bugfix that we can easily backport.  Can you file a JIRA for the FileContext issue, if there's not one out there already?  And perhaps one for any other miscellaneous optimizations / refactoring we should do in the globber., I don't have a jira handy for the permissions regression.  I can guarantee I did fix it because production code discovered the regression while testing 2.x.

For the immediate file status, the prior code used to loop over the path components even if there are globs.  In this patch, it does an immediate file status on the full path.  This reduces the overhead for FsShell commands.

FileContext jira is HADOOP-10944.
, bq. For the immediate file status, the prior code used to loop over the path components even if there are globs. In this patch, it does an immediate file status on the full path. This reduces the overhead for FsShell commands.

You always need to loop when there are globs.  You need to see which children match the glob and which don't.  I think what you meant to write is "the prior code used to loop over the path components even if there are *not* globs".

Looping is not a problem, though.  Calling {{listStatus}} or {{fileStatus}} is what generates RPCs.  And the existing globber code doesn't do that unless it needs to.

A simple way of seeing this is to add a LOG.info statement to {{Globber#listStatus}} and {{Globber#getFileStatus}}, and then try {{hadoop fs \-ls}} on a path without globs.  The only output you will see is a single call to {{getFileStatus}}, because that's the only call that's needed.  The internal looping that it does inside the function is not important because most loop iterations don't generate an RPC., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12660251/HADOOP-10942.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6347/console |


This message was automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12660251/HADOOP-10942.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6353/console |


This message was automatically generated., Moving bugs out of previously closed releases into the next minor release 2.8.0., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red} 0m 4s {color} | {color:red} HADOOP-10942 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12660251/HADOOP-10942.patch |
| JIRA Issue | HADOOP-10942 |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/9393/console |
| Powered by | Apache Yetus 0.3.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, There has been no movement on this for a while. We'll need to move it out of scope for 2.8.0 soon. Let me know if you disagree., The regression referred to here was fixed in HADOOP-10957.  The optimizations are already implemented (we don't perform an RPC on each path component, only when we need to do so to implement a wildcard.)]