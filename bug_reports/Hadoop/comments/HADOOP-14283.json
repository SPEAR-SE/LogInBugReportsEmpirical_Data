[FYI [~stevel@apache.org], [~liuml07].  I'll keep this updated., This has been fixed in 1.11.119 ([github issue|https://github.com/aws/aws-sdk-java/issues/1102]), so we just need to upgrade our SDK version to resolve this., I am testing with current SDK to reproduce the bug, then again with the new version to confirm the fix.  I'll post a patch soon, assuming the new SDK looks good., FYI Testing on recent (.134) SDK release has been going well.  I just need to get around to posting a patch here., Attaching patch which bumps SDK from 1.11.86 to 1.11.134.  There are now newer versions but I've done a good amount of testing on .134.

I ran unit, integration, and scale tests in us-west-2., Attaching related Hadoop scale test but I'm leaning towards not including in the codebase it because:

1. It is slow as heck.  One of those things you need to run 4+ hours to get some confidence on.
2. The direct-to-SDK [test|https://github.com/ajfabbri/awstest] I posted in the description is an easier way to reproduce the SDK hang.

, OK, +1 for the patch without the scale test;

rename the JIRA to something about "upgrade to AWS SDK ..." once in, make a dependency of HADOOP-9991, & the S3A phase III so we can keep an eye on where it surfaces. 

FWIW, Rajesh has [an ongoing AWS patch|https://github.com/aws/aws-sdk-java/pull/1105#issuecomment-306279002] which I think would be good to pick up in some future AWS release. But as they come out so often, we can wait, Committed to {{trunk}} and {{branch-2}} branches. Thanks for your contribution [~fabbri]; and thanks for your review and discussion [~stevel@apache.org]., SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #11847 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/11847/])
HADOOP-14283. Upgrade AWS SDK to 1.11.134. Contributed by Aaron Fabbri (liuml07: rev 7c9694c56712e20589d83b31e71c7bbddc131b8d)
* (edit) hadoop-project/pom.xml
, I check and find aws sdk 1.11.134 does not have DynamoDBLocal which is used by S3Guard. Currently in [HADOOP-13345], we can either wait till it catches up, or use old 1.11.86 version only for {{DynamoDBLocal}} artifactId. As it's for testing only, having different versions should be fine in development., Thanks [~liuml07].  I ran into the same problem when testing with S3Guard.  I ended up using a ranged version for it, as I found it hard to find the list of dynamodblocal releases:

{code}
<dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>DynamoDBLocal</artifactId>
        <version>[1.11.86,2.0)</version>
      </dependency>
{code}, yeah we may need this in next merge from trunk to s3guard; or perhaps we can get this change in HADOOP-13345 branch now?

After applying the change, I merged from trunk locally and run the integration tests against both -Ddynamo (us-west-1 region) and -Ddynamodblocal, all tests pass.
{code}
$ mvn -Dit.test='ITestS3A*,ITestS3Guard*,ITestDynamo*' -Dtest=none -Ds3guard -Ddynamodblocal -q  verify
Results :

Tests run: 391, Failures: 0, Errors: 0, Skipped: 59

$ mvn -Dit.test='ITestS3A*,ITestS3Guard*,ITestDynamo*' -Dtest=none -Ds3guard -Ddynamo -q  verify
Results :

Tests run: 391, Failures: 0, Errors: 0, Skipped: 59
{code}]