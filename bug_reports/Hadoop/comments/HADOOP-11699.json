[Hi [~kminder].  Thanks for filing this issue.

Just to confirm, is DNS otherwise working correctly in your environment?  For example, does {{nslookup}} return the expected result?  I expect {{InetAddress.getLocalHost().getCanonicalHostName()}} to be basically equivalent to a reverse DNS lookup.  If DNS works fine in this environment, then I suppose we're dealing with some quirk of Java on Windows.

I think {{USERDNSDOMAIN}} is only defined if the logged in user is a domain user.  It won't be defined if logged in as a local account or a built-in account like administrator.  That's probably fine though.

Is the {{toLowerCase}} necessary?  I have seen environments where using all caps for Windows host names was considered a standard practice.  Kerberos is case-sensitive.  DNS is case-insensitive, but case-preserving on outputs.  Because of that, I'd expect upper case to work fine as long as both DNS and Kerberos records are consistent in their use of upper case, so that everything matches.

The last line has a {{null}} check.  Did you actually see a {{null}} value in your testing?  I didn't think {{InetAddress.getLocalHost().getCanonicalHostName()}} could ever return {{null}}.

Just a minor nit-pick: you can use {{org.apache.hadoop.util.Shell#WINDOWS}} as a helper to check if the runtime environment is Windows.  I recommend completely special-casing all unique handling on Windows, so that non-Windows continues to use the straight-up {{return InetAddress.getLocalHost().getCanonicalHostName()}}., bq. Is the toLowerCase necessary?
I think toLowerCase is in line with the current convention in hadoop to use lowercase for service principals. We have seen kerberos having trouble with upper case characters in the hortnames. KerberosUtil.java#getServicePrincipal has a comment that states this problem., [~jnp], thanks for pointing that out.  In that case, it seems like {{SecurityUtil#getLocalHostName}} ought to return lower case in all environments, not just Windows, for agreement with {{KerberosUtil#getServicePrincipal}}.  Also, we should use {{StringUtils#toLowerCase}} for the correct locale handling., I just noticed that {{SecurityUtil#replacePattern}} already has {{StringUtils.toLowerCase}} to convert to lower case, which is inline with {{KerberosUtil#getServicePrincipal}}. Therefore, you were right that {{toLowerCase}} in {{SecurityUtil#getLocalHostName}} is not necessary., The difference is likely that any Linux deployment would have been using lower-case host names.  A Windows deployment might use upper-case host names.  (This is something I've seen Windows admins use as a standard practice.)  Since Kerberos is case-sensitive, I think the case used in any principals must match the case used in the host name.  Therefore, I'd expect the 2 code paths in {{KerberosUtil}} and {{SecurityUtil}} need to be symmetric with regards to case conversion., {code} 
String hostname = InetAddress.getLocalHost().getCanonicalHostName();
+    if ( !hostname.contains( "." ) ) {
+      if ( Shell.WINDOWS ) {
+        String domain = System.getenv( "USERDNSDOMAIN" );
+        if ( domain != null ) {
+          hostname += "." + domain.trim();
+        }
+      }
+    }
+    return hostname ;
   }
{code}

Thought of give patch like above, But this will not change to lowercase , incase of windows machine..So I fell,{{toLowerCase}} is required...Please correct me, If I am wrong.., Any comments on this..?]