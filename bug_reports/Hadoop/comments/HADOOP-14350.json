[java version "1.8.0"
Java(TM) SE Runtime Environment (build pxa6480sr4fp1-20170215_01(SR4 FP1))
IBM J9 VM (build 2.8, JRE 1.8.0 Linux amd64-64 Compressed References 20170209_336038 (JIT enabled, AOT enabled)
J9VM - R28_20170209_0201_B336038
JIT  - tr.r14.java.green_20170125_131456
GC   - R28_20170209_0201_B336038_CMPRSS
J9CL - 20170209_336038)
JCL - 20170215_01 based on Oracle jdk8u121-b13, What happens on Hadoop 2.8?, I try Hadoop 2.8, but also get the same error messages., Can anyone help on this issue?, OK, I think right now you are going to have to help us deal with this as you are the one with the IBM JDK. Know that Kerberos is one area where the implementations vary between JDK implementations and versions, and that because we need more detailed APIs than the public ones, it's fairly low level and brittle. We are [scared of kerberos|https://www.gitbook.com/book/steveloughran/kerberos_and_hadoop/details]

Looking at the Hadoop code when a keytab is passed it, we're assuming its absolute:   
{code}
private static String prependFileAuthority(String keytabPath) {
    return keytabPath.startsWith("file://") ? keytabPath
        : "file://" + keytabPath;
  }
{code}

I *suspect* that this could be a cause, but it makes me worry that changing this will break other things everywhere else -and that the use of URLs implies that the Kerberos code expects absolute paths.

Can't you just set it up with an absolute path? I don't even see a relative file:local.keytab ref working, as that would only confuse the condition.

Otherwise, with Hadoop 2.8 you can now run [[KDiag|http://hadoop.apache.org/docs/r2.8.0/hadoop-project-dist/hadoop-common/SecureMode.html#Troubleshooting_with_KDiag] which tries to make sense of what's going on. Can you run that with all the logging on and see if it helps?, Actually we are running Spark job on yarn application. Spark will copy the keytab to its working directory and pass the relative path to the login method. We are not able to configure Spark to use absolute path.  , Stack trace from example
{code}
2017-04-19 02:29:13,982 DEBUG [org.apache.hadoop.metrics2.lib.MutableMetricsFactory] - field org.apache.hadoop.metrics2.lib.MutableRate org.apache.hadoop.security.UserGroupInformation$UgiMetrics.loginSuccess with annotation @org.apache.hadoop.metrics2.annotation.Metric(about=, sampleName=Ops, always=false, type=DEFAULT, value=[Rate of successful kerberos logins and latency (milliseconds)], valueName=Time)
2017-04-19 02:29:13,990 DEBUG [org.apache.hadoop.metrics2.lib.MutableMetricsFactory] - field org.apache.hadoop.metrics2.lib.MutableRate org.apache.hadoop.security.UserGroupInformation$UgiMetrics.loginFailure with annotation @org.apache.hadoop.metrics2.annotation.Metric(about=, sampleName=Ops, always=false, type=DEFAULT, value=[Rate of failed kerberos logins and latency (milliseconds)], valueName=Time)
2017-04-19 02:29:13,991 DEBUG [org.apache.hadoop.metrics2.lib.MutableMetricsFactory] - field org.apache.hadoop.metrics2.lib.MutableRate org.apache.hadoop.security.UserGroupInformation$UgiMetrics.getGroups with annotation @org.apache.hadoop.metrics2.annotation.Metric(about=, sampleName=Ops, always=false, type=DEFAULT, value=[GetGroups], valueName=Time)
2017-04-19 02:29:13,992 DEBUG [org.apache.hadoop.metrics2.impl.MetricsSystemImpl] - UgiMetrics, User and group related metrics
[KRB_DBG_CFG] Config:main:   Java config file: /opt/ibm/java/jre/lib/security/krb5.conf
[KRB_DBG_CFG] Config:main:   Loaded from Java config
2017-04-19 02:29:14,175 DEBUG [org.apache.hadoop.security.Groups] -  Creating new Groups object
2017-04-19 02:29:14,178 DEBUG [org.apache.hadoop.util.NativeCodeLoader] - Trying to load the custom-built native-hadoop library...
2017-04-19 02:29:14,179 DEBUG [org.apache.hadoop.util.NativeCodeLoader] - Failed to load native-hadoop with error: java.lang.UnsatisfiedLinkError: hadoop (Not found in java.library.path)
2017-04-19 02:29:14,179 DEBUG [org.apache.hadoop.util.NativeCodeLoader] - java.library.path=/opt/ibm/java/jre/lib/amd64/compressedrefs:/opt/ibm/java/jre/lib/amd64:/usr/lib64:/usr/lib
2017-04-19 02:29:14,179 WARN [org.apache.hadoop.util.NativeCodeLoader] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2017-04-19 02:29:14,180 DEBUG [org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback] - Falling back to shell based
2017-04-19 02:29:14,180 DEBUG [org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback] - Group mapping impl=org.apache.hadoop.security.ShellBasedUnixGroupsMapping
2017-04-19 02:29:14,334 DEBUG [org.apache.hadoop.util.Shell] - setsid exited with exit code 0
2017-04-19 02:29:14,334 DEBUG [org.apache.hadoop.security.Groups] - Group mapping impl=org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback; cacheTimeout=300000; warningDeltaMs=5000
IBMJGSSProvider Build-Level: -20161128
[JGSS_DBG_CRED]  main JAAS config: principal=job/analytics
[JGSS_DBG_CRED]  main JAAS config: credsType=initiate and accept
[JGSS_DBG_CRED]  main config: useDefaultCcache=false
[JGSS_DBG_CRED]  main config: useCcache=null
[JGSS_DBG_CRED]  main config: useDefaultKeytab=false
[JGSS_DBG_CRED]  main config: useKeytab=//job.keytab
[JGSS_DBG_CRED]  main JAAS config: forwardable=false (default)
[JGSS_DBG_CRED]  main JAAS config: renewable=false (default)
[JGSS_DBG_CRED]  main JAAS config: proxiable=false (default)
[JGSS_DBG_CRED]  main JAAS config: tryFirstPass=false (default)
[JGSS_DBG_CRED]  main JAAS config: useFirstPass=false (default)
[JGSS_DBG_CRED]  main JAAS config: moduleBanner=false (default)
[JGSS_DBG_CRED]  main JAAS config: interactive login? no
[JGSS_DBG_CRED]  main JAAS config: refreshKrb5Config = true
[KRB_DBG_CFG] Config:main:   Java config file: /opt/ibm/java/jre/lib/security/krb5.conf
[KRB_DBG_CFG] Config:main:   Loaded from Java config
[KRB_DBG_KDC] KdcComm:main:   >>> KdcAccessibility: reset
[KRB_DBG_KDC] KdcComm:main:   >>> KdcAccessibility: reset
[JGSS_DBG_CRED]  main Try keytab for principal=job/analytics
[KRB_DBG_KTAB] KeyTab:main:   >>> KeyTab: trying to load keytab file /job.keytab
[KRB_DBG_KTAB] KeyTab:main:   >>> KeyTab: exception /job.keytab (No such file or directory)
Key for the principal job/analytics@KDC.LON02.HADOOP not available in //job.keytab
[KRB_DBG_CCHE] Credentials:main:   >>> Credentials: Created Credentials with 0 keys. Key types:
[JGSS_DBG_CRED]  main Done retrieving Kerberos creds from keytab
[JGSS_DBG_CRED]  main Retrieving Kerberos creds from cache for principal=job/analytics
[JGSS_DBG_CRED]  main Non-interactive login; no callbacks necessary.
[JGSS_DBG_CRED]  main No Kerberos creds in cache for principal job/analytics
[JGSS_DBG_CRED]  main Doing Kerberos login for principal job/analytics@KDC.LON02.HADOOP
2017-04-19 02:29:14,381 DEBUG [org.apache.hadoop.security.UserGroupInformation] - hadoop login
Exception in thread "main" java.io.IOException: Login failure for job/analytics from keytab job.keytab
	at org.apache.hadoop.security.UserGroupInformation.loginUserFromKeytabAndReturnUGI(UserGroupInformation.java:1103)
	at com.TestKrb.main(TestKrb.java:10)
Caused by: javax.security.auth.login.FailedLoginException: Null key
	at com.ibm.security.jgss.i18n.I18NException.throwFailedLoginException(I18NException.java:1)
	at com.ibm.security.auth.module.Krb5LoginModule.a(Krb5LoginModule.java:355)
	at com.ibm.security.auth.module.Krb5LoginModule.b(Krb5LoginModule.java:515)
	at com.ibm.security.auth.module.Krb5LoginModule.login(Krb5LoginModule.java:411)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55)
	at java.lang.reflect.Method.invoke(Method.java:508)
	at javax.security.auth.login.LoginContext.invoke(LoginContext.java:788)
	at javax.security.auth.login.LoginContext.access$000(LoginContext.java:196)
	at javax.security.auth.login.LoginContext$5.run(LoginContext.java:721)
	at javax.security.auth.login.LoginContext$5.run(LoginContext.java:719)
	at java.security.AccessController.doPrivileged(AccessController.java:686)
	at javax.security.auth.login.LoginContext.invokeCreatorPriv(LoginContext.java:719)
	at javax.security.auth.login.LoginContext.login(LoginContext.java:593)
	at org.apache.hadoop.security.UserGroupInformation.loginUserFromKeytabAndReturnUGI(UserGroupInformation.java:1092)
	... 1 more
{code}

, OK, I understand. 

# spark should be setting the absolute path
# hadoop should handle relative paths anyway.

Actually, Hadoop should have a version of the login command which takes a {{File}} object and so remove the ambiguity. But that'd take a while to get code downstream to switch to, even if we do it in Hadoop itself.

If you attach the spark stack, we can create a JIRA there and link it, so I'll see about fixing it there while we do some absolution in Hadoop. Spark's releasing faster, so this could maybe get to a 2.2.x release before long]