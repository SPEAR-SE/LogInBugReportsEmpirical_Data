[The failing test suites are:

org.apache.hadoop.fs.viewfs.TestFSMainOperationsLocalFileSystem
org.apache.hadoop.fs.viewfs.TestViewFsTrash


{code}
testWDAbsolute(org.apache.hadoop.fs.viewfs.TestFSMainOperationsLocalFileSystem)  Time elapsed: 0 sec  <<< ERROR!
java.io.IOException: ViewFs:Non absolute mount name in config:/C:
	at org.apache.hadoop.fs.viewfs.InodeTree.createLink(InodeTree.java:210)
	at org.apache.hadoop.fs.viewfs.InodeTree.<init>(InodeTree.java:334)
	at org.apache.hadoop.fs.viewfs.ViewFileSystem$1.<init>(ViewFileSystem.java:177)
	at org.apache.hadoop.fs.viewfs.ViewFileSystem.initialize(ViewFileSystem.java:177)
	at org.apache.hadoop.fs.FileSystem.createFileSystem(FileSystem.java:2296)
	at org.apache.hadoop.fs.FileSystem.access$200(FileSystem.java:85)
	at org.apache.hadoop.fs.FileSystem$Cache.getInternal(FileSystem.java:2330)
	at org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:2312)
	at org.apache.hadoop.fs.FileSystem.get(FileSystem.java:316)
	at org.apache.hadoop.fs.viewfs.ViewFileSystemTestSetup.setupForViewFileSystem(ViewFileSystemTestSetup.java:76)
	at org.apache.hadoop.fs.viewfs.TestFSMainOperationsLocalFileSystem.setUp(TestFSMainOperationsLocalFileSystem.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
{code}
, I have a fix in progress for HADOOP-8957 that may also cover this one., The attached patch fixes this problem.  I'd like to start the patch on trunk and then immediately merge to branch-trunk-win after commit.

The problem was that the tests attempted to determine a testing mount point for ViewFS by taking the testing path and trimming the first segment from that.  On Windows, if the testing path is /C:/build/test, then this logic yields /C:, which is not an absolute path.  The ViewFS mount point must be an absolute path.  I changed this logic to use Path and walk up the directory hierarchy to the shortest absolute path that is not root.
, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12551169/HADOOP-8958.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1682//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1682//console

This message is automatically generated., Chris, the class ViewTestSetupBase is created for just one utility method and several test classes have to extend it. Why not just add that method into some test utility class, such as ViewFsTestSetup? 
The rest of the patch looks good., The problem was that the logic for getting a testing mount point was needed by 2 different setup classes: ViewFileSystemTestSetup and ViewFsTestSetup.  If we put it in ViewFsTestSetup, then ViewFileSystemTestSetup wouldn't have access to it, unless we allow a call from one of those setup classes to the other.  Rather than directly couple those 2 classes, I set up a base class for the 2 of them to share this method.

If you prefer to see this changed, let me know, and I'll create a new patch.
, Sorry for the late reply. 
Looks like LogetTestMountPoint() might only be used in tests in the future and thus seems not necessary to put it in other source code until classes.

+1 to the patch.
, Chris, I'm reviewing this now, please give me some time., Patch looks good Chris, +1, Chris, this patch no longer applies to trunk. Can you rebase it?, Suresh, it looks like the changes in HADOOP-8589 have created the conflict on trunk.  Reviewing that code change, I can see that it's going to re-break these tests on Windows.  It's going to take some time to merge that change and adapt it to work correctly on Windows.

Instead, I've reset target version on this jira to just branch-trunk-win.  The patch applies cleanly there.  I'll file a separate jira to follow up on correcting HADOOP-8589 to work cross-platform.  trunk and branch-trunk-win have diverged a bit at this point too, so I'll need to prepare a merge patch to resolve that.
, Chris, I merged the trunk to branch-trunk-win. So we may have to fix this nevertheless :-), Chris, in windows, would it be safe to assume the mount point is "/x:/path"? If so then isn't it sufficient put a simple if-windows and then assume that the path does have the drive-letter., Yes, that looks like a typical mount point on Windows.  I've been trying to limit the occurrences of "if (WINDOWS)" checks in the code.  Generally, we've been able to achieve platform-agnostic test paths by using the Path methods instead of platform-specific string editing.

I'll investigate rebasing this patch against the recent changes for HADOOP-8589.
, Great if you can fix this through  Path method changes.  Minimizing if-os in main code is clearly desirable,  but if-os in some  specific tests is acceptable (IMHO)., Thanks, Sanjay.  I'm uploading version 2 of this patch, which takes the approach of adding an if (WINDOWS) check and traversing to the next path separator.  Let me know what you think of this., I also meant to add that the new patch can still commit to trunk and then immediately merge to branch-trunk-win.  It applies cleanly on both branches., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12554973/HADOOP-8958.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1826//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1826//console

This message is automatically generated., +1, I committed the patch to trunk. Thank you Chris., Integrated in Hadoop-trunk-Commit #3076 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3076/])
    HADOOP-8958. ViewFs:Non absolute mount name failures when running multiple tests on Windows. Contributed by Chris Nauroth. (Revision 1415784)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1415784
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/viewfs/ViewFileSystemTestSetup.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/viewfs/ViewFsTestSetup.java
, I actually liked the first base class approach better because that makes it more future proof and dev friendly., Do you think the same issue might be triggered in any normal user scenario which does operations equivalent to the test?, The only user-facing issue that comes to mind is if someone attempts to configure viewfs on Windows with mount points that are just drive specs (C:, D:, etc.).  This will fail fast at initialization time with an error message stating that the mount point is not an absolute path.  That could cause some initial confusion, but I think most Windows engineers will make the realization that C: is not absolute and that they need to adjust the configuration to add a path like C:\ or C:\foo., Integrated in Hadoop-Yarn-trunk #53 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/53/])
    HADOOP-8958. ViewFs:Non absolute mount name failures when running multiple tests on Windows. Contributed by Chris Nauroth. (Revision 1415784)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1415784
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/viewfs/ViewFileSystemTestSetup.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/viewfs/ViewFsTestSetup.java
, So the conclusion is that the test fix is not required anywhere in product/client code and is a configuration step., Integrated in Hadoop-Hdfs-trunk #1243 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1243/])
    HADOOP-8958. ViewFs:Non absolute mount name failures when running multiple tests on Windows. Contributed by Chris Nauroth. (Revision 1415784)

     Result = FAILURE
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1415784
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/viewfs/ViewFileSystemTestSetup.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/viewfs/ViewFsTestSetup.java
, Integrated in Hadoop-Mapreduce-trunk #1274 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1274/])
    HADOOP-8958. ViewFs:Non absolute mount name failures when running multiple tests on Windows. Contributed by Chris Nauroth. (Revision 1415784)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1415784
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/viewfs/ViewFileSystemTestSetup.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/viewfs/ViewFsTestSetup.java
, Also seeing this failure in branch-2., Reopen for porting to branch-2. The original patch should apply., I committed the patch to branch-2.]