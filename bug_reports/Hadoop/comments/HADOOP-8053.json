[HADOOP-6560 added a check which requires HAR URIs to include a '-' after the underlying scheme even if a host is not specified. Unfortunately this appears to violate the grammar for the host field defined in RFC-2396. Here are the relevant bits from section 3.2.2:

{noformat}

      hostport      = host [ ":" port ]
      host          = hostname | IPv4address
      hostname      = *( domainlabel "." ) toplabel [ "." ]
      toplabel      = alpha | alpha *( alphanum | "-" ) alphanum
{noformat}

Note that the toplabel field can't end in a "-", which implies the host field can't end a in a "-".


{noformat}
public class HarURITest {

  public static void main(String [] args) {
    try {
      new URI("har", "hdfs-", "/foo", null);
    } catch (URISyntaxException e) {
      e.printStackTrace();
    }
  }
}
{noformat}

Generates:

{noformat}
java.net.URISyntaxException: Illegal character in hostname at index 10: har://hdfs-/foo
	at java.net.URI$Parser.fail(URI.java:2809)
	at java.net.URI$Parser.parseHostname(URI.java:3337)
	at java.net.URI$Parser.parseServer(URI.java:3197)
	at java.net.URI$Parser.parseAuthority(URI.java:3116)
	at java.net.URI$Parser.parseHierarchical(URI.java:3058)
	at java.net.URI$Parser.parse(URI.java:3014)
	at java.net.URI.<init>(URI.java:663)
	at java.net.URI.<init>(URI.java:764)
	at HarURITest.main(HarURITest.java:9)
{noformat}

, Hi Carl,

"har://hdfs-/foo" actually is also an invalid Hadoop FileSystem path.  The har path format is "har://<scheme>-<host>/<path>" and <host> cannot be an empty string.

In HADOOP-6560, I changed it from throwing NullPointerException to IOException.  I think it is fine if getting URISyntaxException., I believe this is not a problem.  Please feel free to reopen if not.]