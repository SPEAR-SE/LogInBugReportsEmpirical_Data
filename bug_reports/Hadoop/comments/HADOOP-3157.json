[The test used to construct cacheDir path from TEST_ROOT_DIR. MRCache#launchMRCache already sets test.build.data to TEST_ROOT_DIR. So, got rid of explicitly passing TEST_ROOT_DIR. , -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12379215/HADOOP-3157-1.patch
against trunk revision 643282.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 3 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests -1.  The patch failed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2136/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2136/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2136/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2136/console

This message is automatically generated., The problem seemed to be handling windows path via FileSystem.getUri().resolve() . I changed it back reset TEST_ROOT_DIR to use /tmp if its local filesystem. Now the call to launchMRCache is consistent with calls from other tests also., I tried makeQualified(Path). But that does not help with FileSystem.getUri().resolve(). I changed to use default value of TEST_ROOT_DIR for Windows. We have to revisit how makeQualified(Path) and FileSystem.getUri().resolve() handles for Windows platform. I will open JIRA for this issue., This fixes the test for me on Windows.  There were two problems: (1) the result of File#toString() was passed as a URI.  This doesn't work on Windows.  Instead one must use File#toURI().toString(); and (2) DistributedCache#makeRelative() created a cache path using the colon-containing windows path, which doesn't work on Windows, where colons are only permitted in the device.  So we remove such colons from cache paths.  We could do this only on Windows, but it shouldn't hurt to do everywhere.  I also re-wrote that method, since it had some strange hdfs-specific stuff., Thanks Doug. I tested this on Windows and Linux and the test pases. test-patch output below
     [exec] +1 overall.  
     [exec] 
     [exec]     @author +1.  The patch does not contain any @author tags.
     [exec] 
     [exec]     tests included +1.  The patch appears to include 3 new or modified tests.
     [exec] 
     [exec]     javadoc +1.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     javac +1.  The applied patch does not generate any new javac compiler warnings.
     [exec] 
     [exec]     findbugs +1.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec] 
     [exec] 
     [exec] 
, +1, I just committed this. Thanks Doug!, Integrated in Hadoop-trunk #451 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/451/]), Test changes are not release note worthy.  Remove the release note.
]