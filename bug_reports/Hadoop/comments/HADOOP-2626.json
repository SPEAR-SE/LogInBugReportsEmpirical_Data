[Here is a patch., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12373296/patch-Hadoop-2626.diff
against trunk revision r612614.

    @author +1.  The patch does not contain any @author tags.

    patch -1.  The patch command could not apply the patch.

Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1617/console

This message is automatically generated., This patch puts an unqualified path in the returned FileStatus.  That's not strictly a bug, but we've found that it's always safest to return fully-qualified paths whenever we can.

To convert the java.io.File to a Path, we might use new Path(file.getPath()).makeQualified(fs).  Perhaps this should be added as a fileToPath method, since there's already a path2File() method., What about this patch then ?, If local file included a '%' character in a file name, we can't copy to dfs becuase FileStatus.getPath() returns urlencoded '%25'.
IMO, I think it is a bug., For example :

FileStatus fileStatus = new RawLocalFileStatus(new File("udanax/15.7%.dat"), getDefaultBlockSize());
LOG.info(fileStatus.getPath()) // It will log the 'file:/root/workspace/hadoop/udanax/15.7%25.dat' string.

, Please include a test case., > What about this patch then ?

That looks better to me, in that the returned Path is now fully qualified.  Does it handle escapes any better than before?  If not, 'new Path(file.toUri().getPath()).makeQualified(fs)' may do better.

As Nigel indicates, some test cases would be very useful.

, -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12373373/HADOOP-2626.patch
against trunk revision r613022.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests -1.  The patch failed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1631/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1631/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1631/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1631/console

This message is automatically generated., Well, it has at least fix our problem. So it seems to be ok.
Will try add unit tests soon but if someone has time to do it now, please, do not hesitate. :-)

BTW, the patch is failing in hudson because of a failing unit test which seems not to be related to this modification., Here's a new version that includes a test case.  The test fails without the patch and succeeds with it., +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12373981/HADOOP-2626-1.patch
against trunk revision 614721.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1674/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1674/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1674/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1674/console

This message is automatically generated., I just committed this.  Thanks, Thomas., Integrated in Hadoop-trunk #380 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/380/])]