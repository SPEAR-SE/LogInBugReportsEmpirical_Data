[-1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12491545/HADOOP-7575-trunk-v1.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The applied patch generated 297 javac compiler warnings (more than the trunk's current 296 warnings).

    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:


    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/74//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/74//artifact/trunk/target/newPatchFindbugsWarningshadoop-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/74//artifact/trunk/target/newPatchFindbugsWarningshadoop-alfredo.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/74//artifact/trunk/target/newPatchFindbugsWarningshadoop-hdfs.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/74//artifact/trunk/target/newPatchFindbugsWarningshadoop-annotations.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/74//console

This message is automatically generated., This patch is updated with the new directory structure as well as allowing both relative and absolute paths to work., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12492265/HADOOP-7575-trunk-v3.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/102//console

This message is automatically generated., Had a remnant in my patch for getting the build to work with the commons-daemon ivy consistency check people are having., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12492268/HADOOP-7575-trunk-v4.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    -1 javac.  The applied patch generated 1048 javac compiler warnings (more than the trunk's current 1047 warnings).

    -1 findbugs.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-common-project.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/103//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/103//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-auth.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/103//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/103//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-annotations.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/103//console

This message is automatically generated., v5 of the patch addresses the javac warning that was caused by using a deprecated function., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12492493/HADOOP-7575-trunk-v5.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-common-project.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/112//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/112//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-auth.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/112//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-common.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/112//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-annotations.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/112//console

This message is automatically generated., Patch looks good to me, but could include a couple more unit tests to verify absolute paths and paths with schemes., Thanks for the review, Sid. I'll add the new unit tests as part of this JIRA and submit a new patch., Jonathan, can you please update the patch with a couple of tests in TestLocalDirAllocator? The code changes look good to me too. Thanks!, Added a couple of tests to better verify the code change, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12494648/HADOOP-7575-trunk-v8.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 9 release audit warnings (more than the trunk's current 0 warnings).

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/190//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/190//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/190//console

This message is automatically generated., release audit warnings are unrelated to the patch, 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1921/
-----------------------------------------------------------

Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Ravi Prakash.


Summary
-------

Contexts with configuration path strings using fully qualified paths (e.g. file:///tmp instead of /tmp) mistakenly creates a directory named 'file:' and sub-directories in the current local file system working directory.


This addresses bug HADOOP-7575.
    http://issues.apache.org/jira/browse/HADOOP-7575


Diffs
-----

  hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java 71c8235 
  hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java 1e22a73 

Diff: https://reviews.apache.org/r/1921/diff


Testing
-------

unit tests included as part of the patch
manual tests that verifies qualified paths don't accidentally create a directory named file:


Thanks,

Jonathan

, Looks good mostly. One minor issue though.
- FILENAME - was this to modify the dir name {{build/test/temp/tmpRELATIVE0/<file>}} or the file name {{build/test/temp/tmp0/RELATIVE}}. It currently modifies the file name - and isn't really required.
Thought rmBufferDirs may need change but that seems to fine since the ROOT paths are all constructed using BUFFER_DIR_ROOT, Thanks for the quick feedback Sid.

Hope this can help clear things up.

You are right in that it is not strictly required. However, I added the FILENAME to limit the interactions between the three runs of each test. With the change, each test will be run for RELATIVE, ABSOLUTE, and QUALIFIED paths. When a test failure occurs, I was hoping this would help debugging to understand which of the test runs is actually having the failure.

Here is an example of the directories created from running test0

build/test/temp/tmp1/RELATIVE4479762554581247692.tmp
/hadoop/trunk/hadoop-common-project/hadoop-common/build/test/temp/tmp1/ABSOLUTE5682530493698547015.tmp
/hadoop/trunk/hadoop-common-project/hadoop-common/build/test/temp/tmp1/QUALIFIED8300568269421645153.tmp

Previously RELATIVE was always set to block, so keeping FILENAME changing only the file name is consistent with the previous behavior. If there is a better way I am very much open to ideas here.
, Thanks for the clarification. Could we move it up to the directory level - in {{buildBufferDir}}. {{LocalDirAllocator.createPaths()}} tries creating the parent path for the file - it'll show up here as well.
Also, there's a couple fo places where the 80 col limit is exceeded., 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1921/#review1919
-----------------------------------------------------------


I didn't really spend any time on the Test code. Sorry :(


hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java
<https://reviews.apache.org/r/1921/#comment4404>

    No biggie, but could you please import the specific class you are using? I know the others imported * too, but its a bad practice ( http://stackoverflow.com/questions/147454/why-is-using-a-wild-card-with-a-java-import-statement-bad )



hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java
<https://reviews.apache.org/r/1921/#comment4403>

    Does localDirs[i] need to be modified as well? i.e. is there somewhere else in the code where it might trip up?



hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java
<https://reviews.apache.org/r/1921/#comment4402>

    Do you really need to get the URI? Doesn't passing the Path to the File constructor here have the same effect?



hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java
<https://reviews.apache.org/r/1921/#comment4405>

    Can we please move these definitions at top with the others since its not being used in this method alone but in later methods too? Its just my opinion.


- Ravi


On 2011-09-15 20:10:18, Jonathan Eagles wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1921/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-15 20:10:18)
bq.  
bq.  
bq.  Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Ravi Prakash.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  Contexts with configuration path strings using fully qualified paths (e.g. file:///tmp instead of /tmp) mistakenly creates a directory named 'file:' and sub-directories in the current local file system working directory.
bq.  
bq.  
bq.  This addresses bug HADOOP-7575.
bq.      http://issues.apache.org/jira/browse/HADOOP-7575
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java 71c8235 
bq.    hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java 1e22a73 
bq.  
bq.  Diff: https://reviews.apache.org/r/1921/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  unit tests included as part of the patch
bq.  manual tests that verifies qualified paths don't accidentally create a directory named file:
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jonathan
bq.  
bq.

, 

bq.  On 2011-09-16 01:43:35, Ravi Prakash wrote:
bq.  > hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java, line 270
bq.  > <https://reviews.apache.org/r/1921/diff/1/?file=41412#file41412line270>
bq.  >
bq.  >     Do you really need to get the URI? Doesn't passing the Path to the File constructor here have the same effect?

Sadly, there is no direct way to do this since our org.apache.hadoop.fs.Path object has a java.net.URI and is not a subclass of java.net.URI. This is why we need two steps.


bq.  On 2011-09-16 01:43:35, Ravi Prakash wrote:
bq.  > hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java, line 22
bq.  > <https://reviews.apache.org/r/1921/diff/1/?file=41412#file41412line22>
bq.  >
bq.  >     No biggie, but could you please import the specific class you are using? I know the others imported * too, but its a bad practice ( http://stackoverflow.com/questions/147454/why-is-using-a-wild-card-with-a-java-import-statement-bad )

Thanks for pointing this article out. After looking more closely, I don't even need to import this since I don't need the definition of URI to pass it unchanged from toUri to the constructor of File. Removing import of java.net.* completely.


bq.  On 2011-09-16 01:43:35, Ravi Prakash wrote:
bq.  > hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java, line 81
bq.  > <https://reviews.apache.org/r/1921/diff/1/?file=41413#file41413line81>
bq.  >
bq.  >     Can we please move these definitions at top with the others since its not being used in this method alone but in later methods too? Its just my opinion.

Reasonable enough. Done.


bq.  On 2011-09-16 01:43:35, Ravi Prakash wrote:
bq.  > hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java, line 265
bq.  > <https://reviews.apache.org/r/1921/diff/1/?file=41412#file41412line265>
bq.  >
bq.  >     Does localDirs[i] need to be modified as well? i.e. is there somewhere else in the code where it might trip up?

the issue only occurs when Strings are passed directly as the parameter to java.io.File. java.io.File doesn't understand schema as part of its constructor, only org.apache.hadoop.fs.Path does. I have double checked the code to verify this issue will not occur anywhere else.


- Jonathan


-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1921/#review1919
-----------------------------------------------------------


On 2011-09-15 20:10:18, Jonathan Eagles wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1921/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-15 20:10:18)
bq.  
bq.  
bq.  Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Ravi Prakash.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  Contexts with configuration path strings using fully qualified paths (e.g. file:///tmp instead of /tmp) mistakenly creates a directory named 'file:' and sub-directories in the current local file system working directory.
bq.  
bq.  
bq.  This addresses bug HADOOP-7575.
bq.      http://issues.apache.org/jira/browse/HADOOP-7575
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java 71c8235 
bq.    hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java 1e22a73 
bq.  
bq.  Diff: https://reviews.apache.org/r/1921/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  unit tests included as part of the patch
bq.  manual tests that verifies qualified paths don't accidentally create a directory named file:
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jonathan
bq.  
bq.

, Addressed comments from @Sid and @Ravi, 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1921/
-----------------------------------------------------------

(Updated 2011-09-16 16:45:50.793916)


Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Ravi Prakash.


Summary
-------

Contexts with configuration path strings using fully qualified paths (e.g. file:///tmp instead of /tmp) mistakenly creates a directory named 'file:' and sub-directories in the current local file system working directory.


This addresses bug HADOOP-7575.
    http://issues.apache.org/jira/browse/HADOOP-7575


Diffs (updated)
-----

  hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java 71c8235 
  hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java 1e22a73 

Diff: https://reviews.apache.org/r/1921/diff


Testing
-------

unit tests included as part of the patch
manual tests that verifies qualified paths don't accidentally create a directory named file:


Thanks,

Jonathan

, 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/1921/#review1934
-----------------------------------------------------------

Ship it!


- Ravi


On 2011-09-15 20:10:18, Jonathan Eagles wrote:
bq.  
bq.  -----------------------------------------------------------
bq.  This is an automatically generated e-mail. To reply, visit:
bq.  https://reviews.apache.org/r/1921/
bq.  -----------------------------------------------------------
bq.  
bq.  (Updated 2011-09-15 20:10:18)
bq.  
bq.  
bq.  Review request for Tom Graves, Jeffrey Naisbitt, Robert Evans, and Ravi Prakash.
bq.  
bq.  
bq.  Summary
bq.  -------
bq.  
bq.  Contexts with configuration path strings using fully qualified paths (e.g. file:///tmp instead of /tmp) mistakenly creates a directory named 'file:' and sub-directories in the current local file system working directory.
bq.  
bq.  
bq.  This addresses bug HADOOP-7575.
bq.      http://issues.apache.org/jira/browse/HADOOP-7575
bq.  
bq.  
bq.  Diffs
bq.  -----
bq.  
bq.    hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java 71c8235 
bq.    hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java 1e22a73 
bq.  
bq.  Diff: https://reviews.apache.org/r/1921/diff
bq.  
bq.  
bq.  Testing
bq.  -------
bq.  
bq.  unit tests included as part of the patch
bq.  manual tests that verifies qualified paths don't accidentally create a directory named file:
bq.  
bq.  
bq.  Thanks,
bq.  
bq.  Jonathan
bq.  
bq.

, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12494818/HADOOP-7575-trunk-v9.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/198//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/198//console

This message is automatically generated., +1, lgtm. Thanks Jonathan, The patch looks good. Particularly the test, I've learnt something new - parameterized tests, FTW!

BTW, I expected the test to fail without the main code changes, but it didn't. Guess we miss one more test that verifies the code changes. Care to see that? I know it is not a big deal for this bug, but it follows our discipline w.r.t tests. Thanks!, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12495236/HADOOP-7575-trunk-v11.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/209//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/209//console

This message is automatically generated., I have to credit Vinod for his work on the new test case testNoSideEffects. Well done!, That looks solid!

I just committed this to trunk and branch-0.23. Thanks Jonathan!, Integrated in Hadoop-Common-trunk-Commit #930 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/930/])
    HADOOP-7575. Enhanced LocalDirAllocator to support fully-qualified paths. Contributed by Jonathan Eagles.

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1173623
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java
, Integrated in Hadoop-Hdfs-trunk-Commit #1008 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/1008/])
    HADOOP-7575. Enhanced LocalDirAllocator to support fully-qualified paths. Contributed by Jonathan Eagles.

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1173623
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #947 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/947/])
    HADOOP-7575. Enhanced LocalDirAllocator to support fully-qualified paths. Contributed by Jonathan Eagles.

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1173623
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java
, Integrated in Hadoop-Mapreduce-0.23-Build #20 (See [https://builds.apache.org/job/Hadoop-Mapreduce-0.23-Build/20/])
    HADOOP-7575. svn merge -c r1173623 --ignore-ancestry ../../trunk/

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1173626
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java
, Integrated in Hadoop-Hdfs-trunk #808 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/808/])
    HADOOP-7575. Enhanced LocalDirAllocator to support fully-qualified paths. Contributed by Jonathan Eagles.

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1173623
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java
, Integrated in Hadoop-Mapreduce-trunk #838 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/838/])
    HADOOP-7575. Enhanced LocalDirAllocator to support fully-qualified paths. Contributed by Jonathan Eagles.

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1173623
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java
, Integrated in Hadoop-Hdfs-0.23-Build #17 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/17/])
    HADOOP-7575. svn merge -c r1173623 --ignore-ancestry ../../trunk/

vinodkv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1173626
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/LocalDirAllocator.java
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalDirAllocator.java
]