[Patch for release 20 attached. The approach is:
# To ensure backward compatibility, when applications use the old key "dfs.umask" and the server default has "dfs.umaskmode", old key overrides the new key. That is first the old key is used for getting umask and then the new key.
# FsPermission.setUMask(Configuration conf, FsPermission umask) currently has a bug. When setting the "dfs.umaskmode" param in the configuration, it should convert the umask decimal value to octal.

This patch is not applicable to release 21, since it uses deprecation mechanism introduced in Hadoop-6105 and more work is needed to make this solution work in that realm., Ran some manual tests just to verify the fix. Set in the hdfs-site.xml "dfs.umaskmode" as 077 and run the following tests:
# bin/hadoop dfs -put /tmp/test /tmp/test; bin/hadoop dfs -ls /tmp/test;bin/hadoop dfs -rmr /tmp/test
#* File mode should be {{\-rw-------}}
# bin/hadoop dfs -Ddfs.umask=18 -put /tmp/test /tmp/test; bin/hadoop dfs -ls /tmp/test;bin/hadoop dfs -rmr /tmp/test
#* File mode should be {{\-rw-r-\-r--}}
# bin/hadoop dfs -Ddfs.umaskmode=222 -put /tmp/test /tmp/test; bin/hadoop dfs -ls /tmp/test;bin/hadoop dfs -rmr /tmp/test
#* File mode should be {{\-r-\-r-\-r--}}


, - I think it is better to update both UMASK_LABEL and DEPRECATED_UMASK_LABEL in setUMask(..).
- Also when both UMASK_LABEL and DEPRECATED_UMASK_LABEL are set in conf and they have different values, should we throw an exception?, > I think it is better to update both UMASK_LABEL and DEPRECATED_UMASK_LABEL in setUMask(..).
sounds reasonable. Though only one of them is going to be used

> Also when both UMASK_LABEL and DEPRECATED_UMASK_LABEL are set in conf and they have different values, should we throw an exception?
In release 20, the server config will be setup with UMASK_LABEL. The user can override the default by:
# Calling FsPermission.setUMask() (this has been addressed)
# By setting configuration param either by calling conf.set() or by specifying umask in command line (see manual tests posted above).

Given that I think we should allow these two configurations to have separate value. Further, giving higher priority to deprecated key, assuming the user is likely to use it is the right choice. If the user happens to use the new key there is no conflict., New patch addresses comments from Nicholas., Setting both is a good approach, but will have the unfortunate side effect that if the user is correctly using the new key, the old key will also be set and the user will then get undeserved deprecation warnings.  An offline discussion c/ Nicholas and Suresh suggests that comparing the values of both the old and new keys may miss some valid cases where a warning is warranted, but will avoid invalid warnings. This is probably the best approach to take., New patch addresses comments from Jakob and Nicholas., New patch., +1 the new patch looks good., Changes in the patch:
# Symbolic and octal umask mode was added configurable with param name "dfs.umaskmode". It deprecates the old param "dfs.umask". Previously for backward compatibility new deprecation mechanism introduced in 0.21 was used. This mechanism is useful when a config param name changes, to map the old config name to the new. However in case of umask, the semantics of the param also changes. Old param expects decimal value and the new param  expects symbolic or octal value. The deprecation mechanism in addition to mapping old to new names, must also translated the old value to new value. Given the lack of this capability, umask will no longer use config deprecation mechanism.

# Following changes from 0.20 version of the patch is carried forward, with the exception of test changes. Test changes are needed in HDFS. I will created a separate jira for that.
{quote}
    1.  To ensure backward compatibility, when applications use the old key "dfs.umask" and the server default has "dfs.umaskmode", old key overrides the new key. That is first the old key is used for getting umask and then the new key.
   2. FsPermission.setUMask(Configuration conf, FsPermission umask) currently has a bug. When setting the "dfs.umaskmode" param in the configuration, it should convert the umask decimal value to octal.
{quote}
, If we're - correctly - not using the deprecatedKeyWasSet method, and this was the only place it was used and it's not yet been released, might we just as well remove it?  Otherwise it's an unused, potentially buggy API.  Otherwise, +1., Removed deprecateKeyWasSet() method and related tests., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12442708/hadoop-6521.patch
  against trunk revision 937183.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h1.grid.sp2.yahoo.net/50/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h1.grid.sp2.yahoo.net/50/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h1.grid.sp2.yahoo.net/50/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h1.grid.sp2.yahoo.net/50/console

This message is automatically generated., Attaching the right patch., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12442715/hadoop-6521.1.patch
  against trunk revision 937183.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h1.grid.sp2.yahoo.net/51/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h1.grid.sp2.yahoo.net/51/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h1.grid.sp2.yahoo.net/51/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h1.grid.sp2.yahoo.net/51/console

This message is automatically generated., I committed this change.]