[Patch is trivial.  Logic was incorrect.

This might be a critical issue for some users., Submitting to Hudson.  No unit test available... I'll let Pete look into this one; certainly it *should* be covered., good catch! 

i don't think it is covered. probably need to augment testWrites to do a getFileStatus and check the the created file has the right group.

, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12394700/hadoop-4727.patch
  against trunk revision 720930.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 Eclipse classpath. The patch retains Eclipse classpath integrity.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3659/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3659/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3659/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3659/console

This message is automatically generated., Hi Brian,

I think you can unit test this by adding the following to the testWrites method in src/test/TestFuseDFS.java

{code}
      Runtime r = Runtime.getRuntime();
      String cmd = "stat -c %G " + mpoint + "/hello.txt";
      Process p = r.exec(cmd);
      p.waitFor();
      InputStream i = p.getInputStream();
      byte buf[] = new byte[i.available()];
      length = i.read(buf);

      String res = new String(buf,0, length-1);
      
      if(res.equals("root")) {
        assertEquals(foo.getGroup(), "supergroup");
      } else {
        assertEquals(foo.getGroup(), res);
      }

{code}
, forgot to mention - i think you also need to special case this supergroup entity of hdfs in fuse_dfs.c

{code}
  if (info->mGroup != NULL) {                                                                                                                                                                                
    //                                                                                                                                                                                                       
    // Critical section - protect from concurrent calls in different threads since                                                                                                                           
    // the struct below is static.                                                                                                                                                                           
    // (no returns until end)                                                                                                                                                                                
    //                                                                                                                                                                                                       
                                                                                                                                                                                                             
    pthread_mutex_lock(&groupstruct_mutex);                                                                                                                                                                  
                                                                                                                                                                                                             
    struct group *grp = getgrnam(info->mGroup);                                                                                                                                                              
    group_id = grp == NULL ? default_id : grp->gr_gid;                                                                                                                                                       
                                                                                                                                                                                                             
    if (grp == NULL && strcmp(info->mGroup, "supergroup") == 0) {                                                                                                                                  
      group_id = 0; // i.e., root                                                                                                                                                                            
    }                                                                                                                                                                                                        
                                                                                                                                                                                                             
    //                                                                                                                                                                                                       
    // End critical section                                                                                                                                                                                  
    //                                                                                                                                                                                                       
    pthread_mutex_unlock(&groupstruct_mutex);                                                                                                                                                                
                                                                                                                                                                                                             
  }                  
{code}, > i think you also need to special case this supergroup entity of hdfs in fuse_dfs.c 

The user domain in HDFS and the user domain in local host are different.  Being a superuser of HDFS does not automatically imply a superuser of the local host, and vice versa.  So, I think we don't need this., What should fuse return when the group is supergroup then? the current code will end of returning 'nobody'

, I think the correct semantic is to require that the users and groups in HDFS must exist in the local host when using fuse.  So if a user or group is not found locally, throw an exception.

BTW, what Linux does if a remote directory is mounted to a local machine but some accounts used in the remote directory does not exist locally?  We probably should do the same., bq. what Linux does if a remote directory is mounted to a local machine but some accounts used in the remote directory does not exist locally?

Linux reports the uid and gid of the files instead of the username and group name. However, this isnt an option in this scenario, as we the usernames not uids are used by Hadoop.

I prefer that the code returns nobody if the user is not known., It looks like we have consensus that this is the right patch.

+1 on the code.  Not really unit test feasible, so i think we can do without that.

, patch for the new organization on trunk. Same code.
, note the hudson test failure  was unrelated to this, so i think  this is ready to commit.

, I just committed this.  Thanks, Brian!, Integrated in Hadoop-trunk #680 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/680/])
    ]