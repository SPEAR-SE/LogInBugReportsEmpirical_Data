[Ok here is an early version of the patch (no testcase yet). The patch applies on 0.18 as well., Attaching the patch [5746.6.patch]. It looks like its a very timing issue to reproduce/test this bug. The problem occurs when the pipe process finishes off and then the output thread cranks up with some exception (like fs errors). 
Attaching a framework change [5746-reproduce.1.patch] and a testcase [/5746-testcase.patch] to verify the fix. The caller of {{PipeMapRed.waitOutputThreads()}} i.e {{PipeMapRed.mapRedFinished()}} simply ignores IOException hence changed the exception to {{RuntimeException}}. I dont know why PipeMapRed.mapRedFinished() ignores IOException. But for now I have kept it as it is. , Result of test-patch
{code}
 [exec] -1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     -1 tests included.  The patch doesn't appear to include any new or modified tests.
     [exec]                         Please justify why no tests are needed for this patch.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
[code}

Streaming tests passed on my box except TestStreamingExitStatus which fails even on trunk.
, I just committed this. Thanks, Amar!]