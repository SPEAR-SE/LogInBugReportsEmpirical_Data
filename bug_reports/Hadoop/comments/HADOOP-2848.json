[The attached file modifies the behavior of the list, info and deallocate commands when the cluster directory is not found. 

list : will list the cluster state as 'cluster state unknown' and continue to print the cluster id and cluster directory. Previously, it used to not print anything
info: will print that the cluster directory is invalid, and print the cluster id, if the cluster directory was deleted.
deallocate: will print that the cluster directory is invalid, and deallocate the cluster, based on the cluster id, if the cluster directory was deleted, thus freeing up nodes.

The patch also adds unit tests for testing the above conditions., Some problems:
   * allocate a cluster, delete the cluster directory and then create the directory. hod list again shows nothing. What should be the behaviour here?
   * allocate a cluster, delete the cluster directory, create the directory and then use the same directory for another allocation. The second allocation goes through without fuss and the first allocation still runs without the user knowing it. Here, I guess, we definitely need some fix.

Other than that, a very minor thing : deallocating such clusters says "Invalid cluster directory '<cluster-id>' specified. Deleted cluster with cluster id <cluster-id>". 'Deleting cluster' here looked a bit confusing to me on the first look, could it be something like 'freed up' or 'removed from queue'?, Cancelling patch to incorporate Vinod's comments., Vinod, thanks for the review. 

The attached patch fixes the problems identified in the review. In the process, I modified the error codes and messages for some of the operations so that they are now consistent.

The behavior of the list, info and deallocate commands for a directory that was previously allocated, but was subsequently deleted, or recreated would be the same in that we would identify that this was a previously allocated directory and give out a message accordingly. 

The allocate command will now fail if the cluster directory was found to be allocated (or recreated)

If an invalid directory is given to info or deallocate, it would just print a message saying the directory is invalid and fail., The error code returned when you remove a cluster directory, create it again, and then use it for another allocation is 3. 12 seems to be a more appropriate error code.

+1 for the fix otherwise., Trivial change to incorporate Vinod's comment on error code. This patch is committable once Hudson approves., +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12378200/2848.2.patch
against trunk revision 619744.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 8 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1998/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1998/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1998/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1998/console

This message is automatically generated., I just committed this. Thanks, Hemanth!, Integrated in Hadoop-trunk #434 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/434/]), Integrated in Hadoop-trunk #435 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/435/])]