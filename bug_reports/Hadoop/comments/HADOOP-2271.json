[Code review please - simple one line fix to add parallel="false" to chmod call., Patch available., +1 on patch.  Looks good.  Applied for me and it ran w/o issue.  But, on my local machine at least, I do not have original problem of 'ant clean package' failing., Path to my hadoop: /Users/stack/Documents/checkouts/hadoop-trunk., Interesting that you don't have the issue while having a longer path. Maybe it has something to do with version of chmod or shell? We experienced the error on both machines we tried it on here with similar length paths. , mac os x 10.4.11.  Just tried it on Fedora Core 6 w/ path of /home/stack/hadoop-trunk and didn't have the prob. there either., /home/stack/hadoop-trunk is too short to cause the problem (works here too), if u can, try with a path of at least 35 chars (not sure what the exact cut-off is). Machines we tested on were Ubuntu..., Maybe just ubuntu?  I tried w/ 1.5 and 1.6.

{code}
[stack@aa0-000-12 hadoop-trunk]$ pwd/home/stack/long-path/long-path/long-path/long-path/long-path/hadoop-trunk
[stack@aa0-000-12 hadoop-trunk]$ ~/bin/ant/bin/ant clean package
...
 [copy] Copied 106 empty directories to 3 empty directories under /home/stack/long-path/long-path/long-path/long-path/long-path/hadoop-trunk/build/hadoop-0.16.0-dev/docs     [copy] Copying 4 files to /home/stack/long-path/long-path/long-path/long-path/long-path/hadoop-trunk/build/hadoop-0.16.0-dev     [copy] Copying 1200 files to /home/stack/long-path/long-path/long-path/long-path/long-path/hadoop-trunk/build/hadoop-0.16.0-dev/src     [copy] Copying 1 file to /home/stack/long-path/long-path/long-path/long-path/long-path/hadoop-trunk/build/hadoop-0.16.0-devBUILD SUCCESSFULTotal time: 43 seconds
{code}, -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12370130/HADOOP-2271-1.patch
against trunk revision r597663.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs -1.  The patch appears to introduce  new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1148/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1148/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1148/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1148/console

This message is automatically generated., Cancelling so can re-apply patch now that findbugs appears to be working again, See if patch passes hudson now that findbugs appears to be working again, +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12370130/HADOOP-2271-1.patch
against trunk revision r598699.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1178/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1178/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1178/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1178/console

This message is automatically generated., Not sure why this has been re-assigned back to me. 

Hudson seems happy with it so surely someone with commit rights should do a review and decide whether my patch should be committed or not?, (see my previous comment), Assigning it to you just gives you credit for providing the fix.  It doesn't mean you're expected to do anything more right now., Sorry, I was just trying to sweep through and assign owners so that later we can figure out who did what. I like to be able to get the list of contributers and how many patches they have submitted. It helps when looking for new committers if the fixed jiras are assigned to the person who submitted the patch., Aah ok, that makes sense, I'll assign it back tomyself then, good to know how you guys work as when I've used Jira in the past the person who it is assigned it is the one who is responsible for whatever happens next. Thanks for the clarification., I just committed this. Thanks, Adrian!, Integrated in Hadoop-Nightly #326 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/326/])]