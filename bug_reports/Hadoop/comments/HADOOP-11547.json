[The attached patch removes the include.  It's unclear to me why this was added in HADOOP-11403, because the changes that were made in NativeIO.c don't seem to require it.  I verified that this builds successfully on Linux and Windows.  HADOOP-11403 was a patch related to Solaris, but I don't have access to a Solaris machine right now to verify on that platform., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12696503/HADOOP-11547.001.patch
  against trunk revision ba58da2.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-common-project/hadoop-common:

org.apache.hadoop.io.nativeio.TestNativeIO
org.apache.hadoop.io.TestSecureIOUtils

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5581//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5581//console

This message is automatically generated., Somehow I missed that {{terror}} is actually declared in exception.h.  Here is patch v002, which keeps the include, but moves it to the {{#ifdef UNIX}} section.  On Windows, there is no code path that calls {{terror}}., Thanks for looking at this.  You're certainly right that HADOOP-11403 regressed this on Windows.

I think the patch here is not quite right.  The code for UNIX uses a function defined in {{exception.h}}, {{terror}}.  That is why the {{#include}} was added.  Due to an obscure quirk in pre-standardization C / C++ that got grandfathered into the ANSI standard, you can call a function without actually defining what types it takes, and the compiler will "guess" about what types it takes (I think it defaults to assuming that it returns an int?)  While this may compile (with a warning), it is not correct.  It may lead to incorrect code being generated if the size of the return type is different than the size of an {{int}}... I think there are some issues with the arguments as well.

I think it's better to do like we do in {{libhdfs/exception.h}}, and simply have a macro that stubs out these declarations for Windows.

thanks, bq. ...the compiler will "guess" about what types it takes...

This is exactly what happened in the first Jenkins run, ultimately resulting in a segfault from {{TestNativeIO}}., Patch v003 takes the macro approach in exception.h., I find it amusing that we have an error reporting function named "terror".  :-), {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12696512/HADOOP-11547.002.patch
  against trunk revision 064e077.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5583//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5583//console

This message is automatically generated., bq. I find it amusing that we have an error reporting function named "terror".  

Technically, it's "threadsafe error" :)

+1.  Thanks, Chris., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12696520/HADOOP-11547.003.patch
  against trunk revision 064e077.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5584//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5584//console

This message is automatically generated., Thank you for the review, Colin.  I committed this to trunk and branch-2.

bq. -1 tests included. The patch doesn't appear to include any new or modified tests.

There were no new tests, because this fixed a compilation failure on Windows.  I verified that existing native code tests passed.

bq. Technically, it's "threadsafe error" 

I'm sticking with the Merriam Webster definition:

{quote}
something that causes very strong feelings of fear
{quote}
, FAILURE: Integrated in Hadoop-trunk-Commit #7005 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7005/])
HADOOP-11547. hadoop-common native compilation fails on Windows due to missing support for __attribute__ declaration. Contributed by Chris Nauroth. (cnauroth: rev a35e86c6701ffec263966bab31bd9368923c7e80)
* hadoop-common-project/hadoop-common/src/main/native/src/exception.h
* hadoop-common-project/hadoop-common/CHANGES.txt
, +1, Updated my trunk after this patch and compilation is success..Thanks [~cnauroth], FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #95 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/95/])
HADOOP-11547. hadoop-common native compilation fails on Windows due to missing support for __attribute__ declaration. Contributed by Chris Nauroth. (cnauroth: rev a35e86c6701ffec263966bab31bd9368923c7e80)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/native/src/exception.h
, FAILURE: Integrated in Hadoop-Yarn-trunk #829 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/829/])
HADOOP-11547. hadoop-common native compilation fails on Windows due to missing support for __attribute__ declaration. Contributed by Chris Nauroth. (cnauroth: rev a35e86c6701ffec263966bab31bd9368923c7e80)
* hadoop-common-project/hadoop-common/src/main/native/src/exception.h
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #2027 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2027/])
HADOOP-11547. hadoop-common native compilation fails on Windows due to missing support for __attribute__ declaration. Contributed by Chris Nauroth. (cnauroth: rev a35e86c6701ffec263966bab31bd9368923c7e80)
* hadoop-common-project/hadoop-common/src/main/native/src/exception.h
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #92 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/92/])
HADOOP-11547. hadoop-common native compilation fails on Windows due to missing support for __attribute__ declaration. Contributed by Chris Nauroth. (cnauroth: rev a35e86c6701ffec263966bab31bd9368923c7e80)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/native/src/exception.h
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #96 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/96/])
HADOOP-11547. hadoop-common native compilation fails on Windows due to missing support for __attribute__ declaration. Contributed by Chris Nauroth. (cnauroth: rev a35e86c6701ffec263966bab31bd9368923c7e80)
* hadoop-common-project/hadoop-common/src/main/native/src/exception.h
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2046 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2046/])
HADOOP-11547. hadoop-common native compilation fails on Windows due to missing support for __attribute__ declaration. Contributed by Chris Nauroth. (cnauroth: rev a35e86c6701ffec263966bab31bd9368923c7e80)
* hadoop-common-project/hadoop-common/src/main/native/src/exception.h
* hadoop-common-project/hadoop-common/CHANGES.txt
]