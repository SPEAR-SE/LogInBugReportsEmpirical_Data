[Attaching the log., {code}
    Putter putter = new Putter(cq, putAttempts, null);
    Thread t = new Thread(putter);
    t.start();
    t.join(100);

    assertEquals(numberOfPuts, putter.callsAdded);
{code}
Looks like put attempts did not complete in 100ms. Extending the waiting time would fix it., Attaching a patch to extend the waiting time from 100ms to 3000ms., Attaching the same patch to run tests., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12671661/HADOOP-11145.patch
  against trunk revision 7f300bc.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.crypto.random.TestOsSecureRandom

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4820//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4820//console

This message is automatically generated., The test failure is not related to the patch. Tracked by HADOOP-11125, Hi, [~ajisakaa].  Thanks for taking this.  I have a VM that repros this failure fairly often, and I can confirm that it has stopped happening after applying your patch.

However, this looks like a problem that would benefit from using a {{CountDownLatch}} to count the number of completed puts.  This would eliminate any chance of a race condition causing a test failure in any environment.  {{assertCanPut}} could instantiate a {{CountDownLatch}} with its count initialized to {{numberOfPuts}} and pass it into the {{Putter}} constructor.  Then, {{assertCanPut}} would call {{CountDownLatch#await}}, while the background {{Putter}} thread calls {{CountDownLatch#countDown}}.

There is a similar problem with {{assertCanTake}} too, and again it looks like a {{CountDownLatch}} would solve it., Attaching a patch to use {{CountDownLatch}} to wait for Putter/Taker to put/take. Thank you for the detailed comment, [~cnauroth]., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12672025/HADOOP-11145.2.patch
  against trunk revision 0577eb3.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.ha.TestZKFailoverControllerStress

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4839//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4839//console

This message is automatically generated., +1 for the patch.  I ran this multiple times again in multiple VMs, and I saw it pass every time.  The other test failure is unrelated.  I committed this to trunk and branch-2.  Thanks again to Akira for fixing this., FAILURE: Integrated in Hadoop-trunk-Commit #6151 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6151/])
HADOOP-11145. TestFairCallQueue fails. Contributed by Akira AJISAKA. (cnauroth: rev b9158697a4f2d345b681a9b6ed982dae558338bc)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestFairCallQueue.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #697 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/697/])
HADOOP-11145. TestFairCallQueue fails. Contributed by Akira AJISAKA. (cnauroth: rev b9158697a4f2d345b681a9b6ed982dae558338bc)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestFairCallQueue.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1888 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1888/])
HADOOP-11145. TestFairCallQueue fails. Contributed by Akira AJISAKA. (cnauroth: rev b9158697a4f2d345b681a9b6ed982dae558338bc)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestFairCallQueue.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1913 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1913/])
HADOOP-11145. TestFairCallQueue fails. Contributed by Akira AJISAKA. (cnauroth: rev b9158697a4f2d345b681a9b6ed982dae558338bc)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestFairCallQueue.java
* hadoop-common-project/hadoop-common/CHANGES.txt
]