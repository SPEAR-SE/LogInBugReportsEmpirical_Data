[namenode .out file.
Exception in thread
"org.apache.hadoop.dfs.FSNamesystem$HeartbeatMonitor@5b9d2de4" java.util.ConcurrentModificationException
  at
java.util.AbstractList$Itr.checkForComodification(AbstractList.java:372)
  at java.util.AbstractList$Itr.next(AbstractList.java:343)
  at
org.apache.hadoop.dfs.FSNamesystem.heartbeatCheck(FSNamesystem.java:1933)
  at
org.apache.hadoop.dfs.FSNamesystem$HeartbeatMonitor.run(FSNamesystem.java:1697)
  at java.lang.Thread.run(Thread.java:619), Namenode  just prints to stderr(.out file)  and keeps on running without HeartbeatMonitor thread.  
As a result, namenode tries to assign blocks to the dead datanodes., Use a try-catch to ensure that heartbeat monitor continues to run. Protec removeDataNodes by using the heartbeats monitor lock., Incorporated Raghu's comments of protecting the node.isAlive field by using the heartbeats monitor lock., Another minor change:

Also since this patch catches all exceptions inside couple of threads (just like other threads), could we log the exceptions at error level instead of info? This way we can differentiate these unexpected exceptions from other expected ones while grepping the logs.
, +1

http://issues.apache.org/jira/secure/attachment/12356658/heartbeatmonitor2.patch applied and successfully tested against trunk revision r534234.

Test results:   http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/104/testReport/
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/104/console, Incorporated Raghu's comments about logging levels., I just committed this.  Thanks, Dhruba!, Integrated in Hadoop-Nightly #77 (See http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/77/), Patch for 0.12.3 release.]