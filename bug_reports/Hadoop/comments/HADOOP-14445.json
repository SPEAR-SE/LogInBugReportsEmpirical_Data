[I found my jira summary is confusing. It's actually the kms client (in LoadBalancingKMSClientProvider configuration) that's to blame. KMS instances do share delegation tokens, but client does not know it can send KMS#1's delegation token to KMS#2 for authentication., Another design requirement is to make sure this works for a client to access two different KMS clusters., The patch includes this jira and HADOOP-14134
This will make RM conf independent of config key: {{hadoop.security.key.provider.path}}
This is just a branch-2.8 patch since we had internal patch for branch-2.8.
I don't think much code has been changed in trunk around this area.
Will try to post trunk patch by early next week.
[~yzhangal]: Apologies for delay in posting the patch.
Kindly review., [~jojochuang]: Thanks a lot for your test case from HADOOP-14441.
I just added couple of things like renew and cancel token in addition to your test case. , Some quick and pretty minor reviews:.
# KMSClientProvider#clientProvidedUriText does not need to be public.
# I would really like to see the kms delegation tokens printed in the log at INFO level, just like HDFS delegation tokens. This can be added in {{DistributedFileSystem#addDelegationTokens)
, HI [~shahrs87],

Thanks much for the patch and [~jojochuang] and [~asuresh] for the discussion and review.

I did a review and here are my comments.

1. about new field "clientProvidedUriText" 
a. typo "clientProvidedUriText" should be "clientProviderUriText"
b. make it private instead of public, and add accessor methods
c. AND provide a comment on the format of its value.

2. I would like to see a description of the solution as a detailed comment somewhere in the code, maybe right at the new field of item #1.

3. Suggest to change
{code}
 public static KeyProvider createKeyProviderFromToken(final Configuration conf,
      final String tokenServiceValue)  throws IOException {
{code}
to
{code}
 public static KeyProvider createKeyProviderFromTokenService(final Configuration conf,
      final String tokenService)  throws IOException {
{code}

4.
{code}
  /**
   * This method is created for testing of @LoadBalancingKMSClientProvider
   * since multiple kms servers in unit tests will only differ in port number
   * and multiple kms servers in real world application are designed to
   * share the same port number.
   * @param conf
   * @param tokenServiceValue
   * @return
   * @throws IOException
   */
  public static KeyProvider createKeyProviderFromToken(final Configuration conf,
      final String tokenServiceValue)  throws IOException {
    if (tokenServiceValue == null) {
      return null;
    }
    if (!tokenServiceValue.contains(",")) {
      return createKeyProviderFromUri(conf, URI.create(tokenServiceValue));
    }
    // The following code will be executed in just unit tests.
    // The syntax for kms servers will be
    // kms://localhost:port1/kms,kms://localhost:port2/kms
    String[] keyProviderUrisStr = tokenServiceValue.split(",");
    KMSClientProvider[] keyProviderArr =
        new KMSClientProvider[keyProviderUrisStr.length];
{code}

a. Comment need to be changed to say that "," only appear in tokenServiceValue of unit tests because different ports need to be used in unit tests. 
b. And indicate what format to expect for production code, and what format to expect for unit test.
c. We can separate the code used for test only to a separate method and call this method in the above method, to make it more clear.

5. With this solution, if we add a new kms server, the currently running application will not be able to use the new kms server.
And if we replace an existing kms server with a different one, currently running application may fail. So the KMS HA may not be really HA.
This may not be a big concern, but I would like to bring it up here.

Thanks.


, It would be nice to have a description of the solution in this jira too [~shahrs87]. Thanks.

, [~yzhangal]: I understand that comments are not adequate in this patch.
I submitted this patch just for iteration purpose.
I will add verbose comments in my next patch.
Thanks for the quick reviews [~jojochuang] [~yzhangal].
bq. And if we replace an existing kms server with a different one, currently running application may fail. So the KMS HA may not be really HA.
Also the current patch is incompatible since the new kms clients won't be able to find the token which in the format of {{ip:port}}.
We can fallback to old behavior just by adding an if clause saying if we don't find a token with the new format, fallback to old format.
In this way, we will be able to address the incompatibility.
Let me know if you have any feedback. Once again thank you all !!, Thanks much [~shahrs87].

My thinking is:

For clients which are running without the fix, the behavior will be the same as before;
For clients which are started after installing the fix, the tokens will be stored with the new key;
If different pieces of a client job are running with different software (some has the fix, some don't), then fallback may or may not work.

Does this make sense to you?  Maybe we can add the tokens with both the old key and new key, then apply fallback when needed, so fallback will be successful?

[~asuresh]'s #2 proposal at 
https://issues.apache.org/jira/browse/HADOOP-14441?focusedCommentId=16019893&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16019893
seems more robust, but I'm not sure how involved this solution is too.

Thanks.

, bq. For clients which are running without the fix, the behavior will be the same as before;

{code:title=KMSClientProvider.java|borderStyle=solid}
 public DelegationTokenAuthenticatedURL createKMSAuthenticatedURL() {
    return  new DelegationTokenAuthenticatedURL(configurator) {
      @Override
      public Text getDelegationTokenService(URL url) {
        return clientProvidedUriText;
      }
    };
  }
{code}
For example if a job was submitted with a token having tokenService in the format {{ip:port}}.
The newer client having the fix will fail to read the token with tokenService as {{full kms url}} even if the job client has acquired the token and the token is good to authenticate.
Does it make sense ?, Thanks [~shahrs87],

As I commented earlier, [~asuresh]'s #2 proposal at 
https://issues.apache.org/jira/browse/HADOOP-14441?focusedCommentId=16019893&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16019893

seems more robust, and more backward compatible.

We need hadoop.kms.authentication.zk-dt-secret-manager.enable set to true anyways.

Have you tried this approach? Any thought?

Thanks.

--Yongjun, bq. seems more robust, and more backward compatible.
I don't think its more robust since currently RM (kms token renewer) is still dependent on local conf to find the key provider since the current token service format is {{ip:port}}. It doesn't know anything about the protocol (http or https).
After this change, RM will instantiate a kms client provider independent of conf since the kms url is present in the token service value.
[~asuresh]: please correct me if I am wrong.
We made this fix as a part of HADOOP-14134.
bq. Have you tried this approach? Any thought?
I haven't tried this approach yet.
, HI [~shahrs87],

The current format of key provider URI is:

{code}
    /**
     * This provider expects URIs in the following form :
     * kms://<PROTO>@<AUTHORITY>/<PATH>
     *
     * where :
     * - PROTO = http or https
     * - AUTHORITY = <HOSTS>[:<PORT>]
     * - HOSTS = <HOSTNAME>[;<HOSTS>]
     * - HOSTNAME = string
     * - PORT = integer
     *
     * If multiple hosts are provider, the Factory will create a
     * {@link LoadBalancingKMSClientProvider} that round-robins requests
     * across the provided list of hosts.
     */
{code}

Each host corresponds to one KMS, I thought we just need split the hosts part, and make each one its own URI with the corresponding host, and use that for tokenService key for each KMS.

So when we collect a delegation token from one KMS, we associate the token with each KMS and the corresponding URI. It's more robust to me because the info about each KMS is only about itself, no host concatenation in the key of <key, DT> map.

About
{quote}
 currently RM (kms token renewer) is still dependent on local conf to find the key provider since the current token service format is ip:port. It doesn't know anything about the protocol (http or https).
{quote}

With either the current patch of the Arun's #2 solution, we can address this problem, so this seems an orthogonal issue, no?

Hi [~asuresh], thanks for your earlier proposal, would you please comment here?

Thanks.
, [~yzhangal], Apologies for the delay
{quote}
Each host corresponds to one KMS, I thought we just need split the hosts part, and make each one its own URI with the corresponding host, and use that for tokenService key for each KMS.
{quote}
I think the KMSClientProvider.KeyProviderFactory does this.

{quote}
So when we collect a delegation token from one KMS, we associate the token with each KMS and the corresponding URI.
{quote}
Yup... this was precisely what I was thinking. , bq. With either the current patch of the Arun's #2 solution, we can address this problem, so this seems an orthogonal issue, no?
Let me understand Arun's#2 proposed fix.
For example: if the loadbalancing kms url is {{kms://https@kms01.example.com;kms02.example.com:9600/kms}}
After applying Arun's#2 proposed fix, what will the token map look like ?
1.
||TokenService||Token||
|kms://https@kms01.example.com:9600/kms|t1|
|kms://https@kms02.example.com:9600/kms|t1|

or
2. 
||TokenService||Token||
|{{kms01.example.com}}'s ip:9600|t1|
|{{kms02.example.com}}'s ip:9600|t1|
[~asuresh] [~yzhangal], [~shahrs87], As per [SecurityUtil#buildTokenService|https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SecurityUtil.java#L440-L453] it should be the latter:
||TokenService||Token||
|{{kms01.example.com}}'s ip:9600|t1|
|{{kms02.example.com}}'s ip:9600|t1|, bq. Rushabh S Shah, As per SecurityUtil#buildTokenService it should be the latter:
{quote}
About
bq. currently RM (kms token renewer) is still dependent on local conf to find the key provider since the current token service format is ip:port. It doesn't know anything about the protocol (http or https).
With either the current patch of the Arun's #2 solution, we can address this problem, so this seems an orthogonal issue, no?
{quote}
If its the latter, then RM would still depend on local conf to create key provider object to renew token., Not sure I follow. Why is the fact that RM depends on local conf to create the key provider a bad thing ?, Thanks [~shahrs87] and [~asuresh].

I agree with what Arun suggested here about the format because that's what currently used. Introducing a new format would mean incompatibility.

In the future (a separate jira), I think it'd be nice to have a kms-nameservice like NameNode's nameservice, and associate the KMS related configs with a kms-nameservice. We might have multiple KMS-nameservices, say, one for each cluster. This would be a config format change. 

Either ways, accessing local conf is necessary.

Thanks.


, _No more config-based solutions_.  It's not logistically possible to manage and update configs in a multi-cluster/multi-kms environment.

# A token renewer, like the RM, must be able to instantiate a key provider client in the absence of any configs.  That means the service must contain the provider uri or multi-kms environments are not possible.
# Duplicating tokens is a no-go.  The RM will attempt to unnecessarily renew all of them.

The current implementation is broken by design.  If we absolutely must keep compatibility with a dubious mix-n-match version environment, it's either going to be hacky, or we abandon the current kms scheme and create a new one that works correctly., Thanks [~daryn].

{quote}
No more config-based solutions
{quote}
It seems unavoidable if we want to implement ksm-nameservice.

For this jira, maybe we just go with what [~shahrs87] has, use key with concatenated host, if can't find match, fallback to original key format.  If user add new KMS and replace KMS, the clients need to be restarted with the new config.

What do you think [~shahrs87], [~asuresh] and [~daryn]?

Thanks.
, bq. It seems unavoidable if we want to implement ksm-nameservice.
I'm not sure what this means but anything config based is not scalable.  Updating configs of tens of thousands of nodes, launchers, oozie, storm, spark, etc and restarting the services is just not logistically possible.  This is largely why we added the ability for the NN to tell the client the kms uri, plus it added much needed multi-kms support.

bq. If user add new KMS and replace KMS, the clients need to be restarted with the new config.
Another illustration of why a config-based approach is a bad idea.  The cleanest way to manage a kms cluster is transparently via a cname or multi-A record.

I've consulted with Rushabh on the initial design, I'll review the actual patch today., Thanks [~daryn].

When I say it's unavoidable, I mean, if we use a nameservice, we need to consult the config to know what's associated with the nameservice. For example NN nameservice, if we do "distcp hdfs://nameservice1:/xyz hdfs://nameservice2:/abc", we need to look up nameservice1/2 in config, to know the associated NNs.

Similarly, if we use shared delegation token for all KMS servers, we could define a kms-nameservice to associate with the set of KMS servers, and the tokenService can just be the kms-nameservice, and from the config, we can find out the associated KMS server information.

Does that make sense?
, [~daryn], agreed that duplicating the entries is bad if the RM will blindly renew all of them. Although, IIRC, the tokens are renewed only if they are expired, so if they are renewed serially, it should not be a problem. But I do agree, since RM also renews DTs on other app events as well (app recovery etc) - for which duplicate renewal, might not be preventable.

bq. The cleanest way to manage a kms cluster is transparently via a cname or multi-A record
True, in which case one would not even need the LoadBalancingKMSClientProvider.

I do like the idea of using a nameservice though, as [~yzhangal] suggested which will ensure that we will still have only 1 single entry., I had a feeling "nameservice" alluded to the hdfs HA configuration – which is horrible for the reasons I've detailed and why we don't use it.  I'll politely stress and repeat: *Updating configs of tens of thousands of nodes, launchers, oozie, storm, spark, etc and restarting the services is just not logistically possible*.

bq. Although, IIRC, the tokens are renewed only if they are expired, so if they are renewed serially, it should not be a problem.

The RM renews immediately to verify token validity and to determine the next renewal time.  If they are expired, it's too late.  Any kp token using just a service authority cannot determine the kp uri and is only renewable via the kp uri in the config – enforcing one and only 1 kms cluster.  If the kp client can be instantiated via the service, then multi-kms setups are possible.

bq.  I do like the idea of using a nameservice though, as Yongjun Zhang suggested which will ensure that we will still have only 1 single entry.

There must be a disconnect here.  1 single entry is the advantage of just setting the service to the provider uri.  Adding an extra layer of indirection through the config creates a logistical mess with no added benefits.  I'm not going to bounce all my services and RMs because I added or changed a KMS cluster.

Here's the big picture we are trying to achieve:
* client requests kp uri from NN
* client creates kp client from kp uri
* client gets tokens and sets service to kp uri
* RM calls kms token renewer which uses kp uri in service to create kp client
* tasks use the NN->kp uri mapping established at job submission to locate tokens

It's +config-less+ other than a setting on the NN.  This is what we are running internally because the current kms client design is completely broken.  We now have the ability to enable EZs on a NN and/or change kms cluster configuration without changing configs or restarting services.

We only care about this load balancing provider because we need to ensure the kp client can be instantiated from the service., Hi [~daryn],

Thanks for your detailed sharing. Would you please take a look at [~shahrs87]'s patch as you planned? thanks.

, HI [~shahrs87],

Wonder if you have any update on this issue?

Thanks much.
, We've been really busy stabilizing 2.8 for production but plan to circle back to this jira soon., Thanks [~daryn].
, Hi [~shahrs87] and [~daryn],

Hope you had a great thanksgiving.. 

Any updates on this?, Thanks all for the discussions about this, and Rushabh for a demonstration patch.
I've read through the comments of this one as well as HADOOP-14441. The patch would also take care of HADOOP-14134.

To summarize and make sure my understanding is correct:
- We all agree the token sharing will be an issue
- For HDFS clients, the kp uri is already provided by NN. (Already done by HADOOP-14104)
- Token should be recognized from UGI credentials when clients trying to authenticate. (reason for HADOOP-14441)
- Token renewal currently reads configs. We'd want this to be read from the token, and make sure it's HA'ed. (reason for HADOOP-14134)
- Besides the ip:port of the KMS instance, there's also information about whether it's http or https. We'd need a way to get this information, during renewal/cancelation.
- Backwards compatible: old clients should work with new server; new clients should work with old server. 

Having a way to let clients work without reading configs feels to me to be a better approach, and more inline with HADOOP-14104, and the 'transparent' name of HDFS encryption. It feels to me a 'nameservice' solution doesn't add much value than the current way of using the full kp uri, which by itself is a representation of available services. For added KMS scenario, I think it's fine to let existing tokens to use the existing instances in that token's uri - presumbly this is better than deploying the config and restarting the client. For removed KMS instances, LBKMSCP handles it.

It seems to me the patch here has handled most of this pretty well. I plan to take a crack at this tomorrow to:
- rebase to trunk
- address some earlier comments
- modify with some of my thoughts: seems we can use LBKMSCP to store the full provider uri; some tests to verify compatibility

If you have any comments, please let me know. , Hi [~xiaochen],
Thanks for taking a look at the patch.
You have summarized it pretty well.
I just have to figure out how the old tokens will work with the upgraded resourcemanager.
The current patch will break cancelling and renewing old tokens (ip:port format) with the upgraded resourcemanager.
Do you mind if I refresh the patch in few days ?
Right now my high priority work is to add support EZ for Webhdfs file system (HDFS-12355).
It seems the progress is stuck there in getting reviews. Since you are reviewing many of my EZ related patches, do you mind reviewing HDFS-12396 ?
Since that progress is stuck, I will find some cycles to update this patch.
Hope you don't mind., The super easy solution to compatibility: if kp conf is set, unconditionally use it, else use the token's service to instantiate the provider.

Today the token service is irrelevant and there "can be only one provider" per the conf.  Let's keep that.  It's compatible for both old/new clients submitting jobs.

Before enabling the new behavior, leave the RM's kp conf set during the transition.  New clients acquire tokens with a service uri but it continues to be ignored by the RM.  When all clients are upgraded, remove the kp conf from the RM's conf.  Done.

, Thanks for the offering [~shahrs87], totally fine if you want to update the patch - I just want momentum on this. :)

For compatibility, I think we need:
- old client works with new format token
- old client renewer works with new token
- new client works with old format token
- new client renewer works with old format token (the RM case you commented)

This is rather exhaustive, but IMO necessary to support rolling upgrade and clients that talks to multiple clusters.

I'll review HDFS-12355 and related jiras., Oops, message race with Daryn.

bq. if kp conf is set, unconditionally use it
Yeah I think this takes care of all those enumerations. :)
This way we'd require all clients to update their config (remove kp) after the upgrade though. Since this would be a one-off, I think it's probably fine. Assuming we document it clearly. Will think about this in more details during review..., bq.  This way we'd require all clients to update their config (remove kp) after the upgrade though.

Eventually, yes, but there should be no rush.  The client is going to use the kp specified by the NN.  It only falls back to conf when the NN is old and cannot tell the client if it uses a kp or not., Looking around this again, I don't think the conf override solution can solve the following problem:
For pure kms operations like {{hadoop key list}}, we rely on the kp conf to list from the correct kms. Even with this fix, we'd still need the conf. It's not reasonable to let client separate their configurations for different purpose of the hadoop rpc / apis. 

Checking the code, I think old clients / renewer should always work even with the new token. IMO we need to have a fall back logic to the configurations, rather than override. Specifically, when {new clients cannot find the new token format, new renewer cannot create kp from the token format}, they'll use the config as a last measure. Error handling is still tricky since we'd ideally want to tell from the exception or client log on what exactly was attempted and failed.

Other than the above I think this really should work.

Some minor comments:
- I'd mark {{DelegationTokenAuthenticatedURL#getDelegationTokenService}} as {{InterfaceAudience.Private}}.
- Add comments on the KMSCP override of the above method to explain why.
- I'm scared of {{SecurityUtil#useIpForTokenService}}, which is used to buildTokenService. I don't see any problems but would love to see a test covering it.
- Can we extract the unit-test-only {{KMSUtil}} code to a test-only method, and make it only possible to execute from unit test? Maybe via some injector or better approaches.
, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 30m 42s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} branch-2.8 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 14s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 38s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  6m 59s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 26s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 26s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 12s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  9s{color} | {color:green} branch-2.8 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  2s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  6m 54s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  6m 54s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 26s{color} | {color:orange} hadoop-common-project: The patch generated 3 new + 23 unchanged - 0 fixed = 26 total (was 23) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 35s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  8s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 25s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 17s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 24s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 77m 49s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:c2d96dd |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12903676/HADOOP-14445-branch-2.8.002.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 70d209c119f3 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | branch-2.8 / 19f518d |
| maven | version: Apache Maven 3.0.5 |
| Default Java | 1.7.0_151 |
| findbugs | v3.0.0 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/13886/artifact/out/diff-checkstyle-hadoop-common-project.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/13886/testReport/ |
| Max. process+thread count | 1680 (vs. ulimit of 5000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/13886/console |
| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 11s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 19m 42s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 15m 21s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 43s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 48s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 41s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 19s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 24s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 13m 55s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 13m 55s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 42s{color} | {color:orange} hadoop-common-project: The patch generated 8 new + 122 unchanged - 4 fixed = 130 total (was 126) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 19s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 15s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  8m 14s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 58s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 33s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 98m 48s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.fs.viewfs.TestViewFileSystemLocalFileSystem |
|   | hadoop.fs.viewfs.TestViewFileSystemWithAuthorityLocalFileSystem |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12903738/HADOOP-14445.002.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 49f3f4226fe0 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 52babbb |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/13889/artifact/out/diff-checkstyle-hadoop-common-project.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/13889/artifact/out/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/13889/testReport/ |
| Max. process+thread count | 1714 (vs. ulimit of 5000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/13889/console |
| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks [~jojochuang], [~yzhangal] and [~xiaochen] for the great discussion and  review comments on the first patch.
I have attached trunk and branch-2.8 version of the patch.
Except for checkstyle warnings, the patch is ready to review.
I thought the trunk and branch-2.8 patch would be identical but that is not the case.
There is some difference in {{KMSClientProvider}} because of HADOOP-14987.
The change in HADOOP-14987 is only for debugging purpose and there is no feature or major enhancement.
@Xiao: Since you are one of the contributor in that jira, we can backport that jira all the way back to branch-2.8 if you don't mind.

I implemented what we discussed in previous comments.
To summarize let me write below.
* While instantiating {{KMSClientProvider}}, the token service will be initialized to be  the same as {{CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH}}.
* {{KMSTokenRenewer}} will try to instantiate {{KeyProvider}} from token service field.
If it fails to instantiate, it will fallback to the configuration.

I think that should take care of backward compatibility and key shell use cases.
Also added a test case to test backward compatibility for token renewal and cancellation.
I have tried to incorporate all the previous review comments from everyone.
Please let me know if I missed one., Thanks a lot [~shahrs87] for the latest patch, looks good overall.

Some comments from code review:
KMSCP:
- I think we can improve the comments with {{dtService}} to be clearer. Suggest something along the lines of:
{quote}
/* The value is read from
   * CommonConfigurationKeysPublic.HADOOP_SECURITY_KEY_PROVIDER_PATH from
   * the conf when creating the KeyProvider, and used as the token's service.
   * With this value, later the KeyProviderFactory will be able to instantiate
   * KeyProvider from the token to renew / cancel, without the need to read
   * configs.
{quote}
- Now that we handle the port stuff nicely in unit tests, {{fallbackDefaultPortForTesting}} and related logic can be removed.
- On {{renew}} and {{cancel}}, suggest to add a debug log when {{keyProvider == null}} for supportability.
- Let's use {{HADOOP_SECURITY_KEY_PROVIDER_PATH}} instead of {{KeyProviderFactory.KEY_PROVIDER_PATH}}.

KMSUtil:
- When {{createKeyProviderForTests}} returns non-null value (before {{return kp}}), add a info log, since this should only happen in tests

TestKMS:
- It's great to see extra assertions were done in {{getTokenService}}.
- {{doKMSWithZKWithDelegationToken}}, do we need to loop through the tokens and verify? After this fix, there would only be 1 kms-dt mapping to the entire url right? IMO we should verify there's just 1 kms-dt.
- {{doKMSWithZKWithDelegationToken}}, besides verifying renewal, we should also verify some key operations.
- Happy to see the compat test, thanks! We should also verify some key operations too here.
- Trivial, {{createKeyProviderForTests}} should have a line break after.

HdfsKMSUtil:
- Looks like we can remove the not-used {{createKeyProvider}} method.

There is also 1 thing that I think missed in the recent compat discussions:
For the clients to 'work', besides creating the kp and the token renewer, there is also the complication of {{DelegationTokenAuthenticatedURL}} recognizing the token. How would we handle the case there the job submitter's {{DelegationTokenAuthenticatedURL#getDelegationTokenService}} did not match the cluster's mapper's version, to prevent issues similar to HADOOP-14441? In other words, if I submit a job using the new jar and get a new format token, but when it's distributed to the cluster, the mappers are still on the old version which tries to get the ip, it won't recognize it and will fall back to kerberos. 

IMHO, since {{token.setService}} is done in KMSCP, what matters here would be to require the job submitter (whoever gets the token) to be on the same version of the mappers (or whatever is actually authenticating using the token). Otherwise, handling this at code level bi-directional would require 1) duplicating the same token with ip (for new submitter, old mapper) and 2) falling back to check old format in DTAuthURL (for old submitter, new mapper), which sounds tedious and ugly. Curious to learn the thoughts from you and [~daryn]., Thanks [~xiaochen] for the review.
bq. There is also 1 thing that I think missed in the recent compat discussions:
That is an excellent catch.
The general contract for hadoop upgrade is client should be the last one to upgrade after all the servers are upgraded.
But this argument doesn't hold true for multi cluster support. We need to support that.
Personally I don't like the idea of duplicatiing the tokens with different service fields because once the token lifetime expires, RM will have to renew 2 tokens instead of one.

One way I can think is have a conf like {{hadoop.kms.token.use.new.format}} and treat this release as bridge release.
Default this conf to false.
If the conf value is false, the client will create the token with old format.
KMSCP will have support for renewing/cancelling both format of tokens.

Once all the servers, clients, servers and all the clusters are upgraded, set the conf value to true.
If the conf value is true, it will add the token with new format.
I am also not a big supporter of conf based solutions but to ensure backwards compatibility I am proposing this.
Xiao: Let me know what you think.

Daryn is not back from vacation. He should be in tomorrow. I will discuss with him tomorrow and will update the ticket.
I will address all the review comments in next patch when we have clear way for fixing the last compatibility issue.
, Thanks for the comments Rushabh.

Agree on duplicating tokens is bad. Conf solution would be better than duplicating tokens, and is necessary for compat. This will bring us down to only support 1-direction compat (instead of bi-directional).
But even with conf, there could also be a time that it's not rolled to all nodes simultaneously (e.g. config deploy timing, multi-cluster etc.). Good we can control when the token creation would use new format, but it looks like we'd still need the fallback in {{DelegationTokenAuthenticatedURL#getDelegationTokenService}} right (which I'm okay with...)? I thought this could be another layer of authfilters, which can be taken out once we're sure no one is using the old token format. But perhaps just a fallback logic would be easier to do.


I know this stirs too many fallbacks and make the code difficult to read, but seems to be the only way to support rolling upgrade / deployment.., | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 10s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 14s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 16m 19s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m 50s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 42s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 33s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 19s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  0s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 15s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 11m 40s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 11m 40s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 41s{color} | {color:orange} hadoop-common-project: The patch generated 12 new + 122 unchanged - 4 fixed = 134 total (was 126) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 31s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m  1s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 15s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 39s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m  0s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 33s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 88m 32s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12905371/HADOOP-14445.003.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 65541762e658 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 8ee7080 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/13940/artifact/out/diff-checkstyle-hadoop-common-project.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/13940/testReport/ |
| Max. process+thread count | 1431 (vs. ulimit of 5000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/13940/console |
| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Attaching a new patch for trunk which fixes the incompatibility  that were discussed in previous comments and addressing the review comments made by Xiao on the previous patch.
Added a bunch of test cases to verify compatibility.
bq. I think we can improve the comments with dtService to be clearer. Suggest something along the lines of:
Addressed in latest patch.

bq. Now that we handle the port stuff nicely in unit tests, fallbackDefaultPortForTesting and related logic can be removed.
Addressed in latest patch.

bq. On renew and cancel, suggest to add a debug log when keyProvider == null for supportability.
Addressed in latest patch.

bq. Let's use HADOOP_SECURITY_KEY_PROVIDER_PATH instead of KeyProviderFactory.KEY_PROVIDER_PATH.
Addressed in latest patch.

bq. When createKeyProviderForTests returns non-null value (before return kp), add a info log, since this should only happen in tests
Addressed in latest patch.


bq. doKMSWithZKWithDelegationToken, do we need to loop through the tokens and verify? After this fix, there would only be 1 kms-dt mapping to the entire url right? IMO we should verify there's just 1 kms-dt.
Addressed in latest patch.

bq. doKMSWithZKWithDelegationToken, besides verifying renewal, we should also verify some key operations.
This patch has nothing to do with key operations. Key shell commands don't use delegation tokens. They use kerberos tickets.
This jira is only changing delegation token handling part. The existing key shell tests are enough.
If you think existing tests are not enough, then please open a new jira to cover that.

bq. Happy to see the compat test, thanks! We should also verify some key operations too here.
Same comment as last one.

bq.HdfsKMSUtil: Looks like we can remove the not-used createKeyProvider method.
This method is getting called from {{DFSUtil#createKeyProviderCryptoExtension}}. Namenode calls this method to create key provider.
So we cannot remove this method.
[~xiaochen]: please review., Thanks for the work here Rushabh, latest patch looks really promising! Appreciate the thorough test coverage.

I also ran some more tests with this patch on a test cluster, and things look good. The binary upgrade is compatible, and the format switch is done with an additional config deployment. This is more or less inline with what [~daryn] suggested above I think.

Some comments in latest patch, mostly nits:
 * We need some sort of formal documentation on upgrading -> changing the config. Either in docs or a detailed release note would do.
 * KMSCP: Please rename the variables to be the common hadoop naming convention (xxx_KEY, xxx_DEFAULT)
 * The above config should be added to core-default.
 * KMSCP: typo, "then he value is read from" s/he value/the value/g
 * KMSCP: There are some extra line breaks after createKMSAuthenticatedURL.
 * KMSCP: {{containsKmsDt}}'s existing log isn't accurate. Suggest to move that to after the {{getTokenFromCredentials}} call, and log out what token it actually got.
 * TestLoadBalancingKMSClientProvider.java: I think we don't need to set the injector during @BeforeClass
 * TestKMS: some unused variables can be removed: line 2606 {{renewed}}, line 2653 {{kp1}}.

My 'key operations' comments meant to say we actually use the token to do something. You happen to add the same in the new tests. :) So overall I'm +1 pending the above., This fell off my radar.  Quick recap since conversation has been fragmented across multiple jiras:
The LB provider requests 1 token, like it should, but it’s used only for that specific kms.  Ironic the load balancer increased load since it only works by retries cycling back to that kms, doesn't tolerate if that kms goes down, and it went unnoticed.  This Jira proposed originally proposed obtaining n-many tokens from each subordinate kms, even though a token from 1 will work for all.  The RM would have to unnecessarily renew n-many tokens and if one renew fails, job submission fails.  Not good.

Rushabh's original goal addresses a huge kms token renewal issue: it always uses the conf.  A server like the RM cannot support a multi-kms environment.  The fix is use the kms provider's uri as the token service so the same provider can later be instantiated for renewal.  This also elegantly allows the LB provider to use a single token for all subordinate providers by using its own uri.  But it poses compatibility issues for job submitted by a new client that runs old tasks.

––

The semantics for getDelegationTokenService are oddly cyclical.  I'd expect it, like other hadoop clients, to premeditate the service name.  The latest patch is looking at the creds to decide the service based on whether a token exists so it can attempt to look up a token for that service – which it already looked up.

I’d prefer for the compatibility to be cleaner, and easier to revoke in the future.  The patch falls back to conf by assuming URISyntaxException means old service, however a malformed new service should fail to avoid surprises.  If it looks like a uri, it must be a valid uri.  Simplest approach is check if it contains ://.

I'm also uneasy about a client-side config to control compatibility since clients are notoriously hard to upgrade.

An alternative could remove the service guesswork, client conf, and be a bit more compatible by using a new token kind.  The current one is “kms-dt” whereas the standard naming convention should be “KMS_DELEGATION_TOKEN”.  The old token kind could continue using the conf, as today, while the new kind requires a service uri.  Effectively the current/old code remains unchanged.

There are tradeoffs to support old clients that must use the host:port.  I know I objected to duplicating tokens, but I’ll acquiesce if it provides a cleaner approach.  Duplicating a new KMS_DELEGATION_TOKEN/uri token into a single kms-dt/host:port is "no worse than today":
* Pro: Old client finds kms-dt from old client.
* Pro: Old client finds kms-dt from new client.
* Pro: New client finds kms-dt from old client.
* Pro: New client finds KMS_DELEGATION_TOKEN from new client.
* Pro: Old RM renews the kms-dt for both old/new clients.
* *Con*: New RM renews KMS_DELEGATION_TOKEN from new clients, effectively a double renew for the same token as kms-dt.

If we are willing to sacrifice a bit for new client + old RM:  Abuse fact that old kms clients look for a host:port service regardless of kind.  We can trick the RM into not renewing the unknown kind, ex. “kms-dt-deprecated”, to avoid the double renew.
* Pro: Old client finds kms-dt from old client.
* Pro: Old client finds kms-dt-deprecated from new client (remember, doesn't care about kind)
* Pro: New client finds kms-dt from old client.
* Pro: New client finds KMS_DELEGATION_TOKEN from new client.
* Pro: Old RM renews the kms-dt for old clients (all it knows about)
* *Con*: Old RM renews nothing for new clients (doesn't know KMS_DELEGATION_TOKEN or kms-dt-deprecated)
* Pro: New RM renews kms-dt for old clients.
* Pro: New RM renews KMS_DELEGATION_TOKEN for new clients (not kms-dt-deprecated)

Thoughts?, Thanks [~daryn] for circling back with the new idea. Mixed feeling (and head scratching)! :)

I think a new and standardized token kind should work, and conveniently eliminate the need for changing client configs, so SGTM. We may also check in the RM, when its {{DelegationTokenRenewer}} received a set of tokens, and there are both kms-dt and KMS_D_T with the same sequence number, only renew the KMS_D_T.
For that to work, we'd need a new {{KMSDelegationTokenIdentifier}} class and a new {{DelegationTokenAuthenticationHandler}} too. 

Curious: with the current approach (patch 3) we need just an additional config deployment after the upgrade, right? What changed your mind from [earlier|https://issues.apache.org/jira/browse/HADOOP-14445?focusedCommentId=16279134&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16279134] (assuming the implementation comments are addressed) ?

I'd rather prefer not to sacrifice old RM + new client. True for RU should still work, but there is still support burden for a new client connecting to an existing cluster. Token issues are not the easiest to figure out, and IMO we should avoid this case when we can., Hi [~shahrs87] [~daryn],

What's the progress for this one? Let me know if you want me to continue this patch. Thanks., Thanks [~xiaochen] for offering the help.
I have backlog of atleast 4-5 items which will take atleast few weeks to complete.
Assigning to you.
I will offer reviews to move it forward.
Again thanks !, Hi [~daryn] and [~shahrs87],
I tried the new-token-kind approach, and it doesn't seem to work because it appears the token kind - secret manager is a 1-1 mapping. [code|https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAuthenticationFilter.java#L75]

In other words, we cannot 'Duplicating a new KMS_DELEGATION_TOKEN/uri token into a single kms-dt/host:port'. The Service field is not part of the token identifier, and can be changed as we want. But the Kind *is* part of the identifier, so although the renewer can pick it up a token with a changed kind, the server won't accept it. Am I missing anything here?

Will address all other comments soon, Hm, actually the token auth was successful, just that the identifier failed to decode properly so log looks odd. Let me play with it a bit..., Attached a preliminary [^HADOOP-14445.004.patch] that handles this via token kind. Code needs cleaning up but it should show the general idea. [~shahrs87] and [~daryn], would you mind to take a quick look to see if this converges with what you had in mind?
 - Added a new token kind {{KMS_DELEGATION_TOKEN}}, and made the old {{kms-dt}} deprecated.
 - New client will dup a legacy token if the newly created token is the new kind. This duplication is on by default but can be turned off by config.
 - On authentication, the token selection logic will first favor the new kind, and fall back to the old way if not found.
 - Added a dedicated Renewer to handle the new token kind. Old renewer behavior unchanged.

Tested this works via some cross-cluster bidirectional distcp runs, where one cluster was upgraded and one was not. Will go through the patch on Wednesday to polish things up, and add more unit tests., Patch 5 ready for review. 

All previous comments addressed, except for this one from [~daryn] that I want some discussions:
{quote}The semantics for getDelegationTokenService are oddly cyclical.  I'd expect it, like other hadoop clients, to premeditate the service name. ...
{quote}
If I understand correctly, in this patch it would be {{KMSCP#getKMSToken}}. It currently uses token selector, so should be inline with other services. The other part is in {{DelegationTokenAuthenticatedURL#selectDelegationToken}} - it's a general class so it does not aware of the token kind of the service that's using it. So I think we should be good to just do it in KMSCP., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 17s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 17m 56s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 17m  6s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m  6s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 50s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 51s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 21s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 27s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 16m  2s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 16m  2s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  1m 10s{color} | {color:orange} hadoop-common-project: The patch generated 12 new + 288 unchanged - 7 fixed = 300 total (was 295) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 55s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m  3s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 40s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  9m 13s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  4m 33s{color} | {color:red} hadoop-kms in the patch failed. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 39s{color} | {color:red} The patch generated 2 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}106m 11s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.crypto.key.kms.TestLoadBalancingKMSClientProvider |
|   | hadoop.crypto.key.kms.server.TestKMS |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:d4cc50f |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12913556/HADOOP-14445.05.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux e8eba6ba1c08 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 4cc9a6d |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/14281/artifact/out/diff-checkstyle-hadoop-common-project.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/14281/artifact/out/patch-unit-hadoop-common-project_hadoop-common.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/14281/artifact/out/patch-unit-hadoop-common-project_hadoop-kms.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14281/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-HADOOP-Build/14281/artifact/out/patch-asflicense-problems.txt |
| Max. process+thread count | 1594 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14281/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Failed tests in TestKMS are not related. TestLBKMSCP test case should be removed, now that we do not have the URI format configuration - will do that in next rev., Patch 6 to fix pre-commit errors., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 19s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 17m 43s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 34s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 58s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 40s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 59s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 12s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 18s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  8s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 12m 58s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  1m  3s{color} | {color:orange} hadoop-common-project: The patch generated 1 new + 285 unchanged - 7 fixed = 286 total (was 292) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 37s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 55s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 51s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 16s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 35s{color} | {color:red} The patch generated 2 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 95m 15s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:d4cc50f |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12913730/HADOOP-14445.06.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 794dac7f974b 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 113f401 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/14288/artifact/out/diff-checkstyle-hadoop-common-project.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14288/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-HADOOP-Build/14288/artifact/out/patch-asflicense-problems.txt |
| Max. process+thread count | 1362 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14288/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks a lot [~xiaochen] [~shahrs87], [~daryn], [~yzhangal] and [~asuresh] 's valuable comments and patch coding. This is a tricky case and it impacts a number of our customers (as well as partner software). I haven't pay attention to the development of this Jira but just synced up with [~xiaochen] on the latest patch. The approach totally makes sense to me.

I am reviewing the latest patch and will post review comments later today(-ish)., I'll take a look., Half way through the patch ...
 # The handling of old/new KMS DT needs a little refactor. (KMSClientProvider#getKMSToken(), KMSClientProvider#addDelegationTokens()) One year from now I won't be able to remember why we did these tricks. I'll be easier to maintain in the future as well.
 # Having a configuration hadoop.security.kms.client.copy.legacy.token to flip the switch is fine. It'll need a better documentation, in the release note for example. I looked at the description in core-default.xml and honestly I wouldn't understand the caveats. It'll be hard to debug RM scalability problems with this key is on, and I doubt people will understand that once this is turned off, old clients will not be supported any more.
 # There will be cases where clients are on different versions. There will be cases where a client accesses multiple clusters (distcp). There will be cases where an application relies on multiple versions of Hadoop libs. It's going to difficult to control client version.
 # Would it make sense to mark KMSDelegationToken deprecated?, # Why was KerberosConfiguration removed in the patch?
 # Looks like
{code:java}
private void testDelegationTokenAccess(File testDir, String keyName,
 boolean submitterConfValue, boolean taskConfValue) throws Exception{code}
 in TestKMS is not used. (There are two testDelegationTokenAccess(), one is public, the other is private), And I just found two undocumented configuration keys: hadoop.security.key.default.bitlength and hadoop.security.key.default.cipher. Filed HADOOP-15312 for that.

Also, you probably want to close the KeyProviders in TestKMS test cases. Use try .. with clauses should do it. (My bad. I didn't close those KPs in the initial test code which you inherited), Thanks for the review [~jojochuang], good comments! Also looking forward to [~daryn]'s review. Appreciate the review cycles.

bq. Why was KerberosConfiguration removed in the patch?
I was confused when adding tests and found that it's not used anywhere. Added it back, can have the removal done in a separate jira for cleanness.

bq. close the KeyProviders in TestKMS... in the initial test code ...
Good catch. I think this was missed in day 0 tests. Handled in this patch for review convenience, but created HADOOP-15313 for cleanness..

All other comments are addressed in patch 7, and good catch on the duplicate test method. Indeed client versions are hard to manage - the config is only a way to not duplicate tokens once we're sure everything is upgraded. I added more text into core-default.xml to explain, and will add similar lines to release notes once this is in. Didn't add to documentation because I fear this would confuse average users when they see that from documentation..., Hi [~daryn],
Would you be able to find cycles to review this soon (e.g. on Thursday)?, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  1m 16s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 24s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 17m 31s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m 36s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 34s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 18s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 56s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 10s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 11m 28s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 11m 28s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 55s{color} | {color:orange} hadoop-common-project: The patch generated 1 new + 292 unchanged - 5 fixed = 293 total (was 297) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 29s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  8m 44s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  7s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 18s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  7m 29s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 50s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 26s{color} | {color:red} The patch generated 2 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 86m 48s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.util.TestDiskChecker |
|   | hadoop.util.TestReadWriteDiskValidator |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:d4cc50f |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12914598/HADOOP-14445.07.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 14cdb2b1b783 4.4.0-89-generic #112-Ubuntu SMP Mon Jul 31 19:38:41 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / e840b4a |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/14314/artifact/out/diff-checkstyle-hadoop-common-project.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/14314/artifact/out/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14314/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-HADOOP-Build/14314/artifact/out/patch-asflicense-problems.txt |
| Max. process+thread count | 1380 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14314/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, I'll make an effort to review today but schedule is very hectic.  My last proposal was centered around _not_ having another conf option so I'm not pleased that one was added.  Initially I'm inclined to do something similar to Rushabh's last patch but I need to do a brain reload., Thanks for the scheduling [~daryn]. The config is not a must-set for clients - as your last proposal, we now duplicate tokens into KMS_D_T and kms-dt, by default. So everything works except the token is double-renewed by RM.

I added the config as an optimization, to have a way to not duplicate the token (so KMS_D_T only) if everything has been upgraded post-HADOOP-14445., Hi [~daryn] / [~shahrs87],
Any comments? , Made a pass through the production code and not test code. Will go through test code tomorrow.
Overall the patch looks very good.
Below are my review comments.
+KMSClientProvider.java+
1.   {{token.setService(dtService)}} should be done in {{addDelegationTokens}} and not {{addTokenToCredentials}}
2.   final Collection<Token<? extends TokenIdentifier>> tokens = ugi.getTokens();
	 {{Ugi#getTokens}} internally creates a new ArrayList of all tokens. Why there is a need to create a new ArrayList for every call to kms ? 

+KMSUtil.java+
1.   In {{createKeyProviderFromTokenService}} why do we want to fall back to conf ?
This method is getting called from {{KMSTokenRenewer#createKeyProvider}} which has delegation token kind as {{KMS_DELEGATION_TOKEN}}. So we are absolutely sure that the service in the token will be {{URI}}., One more high level comment.
 Lets say we are running in an environment where the job submitter and task client are running with the new code but RM is not upgraded yet.
 Job submitter will have {{KMS_DELEGATION_TOKEN}} and {{kms-dt}} tokens in its credentials bag.
 Lets say the job ran for more than 24 hours so that RM has to renew the token.
 Since the RM is old, it will only renew {{kms-dt}} token and _will fail to renew KMS_DELEGATION_TOKEN_.
 Now when the new task tries to select the token via {{getKMSToken}}, it will always select the token with kind {{KMS_DELEGATION_TOKEN}}. 
If I understand the DelegationToken correctly, even if it fails to renew token specific to \{{KMS_DELEGATION_TOKEN}}, that token will be valid since \{{kms-dt}} is a copy of \{{KMS_D_T}}.
Lets just write a test case to verify., Thanks for the review Rushabh, comments addressed in patch 8. Yes the duplicate tokens works as the way you described, the new {{testTokenCompatibilityOldRenewer}} verifies that. I also verified this in a cluster around patch 4 (replace the jars everywhere except the RM host), if my memory is correct... I'd be happy to verify the final patch again once all comments are settled., | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 31s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 17s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 23m 14s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 26m 33s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 43s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 26s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 36s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 51s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  7s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 57s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 25m 43s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 25m 43s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 44s{color} | {color:orange} hadoop-common-project: The patch generated 3 new + 292 unchanged - 6 fixed = 295 total (was 298) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 23s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  8m 18s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  1s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  5s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m  5s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 35s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 40s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}119m 20s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8620d2b |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12915822/HADOOP-14445.08.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 29ed9e71fdaa 4.4.0-64-generic #85-Ubuntu SMP Mon Feb 20 11:50:30 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 22c5ddb |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/14374/artifact/out/diff-checkstyle-hadoop-common-project.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14374/testReport/ |
| Max. process+thread count | 1440 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14374/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks [~xiaochen] for the revision.
 [~daryn] shared his concerns offline that this patch is dependent on config key and we will live with the baggage of 2 tokens forever.

I will request him to review asap.

But below are my review comments Mostly all are minor.
 +KMSClientProvider.java+
 1. {{KMSCP#addTokenToCredentials}}
 I don't agree with the method name. The method name suggests that we are just adding token to credentials object.
 But we are doing much more in this method.
 I would add {{credentials.addToken}} line to calling method {{addDelegationTokens}} and rename method {{addTokenToCredentials}} to something like {{createLegacyKmsToken}}
 and add some javadoc to it saying that creating this token is dependent on conf key {{KMS_CLIENT_COPY_LEGACY_TOKEN_KEY}}.

+DelegationTokenAuthenticatedURL.java+
 1. Lets change the {{selectDelegationToken}} to {{getDelegationToken}}.
 In the base implementation, we are not implementing any Selector.
 We are just getting the token based on the service field.
 In {{KMSCP}} we can change the method name {{getKMSToken}} to {{selectKMSToken}} because there we are implementing {{TokenSelector}}.

+core-default.xml+
{quote}With the default value set to true, the client will locally duplicate the KMS_DELEGATION_TOKEN token and create a kms-dt token, all other parts of the token remain the same.
{quote}
Technically this is not true. The service is also changed.

I am sorry I _should have_ mentioned all the above comments in the previous review.

+TestKMS.java+
 1. This is unrelated to patch.
 Do we really want to stop kdc after every test ?
 2. {{providersCreated}}: Should this be a list or just {{KeyProvider}} ?
 It will always create {{LoadBalancingKeyProivder}} which internally is a set of {{KeyProvider}}.
 {{LoadBalancingKMSCP}} never throws IOException back. It just swallows all the {{IOException}} and just logs it.
 Maybe we might want to return MultipleIOException from {{LoadBalancingKMSCP#close}}. Totally fine if we want to do it as a separate jira.
 But as far as this jira is concerned, we can get rid of {{MultipleIOException}} related changes and can just change it to {{IOException}}.
 3. {{testKMSHAZKDelegationTokenRenewCancel(final Text tokenKind)}}
 Unable to understand why were are calling {{setupConfForToken}} multiple times.
 If we filter out all tokens other than passed {{tokenKind}}, then we can just call {{setupConfForToken}} once at the start.
 That way the code will be more clean and _will only_ work on {{token == tokenKind}}.
 In short just one for loop, filter out the token at the start and test renew, cancel and again renew(which should fail) in sequence.

4. {{testTokenCompatibilityOldRenewer}}
 This test ran for {{34.887}} on my local machine.
 I am sure majority of time was spent in sleeping for token to expire.
 Can we decrease the {{renewInterval}} period to less than 30 seconds (maybe 5 seconds or so).
 Also the test renewed the token 30 times. Is that expected ?
 Did you mean to renew after while the code came out of while loop ?

 
{quote}LOG.info("Rolling key {} via provider {} with tokenUGi.",keyName);
 kp.createKey("newkey", new KeyProvider.Options(conf));
{quote}
The log line should be {{creating a new key}} instead of {{Rolling key}}.
Let me know if any part is unclear., Thanks [~shahrs87], will work on the review comments this week.
{quote}Daryn Sharp shared his concerns offline that this patch is dependent on config key and we will live with the baggage of 2 tokens forever. ... I will request him to review asap.
{quote}
It feels to me the config is unavoidable if we want it to be both compatible and new format (be it changing existing uri of kms-dt, aka. patch 3, or adding new token kind, aka. patch 8).

I also thought about further complicate code but ease deployment, by adding yet another config to yarn's {{DelegationTokenRenewer#handleAppSubmitEvent}} to _not_ renew old tokens. This means once you're sure everyone has upgraded, you don't have to deploy all configs, but just the RM configs. Hesitant to go this direction though due to the added complexity, on top of an already messy area.

Better approach welcome of course., [^HADOOP-14445.09.patch] should address all comments from Rushabh, exceptions below.

Regarding TestKMS,
{quote} 2. providersCreated:
{quote}
I disagree because even in tests we should code against interface. It's implementation detail that {{createProvider}} only returns the KMSCP subclass of KeyProvider, and the Test code should just handle KeyProvider for cleanness. This has been split out to HADOOP-15313 to limit the scope, let's move further discussions there or feel free to file follow-ons.

Agreed {{LoadBalancingKMSCP#close}} should throw instead of swallow - feels like a bug. Created HADOOP-15344 for that.
{quote}4. testTokenCompatibilityOldRenewer
{quote}
The reason for not choosing a shorter amount of time is after the renewal, we want to authenticate using that token to all KMS instances. While a small renew interval would mean less wait, it also poses higher risks of flaky test failures if the authentication did not run within that time. Jenkins slaves are usually unreliable. Ideally one should find a way to haul into the secret manager, and change intervals from the test - but that seems pretty messy to do so left as-is. Let me know what you think.
 Also updated the test to verify it actually works with every KMCSP inside LBKMSCP., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 10m  7s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 25s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m 54s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 27m 16s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m  8s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 50s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 18s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  7s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 22s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:red}-1{color} | {color:red} mvninstall {color} | {color:red}  0m 20s{color} | {color:red} hadoop-kms in the patch failed. {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 26m  7s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 26m  7s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 59s{color} | {color:orange} hadoop-common-project: The patch generated 6 new + 286 unchanged - 5 fixed = 292 total (was 291) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 36s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 13s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 21s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 11s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 10s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 39s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}140m  9s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8620d2b |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12916295/HADOOP-14445.09.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 87f1938c0cbe 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / c22d62b |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| mvninstall | https://builds.apache.org/job/PreCommit-HADOOP-Build/14390/artifact/out/patch-mvninstall-hadoop-common-project_hadoop-kms.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/14390/artifact/out/diff-checkstyle-hadoop-common-project.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14390/testReport/ |
| Max. process+thread count | 1480 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14390/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 12s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m 30s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 28m 30s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 57s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 46s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 44s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 15s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 22s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 29m 27s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 29m 27s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 56s{color} | {color:orange} hadoop-common-project: The patch generated 1 new + 286 unchanged - 5 fixed = 287 total (was 291) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 40s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 27s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 23s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 21s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m  6s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 45s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}133m 32s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8620d2b |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12916337/HADOOP-14445.09.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 0cf88fe4dbe1 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / c22d62b |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/14392/artifact/out/diff-checkstyle-hadoop-common-project.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14392/testReport/ |
| Max. process+thread count | 1498 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14392/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, {quote}
2. providersCreated: Should this be a list or just KeyProvider ?
bq. I disagree because even in tests we should code against interface. 
{quote}

I think I was not clear earlier. 
What I meant was should it be a list of KeyProvider {{List<KeyProvider>}} or just single element {{KeyProvider}} ?
I agree with you completely that we should code against interface. Thats why I feel it should be just a {{KeyProvider}}.
{noformat}
    KeyProvider keyProvider = KeyProviderFactory.get(providerUri, conf);
{noformat}
But I think its late now since the other jira is already committed.

bq. testTokenCompatibilityOldRenewer
Your comment does makes sense.
If we can test that new RM is able to renew both tokens (which is already present in your test suite  in last patch) and the identifier bits are the same in both tokens then we can remove this test case.
Hope it makes sense., Thanks for clarifying Rushabh. [^HADOOP-14445.10.patch]up
{quote}should it be a list of KeyProvider {{List<KeyProvider>}} or just single element {{KeyProvider}} ?
{quote}
IMO a collection of KP is better, because it does not have the assumption that each test case will only create 1 KP. I meant no offense in committing -HADOOP-15313-, can do follow-ons as I mentioned above. It is separate to this Jira.
{quote}testTokenCompatibilityOldRenewer
{quote}
Removed that one and added \{{assertTokenIdentifierEquals}}., Thanks [~xiaochen] for revising the patch.
 The patch looks really good and almost close.
 Just few minor comments.
 +TestKMS.java+
{code:java}
  public void doKMSHAZKWithDelegationTokenAccess() throws Exception {
  ...
  ...
  ...
  doAs("client",
       new PrivilegedExceptionAction<Void>() {
         @Override
         public Void run() throws Exception {
           // verify both tokens can be used to authenticate
           for (Token t : credentials.getAllTokens()) {
             assertTokenAccess(lbkp1, keyName, t);
           }
           return null;
         }
       });
	   
   }
   
   private void assertTokenAccess(final LoadBalancingKMSClientProvider lbkp,
        final String keyName, final Token token) throws Exception {
      UserGroupInformation tokenUgi =
          UserGroupInformation.createUserForTesting("test", new String[] {});
      // Verify the tokens can authenticate to any KMS
      tokenUgi.addToken(token);
      tokenUgi.doAs(new PrivilegedExceptionAction<Void>() {
        @Override
        public Void run() throws Exception {
{code}
I don't understand much of UGI so I apologize in advance if this question doesn't make sense.
 Why are we doing {{doAs("client")}} when we are again going to do {{doAs ("test")}} user in {{assertTokenAccess}} ?

+KMSClientProvider.java+
{code:java}
  assert KMSDelegationToken.TOKEN_KIND.equals(token.getKind());
    if (!copyLegacyToken || !KMSDelegationToken.TOKEN_KIND
        .equals(token.getKind())) {
      LOG.debug("Not creating legacy token because copyLegacyToken={}, "
          + "token={}", copyLegacyToken, token);
      return null;
    }
{code}
Is it ever possible that {{token.getKind != KMSDelegationToken.TOKEN_KIND}} ?
 I would replace {{assert}} with {{PreConditions}} and remove {{!KMSDelegationToken.TOKEN_KIND.equals(token.getKind())}} check from if statement.

+core-default.xml+
 typo
{noformat}
    confronting to kms-dt. All other parts of the token remain the same.
{noformat}
Instead of {{confronting}}, I think you meant {{confirming}} ?, Thanks for the review Rushabh. [^HADOOP-14445.11.patch] up for pre-commit, I'll test this in real clusters as a double check.

Fixed TestKMS - you're right. It was initially there to prevent the fall back to login user succeeding the test, but not necessary now. KMSCP I removed the assertion to reduce confusion. If KMS server is old, you'd get an old token. The assert is there to make sure in tests the correct token kind is tested.
bq. Instead of confronting, I think you meant confirming ?
I actually meant conforming.... :), | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 20s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 24m 42s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 27m 56s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m  0s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 39s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 41s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  1s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 17s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  5s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 26m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 26m 39s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 59s{color} | {color:orange} hadoop-common-project: The patch generated 2 new + 286 unchanged - 6 fixed = 288 total (was 292) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 41s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m  0s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  8m 24s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 33s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 35s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}127m 34s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.conf.TestCommonConfigurationFields |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8620d2b |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12917273/HADOOP-14445.11.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 7c0815b86642 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / c78cb18 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/14425/artifact/out/diff-checkstyle-hadoop-common-project.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/14425/artifact/out/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14425/testReport/ |
| Max. process+thread count | 1468 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14425/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks [~xiaochen] for the latest patch.
It looks good.
bq.  If KMS server is old, you'd get an old token. 
Thanks for catching that. I totally missed that.

There is one test failure in the latest run. 
{noformat}
org.apache.hadoop.conf.TestCommonConfigurationFields.testCompareXmlAgainstConfigurationClass

Failing for the past 1 build (Since Failed#14425 )
Took 0.2 sec.
Error Message
core-default.xml has 2 properties missing in  class org.apache.hadoop.fs.CommonConfigurationKeys  class org.apache.hadoop.fs.CommonConfigurationKeysPublic  class org.apache.hadoop.fs.local.LocalConfigKeys  class org.apache.hadoop.fs.ftp.FtpConfigKeys  class org.apache.hadoop.ha.SshFenceByTcpPort  class org.apache.hadoop.security.LdapGroupsMapping  class org.apache.hadoop.ha.ZKFailoverController  class org.apache.hadoop.security.ssl.SSLFactory  class org.apache.hadoop.security.CompositeGroupsMapping  class org.apache.hadoop.io.erasurecode.CodecUtil  class org.apache.hadoop.security.RuleBasedLdapGroupsMapping Entries:   hadoop.security.key.default.bitlength  hadoop.security.key.default.cipher expected:<0> but was:<2>
{noformat}
I can't think of a way that your latest patch can introduce this failure.
The hadoop-common build is fairly stable compared to hadoop-hdfs. Can you please double check whether your patch introduced this failure.
If not, can you please find out which jira is responsible ?

Also there are couple of checkstyle warnings in TestKMS.java regarding unused import.


If the test failure is not related, then you can make the checkstyle changes while committing.
Also can you upload the new patch after committing and resolving the jira.
 I know some people had concerns that it is difficult to co-relate the commit with the last patch if they are not the same.

+1 (non-binding) pending confirming test failure.
Thanks a lot for the good work here., Thanks for the prompt review Rushabh.
bq.  test failure 
I found it yesterday when looking at another jira, and it turns out to be HADOOP-15355. Committed that one last night, so next run should clear off.

I'll correct the checkstyle after a final round of manual testing with real clusters. Will also provide branch-2 patches., Rushabh S Shah's +1 is effectively a binding vote.
For the record here's my +1 too (pending the checkstyle fix), Thanks again for the reviews Rushabh and Wei-Chiu.

Testing this in real clusters revealed some issues in the patch. [^HADOOP-14445.12.patch] addressed them. Namely:
- {{KMSCP#addDelegationTokens}} should only setService on KMS_D_T tokens, so if there is an old server returning kms-dt, it would still work
- {{KMSCP#selectKMSDelegationToken}} the fall back logic should use existing logic to {{getToken}} by service, instead of using a selector. This way we can be sure new client works with old submitter + new server. Added a detailed comment there.
- Also added a 'real' unit test {{TestKMSClientProvider}} to test these explicitly, as a cover up of the existing TestKMS cases.

I have tested the latest patch via wordcount (in an env with 3 NM, 2 KMS. RM host does not have either NM or KMS, and was used as job submitter):

- upgrade 1 NM
- upgrade 1 KMS
- upgrade both KMS
- upgrade all NM
- upgrade RM

Job ran at each step, verified from debug level yarn app logs that authentication was successful using tokens.
In the end, deployed the new config=false everywhere and verified things still work., | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 17s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 15s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m  4s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 28m  7s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 59s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 39s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 44s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  6s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 17s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  8s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 28m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 28m  0s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 57s{color} | {color:orange} hadoop-common-project: The patch generated 4 new + 286 unchanged - 6 fixed = 290 total (was 292) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 36s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 37s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 56s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 40s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 10m 31s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 50s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 43s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}133m 53s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8620d2b |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12917643/HADOOP-14445.12.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux b98c678845b7 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / e52539b |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_162 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/14436/artifact/out/diff-checkstyle-hadoop-common-project.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14436/testReport/ |
| Max. process+thread count | 1360 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14436/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Fixed checkstyle. Rushabh, do you mind giving another pass? I'll provide a branch-2 patch shortly, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 20s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 17s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 39s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 28m 24s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 57s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 37s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 33s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  2s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 18s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  4s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 26m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 26m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m  3s{color} | {color:green} hadoop-common-project: The patch generated 0 new + 286 unchanged - 6 fixed = 286 total (was 292) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 41s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 56s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 17s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 46s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 34s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 34s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}130m 27s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8620d2b |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12917785/HADOOP-14445.12.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux c1c2d7710269 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 3121e8c |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_162 |
| findbugs | v3.1.0-RC1 |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14442/testReport/ |
| Max. process+thread count | 1718 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14442/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 20s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 33s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 43m 12s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 31m  7s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m  6s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 52s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 16s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  8s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 22s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:red}-1{color} | {color:red} mvninstall {color} | {color:red}  0m 21s{color} | {color:red} hadoop-kms in the patch failed. {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 26m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 26m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 58s{color} | {color:green} hadoop-common-project: The patch generated 0 new + 286 unchanged - 5 fixed = 286 total (was 291) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 10s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 21s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 21s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 12s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 34s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 39s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}150m 27s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8620d2b |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12917787/HADOOP-14445.12.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 31ed897486b5 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 6cf023f |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_162 |
| findbugs | v3.1.0-RC1 |
| mvninstall | https://builds.apache.org/job/PreCommit-HADOOP-Build/14443/artifact/out/patch-mvninstall-hadoop-common-project_hadoop-kms.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14443/testReport/ |
| Max. process+thread count | 1474 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14443/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Forgot to mention, please add a release note if possible. Thanks!, bq. Rushabh, do you mind giving another pass?
Sure. Will try my best to review today and if not, then surely on Monday., [~xiaochen]: Thanks for the latest patch.
bq. Testing this in real clusters revealed some issues in the patch.
Good find. The problem in creating the patch is there are 3 moving components and making sure the patch covers all the cases is pretty difficult.

Overall the patch looks good.
Just one minor comment in new added test class.
+TestKMSClientProvider.java+
1. 
{code}
  public void testNotCopyFromLegacyToken() throws Exception {
    ...
    assertNotEquals(uriString, tokens[0].getService().toString());
    ...
{code}
Instead of asserting what it is not equal to, we should assert what it should be equal to., Thanks Rushabh, addressed the comment in [^HADOOP-14445.13.patch], +1 binding for the latest trunk patch (v13) pending jenkins.
 Thanks [~xiaochen].

 , | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} docker {color} | {color:red} 16m 47s{color} | {color:red} Docker failed to build yetus/hadoop:dbd69cb. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918208/HADOOP-14445.branch-2.02.patch |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14456/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, (!) A patch to the testing environment has been detected. 
Re-executing against the patched versions to perform further tests. 
The console is at https://builds.apache.org/job/PreCommit-HADOOP-Build/14458/console in case of problems.
, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} docker {color} | {color:red} 13m 10s{color} | {color:red} Docker failed to build yetus/hadoop:dbd69cb. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918237/HADOOP-14445.branch-2.000.precommit.patch |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14458/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 23s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m 35s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 29m 26s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 38s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 36s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  6s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 18s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  9s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 29m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 29m  3s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 58s{color} | {color:orange} hadoop-common-project: The patch generated 1 new + 286 unchanged - 6 fixed = 287 total (was 292) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m  1s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 18s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  9m 51s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m  1s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 44s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}134m 34s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8620d2b |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918204/HADOOP-14445.13.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 087bb588a648 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / e9b9f48 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_162 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/14455/artifact/out/diff-checkstyle-hadoop-common-project.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14455/testReport/ |
| Max. process+thread count | 1380 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14455/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, (!) A patch to the testing environment has been detected. 
Re-executing against the patched versions to perform further tests. 
The console is at https://builds.apache.org/job/PreCommit-HADOOP-Build/14459/console in case of problems.
, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} docker {color} | {color:red}  2m 38s{color} | {color:red} Docker failed to build yetus/hadoop:dbd69cb. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918240/HADOOP-14445.branch-2.000.precommit.patch |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14459/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, (!) A patch to the testing environment has been detected. 
Re-executing against the patched versions to perform further tests. 
The console is at https://builds.apache.org/job/PreCommit-HADOOP-Build/14460/console in case of problems.
, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} docker {color} | {color:red} 17m 39s{color} | {color:red} Docker failed to build yetus/hadoop:dbd69cb. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918240/HADOOP-14445.branch-2.000.precommit.patch |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14460/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, (!) A patch to the testing environment has been detected. 
Re-executing against the patched versions to perform further tests. 
The console is at https://builds.apache.org/job/PreCommit-HADOOP-Build/14461/console in case of problems.
, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 18m 48s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} shellcheck {color} | {color:green}  0m  0s{color} | {color:green} There were no new shellcheck issues. {color} |
| {color:green}+1{color} | {color:green} shelldocs {color} | {color:green}  0m  9s{color} | {color:green} There were no new shelldocs issues. {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 32s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 20m  5s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:dbd69cb |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918260/HADOOP-14445.branch-2.001.precommit.patch |
| Optional Tests |  asflicense  shellcheck  shelldocs  |
| uname | Linux 2c15308664e3 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | branch-2 / 78ec001 |
| maven | version: Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T16:41:47+00:00) |
| shellcheck | v0.4.7 |
| Max. process+thread count | 34 (vs. ulimit of 10000) |
| modules | C: . U: . |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14461/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Patch 3 should pass docker build on branch-2 at least... Fixed the checkstyle there, will apply the same fix on the trunk commit for the unused import., (!) A patch to the testing environment has been detected. 
Re-executing against the patched versions to perform further tests. 
The console is at https://builds.apache.org/job/PreCommit-HADOOP-Build/14464/console in case of problems.
, Filled in a release note, please let me know if any suggestions., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} docker {color} | {color:red}  0m 41s{color} | {color:red} Docker failed to build yetus/hadoop:749e106. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918282/HADOOP-14445.branch-2.8.003.patch |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14466/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Sorry for the spam storms everyone. [https://builds.apache.org/job/PreCommit-HADOOP-Build/14465] is running for branch-2.8 and [https://builds.apache.org/job/PreCommit-HADOOP-Build/14464/] for branch-2, there should be no more jenkins messages besides these 2. , | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  9m 52s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2.8 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 44s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 29s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 14s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 30s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 28s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 12s{color} | {color:green} branch-2.8 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  4s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m  8s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red}  7m  8s{color} | {color:red} root generated 2 new + 963 unchanged - 1 fixed = 965 total (was 964) {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 27s{color} | {color:orange} hadoop-common-project: The patch generated 1 new + 199 unchanged - 2 fixed = 200 total (was 201) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 28s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  0s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  9s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 24s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 22s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 25s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 54m  6s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:749e106 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918282/HADOOP-14445.branch-2.8.003.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 4919dce5724b 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | branch-2.8 / 5f8ab3a |
| maven | version: Apache Maven 3.0.5 |
| Default Java | 1.7.0_171 |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/14465/artifact/out/diff-compile-javac-root.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/14465/artifact/out/diff-checkstyle-hadoop-common-project.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14465/testReport/ |
| Max. process+thread count | 1564 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14465/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  1s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 51s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 12m 37s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m 32s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 52s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 11m 37s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  6m 29s{color} | {color:green} branch-2 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 22s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 11m 28s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 11m 32s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red} 11m 32s{color} | {color:red} root generated 3 new + 1438 unchanged - 1 fixed = 1441 total (was 1439) {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  1m 52s{color} | {color:orange} root: The patch generated 1 new + 313 unchanged - 6 fixed = 314 total (was 319) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 11m 45s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} shellcheck {color} | {color:green}  0m  0s{color} | {color:green} There were no new shellcheck issues. {color} |
| {color:green}+1{color} | {color:green} shelldocs {color} | {color:green}  0m 10s{color} | {color:green} There were no new shelldocs issues. {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  0s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  6m 46s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 85m 51s{color} | {color:red} root in the patch failed. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 45s{color} | {color:red} The patch generated 1 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}179m 20s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.ipc.TestRPC |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:dbd69cb |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918271/HADOOP-14445.branch-2.03.patch |
| Optional Tests |  asflicense  shellcheck  shelldocs  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 8030286430a4 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | branch-2 / 78ec001 |
| maven | version: Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T16:41:47+00:00) |
| Default Java | 1.7.0_171 |
| shellcheck | v0.4.7 |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/14464/artifact/out/diff-compile-javac-root.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/14464/artifact/out/diff-checkstyle-root.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/14464/artifact/out/patch-unit-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14464/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-HADOOP-Build/14464/artifact/out/patch-asflicense-problems.txt |
| Max. process+thread count | 1460 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms . U: . |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14464/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  1s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 10m 24s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m 46s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 40s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 47s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 26s{color} | {color:green} branch-2 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 11m 42s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red} 11m 42s{color} | {color:red} root generated 2 new + 1438 unchanged - 1 fixed = 1440 total (was 1439) {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 39s{color} | {color:green} hadoop-common-project: The patch generated 0 new + 313 unchanged - 6 fixed = 313 total (was 319) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 46s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 26s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  9m  9s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 33s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 39s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 58m 36s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:f667ef1 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918305/HADOOP-14445.branch-2.04.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux d9eaad18aba3 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | branch-2 / f667ef1 |
| maven | version: Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T16:41:47+00:00) |
| Default Java | 1.7.0_171 |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/14469/artifact/out/diff-compile-javac-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14469/testReport/ |
| Max. process+thread count | 1521 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14469/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, [^HADOOP-14445.branch-2.05.patch] should fix all branch-2 pre-commit failures, except for the setLogLevel one to be left as-is, because branch-2 can't import the slf4j event class., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 21m  1s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  1s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2.8 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 47s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 50s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 50s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 30s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 32s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 16s{color} | {color:green} branch-2.8 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 58s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red}  7m 58s{color} | {color:red} root generated 1 new + 963 unchanged - 1 fixed = 964 total (was 964) {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 30s{color} | {color:green} hadoop-common-project: The patch generated 0 new + 199 unchanged - 2 fixed = 199 total (was 201) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  0s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 12s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  8m  9s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 59s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 31s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 68m 12s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.fs.sftp.TestSFTPFileSystem |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:749e106 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918306/HADOOP-14445.branch-2.8.004.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux d42a7d22c6dc 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | branch-2.8 / 5f8ab3a |
| maven | version: Apache Maven 3.0.5 |
| Default Java | 1.7.0_171 |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/14470/artifact/out/diff-compile-javac-root.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/14470/artifact/out/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14470/testReport/ |
| Max. process+thread count | 1296 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14470/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2.8 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 18s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  8m  4s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 31s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 33s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 11s{color} | {color:green} branch-2.8 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  4s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 56s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red}  7m 56s{color} | {color:red} root generated 1 new + 963 unchanged - 1 fixed = 964 total (was 964) {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 33s{color} | {color:green} hadoop-common-project: The patch generated 0 new + 199 unchanged - 2 fixed = 199 total (was 201) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 41s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  0s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 13s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 29s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 50s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 30s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 44m 43s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:749e106 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918313/HADOOP-14445.branch-2.8.005.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 305a2541ebec 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | branch-2.8 / 5f8ab3a |
| maven | version: Apache Maven 3.0.5 |
| Default Java | 1.7.0_171 |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/14472/artifact/out/diff-compile-javac-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14472/testReport/ |
| Max. process+thread count | 1297 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14472/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 20s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 12m  3s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 11s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 48s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 56s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 31s{color} | {color:green} branch-2 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 25s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 13m 20s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red} 13m 20s{color} | {color:red} root generated 2 new + 1438 unchanged - 1 fixed = 1440 total (was 1439) {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 51s{color} | {color:green} hadoop-common-project: The patch generated 0 new + 313 unchanged - 6 fixed = 313 total (was 319) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 53s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  0s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 37s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 15m 20s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 45s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 52s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 71m  1s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:f667ef1 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918312/HADOOP-14445.branch-2.05.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 93594b545daa 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | branch-2 / f667ef1 |
| maven | version: Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T16:41:47+00:00) |
| Default Java | 1.7.0_171 |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/14471/artifact/out/diff-compile-javac-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14471/testReport/ |
| Max. process+thread count | 1450 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14471/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, I'm not sure how to build locally to get a dry run of the javac from pre-commit, but I think this should fix them all..., | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 10m 25s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2.8 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 45s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 34s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 53s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 29s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 32s{color} | {color:green} branch-2.8 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 12s{color} | {color:green} branch-2.8 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  6s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 11s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  7m 11s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 27s{color} | {color:green} hadoop-common-project: The patch generated 0 new + 199 unchanged - 3 fixed = 199 total (was 202) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 27s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  0s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  8s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  9m  9s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 51s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 24s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 56m 43s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:749e106 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918323/HADOOP-14445.branch-2.8.006.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 6f3621e14833 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | branch-2.8 / 5f8ab3a |
| maven | version: Apache Maven 3.0.5 |
| Default Java | 1.7.0_171 |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14473/testReport/ |
| Max. process+thread count | 1405 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14473/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 33s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Findbugs executables are not available. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} branch-2 Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 11s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 10m 15s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m 50s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 40s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 44s{color} | {color:green} branch-2 passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 22s{color} | {color:green} branch-2 passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 11s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 11m 26s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red} 11m 26s{color} | {color:red} root generated 1 new + 1439 unchanged - 0 fixed = 1440 total (was 1439) {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 39s{color} | {color:green} hadoop-common-project: The patch generated 0 new + 313 unchanged - 7 fixed = 313 total (was 320) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 42s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 26s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 54m 43s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m  3s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 39s{color} | {color:red} The patch generated 1 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}104m 10s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:f667ef1 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12918409/HADOOP-14445.branch-2.06.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 404f0ab5a32e 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | branch-2 / ea51ef4 |
| maven | version: Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-10T16:41:47+00:00) |
| Default Java | 1.7.0_171 |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/14477/artifact/out/diff-compile-javac-root.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/14477/artifact/out/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14477/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-HADOOP-Build/14477/artifact/out/patch-asflicense-problems.txt |
| Max. process+thread count | 1694 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14477/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, The branch-2 and branch-2.8 conflicts are minor. [~shahrs87] do you want to give a final pass on them?

I plan to commit this 4PM PST today. Thanks!, {quote}The branch-2 and branch-2.8 conflicts are minor. Rushabh S Shah do you want to give a final pass on them?
{quote}
+1 binding on branch-2 and branch-2.8 patches., Committed to trunk, branch-3.[0-1], branch-2, branch-2.[8-9].

Thanks Rushabh for the initial work and consistent reviews, and all others for comments / thoughts!, SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #13961 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/13961/])
HADOOP-14445. Delegation tokens are not shared between KMS instances. (xiao: rev 583fa6ed48ad3df40bcaa9c591d5ccd07ce3ea81)
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/CommonConfigurationKeysPublic.java
* (add) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSTokenRenewer.java
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java
* (add) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtilFaultInjector.java
* (edit) hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java
* (add) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSLegacyTokenRenewer.java
* (edit) hadoop-common-project/hadoop-common/src/main/resources/META-INF/services/org.apache.hadoop.security.token.TokenIdentifier
* (edit) hadoop-common-project/hadoop-common/src/main/resources/core-default.xml
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticatedURL.java
* (add) hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestKMSUtil.java
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java
* (edit) hadoop-common-project/hadoop-common/src/main/resources/META-INF/services/org.apache.hadoop.security.token.TokenRenewer
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSDelegationToken.java
* (add) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/package-info.java
* (add) hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/kms/TestKMSClientProvider.java
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java
* (edit) hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/kms/TestLoadBalancingKMSClientProvider.java
, SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #13993 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/13993/])
HDFS-13430. Fix TestEncryptionZonesWithKMS failure due to HADOOP-14445. (xiao: rev 650359371175fba416331e73aa03d2a96ccb90e5)
* (edit) hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestEncryptionZones.java
, Had an offline discussion with [~daryn], [~shahrs87], [~jojochuang] and [~templedf].

Given the linked broken jiras and the difficulty for Daryn's future token issuer work, we decided to revert this and resort to the single kms-dt with config path. Will do the revert on Monday and work on the older single kms-dt patch., Reopening Jira as I'm reverting those changes.

Will remove fix versions as I proceed. Some minor conflicts due to HADOOP-14188, HADOOP-15390 and HADOOP-15313. Ran {{mvn clean test -DskipShade  -Dmaven.javadoc.skip=true  -Dtest=TestKMS*,TestDelegationTokenRenewer}} before pushing. Attached a trunk and a branch-2.8 version for reference - 3.x lines are similar to trunk, and 2.x lines similar to 2.8.

(HDFS-13430 will also be reverted to accommodate this), SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #14133 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/14133/])
Revert "HADOOP-14445. Delegation tokens are not shared between KMS (xiao: rev a3a1552c33d5650fbd0a702369fccd21b8c9d3e2)
* (delete) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSTokenRenewer.java
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSDelegationToken.java
* (edit) hadoop-common-project/hadoop-common/src/main/resources/core-default.xml
* (delete) hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestKMSUtil.java
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/CommonConfigurationKeysPublic.java
* (delete) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/package-info.java
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticatedURL.java
* (edit) hadoop-common-project/hadoop-common/src/main/resources/META-INF/services/org.apache.hadoop.security.token.TokenIdentifier
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java
* (delete) hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/kms/TestKMSClientProvider.java
* (edit) hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/kms/TestLoadBalancingKMSClientProvider.java
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java
* (edit) hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java
* (delete) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSLegacyTokenRenewer.java
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java
* (edit) hadoop-common-project/hadoop-common/src/main/resources/META-INF/services/org.apache.hadoop.security.token.TokenRenewer
* (delete) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtilFaultInjector.java
, Continuing on [this comment|https://issues.apache.org/jira/browse/HADOOP-14445?focusedCommentId=16464600&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16464600], revived and modified patch 003. Attaching patch 14 ready for review.

Besides unit tests, also manually tested this in a real cluster and covered the following matrix, all passed. Additionally blacklisted yarn user from access KMS, to prevent the kerberos fall back to work. Verified in job's log aggregation that token was indeed used for auth. (renewer and worker nodes are separate, so didn't make specific combination for them. This simplifies the test matrix)

||Submitter||Yarn NM(worker)||
|O|N|
|N|O|
|N|N|
|N,conf|N|

and 
||Submitter||Yarn RM(renewer)||
|O|N|
|N|O|
|N|N|
|N,conf|N|

O=without the patch, N= with the patch, N,conf = with the patch as well configuration (aka -Dhadoop.security.kms.client.token.use.uri.format=true)

[~shahrs87], would you have cycles to review this? Thanks much, Thanks [~xiaochen] for revised patch. I will review this week., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 36s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 32m  5s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 30m 39s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 19s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 40s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 10s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  4s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 21s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  7s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 27m 36s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red} 27m 36s{color} | {color:red} root generated 1 new + 1487 unchanged - 0 fixed = 1488 total (was 1487) {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m  0s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 35s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  8m 24s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m  8s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 36s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}140m 46s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.conf.TestCommonConfigurationFields |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12927022/HADOOP-14445.14.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux f5f6b3a23c85 3.13.0-137-generic #186-Ubuntu SMP Mon Dec 4 19:09:19 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 2e5cfe6 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_171 |
| findbugs | v3.1.0-RC1 |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/14753/artifact/out/diff-compile-javac-root.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/14753/artifact/out/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14753/testReport/ |
| Max. process+thread count | 1718 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14753/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Reattached patch 14 with deprecation warning and unit test failure fixed., | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 11s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 27m 26s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 29m 27s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 21s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 47s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 15s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 15s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 22s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 11s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 28m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 28m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 20s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 42s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m  5s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 22s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 18s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m  4s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 37s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}135m 59s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12928386/HADOOP-14445.14.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux a1011f5c9533 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 2d87592 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_171 |
| findbugs | v3.1.0-RC1 |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14794/testReport/ |
| Max. process+thread count | 1498 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14794/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Ping [~shahrs87] [~yzhangal] [~jojochuang] [~daryn], anyone has cycle for a review?, Had another look a the latest patch (rev14), thanks [~xiaochen] for continuing the work.

Mostly LGTM but the patch won't apply cleanly now due to HADOOP-15591:
{code:java}
LOG.debug("New token received: ({})", token);
{code}
Nit:
 1. why is the setKind() repeated for token?
{code:java|title=TestKMSClientProvider:setup}
	    token.setKind(TOKEN_KIND);
	    token.setService(new Text(providerUriString));
	    token.setKind(TOKEN_KIND);
{code}
Do you meant to set oldToken instead?

2. Question: why is it called “KMSUtilFaultInjector”? It doesn’t emit an exception or introduce a fault.
{code:java|title=TestLoadBalancingKMSClientProvider#setup()}
KMSUtilFaultInjector.set(new KMSUtilFaultInjector());
{code}
3. it doesn’t look like this line is needed.

4. Finally, how about marking this jira an Incompatible Change? Clearly, this is only an incompatible change when you flip the switch, however I want to raise a little more awareness of the potential problem once this switched on., Thanks for the review [~jojochuang]. Will rebase on the next patch.

1. Good catch, you're right, will update in next rev.

2. Would {{KMSUtiltestInjector}} suffice? Or any other suggestions?

3. Could you clarify which line?

bq. 4
I feel that's the goal of release notes. The last sentence of the release note seems clear to me that the flag should not be set arbitrarily. If we raise the incompatible flag, we theoretically cannot backport this to 2.x and 3.x...
Open to any recommendations though., This line in *TestLoadBalancingKMSClientProvider#setup()*
KMSUtilFaultInjector.set(new KMSUtilFaultInjector());
Isn't it already set when KMSUtilFaultInjector is initialized? Or maybe I misread? This is a tiny nit anyway., Thanks for the clarification, didn't realize it was referring to #2.... You're absolutely right.  [^HADOOP-14445.15.patch] rebases on latest trunk and addressed the comments., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 17s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 19s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 31m  0s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 31m  7s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 22s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 54s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 56s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 16s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 24s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  7s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 27m  1s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 27m  1s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 22s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 40s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 17s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 25s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 23s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  4m  4s{color} | {color:red} hadoop-kms in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 40s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}141m  0s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.crypto.key.kms.server.TestKMS |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12933133/HADOOP-14445.15.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 2ee3be79a48c 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / f93ecf5 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_171 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/14947/artifact/out/patch-unit-hadoop-common-project_hadoop-kms.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14947/testReport/ |
| Max. process+thread count | 1508 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14947/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, There are TestKMS NPEs in the latest patch test. Could you double check?, [~xiaochen] thanks for working on this important missing functionality for KMS. Patch v15 LGTM. Few minor comments:
# KMSClientProvider#renew Shall we consolidate keyProvider retrieval in single function? We can call {{createKeyProviderFromTokenService}} from {{KMSUtil.createKeyProvider}}. Corresponding debug statement may be moved there as well.
# KMSClientProvider#cancel: same as above
# TestLoadBalancingKMSClientProvider: To test failure in KMS HA with uri enabled setting shall we add another test case to call testLoadBalancingWithFailure with KMS_CLIENT_TOKEN_USE_URI_FORMAT_KEY set to true?, Thanks [~jojochuang] and [~ajayydv].

New patch fixed pre-commit (which was a conflict resolution error I made when rebasing) and Ajay's comments 1&2. For #3, the test case is testing KMSCP's loadbalancing on failures. This patch does not change that code path and is unrelated to client retry behavior, but on the delegation token side. So I don't think adding the config would add reasonable value here., | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 18s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 29s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 29m 13s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 22s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 48s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 21s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 21s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 27s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 12s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 32m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 32m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 26s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m  6s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 41s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 10m 22s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 46s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 54s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}145m 14s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12933703/HADOOP-14445.16.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux acd9d3ae8bec 3.13.0-144-generic #193-Ubuntu SMP Thu Mar 15 17:03:53 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 3e06a5d |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_171 |
| findbugs | v3.1.0-RC1 |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/14967/testReport/ |
| Max. process+thread count | 1361 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms U: hadoop-common-project |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/14967/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, +1 from me. let's wait a day so others have an opportunity to review it., I'll review tomorrow.  , [~xiaochen] thanks for updating the patch. LGTM.
{quote}This patch does not change that code path and is unrelated to client retry behavior, but on the delegation token side. So I don't think adding the config would add reasonable value here.
{quote}
Although this patch is mostly about KMS DT i was thinking of failover testing for KMS HA when auth method will be DT. But i don't feel too strongly about it, feel free to commit it as this is important improvement over current state., Thanks again Wei-Chiu and Ajay.
I agree more testing is a good thing in general. For this case though, the KMS HA behavior is orthogonal to the authentication method used. Specifically, {{LBKMSCP#doOp}} (the HA behavior) does not depend on the config. So I didn't add the test for now, because it wouldn't add more coverage. But feel free to elaborate and convince me otherwise.

It seems [~daryn] isn't around for the rest of the week, I'll wait for a few more days, and commit on next Wednesday (8/8) if no more comments. :), Thanks [~xiaochen] and [~jojochuang] for working on this. The patch looks good to me overall.

I just have few minor comments.

*KMSClientProvider.java*

Line 35/37: NIT: unused imports

Line 368: can we add javadoc to elaborate the difference between uri and providerUri.

Line 1072: NIT: should we change the order of the parameters to be consistent with  TokenSelector#selectToken?

Line 1093: should we attempt to parse the providerUriText and match the individual instances with kmsUrl as a fallback in case the order mismatch?

*core-default.xml*

Line 2663: hadoop.security.kms.client.token.use.uri.format is introduced as the switch to use the new dtService format. Can you give an example of the dtService field when this is true?  E.g., kms://http@localhost:port1/kms,kms://http@localhost:port2/kms

If the order of the kms instances change between renew for the long running process? Will the token selector still be able to find the matching token (AbstractDelegationTokenSelector#selectToken())

to renew? Should we define a logical kms uri to represent KMS HA instances to avoid this?

*KMSUtil.java*

Line 28: NIT: unused imports

 

 , Sorry, ironically it was kms issues that caused me to disappear...  I'm actively reviewing., [~xiaochen] thanks for taking this forward. I might be missing something here but wanted to put this question in open. L347 in DelegationTokenAuthenticatedURL#selectDelegationToken will return a service in ip:port or host:port format (not uri). So creds.getToken(service) in next line may not return the HA KMS DT as service name will be in URI format. Could you please share if this is not the case., Thanks all for reviewing this. Look forward to Daryn's active reviews, will address comments together..

Clarifications on the questions:
{quote}If the order of the kms instances change between renew for the long running process? Will the token selector still be able to find the matching token (AbstractDelegationTokenSelector#selectToken()) to renew? Should we define a logical kms uri to represent KMS HA instances to avoid this?
{quote}
Good question. You're right that when the url changes, the selection wouldn't work. My collection from the earlier discussion was that this was deemed an acceptable behavior. See discussions above, until [this comment|https://issues.apache.org/jira/browse/HADOOP-14445?focusedCommentId=16033492&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16033492].

{quote}
L347 in DelegationTokenAuthenticatedURL#selectDelegationToken will return a service in ip:port or host:port format (not uri). So creds.getToken(service) in next line may not return the HA KMS DT as service name will be in URI format. 
{quote}
The goal of this jira is to add this new format, while maintaining backwards compatibility. This means if the new software runs with old software (when the config {{hadoop.security.kms.client.token.use.uri.format}} isn't changed), it would behave the same. Hence the {{DelegationTokenAuthenticatedURL#selectDelegationToken}} is simply a code refactor.

The reason for that refactor is that, we can override this behavior in KMSCP and work our way for the new format. The reason it falls back to DTAURL to select token is for compat., {quote}Will the token selector still be able to find the matching token (AbstractDelegationTokenSelector#selectToken()) to renew? Should we define a logical kms uri to represent KMS HA instances to avoid this?
{quote}
No, we discussed early on that there must be no special configs.  It doesn't scale.  A token must be sufficient to determine how/where to renew.  I'm not sure why a token selector is being mentioned?   If you have a token to renew, you don't search for it, right?

I've been tinkering with a simpler patch that conforms to token acquisition that was discussed in a phone conference call quite awhile back.  Getting ready to work through tests and validate it's compatible with our internal implementation that's been in production.  We can then reconcile., Thanks for the update [~daryn]. Happy to know you have a version too. Open to simpler solutions. :)

Please let me know how I can help to move us forward., Close to having a magic bullet patch done, writing tests.
 # It's backwards compatible
 # Requires no config changes
 # Possibly "logical" name support w/o being config-based.  Maybe

The trick to compatibility is non-standard behavior of the kms/authenticated url token lookup.  Instead of selecting a token based on its contained service, the lookup is via the credentials alias – it assumes it's the service.  The token's actual service is meaningless.  We can exploit that behavior by setting the token service to a uri to allow renew/cancel to instantiate the issuing provider, but leave the credentials alias as the host:port of one of the providers so current client can find it.

 

 , Good to know, thanks for the update [~daryn].

I agree we can take advantage of the kind-less token lookup to build the silver bullet. Was trying to make the new behavior correctly based on token kind in the last patch, but looking forward to the magical patch before I really hold any opinion., This is probably pretty close to doing what I described above.  If anyone can help ensure there's sufficient test coverage (I stole tests from the last patch), please help, I'm juggling too much., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  7s{color} | {color:red} HADOOP-14445 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12937053/HADOOP-14445.compat.patch |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/15092/console |
| Powered by | Apache Yetus 0.9.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks Daryn. I'm reviewing the patch, will improve it and do some additional testing. Should come back by end of this week., Reviewed and tested in a test cluster, works nicely both ways. :) My 1-line-summary of the kms compat part would be: old client selects the token based on the credential map's key (which is the service of the token), and not the service of the token.

Attached patch 17 to kick a jenkins run. It has mostly small tweaks to make this more debuggable, and polished up test cases. Removed a few end-to-end tests that are no longer needed now that we don't use a config, and added a few tests to verify KMSCP / LBKMSCP directly.
, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 28s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 48s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 18m 41s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 16m  8s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  3m 50s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 40s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 18m 23s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 57s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m  1s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 19s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 53s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 14m 47s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  3m 22s{color} | {color:orange} root: The patch generated 28 new + 331 unchanged - 11 fixed = 359 total (was 342) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 36s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 1 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 12s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 46s{color} | {color:red} hadoop-common-project/hadoop-common generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 59s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  8m 46s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m  9s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 43s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 39s{color} | {color:red} The patch generated 1 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}120m 26s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hadoop-common-project/hadoop-common |
|  |  Redundant nullcheck of service, which is known to be non-null in new org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider(URI, KMSClientProvider[], long, Configuration)  Redundant null check at LoadBalancingKMSClientProvider.java:is known to be non-null in new org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider(URI, KMSClientProvider[], long, Configuration)  Redundant null check at LoadBalancingKMSClientProvider.java:[line 113] |
| Failed junit tests | hadoop.fs.TestFilterFileSystem |
|   | hadoop.fs.TestHarFileSystem |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12938583/HADOOP-14445.17.patch |
| Optional Tests |  dupname  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux a9fd527305fd 3.13.0-144-generic #193-Ubuntu SMP Thu Mar 15 17:03:53 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 962089a |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_181 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/15147/artifact/out/diff-checkstyle-root.txt |
| whitespace | https://builds.apache.org/job/PreCommit-HADOOP-Build/15147/artifact/out/whitespace-eol.txt |
| findbugs | https://builds.apache.org/job/PreCommit-HADOOP-Build/15147/artifact/out/new-findbugs-hadoop-common-project_hadoop-common.html |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/15147/artifact/out/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/15147/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-HADOOP-Build/15147/artifact/out/patch-asflicense-problems.txt |
| Max. process+thread count | 1718 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs-client U: . |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/15147/console |
| Powered by | Apache Yetus 0.8.0   http://yetus.apache.org |


This message was automatically generated.

,  [^HADOOP-14445.18.patch] ready for review.

Fixed pre-commit complaints. Removed the server default configs which seems to be an accidental change in the patch... Made {{getAdditionalTokenIssuers}} in FileSystem to be {{InterfaceAudience.Private}} because I don't think it's supposed to be used called by downstream.

[~daryn], want to do a semi-self-review? :), | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 24s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 6 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 58s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 20m 56s{color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} compile {color} | {color:red} 11m  5s{color} | {color:red} root in trunk failed. {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  3m 43s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 49s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 19m 25s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 54s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 51s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 20s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 53s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 15m 53s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red} 15m 53s{color} | {color:red} root generated 178 new + 1276 unchanged - 0 fixed = 1454 total (was 1276) {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  3m 29s{color} | {color:orange} root: The patch generated 3 new + 519 unchanged - 10 fixed = 522 total (was 529) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 33s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 12s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m  1s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 47s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 11s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 43s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 40s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}119m 28s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12938716/HADOOP-14445.18.patch |
| Optional Tests |  dupname  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 83724e7af1bd 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / b3161c4 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_181 |
| compile | https://builds.apache.org/job/PreCommit-HADOOP-Build/15151/artifact/out/branch-compile-root.txt |
| findbugs | v3.1.0-RC1 |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/15151/artifact/out/diff-compile-javac-root.txt |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/15151/artifact/out/diff-checkstyle-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/15151/testReport/ |
| Max. process+thread count | 1456 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs-client U: . |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/15151/console |
| Powered by | Apache Yetus 0.8.0   http://yetus.apache.org |


This message was automatically generated.

, Pre-commit failure seems intermittent, re-kicked.
{noformat}
[INFO] Running 'yarn install' in /testptch/hadoop/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-ui/target/webapp
[INFO] yarn install v0.21.3
[INFO] [1/4] Resolving packages...
[INFO] [2/4] Fetching packages...
[ERROR] error An unexpected error occurred: "https://registry.yarnpkg.com/sri-toolbox/-/sri-toolbox-0.2.0.tgz: Request failed \"500 Internal Server Error\"".
{noformat}, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 24s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 6 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 55s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 19m 45s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 16m 58s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  3m 40s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 41s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 18m 19s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 54s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m  3s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 18s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 50s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 55s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 14m 55s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  3m 21s{color} | {color:orange} root: The patch generated 3 new + 520 unchanged - 10 fixed = 523 total (was 530) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 35s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 31s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m 17s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m  2s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  9m  0s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 11s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 42s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 41s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}122m 50s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |
| JIRA Issue | HADOOP-14445 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12938716/HADOOP-14445.18.patch |
| Optional Tests |  dupname  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 356abf976796 3.13.0-144-generic #193-Ubuntu SMP Thu Mar 15 17:03:53 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 396ce7b |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_181 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/15154/artifact/out/diff-checkstyle-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/15154/testReport/ |
| Max. process+thread count | 1718 (vs. ulimit of 10000) |
| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs-client U: . |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/15154/console |
| Powered by | Apache Yetus 0.8.0   http://yetus.apache.org |


This message was automatically generated.

]