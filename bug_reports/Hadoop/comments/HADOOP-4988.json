[A detailed explanation: in TaskSchedulingMgr.reclaimCapacity, we stop looking for capacity to reclaim if no queue is running over capacity. This we determine by looking at the last queue and checking if its number of running tasks is <= its gc. If we place queues with gc=0 at the end of a queue, this condition is true and we stop looking for capacity to reclaim at the first pass itself. 

Queues with gc=0 should be treated the same as queues with (# of running tasks == gc). , Attached patch (4988.1.patch) with a simple fix: 
* changed the queue comparator to treat queues with gc=0 as queues running at capacity 
* removed code in assignTasks() that depended on queues with gc=0 being at the end of the collection. 
* Added a new test that checks for reclaiming capacity with a queue having gc=0
, bq. removed code in assignTasks() that depended on queues with gc=0 being at the end of the collection.

Vivek, started looking at this patch. If a queue has no capacity, we should not be giving a task. The code removed in the patch would hand out a task to it, which is wrong. What the fix should be is that previously, because of the sort order of queues, since queues with 0 capacity came at the end, we assumed there's no need to look at other queues. This we should change and start looking at other queues as well. Makes sense ?, bq. If a queue has no capacity, we should not be giving a task. 

Good catch. I had forgotten about this check. That has been added, I've synced with trunk, and a new patch (4988.2.patch) is attached. I've run dos2unix on it, and the output of ant test-patch is below: 

{code}
     [exec] +1 overall.
     [exec]
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec]
     [exec]     +1 tests included.  The patch appears to include 3 new or modified tests.
     [exec]
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec]
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec]
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec]
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
{code}
, Looks good. +1., I just committed this to trunk and Hadoop 0.20 branch. Thanks, Vivek !]