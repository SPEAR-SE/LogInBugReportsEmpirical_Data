[-1 on patch. This section of code should read:

{code}
int[] result = new int[nbHash];
for (int i = 0, initval = 0; i < nbHash; i++) {
   initval = result[i] = Math.abs(JenkinsHash.hash(b, initval)) % maxValue;
}
return result;
{code}

However, thanks for finding my stupid mistake.

, use the previous result as the next seed., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12371163/patch.txt
against trunk revision r601818.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests -1.  The patch failed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1283/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1283/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1283/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1283/console

This message is automatically generated., Fix test case, Fixed test case, -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12371179/patch.txt
against trunk revision r601845.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests -1.  The patch failed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1285/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1285/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1285/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1285/console

This message is automatically generated., The latest build failed on TestTableJoinMapReduce which does not use bloom filters and consequently has no bearing on this patch., Committed change. Recent test failure was unrelated to this change., Integrated in Hadoop-Nightly #325 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/325/]), There may be other bugs lurking in BloomFilter / HashFunction. This is very hard to reproduce, but once in a while  (once per hundred million keys tested) I'm getting something like this:

java.lang.ArrayIndexOutOfBoundsException: -1215998
        at org.onelab.filter.BloomFilter.membershipTest(BloomFilter.java:134)
, ArrayIndexOutOfBounds exception, Andrzej,

Do you think it is occurring for the same key?

If you could provide your initialization parameters and a test example, that would be very helpful., Closing this issue. Tracking ArrayIndexOutOfBoundsException in HADOOP-2414]