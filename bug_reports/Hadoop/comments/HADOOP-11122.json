[[~jianhe],
wrt to your comment here : https://issues.apache.org/jira/browse/HADOOP-11017?focusedCommentId=14145388&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14145388,

The {{rollMasterKey()}} method first resets the expiry on the {{currentKey}} (and thus the call is first made to {{updateDelegationKey(currentKey)}}) and then calls {{updateCurrentKey()}} which creates a new {{currentKey}} itself (which calls {{storeDelegationKey(newKey)}})

Do you still think we should move {{updateMasterKey(key)}} inside {{updateCurrentKey()}} ??, I didn't find the implementation of {{updateMasterKey}} in {{ZKDelegationTokenSecretManager}}, do I miss something ?, True.. ZKDTSM does not implement {{updateMasterKey()}}.. It implements {{updateDelegationKey()}} which will update the provided key. Technically ZKDTSM does not have a "masterKey". Each node that runs a ZKDTSM will encrypt with its own key (it is just that during verification a node needs to be aware of the key used to create a Token).

I had added the {{updateMasterKey()}} method to {{AbstractDelegationTokenSecretManager}} just for completeness (since it has a {{storeNewMasterKey()}} method). Looks like none of the current implementations need to implement it. Apologize for the confusion.. I can remove it if required but I prefer it remain there.., Uploading initial patch.., The point I was raising is that {{ZKDelegationTokenSecretManager#updateDelegationKey}} seems updating the OLD key with updated expire time, not updating the NEW key. I don't have much context about ZKDTSM. if this is fine, then we are good.
Regarding the unused{{updateMasterKey}}, I think we should remove this, we can add it anytime if required . Another option is to  have {{ZKDelegationTokenSecretManager}} actually overrides this method,  rather than {{updateDelegationKey}} method. , bq. ..seems updating the OLD key with updated expire time, not updating the NEW key...
This is fine.. since in the {{rollMasterKey()}} method, first there is a call to {{updateDelegationKey()}} which updates the OLD key.. and then it calls {{updateCurrentKey()}} which subsequently calls {{storeDelegationKey(newKey)}} which stores the new {{currentKey}}

bq. Regarding the unused{{updateMasterKey}}, I think we should remove this, ..
I prefer removing it as well.. Do not wish to implement {{updateMasterKey()}} in ZKDTSM, like I mentioned earlier, ZKDTSM does not need to know anything about the master key (since each node has its own currentKey)..

will update patch shortly.., Updating patch with [~jianhe]'s feedback, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12671903/HADOOP-11122.1.patch
  against trunk revision c88c6c5.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.crypto.random.TestOsSecureRandom

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4832//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4832//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12671917/HADOOP-11122.2.patch
  against trunk revision c88c6c5.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.crypto.random.TestOsSecureRandom

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4833//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4833//console

This message is automatically generated., Updating patch.. after running findbugs again locally, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12671966/HADOOP-11122.3.patch
  against trunk revision 0577eb3.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4836//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4836//console

This message is automatically generated., Thanks [~asuresh] for the patch, correct me if I am wrong.

{{ZKDelegationTokenSecretManager}} maintains its own delegationToken sequence number, why in _incrementDelegationTokenSeqNum_ and _incrementDelegationTokenSeqNum_, it also calls the super methods, but in _getDelegationTokenSeqNum_, it doesn't.

Another question is we supply {{getDelegationTokenSeqNum/incrementDelegationTokenSeqNum/setDelegationTokenSeqNum}} methods for override, but in {{addPersistedDelegationToken}}, it operates _delegationTokenSequenceNumber_ directly?

Can we make these consistent?  If needs special handling, could we give comments?, bq. ..maintains its own delegationToken sequence number, why in incrementDelegationTokenSeqNum and incrementDelegationTokenSeqNum, it also calls the super methods, but in getDelegationTokenSeqNum, it doesn't.
Agreed.. I can remove the {{super.}} calls from the methods in ZKDTSM (since ZKDTSM does not really need it)

bq. . but in addPersistedDelegationToken, it operates delegationTokenSequenceNumber directly..
This is similar to the reason why in the {{addKeys()}} method, we have to directly update {{allKeys}} rather than use the {{store/updateDelegationKey}} method. These methods are called by implementing classes before the DTSM is activated/started and are meant to only update local state of the DTSM.. the store and update methods for currentTokens, allKeys and the delegationTokenSequenceNumber are meant to be used/overridden by an implementing DTSM that handles distributed state.

Hope this makes sense ?


, Thanks [~asuresh] for the explanation about the {{addPersistedDelegationToken}}, I also noticed the method java doc, it makes sense for me., Updating patch addressing [~jianhe]'s feedback, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12672037/HADOOP-11122.4.patch
  against trunk revision 0577eb3.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.crypto.random.TestOsSecureRandom
                  org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4840//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4840//console

This message is automatically generated., Re-uploading previous patch to kick jenkins.., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12673986/HADOOP-11122.4.patch
  against trunk revision 1d4612f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 2 new Findbugs (version 2.0.3) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4893//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/4893//artifact/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/4893//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4893//console

This message is automatically generated., Uploading patch to fix findbugs, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12674185/HADOOP-11122.5.patch
  against trunk revision cb81bac.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4899//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/4899//artifact/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/4899//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4899//console

This message is automatically generated., The remaining single findBugs and release audit warnings are unrelated to the patch., The latest patch looks good to me too. 

+1. Committing this., FAILURE: Integrated in Hadoop-trunk-Commit #6316 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6316/])
HADOOP-11122. Fix findbugs in ZK DelegationTokenSecretManagers. (Arun Suresh via kasha) (kasha: rev 70719e5c62f32836914bea88e1ddd99c0ed009e1)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java
, Thanks Arun for the fix, Jian and Yi for your reviews.

I just committed this to trunk, branch-2 and branch-2.6, SUCCESS: Integrated in Hadoop-Yarn-trunk #721 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/721/])
HADOOP-11122. Fix findbugs in ZK DelegationTokenSecretManagers. (Arun Suresh via kasha) (kasha: rev 70719e5c62f32836914bea88e1ddd99c0ed009e1)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1910 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1910/])
HADOOP-11122. Fix findbugs in ZK DelegationTokenSecretManagers. (Arun Suresh via kasha) (kasha: rev 70719e5c62f32836914bea88e1ddd99c0ed009e1)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1935 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1935/])
HADOOP-11122. Fix findbugs in ZK DelegationTokenSecretManagers. (Arun Suresh via kasha) (kasha: rev 70719e5c62f32836914bea88e1ddd99c0ed009e1)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java
]