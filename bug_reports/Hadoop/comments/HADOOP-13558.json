[Thanks Tucu for reporting the issue.

IIUC, the concern is that, with {{loginUserFromSubject}}, {{checkTGTAndReloginFromKeytab}} always throws the IOE, since {{isKeytab == true}} and {{keytabFile == null}}?

I'm not entirely familiar with this ground, so not sure how feasible / secure it is to set {{keytabFile}} from subject.... If not, maybe we should set {{isKeytab}} to false. This will also get rid of the second problem, since no renewal will be done.
Alternate solution of not throwing IOE (just log and return) seems incompatible.

I'm hoping [~revans2] or [~daryn] as the initial author to HADOOP-10164 can shed some lights on this, thanks in advance!, [~xiaochen], i think, when given a Subject, the renewal of ticket is the responsibility of the owner of the Subject, so as you suggest {{isKeytab}} should be FALSE., Looking a bit more I think [~xiaochen] suggestion is the right one. While this could be seen as an incompatible change, it is not, because a relogin by UGI for a UGI created from a Subject it never could have work, there is no keytab file. This means there is no functional application using this. Thus we can safely make the change, simply not checking if a Subject has a keytab and not setting the flag either. We don't nee to check because UGI does not care, it is the responsibility of the Subject creator to renew its credentials. 

Thoughts?
, Thanks again Tucu. I think this makes sense for the case described, but I lack the knowledge to review {{isKeytab == false}} is expected in all other cases. I'm attaching a patch which minimally set this to false when {{loginUserFromSubject}}, to trigger a pre-commit. (I imagine coverage on these cases aren't great though...)

I'm not sure what's the expected return for the helper functions too, such as {{hasKerberosCredentials}}, {{isFromKeytab}} and {{isLoginKeytabBased}}. Could you review?

Also would love to get comments from [~daryn] and [~stevel@apache.org]. Thanks in advance., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 19s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m  1s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  8m  8s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 25s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 55s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 22s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 44s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  6m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  6m 51s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 24s{color} | {color:orange} hadoop-common-project/hadoop-common: The patch generated 1 new + 148 unchanged - 0 fixed = 149 total (was 148) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  7m 40s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 40m 37s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.security.ssl.TestSSLFactory |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:9560f25 |
| JIRA Issue | HADOOP-13558 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12826335/HADOOP-13558.01.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux d65236200199 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 20ae1fa |
| Default Java | 1.8.0_101 |
| findbugs | v3.0.0 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/10425/artifact/patchprocess/diff-checkstyle-hadoop-common-project_hadoop-common.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/10425/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/10425/testReport/ |
| modules | C: hadoop-common-project/hadoop-common U: hadoop-common-project/hadoop-common |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/10425/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, I deny all understanding of how Kerberos works, except for a deep fear of the UGI class. Maybe [~lmccay@apache.org] could look at it from the perspective of somebody who understands this stuff

# I don'tt understand why way the current/new code reuses the {{realuser}} field. Unless the act of creating the UGI has side effects, the first assignment is a no-op. If it is done for side effects, comments should declare this, an separate field used. now is the time to do this.
# test-wise, before the patch to UGI goes in â€”did the new test case fail? As that's a good sign that the test can recreate the problem and show it is fixed.
# If possible, it'd be good to extend KDiag with more info here
# This really ought to go through a full build and test run against a kerberized cluster. For example: can a version of Hadoop built with this auth with HDFS using keytabs as well as tickets. Volunteers?
, Hi [~tucu00]!

I agree with [~stevel@apache.org]'s point regarding the double instantiation of the realUser. In fact, it seems to me that the setting of the loginContext and authenticationMethod get lost when you create the second one. This really looks like a bug, if not, it needs to be made clear as to why it is doing that.

Beyond that, the new ctor should call the existing one and override the setting of isKeytab afterward in order to pick up any changes to the behavior of the other ctor going forward.

Tricking UGI into not renewing/reloggin by overriding this field is simple but really should be done in an OO way instead.
UGI being what it is, this simple change is probably the safest way forward.
Let's comment this clearly in the new ctor - so when someone is stepping through and see the keytab credential they don't see this as a bug.
, [~lmccay], [~stevel@apache.org], thanks for looking into this. 

[~xiaochen], thanks for putting up a patch. Regarding the new constructor, do we really need it? or we could retrofit the existing one (which is package private).
, Thanks Steve, Larry and Tucu for the valuable comments!

bq. 1. reuses the realuser field
Tracing back in history I think this is a bug. It was originally added by HADOOP-6656 (search for {{loginuser = }}). So removed the first.
The setters are needed, because in the ctor of UGI, {{User}} is retrieved from {{Subject}}, hence pertaining the previous set values.
bq. 2. test-wise ...
Yep, the test fails before the fix, and passes after.
bq. 3. If possible, it'd be good to extend KDiag with more info here
Not sure how to pull in KDiag here, suggestion appreciated. I added a debug log though.
bq. 4. This really ought to go through a full build and test run against a kerberized cluster.
Valid point... Tucu, would you be able to help on the test? Ideally we can test with your setup where this issue is reported, make sure it's fixed and no regression? I can test with a keytab-based env.

bq. retrofit the existing one (which is package private).
I think technically we can. The reason I put up a new constructor is to reduce change scope (so the other 13 usages doesn't have to be modified). Can definitely update to use existing one if you feel strongly. I added javadoc to the new constructor as Larry suggested.

Attached patch 2 to express the idea. Feedback appreciated!, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 25s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  6m 58s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 25s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 54s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 13s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 19s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 45s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  6m 44s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  6m 44s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 25s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 27s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  7m 59s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 39m  8s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.ha.TestZKFailoverController |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:9560f25 |
| JIRA Issue | HADOOP-13558 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12826567/HADOOP-13558.02.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 017f6d0d81af 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 6c60036 |
| Default Java | 1.8.0_101 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/10436/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/10436/testReport/ |
| modules | C: hadoop-common-project/hadoop-common U: hadoop-common-project/hadoop-common |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/10436/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, LGTM; debug statement and cleanup of bug both improve code quality.

what do others think?, LGTM, still i'm struggling with the following:

Why do we need a new private constructor {{private UserGroupInformation(Subject subject, final boolean externalKeyTab)}} that is called with {{false}} from a single place, the original {{private UserGroupInformation(Subject subject)}} constructor. It seems to me we should simply set isKeytab to false in the original constructor and we are done. I don't see how the UGI renewal would work if somebody sets externalKeytab to {{true}} as the keytabFile will be {{null}} and we'll run into the same issue this JIRA reports.

What am I missing?, Thank you both for the prompt reviews.

Regarding the constructor, the intent is to keep current behavior (decide {{isKeytab}} from the passed in {{Subject}}), while changing {{loginUserFromSubject}} to no longer do so. The former is done by calling the new constructor with false, and the latter is done by calling with true.
Other calls such as {{loginUserFromKeytab}} and {{loginUserFromKeytabAndReturnUGI}} still works because they set the {{keytabFile}}.

Ideally the change could look better if {{isKeytab}} is not {{final}}, but IMHO leave it as final is better.

Does this make sense?, got it, thx. +1, FYI - I'm doing some final testing as Steve suggested in his earlier comments. Will update here later today.

Thanks for reviewing!, Did a full hadoop unit test, and a smoke test run in a kerberized cluster. No regression found.

I plan to commit this on Tuesday (given Monday is a U.S. holiday). Feel free to comment if any objections., The failed test looks unrelated and passed locally.

Will commit patch 2 end of the today., Committed this to trunk and branch-2.

Thanks [~tucu00] for reporting the issue and the discussion. Also thanks [~stevel@apache.org] and [~lmccay] for the review comments!, SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #10402 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/10402/])
HADOOP-13558. UserGroupInformation created from a Subject incorrectly (xiao: rev 680be58aac03a9ffab6b07c8fde9602ddb9dc858)
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java
* (edit) hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/TestUserGroupInformation.java
, [~xiaochen] Thanks for the fix! Since it affects earlier versions do you mind porting it to branch-2.7? I can also help with that., Hi [~zhz],
Attached a branch-2.7 patch, please feel free to check it in if looks good to you.
Branch-2.8 only has the test class portion of the conflicts in the 2.7 patch, and is hopefully easy to tackle with., FYI - I have backported this to branch-2.8 and branch-2.7 as suggested. Compiled and ran the test locally before pushing. Thanks for the reminder, Zhe., Thanks much Xiao!, [~zhz], I'm still running into issues with HDFS/KMS because of this. The issue seems to be that {{UserGroupInformation.getCurrentUser()}} uses the old constructor of {{UserGroupInformation}} and it sets like the UGI has a keytab. And the {{KMSClientProvider}} uses the {{UserGroupInformation.getCurrentUser()}} method to get the UGI.

I'll dig the exact issue and open a follow up JIRA., Thanks [~tucu00] for the heads up.

May be unrelated, but KMSCP's UGI logic also has a recent fix HADOOP-13749 - not sure if that will help here. Sounds more than that... Will follow up in the new jira to figure out.]