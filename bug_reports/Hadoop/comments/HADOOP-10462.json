[Attaching a patch., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12633271/HDFS-6073.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6334//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6334//console

This message is automatically generated., Thanks for reporting. Seems like this patch is not fixing the root problem for null.


The actual cause for null would be that getFileSystem method is not parsing the df command output?
{code}
 } else {
      run();
      return filesystem;
    }
{code}
So, just executing the command and parseExecResult is just adding result lines to output in DF. So, at that stage fileSystem and mount variable will be null only.
If some one calls getMount then only these variable getting updated as getMount is parsing the output after df command execution.
{code}
} else {
      run();
      // Skip parsing if df was not successful
      if (getExitCode() != 0) {
        StringBuffer sb = new StringBuffer("df could not be run successfully: ");
        for (String line: output) {
          sb.append(line);
        }
        throw new IOException(sb.toString());
      }
      parseOutput();
    }
{code}

So, may be the right fix could be to parse the output after getting file system.  I think the message says volume, so displaying filesystem there would be correct and if you want to show mount point, then we could display that as well in the log.
, Thanks [~umamaheswararao] for the review. Attaching an updated patch., Thanks a lot, Akira for patch!
Patch almost looks good except the concern that, your test is on NamenodeResourceChecker, But bug exist in DF.   We could have written test directly on DF itself, no?
That will also make the code changes only in common now. So we could move this JIRA to common and update the JIRA title and description?
BTW, please remove an unused import in DF class, Thanks for the quick review! I'll move this JIRA to common and update the description., Attaching a patch that separates  {{TestDFVariations#TestMountAndFileSystem}} and removes unused import from {{DF}} and {{TestDFVariations}}., +1 for the patch. Pending Jenkins result., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638634/HADOOP-10462.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3745//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3745//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638627/HDFS-6073.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6585//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6585//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638627/HDFS-6073.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3744//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3744//console

This message is automatically generated., Thanks a lot, Akira AJISAKA for the patches. I have just committed this to trunk and branch-2, SUCCESS: Integrated in Hadoop-trunk-Commit #5455 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5455/])
HADOOP-10462. DF#getFilesystem is not parsing the command output. Contributed by Akira AJISAKA. (umamahesh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1584571)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DF.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestDFVariations.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #529 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/529/])
HADOOP-10462. DF#getFilesystem is not parsing the command output. Contributed by Akira AJISAKA. (umamahesh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1584571)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DF.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestDFVariations.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1747 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1747/])
HADOOP-10462. DF#getFilesystem is not parsing the command output. Contributed by Akira AJISAKA. (umamahesh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1584571)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DF.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestDFVariations.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1721 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1721/])
HADOOP-10462. DF#getFilesystem is not parsing the command output. Contributed by Akira AJISAKA. (umamahesh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1584571)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DF.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestDFVariations.java
]