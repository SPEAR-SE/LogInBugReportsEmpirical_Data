[I ran into this as well.  An alternate solution would be to change the lines in the scripts to 

bin=`cd "$bin" > /dev/null; pwd`, What version of bash are you using and what's your CDPATH?  Looking at the way the bin scripts from 19 to trunk, cd is given an absolute path, ".", or one that starts with "./"  from dirname, and bash won't use CDPATH (and print to stdout) if that's the case doesn't seem to use CDPATH used to stdout if that's the case (even though the manual claims it . 

{code}
bin=`dirname "$0"`   # or bin=`dirname "${BASH_SOURCE-$0}"`
bin=`cd "$bin"; pwd`
{code}

1. http://www.gnu.org/software/bash/manual/html_node/Bourne-Shell-Builtins.html
2. http://www.opengroup.org/onlinepubs/009695399/utilities/cd.html

We can unset CDPATH in the bin scripts but it doesn't look like it should fix anything.
, This problem occurs when CDPATH is set and includes "." (the present working directory). It is unsafe to assume that cd will not print to standard output.

The bash documentation states:

{quote}
If a non-empty directory name from CDPATH is used, or if ‘-’ is the first argument, and the directory change is successful, the absolute pathname of the new working directory is written to the standard output. 
{quote}

Steps to recreate:

1. export CDPATH=.
2. Run any hadoop script that contains the offending bin=`cd "$bin"; pwd` line

In this case, because CDPATH includes "." and the current value of $bin is "." an invocation of "cd" will cause the current absolute path to be printed to standard output. I have verified this problem occurs under these circumstances using bash 4.1.2(1) on Scientific Linux 6.2.

As stated above, the safest fix is to find all instances of the following:

{code}
bin=`cd "$bin"; pwd`
{code}

and replace the above with the following:

{code}
bin=`cd "$bin" &> /dev/null; pwd`
{code}
, Next version of HADOOP-9902 will include this fix. Closing as a dupe.]