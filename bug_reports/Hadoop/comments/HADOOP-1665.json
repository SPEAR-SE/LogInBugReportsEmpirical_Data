[If the file already exists in Trash, then append an integer to the filename in the Trash directory. The newer versions of the file in Trash will be of the form path.0, path.1, path.2, etc.

, A unit test to test deleting directories., There is a subtle implication introduced by the above approach. Assume that /data is a directory, we execute the following command:
% hadoop dfs -rm /data   // /data is moved to /trash/data
// restore /data
%hadoop dfs -rm /data  // /data is moved to /trash/data.0
// restore /data
%hadoop dfs -rm /data/file1  // file1 is moved to /trash/data/file1.0

The most recent copy of file1 is at /trash/path/file1.0 not /trash/path.0/file1. So it is not obvious to the user which one is the most recent copy.

Also does it make to sense to decrease the replication factor of the files in the trash can to be 1 or 2?, I agree that the location of the file in /Trash might not be enough to determine the latest copy of the file. One can use the "last modification time" of the file to determine the latest copy of the file in Trash (this approach is not foolproof either). However, I think the most common cases are addressed by this patch.

I would hesitate to decrease the replication factor when it gets moved to Trash., Enhanced test to verify that files get created in the Trash directory when deleted., +1 The code looks good., I just committed this., I'v tested the  cases above.. both cases work fine.. 
one small observation that's not consistent with the comments above..
  bin/hadoop dfs -mkdir /dir
  bin/hadoop dfs -rmr /dir
    Moved to trash: /dir
  bin/hadoop dfs -mkdir /dir
  bin/hadoop dfs -rmr /dir
    Moved to trash: /dir
  bin/hadoop dfs -mkdir /dir
  bin/hadoop dfs -rmr /dir
    Moved to trash: /dir
  bin/hadoop dfs -lsr /Trash
  /Trash/Current  <dir>           2007-09-13 22:59
  /Trash/Current/dir      <dir>           2007-09-13 22:32
  /Trash/Current/dir.1    <dir>           2007-09-13 22:32
  /Trash/Current/dir.2    <dir>           2007-09-13 22:32

Note that the subsequent dirs were dir1, dir2 not dir.0, dir.1
, Hi Gautam,

Can you pl explain ue latest comment? I thought the directories in /Trash were dir.1 dir.2, dir.3 as described in the doc. Is this confusing?

, it's a minor thing that is possibly harmless.. just that the dir# starts with 1 instead of 0 as mentioned above. 

so as per us earlier comment the newer versions of the path would be path.0, path.1 and so on ..instead the behaviour shows versions starting from path.1, path.2 and so on. 

also, please confirm if this behaviour is as expected..
after the fs.trash.interval has elapsed.. the folders move from /Trash/Current/ to /Trash/[checkpoint_number]
, > after the fs.trash.interval has elapsed.. the folders move from /Trash/Current/ to /Trash/[checkpoint_number]

Yes, that is as expected.  The checkpoint numbers are actually timestamps indicating the time of that move.  Folders whose checkpoint time is older than the trash interval are removed.]