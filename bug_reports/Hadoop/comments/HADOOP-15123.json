[Submitted a patch which fixes one more issue where KDiag is not able to print any krb5.conf line starting with hash (#).
Unit tests passing:
{code:java}
Running org.apache.hadoop.security.TestKDiag
Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.91 sec - in org.apache.hadoop.security.TestKDiag
Running org.apache.hadoop.security.TestKDiagNoKDC
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.465 sec - in org.apache.hadoop.security.TestKDiagNoKDC
{code}

Performed manual testing to test the changes., Hello [~stevel@apache.org],
I feel this could be part of HADOOP-12649. Any review comment will be appreciated. Thanks., Some more related search shows that SLIDER-1059 talks about dumping Credential cache too. I can pick this up if [~drankye] and [~stevel@apache.org] are okay with that., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  9s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 17m 17s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 15m 47s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 44s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 21s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 51s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 41s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  3s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 52s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 14m 52s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 40s{color} | {color:orange} hadoop-common-project/hadoop-common: The patch generated 3 new + 55 unchanged - 2 fixed = 58 total (was 57) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 11s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 38s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 53s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 57s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  8m 45s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 43s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 90m 56s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.fs.viewfs.TestViewFileSystemWithAuthorityLocalFileSystem |
|   | hadoop.fs.viewfs.TestViewFileSystemLocalFileSystem |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |
| JIRA Issue | HADOOP-15123 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12902484/HADOOP-15123.0001.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux ac4ab0a1a476 3.13.0-129-generic #178-Ubuntu SMP Fri Aug 11 12:48:20 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / fc7ec80 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/13848/artifact/out/diff-checkstyle-hadoop-common-project_hadoop-common.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/13848/artifact/out/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/13848/testReport/ |
| Max. process+thread count | 1479 (vs. ulimit of 5000) |
| modules | C: hadoop-common-project/hadoop-common U: hadoop-common-project/hadoop-common |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/13848/console |
| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, If it's there, it's probably because at the time I thought it was being used. 

Looking at https://web.mit.edu/kerberos/krb5-latest/doc/admin/env_variables.html , does seem that it was the wrong varable for the keytab

but it is the location for the cached tickets, according to http://web.mit.edu/kerberos/krb5-1.4/krb5-1.4/doc/klist.html 

so: I'd like the static field retained, the value printed, even with this patch, which does seem to be doing the right thing.

* This is one of those "needs testing in kerberos envs" features...can you attach before/after logs too. 
* checkstyles are about indentation;, Thanks [~stevel@apache.org] for the review comments. Updated patch with improved indentation.
Regarding credential cache location, currently KDiag does print KRB5CCNAME along with other important env. variables. We can take it to next level by validating and dumping the content in another patch.

*Manual Testing results:*
*Before fix:*
1. Error in printing content of krb5.conf with curly braces "\{" symbol: (problem was not with hash as I mentioned in first comment)
{code:java}
# ./bin/hadoop org.apache.hadoop.security.KDiag
...
...
== Locating Kerberos configuration file ==

Kerberos configuration file = /etc/krb5.conf

[libdefaults]
 renew_lifetime = 7d
 forwardable = true
 default_realm = MYREALM
 ticket_lifetime = 24h
 dns_lookup_realm = false
 dns_lookup_kdc = false
2017-12-17 04:43:28,767 ERROR security.KDiag: java.util.UnknownFormatConversionException: Conversion = '{'
java.util.UnknownFormatConversionException: Conversion = '{'
	at java.util.Formatter.checkText(Formatter.java:2579)
	at java.util.Formatter.parse(Formatter.java:2565)
	at java.util.Formatter.format(Formatter.java:2501)
	at java.util.Formatter.format(Formatter.java:2455)
	at java.lang.String.format(String.java:2940)
	at org.apache.hadoop.security.KDiag.println(KDiag.java:849)
	at org.apache.hadoop.security.KDiag.dump(KDiag.java:922)
	at org.apache.hadoop.security.KDiag.validateKrb5File(KDiag.java:578)
	at org.apache.hadoop.security.KDiag.execute(KDiag.java:378)
	at org.apache.hadoop.security.KDiag.run(KDiag.java:236)
	at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:76)
	at org.apache.hadoop.security.KDiag.exec(KDiag.java:1047)
	at org.apache.hadoop.security.KDiag.main(KDiag.java:1057)
2017-12-17 04:43:28,773 INFO util.ExitUtil: Halt with status -1: java.util.UnknownFormatConversionException: Conversion = '{'
{code}

2. KDiag picks up credential cache location instead of krb.conf location from environment & doesn't print KRB5_CONFIG env. variable.
{code:java}
# export KRB5CCNAME=/tmp/krb5cc_1001
# export KRB5_CONFIG=/etc/krb5.conf.copy
# ./bin/hadoop org.apache.hadoop.security.KDiag

== Environment Variables ==

HADOOP_JAAS_DEBUG = "(unset)"
KRB5CCNAME = "/tmp/krb5cc_1001"
HADOOP_USER_NAME = "(unset)"
...
...
== Locating Kerberos configuration file ==

Setting kerberos path from environment variable KRB5CCNAME: "/tmp/krb5cc_1001"
Kerberos configuration file = /tmp/krb5cc_1001
...
...
{code}

*After Fix:*
1. krb5.conf lines with "\{" can now be processed by KDiag.
2. KDiag prints KRB5_CONFIG and use that instead of KRB5CCNAME to locate krb5.conf.
{code:java}
# export KRB5CCNAME=/tmp/krb5cc_1001
# export KRB5_CONFIG=/etc/krb5.conf.copy
# ./bin/hadoop org.apache.hadoop.security.KDiag
...
...
== Environment Variables ==

HADOOP_JAAS_DEBUG = "(unset)"
KRB5CCNAME = "/tmp/krb5cc_1001"
KRB5_CONFIG = "/etc/krb5.conf.copy"
...
...
== Locating Kerberos configuration file ==

Setting kerberos path from environment variable KRB5_CONFIG: "/etc/krb5.conf.copy"
Kerberos configuration file = /etc/krb5.conf.copy

[libdefaults]
 renew_lifetime = 7d
 forwardable = true
 default_realm = MYREALM
 ticket_lifetime = 24h
 dns_lookup_realm = false
 dns_lookup_kdc = false
 default_ccache_name = /tmp/krb5cc_%{uid}
 #default_tgs_enctypes = aes des3-cbc-sha1 rc4 des-cbc-md5
 ...
 ...
{code}
, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  9s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 16m 35s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m 38s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 37s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  5s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 36s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 27s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 54s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 11m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 11m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 37s{color} | {color:green} hadoop-common-project/hadoop-common: The patch generated 0 new + 47 unchanged - 10 fixed = 47 total (was 57) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  1s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 59s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 33s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  8m 12s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 33s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 80m  5s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.fs.viewfs.TestViewFileSystemLocalFileSystem |
|   | hadoop.fs.viewfs.TestViewFileSystemWithAuthorityLocalFileSystem |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |
| JIRA Issue | HADOOP-15123 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12902533/HADOOP-15123.0002.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 06f52cd6b7e9 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 5e81f32 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/13850/artifact/out/patch-unit-hadoop-common-project_hadoop-common.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/13850/testReport/ |
| Max. process+thread count | 1431 (vs. ulimit of 5000) |
| modules | C: hadoop-common-project/hadoop-common U: hadoop-common-project/hadoop-common |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/13850/console |
| Powered by | Apache Yetus 0.7.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, +1

committed, to branch-2, branch-3.0 & trunk. Thanks!, correction: now committed to trunk; it had been accidentally merged in with a commit #35ad9b1dd from HADOOP-13974; reverted all of that and now applying this standalone by cherry picking the branch-3 version, SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #13514 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/13514/])
HADOOP-15123. KDiag tries to load krb5.conf from KRB5CCNAME instead of (stevel: rev de630708d1912b3e4fa31e00f5d84a08a580e763)
* (edit) hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java
]