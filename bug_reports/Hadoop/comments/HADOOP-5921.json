[Presumably that is because the NN is up, the filesystem isn't fully live yet -not enough workers?, Attaching a patch that retries until the jobtracker.info files gets replicated. Testing in progress., I'd like to see some way to exit that loop -presumably interrupting the thread would do it, right?, Yeah. There is no try-catch for sleep. So on interruption the loop will break., I don't think that's going to work since the JobTracker object isn't created yet. We don't have the target object for sending an interrupt as this loop is in the middle of the JobTracker constructor. Maybe we should move both the loops (the one introduced by the patch and the other already existing loop for checking whether the NameNode is up) outside the constructor (and put them in startTracker)., Steve/Devaraj, as of today the jobtracker simply busy-waits for the namenode to be up. I simply added one more busy wait for the namenode to be ready (for file creations). This is marked as a bug fix and hence I propose to keep it as it is and track the refactoring in some other enhancement jira. Refactoring JobTracker's constructor requires considerable effort. Comments?, I have done a refactoring of the JT constructor in the 3628 service lifecycle stuff. So I am in a position to interrupt things there, even though nobody else is. 

Looking at this code, I don't think it will make things any harder to interrupt, and it does simplify some of those boostrap race conditions.  I effectively have to do that same blocking until >1 worker is live before pushing files or work out; having this built in would simplify stuff.

There is (already) a bit of a problem with trying to kill a JT before it is live; this doesn't show up when you start Hadoop via the scripts, but I've seen it. I don't think this makes anything worse. , The uploaded patch doesnt work as expected. Will upload a new patch., Attaching a patch that fixes the issue. This patch does the following
# keeps on creating _jobtracker.info_ file in jobtracker.offerService() until it gets created successfully
# adds a testcase to test this bug.

Result of test-patch[exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 3 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.

Note that if the jobtracker.info file is garbled then the jobtracker simply comes out as expected.

Running ant test now., ant tests passed on my box., looks ok to me. 

could you change the log for failure from

+        LOG.warn("Failed to initialize recovery manager.");
+        LOG.warn(StringUtils.stringifyException(ioe));

to something like

LOG.warn("Failed to initialize recovery manager :"+ioe, ioe);

I know a lot of the existing code uses stringifyException, but it isn't needed and it makes it harder to extract the full stack data by other logging tools
, Incorporated Steve's comment. Attached a patch with the change., I just committed this. Thanks Amar!
(Due to the test directory restructuring in trunk, I had to manually change the patch to make it apply on 0.20. In the future, please submit a separate patch for 0.20 whenever there is a testcase involved)., Integrated in Hadoop-trunk #867 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/867/])
    . Fixes a problem in the JobTracker where it sometimes never used to come up due to a system file creation on JobTracker's system-dir failing.This problem would sometimes show up only when the FS for the system-dir  (usually HDFS) is started at nearly the same time as the JobTracker. Contributed by Amar Kamat.
]