[Attaching the log of the failed test and a link to the Hudson build that generated it:
http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2621/testReport/org.apache.hadoop.dfs/TestDFSUpgradeFromImage/testUpgradeFromImage/

It's also worth noting that there is another NPE in the log, which may the cause of the previous one:
{code}
2008-06-07 02:37:00,428 ERROR dfs.DataNode (UpgradeObjectDatanode.java:run(97)) - java.lang.NullPointerException
	at org.apache.hadoop.dfs.GenerationStampUpgradeDatanode.doUpgrade(GenerationStampUpgrade.java:291)
	at org.apache.hadoop.dfs.UpgradeObjectDatanode.run(UpgradeObjectDatanode.java:95)
	at java.lang.Thread.run(Thread.java:595)
{code}

The NPE in UpgradeManagerDatanode.initializeUpgrade() should not happen, because with currentUpgrades == null 
the method should exit after super.initializeUpgrade().
I think this is a synchronization issue, because UpgradeManagerDatanode.initializeUpgrade() is not synchronized.
If this can happen only when using MiniDFSCluster then we shoulddowngrade this issue and fix it later.
Marking it for 0.18 for now., Making it a blocker for 0.18.
We need an investigation on whether this affects regular generation stamp upgrade or is it just test related.
We will need to fix it if this is the upgrade bug., I agree with Konstantin's analysis. The only possibility is that there is a race between initializeUpgrade and startUpgrade. I am uploading a patch that fixes this problem.

I have run the unit test about 50 times, but have never been able to reproduce this problem anyway. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12384175/upgradeNPE.patch
  against trunk revision 669088.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2679/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2679/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2679/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2679/console

This message is automatically generated., +1.
Let's do this and then watch Hadoop QA builds for similar failures.
The problem is hard to reproduce.
Could you pls remove redundent import of SocketTimeoutException in this file., I just committed this. Thanks for reviewing this one, Konstantin., Integrated in Hadoop-trunk #523 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/523/])]