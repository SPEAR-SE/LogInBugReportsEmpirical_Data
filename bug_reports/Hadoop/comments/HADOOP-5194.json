[Making it a blocker for 0.21 as this makes almost all jobs on Windows to fail., Hudson also hit this.  See http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3820/console
{noformat}
 [exec]     [junit] 09/02/09 20:55:12 INFO mapred.TaskTracker: org.apache.hadoop.util.DiskChecker$DiskErrorException:
 Could not find taskTracker/jobcache/job_200902092055_0001/attempt_200902092055_0001_m_000004_0/output/file.out in any of the configured local directories
{noformat}, The issue you see on Hudson is not related to pid files issue that we see on Windows, Cygwin.

I guess the issue you see on Hudson is solved by patch for 4963. Would you please confirm the same ?, bq. Hudson also hit this. See http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3820/console
This must be different and may not even refer to a bug. Will look into that separately.

As for the original report of task and job failures on Cygwin, there seem to be multiple problems here. The exception that Nicholas reported is appearing on trunk pre HADOOP-4759. After HADOOP-4759 however, that exception is gone because of the changes involved in that issue, though tasks still continue to fail with a "kill unknown jvm" problem.
{code}
09/02/10 18:32:44 INFO mapred.TaskTracker: LaunchTaskAction (registerTask): attempt_200902101830_0001_m_000003_0 task's state:UNASSIGNED
09/02/10 18:32:44 INFO mapred.TaskTracker: Trying to launch : attempt_200902101830_0001_m_000003_0
09/02/10 18:32:44 INFO mapred.TaskTracker: In TaskLauncher, current free slots : 2 and trying to launch attempt_200902101830_0001_m_000003_0
09/02/10 18:32:45 INFO mapred.JvmManager: In JvmRunner constructed JVM ID: jvm_200902101830_0001_m_1163115666
09/02/10 18:32:45 INFO mapred.JvmManager: JVM Runner jvm_200902101830_0001_m_1163115666 spawned.
09/02/10 18:32:45 INFO mapred.JvmManager: JVM : jvm_200902101830_0001_m_1163115666 exited. Number of tasks it ran: 0
09/02/10 18:32:46 INFO mapred.TaskTracker: Killing unknown JVM jvm_200902101830_0001_m_1163115666
09/02/10 18:32:48 INFO mapred.TaskRunner: attempt_200902101830_0001_m_000003_0 done; removing files.
{code}

, When setsid is used when creating a process(HADOOP-2721 does this), on windows, cygwin, process.waitFor() seem to be not working(not waiting for the process completion) if the process is not using input stream and error stream. Can someone think of a solution/workaround for this ?, I am planning to disable usage of setsid and pidFiles for WINDOWS to resolve this issue., +1 for disabling it on WINDOWS as an interim fix., > I guess the issue you see on Hudson is solved by patch for 4963. Would you please confirm the same ?

You are right.  Hudson does not fail anymore., Attaching patch that disables usage of setsid and pidfiles for windows.

Please review and provide your comments., Patch looks good overall to me. Two minor nits.
 - There are ^M characters in the patch.
 - The documentation of mapred.tasktracker.tasks.sleeptime-before-sigkill now reads _"The time, in milliseconds, the tasktracker waits for sending a SIGKILL to a process, after it has been sent a SIGTERM. This is not used on WINDOWS now"_. Can you change it to something like _"The time, in milliseconds, the tasktracker waits for sending a SIGKILL to a task, after it has been sent a SIGTERM. This is currently not used on WINDOWS where tasks are just sent a SIGTERM."_ ? 

Can you upload a patch fixing these?, Vinod, Attaching patch with the changes., unit tests passed on my linux machine.


The number of failures in unit tests on Windows reduced from 80(with trunk) to 18(with this patch). Here are the failures with this patch:

org.apache.hadoop.hdfs.server.namenode.TestBackupNode.testCheckpoint
org.apache.hadoop.fs.TestDFVariations.testOSParsing
org.apache.hadoop.mapreduce.TestMapReduceLazyOutput.testLazyOutput
org.apache.hadoop.cli.TestCLI.testAll
org.apache.hadoop.fs.TestTrash.testTrash
org.apache.hadoop.fs.TestTrash.testNonDefaultFS
org.apache.hadoop.hdfs.TestHDFSServerPorts.testNameNodePorts
org.apache.hadoop.hdfs.TestHDFSServerPorts.testDataNodePorts
org.apache.hadoop.hdfs.TestHDFSServerPorts.testSecondaryNodePorts 
org.apache.hadoop.hdfs.TestHDFSTrash.testNonDefaultFS 
org.apache.hadoop.mapred.TestJobInProgress.testRunningTaskCount 
org.apache.hadoop.mapred.TestJobQueueInformation.testJobQueues  
org.apache.hadoop.mapred.TestJobTrackerRestart.testJobTrackerRestart  
org.apache.hadoop.mapred.TestMRServerPorts.testJobTrackerPorts  
org.apache.hadoop.mapred.TestMRServerPorts.testTaskTrackerPorts  
org.apache.hadoop.mapred.TestMiniMRDFSCaching.testWithDFS  
org.apache.hadoop.mapred.TestMiniMRLocalFS.testWithLocal 
org.apache.hadoop.security.authorize.TestServiceLevelAuthorization.testRefresh 

The logs of these failures show that these failures are not related to setsid and pidfiles stuff.


Reliability test also passed.


ant test-patch gave:

     [exec] +1 overall.
     [exec]
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec]
     [exec]     +1 tests included.  The patch appears to include 3 new or modified tests.
     [exec]
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec]
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec]
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec]
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec]
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings., +1 for the patch from my side. Can the committer please review it and before committing, run dos2unix on this patch? Thanks., I just committed this. Thanks, Ravi!, Integrated in Hadoop-trunk #796 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/796/])
    , Editorial pass over all release notes prior to publication of 0.21.]