[This problem does not exist in 0.16, This patch fixes the problem reported., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12379914/ACException.patch
against trunk revision 645773.

    @author +1.  The patch does not contain any @author tags.

    tests included -1.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2208/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2208/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2208/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2208/console

This message is automatically generated., +1 Looks good, -1 ... we should egt the message returned by the namenode and fill it in the exceptions created., The real problem here is that after unwrapping the RemoteException the result has null in detailedMassage field, which causes the printout observed. I changed unwrapping methods so that they call constructor with a String parameter rather than the default constructor.
Mahadev is going to write a unit test., this patch includes konstantin's changes, adds a test and makes some minor changes to fsshell.

, One can be more specific with some of the generic types. There's no clean way around the generic array param, but within RemoteException we can replace:

{code}
private Throwable instantiateException(Class<?> cls) throws Exception {
  Constructor<?> cn = cls.getConstructor(String.class);
  Throwable ex = (Throwable)cn.newInstance(this.getMessage());
  ex.initCause(this);
  return ex;
}     
{code}

with
{code}
private IOException instantiateException(Class<? extends IOException> cls) 
    throws Exception {
  Constructor<? extends IOException> cn = cls.getConstructor(String.class);
  cn.setAccessible(true);
  return (IOException)cn.newInstance(this.getMessage()).initCause(this);
}     
{code}

The cast from newInstance is necessary because initCause returns Throwable, though newInstance returns IOException. If we call instantiateException with
{code}
instantiateException(realClass.asSubclass(IOException.class));
{code}

Then the types hold together. +1 for everything else., trying hudson again., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12379967/3225-2.patch
against trunk revision 645773.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 3 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests -1.  The patch failed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2228/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2228/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2228/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2228/console

This message is automatically generated., We do not need explicit conversion to IOException since the parameter already has that type.
I also add some more 0-ports in TestCheckpoint, which probably was the reason it failed., +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12380127/3225-3.patch
against trunk revision 645773.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 6 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2231/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2231/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2231/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2231/console

This message is automatically generated., I just committed this. Thank you Mahadev and Chris., Integrated in Hadoop-trunk #462 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/462/])]