[This is the full stack
{code}
Hadoop-Core.compile-core-test:
    [mkdir] Created dir: /home/slo/Java/Hadoop/apachegit/hadoop-common/build/test/core/classes
    [javac] Compiling 8 source files to /home/slo/Java/Hadoop/apachegit/hadoop-common/build/test/core/classes
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] Compiling 152 source files to /home/slo/Java/Hadoop/apachegit/hadoop-common/build/test/core/classes
    [javac] Note: Some input files use or override a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.

======================================================================
Exiting failing project "Hadoop-Core"
======================================================================

BUILD FAILED - at 23/12/09 22:03
java.lang.NoSuchMethodError: org.objectweb.asm.ClassWriter.<init>(Lorg/objectweb/asm/ClassReader;I)V
	at com.thoughtworks.paranamer.generator.Enhancer.addExtraStaticField(Enhancer.java:64)
	at com.thoughtworks.paranamer.generator.Enhancer.enhance(Enhancer.java:52)
	at com.thoughtworks.paranamer.generator.QdoxParanamerGenerator.processClasses(QdoxParanamerGenerator.java:79)
	at com.thoughtworks.paranamer.generator.QdoxParanamerGenerator.processSourcePath(QdoxParanamerGenerator.java:61)
	at com.thoughtworks.paranamer.ant.ParanamerGeneratorTask.execute(ParanamerGeneratorTask.java:51)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:386)
	at org.apache.tools.ant.Target.performTasks(Target.java:407)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1361)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1330)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1213)
	at org.apache.tools.ant.Main.runBuild(Main.java:775)
	at org.apache.tools.ant.Main.startAnt(Main.java:217)
	at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)
	at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)
{code}, The cause of this is an older version of the asm classes on Ant's classpath getting picked up before the version set up by Hadoop.

Fix: run {{ant -diagnostics}} and look for any {{asm.jar}} libraries on the classpath, usually in {{$ANT_HOME/lib}} or in ~/.ant/lib. Remove them. Retry

, Resolving as WONTFIX as it's really a configuration issue., reopening as I am seeing this again in common, again some kind of CP error.

, adding some extra diagnostics to the build fixes the location
{code}
    <whichresource class="org.objectweb.asm.ClassWriter"
      property="asm.location"
      classpathref="classpath" />
    <echo level="verbose" >asm.location=${asm.location}</echo>
{code}
this results in 
{code}
[whichresource] Searching for org/objectweb/asm/ClassWriter.class
     [echo] asm.location=jar:file:/home/slo/.ivy2/cache/asm/asm/jars/asm-2.2.3.jar!/org/objectweb/asm/ClassWriter.class
{code}
Something is pulling in asm-2.2.3, this looks to be paranamer itself; yet the versions aren't in sync. If you drop asm-3.1 into ANT_HOME/lib the build works. Which implies the 2.2.3 version is the wrong one.

Proposed: 
# insert the diagnostics code into the build.xml file, 
# add an explicit reference to the asm version hadoop needs, ivy will discard the old ones.
]