[patch forthcoming, Yes, the position will come as zero, because it directly opens the FileOutPutstream in append mode. This will ensures that the data to go at the end of the file.
fixing this would be simple, we can set the position on fileChannel position to the length of the file. But i am not sure this is really a bug or not, because the author intention is to leave as it is equal behavior with FileOutPutStream when opening in append mode....?, 
FWIW:   
DFSClient.append does:

    return new FSDataOutputStream(out, statistics, out.getInitialLen());

Was planning on submitting a patch on RawLocalFileSystem w/

  public FSDataOutputStream append(Path f, int bufferSize,
      Progressable progress) throws IOException {
    if (!exists(f)) {
      throw new FileNotFoundException("File " + f + " not found");
    }
    FileStatus status = getFileStatus(f);
    if (status.isDirectory()) {
      throw new IOException("Cannot append to a diretory (=" + f + " )");
    }
    return new FSDataOutputStream(new BufferedOutputStream(
        new LocalFSFileOutputStream(f, true), bufferSize), statistics,status.getLen());
  }, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12506157/HADOOP-7817.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated 9 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/437//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/437//console

This message is automatically generated., I think the -1 javadoc mentioned above is not related to my patch., Is anyone looking at this?  I have another patch that depends on this and would like to get some feedback.

Thanks!, Cancelling patch, as it no longer applies to trunk., Assigning to myself to update the patch.  [~ktomasette] , please feel free to assign back if you would like to continue work on this JIRA, Updated patch on the latest trunk code base., \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  16m 17s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 31s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 35s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   1m  4s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 33s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 51s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  23m 34s | Tests passed in hadoop-common. |
| | |  62m 22s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12737147/HADOOP-7817-01.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / c59e745 |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6904/artifact/patchprocess/testrun_hadoop-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/6904/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6904/console |


This message was automatically generated., Thanks for updating the patch [~kanaka]. 
Source changes looks good.

Have some nits in test.
1. {{fs}} is not closed after test.
2. {{in}} also not closed.
3. Use default value 'build/test/data' for {{System.getProperty("test.build.data", ".")}}, 4. {{assertEquals(pos, out.getPos());}}, better this be asserted against hardcoded value 4. 
5. {code}+    StringBuffer buff = new StringBuffer();
+    FSDataInputStream in = fs.open(path1);
+    int c;
+    while ((c = in.read()) != -1) {
+      buff.append((char) c);
+    }
+
+    //Verify the content
+    assertEquals("text1 text2", buff.toString());{code}
Above one could be also written as 
{code}    FSDataInputStream in = fs.open(path1);
    byte[] buf = new byte[in.available()];
    in.read(buf);
    // Verify the content
    assertEquals("text1 text2", new String(buf));{code}, I think, test can be added in existing {{TestLocalFileSystem}} class itself instead of creating new file., Thanks for the review [~vinayrpet]. I have moved the test code to {{TestLocalFileSystem}} and handled the comments except the first one to close the fs. 

We can close {{FileSystem}} by making  {{fileSys}} static in a method with annotation {{@AfterClass}} but I felt it may be un related change for this JIRA context as it's an old file and some other test classes for example {{TestCryptoStreamsForLocalFS}} are also not closing localFS. 
So, we can file a separate JIRA to handle this in all such files. What is your opinion?

, \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  16m 20s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 29s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 36s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   1m  6s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 33s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 34s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 50s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  23m  4s | Tests passed in hadoop-common. |
| | |  61m 58s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12738587/HADOOP-7817-02.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 8d0ef31 |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6943/artifact/patchprocess/testrun_hadoop-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/6943/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6943/console |


This message was automatically generated., bq. We can close FileSystem by making fileSys static in a method with annotation @AfterClass but I felt it may be un related change for this JIRA context as it's an old file and some other test classes for example TestCryptoStreamsForLocalFS are also not closing localFS. 
So, we can file a separate JIRA to handle this in all such files. What is your opinion?
Since the whole test is moved to {{TestLocalFileSystem}}, this change is not needed for local fs.
Anyway, my main concern was the closing of open streams, thats handled in latest patch. So I am fine with that.

Latest patch looks good to me. +1.
Will commit soon, Committed to trunk and branch-2.
Thanks for the contribution [~ktomasette] and [~kanaka]., FAILURE: Integrated in Hadoop-trunk-Commit #8000 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8000/])
HADOOP-7817. RawLocalFileSystem.append() should give FSDataOutputStream with accurate .getPos() (Contributed by kanaka kumar avvaru) (vinayakumarb: rev 48ca23def1d1c28448a65238814070e79c8f4c4e)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalFileSystem.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #224 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/224/])
HADOOP-7817. RawLocalFileSystem.append() should give FSDataOutputStream with accurate .getPos() (Contributed by kanaka kumar avvaru) (vinayakumarb: rev 48ca23def1d1c28448a65238814070e79c8f4c4e)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalFileSystem.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #954 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/954/])
HADOOP-7817. RawLocalFileSystem.append() should give FSDataOutputStream with accurate .getPos() (Contributed by kanaka kumar avvaru) (vinayakumarb: rev 48ca23def1d1c28448a65238814070e79c8f4c4e)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #2152 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2152/])
HADOOP-7817. RawLocalFileSystem.append() should give FSDataOutputStream with accurate .getPos() (Contributed by kanaka kumar avvaru) (vinayakumarb: rev 48ca23def1d1c28448a65238814070e79c8f4c4e)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalFileSystem.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #213 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/213/])
HADOOP-7817. RawLocalFileSystem.append() should give FSDataOutputStream with accurate .getPos() (Contributed by kanaka kumar avvaru) (vinayakumarb: rev 48ca23def1d1c28448a65238814070e79c8f4c4e)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #222 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/222/])
HADOOP-7817. RawLocalFileSystem.append() should give FSDataOutputStream with accurate .getPos() (Contributed by kanaka kumar avvaru) (vinayakumarb: rev 48ca23def1d1c28448a65238814070e79c8f4c4e)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2170 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2170/])
HADOOP-7817. RawLocalFileSystem.append() should give FSDataOutputStream with accurate .getPos() (Contributed by kanaka kumar avvaru) (vinayakumarb: rev 48ca23def1d1c28448a65238814070e79c8f4c4e)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestLocalFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, Cherry-picked this to branch-2.7 and branch-2.6 to Fix {{TestSequenceFileAppend}} from HADOOP-7139

There were minor conflicts. Attached committed patches for reference., Closing the JIRA as part of 2.7.3 release.]