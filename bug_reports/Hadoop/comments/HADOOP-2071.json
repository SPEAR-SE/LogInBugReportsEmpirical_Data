[
Mark/reset are supported anymore. If streaming must use mark/reset, it should use a BufferedInputStream over DFSInputStream., Attached is a patch, which eliminates mark/reset. 
At one place seek() was called even after reset() which made it redundant.
Please could anyone review this.
Thanks, Code reviewed:

-1.

the readimit argument for mark is not honored in these changes. If one calls reset after more than readlimit bytes have been read after mark, that reset is supposed to throw IOException., I think we should use wrap InputStream in_ in java.io.BufferedInputStream, as Raghu suggested, and keep the mark/reset based impl of StreamXmlRecordReader., bq. the readimit argument for mark is not honored in these changes. If one calls reset after more than readlimit bytes have been read after mark, that reset is supposed to throw IOException.

We can just keep track of how many bytes we read and if it is larger than readlimit, we can throw an IOException, if we want to keep that behavior. Actually we can just throw an exception if there is no record found within readlimit (instead of reading till there a match or EOF).

Lohit and I looked the code around and it seems to seek-back pretty heavily (pretty much for every record). Seeking back is pretty inefficient in DFS. It throws away current buffers (both app and TCP) and starts a new connection in most cases. The current patch does not make this situation any worse. I wonder what the typical size of these records is..

One problem with using BufferedInputStream() is that current code uses getPos() and seek() in many place which is specific to FSDataInputStream. So it will need more changes to manage it., After a little bit more discussion it looks like using BufferedInputStream can get rid of problem with seek-back as well. Because we are always seeking with-in what we have recently read. So we would replace seek() with {{ reset(); skip(); }}.
, With inputs from Raghu and Milind, here is an updated patch. This wraps FSDataInputStream around BufferedInputStream and eliminates seek(). Patch also includes a simple test case for StreamXmlRecordReader. , +1. code reviewed., Making patch available., Regd: {code}
-    long pos = in_.getPos();
     numNext++;
-    if (pos >= end_) {
+    if (bin_.available() == 0) {
{code}
I am not sure if the above change is correct. Lohit, can you confirm if this? Not sure if end_ is set to EOF or not, and {{available() == 0}} may not indicate EOF., Thanks Raghu. I will look into this case and resubmit new one. Canceling the patch., Milind requested I move this to 0.16., BufferedInputStream does not provide a way to get the current position in the stream and updating the encapsulated FSDataInputStream again is like seek back. So I have a the position stored in pos_ and update it accordingly. Attaching a new patch with this change and testcase. Please could anyone take a look.
Thanks!, Getting rid of an extra blank line in the patch., +1.  Also Lohit verified the patch with large files and original user app that triggered the bug., Making this PA, -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12368778/HADOOP-2071-4.patch
against trunk revision r590273.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs -1.  The patch appears to introduce 2 new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests -1.  The patch failed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1043/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1043/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1043/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1043/console

This message is automatically generated., looks like unrelated contrib test failed. But there were 2 findbugs warning which I have fixed and attaching new patch, I just committed this. Thanks, Lohit!, Integrated in Hadoop-Nightly #297 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/297/])]