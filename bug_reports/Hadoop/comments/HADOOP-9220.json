[The reason for this behaviour is because there can be multiple watchers registered for a given ZK client in ActiveStandbyElector. (The monitorLockNodeAsync() method creates a new watcher object for the existing ZK client.) 

This can cause multiple invocations of joinElectionInternal() for a single watch event, each of which will make a call to create the lock znode. The first call will cause the a transition to active, while subsequent ones will cause a transition to standby (in the isNodeExists clause of the  processResult() method). In a manual failover scenario the node will still transition to active again, since the other node has ceded from the election for 10s, but it's still an unnecessary transition that could be eliminated.

I did some manual testing with the attached patch, and the extra transition was avoided. I'll see if I can write a unit test for it.
, I've written a test which fails without the patch. Basically it checks that the number of times that the HA service transitions to active is as expected.

There is another part to the fix, in addition to the previous patch. In ZKFailoverController#recheckElectability() the check may be postponed if the FC has ceded its active state and is waiting for a timeout (10s) before rejoining the election. The trouble is that the FC may have become active again in the intervening time, but recheckElectability() doesn't take account of this (and will call ActiveStandbyElector#createLockNodeAsync), and so the FC will transition to standby and then to active again. The fix I have implemented changes a postponed recheckElectability() to check if the FC is not currently active before joining the election., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12565504/HADOOP-9220.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2071//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2071//console

This message is automatically generated., Not quite sure I understand. Todd had added a reference to the ZK client so that the Elector would only accept watch notifications from the last ZK client. That means only 1 ZK client would be driving the Elector., It's true that the elector checks for a stale ZK client, but that doesn't prevent the problem here which is caused by i) having multiple watchers for the ZK client (due to the creation of a new watcher in monitorLockNodeAsync), and ii) a postponed call to recheckElectability unnecessarily forcing a new election (this call doesn't go through the watcher)., Hey Tom. I think you can just use the {{wantsToBeInElection}} variable here rather than going back to ZK to check the current state of the znode (which I fear might be race-prone). How does this patch look to you? It seems to pass the test you added., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12582980/hadoop-9220.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2539//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2539//console

This message is automatically generated., +1 for Todd's patch. I tested it manually and the original problem no longer occurs with the patch.

Nit: did you mean to introduce {{new Exception}} in the debug line?, Woops, nope, I'll take out that 'new Exception' on commit. I was just using it to help debug. Good catch., Committed to branch-2 and trunk. thanks Tom for tracking this down, Integrated in Hadoop-trunk-Commit #3750 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3750/])
    HADOOP-9220. Unnecessary transition to standby in ActiveStandbyElector. Contributed by Tom White and Todd Lipcon. (Revision 1482401)

     Result = SUCCESS
todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1482401
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ha/DummyHAService.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ha/TestZKFailoverController.java
, Integrated in Hadoop-Yarn-trunk #210 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/210/])
    HADOOP-9220. Unnecessary transition to standby in ActiveStandbyElector. Contributed by Tom White and Todd Lipcon. (Revision 1482401)

     Result = SUCCESS
todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1482401
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ha/DummyHAService.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ha/TestZKFailoverController.java
, Integrated in Hadoop-Hdfs-trunk #1399 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1399/])
    HADOOP-9220. Unnecessary transition to standby in ActiveStandbyElector. Contributed by Tom White and Todd Lipcon. (Revision 1482401)

     Result = FAILURE
todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1482401
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ha/DummyHAService.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ha/TestZKFailoverController.java
, Integrated in Hadoop-Mapreduce-trunk #1426 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1426/])
    HADOOP-9220. Unnecessary transition to standby in ActiveStandbyElector. Contributed by Tom White and Todd Lipcon. (Revision 1482401)

     Result = SUCCESS
todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1482401
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ha/DummyHAService.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ha/TestZKFailoverController.java
]