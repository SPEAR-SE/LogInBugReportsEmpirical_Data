[GitHub user kazuyukitanimura opened a pull request:

    https://github.com/apache/hadoop/pull/206

    HADOOP-14235. S3A Path does not understand colon (:) when globbing

    Hi @steveloughran (not sure who else I need to involve here)
    
    I explained the issue at https://issues.apache.org/jira/browse/HADOOP-14235
    
    This pull request fixes the issue and does not break other things as far as I know. (I also ran the unit tests).
    
    Probably, #204 should also fix this issue. This pull request is for a short-term solution in case anyone is interested.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/bloomreach/hadoop HADOOP-14235

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/hadoop/pull/206.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #206
    
----
commit ff37d08ed314d7b2e9b7d8aff648e38e21fceacb
Author: kazu <kazu@bloomreach.com>
Date:   2017-03-24T23:36:01Z

    HADOOP-14235. S3A Path does not understand colon (:) when globbing

----
, The bad news "one line fixes" are just as much trouble as anything else to get working. The main difference is the amount of review time each line gets is higher.

This is the [hadoop-aws testing policy|
https://github.com/apache/hadoop/blob/trunk/hadoop-tools/hadoop-aws/src/site/markdown/tools/hadoop-aws/testing.md]. no declared test run: no review. No extra tests: either justify the lack of tests or expect no review.

Here I'm not going to worry about it as HADOOP-3257 shows this is a broader problem. This alternative construction trick may work here, but it's only going to delay the problem. For example. it won't do anything for writing data when the destination path has a ":", in, recursive listFiles(path, recursive=true), calls, or anywhere else where the Path/2 constructors are used to build paths. Which is a lot of places in the code.

I don't think we can/should be trying to fix this in a stack-trace-by-stack trace approach as it will simply break again the moment someone changes the codepath. Path itself is going to need tuning. That's not impossible; if you look at what goes on there to handle windows paths like "C:/something" you can see what has gone ahead. It's just a significant body of work, which someone who understands that bit of the code (not me!) needs to do.
, Ok, closing in favor of HADOOP-3257, Github user kazuyukitanimura commented on the issue:

    https://github.com/apache/hadoop/pull/206
  
    Closing PR as stated in Jira
, Github user kazuyukitanimura closed the pull request at:

    https://github.com/apache/hadoop/pull/206
]