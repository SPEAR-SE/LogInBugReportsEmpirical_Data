[If there's one thing which causes trouble, it's guava updates. 
please search for predecessors here, link to them and tread carefully, link to [CVE|https://nvd.nist.gov/vuln/detail/CVE-2018-10237]

this is a DoS when deserializing java objects., I'll search for other guava updates and link them here.
Uploaded my initial patch for this. It compiles, and I've ran tests for a few modules, but I'm not really sure if the way I modified {{ensure-jars-have-correct-contents.sh}} is the right one.

This was the error message I fixed with adding {{allowed_expr+="|^afu/"}}.
{noformat}
[INFO] Artifact looks correct: 'hadoop-client-api-3.3.0-SNAPSHOT.jar'
[ERROR] Found artifact with unexpected contents: 'hadoop-client-modules/hadoop-client-runtime/target/hadoop-client-runtime-3.3.0-SNAPSHOT.jar'
    Please check the following and either correct the build or update
    the allowed list with reasoning.

    afu/
    afu/org/
    afu/org/checkerframework/
    afu/org/checkerframework/checker/formatter/
    afu/org/checkerframework/checker/formatter/FormatUtil$Conversion.class
    afu/org/checkerframework/checker/formatter/FormatUtil$ExcessiveOrMissingFormatArgumentException.class
    afu/org/checkerframework/checker/formatter/FormatUtil$IllegalFormatConversionCategoryException.class
    afu/org/checkerframework/checker/formatter/FormatUtil.class
    afu/org/checkerframework/checker/nullness/
    afu/org/checkerframework/checker/nullness/NullnessUtils.class
    afu/org/checkerframework/checker/regex/
    afu/org/checkerframework/checker/regex/RegexUtil$CheckedPatternSyntaxException.class
    afu/org/checkerframework/checker/regex/RegexUtil.class
    afu/org/checkerframework/checker/units/
    afu/org/checkerframework/checker/units/UnitsTools.class
    afu/plume/RegexUtil$CheckedPatternSyntaxException.class
    afu/plume/RegexUtil.class
{noformat}, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 13s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m  6s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 21m 45s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 16m 11s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  3m 22s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  3m  1s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 56s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hadoop-project hadoop-client-modules/hadoop-client-check-invariants hadoop-client-modules/hadoop-client-check-test-invariants {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  5s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 40s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 27s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 59s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 35s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red} 14m 35s{color} | {color:red} root generated 19 new + 1481 unchanged - 7 fixed = 1500 total (was 1488) {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  3m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 59s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} shellcheck {color} | {color:green}  0m  1s{color} | {color:green} There were no new shellcheck issues. {color} |
| {color:green}+1{color} | {color:green} shelldocs {color} | {color:green}  0m 33s{color} | {color:green} There were no new shelldocs issues. {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 27s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m  0s{color} | {color:blue} Skipped patched modules with no Java source: hadoop-project hadoop-client-modules/hadoop-client-check-invariants hadoop-client-modules/hadoop-client-check-test-invariants {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 43s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 25s{color} | {color:green} hadoop-project in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 17m 24s{color} | {color:green} hadoop-hdfs-rbf in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 15m 31s{color} | {color:green} hadoop-yarn-services-core in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 28s{color} | {color:green} hadoop-client-check-invariants in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  0m 28s{color} | {color:green} hadoop-client-check-test-invariants in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 45s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}143m 56s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:8f97d6f |
| JIRA Issue | HADOOP-15960 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12950024/HADOOP-15960.000.WIP.patch |
| Optional Tests |  dupname  asflicense  mvnsite  unit  shadedclient  shellcheck  shelldocs  compile  javac  javadoc  mvninstall  findbugs  checkstyle  xml  |
| uname | Linux 0550821e6997 4.4.0-134-generic #160~14.04.1-Ubuntu SMP Fri Aug 17 11:07:07 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / c1d24f8 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_181 |
| shellcheck | v0.4.6 |
| findbugs | v3.1.0-RC1 |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/15579/artifact/out/diff-compile-javac-root.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/15579/testReport/ |
| Max. process+thread count | 984 (vs. ulimit of 10000) |
| modules | C: hadoop-project hadoop-hdfs-project/hadoop-hdfs-rbf hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core hadoop-client-modules/hadoop-client-check-invariants hadoop-client-modules/hadoop-client-check-test-invariants U: . |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/15579/console |
| Powered by | Apache Yetus 0.8.0   http://yetus.apache.org |


This message was automatically generated.

, Not quite clear where the "afu" class path comes from. I suppose that has to do with shading which prepend the prefix, but couldn't find any mentioning of "afu" in Hadoop codebase.

As far as I can tell, HBase compiles against this Hadoop patch (albeit the new Gauva version adds a few dependencies and I had to explicitly add additional license text in HBase)

I am running HBase small tests and so far so good. 

The tricker question is the transitive guava version used in the YARN ATS module.  That is
{code:title=hadoop-project/pom.xml}
      <properties>
        <hbase.version>${hbase.two.version}</hbase.version>
        <hbase-compatible-hadoop.version>3.0.0</hbase-compatible-hadoop.version>
        <hbase-compatible-guava.version>11.0.2</hbase-compatible-guava.version>
        <hbase-server-artifactid>hadoop-yarn-server-timelineservice-hbase-server-2</hbase-server-artifactid>
      </properties>
{code}
I suppose this guava dependency should get updated too., updating the hbase one will break hbase. Dont go near it without involving the YARN ATS people -it probably needs an hbase update to match, w/r/t afu; checkerframework should be compile time only and so isn't needed in any shaded JAR]