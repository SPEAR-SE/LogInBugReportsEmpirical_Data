[Patch attached.

The root cause of this problem is that the fix for HADOOP-8167 put deprecated keys (even if you're adding a new key) into the variable "properties", this will cause deprecated warning when handleDeprecation() is called. Note that handleDeprecation() has to be called otherwise it won't catch deprecated keys in configuration files.

This fix basically reversed HADOOP-8167 and fixed HADOOP-8167 in a different way: modified iterator() implementation to include all deprecated keys. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12620063/HADOOP-10178.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 1545 javac compiler warnings (more than the trunk's current 1544 warnings).

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.conf.TestDeprecatedKeys

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3377//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/3377//artifact/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3377//console

This message is automatically generated., Add getAlternativeNames() method to get the non-deprecated alias of a given non-deprecated key. When set a non-deprecated key, we need to check if it has any alias (that deprecate the same key) non-deprecated keys and set those properties as well., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12620394/HADOOP-10178-v2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 1545 javac compiler warnings (more than the trunk's current 1544 warnings).

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3378//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/3378//artifact/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3378//console

This message is automatically generated., New patch attached. Fix warning., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12620582/HADOOP-10178-v3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3383//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3383//console

This message is automatically generated., +1

The change looks good to me!, Hi, Shanyu.  The patch looks good.  Just one minor thing: instead of catching things like {{IOException}} inside the test and proceeding anyway, let's just throw them out in the test method signature.  If these happen during test runs, then JUnit will print the full stack trace.  That's potentially valuable for a developer to identify problems like trying to run tests on a read-only volume, out of space, permission problems, etc.

I'm +1 after that's addressed.

[~tucu00], you wrote the original HADOOP-8167 patch.  Are you interested in looking at this?  I'll wait until Wednesday before committing in case you want to comment., Thanks for pinging, i'll look at it this afternoon or tomorrow morning., New patch attached following [~cnauroth]'s advice.

Thanks for reviewing!, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12621918/HADOOP-10178-v4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 4 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3412//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/3412//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3412//console

This message is automatically generated., Not sure why v4 introduces findbugs warnings and those warnings seems not relevant to what I modified., +1. I've looked at the patch and played a bit with it (modifying the testcase) and it seems to work as advertised. 

Only NIT (not introduced by the patch but we can fix in the context of the patch) is the <source> message:

{code}
<property><name>BB</name><value>xx</value><source>because CC is deprecated</source></property>
{code}

Can we change it to something like *Using 'BB' because 'CC' is deprecated* ?

, Thanks [~tucu00] for reviewing! As for the renaming of the source message, I think you don't need to call out "using BB" because the property name is BB, so that "using BB" is implied. This means the "source" that set the BB property in configuration is "because CC is deprecated"., New patch attached that fix the problem that unset should also unset alternative non-deprecated keys, just like set will set alternative non-deprecated keys. Unit tests added., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12622309/HADOOP-10178-v5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.conf.TestReconfiguration
                  org.apache.hadoop.security.ssl.TestSSLFactory

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3418//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3418//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12622309/HADOOP-10178-v5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.security.ssl.TestSSLFactory
                  org.apache.hadoop.conf.TestReconfiguration

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3419//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3419//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12622335/HADOOP-10178-v6.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3420//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3420//console

This message is automatically generated., There is still a problem with the current implementation. The iterator() returns all deprecated keys even though they are not set explicitly. This caused pig to print false warnings about deprecated keys. 

I think we should add a key to properties no matter it is deprecated or not. And iterator() shall only return what has been set to properties. This will solve the original problem presented in HADOOP-8167 (): did a set(dK, V) and expect, when iterating over the configuration to find (dK, V), without introducing false deprecation warnings.

To summarize, these are the expected behaviors with this change, suppose dK is deprecated by nK:
1) set(dK): will set both dK and nK to properties;
2) set(nK): will set nK, and if dK is present in properties, update it;
3) get(dK): because dK is deprecated, will call get(nK) instead;
4) get(nK): get nK from properties
5) unset(dK): unset both dK and nK
6) unset(nK): unset nK, and if dK was previously set, remove it from properties, New patch attached. 

I modified getAlternativeNames() to include the deprecated key if it is set explicit to properties before. With this set(nK) will update dK if dK is previously set, and dK will be removed upon unset(nK).

Also for set(k) we'll set k to properties no mater "k" is deprecated or not., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12622344/HADOOP-10178-v7.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3423//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3423//console

This message is automatically generated., Good catches Shanyu, and thank you for posting the summary of the behavior.  I'm +1 for the v7 patch.

[~tucu00], I'm planning to commit later today unless you object.  Shanyu's comment about the source message makes sense to me, but maybe we can change it later in a separate patch if you have something else in mind.  Thanks for helping to review this patch., Me good, thx, SUCCESS: Integrated in Hadoop-trunk-Commit #4985 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4985/])
HADOOP-10178. Configuration deprecation always emit "deprecated" warnings when a new key is used. Contributed by Shanyu Zhao. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1557236)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/conf/TestConfigurationDeprecation.java
, I committed this to trunk, branch-2 and branch-2.3.  Shanyu, thank you for the patch.  Alejandro, thank you for help with code review., FAILURE: Integrated in Hadoop-Yarn-trunk #449 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/449/])
HADOOP-10178. Configuration deprecation always emit "deprecated" warnings when a new key is used. Contributed by Shanyu Zhao. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1557236)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/conf/TestConfigurationDeprecation.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1666 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1666/])
HADOOP-10178. Configuration deprecation always emit "deprecated" warnings when a new key is used. Contributed by Shanyu Zhao. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1557236)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/conf/TestConfigurationDeprecation.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1641 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1641/])
HADOOP-10178. Configuration deprecation always emit "deprecated" warnings when a new key is used. Contributed by Shanyu Zhao. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1557236)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/conf/TestConfigurationDeprecation.java
, I worked with this patch for a while trying to get it to apply to the straight pull from Apache.
Unfortunately out of the 6 hunks only 1 was successful.
I went and looked at the HDP sources and did a 'diff -ru' and my sources and noticed some issues.
What I ended up doing was pulling and using their Configuration.java code and then building.
It eliminated the depreciation messages and the compile time errors for missing 'deprecation' variable.

Now this could be "driver error" on my part. So this comment is just a heads up that this patch may not be as plug and play in the wild as by parties that are constantly contributing and commiting.
Cheers - Bunnyworks, I think this broke deprecated properties for streaming jobs.  See MAPREDUCE-6022., I believe the streaming issue is caused by the assumption that if one doesn't set a property by a deprecated name then nothing will break if the deprecated names don't appear when iterating.  Streaming breaks that assumption because non-deprecated keys are used to setup the conf, but the conf is then iterated to generate the environment variables for the streaming job.  The streaming job is trying to access the environment variables via the deprecated names, so it doesn't have the luxury of the deprecated fixup being done by Configuration.get(dK) to map to the new name.]