[Ideally there should be some kind of a version attached to JobHistory. A parser can parse a history file only if their version matches. Thoughts?, +1 Adding a format version to the file is definitely a good idea., Attaching a patch that 
- adds version to job history which is logged to the history file as the 1st line 
- switches to old/default regex for line-end matching if the version info is missing else uses the new regex
- adds a test case that tests the job history parser with old and new file formats

Manually tested the patch with old and new history files and works fine. More testing in progress. Will try and make it more cleaner and optimized., Will resubmit the patch that applies to trunk., +1 to the concept.

As an aside: please ensure this patch works post HADOOP-2165 too. Thanks!, Attaching a patch that takes care of the escaping/un-escaping  business., Did this patch pass 'ant test-patch test' ?, I ran 'ant test' and TestJobHistoryParsing failed with:

{noformat}
estsuite: org.apache.hadoop.mapred.TestJobHistoryParsing
Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 0.307 sec

Testcase: testHistoryParsing took 0.305 sec
  FAILED
expected:<Value has equal=to, "quotes" and spaces in it> but was:<>
junit.framework.ComparisonFailure: expected:<Value has equal=to, "quotes" and spaces in it> but was:<>
  at org.apache.hadoop.mapred.TestJobHistoryParsing.testHistoryParsing(TestJobHistoryParsing.java:93)
{noformat}, Forgot to add that this testcase does not fail *without* this patch..., Thanks Arun for the ant-test. The test failed because of missing version line., Result of test-patch on branch-19
{noformat}
     [exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 6 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
{noformat}
Running ant-test., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12390563/HADOOP-4190-v5.patch
  against trunk revision 698187.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3354/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3354/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3354/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3354/console

This message is automatically generated., Had an off-line discussion with Devaraj. Devaraj suggested that the line delimiter would not change across versions. Hence later versions should also use '.' as the delim. Attaching a patch that incorporates these comments. 
_ant test-patch_ fails on findbugs. Didnt see any thing related to my patch. _ant test_ passed on my box., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12390907/HADOOP-4190-v6.patch
  against trunk revision 698721.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs warnings.

    +1 Eclipse classpath. The patch retains Eclipse classpath integrity.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3370/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3370/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3370/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3370/console

This message is automatically generated., The findbugs warning is because of the {{IOException}} which the parser ignores while it tries to close the stream. Not something that I have introduced. Here is a section from the patch that explains the warning
{code}
-      }
+      } while ((line = reader.readLine())!= null);
     } finally {
       try { reader.close(); } catch (IOException ex) {}
{code}, one minor nit - I think the newly added enums should be added at the end., Attaching an updated patch the incorporates Amareshwari's comment., +1 Latest patch looks good, I just committed this. Thanks, Amar!, Integrated in Hadoop-trunk #618 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/618/]), Integrated in Hadoop-trunk #654 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/654/])
    . Adding testcase that I forgot to add earlier.
]