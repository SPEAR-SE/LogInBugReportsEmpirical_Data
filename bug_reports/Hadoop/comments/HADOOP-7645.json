[The valid options to me seem to be:

# Disable these tests somehow such that they're only run when some specific flag is passed to ant. Is there any precedent for doing so with specific test cases?
# Remove these tests from branch-0.20-security. Assuming that anyone who works on the classes exercised by these tests will be doing the work on trunk and back-porting to branch-0.20-security, the classes shouldn't diverge much if any.

Thoughts?, I noticed the failures too. I am fine with the option 1. LTC tests are like that.
In any case I think we need it fixed for 205 if it's not overly complicated., I added 0.205 to fix version., +1 for option #1. It will be consistent with current maven behavior on trunk and 0.23., A patch that disables these tests., Jitendra, is there no way to do something with ant akin to what is done on trunk with maven? That is, don't run some specific tests unless, e.g. "-DkerbTests" is passed when invoking ant?, The approach in the patch is not exactly the solution people have agreed on. It still can be automated by specifying the test case with -Dtestcase, so there might be no problem in terms of running these tests. But I think the @Ignore annotation implies "obsolete" or "broken" and marking these tests with it can be misleading., Some mapreduce tests already use "@Ignore" in 20 branch. For example, TestMiniMRMapRedDebugScript. I just followed this because it was a very simple change.  , At the minimum, there should be some comments along with the new @Ignore annotations, explaining why they are ignored and what is needed to run them., bq. But I think the @Ignore annotation implies "obsolete" or "broken" and marking these tests with it can be misleading.
@Ignore is for precisely this reason http://api.dpml.net/junit/4.2/org/junit/Ignore.html

"Sometimes you want to temporarily disable a test. Methods annotated with Test that are also annotated with @Ignore will not be executed as tests. Native JUnit 4 test runners should report the number of ignored tests along with the number of tests that ran and the number of tests that failed.", So I guess when we mark a broken test with @Ignore (not in this case. The test is not broken.), we intend to fix them later. Otherwise we should simply delete it. Correct?, We should add comment about why the test is disabled. I think adding ignore for 205 branch is a good enough solution. This is already solved nicely on trunk. If any one strongly prefers -DkerbTests, they can fix it in 0.20-security to be picked up later., bq. I think adding ignore for 205 branch is a good enough solution. This is already solved nicely on trunk.

If indeed one can still run the test using "-Dtestcase=..." as Kihwal points out, then I'm fine just adding the {{@Ignore}} annotations with a comment saying why., Added comments., +1 for the patch., Before commit, could someone please test to make sure that "{{ant -Dtestcase=TestKerberosAuthenticationHandler test-core}}" does indeed work even with the {{@Ignore}} annotation in place? The only thing I really want to avoid is having to modify the test code in order to run it., >Before commit, could someone please test to make sure that "ant -Dtestcase=TestKerberosAuthenticationHandler 
> test-core" does indeed work even with the @Ignore annotation in place? 

With ant version 1.8.2 the above command runs the test, but with ant 1.7.1 it doesn't. I suspect ant-1.8.2 is just ignoring @Ignore.

Aaron,
  Given the above observation, do you think @Ignore is not acceptable for 205? Alternative approach is to commit this patch as there are many tests in mapreduce that use the same approach, and come with a better fix in 206?, bq. Alternative approach is to commit this patch as there are many tests in mapreduce that use the same approach, and come with a better fix in 206?

That's fine by me. Please file a JIRA which will hopefully get fixed in 206., Created jira : HADOOP-7675
Committed this to 205, 206., Thanks a lot, Jitendra. Marking this issue as resolved., Closed upon release of 0.20.205.0, attached patch for 0.22, I just committed this to branch 0.22.1. Thank you Benoy., Integrated in Hadoop-Common-22-branch #106 (See [https://builds.apache.org/job/Hadoop-Common-22-branch/106/])
    HADOOP-7645. Disable TestKerberosAuthenticator and TestKerberosAuthenticationHandler. Contributed by Jitendra Pandey and Benoy Antony. (Revision 1346226)

     Result = SUCCESS
shv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1346226
Files : 
* /hadoop/common/branches/branch-0.22/common/CHANGES.txt
* /hadoop/common/branches/branch-0.22/common/src/test/core/org/apache/hadoop/security/authentication/client/TestKerberosAuthenticator.java
* /hadoop/common/branches/branch-0.22/common/src/test/core/org/apache/hadoop/security/authentication/server/TestKerberosAuthenticationHandler.java
, Fixed in 20.205, which was a lineal predecessor of 1.0.  No need to mark it fixed in 1.1.0.]