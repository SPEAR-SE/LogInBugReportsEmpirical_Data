[HADOOP_HOME was deprecrated in 0.21 and replaced with HADOOP_PREFIX., Thanks [~aw] for your comments. Yes, agree with you. I mean we need add options such as -Dhadoop.home.dir=$HADOOP_PREFIX" to KMS start up options., [~dian.fu], so technically KMS can be deployed totally independent of Hadoop and thus need not be aware of the HADOOP_PREFIX

Uploading a patch that allows one to configure a {{KMS_NATIVE_LIB_PATH}} environment variable. This has to be defined in {{kms-env.sh}}. The default value is {{$\{HOME\}/lib/native}}. This has to be set to the full path of the directory containing the {{libhadoop.so}} native lib.

Let me know if this patch works for you.., Hi [~asuresh], a small issue with this patch is that {{+if [ ! "\{KMS_NATIVE_LIB_PATH\}" = "" ]; then}} should be {{+if [ ! "$\{KMS_NATIVE_LIB_PATH\}" = "" ]; then}}. As the user need to update {{KMS_NATIVE_LIB_PATH}} to the directory containing {{libhadoop.so}}, this should be documented. I have tested this patch and it can work if {{KMS_NATIVE_LIB_PATH }} pointed to the right directory., Thanks for the review [~dian.fu]..

Updated the patch with your feedback and added docs, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12683786/HADOOP-11329.2.patch
  against trunk revision 4a31611.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5122//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12683789/HADOOP-11329.3.patch
  against trunk revision 4a31611.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-kms.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5123//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5123//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12683976/HADOOP-11329.4.patch
  against trunk revision c1f2bb2.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-kms.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5126//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5126//console

This message is automatically generated., bq. KMS can be deployed totally independent of Hadoop 

Given that the stack trace is passing through Hadoop common, clearly KMS has requirements on Hadoop being installed on the same node.  So this statement comes across as misleading.  That said, I don't think adding another configuration variable in lieu of just using the standard ones that Hadoop common expects is really the proper fix here.  (In particular, $HADOOP_PREFIX/$HADOOP_COMMON_LIB_NATIVE_DIR.)

It seems as though the simplest fix until the KMS shell code can be brought in line with the rest of the shell code (HADOOP-10788), would be to just populate hadoop.home.dir based upon a calculation of the $KMS_HOME  if $HADOOP_PREFIX/$HADOOP_COMMON_LIB_NATIVE_DIR is empty., thanks for the review [~aw],

bq. Given that the stack trace is passing through Hadoop common, clearly KMS has requirements on Hadoop being installed on the same node..
I don't think this has to be true right ?.. It's just that KMS has a dependency on the hadoop libraries (in this case hadoop-common), not necessarily the hadoop installation per-se. KMS can be independently built, packaged and deployed as long as all the jar and libraries are mvn downloadable . Unfortunately, I don't think currently, the hadoop-common native libraries are exposed as maven artifacts.. so the user should be free to download and place the native libraries anywhere and point {{java.library.path}} to that directory.
, bq.  It's just that KMS has a dependency on the hadoop libraries (in this case hadoop-common), not necessarily the hadoop installation per-se.

But this is clearly false, given the failure.  Certain parts of hadoop-common have expectations about the operating environment.  KMS is not fulfilling those expectations and therefore causing this stack trace.

bq. KMS can be independently built, packaged and deployed as long as all the jar and libraries are mvn downloadable .

KMS is part of the Hadoop source and utilizes Hadoop common code.  There isn't much reason for it to play these games.  If it wants to be a separate project, then it should be a separate project.  If it wants to be part of Hadoop, then it should integrate properly.  This means trying to avoid being an operational burden by requiring extra downloads and setting extra environment variables that Hadoop already handles.

bq. Unfortunately, I don't think currently, the hadoop-common native libraries are exposed as maven artifacts..

Given that they are extremely architecture and platform dependent, this isn't surprising.  This is compiled code that now, unfortunately, has a lot of chipset dependent code.
, Agreed.. based on [~aw]'s suggestion,
im updating the patch to get the {{kms.sh}} startup script to set {{KMS_NATIVE_LIB_PATH}} to the {{$\{HADOOP_PREFIX}/lib/native}} by default.. which I calculate relative to {{HADOOP_LIBEXEC_DIR}} dir.

(The user still has the option to over-ride the {{KMS_NATIVE_LIB_PATH}} in {{kms-env.sh}} with something deployment-specific if needed), {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12684329/HADOOP-11329.5.patch
  against trunk revision 1556f86.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-kms.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5132//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5132//console

This message is automatically generated., Hey Arun, thanks for working on this, few comments/questions:

* I see some changes related to the keystore password, are they meant to be included here?
* We already have an env variable, HADOOP_COMMON_LIB_NATIVE_DIR, which does the same thing as the new KMS-specific one. I think Allen would say to just use the existing one. We need to do a HADOOP_PREFIX calculation then too, which is by default {{HADOOP_LIBEXEC_DIR/..}}. It seems like we could unify this init work also by sourcing hadoop-functions.sh / hadoop-config.sh, but today is probably not that day.

Otherwise looks good, [~aw] any other thoughts?, [~andrew.wang], thanks for the review

bq. I see some changes related to the keystore password, are they meant to be included here?
Yeah.. spotted a case while testing where in the non-ssl case, {{KMS_SSL_KEYSTORE_PASS}} might get set.. I can raise another JIRA for this..

bq. We already have an env variable, HADOOP_COMMON_LIB_NATIVE_DIR, ...
Yup.. was debating whether to source {{hadoop-functions.sh}} but decided against it, since this looked simpler and we need it just for this one instance., Let's split the KEYSTORE_PASS change off into a new JIRA just to keep them logically separate. I promise to review quickly etc, and since it's shell code we don't really need to wait for test-patch., Updating patch to remove the KEYSTORE_PASS changes.. Filed HADOOP-11344 to fix the keystore password issue, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12684570/HADOOP-11329.6.patch
  against trunk revision 31b4d2d.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-kms.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5142//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5142//console

This message is automatically generated., a) HADOOP-10788 has a sample patch sitting there that also fixes this issue and uses hadoop-functions.sh

b) We should take into consideration any extra JAVA_LIBRARY_PATH paths, esp given that Tomcat wants apr libraries in the path for speed reasons., Thanks Allen, I missed HADOOP-10788. This JIRA can target branch-2 at least, I'll do my best to review the trunk one.

Arun, could you updated to incorporate JAVA_LIBRARY_PATH? Sounds like we're good after that., Added support for user to provide extra java library paths either in *kms-env.sh* or as an environment variable. These will be appended to -Djava.library.path in addition to the HADOOP native lib directory, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12685355/HADOOP-11329.7.patch
  against trunk revision 0653918.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-kms.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5163//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5163//console

This message is automatically generated., Rather than use KMS_NATIVE_LIB_PATH, why not just use JAVA_LIBRARY_PATH?  , This patch is targeted for branch-2, which does not use hadoop-functions.sh (which is where JAVA_LIBRARY_PATH is defined). For the patch targeted at trunk, we can reuse JAVA_LIBRARY_PATH. 
Also user has the option of setting this in kms-env.sh and all variables there start with KMS_ so wanted to keep it consistent.., bq. Also user has the option of setting this in kms-env.sh and all variables there start with KMS_ so wanted to keep it consistent..

I'm essentially saying: forget the consistency in kms-env.sh in favor of consistency with the rest of Hadoop.  The rest of the software uses JAVA_LIBRARY_PATH for this, even in branch-2 (see hadoop-config.sh).  Adding another var here is adding unnecessary complexity. , changed KMS_NATIVE_LIB_PATH to JAVA_LIBRARY_PATH, changed empty string check.., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12685417/HADOOP-11329.8.patch
  against trunk revision 3c72f54.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-kms.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5168//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5168//console

This message is automatically generated., Looks good to me +1, I think it addresses [~aw]'s comment. I'll wait a bit in case Allen wants to give it a last look too (or commit it even :)., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12685424/HADOOP-11329.9.patch
  against trunk revision 4b13082.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-kms.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5169//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5169//console

This message is automatically generated., Pushed to trunk and branch-2, thanks for the contribution Arun, and Allen for reviews, FAILURE: Integrated in Hadoop-trunk-Commit #6672 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6672/])
HADOOP-11329. Add JAVA_LIBRARY_PATH to KMS startup options. Contributed by Arun Suresh. (wang: rev ddffcd8fac8af0ff78e63cca583af5c77a062891)
* hadoop-common-project/hadoop-kms/src/site/apt/index.apt.vm
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-kms/src/main/sbin/kms.sh
* hadoop-common-project/hadoop-kms/src/main/conf/kms-env.sh
, FAILURE: Integrated in Hadoop-Yarn-trunk #770 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/770/])
HADOOP-11329. Add JAVA_LIBRARY_PATH to KMS startup options. Contributed by Arun Suresh. (wang: rev ddffcd8fac8af0ff78e63cca583af5c77a062891)
* hadoop-common-project/hadoop-kms/src/site/apt/index.apt.vm
* hadoop-common-project/hadoop-kms/src/main/conf/kms-env.sh
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-kms/src/main/sbin/kms.sh
, SUCCESS: Integrated in Hadoop-Yarn-trunk-Java8 #34 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/34/])
HADOOP-11329. Add JAVA_LIBRARY_PATH to KMS startup options. Contributed by Arun Suresh. (wang: rev ddffcd8fac8af0ff78e63cca583af5c77a062891)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-kms/src/main/sbin/kms.sh
* hadoop-common-project/hadoop-kms/src/main/conf/kms-env.sh
* hadoop-common-project/hadoop-kms/src/site/apt/index.apt.vm
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #33 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/33/])
HADOOP-11329. Add JAVA_LIBRARY_PATH to KMS startup options. Contributed by Arun Suresh. (wang: rev ddffcd8fac8af0ff78e63cca583af5c77a062891)
* hadoop-common-project/hadoop-kms/src/main/conf/kms-env.sh
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-kms/src/site/apt/index.apt.vm
* hadoop-common-project/hadoop-kms/src/main/sbin/kms.sh
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1966 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1966/])
HADOOP-11329. Add JAVA_LIBRARY_PATH to KMS startup options. Contributed by Arun Suresh. (wang: rev ddffcd8fac8af0ff78e63cca583af5c77a062891)
* hadoop-common-project/hadoop-kms/src/main/sbin/kms.sh
* hadoop-common-project/hadoop-kms/src/main/conf/kms-env.sh
* hadoop-common-project/hadoop-kms/src/site/apt/index.apt.vm
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #37 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/37/])
HADOOP-11329. Add JAVA_LIBRARY_PATH to KMS startup options. Contributed by Arun Suresh. (wang: rev ddffcd8fac8af0ff78e63cca583af5c77a062891)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-kms/src/main/sbin/kms.sh
* hadoop-common-project/hadoop-kms/src/site/apt/index.apt.vm
* hadoop-common-project/hadoop-kms/src/main/conf/kms-env.sh
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1987 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1987/])
HADOOP-11329. Add JAVA_LIBRARY_PATH to KMS startup options. Contributed by Arun Suresh. (wang: rev ddffcd8fac8af0ff78e63cca583af5c77a062891)
* hadoop-common-project/hadoop-kms/src/site/apt/index.apt.vm
* hadoop-common-project/hadoop-kms/src/main/sbin/kms.sh
* hadoop-common-project/hadoop-kms/src/main/conf/kms-env.sh
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1967 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1967/])
HADOOP-11329. Add JAVA_LIBRARY_PATH to KMS startup options. Contributed by Arun Suresh. (wang: rev ddffcd8fac8af0ff78e63cca583af5c77a062891)
* hadoop-common-project/hadoop-kms/src/site/apt/index.apt.vm
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-kms/src/main/sbin/kms.sh
* hadoop-common-project/hadoop-kms/src/main/conf/kms-env.sh
]