[A connect fails due to some kinda n/w hiccup and throws an UnresolvedAddressException as follows:

12-07-30 16:31:07,223 WARN org.apache.hadoop.ipc.Client: Address change detected. Old: <hostname>/<ipaddress>:<port> New: <hostname>
2012-07-30 16:31:08,225 INFO org.apache.hadoop.ipc.Client: Retrying connect to server: <hostname>:<port>. Already tried 0 time(s).
2012-07-30 16:31:08,226 INFO org.apache.hadoop.mapred.TaskTracker: Received KillTaskAction for task: attempt_201205090815_3706185_m_000000_1
2012-07-30 16:31:08,226 INFO org.apache.hadoop.mapred.TaskTracker: About to purge task: attempt_201205090815_3706185_m_000000_1
2012-07-30 16:31:08,226 WARN org.apache.hadoop.mapred.TaskTracker: Error initializing attempt_201205090815_3706185_m_000000_1:
java.nio.channels.UnresolvedAddressException
        at sun.nio.ch.Net.checkAddress(Net.java:30)
        at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:487)
        at org.apache.hadoop.net.SocketIOWithTimeout.connect(SocketIOWithTimeout.java:192)
        at org.apache.hadoop.net.NetUtils.connect(NetUtils.java:656)
        at org.apache.hadoop.ipc.Client$Connection.setupConnection(Client.java:434)
        at org.apache.hadoop.ipc.Client$Connection.setupIOstreams(Client.java:560)
        at org.apache.hadoop.ipc.Client$Connection.access$2000(Client.java:184)
        at org.apache.hadoop.ipc.Client.getConnection(Client.java:1202)
        at org.apache.hadoop.ipc.Client.call(Client.java:1046)
        at org.apache.hadoop.ipc.RPC$Invoker.invoke(RPC.java:225)
        at $Proxy8.getFileInfo(Unknown Source)
        at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:82)
        at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:59)
        at $Proxy8.getFileInfo(Unknown Source)
        at org.apache.hadoop.hdfs.DFSClient.getFileInfo(DFSClient.java:757)
        at org.apache.hadoop.hdfs.DistributedFileSystem.getFileStatus(DistributedFileSystem.java:497)
        at org.apache.hadoop.mapred.TaskTracker.localizeJobTokenFile(TaskTracker.java:4229)
        at org.apache.hadoop.mapred.TaskTracker.initializeJob(TaskTracker.java:1150)
        at org.apache.hadoop.mapred.TaskTracker.localizeJob(TaskTracker.java:1091)
        at org.apache.hadoop.mapred.TaskTracker$5.run(TaskTracker.java:2360)
        at java.lang.Thread.run(Thread.java:619)


Clients using the same object will now get an NPE since 'out' is not initialized.

va.lang.NullPointerException
        at org.apache.hadoop.ipc.Client$Connection.sendParam(Client.java:766)
        at org.apache.hadoop.ipc.Client.call(Client.java:1047)
        at org.apache.hadoop.ipc.RPC$Invoker.invoke(RPC.java:225)
        at $Proxy8.getFileInfo(Unknown Source)
        at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:82)
        at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:59)
        at $Proxy8.getFileInfo(Unknown Source)
        at org.apache.hadoop.hdfs.DFSClient.getFileInfo(DFSClient.java:757)
        at org.apache.hadoop.hdfs.DistributedFileSystem.getFileStatus(DistributedFileSystem.java:497)
        at org.apache.hadoop.mapred.TaskTracker.localizeJobTokenFile(TaskTracker.java:4229)
        at org.apache.hadoop.mapred.TaskTracker.initializeJob(TaskTracker.java:1150)
        at org.apache.hadoop.mapred.TaskTracker.localizeJob(TaskTracker.java:1091)
        at org.apache.hadoop.mapred.TaskTracker$5.run(TaskTracker.java:2360)

This seems to be an issue in trunk as well, but I need to look closer to confirm. , This problems seems to be fixed in 1.0 and forward - hence removing it from the Affects Version.

The fix was to catch (throwable) in setupIOstreams() instead of just IOException.

I might close this JIRA in a little bit since its already fixed in later relevant releases.]