[-00
  - just blindly copy trunk's .gitignore. looks good enough., Looks like [the build has failed|https://builds.apache.org/view/PreCommit%20Builds/job/PreCommit-HADOOP-Build/12858/] with your patch., Thanks for looking into this. Could you please explain how/why {{.gitignore}} effects Yetus build?

Also just a blind copy of trunk {{.gitignore}} may not be an exact fit, as branch-2.7 does not even have {{hadoop-yarn-ui}}: see [hadoop-yarn-project|https://git-wip-us.apache.org/repos/asf?p=hadoop.git;a=tree;f=hadoop-yarn-project/hadoop-yarn;h=804b073ea71942b47a7a4378939178fec7fe0e02;hb=refs/heads/branch-2.7]., the patch will fail until the updated .gitignore is in place because of how Hadoop's use of precommit works.

Essentially, the {{patchprocess}} directory is where Yetus Test Patch keeps its working files, like the output logs it writes to. On the Hadoop project, we keep that directory inside of the working directory of the source checkout (due to legacy reasons that [~aw] has mentioned a few times). As a start-up step, Yetus cleans up the local git working directory to ensure that it is testing the patch against the then-current version of whatever relevant branch the patch is for.

On most hadoop branches, .gitignore ensure that git doesn't mess with the {{patchprocess}} directory when this cleanup is happening. On branch-2.7, the ignore directive is missing and so the "clean up git" step wipes out the in-progress log files that Yetus expects to keep writing to. This leads to the failures you've seen.

I'm happy to update my patch for whatever review feedback you have, but a blind copy seems like the fastest way to builds working again. {{.gitignore}}ing files that don't exist and won't be created by the build process on a particular branch does no harm, after all., +1 committing to branch., Thank you for clarification [~busbey]., Will have to revert this, because it also removed {{contract-test-options.xml}} from .gitignore, which could be considered as incompatible change for 2.7.4., Here is a modified patch., So v1 would be post rollback? If so, +1 (non-binding) looks fine.

Why not just post an addendum that puts contract-test-options.xml back? (Does the build system create that file? I didn't see it in the repo), Also updated CHANGES.txt.
I just committed this to branch 2.7. Thank you [~busbey]., There were some discussion about {{contract-test-options.xml}} in e.g. HADOOP-13929 and HADOOP-14264. Cannot afford incompatibilities in a dot release.

BTW, the build is still failing. It went past "Confirming git environment", but broke further down while "Building base image: yetus/hadoop". Any thoughts? 
[Here is the build link|https://builds.apache.org/view/PreCommit%20Builds/job/PreCommit-HDFS-Build/20423/console], The build output says it failed while building the docker image:

{code}
Step 10 : RUN mkdir -p /opt/findbugs &&     curl -L https://sourceforge.net/projects/findbugs/files/findbugs/3.0.1/findbugs-noUpdateChecks-3.0.1.tar.gz/download          -o /opt/findbugs.tar.gz &&     tar xzf /opt/findbugs.tar.gz --strip-components 1 -C /opt/findbugs
 ---> Running in c1565d29ddf9
[91m  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0[0m[91m
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0[0m[91m
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
[0m[91mcurl: (35) Unknown SSL protocol error in connection to sourceforge.net:443 
[0mThe command '/bin/sh -c mkdir -p /opt/findbugs &&     curl -L https://sourceforge.net/projects/findbugs/files/findbugs/3.0.1/findbugs-noUpdateChecks-3.0.1.tar.gz/download          -o /opt/findbugs.tar.gz &&     tar xzf /opt/findbugs.tar.gz --strip-components 1 -C /opt/findbugs' returned a non-zero code: 35

Total Elapsed time:   0m  0s

ERROR: Docker failed to build image.
{code}

The relevant bit:

bq. Unknown SSL protocol error in connection to sourceforge.net

Probably a transient issue., I tried a few. Here is the most recent failure: [hadoop build #12867|https://builds.apache.org/job/PreCommit-HADOOP-Build/12867/console]. While other builds started around same time are doing fine beyond this point, [example|https://builds.apache.org/view/PreCommit%20Builds/job/PreCommit-HDFS-Build/20424/console].
I created HADOOP-14689 for further testing build failure., It's an apples and oranges comparison, really. Docker images are (effectively) built per-git hash.  They are also cached with a one week expiry. trunk's is very well cached because it gets used frequently.  You can tell because of lots of " ---> Using cache" lines in the 20424 build.  The 12867 build uses a different hash (since 2.7 and trunk have different requirements) and has nearly nothing cached.  Thus it is building completely from scratch. The location of the Dockerfile is in dev-support/docker in the hadoop source tree if you'd like to take a look at them., The question is really how do we make the branch build work. Can do fruit comparison with you later., branch-2.7's ability to use the current precommit setup is sort of irrelevant as far as it's ability to build and get released.  Hadoop 2.7.0 was released on the same day that HADOOP-11746 was made official. That's important because it also means that the test-patch used during 2.7.0's development wasn't the rewrite and didn't support branch switching, much less Docker., ??branch-2.7's ability to use the current precommit setup is sort of irrelevant as far as it's ability to build and get released.??

Not exactly sure what's irrelevant here.
Hope you are not saying you revoked Yetus support for the Hadoop stable release. By not integrating HADOOP-11746 into branch-2?
So what is your recommendations for restoring branch-2 build, as it worked 2 weeks ago?, At this point, it's obvious that the conversation is no longer productive or constructive. I'll be removing myself as a watcher.

BTW, you're very welcome on getting a branch that was never designed to work with Apache Yetus haphazardly working again.  , {quote}
Hope you are not saying you revoked Yetus support for the Hadoop stable release. By not integrating HADOOP-11746 into branch-2?
So what is your recommendations for restoring branch-2 build, as it worked 2 weeks ago?
{quote}

I don't know how Allen could have possibly done this. He's just saying he's not willing to spend his time as a volunteer working on a particular branch, a position he's held consistently about branch-2 derivatives for a long time. Frankly, I was pretty surprised when he was willing to spend time on this JIRA at all. HADOOP-11746 is entirely irrelevant to our current issue. The result of it was a version of the precommit testing that we've since replaced in Hadoop like 2 or 3 time over.

I _am_ willing to spend my time as a volunteer chasing this down, because I personally try to push folks towards the 2.7.z releases. I only ask that you try to be a little more patient in your phrasing. I tend to be bursty in Hadoop because my attention is often elsewhere, so I have no way to know what the condition of the ASF build server was when you observed things working on branch-2.7. I can help chase down specific failures, but a different JIRA that tracks examples will be more helpful than an extended conversation on an issue we've already solved., We can use HADOOP-14689 for further fixing the build. Thank you [~busbey] for your help and appreciate your efforts.

I am not well familiar with Yetus and definitely missing context on the branch-2.7 / Yetus relationship, as well as on [~aw]'s position in this matter. I assumed the build should work since it did just recently. Sorry if it gave an impression of me being impatient., 
FWIW, I still don't know why contract-test-options.xml went out of .gitignore in trunk, only that at some point it happened.
{code}
git status
On branch trunk
Your branch is up-to-date with 'apache/trunk'.
Untracked files:
  (use "git add <file>..." to include in what will be committed)

	../hadoop-aws/src/test/resources/contract-test-options.xml
{code}

it only shows up if you are doing things like testing our object stores]