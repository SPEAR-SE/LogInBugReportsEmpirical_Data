[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12693989/HADOOP-11505.001.patch
  against trunk revision 825923f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5459//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5459//console

This message is automatically generated., Hi Colin, thanks for working on this. More background about this issue:
1. The nativetask code is only optimized for x86_64, so some function names are not ideal. like the name "bswap" are little confusing, it is used for "ntoh" purpose. 
2. so on all bigendian arch, bswap should be nop.
3. I guess the use of inline assembly is because very old compilers(like gcc3 I use back at baidu)  don't optimize bit shift style ntoh function as bswap asembly, but most compilers do that now, so not sure the inline assembly is needed any more. 

So I think a more clean way to fix this is to define ntoh32 and noth64 properly(use bit shift rather than assembly should be OK for modern compilers) based on BYTE_ORDER macro, and replace all bswap. , bq. So I think a more clean way to fix this is to define ntoh32 and noth64 properly(use bit shift rather than assembly should be OK for modern compilers) based on BYTE_ORDER macro, and replace all bswap.

Thanks for that context, Binglin.  I'll update the patch.. , seems ok. 

one question, HADOOP-10846 uses {{#include <byteswap.h>}} to get some powerpc byte swapping, though that has its own issues, needing to be omitted on windows.

it may make sense to make the bswap code here something in the core, where x86, arm and fallback swapping is all in one place.
 , There is a JVM crash due to libnativetask.so in PowerPC64LE that may be related to this jira.

# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00003fff721d8e50, pid=10952, tid=70366359056848
#
# JRE version: OpenJDK Runtime Environment (7.0_79-b14) (build 1.7.0_79-mockbuild_2015_04_10_10_48-b00)
# Java VM: OpenJDK 64-Bit Server VM (24.79-b02 mixed mode linux-ppc64 compressed oops)
# Derivative: IcedTea 2.5.5
# Distribution: Built on Red Hat Enterprise Linux Server release 7.1 (Maipo) (Fri Apr 10 10:48:01 EDT 2015)
# Problematic frame:
# C  [libnativetask.so.1.0.0+0x58e50]  NativeTask::WritableUtils::ReadVLongInner(char const*, unsigned int&)+0x40
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# An error report file with more information is saved as:
# /tmp/jvm-10952/hs_error.log
#
# If you would like to submit a bug report, please include
# instructions on how to reproduce the bug and visit:
#   http://icedtea.classpath.org/bugzilla
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |   6m 32s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | javac |   8m 54s | There were no new javac warning messages. |
| {color:green}+1{color} | release audit |   0m 30s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | install |   1m 54s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 37s | The patch built with eclipse:eclipse. |
| {color:red}-1{color} | mapreduce tests |   7m  4s | Tests failed in hadoop-mapreduce-client-nativetask. |
| | |  25m 37s | |
\\
\\
|| Reason || Tests ||
| Timed out tests | org.apache.hadoop.mapred.nativetask.kvtest.KVTest |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12693989/HADOOP-11505.001.patch |
| Optional Tests | javac unit |
| git revision | trunk / 5e67c4d |
| hadoop-mapreduce-client-nativetask test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6192/artifact/patchprocess/testrun_hadoop-mapreduce-client-nativetask.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/6192/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf908.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6192/console |


This message was automatically generated., Hello,
instead of doing calculations, can we use gcc's:
val=__builtin_bswap32 (val);
and 
val=__builtin_bswap64(val);

It is supposed to work on any architecture. Is that wrong? I've used it and compilation was successful, and it seems to work on T1/sparc.
, Yes, that's what HADOOP-11665 did, Thanks a lot Binglin. I was not aware of this ticket.
Actually my comment was for "primitives.h" that this patch (11505) is for, but you pointed me to the solution of my next issue. :)
, It seems that the code was written with "bswap" (byte swap) used where "network-to-host" (ntohl, ntohs) was actually what was intended.  On a big-endian architecture, no byte swapping is needed in these cases.  There are already standard functions for converting between network and host byte order such as be32toh, be64toh, so we should use those., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 49s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 5 new or modified test files. |
| {color:red}-1{color} | javac |   6m 24s | The patch appears to cause the build to fail. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12735420/HADOOP-11505.002.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 7dba700 |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6830/console |


This message was automatically generated., \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 38s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 6 new or modified test files. |
| {color:green}+1{color} | javac |   7m 31s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 43s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 23s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   0m 21s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  2s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   0m 35s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | mapreduce tests |   2m 11s | Tests passed in hadoop-mapreduce-client-nativetask. |
| | |  37m 37s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12735425/HADOOP-11505.003.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 7dba700 |
| hadoop-mapreduce-client-nativetask test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6831/artifact/patchprocess/testrun_hadoop-mapreduce-client-nativetask.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/6831/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6831/console |


This message was automatically generated., Updated patch including CMakeLists.txt changes for probe for platform byte swap support, Removed more little-endian code, \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  17m  6s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 6 new or modified test files. |
| {color:green}+1{color} | javac |   7m 40s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 40s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 23s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   1m 26s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  3s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 20s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   2m 36s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  22m 24s | Tests passed in hadoop-common. |
| {color:green}+1{color} | mapreduce tests |  10m 35s | Tests passed in hadoop-mapreduce-client-nativetask. |
| | |  73m 51s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12746805/HADOOP-11505.004.patch |
| Optional Tests | javac unit javadoc findbugs checkstyle |
| git revision | trunk / ee98d63 |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/7331/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-mapreduce-client-nativetask test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/7331/artifact/patchprocess/testrun_hadoop-mapreduce-client-nativetask.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/7331/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf909.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/7331/console |


This message was automatically generated., Thanks, [~alanburlison].  Your change is a great improvement.

In {{Buffers.h}}:

{code}
  uint32_t lengthConvertEndium() {
    uint64_t value = hadoop_be64toh(*((uint64_t *)this));
...
{code}

This looks very wrong. I suppose it's going to typecast the structure to a long\* and then dereference that?  I suppose it will do "something" as long as the compiler packs keyLength and valueLength into a single 8-byte region.  I suppose this is an existing problem.  If you can't fix it here, can you create a JIRA?

I would like to +1 this, but I'm concerned that this change hasn't been tested.  Although I think your change is absolutely correct, I'm concerned that we might expose a bug.  Can you do a quick test on this?, Hi [~cmccabe], I'll take a look, as you noted I didn't change anything here other than adding in the "hadoop_" prefix. I agree what's there at the moment is wrong, I'll change it to convert the two fields separately., That code is so bizarre I'm not sure what it's trying to do in the first place but I *think* this is the correct replacement:

{code}
return hadoop_be32toh(keyLength) + hadoop_be32toh(valueLength) + SIZE_OF_KEY_LENGTH + SIZE_OF_VALUE_LENGTH;
{code}, There's another potential problem lurking here as well - I'm assuming the contents of KVBuffers are read in across the wire into instances of the the struct, where the wire format is 2 32-bit length fields followed by two variable-length concatenated byte buffers. However the code above, and elsewhere in this struct, assumes that there is no padding between any of the fields in the struct. That may not always be the case., Yeah, it appears to be making assumptions about struct padding.

Hmm.  I think the big question is, do we have some way of testing this?  If so, I'd be happy to roll that fix into this JIRA., Included changes from HADOOP-11665, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 6 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 8m 58s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 12s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 4s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 9s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 36s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 30s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 37s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 18s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 27s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 2m 5s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 9m 59s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 9m 59s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 9m 59s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 12s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 10m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 10m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 7s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 34s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 29s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 3m 3s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 29s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 47s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 9m 29s {color} | {color:red} hadoop-common in the patch failed with JDK v1.8.0_66. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 12m 21s {color} | {color:green} hadoop-mapreduce-client-nativetask in the patch passed with JDK v1.8.0_66. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 9m 0s {color} | {color:red} hadoop-common in the patch failed with JDK v1.7.0_85. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 13m 12s {color} | {color:green} hadoop-mapreduce-client-nativetask in the patch passed with JDK v1.7.0_85. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 36s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 134m 27s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Failed junit tests | hadoop.ipc.TestDecayRpcScheduler |
|   | hadoop.metrics2.impl.TestGangliaMetrics |
| JDK v1.7.0_85 Failed junit tests | hadoop.metrics2.impl.TestMetricsSystemImpl |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12773556/HADOOP-11505.005.patch |
| JIRA Issue | HADOOP-11505 |
| Optional Tests |  asflicense  compile  cc  mvnsite  javac  unit  javadoc  mvninstall  findbugs  checkstyle  |
| uname | Linux e7bbb0aa30a4 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 4539131 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8115/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_66.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8115/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_85.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HADOOP-Build/8115/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_66.txt https://builds.apache.org/job/PreCommit-HADOOP-Build/8115/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_85.txt |
| JDK v1.7.0_85  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8115/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask U: . |
| Max memory used | 75MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8115/console |


This message was automatically generated.

, Patch 05 breaks the build on OS X with the "Can't provide endianness definitions for this platform" error., It's looking in /usr/include for one of endian.h, sys/endian.h or sys/byteorder.h, and then for either be16toh or BSWAP_64. If the include file is in a different place on OSX or the macros are called something different then no, it won't work. I don't have access to OSX to check, but as long as there's a way to define the HADOOP_XXX macros in hadoop-common-project/hadoop-common/src/CMakeLists.txt then the rest should just work - everything else in the patch uses the macros that are probed/configured by CMake., Yeah, Darwin (at least as of El Capitan aka 10.11) doesn't appear to provide either of those options.  Instead, it uses <libkern/OSByteOrder.h> and it's own functions: 

{code}
OSSwapHostToBigInt16(x)
OSSwapHostToBigInt32(x)
OSSwapHostToBigInt64(x)
OSSwapHostToLittleInt16(x)
OSSwapHostToLittleInt32(x)
OSSwapHostToLittleInt64(x)
{code}

and vice versa:

{code}
OSSwapLittleToHostInt16(x)
OSSwapLittleToHostInt32(x)
OSSwapLittleToHostInt64(x)
OSSwapBigToHostInt16(x)
OSSwapBigToHostInt32(x)
OSSwapBigToHostInt64(x)
{code}

I think that covers all of the *relevant* ones.  There are more, however...., ...htonl(), htons &c should cover the 16 & 32 bit values, it's just that 64 bit one that's the catch, isn't it?, Yes, if we could just use the htoX functions life would be easier but there's no standard 64-bit equivalent., Thanks for that [~aw], I'll respin the patch with the added OSX bits., First attempt at adding OSX support, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 6 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 8m 33s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 18s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 9m 55s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 5s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 31s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 27s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 39s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 15s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 28s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 2m 3s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 16s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 10m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 10m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 9m 51s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 9m 51s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 9m 51s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 5s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 30s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 31s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 53s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 23s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 29s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 8m 22s {color} | {color:green} hadoop-common in the patch passed with JDK v1.8.0_66. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 10m 52s {color} | {color:green} hadoop-mapreduce-client-nativetask in the patch passed with JDK v1.8.0_66. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 7m 8s {color} | {color:red} hadoop-common in the patch failed with JDK v1.7.0_85. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 11m 15s {color} | {color:green} hadoop-mapreduce-client-nativetask in the patch passed with JDK v1.7.0_85. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 25s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 107m 46s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.7.0_85 Failed junit tests | hadoop.security.ssl.TestReloadingX509TrustManager |
|   | hadoop.net.TestClusterTopology |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12774651/HADOOP-11505.006.patch |
| JIRA Issue | HADOOP-11505 |
| Optional Tests |  asflicense  compile  cc  mvnsite  javac  unit  javadoc  mvninstall  findbugs  checkstyle  |
| uname | Linux cdb84589826b 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 9f256d1 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8163/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_85.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HADOOP-Build/8163/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_85.txt |
| JDK v1.7.0_85  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8163/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask U: . |
| Max memory used | 75MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8163/console |


This message was automatically generated.

, After a bit of work unrelated to this patch (MR native task unit tests are broken on OS X), this appears to be working on OS X now as well.

+1 committing to trunk.

Thanks!, FAILURE: Integrated in Hadoop-trunk-Commit #8896 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8896/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 6725e7f1beb96177b0b59a6082a05869aab2e37b)
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk-Java8 #739 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/739/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 6725e7f1beb96177b0b59a6082a05869aab2e37b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
, As this included changes from HADOOP-11665 I've marked that as resolved, duplicate, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2670 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2670/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 6725e7f1beb96177b0b59a6082a05869aab2e37b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
, SUCCESS: Integrated in Hadoop-Yarn-trunk #1459 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/1459/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 6725e7f1beb96177b0b59a6082a05869aab2e37b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
, FAILURE: Integrated in Hadoop-trunk-Commit #8897 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8897/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 4c8125d60d47e98b1ec84422888975111e0cbcec)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #728 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/728/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 6725e7f1beb96177b0b59a6082a05869aab2e37b)
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #729 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/729/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 4c8125d60d47e98b1ec84422888975111e0cbcec)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #647 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/647/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 6725e7f1beb96177b0b59a6082a05869aab2e37b)
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2671 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2671/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 4c8125d60d47e98b1ec84422888975111e0cbcec)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #740 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/740/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 4c8125d60d47e98b1ec84422888975111e0cbcec)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
, FAILURE: Integrated in Hadoop-Yarn-trunk #1460 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/1460/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 4c8125d60d47e98b1ec84422888975111e0cbcec)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2584 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2584/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 6725e7f1beb96177b0b59a6082a05869aab2e37b)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #648 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/648/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 4c8125d60d47e98b1ec84422888975111e0cbcec)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2585 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2585/])
HADOOP-11505. Various native parts use bswap incorrectly and unportably (aw: rev 4c8125d60d47e98b1ec84422888975111e0cbcec)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
, I reverted this, because it broke the Windows build.  The hadoop.dll build does not use CMake, so there was no hadoop_endian.h header present on Windows at compile time.  I'll review this patch more closely and give a recommendation on what to do for Windows., FAILURE: Integrated in Hadoop-trunk-Commit #8899 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8899/])
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev 2577e5b2c10d8cbbe3c549cdbd8e671e8830e660)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev c37c3f41b3b5c70b0fe892a3bb8aec4246257bf0)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #731 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/731/])
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev 2577e5b2c10d8cbbe3c549cdbd8e671e8830e660)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev c37c3f41b3b5c70b0fe892a3bb8aec4246257bf0)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #1462 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/1462/])
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev 2577e5b2c10d8cbbe3c549cdbd8e671e8830e660)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev c37c3f41b3b5c70b0fe892a3bb8aec4246257bf0)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #742 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/742/])
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev 2577e5b2c10d8cbbe3c549cdbd8e671e8830e660)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev c37c3f41b3b5c70b0fe892a3bb8aec4246257bf0)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
, Drat :-( There are other header files generated by CMake such as those under hadoop-yarn-server-nodemanager and hadoop-hdfs-native-client, how are they dealt with on Windows? Do we just need a hand-crafted version for Windows?, hadoop-hdfs-native-client does build with CMake on Windows.  The native container executor in hadoop-yarn-server-nodemanager does not build at all on Windows.  hadoop-common uses a checked-in Visual Studio solution file to handle the Windows build.  There is a JIRA somewhere to track converting to CMake for Windows in hadoop-common.  Meanwhile, a short-term fix is probably to check in some kind of hand-crafted version like you said., SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2673 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2673/])
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev 2577e5b2c10d8cbbe3c549cdbd8e671e8830e660)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev c37c3f41b3b5c70b0fe892a3bb8aec4246257bf0)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-common-project/hadoop-common/CHANGES.txt
, D you know what the required byteswap macros are on Windows? It looks like it is probably these: https://msdn.microsoft.com/en-us/library/a3140177.aspx but I'm not sure. I'm also not sure how to detect the platform endianness on Windows at compile time - or can we just assume it's always LE?, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #650 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/650/])
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev 2577e5b2c10d8cbbe3c549cdbd8e671e8830e660)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev c37c3f41b3b5c70b0fe892a3bb8aec4246257bf0)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2587 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2587/])
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev 2577e5b2c10d8cbbe3c549cdbd8e671e8830e660)
* hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
Revert "HADOOP-11505. Various native parts use bswap incorrectly and (cnauroth: rev c37c3f41b3b5c70b0fe892a3bb8aec4246257bf0)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
, AFAIK, the only time you'll see big endian on Windows is the XBox.  I'm not much of a gamer these days, but last time I was in a game shop, I didn't see Hadoop on the shelf next to Fallout and Halo, so I'm going to make the bold claim that we can always assume little endian for our Windows build.  :-)

The perfect way to solve this would be to convert the Windows build to use CMake like everything else.  HADOOP-11080 tracks that effort, but it's going to take a long time.  I wouldn't want to block this patch waiting for HADOOP-11080 to complete.

In the interim, we can have the native-win profile approximate this part of the CMake script by running a few Ant tasks to generate hadoop_endian.h with the correct macros for Windows.  I'm attaching patch v007 with this solution.  Compared to the prior patch, the only new changes are in pom.xml and native.vcxproj, so it should be a small incremental code review.

I think this is slightly better than checking in a hard-coded hadoop_endian.h just for Windows.  It's possible this way will give us less of a dual-maintenance burden.
, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 6 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 54s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 8m 54s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 9m 29s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 3s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 25s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 28s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 22s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 11s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 24s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 1m 55s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 9m 5s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 9m 5s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 9m 5s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 9m 28s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 9m 28s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 9m 28s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 2s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 26s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 27s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green} 0m 0s {color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 42s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 11s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 20s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 8m 34s {color} | {color:green} hadoop-common in the patch passed with JDK v1.8.0_66. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 11m 11s {color} | {color:green} hadoop-mapreduce-client-nativetask in the patch passed with JDK v1.8.0_66. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 8m 31s {color} | {color:green} hadoop-common in the patch passed with JDK v1.7.0_85. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 11m 45s {color} | {color:green} hadoop-mapreduce-client-nativetask in the patch passed with JDK v1.7.0_85. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 20s {color} | {color:red} Patch generated 3 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 104m 31s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12776247/HADOOP-11505.007.patch |
| JIRA Issue | HADOOP-11505 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  xml  cc  findbugs  checkstyle  |
| uname | Linux 0e9ef04cc15f 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / fc47084 |
| findbugs | v3.0.0 |
| JDK v1.7.0_85  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8202/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-HADOOP-Build/8202/artifact/patchprocess/patch-asflicense-problems.txt |
| modules | C: hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask U: . |
| Max memory used | 75MB |
| Powered by | Apache Yetus    http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8202/console |


This message was automatically generated.

, I don't get a vote but this looks like a good approach to me :-) Generating the header in the way you have wouldn't have occured to me - nice. Thanks for doing this!, The license warning is unrelated, introduced by YARN-4248.  I just commented there asking for a fix.

[~alanburlison], thank you for the review.

bq. I don't get a vote...

Actually, we welcome votes from contributors.  We just ask that you call it out as "+1 (non-binding)".  Although we can't commit code based on a non-binding +1, it's still valuable to know that a contributor has reviewed and accepted the patch.  Your feedback on the native code has been very valuable, so I'd welcome more of your code reviews.

Since I've touched the patch, I also can't commit based on my own +1.  Could one of the earlier reviewers take another look?  The only new changes are in pom.xml and native.vcxproj, so it won't take much time., There is one thing I missed in my earlier review that has me *slightly* concerned:

{code}
+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
@@ -90,6 +90,7 @@ include_directories(
     ${SRC}/src/util
     ${SRC}/src/lib
     ${SRC}/test
+    ../../../../hadoop-common-project/hadoop-common/target/native
     ${CMAKE_CURRENT_SOURCE_DIR}
     ${CMAKE_BINARY_DIR}
     ${JNI_INCLUDE_DIRS}
{code}

This basically means that hadoop-common's native MUST always be compiled prior to compiling this code.  It really seems like a gotcha waiting to surprise someone. It definitely means that Yetus' hadoop driver will likely fail any builds of this code until it's told about that requirement., .bq Actually, we welcome votes from contributors. We just ask that you call it out as "+1 (non-binding)". Although we can't commit code based on a non-binding +1, it's still valuable to know that a contributor has reviewed and accepted the patch. Your feedback on the native code has been very valuable, so I'd welcome more of your code reviews.

Ah I didn't realise that was the way it works, thanks. I'll start looking :-), There's also a similar problem with hadoop-maven-plugins - if you don't explicitly build them first when starting from a clean workspace, the build fails. Is there any way of telling maven about the ordering requirement?, bq. Is there any way of telling maven about the ordering requirement?

The last time I looked at the hadoop-maven-plugins problem, it really looked like a Maven bug.  Maven is supposed to be able to understand the dependency relationships of modules in the current build (what they call the "reactor").  It seems it doesn't identify the relationship though if one of those modules is a Maven plugin needed by a subsequent module.  I believe {{mvn compile}} at the root of the source tree wasn't working if the local Maven cache didn't have hadoop-maven-plugins, and people were forced to do {{mvn install}} first.

The case pointed out by Allen is a little different from that though.  Pre-commit will build only hadoop-mapreduce-client-nativetask if a patch only contains code in that module, and Maven won't have any reason to trigger an automatic build of hadoop-common first.  The Yetus Hadoop personality already handles some of our special cases like this by forcing a hadoop-common build.  I think the only solutions I see for this would be to make another change to the Yetus Hadoop personality, or duplicate the code.  I'd prefer not to do the latter.  The code is non-trivial enough that I'd prefer not to duplicate., Rather than code duplication, couldn't it be a CMake module that gets called by the CMakeLists that need it and generates the endian.h file in the appropriate target directories?, Yes, I think that would work.  Good idea.  [~alanburlison], do you want to give that a try?, Yes, I can do that. We already have HadoopCommon.cmake and HadoopJNI.cmake in hadoop-common-project/hadoop-common, I suggest putting the new CMake module in there (HadoopEndian.cmake?) and parameterising it with an output directory in which to place the generated hadoop_endian.h file. It should be fairly straightforward to do as it's basically just a case of factoring out the code I've already written to generate the endinanness header and adding in calls to it from existing CMake files., +1 for the proposal.  Thanks, Alan!, I've dug into this some more and there's already a bigger problem in the form of the {{config.h}} file, which is generated by the CMake script in {{hadoop-common-project/hadoop-common}} (the same place where {{hadoop_endian.h}} is generated). {{config.h}} is included in 31 other places across 4 subcomponents, with 7 files in {{hadoop-mapreduce-project/hadoop-mapreduce-client}} including {{config.h}}, so builds of {{hadoop-mapreduce-project/hadoop-mapreduce-client}} already require {{hadoop-common-project/hadoop-common}} to be built first. That's not surprising as {{hadoop-common-project/hadoop-common}} is supposed to contain the common Hadoop code. Also, {{hadoop-mapreduce-project/hadoop-mapreduce-client}} has a dependency on the lz4 code that's in {{hadoop-common-project/hadoop-common}} so even if the header file issues were addressed you'd still have to build {{hadoop-common-project/hadoop-common}} before building {{hadoop-mapreduce-project/hadoop-mapreduce-client}}.

I was going to suggest that straightening out the config.h and hadoop_endian.h generation should be done as one piece of work, but as {{hadoop-mapreduce-project/hadoop-mapreduce-client}} already requires code from {{hadoop-common-project/hadoop-common}} there's really no point. I think this patch should therefore stand as-is., You're right.  I forgot about the lz4 code dependency.  I agree with proceeding with the current patch (v007).  Future build de-tangling enhancements could be deferred to separate JIRAs.  [~aw], what do you think?, Thanks for working on this, everyone.

[~aw], if you want to run the native unit tests for hadoop-hdfs, you must build the native part of hadoop-common first, so that you can have access to {{libhadoop.so}}.  That's why the old (pre-Yetus) build script had a hacky piece of code that specifically compiled hadoop-common if anything native had changed.  I don't think the native components inside nativetask and yarn have the same issue, since I don't think they actually make calls into libhadoop.  So theoretically we might be able to decouple those from the compilation of hadoop-common.  As [~cnauroth] commented, one way of doing this would be splitting out stuff like the {{config.h}} generation code into a separate module or file that could be invoked by all {{CMakeLists.txt}}.

As [~alanburlison] pointed out, the patch here doesn't add any additional dependencies or change the existing ones.  I think we should address the build dependency issues in a separate JIRA.

{{MCollectorOutputHandler.cc}}: I'm confused by the {{Endium}} enum here.  First of all, shouldn't it be {{Endianness}}?  "Endium" isn't a word.  Secondly, it looks hard-coded to {{LARGE_ENDIUM}}, but there is an "if" statement.  Is the intention to add additional flexibility in the future?  If we're not using this functionality right now, I would rather avoid "speculative code" that we may or may not end up using., (Moving response to a new comment so it doesn't get lost)
, I'm not sure I agree with [~alanburlison]'s assessment, but I might be missing something.  All of the cmake files appear to be building their own config.h files.  Plus *zero* of our native builds are failing when we don't build hadoop-common prior to building anything else.

{code}
hadoop-common-project/hadoop-common/src/CMakeLists.txt:configure_file(${CMAKE_SOURCE_DIR}/config.h.cmake ${CMAKE_BINARY_DIR}/config.h)
hadoop-hdfs-project/hadoop-hdfs-native-client/src/CMakeLists.txt:configure_file(${CMAKE_SOURCE_DIR}/config.h.cmake ${CMAKE_BINARY_DIR}/config.h)
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt:configure_file(${CMAKE_SOURCE_DIR}/config.h.cmake ${CMAKE_BINARY_DIR}/config.h)
hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/CMakeLists.txt:configure_file(${CMAKE_SOURCE_DIR}/config.h.cmake ${CMAKE_BINARY_DIR}/config.h)
{code}


Additionally, for lz4, the pom.xml file does the magic to make it work:

{code}
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/pom.xml:                    <copy file="${basedir}/../../../hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/compress/lz4/lz4.h"
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/pom.xml:                    <copy file="${basedir}/../../../hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/compress/lz4/lz4.c"
{code}


So no, really, this is adding a new compile-time dependency that isn't there.
, Generating multiple copies of the same header file and spreading them around the build tree seems pretty undesirable to me, which is what we'd end up with if we abstract this into a CMake module. Also, whilst there are multiple config.h files generated in the build tree, they are all different which is not the case with the the endian header file. I still think the correct solution is to generate the header just once, the question is how to trigger than from the Hadoop components that use it., bq. Generating multiple copies of the same header file and spreading them around the build tree seems pretty undesirable to me, which is what we'd end up with if we abstract this into a CMake module.

Generating the {{config.h}} header takes a really small amount of time.  I would much rather just have each CMakeLists.txt generate its own {{config.h}}, than have to build {{hadoop-common}} all the time (which takes a full 20 seconds on my machine).  This might be an example of a micro-optimization that blocks a much bigger macro-optimization.

bq. Additionally, for lz4, the pom.xml file does the magic to make it work:

It seems like Yetus' change detection will fail if we make a change to lz4, though, right?  It will not trigger {{hadoop-mapreduce-client-nativetask}} to be built., Why would hadoop-common have to be rebuilt each time? Is the problem that the current build infrastructure rebuilds it even when nothing has changed? I've noticed that happening with other subcomponents. If that is the case then generating multiple, duplicate headers probably is both easier and quicker, although it sets my teeth slightly on edge.

I can't comment about Yetus as I don't know anything about it., I haven't looked at the build system in a while, but I believe it starts with a {{mvn clean}}.  That would wipe out {{config.h}}.  So saying that only {{hadoop-common}} can generate {{config.h}} is equivalent to saying every native build needs to start by building {{hadoop-common}}, whether or not anything in common changed.  Does that make sense?

bq. Is the problem that the current build infrastructure rebuilds it even when nothing has changed?  I've noticed that happening with other subcomponents.

No, that's not the problem.  Sorry if my explanation was confusing.

Basically, I am arguing that the savings in build time from generating {{config.h}} only once rather than multiple times is so small that it is not worth the extra complexity and cross-module dependencies.  And since hadoop-common takes a long time to build (about 20 seconds!), it would actually be much slower to have the cross-module dependency than to skip it., You can't buildhadoop-mapreduce-project or hadoop-mapreduce-client on their own anyway, despite what it says in BUILDING.txt - or at least I can't:

{noformat}
Where to run Maven from?

  It can be run from any module. The only catch is that if not run from utrunk
  all modules that are not part of the build run must be installed in the local
  Maven cache or available in a Maven repository.
{noformat}

If I try to build from either {{hadoop-mapreduce-project}} or {{hadoop-mapreduce-project/hadoop-mapreduce-client}} it results in:

{noformat}
[ERROR] COMPILATION ERROR : 
[INFO] -------------------------------------------------------------
[ERROR] /pool/home/alanbur/bigdata/hadoop/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/TaskAttemptFinishingMonitor.java:[41,42] SystemClock() has private access in org.apache.hadoop.yarn.util.SystemClock
[ERROR] /pool/home/alanbur/bigdata/hadoop/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java:[248,9] SystemClock() has private access in org.apache.hadoop.yarn.util.SystemClock
[INFO] 2 errors 
{noformat}

The only way I can get it to build is to do a full build or to use {{mvn -pl hadoop-mapreduce-project -am compile}} from the repo root directory. And if I do that it only takes 33 seconds to do a clean build versus 19 seconds to do a nothing-has-changed rebuild. That's because stuff gets needlessly rebuilt even when nothing has changed:

{noformat}
[INFO] Compiling 862 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-common-project/hadoop-common/target/classes
[INFO] Compiling 228 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-hdfs-project/hadoop-hdfs-client/target/classes
{noformat}

I note also that the above incantation already builds Hadoop-Common, so there's no increase in build time anyway. If there's a problem to be fixed it's the one that causes 3180 files to be unnecessarily recompiled during a full build even when nothing has changed:

{noformat}
[INFO] Compiling 862 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-common-project/hadoop-common/target/classes
[INFO] Compiling 228 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-hdfs-project/hadoop-hdfs-client/target/classes
[INFO] Compiling 229 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/target/classes
[INFO] Compiling 346 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/target/classes
[INFO] Compiling 78 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/target/classes
[INFO] Compiling 217 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/target/classes
[INFO] Compiling 388 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/target/classes
[INFO] Compiling 48 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/target/classes
[INFO] Compiling 507 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/target/classes
[INFO] Compiling 129 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/target/classes
[INFO] Compiling 48 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/target/classes
[INFO] Compiling 95 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-tools/hadoop-rumen/target/classes
[INFO] Compiling 5 source files to /pool/home/alanbur/bigdata/hadoop/hadoop-tools/hadoop-extras/target/classes
{noformat}

And that's just the Java files. If the unnecessary regeneration of Makefiles and the consequential recompilations were prevented then even more time would be saved., I have to confess that I also always build from the project root, since I got tired of debugging misbuilds caused by running maven inside subproject directories.  I never saw the specific error about classes being private that you are seeing-- my only guess is that you are somehow pulling the wrong version of the classes-- perhaps it is a SNAPSHOT dependency?

I also noticed that hadoop-common is doing a lot of unnecessary work-- I think you're absolutely right that a lot of things are being re-generated that don't need to be inside hadoop-common.  It would be a great service to everyone if this time could be reduced., bq. If I try to build from either hadoop-mapreduce-project or hadoop-mapreduce-project/hadoop-mapreduce-client it results in:

I can't duplicate this:

{code}
aw-mbp-work:hadoop aw$ git branch
  HADOOP-11791
  HADOOP-11792
  HDFS-8707
  branch-2
  h12027
  h12492
  h12651
* trunk
aw-mbp-work:hadoop aw$ (mvn clean && cd hadoop-mapreduce-project/ && mvn compile )> /dev/null
aw-mbp-work:hadoop aw$ echo $?
0
{code}, bq. perhaps it is a SNAPSHOT dependency?
Could be, I'll have a dig around and see if I can figure it out. The odd thing is that if I rebuilt from the repo root nothing new is pulled down into the maven repo but the build succeeds - most odd...
bq. it would be a great service to everyone if this time could be reduced
I've had a poke at this but haven't been successful so far, my first stab was to try to change the antrun bits in the pom.xml so that cmake only got called to regenerate the Makefile if the corresponding CMakeLists.txt was newer than it but I got lost in the twisty maze between where maven finishes and the antrun plugin starts. Ugh :-( The other potential problem is the javah parts, I'm not sure but it looks like javah is getting called unnecessarily as well, and of course if the header files are regenerated that will most likely trigger a make recompile anyway. I know way more about make than I do about ant, and way more about ant than maven plus the maven documentation is generally dreadful anyway, sigh ...
bq. I can't duplicate this
It's completely reproducible for me, but I have a different set of patches applied to you. I'll check to see if it behaves the same way on Linux tomorrow., I think we should try to decouple the build system improvements from the bswap fixes.  This JIRA has been blocked for a while; can we unblock it by moving some of this to follow-on tasks?, Yes, I think splitting the work up is a good idea.

I've done a little more digging and to do anything sophisticated with ant inside a pom.xml is not possible, for example only running cmake if CMakeFiles.txt has been modified. That's because you can only have one ant <target> block within a maven-antrun-plugin section in the pom.xml. The recommended approach is to to move any complicated ant logic into a separate build.xml file and just call ant from maven. I think such a refactoring would also make it easier to develop/test the native build parts in isolation from the rest of the maven build. The one wrinkle in this case is the use of the native-maven-plugin in the pom.xml to run javah on the classfiles and generate the corresponding C headers. I've completely failed to find any documentation for it so I've no idea if it is smart enough to only regenerate the .h when the corresponding classfile is updated. However if the decision is to refactor the JNI build into an ant build.xml then I think the javah parts should be moved into ant as well., Further to this, ant has a javah task that will search a classpath rather than requiring an explicit classfile list like the native-maven-plugin, so it looks like a better mechanism anyway., Keep in mind we no longer use the antrun Maven plugin to run {{cmake}}... since HADOOP-8887, we have a custom CMake plugin to do that.  It runs {{cmake}} + {{make}} every time (but this takes a very short amount of time on my machine).  We could potentially optimize it to check file timestamps, although this is something that {{cmake}} itself also does.

I do not want to convert parts of the build to ant... it would be less maintainable than what we have, especially for platforms like Windows where the build environment is non-UNIX.

Before we start optimizing, I would like to see a breakdown of how much time each step actually takes.  Or at least a rough estimate.  My gut feeling is that the {{javah}} step could be worth optimizing, but I don't have any numbers to justify that yet.  Some of the other native builds have accumulated cruft like file copies which I didn't have time fix.  Above all, we should find out which step(s) are leading to rebuilds on things that haven't changed., I can understand about not wanting to switch to Ant but as for the cmake plugin, I see this in {{hadoop-common-project/hadoop-common/pom.xml}}, which looks like antrun is being used rather than the cmake plugin:

{code:xml}
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>make</id>
                <phase>compile</phase>
                <goals><goal>run</goal></goals>
                <configuration>
                  <target>
                    <exec executable="cmake" dir="${project.build.directory}/native" failonerror="true">
                      <arg line="${basedir}/src/ -DGENERATED_JAVAH=${project.build.directory}/native/javah -DJVM_ARCH_DATA_MODEL=${sun.arch.data.model} -DREQUIRE_BZIP2=${require.bzip2} -DREQUIRE_SNAPPY=${require.snappy} -DCUSTOM_SNAPPY_PREFIX=${snappy.prefix} -DCUSTOM_SNAPPY_LIB=${snappy.lib} -DCUSTOM_SNAPPY_INCLUDE=${snappy.include} -DREQUIRE_ISAL=${require.isal} -DCUSTOM_ISAL_PREFIX=${isal.prefix} -DCUSTOM_ISAL_LIB=${isal.lib} -DREQUIRE_OPENSSL=${require.openssl} -DCUSTOM_OPENSSL_PREFIX=${openssl.prefix} -DCUSTOM_OPENSSL_LIB=${openssl.lib} -DCUSTOM_OPENSSL_INCLUDE=${openssl.include} -DEXTRA_LIBHADOOP_RPATH=${extra.libhadoop.rpath}"/>
                    </exec>
                    <exec executable="make" dir="${project.build.directory}/native" failonerror="true">
                      <arg line="VERBOSE=1"/>
                    </exec>
                    <!-- The second make is a workaround for HADOOP-9215.  It can
                         be removed when version 2.6 of cmake is no longer supported . -->
                    <exec executable="make" dir="${project.build.directory}/native" failonerror="true"></exec>
                  </target>
                </configuration>
              </execution>
{code}

I can't find any mention of a cmake plugin in the pom.xml files, am I looking in the wrong place?

I'm not sure what cmake or the cmake plugin are doing, but by observation all the Native code is recompiled on each build, as is most of the Java code for that matter - I have no idea why maven thinks that's necessary, my first guess would be that it's triggered by some unconditional file copies somewhere. As you say, more investigation is needed.
, The cmake plugin change is very clearly in branch-2 and trunk.  See https://github.com/apache/hadoop/blob/cea1c71087e886c3b1e548c3ae900e9a0e395477/hadoop-common-project/hadoop-common/pom.xml, Ah, it's been pushed since my last sync, I'll resync - thanks., Resynchronised patch with repo, Hi [~alanburlison],

Thanks for persisting with this.  As per the comments earlier, it's kind of unpleasant to add a dependency on a header generated in hadoop-common when we don't have to.  It seems like we can avoid this problem just by putting the {{configure_file}} statement in the {{hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt}} file.  (Of course the actual {{hadoop_endian.h.cmake}} file can continue to be in hadoop-common if you like.), I'll take a look at what's involved when I get a chance. For now I'm mostly interested in getting to a point where things don't coredump all the time on SPARC, and beyond that fixing the significant number of endianness problems that stop tests succeeding., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 16s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 6 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 15s {color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 6m 53s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 7m 30s {color} | {color:green} trunk passed with JDK v1.8.0_74 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 7m 5s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 4s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 17s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 23s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 0s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 11s {color} | {color:green} trunk passed with JDK v1.8.0_74 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 19s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue} 0m 14s {color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 57s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 7m 29s {color} | {color:green} the patch passed with JDK v1.8.0_74 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 7m 29s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 7m 29s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 7m 6s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:red}-1{color} | {color:red} cc {color} | {color:red} 15m 46s {color} | {color:red} root-jdk1.7.0_95 with JDK v1.7.0_95 generated 1 new + 19 unchanged - 1 fixed = 20 total (was 20) {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 7m 6s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 7m 6s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 3s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 23s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green} 0m 1s {color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 25s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 13s {color} | {color:green} the patch passed with JDK v1.8.0_74 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 19s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 20m 8s {color} | {color:red} hadoop-common in the patch failed with JDK v1.8.0_74. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 8m 52s {color} | {color:red} hadoop-mapreduce-client-nativetask in the patch failed with JDK v1.8.0_74. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 8m 34s {color} | {color:red} hadoop-common in the patch failed with JDK v1.7.0_95. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 9m 50s {color} | {color:red} hadoop-mapreduce-client-nativetask in the patch failed with JDK v1.7.0_95. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 25s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 101m 41s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_74 Failed junit tests | hadoop.ha.TestZKFailoverController |
| JDK v1.8.0_74 Timed out junit tests | org.apache.hadoop.http.TestHttpServerLifecycle |
| JDK v1.7.0_95 Failed junit tests | hadoop.fs.TestFsShellReturnCode |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12793570/HADOOP-11505.008.patch |
| JIRA Issue | HADOOP-11505 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  xml  cc  findbugs  checkstyle  |
| uname | Linux 841c3462688c 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / d457401 |
| Default Java | 1.7.0_95 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_74 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |
| findbugs | v3.0.0 |
| cc | root-jdk1.7.0_95: https://builds.apache.org/job/PreCommit-HADOOP-Build/8854/artifact/patchprocess/diff-compile-cc-root-jdk1.7.0_95.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8854/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_74.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8854/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-nativetask-jdk1.8.0_74.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8854/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_95.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8854/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-nativetask-jdk1.7.0_95.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HADOOP-Build/8854/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_74.txt https://builds.apache.org/job/PreCommit-HADOOP-Build/8854/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_95.txt |
| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8854/testReport/ |
| modules | C:  hadoop-common-project/hadoop-common   hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask  U: . |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8854/console |
| Powered by | Apache Yetus 0.2.0   http://yetus.apache.org |


This message was automatically generated.

, This isn't a blocker, because the affected architectures can fall back on the non-native code for accomplishing the same things., Hi all,
Colin, thanks for opening this Jira and also thanks to Steve Loughran and Edward Nevill for finding it.
We in OpenPOWER community and IBM, as part of our Hadoop 3.0 development plan, have unexpectedly come across this issue, build break due to the embedded x86 asm code :( 
Please, let me know if I can be of any assistance to you. Meanwhile we consider the latest Hadoop source code for Power architecture broken :( 
btw, could Hadoop community uncommitted these new x86 only enhancements? , The problematic part of this change was making all the subprojects depend on hadoop-common.  It seems like you could avoid doing that by putting all the le32to_h, etc. definitions in a standalone header file and having the other projects include that file., Colin,
Thanks for your guidance and do-diligent  here. This might be of-topic, but to avoid similar issues in future, could I offer my help here.
For example, we could contribute a Power based Jenkins slave(s) to Apache Hadoop CI.  We have successfully done similar contribution to Apache Bigtop CI. That way we could catch any regressions earlier in development cycle. I'd appreciate your guidance on this., I think it would be great to see build slaves with alternate architectures.  Maybe a good place to start is by emailing the hadoop development list and talking to the infrastructure team., the ASF build infra is shared across all projects; if there is a power machine already there then the assistance would be welcome in setting up the build process for the scheduled builts


A harder problem is: getting people to care that they've broken it. We get that today with <1 JVM, some of the build machines having enough network differences for some tests to fail only on them (TestDNS)... the instability means that people don't immediately panic when a build fails (or: assume that they just broke it).  There's also the fact that the JVM will be the IBM JVM, which isn't used for dev and test by most people. Accordingly, what could appear to be a PPC failure could actually be a JVM failure. I'll particularly call out Kerberos here: someone needs to test IBM JVM + PPC in kerberos mode, and I'm glad to say it won't be me.

What would be good would if someone in your org got involved in helping to test ASF builds first to make sure they are all happy, and get involved in helping to make sure those nightly builds —and even more so, any release candidates— are all working., Steve, valid points but ppc build has gotten more friendly :) specially since we shifted to use Openjdk-7&8 (with JIT) for Power :) Casing point, the entire apache bigtop 2 stack (Hadoop 2.7.2, Spark,..) is currently getting build with OpenJDK for Power https://ci.bigtop.apache.org/job/Bigtop-trunk-packages-ppc64le
Regarding your last comment:
 "What would be good would if someone in your org got involved in helping to test ASF builds first to make sure they are all happy, and get involved in helping to make sure those nightly builds —and even more so, any release candidates— are all working."
Agreed %100, count me in. How can I help? We already have a Jenkins slave setup for Hadoop on Power, that is how we noticed this issue., I think adding a PPC nightly build would be a step in the right direction.  Of course, people interested in making Hadoop work well on PPC would still have to fix occasional breakages and performance regression.  Apache is a do-ocracy so if people want to put in the work to do it, it will get done., hi Colin, fixing bugs and specially performance regression detection are our primary objective. I have a dedicated team of four getting trained  for this tasks. 
, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 6 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  3m 21s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 48s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  6m 48s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 23s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 13s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 26s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 46s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  3s{color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 16s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 57s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  6m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green}  6m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  6m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 29s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 33s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  9s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 10s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 16m 32s{color} | {color:red} hadoop-common in the patch failed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  8m 15s{color} | {color:red} hadoop-mapreduce-client-nativetask in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 27s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 87m 28s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Timed out junit tests | org.apache.hadoop.http.TestHttpServerLifecycle |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:9560f25 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12793570/HADOOP-11505.008.patch |
| JIRA Issue | HADOOP-11505 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  xml  cc  findbugs  checkstyle  |
| uname | Linux 253f2482038e 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / da456ff |
| Default Java | 1.8.0_91 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/10015/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/10015/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-nativetask.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/10015/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask U: . |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/10015/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 15s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 6 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 38s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 41s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m  8s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 51s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 44s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 38s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 20s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 12s{color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 17s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 57s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  9m 42s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green}  9m 42s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  9m 42s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 37s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 30s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 17s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  7m 44s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  8m 16s{color} | {color:red} hadoop-mapreduce-client-nativetask in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 37s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 89m 14s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:a9ad5d6 |
| JIRA Issue | HADOOP-11505 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12793570/HADOOP-11505.008.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  xml  cc  findbugs  checkstyle  |
| uname | Linux dccc0b82b98b 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 61c0bed |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/11075/artifact/patchprocess/patch-unit-hadoop-mapreduce-project_hadoop-mapreduce-client_hadoop-mapreduce-client-nativetask.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/11075/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask U: . |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/11075/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Any update on this ?, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  1m 11s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 6 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 30s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 15m 22s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 15m 36s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 59s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 35s{color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 37s{color} | {color:red} hadoop-common-project/hadoop-common in trunk has 19 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 14s{color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 17s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  8s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 12m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 12m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m  2s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 43s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 28s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 22s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 32s{color} | {color:green} hadoop-common in the patch passed. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 10m 10s{color} | {color:green} hadoop-mapreduce-client-nativetask in the patch passed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 45s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}102m 43s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | HADOOP-11505 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12793570/HADOOP-11505.008.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  xml  cc  findbugs  checkstyle  |
| uname | Linux cf4661919640 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 315f077 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| findbugs | https://builds.apache.org/job/PreCommit-HADOOP-Build/12536/artifact/patchprocess/branch-findbugs-hadoop-common-project_hadoop-common-warnings.html |
|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/12536/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask U: . |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/12536/console |
| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, I'm watching this, but its been > a decade since I've done C/C++ code, so I don't think I'd be a good reviewer. Who is willing to put their hand up? [~cmccabe] ?, Hi,

I am getting similar issues for which I have created a patch.

https://issues.apache.org/jira/browse/HADOOP-14922

Would like to know your inputs on the same.

Thanks in advance,
Anup Halarnkar, Anup...sounds like your new patch is just a duplicate/part of this one.

As to where this one is, it's hampered by not enough people having PPC systems around to test the compilation, hence the problem in the first place.

Why not see what the latest patches here do, and help review them, and so collaborate with the others so you can be confident that its good. If multiple PPC users say "this patch works", and nobody using other things say "this breaks us", we'll trust you., Thanks for the response Steve.
I had already tried the latest "08" patch. But, it did not work for me.
I am not really sure about intricacies or dependencies involved for "bswap" as the ver 08 patch is too big.

Honestly, I used only the GCC builtin macros (__builtin_bswap32(), etc. These are already ported to output assembly code for power). And I made the modification is just one file "primitives.h". Also, I made sure that other architectures would not be disturbed with this change as I used PPC specific arch macros.

So, I was trying to get more information from community about my patch ( Info related to portability, dependencies, arch specific info, etc)

I am thankful for your response and will look to explore the ver 08 patch given here as well as try to get results from other power specific communities.

Thanks,
Anup Halarnkar, At one point in time, the jenkins servers had access to a PPC box. I had daily builds working and was going towards getting a precommit test setup.  Then IBM signed the deal with Hortonworks to support HDP on  PPC.  So I pretty much stopped working on it since I assumed that HW would be spending it's considerable resources on it rather than what I could offer as a lowly volunteer. i.e., my time was better spent elsewhere. Almost 3 months ago, access to the PPC box was lost.  I have no idea what sort of support HW is putting towards PPC.  I'm guessing zero, given I haven't seen anything non-Linux/x86 come out of there.

(I just did a quick test on the other PPC box that Jenkins has access to.  It is lacking docker, so that's pretty much a no go.)]