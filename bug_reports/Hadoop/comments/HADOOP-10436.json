[Made buildGeneralOptions synchronized.
OptionBuilder is a part or o.a.commons.cli, so we should avoid this problem at GenericOptionsParser#buildGeneralOptions. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12636862/HADOOP-10436.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3716//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3716//console

This message is automatically generated., Actually, the issue is even wider. All tools relying on OptionBuilder (and most do) are not thread safe...

Fixing ToolRunner is not the solution to the real problem because ToolRunner is often use in practice to run tools..., [~bdechoux], thank you for your comment.

{quote}
All tools relying on OptionBuilder (and most do) are not thread safe...
{quote}

Do you mean we should modify {{OptionBuilder}}? IMO, it's also useful to make GenericOptionsParse thread-safe. What do you think?, The issue is resolved in a newer version of CLI:
https://issues.apache.org/jira/browse/CLI-224
So, OptionBuilder is deprecated there. I think we just need to use the new Option.Builder from here:
https://fisheye6.atlassian.com/changelog/commons?cs=1444720, Thanks for your suggestion, [~metaruslan]. Then, we should move from 1.2 to 1.3 after releasing commons-cli 1.3 and fix to use Option.Builder., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12636862/HADOOP-10436.1.patch
  against trunk revision 90c8ece.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4679//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4679//console

This message is automatically generated.]