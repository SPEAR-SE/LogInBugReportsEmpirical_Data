[In order to prevent the client from looping infinitely retrying to locate missing block the following line
-                   /**
                    if (failures >= MAX_BLOCK_ACQUIRE_FAILURES) {
                        throw new IOException("Could not obtain block " + blocks[targetBlock]);
                    }
-                   **/
in DFSClient.blockSeekTo(long) should be uncommented.
It is also desired to reduce the value of the MAX_BLOCK_ACQUIRE_FAILURES constant
which is set to 10 now. In current settings it will take at least 100 seconds to detect missing block.
So additionally to uncommenting the lines above I'd set
-   static int MAX_BLOCK_ACQUIRE_FAILURES = 10;
+   static int MAX_BLOCK_ACQUIRE_FAILURES = 3;
and reduce sleeping time between retries to 3 seconds from current 10
                    LOG.info("Could not obtain block from any node:  " + ie);
                    try {
-                       Thread.sleep(10000);
+                       Thread.sleep(3000);
                    } catch (InterruptedException iex) {
                    }
, Okay, I've commited this.

Note that this situation can occur while a dfs system is starting up.  If one lanuches the namenode prior to the datanodes then the namenode will know about files but not yet know wherre their blocks are, until the datanodes check in for the first time.  I recently changed the bin/start-all.sh script to start the namenode first, so that datanodes would not all initially report problems connecting to the namenode.  I knew there was a reason that it was done in the other order, but could not remember what the reason was.  Now I remember!  I switched that back and added a comment.

Also, next time, can you please attach a patch file, so that I don't have to manually make your suggested changes?  Thanks!
]