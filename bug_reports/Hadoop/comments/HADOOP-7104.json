[Attaching a patch that 

1 . Passes InetAddress of the client to the authorization layer instead of hostname. The reverse lookup from InetAddress to hostname is done only when necessary. 

2. Added a supporting utility method for substituting "_HOST" that takes InetAddress instead of String. 

3. Reverting the principal name checking from using shortname back to using full kerberos principal name. Using the shortname, one can't check the hostname part, i.e., whether the connection is coming from a host that the Kerberos key is supposed to be used on., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12468304/c7104-01.patch
  against trunk revision 1058343.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/180//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/180//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/180//console

This message is automatically generated., Uploaded review here:
https://reviews.apache.org/r/316/diff/

Comments to follow later today., Commented on the reviewboard diff with some suggested test case improvements, but mostly looks good., Todd, thanks for the review. Attaching a new patch incorporating your suggestions on testing. Note that by removing the dependency on DNS resolver, we're no longer testing the default behavior of using local hostname for substitution when hostname is null., Also, manually verified the patch on my one-node cluster., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12468419/c7104-03.patch
  against trunk revision 1058881.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/183//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/183//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/183//console

This message is automatically generated., Hi Kan,

I take your point that we're no longer testing the 0.0.0.0 case. I just modifed your patch a little bit to include a new case that does this again. I think it's safe to rely on getLocalHostname being self-consistent, I was just worried that before we were doing the hostname -> ip -> hostname cycle which might not work on a build host. So the new test case just makes sure we return the local hostname for 0.0.0.0 and null.

Also I flipped some assertTrue(...equals(...)) to assertEquals for better output on failure.

If you're OK with these small changes give a +1 and I'll commit., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12468429/7104-few-edits.patch
  against trunk revision 1058881.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/184//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/184//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-HADOOP-Build/184//console

This message is automatically generated., Todd, the changes you made look fine. Thanks again!

+1., I committed this to trunk only. Please let me know if you think it belongs in 0.22, Todd, please commit it to 0.22 as well. If it can't be cleanly applied, let me know., Integrated in Hadoop-Common-trunk #577 (See [https://hudson.apache.org/hudson/job/Hadoop-Common-trunk/577/])
    HADOOP-7104. Remove unnecessary DNS reverse lookups from RPC layer. Contributed by Kan Zhang
, As Nigel detailed in his recent email, only critical or blocker bugs should be applied to the 22 branch, and only with strong justification.  This issue is correctly categorized as an improvement.  Therefore, it's up to Nigel as RM to pull in the patch to 22 if he wishes., Thanks, Jakob. Let's leave it to Nigel then (it can do real damage when the condition is right)., Kan, Deveraj, isn't this a regression bug instead of an improvement? 
A single accept thread falling behind due to reverse DNS lookup leading to unresponsive Namenode.  (still to be confirmed.)

Nigel and dev, please consider this for 0.22.  

, Trusting Koji (always a good idea), this sounds like this is a bug, not an improvement.  To 22 it should go., Seems everyone's in agreement. Committed to branch-0.22 and moved the CHANGES.txt entry in trunk. Thanks again Kan., Integrated in Hadoop-Common-trunk-Commit #479 (See [https://hudson.apache.org/hudson/job/Hadoop-Common-trunk-Commit/479/])
    Move HADOOP-7104 in CHANGES.txt to reflect inclusion in 0.22 branch
, Integrated in Hadoop-Common-trunk #580 (See [https://hudson.apache.org/hudson/job/Hadoop-Common-trunk/580/])
    Move HADOOP-7104 in CHANGES.txt to reflect inclusion in 0.22 branch
, Integrated in Hadoop-Common-22-branch #16 (See [https://hudson.apache.org/hudson/job/Hadoop-Common-22-branch/16/])
    HADOOP-7104. Remove unnecessary DNS reverse lookups from RPC layer. Contributed by Kan Zhang
]