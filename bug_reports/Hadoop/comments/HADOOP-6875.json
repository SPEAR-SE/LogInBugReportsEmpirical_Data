[Initial patch for yahoo dist security branch., Patch for trunk., +    if (props.get(MAPRED_DELEGATION_TOKEN) == null) {
+      initConf.setBoolean(MAPRED_DELEGATION_TOKEN, false);
+    }

- I think it should be, if the delegation token exists, then it should be set to false.
So, should not it be  if (props.get(MAPRED_DELEGATION_TOKEN) != null) {
, - For trunk, the config key is already defined as in
{noformat}
src/java/org/apache/hadoop/mapreduce/MRJobConfig.java:  public static final String JOB_CANCEL_DELEGATION_TOKEN = "mapreduce.job.complete.cancel.delegation.tokens";
{noformat}
- Also, please link if this JIRA to its blockers if any., bq. * I think it should be, if the delegation token exists, then it should be set to false. So, should not it be if (props.get(MAPRED_DELEGATION_TOKEN) != null) {

I think you thought that I am checking the DELEGATION_TOKEN with configuration.However I am not checking with the config. I am checking in the hashtable whether user has set the property are not in the test. If not, I am setting the default value false.
, Ok., bq. the config key is already defined as in mapreduce project(src/java/org/apache/hadoop/mapreduce/MRJobConfig.java). But the patch belongs to common project and it doesn't have defined config key., bq.the config key is already defined as in mapreduce project(src/java/org/apache/hadoop/mapreduce/MRJobConfig.java)

The patch belongs to common project and it doesn't have defined config key., bq. The patch belongs to common project and it doesn't have defined config key.
This is an indication why this patch shoudn't go to the Common project then. If a base project has a knowledge about an upstream module - this is plain wrong!
I missed that during the first review - I think the name of the patch file confused me.

So, it is big no-no. -1, Basically, if you need to have this kind of properties for MR - it should go into concrete implementation of a cluster. I believe this is MRCLuster in this case., I totally agreed with you and It's valid. So I have created separate ticket(MAPREDUCE-1962) for that path and remaining thing keeping as it is., Excluded the mapreduce related content in the patch., +1, +1 patch looks good., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12450293/HADOOP-6875.patch
  against trunk revision 966919.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated 1 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h4.grid.sp2.yahoo.net/629/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h4.grid.sp2.yahoo.net/629/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h4.grid.sp2.yahoo.net/629/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-h4.grid.sp2.yahoo.net/629/console

This message is automatically generated., Going to commit it because all javadoc warnings seem to be coming from security related classes. Current patch is unlikely to introduce any of those., I have committed this to the trunk and 0.21 branch. Thanks Vinay.]