[Fixing the storage into the hashtable brings up another issue: thread ids seem to get recycled such that multi-threaded applications using threads with limited lifetime might crash when spawning new threads, i.e. insertion of thread ids into a hashtable is useless. And it is not necessary because AttachCurrentThread can easily be called multiple times for already attached threads without performance penalty (according to documentation basically a no-op).
On the other hand, the library should also contain a function that calls DetachCurrentThread to avoid leaks (of course, no big deal for applications that use a relatively small number of threads or a thread pool)., Christian, could you please submit your patch for this issue?, I attached the patch., +1, +1

http://issues.apache.org/jira/secure/attachment/12361454/libhdfs.patch applied and successfully tested against trunk revision r554811.

Test results:   http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/389/testReport/
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/389/console, I just committed this.  Thanks, Christian!, Integrated in Hadoop-Nightly #152 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/152/])]