[c10416_20140321.patch: renews expired tokens., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12636165/c10416_20140321.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-auth:

                  org.apache.hadoop.security.authentication.client.TestPseudoAuthenticator

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3694//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3694//console

This message is automatically generated., Oops, forgot to remove the test for showing the bug in HADOOP-10417.

c10416_20140322.patch, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12636205/c10416_20140322.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-auth.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3695//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3695//console

This message is automatically generated., Here is the behavior change:
- If client provides a non-expired token in the request, client will be authenticated by the token.  The patch does no change on this case.
- Consider client provides an expired token in the request:
-* Without the patch,
-** if anonymous is enabled, the client is authenticated as anonymous (but there is no token in the response; see HADOOP-10417).
-** If anonymous is disabled, client will get AuthenticationException("Anonymous requests are disallowed").
-* With the patch, no matter anonymous is enabled or not, user will be authenticated by the (expired) token.

I believe the behavior after the patch is more desirable., [~tucu00] and [~daryn], please see if you have comments on the patch., {quote}
With the patch, no matter anonymous is enabled or not, user will be authenticated by the (expired) token.
{quote}
Why are we getting rid of the ability to disable anonymous access?, > Why are we getting rid of the ability to disable anonymous access?

No, the patch does not getting rid of the ability to disable anonymous access.  If anonymous is enabled and there is no token in the request, the client will get AuthenticationException("Anonymous requests are disallowed")., > With the patch, no matter anonymous is enabled or not, user will be authenticated by the (expired) token.

This is the similar to "no matter anonymous is enabled or not, user will be authenticated by the value of user.name parameter, if it presents in the request."

I should mention the following case:
-  If client does not provide a token in the request, the patch does no change., [~szetszwo], I don't think the propose patch is correct. The auth-cookie is set by the AuthenticationFilter when a handler authenticates the user. The purpose of the cookie is not to trigger authentication every time (we assume authentication is expensive). Once the cookie expires, the user must present again his/her/its credentials (in the case of pseudo via user.name query string parameter). Using the cookie itself as the credentials is wrong., > ... Once the cookie expires, the user must present again his/her/its credentials (in the case of pseudo via user.name query string parameter). Using the cookie itself as the credentials is wrong.

[~tucu00], if anonymous is enabled, the expired cookie will be ignored and the client will be authenticated as anonymous.  The client won't be able to authenticated using user.name.  This is the problem.

If using the cookie itself as the credentials is wrong, we probably should return an error for expired cookie.  However, this will change the behavior for both secure and non-secure setting., Revised summary and description., bq. if anonymous is enabled 

Then user.name should never be expected, processed. 

May be that is the problem we are seeing, no?, > Then user.name should never be expected, processed. 

Then, how to check file permission?  Simple authentication is useful for preventing accidental deletion of other users' files., disable anonymous if you want the user name.,  > disable anonymous if you want the user name.

How to view NN web ui?, AFAIK the NN web ui, in non-secure mode was always getting DrWho as user. If you want to 'personalize it' then a field asking the username  and then using that value for the 'user.name=' query string would do. But, on its own the browser won't know the user.name., Sorry, it is Ooize web ui, according to [~bowenzhangusa]., bq. > disable anonymous if you want the user name.
bq. How to view NN web ui?

Another illustration of why BASIC auth should have, or should be, used for non-anonymous auth., if you want to use BASIC you have to have, on the server side a connection to a user/password store (ie LDAP). Oozie has a simple non-prod example of that.

Bowen, to solve your original problem (in Oozie), I think the best way will be to try to reproduce it as I'm not able to fully understand what is the problem based on the info provided. Would you please indicate the exact Apache Hadoop and Apache Oozie versions (or commit from SVN/GIT you built them), the Oozie configs and the commands that are failing?
, No backend password system is required if you want insecure/non-anonymous via BASIC.  The password is irrelevant.  All you care about is the username the user entered., got it, that seems like a nice improvement., How about returning an error to client if the token is expired?

(revised description),   I think it is a valid use case that same clients do not want to fallback to anonymous user if the token is expired, even if the server is configured to allow anonymous access.
  
  One possible approach to allow that without breaking compatibility would be to add an optional parameter in the request, where client can specify 'nonanonymous'. On receiving this, the server will not fallback to anonymous if the token has expired, instead it will throw an exception.

Thoughts?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12636205/c10416_20140322.patch
  against trunk revision 7f6ed7f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4859//console

This message is automatically generated., Just checked the code, I think that the current behavior has reasonable semantic.

The {{AuthenticationFilter}} sets the expiration time of the HTTP cookie the same as the expiration time of the token. The client should reinitiate the authentication process once it founds its HTTP cookie is expired., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12636205/c10416_20140322.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6371/console |


This message was automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12636205/c10416_20140322.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6373/console |


This message was automatically generated.]