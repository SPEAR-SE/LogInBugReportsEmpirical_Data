[Job's configuration is also required for _user-name_, _job-name_ and _user-log-location_. Does it make sense to fix (finalize) *hadoop.job.history.location* during JobHistory initialization (JobHistory.init())?, Also the history filesystem should be finalized., Attaching a patch that should fix the issue. This patch determines the FileSystem for {{hadoop.job.history.location}} during init and uses this filesystem everywhere instead of computing it everytime. Result of test-patch
{code}
 [exec] -1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     -1 tests included.  The patch doesn't appear to include any new or modified tests.
     [exec]                         Please justify why no tests are needed for this patch.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
{code}

Test case is bit tricky as JobClient itself uses the job's fs info to upload job files. Ideally the testcase should hack the jobclient code to upload files with faulty *fs.default.name*.

Note that some part of HADOOP-5328 is used here. , Looks like there are other places where something similar is done.  
# JobInProgress.initTasks() does 
  ## {{FileSystem fs = sysDir.getFileSystem(conf);}}
  ## {{ FileSystem fileSys = tmpDir.getFileSystem(conf);}}
# JobInProgress.garbageCollect() does
   ##  FileSystem fs = tempDir.getFileSystem(conf);
   ##  FileSystem fileSys = tmpDir.getFileSystem(conf);

Searching for 'getFileSystem' in src/org/apache/hadoop/mapreduce reveals places there this is flawed.  , Incorporated in HADOOP-5737.]