[Thanks for reporting the issue. Looks like it's a dup of HADOOP-12862, {code}
/*
 * Should SSL be used to connect to the server
*/
public static final String LDAP_USE_SSL_KEY = LDAP_CONFIG_PREFIX + ".ssl";

in setConf:
useSsl = conf.getBoolean(LDAP_USE_SSL_KEY, LDAP_USE_SSL_DEFAULT);
// we set this to true in our config (core-site.xml)
keystore = conf.get(LDAP_KEYSTORE_KEY, LDAP_KEYSTORE_DEFAULT);
keystorePass = getPassword(conf, LDAP_KEYSTORE_PASSWORD_KEY,
LDAP_KEYSTORE_PASSWORD_DEFAULT);

in getDirContext
// Set up SSL security, if necessary
if (useSsl)

{ env.put(Context.SECURITY_PROTOCOL, "ssl"); System.setProperty("javax.net.ssl.keyStore", keystore); System.setProperty("javax.net.ssl.keyStorePassword", keystorePass); }
{code}

+++++++++++++

changed in yarn-env.sh (for RM)
YARN_RESOURCEMANAGER_OPTS="... -Djavax.net.ssl.trustStore=<path-to-keystore.jks>  -Djavax.net.ssl.trustStorePassword=XXXXX"

/etc/init.d/resourcemanager restart

yarn rmadmin -getGroups <myusername>
<myusername> : groupA groupB groupC, Yeah that's a workaround. But I'd suggest stay away from specifying trust store password in the command line parameter. That's against security best practices., if you are interested, please help reviewing my patch at HADOOP-12862. Thank you., I'm going to resolve this one as a dup. Please reopen if this is not the case. Otherwise I'd like to invite you to review HADOOP-12862. Thank you!]