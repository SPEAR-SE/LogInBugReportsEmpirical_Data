[all of the table operations (except createTableAsync) are "semi-synchronous", meaning that they wait until the first region in the table changes state and then they return letting the rest of the table be updated in the background.

(Of course createTable only deals with one region so it is completely synchronous).

The reasons for semi synchronous operation are:
- such an operation on a large table could take a long time to complete
- it is likely that the rpc would timeout before the operation completed.

Using Thread.sleep could be unreliable as these operations take an indeterminate amount of time.
What you might do is open a HTable on the META region (HConstants.META_TABLE_NAME) and scan HConstants.COL_REGIONINFO_ARRAY which will give you back HRegionInfo objects (as bytes).

Find the table in question by comparing your table name to regionInfo.getTableDesc().getName()

If adding or deleting columns, check regionInfo.getTableDesc().hasFamily()

If changing table on/off line check regionInfo.isOffline()

If any of the regions don't meet the criteria, close the scanner, sleep and rescan., This is the intended behavior since the administrative operations can take a long time to execute, it is very likely  that the rpc would time out.]