[[~cmccabe], [~andrew.wang]: Any thoughts on how to improve it? How about extending NativeIO for this and keeping what we have today as fallback?, Hey Kihwal,

We could definitely use {{lstat(2)}} system call instead of {{stat(1)}}, it just requires a bit more work. {{lstat(2)}} only provides the uid and gid, so these would need to be translated into string names via {{getpwnam}} and {{getgrname}}. It'd also require calling {{readlink(2)}} to get the link target if it's a link. I agree we can keep the existing behavior as a fallback for not having native code.

As a side note, all of this should really be a fallback for JDK7's lstat, which we theoretically should be allowed to use since JDK6 is EOL., I think a JNI implementation for JDK6 would not be too difficult to create.  It's probably just a few lines of code., I think the new Globber added in HADOOP-9817 causes listStaus() of parents when globStatus() is called as in the Hive use case. The large number of files were actually in the parent directory of the data directory.  While fixing stat will make it go faster, the Globber needs to be fixed as well to avoid unnecessary stats., yes, I think the globber can be fixed to avoid listStatus on non-wildcard path components.  It will be a little tricky to do this while not breaking support for symlinks, but I think it can be done., We've also seen a performance impact for Hive queries caused by the {{Globber}} changes.  (Thanks to [~gopalv] for providing some profiling data.)  Is it best to revert so that we unblock people who are seeing this performance impact, or do we expect this can be fixed quickly?, I have a patch for this.  I'll post it later today., Great!  Thanks for the quick update, Colin., Here's a patch which fixes this issue.

We should never call listStatus unless it's necessary.

I added a test for listing a path in {{/.reserved/.inodes}}.

I removed the "globbing symlinks" tests for now, since the behavior of globStatus with symlinks is changing in HADOOP-9984., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12604835/HADOOP-9981.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.fs.TestPath
                  org.apache.hadoop.cli.TestHDFSCLI

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3117//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3117//console

This message is automatically generated., Fix an issue with using paths that contained globber metacharacters., Hi Colin, thanks for the patch. Review as follows:

Nitty: lines longer than 80 chars:
{code}
        if ((componentIdx < components.size() - 1) && (!globFilter.hasPattern())) {
...
            FileStatus childStatus = getFileStatus(new Path(candidate.getPath(), component));
{code}

* Let's use @Ignore annotations on the tests instead of removing them, I assume we want to add them back in eventually?
* I think we have an existing bug in the paths of the returned FileStatus. When going through a glob, it sets the path to the built-up path which can include symlinks, while for a non-glob it's using {{getFileStatus}} which has a resolved path. I'm pretty sure FileStatus are supposed to have a resolved path. This is complicated by how PathFilter still needs to compare against the complete built-up path; maybe we could do something like:
{code}
if (filter.accept(new Path(prefix, status.getPath().getName()))) {
{code}
* Our symlink resolution right now is inconsistent: listStatus does not resolve results, getFileStatus does. Shouldn't this be getFileLinkStatus? Or are we waiting to fix this again in HDFS-9877 when it gets recommitted? I know HADOOP-9972 with the new APIs is coming down the pipe, so I just wanted to bring this up.
* I'd like to see tests that would have caught these correctness concerns: that resolved paths are returned correctly (with and without a wildcard), that PathFilters are matching against built-up paths as expected (with and without wildcards), and the looping {{/a/b -> ..}} symlink case you mentioned in a comment. Whether it's a terminal or intermediate wildcard also matters here. There are unfortunately a lot of edge cases.
* Also noticed that we have a little duplication in TestGlobPaths: {{trueFilter}} is the same as {{AcceptAllFilter}}. {{AcceptPathsEndingInZ}} is also only used in the removed test., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12604875/HADOOP-9981.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3119//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3119//console

This message is automatically generated., bq. lines longer than 80 chars

fixed

bq. Let's use @Ignore annotations on the tests instead of removing them, I assume we want to add them back in eventually?

good idea.

bq. Our symlink resolution right now is inconsistent: listStatus does not resolve results, getFileStatus does...

Let's tackle the symlinks semantics for globStatus as part of HADOOP-9984.  This JIRA is just about the efficiency concerns.

bq. Also noticed that we have a little duplication in TestGlobPaths: trueFilter is the same as AcceptAllFilter. AcceptPathsEndingInZ is also only used in the removed test.

I added back in the tests with an {{ignore}}, and made {{trueFilter}} an instance of {{AcceptAllFilter}}., +1 thanks Colin. I'm alright with punting the semantics questions to HADOOP-9984, I'll cross-post my review feedback there., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12605058/HADOOP-9981.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3123//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3123//console

This message is automatically generated., committed.

[~kihwal], can you validate that this fixes your issue with {{LocalFileSystem}}?

There are other optimizations we could do, but if possible, I'd like to hold off for now since a lot of this will improve with JDK7 (see HADOOP-9769), SUCCESS: Integrated in Hadoop-trunk-Commit #4466 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4466/])
HADOOP-9981. globStatus should minimize its listStatus and getFileStatus calls.  (Contributed by Colin Patrick McCabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1526297)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Globber.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12605058/HADOOP-9981.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3124//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3124//console

This message is automatically generated., FAILURE: Integrated in Hadoop-Yarn-trunk #344 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/344/])
HADOOP-9981. globStatus should minimize its listStatus and getFileStatus calls.  (Contributed by Colin Patrick McCabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1526297)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Globber.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1560 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1560/])
HADOOP-9981. globStatus should minimize its listStatus and getFileStatus calls.  (Contributed by Colin Patrick McCabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1526297)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Globber.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1534 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1534/])
HADOOP-9981. globStatus should minimize its listStatus and getFileStatus calls.  (Contributed by Colin Patrick McCabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1526297)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Globber.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
]