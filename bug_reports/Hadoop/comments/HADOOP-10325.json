[fix typo , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12627016/HADOOP-10325.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 2 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3534//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3534//console

This message is automatically generated., btw, I ran a local test on v2 of this and it seems to work pretty well., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12627039/HADOOP-10325.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 2 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3536//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3536//console

This message is automatically generated., I looked at the previous and new proposed behavior for this patch, and I don't think either are really counting the number of Javadoc warnings. The old behavior looks at the full maven output, chops off everything after the first "Javadoc Warnings", and then counts anything with "[WARNING]" and "warning" in it. Unfortunately, that includes javac warnings as well. The new behavior doesn't bother with the chop, and thus results in counting more warnings, but still not the actual number of Javadoc warnings.

I tried this, and it seems to work more reliably:

{code}
cat patchJavadocWarnings.txt | egrep "^[0-9]+ warnings$" | awk '{sum+=$1} END {print sum}'
{code}

We could also be more sure by doing something like "egrep -A 1 ..." and making sure the same number of " # warnings" lines matches the number of lines with "[WARNING] Javadoc Warnings" (i.e., each "# warning" line has an immediately following "[WARNING] Javadoc Warnings")., OK.  I agree that summing the 'N warnings' messages is probably best.  I still want to provide a diff between old and new warning files to make things easier on developers-- even if it may contain a few spurious entries in a patch that adds javac warnings., That'd definitely be nice, agree. It's unfortunate that the # of lines per warning is variable, else we could do very accurate diffs with {{grep -A}}.

I'm fine with whatever you come up with diff wise though, assuming it mostly works., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12627179/HADOOP-10325.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 2 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3539//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/3539//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3539//console

This message is automatically generated., Sorry about the RAT warnings, I just fixed the missing license header in the test file.

One q about the diff though, can we do a bit better than diffing the full maven outputs? Maybe I missed where it filters, but a full diff doesn't seem that helpful. I was thinking that a {{grep -A $(( 3 * numWarnings )) }} for each "# warnings" line thing would be accurate enough, or we just do like the old script and chop+grep and diff that., Good idea.  Let me grep for "warning" first.  I'll make it case insensitive to avoid being too selective.  (The reason why I think case insensitive is better is that I think it's better to allow a little spew through than to chop something really helpful.)  The main point is just to let us find the actual problem in 30 seconds or less, rather than having to search every warning or download logs., +1 pending Jenkins, nice work Colin! I'm looking forward to a more intelligent QA bot., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12627228/HADOOP-10325.004.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 2 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3540//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3540//console

This message is automatically generated., FAILURE: Integrated in Hadoop-trunk-Commit #5115 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5115/])
HADOOP-10325. Improve Jenkins Javadoc warnings from test-patch.sh (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565010)
* /hadoop/common/trunk/dev-support/test-patch.sh
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk #473 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/473/])
HADOOP-10325. Improve Jenkins Javadoc warnings from test-patch.sh (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565010)
* /hadoop/common/trunk/dev-support/test-patch.sh
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1665 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1665/])
HADOOP-10325. Improve Jenkins Javadoc warnings from test-patch.sh (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565010)
* /hadoop/common/trunk/dev-support/test-patch.sh
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1690 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1690/])
HADOOP-10325. Improve Jenkins Javadoc warnings from test-patch.sh (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1565010)
* /hadoop/common/trunk/dev-support/test-patch.sh
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
]