[Attached patch solves both issues:
1. Makes RetryProxy able to retry subclasses of given Exceptions
2. Adds missing methods to list of supported to retry, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  17m 53s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 3 new or modified test files. |
| {color:green}+1{color} | javac |   7m 56s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 57s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 24s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   1m 27s | There were no new checkstyle issues. |
| {color:red}-1{color} | whitespace |   0m  0s | The patch has 2  line(s) that end in whitespace. Use git apply --whitespace=fix. |
| {color:green}+1{color} | install |   1m 28s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   2m 38s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:red}-1{color} | common tests |  22m 11s | Tests failed in hadoop-common. |
| {color:green}+1{color} | tools/hadoop tests |   0m 14s | Tests passed in hadoop-aws. |
| | |  64m 45s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.fs.TestSymlinkLocalFSFileSystem |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12752222/HADOOP-12353.001.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / eee0d45 |
| whitespace | https://builds.apache.org/job/PreCommit-HADOOP-Build/7522/artifact/patchprocess/whitespace.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/7522/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-aws test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/7522/artifact/patchprocess/testrun_hadoop-aws.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/7522/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf902.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/7522/console |


This message was automatically generated., Thanks for your contribution Mariusz! Your changes seem sensible to me (although to be fair, this area of the code isn't too familiar to me). One thing I observed was that even without your changes to {{RetryPolicies}} , the new test that you have added {{TestRetryProxy#testRetryBySuperclassException}} passes. Do you experience the same thing?, Thanks for checking for this - I changed the test method after implementation and this caused test to pass without patched code. I attach corrected patch., Hi [~szczeles],

Just giving you a heads up: recently, most active development and Hadoop committer attention for S3 has been going to the s3a FileSystem, which uses the official Amazon SDK, rather than to s3n(ative), which uses Jets3t. If you can move to 2.7, I'd recommend you to try s3a.
, \\
\\
| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  17m 44s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 3 new or modified test files. |
| {color:green}+1{color} | javac |   7m 46s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  10m  0s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 24s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   1m 28s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  1s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 29s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 34s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   2m 41s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  22m 54s | Tests passed in hadoop-common. |
| {color:green}+1{color} | tools/hadoop tests |   0m 15s | Tests passed in hadoop-aws. |
| | |  65m 22s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12752422/HADOOP-12353.002.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / a4d9acc |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/7530/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-aws test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/7530/artifact/patchprocess/testrun_hadoop-aws.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/7530/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/7530/console |


This message was automatically generated., [~Thomas Demoor] thanks for information, unfortunately we are sticked to 2.5 (Cloudera CDH 5.3.1) where s3n is the only stable solution, Thanks for the patch Mariusz! It seems {{rename}} was changed to {{copy}} during HADOOP-4687 in {{NativeFileSystemStore}}. Could you please remove {{rename}}? Also, any reason why you left out {{list}}? Should we also do this for S3FileSystem.java ? 
The other changes to great to me. I'm happy to commit once you make these changes / explain if I am missing something.

[~Thomas Demoor] Doesn't seem like we use the same retry code for S3A. Please correct me if I am wrong, I'm happy to have better connectivity handling, but worried that this patch  is changing retry policy handling from explicit type match to subclass --with implications for all classes setting up the retry policy. 

I'd thought initially that re-ordering definitions of policies such that most-generic comes last would suffice, but it won't as the order of {{Map.keySet()}} is undefined.

Someone who knows the retry logic needs to review this. At the very least, I'd retain the initial map lookup, and only if there was no match fall back to the keyset scan. That way, explicit policies are guaranteed to get picked up first
, Thanks for the review Steve! The places (other than S3) RetryPolicy seems to be used is 
1. [{{ServerProxy.createRetryPolicy}}|https://github.com/apache/hadoop/blob/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/ServerProxy.java#L83] and 
2. [{{RMProxy.createRetryProxy}}|https://github.com/apache/hadoop/blob/trunk/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java#L253]
The exception classes which have NO subclasses are {{NoRouteToHostException}}, {{UnknownHostException}}, {{ConnectTimeoutException}}, {{RetriableException}}, {{NMNotYetReadyException}}. 
The exception classes which have subclasses are: {{EOFException}}, {{ConnectException}} and {{SocketException}} . Until now, subclasses of these 3 classes would not cause RETRY_FOREVER. I don't know if the original intention was that. [~jianhe] Could you please clarify?
Just to be sure I grepped for it in hive and pig code and didn't find any instances. 

, bq. I don't know if the original intention was that
No intention.
bq. At the very least, I'd retain the initial map lookup, and only if there was no match fall back to the keyset scan.
I think Steve's suggestion makes sense to me, at least user has a way to explicit control the sub class  , Thanks for your reply Jian! 

Very well then! Mariusz! Could you please create a new RetryPolicy similar to {{ExceptionDependentRetry}} ? We can use that in {{S3FileSystem}} and {{S3NFileSystem}} and keep the existing behavior for ServerProxy and RMProxy, Hi Mariusz! Have you had a chance to look at this?, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 3 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 52s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 8m 1s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 8m 37s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 59s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 23s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 32s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 18s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 6s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 19s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 1m 49s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 7m 51s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 7m 51s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 8m 38s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 8m 38s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 1m 1s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 19s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 26s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 30s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 6s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 17s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 19m 29s {color} | {color:red} hadoop-common in the patch failed with JDK v1.8.0_66. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 0m 12s {color} | {color:green} hadoop-aws in the patch passed with JDK v1.8.0_66. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 7m 36s {color} | {color:green} hadoop-common in the patch passed with JDK v1.7.0_91. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 0m 11s {color} | {color:green} hadoop-aws in the patch passed with JDK v1.7.0_91. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 21s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 87m 27s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Failed junit tests | hadoop.ipc.TestIPC |
| JDK v1.8.0_66 Timed out junit tests | org.apache.hadoop.http.TestHttpServerLifecycle |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12752422/HADOOP-12353.002.patch |
| JIRA Issue | HADOOP-12353 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux dfeaf8538552 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 28bd138 |
| Default Java | 1.7.0_91 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_66 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_91 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8343/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_66.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HADOOP-Build/8343/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_66.txt |
| JDK v1.7.0_91  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8343/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-tools/hadoop-aws U: . |
| Max memory used | 76MB |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8343/console |


This message was automatically generated.

, I'm looking at this. 

I see that it's trying to fix a problem —but I'm scared of making any changes to s3n these days. We think we are fixing bugs, but really we are moving them. 

So I'm an =0 here, not because there's anything wrong with the patch that I can see -only that I'd like s3n to be left alone and s3a being the place where we work on improving the s3 experience.

Looking at s3a, I don't see anything implemented in terms of retry policy. Would anyone be willing to start on doing something there for those initial connects, lists and seeks?, Very well then. I'm closing as won't fix. If someone wants to fix it really, please feel free to re-open this.
This is just a bad precedent. We are putting this code in releases, we admit there's a problem, we get patches from a new contributor (kudos Mariusz), and we just drop the ball on accepting them. , [~stevel@apache.org]: s3a does retry as the AWS SDK has a default exponential backoff retry policy that retries IO, HTTP 5xx, ..(http://docs.aws.amazon.com/AWSJavaSDK/latest/javadoc/com/amazonaws/ClientConfiguration.html#DEFAULT_RETRY_POLICY). We could make this configurable.

[~raviprak]: You make a valid point but s3n is unmaintained code that's planned to be deprecated (people are focusing on s3a). A previous harmless-looking s3n patch broke things in an unexpected way hence I understand [~stevel@apache.org]'s point as well. He didn't -1 the patch, he simply doesn't want to be held responsible if it breaks things, but someone else might.]