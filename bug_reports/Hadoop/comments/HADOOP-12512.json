[[~Prabhu Joseph], since you've already done the work, could you post a patch?

Checkout a clean version of trunk, make your change, then run:

{noformat}
git diff trunk > HADOOP-12512.001.patch
{format}

Add the patch as a file to the JIRA (under the More pull-down) and then click the Patch Submitted button.

It might not be a bad idea to first run:

{noformat}
git diff trunk --check
{noformat}

just to make sure Jenkins won't complain about whitespace.  Let me know if you need any help., Patch, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 6s {color} | {color:blue} docker + precommit patch detected. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 2s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 4m 19s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 4m 6s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 15s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 13s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 35s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 53s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 2s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 1m 26s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 4m 16s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 4m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 4m 9s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 4m 9s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 14s {color} | {color:red} Patch generated 3 new checkstyle issues in hadoop-common-project/hadoop-common (total was 176, now 177). {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 13s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 45s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 51s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 59s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 6m 1s {color} | {color:red} hadoop-common in the patch failed with JDK v1.8.0_60. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 6m 23s {color} | {color:red} hadoop-common in the patch failed with JDK v1.7.0_79. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 23s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 43m 13s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.7.0_79 Failed junit tests | hadoop.ipc.TestIPC |
|   | hadoop.metrics2.sink.TestFileSink |
|   | hadoop.metrics2.sink.TestFileSink |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.7.1 Server=1.7.1 Image:test-patch-base-hadoop-date2015-10-27 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12768930/HADOOP-12512.001.patch |
| JIRA Issue | HADOOP-12512 |
| Optional Tests |  asflicense  javac  javadoc  mvninstall  unit  findbugs  checkstyle  compile  |
| uname | Linux 4a7655589616 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HADOOP-Build/patchprocess/apache-yetus-b9c369f/dev-support/personality/hadoop.sh |
| git revision | trunk / 96677be |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_60 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_79 |
| findbugs | v3.0.0 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/7949/artifact/patchprocess/diff-checkstyle-hadoop-common-project_hadoop-common.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/7949/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_60.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/7949/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_79.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HADOOP-Build/7949/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_60.txt https://builds.apache.org/job/PreCommit-HADOOP-Build/7949/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_79.txt |
| JDK v1.7.0_79  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/7949/testReport/ |
| Max memory used | 225MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/7949/console |


This message was automatically generated.

, Let me make sure I understand the issue.  You have a custom root logger that uses an optional config file.  When Log4j instantiates your logger, you add the optional config file to the list of default resources on the Configuration.  Then, when the FsShell starts, it tries to load your config file, fails, and throws an exception.  Is that correct?

Why are you adding your file as a default resource and not a regular resource (addResource()) ?  That's not the source of the issue, but I'm curious.

Looking at the code, it looks to me like the first thing FsShell does is load all resources with quiet=false, meaning at that time there shouldn't be anything optional in the resource list.  All subsequent resource loading is done with quiet=true, allowing optional resources.  It seems to me the issue is that you're adding the resource too early.  Is it possible to do the initialization of your class lazily so that it doesn't go hunting for resource files until it's past the FsShell startup?, Yes [~templedf], You are correct. I am using custom Appender and since Logger is a static class and so it will be the first one gets loaded. 

The configuration values are default, so we use adddefaultResources. We don't want to override the values.

When the FsShell loads all resources initially with quiet=false, the custom configuration file is already been put into defaultResources list by the custom Appender and it does not fail as we had quiet=true, but FsShell fails.

When Configuration is quiet during loading of resources, it has to remove the entry as well. Else FsShell is looking for that eventhough it does not need that right.

There is some logic bug in Configuration class in the way it handles the defaultResources list and quiet mode.

1. Either mandatory / optional field has to be resource wise. [OR}
2. defaultResources list should not be shared among classes [OR]

3. Simple one is to remove from list if config is not on classpath and quiet=true.







, The risk with removing the config from the list is that if one of the core config files is missing, you'll remove it during your appender's initialization.  The FsShell therefore won't fail os init, leaving the failure to be discovered from some odd side-effect later., Yes that solution is risk. Maybe how about the below ones:

1. Either mandatory / optional field has to be resource wise. [OR]
2. defaultResources list should not be shared among classes 
]