[ InterfaceAudience.LimitedPrivate is one of the most useless classifications we have.  Just make it public and be done with it. , ..so change the title. And yes, scoping things down is wrong. private-in-project, yes, but restricted outside is unfair to other apps, and you've just made a commitment to some form of API stability.

Leaving it to others to cover whether this API is stable enough to make public., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 32s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 28s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 33s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   1m  5s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 31s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 40s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | common tests |  21m 57s | Tests passed in hadoop-common. |
| | |  58m 44s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12733227/HADOOP-11980.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 03a293a |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6703/artifact/patchprocess/testrun_hadoop-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/6703/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6703/console |


This message was automatically generated., {quote}
Leaving it to others to cover whether this API is stable enough to make public.
{quote}

Nothing jumps out as problematic. Some of hte methods could use better javadocs., I think it's concerning that the code for generating and reading HDFS {{.meta}} file headers is now in a class we're considering marking {{\@InterfaceAudience.Public}}.  This seems like an internal detail of HDFS that we'd rather not expose.  Perhaps we could split this off into a separate class., The API seems pretty generic to me (calculate/verify checksums, instantiate from (byte[], offset) or input stream, write/get header info, etc). If there is any HDFS specific logic, you're right, we should decouple it. Can you please elaborate on changes you think would be best?, I would like to move {{DataChecksum#writeHeader}}, {{DataChecksum#getHeader}}, {{DataChecksum#newDataChecksum}}, etc. into a private class for HDFS.  Perhaps it could be a subclass.  These functions govern the format of HDFS meta files, which we would like to keep private from public users.]