[There is a race condition in TestSinkQueue#testConcurrentConsumers between a new thread created in newSleepingConsumerQueue and the first assert shouldThrowCME, hence the test fails intermittently. Each time shouldThrowCME runs before the new thread receives a consume callback the test will fail.

The easiest way to consistently repro the problem is to add a short Thread.sleep in the newSleepingConsumerQueue thread. 
, Attaching the patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12553425/HADOOP-9036.branch-1-win.testsinkqueue.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1737//console

This message is automatically generated., +1

Is 0.1 second enough?, bq. Is 0.1 second enough?
Thanks for reviewing Chuan. It should be enough. ,  I feel this kind of sleep based approach in tests causes them to be brittle and prone to intermittent failures. I will post a comment back when I get a chance to see if this issues can be solved without relying on sleep., bq. I feel this kind of sleep based approach in tests causes them to be brittle and prone to intermittent failures. I will post a comment back when I get a chance to see if this issues can be solved without relying on sleep.
Thanks Suresh for the comment. I went with a sleep because it was the simplest fix. I'll also take a look for a possible correct solution., It is not obvious how to solve this differently given the test scenario. Just to clarify, this test failed for me approx 1 in 5 times without the patch. With the patch it did not fail after many runs. I understand your concerns, just wanted to clarify on the fix (mitigation)., Ivan, how about a change like this?, Also we should make this change in branch-1 and bring it into branch-1-win., Thanks Suresh. We still have the race condition though, right? Between {{Thread.Sleep}} and {{shouldThrowCME}}? I personally like the previous mitigation better since it's a simpler fix., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12553669/HADOOP-9036.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1752//console

This message is automatically generated., bq. We still have the race condition though, right? Between Thread.Sleep and shouldThrowCME?
May be I do not understand the problem correctly. I thought if the thread where Consumer is running starts before the rest of the shouldThrowCME() calls, things work fine. That is what the patch I attached is doing., You're right, didn't look into the patch deeply enough. Thanks. Patch looks good, +1, I think this is the same as HADOOP-7292.  How about simply merging it?, agreed. Will fix this as duplicate of HADOOP-7292., Backported HADOOP-7292 patch., Now the real updated patch., +1 patch looks good., Committed the patch to branch-1 and branch-1-win. Thank you Nicholas for the review., Closed upon release of Hadoop 1.2.0.]