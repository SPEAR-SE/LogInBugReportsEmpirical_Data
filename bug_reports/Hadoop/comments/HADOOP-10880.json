[We could do it in a backwards compatible way:

* The new client side logic doing DT would use a header by default.
* The new client side logic doing DT would support a CONFIG switch to force using the querystring (to support old services).
* The server logic doing DT will do header with fallback to querystring (to support old clients)., making it a blocker so we don't release the new HTTP DT stuff without this., Patch moving delegation tokens to a request header. 

On the client side, {{DelegationTokenAuthenticatedURL}} still supports using querystring via a {{setUseHeaderForDelegationToken(boolean)}} method.

On the server side, {{DelegationTokenAuthenticationHandler}} supports delegation token in query string and in request header, request header has precedence. 

This patch applies on top of HADOOP-10771 & HADOOP-10835., I was assuming the plan was to use http authentication itself.   The RFC defined method DIGEST (circa late 90s) prevents sending the password over the wire in plain text.  I'm pretty sure the SASL DIGEST-MD5 client we use at the RPC layer is emitting exactly what goes in the headers during the exchange.

It's also not going to play nice with HA tokens..., rebasing to trunk, Is a cookie generated after authenticating with a token?, only requests authenticated by the authenticatorhandler (ie kerberos...) issue hadoop-auth cookies, requests that present delegation tokens do not issue cookies (actually they issue a expired one to force a flushing)., rebasing to trunk., Is it reasonable to implement this with digest auth now rather than later?  I think you've already got the hooks to do it.  We've already got insecure token in the query string, this would be insecure token in a header, whereas digest will be secure token in a header on par with rpc.  Taking away functionality once it's unleashed is hard and requires complicated backwards compatibility.  When it comes to authentication code, more so than anywhere else, less is better.  It's too easy to make subtle mistakes that compromise the system..., daryn, i've thinking about this. if we do that, how non-java clients will do it? a curl client for example. , I think it's something like this:

{{curl --negotiate --digest --user "token:password" http://nn:50070}}

or to keep it off the cmdline:

{{curl --negotiate -K dtoken.opts http://nn:50070}}

dtoken.opts file:
{{--digest --user "token:password"}}, [~daryn],

I’ve gone the digest approach to see how things would work but I’ve found a few issues with it which I think make the use of digest a moot thing:

Digest typically assumes a challenge with a nonce from the server, the nonce is use to create the hash of the common secret. In our case, we would be doing a proactive digest (we don’t want 2 HTTP calls on every HTTP call using a DT), this means we don’t have a nonce from the server. We could get the server side to use proactively the AuthenticationInfo to provide a nonce in advance, that that would break pipelined requests. We could get the client to issue a nonce and the server honor it, but that would not work without using our client and server that understand that (curl would break).

Even if we sort it out, we have another problem, the DT is an opaque string blob to the client. The DT includes the token identifier and the password, we would have to use the token identifier as the 'user' and the password as the 'password' in creating the Disgest 'user:digest(password)' client header. A curl client would not have a way to break down the DT opaque string into identifier and password.

Another point, when getting, renewing or canceling a DT, we send the full DT opaque string. So using a digest for does not prevent for an attacker to get the full DT.

Given all this, my take is, the current patch that moves the DTs from URL to headers and just use HTTPS.

Thoughts? Am I missing something?
, I've talked with [~daryn] over the phone and he'd be OK on keeping the scope of this JIRA as initially intended, not adding digest stuff to it. For reasons along the lines the ones mentioned in my previous comment., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12661544/HADOOP-10880.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 1261 javac compiler warnings (more than the trunk's current 1260 warnings).

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.ha.TestActiveStandbyElector
                  org.apache.hadoop.ha.TestZKFailoverController
                  org.apache.hadoop.ipc.TestCallQueueManager

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4516//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/4516//artifact/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4516//console

This message is automatically generated., test failures are unrelated, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12661544/HADOOP-10880.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 1261 javac compiler warnings (more than the trunk's current 1260 warnings).

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.ha.TestActiveStandbyElector

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4517//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/4517//artifact/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4517//console

This message is automatically generated., the extra javac warning is expected as a testcase is testing a deprecated method, I'll increment the javac warning count in test-patch by 1 on commit., Latest patch looks pretty good to me. Just a few small comments:

# Lower-case this "O", and upper-case this "f": "useQueryStringforDelegationTOken"
# This comment about the default behavior seems inaccurate, given that the default value for "useQueryStringforDelegationTOken" is "true": 
{code}
+   * By default it is transmitted using the
+   * {@link DelegationTokenAuthenticator#DELEGATION_TOKEN_HEADER} HTTP header.
{code}
# Recommend renaming "getUseQueryStringForDelegationToken" to "shouldUseQueryStringForDelegationToken" or perhaps just "useQueryStringForDelegationToken".

+1 once these are addressed., updated patch addressing [~atm]'s feedback., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12665011/HADOOP-10880.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4570//console

This message is automatically generated., re-uploading, compiles locally., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12665020/HADOOP-10880.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 1263 javac compiler warnings (more than the trunk's current 1262 warnings).

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.ha.TestZKFailoverController
                  org.apache.hadoop.ipc.TestFairCallQueue

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4571//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/4571//artifact/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4571//console

This message is automatically generated., testcases unrelated, committing momentarily., committed to trunk and branch-2., FAILURE: Integrated in Hadoop-Yarn-trunk #663 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/663/])
HADOOP-10880. Move HTTP delegation tokens out of URL querystring to a header. (tucu) (tucu: rev d1ae479aa5ae4d3e7ec80e35892e1699c378f813)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestWebDelegationToken.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestDelegationTokenAuthenticationHandlerWithMocks.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticatedURL.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1854 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1854/])
HADOOP-10880. Move HTTP delegation tokens out of URL querystring to a header. (tucu) (tucu: rev d1ae479aa5ae4d3e7ec80e35892e1699c378f813)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestWebDelegationToken.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticatedURL.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestDelegationTokenAuthenticationHandlerWithMocks.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1880 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1880/])
HADOOP-10880. Move HTTP delegation tokens out of URL querystring to a header. (tucu) (tucu: rev d1ae479aa5ae4d3e7ec80e35892e1699c378f813)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticatedURL.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestWebDelegationToken.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestDelegationTokenAuthenticationHandlerWithMocks.java
, FAILURE: Integrated in Hadoop-trunk-Commit #6163 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6163/])
HADOOP-10880. Move HTTP delegation tokens out of URL querystring to a header. (tucu) (arp: rev 6bf16d115637c7761123e3b92186daa675c4769c)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestWebDelegationToken.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestDelegationTokenAuthenticationHandlerWithMocks.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticatedURL.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #698 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/698/])
HADOOP-10880. Move HTTP delegation tokens out of URL querystring to a header. (tucu) (arp: rev 6bf16d115637c7761123e3b92186daa675c4769c)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestDelegationTokenAuthenticationHandlerWithMocks.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestWebDelegationToken.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticatedURL.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1889 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1889/])
HADOOP-10880. Move HTTP delegation tokens out of URL querystring to a header. (tucu) (arp: rev 6bf16d115637c7761123e3b92186daa675c4769c)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestWebDelegationToken.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestDelegationTokenAuthenticationHandlerWithMocks.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticatedURL.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1914 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1914/])
HADOOP-10880. Move HTTP delegation tokens out of URL querystring to a header. (tucu) (arp: rev 6bf16d115637c7761123e3b92186daa675c4769c)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestDelegationTokenAuthenticationHandlerWithMocks.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticatedURL.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/web/TestWebDelegationToken.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticator.java
]