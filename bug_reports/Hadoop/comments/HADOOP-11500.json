[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12693761/hadoop-11500-001.patch
  against trunk revision ee7d22e.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5445//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5445//console

This message is automatically generated., [~ted_yu] thanks for your contribution. The fix itself looks good to me. 
Minor nits: How about moving line-trailing dots to head of the line like this? I know that this is not related to the fix itself, but it's good timing to fix it.

{code}
    try (InputStream is = ApplicationClassLoader.class.getClassLoader()
        .getResourceAsStream(PROPERTIES_FILE);) {
{code}, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12693886/hadoop-11500-002.patch
  against trunk revision 786dbdf.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5453//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5453//console

This message is automatically generated., +1, Committed this to trunk and branch-2. Thanks [~ted_yu] for your report and contribution., FAILURE: Integrated in Hadoop-trunk-Commit #6914 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6914/])
HADOOP-11500. InputStream is left unclosed in ApplicationClassLoader. Contributed by Ted Yu. (ozawa: rev 825923f7b9a8771ff5b3f08646e96304d1acc367)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, LGTM. Thanks Ted for finding and fixing it! Thanks Tsuyoshi for the review., FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #82 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/82/])
HADOOP-11500. InputStream is left unclosed in ApplicationClassLoader. Contributed by Ted Yu. (ozawa: rev 825923f7b9a8771ff5b3f08646e96304d1acc367)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #816 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/816/])
HADOOP-11500. InputStream is left unclosed in ApplicationClassLoader. Contributed by Ted Yu. (ozawa: rev 825923f7b9a8771ff5b3f08646e96304d1acc367)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2014 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2014/])
HADOOP-11500. InputStream is left unclosed in ApplicationClassLoader. Contributed by Ted Yu. (ozawa: rev 825923f7b9a8771ff5b3f08646e96304d1acc367)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #79 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/79/])
HADOOP-11500. InputStream is left unclosed in ApplicationClassLoader. Contributed by Ted Yu. (ozawa: rev 825923f7b9a8771ff5b3f08646e96304d1acc367)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, ApplicationClassLoader is used by several classes in mapreduce and yarn projects.
I think this should be of major priority., FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #83 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/83/])
HADOOP-11500. InputStream is left unclosed in ApplicationClassLoader. Contributed by Ted Yu. (ozawa: rev 825923f7b9a8771ff5b3f08646e96304d1acc367)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, Sounds reasonable. Thanks for the change, Ted., FAILURE: Integrated in Hadoop-Mapreduce-trunk #2033 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2033/])
HADOOP-11500. InputStream is left unclosed in ApplicationClassLoader. Contributed by Ted Yu. (ozawa: rev 825923f7b9a8771ff5b3f08646e96304d1acc367)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java
, The code in the patch is not supported by java6.
After I put the patch to hadoop-2.6.0 src , the build with maven fail. 
I found reason is the code  in the patch is not supported by java6. 
To solve the problem, firstly JAVA_HOME should be set to java7 home; secondly modify maven-compiler-plugin to 1.7 in POM file hadoop-project/pom.xml as follows:

--- a/hadoop-project/pom.xml     2014-11-14 05:09:25.000000000 +0800
+++ b/hadoop-project/pom.xml      2015-03-26 18:59:49.000000000 +0800
@@ -938,8 +938,8 @@
           <artifactId>maven-compiler-plugin</artifactId>
           <version>2.5.1</version>
           <configuration>
-            <source>1.6</source>
-            <target>1.6</target>
+            <source>1.7</source>
+            <target>1.7</target>
           </configuration>
         </plugin>
         <plugin>
@@ -1241,8 +1241,8 @@
             <artifactId>maven-compiler-plugin</artifactId>
             <configuration>
               <fork>true</fork>
-              <source>1.6</source>
-              <target>1.6</target>
+              <source>1.7</source>
+              <target>1.7</target>
               <compilerArguments>
                 <Xlint/>
                 <Xmaxwarns>9999</Xmaxwarns>, Hi [~shurong.mai], if you want to backport this to 2.6 you'd need to use an explicit close() call at the end.]