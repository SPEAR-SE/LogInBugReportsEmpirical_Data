[Does this anomaly happen in all test-cases? Or only in TestMiniMRWithDFSWithDistinctUsers?, Also, another thing to check is whether it happens only in when using the Mini* clusters, and not in single-node cluster etc., bq. Does this anomaly happen in all test-cases? Or only in TestMiniMRWithDFSWithDistinctUsers? 
This happens whenever the users for jobtracker and job are different. For example, the jobtracker runs as _foo_ and a user _bar_ submits a job. So what happens in these testcase is that
# user bar submits a job
# jobtracker (running as foo) tries to do a job.init()
# fs does read-permission check and uses {{ugi = UserGroupInformation.getCurrentUGI()}} which points to user bar. 

Ideally the ugi should point to jobtracker's user. 

bq. Also, another thing to check is whether it happens only in when using the Mini* clusters, and not in single-node cluster etc. 
Arun this is a bug with the testcase only. I will still try it out on a single node cluster., Attaching a patch that uses jobtracker's credentials for contacting the namenode instead of using job's credentials. This patch solves the issue. Result of test-patch
{code}
[exec] -1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     -1 tests included.  The patch doesn't appear to include any new or modified tests.
     [exec]                         Please justify why no tests are needed for this patch.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
{code}

Running ant test now., Ant tests passed on my box., The patch looks fine. I'd rather have a JobTracker.getFileSystem() and JobTracker.getFileSystem(Path) than spread the code all over... please document the rationale for these apis too for posterity., Hey Arun thanks for looking. JobInProgress requires access to JobTracker's conf for 
# Making connections to namenode 
# Passing it to other classes like CleanupQueue etc. 

For case #1, JobTracker.getFileSystem() makes sense but for case #2,  its better to pass the conf. Hence the {{getConf()}} api. 

bq. please document the rationale for these apis too for posterity. 
If we keep the {{getConf()}} api, do we need any documentation for this?
, > While running {{TestMiniMRWithDFSWithDistinctUsers}}, I used this patch to test the ugi checks ...
You may set the LOG to debug level instead of changing the code., bq. For case #1, JobTracker.getFileSystem() makes sense but for case #2, its better to pass the conf. 

How is it better to pass the conf? JobTracker.getFileSystem(path) would take the path, resolve it against it's own conf and return the FileSystem - that way it's more explicit that you need the JobTracker's view of the filesytem. getConf() is too generic and it's too easy to forget to call getConf() in the future etc., Attaching a patch the reduces code duplication. I think its ok to pass open up jobtracker conf as only jip requires it now. JobHistory already has it. To pass the jobtracker's fs to JobHistory, we need to pass the jobtracker handle to JobHistory. Result of test-patch
{code}
 [exec] -1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     -1 tests included.  The patch doesn't appear to include any new or modified tests.
     [exec]                         Please justify why no tests are needed for this patch.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
{code}
Ant tests passed on my box., I just looked at the patch and it seems okay to me. Passing the JobTracker object to JobHistory seems less preferable when things can work without that change. , Attaching a patch incorporating Arun's comment. Result of test-patch
{code}
[exec] -1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     -1 tests included.  The patch doesn't appear to include any new or modified tests.
     [exec]                         Please justify why no tests are needed for this patch.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec] 
     [exec]     -1 release audit.  The applied patch generated 484 release audit warnings (more than the trunk's current 483 warnings).
{code}

No extra files are added. Release audit warning is because of change to a public api (JobHistory.init()).
Running ant test now., Ant tests passed on my box., +1, I just committed this. Thanks, Amar!, Integrated in Hadoop-trunk #834 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/834/])
    . Fixes a problem in the way the JobTracker used to talk to other daemons like the NameNode to get the job's files. Also adds APIs in the JobTracker to get the FileSystem objects as per the JobTracker's configuration. Contributed by Amar Kamat.
, Patch for Hadoop .20, not for commit., Updated release note from the commit message.]