[I can reliably cause crc-corruption in the case when the lease timesout. The following scenario explains this:

The client renews his lease every 30 seconds. The namenode declares a client as 'dead' if it does not get a lease-renewal message in 60 seconds. The namenode then reclaims the datablocks for that file; these datablocks may now get allocated from another file.

If it so happens that a client gets delayed for more than 60 seconds in its lease renewal (due to network congestion, slow response from datanodes, etc. etc), then the namenode will experience a lease expiration and will reclaim the blocks for that file in question. The namenode may now allocate these blocks to a new file. This new file may start writing to this block. Meanwhile the original file-writer may continue to flush his data to the same block because it has not yet experienced a lease-timeout-exception.  This may lead to data corruption. 

Simulating the lease-expiration timeouts to occur immediately causes crc corruptions to show up.
, 
These locks are expected to be moved out of DFS in near future., There are no HDFS file locks., Shouldn't have been resolved as "fixed".]