[The scenario that leads to the potential deadlock:
* FS.Cache.closeAll(), which is holding the FS.Cache lock, calls DFS's close method which calls close on the RPC proxy, which eventually calls ipc.Client.stop() and takes lock on Hashtable of connections
* ipc.Client.getConnection(), which is holding lock on Hashtable of connections, takes lock on UGI's class during some UGI setup that trigger's UGI.ensureInitialized()
* UGI.getCurrentUser(), which is holding UGI class lock, calls getLoginUser() which calls Credentials.readTokenStorageFile, which uses FileSystem, taking a lock on FileSystem.Cache
, Here's a fix to break the cycle by using the Java File API in Credentials.readTokenStorageFile (overloading the method to take File) so the FileSystem.Cache lock need not be taken., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12564909/HADOOP-9212.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 2 release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2045//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/2045//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2045//console

This message is automatically generated., - the cleanup of the 'in' stream should be in a finally clause, rather than in the catch clause (in case there's some non-IOE thrown)
- do you need buffering on the input stream?
- Can you add a reference to this JIRA in the comment change in UserGroupInformation.java? Otherwise I don't think anyone will know about this lock cycle in a couple months when we've forgotten about this JIRA.
, Thanks for the review Todd. Here's a new patch with your feedback addressed., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12564991/HADOOP-9212.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2049//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2049//console

This message is automatically generated., +1, looks good to me. Nice analysis of the cycle., Integrated in Hadoop-trunk-Commit #3249 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3249/])
    HADOOP-9212. Potential deadlock in FileSystem.Cache/IPC/UGI. (Revision 1433879)

     Result = SUCCESS
tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1433879
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Credentials.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java
, Integrated in Hadoop-Yarn-trunk #98 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/98/])
    HADOOP-9212. Potential deadlock in FileSystem.Cache/IPC/UGI. (Revision 1433879)

     Result = SUCCESS
tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1433879
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Credentials.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java
, I just committed this., Integrated in Hadoop-Hdfs-trunk #1287 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1287/])
    HADOOP-9212. Potential deadlock in FileSystem.Cache/IPC/UGI. (Revision 1433879)

     Result = FAILURE
tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1433879
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Credentials.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java
, Integrated in Hadoop-Mapreduce-trunk #1315 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1315/])
    HADOOP-9212. Potential deadlock in FileSystem.Cache/IPC/UGI. (Revision 1433879)

     Result = FAILURE
tomwhite : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1433879
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Credentials.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java
, merged to branch-0.23, Integrated in Hadoop-Hdfs-0.23-Build #498 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/498/])
    HADOOP-9212. Potential deadlock in FileSystem.Cache/IPC/UGI (Tom White via tgraves) (Revision 1434880)

     Result = FAILURE
tgraves : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1434880
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Credentials.java
* /hadoop/common/branches/branch-0.23/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java
]