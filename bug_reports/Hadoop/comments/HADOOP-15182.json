[There is a switch for that already, isn’t there?, You means  "fs.s3a.signing-algorithm"?, but I can't find an algorithm to match v2:
{code:java}
static {
 // Register the standard signer types.
 SIGNERS.put(QUERY_STRING_SIGNER, QueryStringSigner.class);
 SIGNERS.put(VERSION_THREE_SIGNER, AWS3Signer.class);
 SIGNERS.put(VERSION_FOUR_SIGNER, AWS4Signer.class);
 SIGNERS.put(VERSION_FOUR_UNSIGNED_PAYLOAD_SIGNER, AWS4UnsignedPayloadSigner.class);
 SIGNERS.put(NO_OP_SIGNER, NoOpSigner.class);
}{code}, OK.

I don't want to do any form of version rollback, because it will cause too many other problems. There's a whole history of JIRAs related to versioning things there: follow references of HADOOP-9991.

Is there a way to support the V2 signer somehow? As that's what we need
, Yonger: when did v2 support go away?, Just know how to roll back to signature v2, it's a bit hard to find out this approach for me.
{code:java}
<property>
 <name>fs.s3a.signing-algorithm</name>
 <value>S3SignerType</value>
 </property>{code}
Sorry to wast your time, I will close this ticket., Don't apologise: if it's hard to find that's a defect in the docs. We get lazy with the source in front of us.

Why not submit a patch with some improvements to the docs? Maybe a section "working with third party S3 stores". [~ehiggs] would no doubt help review, following up on this: I'm going to document the property properly.

Now, "S3SignerType" isn't in that enum, is it? But it works]