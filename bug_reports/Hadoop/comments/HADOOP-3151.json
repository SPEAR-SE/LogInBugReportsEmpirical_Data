[bq. (2) when hod does not understand the command, it prints the whole help options message - which clobbers the screen and is confusing. It should give a meaningful message - and may say "type hod help for more info"

Just usage, and the suggested hod help message. Remove description. I think that would address this issue. Would it ?

For (1), it will require more work than just changing the message, though it appears just that at face value. Hod configuration options can come from either the command line or configuration file, the former overriding the latter. And though the user knows which he has specified (whether on command line or in the configuration file), unfortunately, the code doesn't know it that easily, and gives a generic message. 

Should we just remove all the lines above and give the option that had a problem, assuming the user would know ?

+1 on saying 'Directory not found'. That's what Unix says., Attaching patch.

bq. Just usage, and the suggested hod help message. Remove description.
Addressed.

{quote}
# checking the configuration file will not help, the advice is confusing
# checking the command line options is the obvious thing to do - the advise is unnecessary.
Should we just remove all the lines above and give the option that had a problem, assuming the user would know ?
{quote}
With hod trunk version, I don't see this suggestion thrown when specifying an invalid nodecount/clusterdir/script. But it is given while validation of any other configuration parameter fails, and I think it is useful. Will knock that off too if it is felt otherwise.

bq. +1 on saying 'Directory not found'. That's what Unix says.
Improved msgs w.r.t this kind of errors. Now one of the following error messages is shown depending on the situation.
 - Invalid cluster directory (--hod.clusterdir or -d) : <path to a non-existent dir> : No such directory
 - Invalid cluster directory (--hod.clusterdir or -d) : <path to a file> : Not a directory
 - (This is for info/deallocate) Invalid hod.clusterdir(--hod.clusterdir or -d). <path to an unallocated dir> : Not tied to any allocated cluster.
 - Invalid nodecount (--hod.nodecount or -n) : Must be >= 3. Given nodes: 1
 - Invalid script file (--hod.script or -s) : <path to a non-existent file> : No such file
 - Invalid script file (--hod.script or -s) : <path to a dir> : Not a file.
 - Invalid script file (--hod.script or -s) : <path to a non-executable file> : Not an executable.

Fixing the above also included fix for HADOOP-3277., Also created HADOOP-3464 to address other issues as part of a larger error messages improvement process., +1. Patch looks good., Resubmitting to see if Hudson picks it up now., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12383075/HADOOP-3151
  against trunk revision 661918.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2532/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2532/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2532/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2532/console

This message is automatically generated., I just committed this. Thanks, Vinod!, Check and found that now hod throws mesages similar as mention by vinod, but its better if avoid using word invalied e.g -
error message for script file which not executable can be modifed 
  Invalid script file (--hod.script or -s) : <path to a non-executable file> : Not an executable. - for script file which not executable
to 
 Script <path to  non executabe file> is not an executable.
Similarly we can change Invalid script file (--hod.script or -s) : <path to a dir> : Not a file. to "Script <path to dir> is not a file. etc.]