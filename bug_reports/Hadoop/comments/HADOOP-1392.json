[Attached patch fixes some of the correctness issues reported. FindBugs is pretty good. The following are some of the bugs fixed in this patch (findBugs' explation is after the affected code):

{code:title=NamenodeFsck.java:421}
chosenNode = nodes[Math.abs(r.nextInt())  % nodes.length];
{code} (!) *Bad attempt to compute absolute value of signed 32-bit random integer* :
This code generates a random signed integer and then computes the absolute value of that random integer. If the number returned by the random number generator is Integer.MIN_VALUE, then the result will be negative as well (since Math.abs(Integer.MIN_VALUE) == Integer.MIN_VALUE).

{code:title=FSImage.java:571}
isUpgradeFinalized &= !sd.getPreviousDir().exists();
{code} (!) *Potentially dangerous use of non-short-circuit logic* :
This code seems to be using non-short-circuit logic (e.g., & or |) rather than short-circuit logic (&& or ||). In addition, it seem possible that, depending on the value of the left hand side, you might not want to evaluate the right hand side (because it would have side effects, could cause an exception or could be expensive.
Non-short-circuit logic causes both sides of the expression to be evaluated even when the result can be inferred from knowing the left-hand side. This can be less efficient and can result in errors if the left-hand side guards cases when evaluating the right-hand side can generate an error.
See the Java Language Specification for details.
{code:title=FileSystem.java:227}
    if (!(this.getUri().getScheme().equals(uri.getScheme()) &&
          (thisAuthority == null && thatAuthority == null)
          || thisAuthority.equals(thatAuthority)))
      throw new IllegalArgumentException("Wrong FS: "+path+
                                         ", expected: "+this.getUri());
{code} (!) *Possible null pointer dereference* :
A reference value dereferenced here might be null at runtime.  This may lead to a NullPointerException when the code is executed., Re-attaching the same patch with ASF licence., Attached the right patch now. Thanks Hairong., One minor suggestion. For the following fix for NamenodeFsck.java, 
chosenNode = nodes[r.nextInt(Integer.MAX_VALUE) % nodes.length]
I would prefer 
chosenNode = nodes[r.nextInt(nodes.length)], Right. Thats better. will attach a new patch., Latest patch includes changes for Hairong's suggestion and for merging with the latest trunk., +1

http://issues.apache.org/jira/secure/attachment/12358490/HADOOP-1392-02.patch applied and successfully tested against trunk revision r542595.

Test results:   http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/215/testReport/
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/215/console, I just committed this.  Thanks, Raghu!, Integrated in Hadoop-Nightly #119 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/119/])]