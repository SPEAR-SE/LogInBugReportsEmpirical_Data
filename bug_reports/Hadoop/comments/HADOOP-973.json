[This issue also occurs in the version 0.10.1, Here is a patch that substitutes the null-pointer exception with a self-explanatory exception message. , +1 code reviewed., 
I think we should have an explanation if this is expected. Currently it might be possible for namenode to ask to invalidate a block twice. This is not necessarily an error. In that case, not finding a file for a block might not be an exception but just a warning written to log.

Also once we have a file for a block, there is no reason why 'volume' or 'parent' could be null. In that sense those conditions should not be handled as IOExceptions.


, I agree with Raghu's comments that a few of these exception cases are expected whereas a few others are real error conditions. This patch will identify the cause why this exception is occuring.
, +1, because http://issues.apache.org/jira/secure/attachment/12351069/invalidDeletion.patch applied and successfully tested against trunk revision r507276., I think run time logic erros should not be IOExceptions.. may be we could throw more severe runtime exceptions so that they get noticed if they occur.
, I committed this.  Thanks, Dhruba.

Please note that this doesn't actually fix the issue, but should enable us to better understand it.]