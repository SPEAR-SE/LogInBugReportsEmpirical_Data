[Looks like impact of HADOOP-13410, Can you provide the hadoop jar command line with which you see this issue? Does it happen with any job submission or only with this job?, [~sjlee0]
Thank you for looking in to issue. Sorry for not adding as part of defect description.

We can reproduce the same with sleep job too.
# Move {{hadoop-mapreduce-client-jobclient-3.0.0-alpha2-SNAPSHOT-tests.jar}} to {{bin}} directory.
# Submit application using below command.
{{./yarn jar hadoop-mapreduce-client-jobclient-3.0.0-alpha2-SNAPSHOT-tests.jar sleep -m 1 -r 1 -mt 1 -rt 1}}

{noformat}
2016-09-15 21:00:18,922 INFO mapreduce.Job: Task Id : attempt_1473952300123_0004_m_000000_1, Status : FAILED
Error: java.lang.RuntimeException: java.lang.ClassNotFoundException: Class org.apache.hadoop.mapreduce.SleepJob$SleepMapper not found
	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2277)
	at org.apache.hadoop.mapreduce.task.JobContextImpl.getMapperClass(JobContextImpl.java:187)
	at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:747)
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:341)
	at org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:175)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1790)
	at org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:169)
Caused by: java.lang.ClassNotFoundException: Class org.apache.hadoop.mapreduce.SleepJob$SleepMapper not found
	at org.apache.hadoop.conf.Configuration.getClassByName(Configuration.java:2181)
	at org.apache.hadoop.conf.Configuration.getClass(Configuration.java:2275)
	... 8 more

{noformat}, [~sjlee0]

From ClassLoader  file is removed as per new implementation.Since the jar is not available in applcation class path all map execution will fail.

{noformat}
-      classPath.add(file.toURI().toURL());
{noformat}
When {{JobConf#setJarByClass}} is set tries to get the jar name from classloader
{noformat}
  public void setJarByClass(Class cls) {
    String jar = ClassUtil.findContainingJar(cls);
    if (jar != null) {
      setJar(jar);
    }   
  }
{noformat}
{{ClassUtil#findContainingJar}}
{noformat}
    for(final Enumeration<URL> itr = loader.getResources(classFile);
          itr.hasMoreElements();) {
        final URL url = itr.nextElement();
        if ("jar".equals(url.getProtocol())) {
          String toReturn = url.getPath();
          if (toReturn.startsWith("file:")) {
            toReturn = toReturn.substring("file:".length());
          }
          toReturn = URLDecoder.decode(toReturn, "UTF-8");
          return toReturn.replaceAll("!.*$", "");
        }
      }
{noformat}
which returns null. The job jar will not get loaded to staging dir in {{JobResourceUploader#uploadResources}} since jobjar is {{null}}.
{noformat}
  private void uploadJobJar(Job job, String jobJar, Path submitJobDir,
      short submitReplication) throws IOException {
    if (jobJar != null) { 
{noformat}
, We can close this jira once main jira is reverted, Moved the JIRA to HADOOP. This has been fixed by reverting HADOOP-13410.]