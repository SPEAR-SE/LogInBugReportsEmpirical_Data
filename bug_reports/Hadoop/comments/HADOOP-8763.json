[Attach a patch., Change looks great Chuan.

Two minor comments:
1. FileUtil#setOwner As this is a public api, it would be good to note that username and groupname cannot both be null.
2. FIleUtil.java:747 It seems that you moved a comment one line up., Attach a new patch addressing Ivan's comments., Thanks Chuan, patch looks good, +1

I see that {{winutils chown}} now allows both user and group to be empty, is that to match the unix behavior?, What is the problem this patch is trying to solve? An example would be good., Yes. This matches unix behavior. Previously, we return an error exit code which does not match Unix behavior. We does not match Unix in the case of 'chown [username]*:* [filename]'. I added a note at the end of the usage description., >What is the problem this patch is trying to solve? An example would be good.

The following function in RawLocalFileSystem class will fail on Windows when username is null, i.e. only set group ownership.
{noformat} 
public void setOwner(Path p, String username, String groupname)
{noformat} , The following code seems to be an unrelated change? Also, do you mean BUILDIN or BUILTIN?
{code}
+  // Empty name is invalid. However, LookupAccountName() function will return a
+  // false Sid, i.e. Sid for 'BUILDIN', for an empty name instead failing. We
+  // report the error before calling LookupAccountName() function for this
+  // special case.
+  //
+  if (wcslen(acctName) == 0)
+    return FALSE;
{code}

Do you see any unexpected behavior for users because of the following?
{code}
+On Linux, if a colon but no group name follows the user name, the group of\n\
+the files is changed to that user\'s login group. Windows has no concept of\n\
+a user's login group. So we do not change the group owner in this case.\n",
 program)
{code}, We can just leave around the public constant Shell.SET_GROUP_COMMAND or deprecate it. I am okay leaving it around.

Not sure of your usage of asserts vs exit-code, but in src/winutils/chown.c, instead of asserts for zero-length string, we should log a msg to stderr and return an EXIT_FAILURE? Also, if both are empty also you should return EXIT_FAILURE?

bq. +On Linux, if a colon but no group name follows the user name, the group of\n\
+the files is changed to that user\'s login group.
This code won't be invoked on linux, because, ahm, this is winutils? In any case, that is not behaviour I know, a "chown user: filename" shouldn't change the group-name, >The following code seems to be an unrelated change? Also, do you mean BUILDIN or BUILTIN?

You are right. It should be BUILTIN. This code is relevant in the sense it makes the function less prone to potential errors, which is used by 'winutils chown'.

>Do you see any unexpected behavior for users because of the following?

No. I did not see any unexpected behavior. This is just for future references.

>We can just leave around the public constant Shell.SET_GROUP_COMMAND or deprecate it. I am okay leaving it around.
I have left out this in new patch.

>Not sure of your usage of asserts vs exit-code, but in src/winutils/chown.c, instead of asserts for zero-length string, we should log a msg to stderr and return an EXIT_FAILURE? Also, if both are empty also you should return EXIT_FAILURE?

The assertions assert for previous parsing code. The parsing code will not initiate and allocate memory for 'userName' and 'groupName' of zero-length, i.e. 'userName' and 'groupName' are initiated or NULL in such cases. We should not return error in such cases because 'chown : file' is a correct usage here, though no user name or group name is given.

>This code won't be invoked on linux, because, ahm, this is winutils? In any case, that is not behaviour I know, a "chown user: filename" shouldn't change the group-name

I have tested the Linux behaviors. You can also check out the man page of 'chown': http://linux.die.net/man/1/chown
Again, as my answer to Bikas's question, this usage pattern is not found in Hadoop on Linux or Windows that I am aware of. I think it is good to document the difference here for future reference.
, Thanks for the update, Chuan. I had to very carefully read your comments and chown page to understand what you said :)

bq.  I have left out this in new patch.
+1

Seems like common.c has disappeared in the mean while, can you update the patch? Tx., Upload a new patch reflecting the change in HADOOP-8908, in which 'common.c' was renamed to 'libwinutils.c'., Hopefully the test works fine.

Checking this in., I just committed this to branch-1-win. Thanks Chuan!]