[+1, because http://issues.apache.org/jira/secure/attachment/12347709/hadoop-628.patch applied and successfully tested against trunk revision r489489., I like that this patch uses a common loop for copying, but it loses the early-exit feature that 'cat' had.  I think copyBytes should check for the error status if the output is a PrintStream.  Perhaps something like:

  PrintStream ps = out instanceof PrintStream ? (PrintStream)out : null;
  ...
  while (...) {
    out.write(...);
    if (ps != null && ps.checkError()) {
      throw new IOException(...);
    ...
    }
  }

This means that, when output is piped into another program and that program exits, the 'cat' or 'get' will exit too.  So things like 'bin/hadoop fs -cat foo | head' will execute quickly.
, Added the change Doug suggested., +1, because http://issues.apache.org/jira/secure/attachment/12347965/hadoop-628-3.patch applied and successfully tested against trunk revision r489707., This now only checks for errors every 10,000 4k buffers, or every 4MB.  Before it checked every 10,000 lines.  I think a check per buffer would be adequate and not too expensive: the implementation of checkError() is quite efficient, just checking an instance variable., Heh, whoops.  Now it checks per buffer., +1, because http://issues.apache.org/jira/secure/attachment/12348219/hadoop-628-4.patch applied and successfully tested against trunk revision r492251., I just committed this.  Thanks, Wendy!]