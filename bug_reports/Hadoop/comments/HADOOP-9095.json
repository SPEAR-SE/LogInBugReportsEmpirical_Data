[Seems a simple fix in NetUtils.normalizeHostName can make the testcase pass., {code}
+    if (name != null && !name.isEmpty()
+        && Character.digit(name.charAt(0), 10) != -1) { // FIXME 
       return name;
     } else {
{code}
If name == null or name.isEmpty(), it does not make sense to resolve it using InetAddress.  How about simply return name in such case?, Shall we figure out why null or empty is passed here? Also, another bug is in judging IP or hostname (it is not right to check the first char only, as 05host.xy.z is also a possible hostname). HADOOP-8372 contains a fix for trunk, shall we backport to branch-1 as well?, The empty string passed here should be fine, since in trunk for the same test the string passed is also an empty string. In general the invocation of NetUtils#normalizeHostName with an empty string happens in this scenario: OpenFileStats#executeOp --> NameNode#getBlockLocations --> FSNamesystem#getBlockLocations --> CachedDNSToSwitchMapping#resolve --> NetUtils#normalizeHostNames --> NetUtils.normalizeHostName. Based on Junping's comments, I think we can simply backport HADOOP-8372 to fix the error., New patch uploaded. Will run ant test and testpatch for it., The same test from HADOOP-8372 is also included. 

All the unit tests have passed except TestFileCreationNamenodeRestart, which should be unrelated since it also fails without the patch. The test-patch result:
{noformat}
-1 overall.  
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 225 new Findbugs (version 2.0.1) warnings.
{noformat}, +1 patch looks good., I have committed this.  Thanks Jing!, Closed upon release of Hadoop 1.2.0.]