[Rev01. force Maven dependency enforcer to not match timestamped version.
I am not sure if this is right, but according to https://maven.apache.org/enforcer/enforcer-rules/dependencyConvergence.html, setting the property to false makes the enforcer to not look for timestamped version., Maybe this is causing the problem?
{noformat}
./hadoop-hdfs-project/hadoop-hdfs-httpfs/pom.xml:    <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssZ</maven.build.timestamp.format>
./hadoop-hdfs-project/hadoop-hdfs-httpfs/pom.xml:    <httpfs.build.timestamp>${maven.build.timestamp}</httpfs.build.timestamp>
./hadoop-common-project/hadoop-nfs/pom.xml:    <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>
./hadoop-common-project/hadoop-auth/pom.xml:    <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>
{noformat}, I am not sure...the timestamp format does not match the error message.
I found this https://issues.apache.org/jira/browse/MENFORCER-118

Apparently there was a similar bug in maven enforcer, but it was resolved in maven enforcer 1.1, and upstream Jenkins uses 1.3.
Also, this failure looks intermittent. But we (at Cloudera) have also observed the same failure symptom on our internal Jenkins running trunk branch. I can see some times timestamped hadoop-auth jars are created under the local .m2/ repository., And a similar discussion: http://stackoverflow.com/questions/8662129/maven-unique-snapshots-and-dependency-convergence, Assigning this jira to me. I am seeing this maven failure much more frequently in the past month.
I googled a bit, and the similar failures happened as early as Aug 22 2015, in jenkins build Hadoop-Hdfs-trunk #2222, after HADOOP-12347. Fix mismatch parameter name in javadocs of AuthToken#setMaxInactives. Maybe this commit is not relevant, but offers an anchor to start looking., Unassign myself as I've not been able to find a solution and I've been occupied with other higher priority issues., someone should confirm that we already have isolated maven repositories for the post-commit builds, I think the problem is that one pom uses provided scope while the other use compile scope (no versions defined). Somehow maven considers different versions for the different scopes. ]