[Please reviewed attached patch, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12625238/hadoop-10290.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs hadoop-tools/hadoop-distcp:

                  org.apache.hadoop.hdfs.server.namenode.TestAuditLogs

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3475//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3475//console

This message is automatically generated., Which version of Java are you running? , w.r.t the patch, it should be done via a new {{<systemPropertyVariables>}} rather than the command line, which is for non sysprop settings, Using Java 6 (1.6.0_65-b14-462)

Using {noformat}<systemPropertyVariables>{noformat}, property was not visible on the surefire commandline, so I was afraid it wouldn't work, but running the tests again, it does indeed! I will upload a new patch (much simpler), New version of the patch using {{<systemVariableProperties>}}. Only set in {{hadoop-project/pom.xml}} since it is the common parent of all other maven modules.

Thanks for reviewing, Alternatively, you can have the following env VARD defined in your shell: {{_JAVA_OPTIONS=-Djava.awt.headless=true}}. This solves the problem. The only issue is if you are starting any app, Java based from the shell, you'll have to {{export -n _JAVA_OPTIONS}}.

This started happening a while ago in JDK6, AFAIK it isa JDK bug., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12625365/hadoop-10290.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3477//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3477//console

This message is automatically generated., FWIW, switching to Java 7 will make this go away for good (and on java apps started in YARN containers), {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12625365/hadoop-10290.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4327//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4327//console

This message is automatically generated., with the switch to java7 in hadoop builds â€”do we need this any more?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12625365/hadoop-10290.patch
  against trunk revision 6f9fe76.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5494//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5494//console

This message is automatically generated., If JDK7 fixes this, then I'm going to close this as Won't Fix., JDK7 is not fixing this for me.  Re-opening., FWIW, I fix this across projects by setting a {{~/.mavenrc}} with MAVEN_OPTS that includes {{-Dapple.awt.UIElement=true}} ([ref pdf|https://developer.apple.com/library/mac/documentation/Java/Reference/Java_PropertiesRef/Java_PropertiesRef.pdf]). Since this is a build-box issue, why not just document it in our dev guidelines?, I am using JAVA_TOOL_OPTIONS on my systems since that works across all the different build tools (maven, sbt, gradle) and gets picked up by the JVM directly:

https://docs.oracle.com/javase/7/docs/webnotes/tsg/TSG-VM/html/envvars.html]