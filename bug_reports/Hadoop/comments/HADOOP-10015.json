[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12606608/HADOOP-10015.000.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3162//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3162//console

This message is automatically generated., Would you please add an attachment with the stack trace?  I don't believe you should see the issue described unless you are explicitly executing within a doAs and not catching exceptions.  The logging was added back in the .20 days (by me) because it can be exceedingly hard to debug security issues.  On a number of occasions, we had no idea kerberos/authentication/etc errors were occurring because something was gobbling the exceptions and/or going into a retry loop and appeared hung.  Not logging IOExceptions effectively renders the logging useless because everything interesting (security related) is an IOException., Hi [~daryn],

I should have explained it more clearly.

During in-house testing, we (hortonworks) have observed a lot of these warnings when doing distcp in secure clusters. To further demonstrate the problem, I extract some basic logic in distcp into a unit test.

The log is definitely useful, but let's put it into the DEBUG level so that it won't confuse the operators then., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12606906/HADOOP-10015.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3176//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3176//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12607265/HADOOP-10015.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3191//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3191//console

This message is automatically generated., I guess I'm surprised that distcp is operating within an explicit doAs.  Logging doesn't occur when an exception generated under the login/current user, just an explicit doAs.

I do agree that the logging can be annoying at times, but it's a lifesaver at other times.  Like code that loops w/o logging the exception that triggered a retry, code that swallows an exception, code that catches and throws a generic "something failed" exception, etc.

If it's a debug level, then the logging becomes worthless - it's not possible to retroactively enable debug logging to analyze race conditions or transient errors.  Debug is too voluminous to enable for catching problems in production.

Perhaps a middle of the road solution is to create a new logger instance for doas, named with a ".doAs" suffix to the ugi class.  That way those that want to disable the logging may do so via log4j.properties., Would excluding common innocuous exceptions like FileNotFoundException from error logging (still log all exception at debug level) cover most cases here?, I just committed HADOOP-10274 without reading this one.  It sets log level to DEBUG.  I just saw your comments above [~daryn] You want me to revert it?, s/DEBUG/WARN/ in above.

[~wheat9] suggested closing this as a DUPLICATE but sounds like you lads might want to do more than just set log level down to WARN so leaving as is for now till hear more., I came into this as well.

v3 proposes:
- to fix the typo :-)
- to log as info by default
- to log as debug when the exception comes from a user interrupt

, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12634210/10015.v3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3667//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3667//console

This message is automatically generated., v4 is the result of an offline review with [~devaraj]: the info / log was inverted., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12635562/10015.v4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3682//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3682//console

This message is automatically generated., I'll hesitantly reverse course and say just make it a debug.  Much cleaner than a bunch of conditionals on exceptions., Since the related fix has landed trunk a while ago, maybe it is better to file a separate jira to discuss further improvement?, bq. I'll hesitantly reverse course and say just make it a debug. Much cleaner than a bunch of conditionals on exceptions.
I'm ok with that.

bq. Since the related fix has landed trunk a while ago, maybe it is better to file a separate jira to discuss further improvement?
I hope that changing a an error/warn log to debug will not require too much discussion, but if you really want it I can create a new jira., I'd be +1 on DEBUG (Opening a new issue to discuss what level a message should be logged at is OTT)., So here is the v5, hopefully with a limited regression risk :-), {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12636029/10015.v5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3688//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3688//console

This message is automatically generated., Comment:
isDebugEnabled check is needed around the section that prints debug log., Or we may simply remove the log message.  It does not look useful.  UserGroupInformation.doAs(..) is a public API.  If the caller wants to see the exception message, they should print it when the exception is caught., Thanks for the review, all.The v6 adds the isDebugEnabled check., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12636253/10015.v6.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3696//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3696//console

This message is automatically generated., +1 patch looks good., I have committed this.  Thanks, Nicolas!, SUCCESS: Integrated in Hadoop-trunk-Commit #5388 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5388/])
HADOOP-10015. UserGroupInformation prints out excessive warnings.  Contributed by Nicolas Liochon (szetszwo: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1580977)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #520 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/520/])
HADOOP-10015. UserGroupInformation prints out excessive warnings.  Contributed by Nicolas Liochon (szetszwo: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1580977)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1737 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1737/])
HADOOP-10015. UserGroupInformation prints out excessive warnings.  Contributed by Nicolas Liochon (szetszwo: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1580977)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1712 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1712/])
HADOOP-10015. UserGroupInformation prints out excessive warnings.  Contributed by Nicolas Liochon (szetszwo: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1580977)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java
, Just as a note for convenience to users of Cloudera's distribution - they have reverted this change in CDH5:
https://github.com/cloudera/hadoop-common/commit/4051b9b7865b8485584346992f23cae1de0bc4e2

I've opened a case with them to see why as I was mislead by WARN messages produced by UserGroupInformation and had to spend some time looking into something that really wasn't an issue.]