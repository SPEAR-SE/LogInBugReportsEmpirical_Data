[I checked newly added WinSDK8.props, it has executable, include and lib folders only for x64

{code}
   <ExecutablePath>$(VCInstallDir)bin\x86_amd64;$(VCInstallDir)bin;$(WindowsSdkDir)bin\NETFX 4.0 Tools;$(MSBuildProgramFiles32)\Windows Kits\8.1\bin\x86;$(VSInstallDir)Common7\Tools\bin;$(VSInstallDir)Common7\tools;$(VSInstallDir)Common7\ide;$(MSBuildProgramFiles32)\HTML Help Workshop;$(FrameworkSDKDir)\bin;$(MSBuildToolsPath32);$(VSInstallDir);$(SystemRoot)\SysWow64;$(FxCopDir);$(PATH)</ExecutablePath>
   <IncludePath>$(MSBuildProgramFiles32)\Windows Kits\8.1\Include\um;$(MSBuildProgramFiles32)\Windows Kits\8.1\Include\shared;$(VCInstallDir)include;$(VCInstallDir)atlmfc\include;$(FrameworkSDKDir)\include;</IncludePath>
   <LibraryPath>$(VCInstallDir)lib\amd64;$(VCInstallDir)atlmfc\lib\amd64;$(MSBuildProgramFiles32)\Windows Kits\8.1\lib\win8\um\x64;$(MSBuildProgramFiles32)\Windows Kits\8.1\Lib\winv6.3\um\x64;$(FrameworkSDKDir)\lib\x64</LibraryPath>
   <ExcludePath>$(VCInstallDir)include;$(VCInstallDir)atlmfc\include;$(MSBuildProgramFiles32)\Windows Kits\8.1\Include\um;$(MSBuildProgramFiles32)\Windows Kits\8.1\Include\shared;$(FrameworkSDKDir)\include;$(MSBuildToolsPath32);$(VCInstallDir)atlmfc\lib;$(VCInstallDir)lib;</ExcludePath>
{code}

Need to make this conditional to x64 and define similar properties for Win32

, Sorry for the build break. I did not test the YARN-2190 on x86 platform. [~kiranmr], do you want to work on a fix? Otherwise, I will try to port the change to Win32 later this week. I think WinSDK8 is already conditioned on the Windows SDK 8.1. If there is no Windows 8.1 SDK installed, there should be no build break. , I have attached patch to support both x86-32bit and x64 builds.

I have verified the build on following:
- 32bit build on  VC++ 10 (Win7.1SDK) & Windows 8.1 SDK
- 32 and 64-bit builds on VS2013 Express with only Windows 8.1 SDK

, Attached patch-002
Changed order of include directories.

{code}
<IncludePath>$(IncludePath);$(Windows8SDK_IncludePath);</IncludePath>
{code}, [~chuanliu] you can check and confirm the patch.
Order of include files will matter. patch-002 has Win8SDK include in the end.
{code}
<IncludePath>$(IncludePath);$(Windows8SDK_IncludePath);</IncludePath>
{code}
 So {{SetInformationJobObject}} may be still referring to Win7SDK API. There are no compilation errors.

If I reverse the order i.e 
{code}
<IncludePath>$(Windows8SDK_IncludePath);$(IncludePath);</IncludePath>
{code}
Compilation is fine.

But libwinutils.vcxproj and winutils.vcxproj are using different include and idl files
libwinutils build using idl files of Win7SDK
{code}
  C:\Program Files\Microsoft SDKs\Windows\v7.1\bin\midl.exe /W2 /WX /nologo /char signed /env win32 /Oicf /app_config /out"D:\Hadoop\hadoop-common-project\hadoop-common\target/winutils/" /h "hadoopwinutilsvc_h.h" /tlb "D:\Hadoop\hadoop-common-project\hadoop-common\target/winutils/libwinutils.tlb" /robust hadoopwinutilsvc.idl 
  Processing .\hadoopwinutilsvc.idl
  hadoopwinutilsvc.idl
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\oaidl.idl
  oaidl.idl
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\objidl.idl
  objidl.idl
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\unknwn.idl
  unknwn.idl
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\wtypes.idl
  wtypes.idl
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\basetsd.h
  basetsd.h
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\guiddef.h
  guiddef.h
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\ocidl.idl
  ocidl.idl
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\oleidl.idl
  oleidl.idl
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\servprov.idl
  servprov.idl
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\urlmon.idl
  urlmon.idl
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\msxml.idl
  msxml.idl
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\oaidl.acf
  oaidl.acf
  Processing C:\Program Files\Microsoft SDKs\Windows\v7.1\\include\ocidl.acf
  ocidl.acf
{code}

winutils build using idl files of win8 sdk
{code}
  C:\Program Files\Microsoft SDKs\Windows\v7.1\bin\midl.exe /W2 /WX /nologo /char signed /env win32 /Oicf /app_config /out"D:\Hadoop\hadoop-common-project\hadoop-common\target/winutils/" /h "hadoopwinutilsvc_h.h" /tlb "D:\Hadoop\hadoop-common-project\hadoop-common\target/winutils/winutils.tlb" /robust hadoopwinutilsvc.idl 
  Processing .\hadoopwinutilsvc.idl
  hadoopwinutilsvc.idl
  Processing C:\Program Files\Windows Kits\8.1\Include\um\oaidl.idl
  oaidl.idl
  Processing C:\Program Files\Windows Kits\8.1\Include\um\objidl.idl
  objidl.idl
  Processing C:\Program Files\Windows Kits\8.1\Include\um\unknwn.idl
  unknwn.idl
  Processing C:\Program Files\Windows Kits\8.1\Include\shared\wtypes.idl
  wtypes.idl
  Processing C:\Program Files\Windows Kits\8.1\Include\shared\wtypesbase.idl
  wtypesbase.idl
  Processing C:\Program Files\Windows Kits\8.1\Include\shared\basetsd.h
  basetsd.h
  Processing C:\Program Files\Windows Kits\8.1\Include\shared\guiddef.h
  guiddef.h
  Processing C:\Program Files\Windows Kits\8.1\Include\um\ocidl.idl
  ocidl.idl
  Processing C:\Program Files\Windows Kits\8.1\Include\um\oleidl.idl
  oleidl.idl
  Processing C:\Program Files\Windows Kits\8.1\Include\um\servprov.idl
  servprov.idl
  Processing C:\Program Files\Windows Kits\8.1\Include\um\urlmon.idl
  urlmon.idl
  Processing C:\Program Files\Windows Kits\8.1\Include\um\msxml.idl
  msxml.idl
  Processing C:\Program Files\Windows Kits\8.1\Include\um\oaidl.acf
  oaidl.acf
  Processing C:\Program Files\Windows Kits\8.1\Include\um\ocidl.acf
{code}


So I am doubtful of this as IDL files of both SDK have differences.
May be {{task.c}} needs some change to force {{SetInformationJobObject}} from Win8 API usage. Please check , Ideally {code}C:\Program Files\Microsoft SDKs\Windows\v7.1\bin\midl.exe{code}  would be consistent with {code}Processing C:\Program Files\Windows Kits\8.1\Include\um\oaidl.idl{code}.
Overall I'm not to worried, the idl part is only relevant for the secure container executor and IDLs compiled by SDK 7.1 and SDK 8.1 must be compatible., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704749/HADOOP-11691-001.patch
  against trunk revision 3ff1ba2.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5949//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5949//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704751/HADOOP-11691-002.patch
  against trunk revision 3ff1ba2.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.ipc.TestRPCWaitForProxy

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5950//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5950//console

This message is automatically generated., Test case failure is not related to patch.
Its passing locally
{code}
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ hadoop-common ---
[INFO] Surefire report directory: D:\hadoop-git\hadoop-common-project\hadoop-common\target\surefire-reports
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.ipc.TestRPCWaitForProxy
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.423 sec - in org.apache.hadoop.ipc.TestRPCWaitForProxy
{code}, [~chuanliu], any feedback on the patch?
, [~kiranmr], thanks for the patch! It looks good, but when I build the winutils binary with the patch, the CPU rate control feature does not present in the binary. I suspect it is related to the {{$(VCInstallDir)}} paths missed in the patch., [~chuanliu] There is no need to specify {{$(VCInstallDir)}} explicitily. I am inheriting existing settings in project and only appending Win8SDK path

{code}
<IncludePath>$(IncludePath);$(Windows8SDK_IncludePath);</IncludePath>
{code}

Order of include files will matter, I have changed in in patch-004. Now Win8 SDK inlcude path comes first 
{code}
<IncludePath>$(Windows8SDK_IncludePath);$(IncludePath);</IncludePath>
{code}

Try this file. As I mentioned in earlier comment, libwinutils and winutils will use different IDL files. But it should be compatible as pointed Remus., Hi [~kiranmr] the trunk still fail for me to build x86:
{code}
"E:\HW\project\hadoop-common\hadoop-common-project\hadoop-common\src\main\winutils\winutils.vcxproj" (default target) (4) ->
(Link target) ->
  E:\HW\project\hadoop-common\hadoop-common-project\hadoop-common\target/winutils/hadoopwinutilsvc_s.obj : fatal error LNK1112: module machine type 'x
64' conflicts with target machine type 'X86' [E:\HW\project\hadoop-common\hadoop-common-project\hadoop-common\src\main\winutils\winutils.vcxproj]
{code}

I think the 
{code}
-      <TargetEnvironment>X64</TargetEnvironment>
+      <TargetEnvironment>$(Platform)</TargetEnvironment>
{code}
is incorrect because $(Platform) expands to `Release|Win32` or `Debug|Win32` but the MIDL Task https://msdn.microsoft.com/en-us/library/ee862478.aspx expects `win32` or `x64`., Actually $(Platform) is Win32, not sure what makes my midl unhappy. I'll investigate., Build is successful for me with both patch-002 and patch-003
Yes $Platform is Win32 or x64. 'Release|Win32' is '$(Configuration)|$(Platform)', {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12706518/HADOOP-11691-003.patch
  against trunk revision 0b9f12c.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5984//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5984//console

This message is automatically generated., Can you please tell me the midl command line you get?  For me is this one:
{code}
E:\HW\tools\OACR\bin\midl.exe /W2 /WX /nologo /char signed /env win32 /Oicf /app_config /out"E:\HW\project\hadoop-common\hadoop-common-project\hadoo
p-common\target/winutils/" /h "hadoopwinutilsvc_h.h" /tlb "E:\HW\project\hadoop-common\hadoop-common-project\hadoop-common\target/winutils/libwinutils
.tlb" /robust hadoopwinutilsvc.idl
{code}
which passes in `/env win32` as per the MIDL MSbuild Task spec, but apparently midl.exe wants `/win32` instead. I'm courious in your case what does the midl  command line look like. , [~chuanliu], could you please try to verify Kiran's newest patch to see if this has resolved the earlier problem that you saw?  From my side, I was able to build successfully for both 64-bit and 32-bit using Windows SDK 7.1.

I'm retargeting this to 2.7.0, which was the original goal for HADOOP-9922.  I'm bumping priority to critical, because we expect to start cutting 2.7.0 release candidates in a few days., +1 I have verified the CPU feature is present when building with the latest patch. Thanks for fixing the build! , +1 for the patch.  I committed this to trunk, branch-2 and branch-2.7.  Kiran, thank you for the patch.  Remus and Chuan, thank you for helping with code review and testing., SUCCESS: Integrated in Hadoop-trunk-Commit #7445 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7445/])
HADOOP-11691. X86 build of libwinutils is broken. Contributed by Kiran Kumar M R. (cnauroth: rev af618f23a70508111f490a24d74fc90161cfc079)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/winutils/win8sdk.props
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #145 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/145/])
HADOOP-11691. X86 build of libwinutils is broken. Contributed by Kiran Kumar M R. (cnauroth: rev af618f23a70508111f490a24d74fc90161cfc079)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/winutils/win8sdk.props
, FAILURE: Integrated in Hadoop-Yarn-trunk #879 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/879/])
HADOOP-11691. X86 build of libwinutils is broken. Contributed by Kiran Kumar M R. (cnauroth: rev af618f23a70508111f490a24d74fc90161cfc079)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/winutils/win8sdk.props
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #145 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/145/])
HADOOP-11691. X86 build of libwinutils is broken. Contributed by Kiran Kumar M R. (cnauroth: rev af618f23a70508111f490a24d74fc90161cfc079)
* hadoop-common-project/hadoop-common/src/main/winutils/win8sdk.props
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2095 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2095/])
HADOOP-11691. X86 build of libwinutils is broken. Contributed by Kiran Kumar M R. (cnauroth: rev af618f23a70508111f490a24d74fc90161cfc079)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/winutils/win8sdk.props
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #2077 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2077/])
HADOOP-11691. X86 build of libwinutils is broken. Contributed by Kiran Kumar M R. (cnauroth: rev af618f23a70508111f490a24d74fc90161cfc079)
* hadoop-common-project/hadoop-common/src/main/winutils/win8sdk.props
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #136 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/136/])
HADOOP-11691. X86 build of libwinutils is broken. Contributed by Kiran Kumar M R. (cnauroth: rev af618f23a70508111f490a24d74fc90161cfc079)
* hadoop-common-project/hadoop-common/src/main/winutils/win8sdk.props
* hadoop-common-project/hadoop-common/CHANGES.txt
]