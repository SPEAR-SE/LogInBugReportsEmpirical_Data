[I recommend that we create a protected method called getDefaultClusterProperties() that can be overridden by subclasses of ClusterMapReduceTestCase., Even with this patch, we cannot have different cluster properties in different tests of a single test-case. This, as well as the general problem being pointed, seems to have the only solution of overriding setUp() to do nothing and calling startCluster explicitly in each test with any required config properties.

Further, I don't clearly understand why you want to be able to invoke TestCase.setUp(), it does nothing anyways., Thanks for the feedback Vinod.

I went ahead and refactored out all of the startCluster() calls and made each test case explicitly call them, rather than having an implicit call to startCluster(true, null) in setUp().  This should both solve my original problem, as well as give the test writer finer-grained control over the parameters passed to each test cluster.  What do you think?, With this patch, every test case that is in a subclass of ClusterMapReduceTestCase now explicitly calls startCluster().  This makes it possible to create test case subclasses of ClusterMapReduceTestCase that use alternative parameters to the cluster.  It also makes it possible to have different clusters in your test cases that have different parameters., This updated patch includes an additional test that needed to be modified to directly call setupCluster(true, null)., Modified this issue to be an "incompatible change", Added a release note., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12400457/HADOOP-5164.2.patch
  against trunk revision 745705.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 27 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 Eclipse classpath. The patch retains Eclipse classpath integrity.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3882/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3882/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3882/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3882/console

This message is automatically generated., For a cluster shared between tests, wouldn't the correct idiom use TestSetup, as in TestAppend3, TestReduceFetch, etc.? If each test needs a different set of parameters, it's not clear to me why one wouldn't simply create a Configuration with these parameters, and start Mini\*Cluster with it...]