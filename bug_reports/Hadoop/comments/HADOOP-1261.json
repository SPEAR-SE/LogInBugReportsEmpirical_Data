[We avoid writing the log entry when "nodeS == nodeN"  (i.e. node existed before and was serving the same storage id ).

Konstantin, could you take a quick look at the patch?, Could you check whether we can also get rid of clusterMap.remove() and clusterMap.add() in case nodeN == nodeS.
It seems logical not to do anything if the same node is restarting.
Also I see dnReg is used only to set a correct ip address in nodeReg. There should be an easier way., > Could you check whether we can also get rid of clusterMap.remove() and clusterMap.add() in case nodeN == nodeS. 

Then we also need to make sure that the node is on the same rack etc. I am not sure if the extra code is worth it. Node registration is not supposed to be very often. Simpler it is, the better.

> Also I see dnReg is used only to set a correct ip address in nodeReg. There should be an easier way.

hm. will check. Currently it just uses existing interface.
, 
getting rid of dnReg could be another minor clean up Jira., -1, could not apply patch.

The patch command could not apply the latest attachment http://issues.apache.org/jira/secure/attachment/12355633/HADOOP-1261-1.patch as a patch to trunk revision r542595.

Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/219/console

Please note that this message is automatically generated and may represent a problem with the automation system and not the patch., need to regenerate, Updated for for trunk., +1

http://issues.apache.org/jira/secure/attachment/12358585/HADOOP-1261-2.patch applied and successfully tested against trunk revision r542595.

Test results:   http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/220/testReport/
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/220/console, I just committed this.  Thanks, Raghu!]