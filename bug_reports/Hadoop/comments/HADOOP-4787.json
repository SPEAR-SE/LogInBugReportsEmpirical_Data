[Attaching patch with fix.

Hemant, as I'm not able reproduce this on my machine, can you apply this patch and see if the test fails again.
One reason I could think is that client is inquiring for the clusterStatus, while the JT is blacklisting. Also I changed _mapred.max.tracker.failures_ to job level configuration in the test., Even I am not able to reproduce it. I tried ~10 times., I was able to replicate the error even today morning and have given the log file for Amarsri. However, with the attached patch, I ran the test 20 times and got no failures, where I used to get it once every 5 times at least.

I have not looked at the fix though. So, I guess it still needs review., Thanks Hemant for testing it out.

test-patch result:
{noformat}
     [exec]
     [exec] +1 overall.
     [exec]
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec]
     [exec]     +1 tests included.  The patch appears to include 3 new or modified tests.
     [exec]
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec]
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec]
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec]
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec]
{noformat}
All core and contrib tests passed on my machine, Can we avoid the timing based code by any chance?, Thanks for the review Amar.

Looks like we dont need timing changes. since finalizeJob and getClusterStatus are synchronized calls. The patch includes configuration change. 

Hemant, can you run the patch again and see if this works? Sorry for troubling you., test-patch result:
{noformat}
     [exec]
     [exec] +1 overall.
     [exec]
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec]
     [exec]     +1 tests included.  The patch appears to include 3 new or modified tests.
     [exec]
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec]
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec]
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec]
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec]
{noformat}, This test was failing more than 60% of the time for me, but I ran it a half dozen times with the patch without a single failure.

+1, Looking more closely at the test, shouldn't testBlacklistAcrossJobs wait for the clusters to become idle before starting the test, then shut down them down as it exits? Would you mind explaining the fix?, Chris, for the tracker to get blacklisted by a job, it should fail mapred.max.tracker.failures times. Eariler this configuration was set to 1 at cluster level, which was ignored by job. And it was waiting for 4 failures (default value) to get blacklisted. I moved it to job-level in the patch. So, now it fails once, it will get blacklisted by job., I am beginning to think that mapred.max.tracker.failures should have been a cluster-level configuration, and, with HADOOP-4305 committed, it seems more necessary. This is because with HADOOP-4305, depending on the value of the config item and the number of task failures at the various trackers, a tasktracker can be blacklisted across jobs sooner than later. This may be difficult to manage in a real-world setup.., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12395543/patch-4787-1.txt
  against trunk revision 725341.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 Eclipse classpath. The patch retains Eclipse classpath integrity.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3703/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3703/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3703/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3703/console

This message is automatically generated., I just committed this. Thanks, Amareshwari!]