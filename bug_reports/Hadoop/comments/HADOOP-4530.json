[This is because NameNodeFsck already closed the response stream. Errror handling should be done in NamenodeFsck not in FsckServlet. , Maybe not closed the stream, but certain enough of the HTTP response had already gone back (200 status code &c) that trying to set an error code in the respose, This patch catches any exception during fsck, logs it, and sends an error message to the client side. The client returns -1 on errors.

Koji, could you please try the attached patch to see if you like the change? I will work on junit tests., Attached patch incorporates Koji's comments.
1. fsck returns 0 if the file system is HEALTHY or the input path does not exist; return 1 when the file system is CORRUPT. These are the same as before;
2. fsck returns -1 otherwise.

The patch also only scans last line for the hint of return code. Scanning string for return code is very error prone. So I declared those strings indicating return code as constants. , # Comment in DFSck.run() talking about errCode should be updated or removed.
# {{NamenodeFsck.FAILURE_STATUS = "FAILED";}} instead of {{"is FAILED"}}.
# TestFsck.java
#- Redundant import java.nio.ByteBuffer;
#- {{assertTrue(-1 != outStr.indexOf(...));}} can be uniformly replaced with {{assertTrue(outStr.contains(...));}}
#- We do not have a test case that checks the -1 error code. Should we?, Yes, we should have a test case that checks -1 error code. But I am not able to figure out a way to generate fsck errors. Do you have any idea?, The patch incorporates Konstantin's comments. Thank Konstantin for helping me figure out the way to test the failure case.

In addition, it makes sure that the DFS cluster gets shutdown in case of a failure in the testFsckCorrupt., The test is good.
Could you please remove import of StringUtils and the LOG member in FsckServlet. Those are not used anymore with your changes.
Sorry missed it yesterday., Thanks Konstantin! Here is the one that removed the not needed field Log & import., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12393327/fsckError3.patch
  against trunk revision 711482.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 Eclipse classpath. The patch retains Eclipse classpath integrity.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3532/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3532/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3532/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3532/console

This message is automatically generated., +1, I just committed this., Integrated in Hadoop-trunk #653 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/653/])
    . In fsck, HttpServletResponse sendError fails with IllegalStateException. Contributed by Hairong Kuang.
]