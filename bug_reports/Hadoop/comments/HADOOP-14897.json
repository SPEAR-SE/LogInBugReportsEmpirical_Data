[As [mentioned|https://issues.apache.org/jira/browse/HADOOP-13714?focusedCommentId=16175844&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16175844] in the original ticket, this could interfere with routine maintenance and prevent us from accepting new contributions of native code., Thanks for the JIRA.  I'll get a patch posted soon so that we have time to review., Probably worth pointing out that as currently written, the JRE (read: runtime) requirements are less strict than the C compiler (read: build time) requirements., Thanks [~templedf]. This was filed neutrally, in case there are really compelling reasons for the requirement.

[~miklos.szegedi@cloudera.com], you raised this in HADOOP-13714. I agree that patch versions should, except when addressing security vulnerabilities or other "must fix" issues, remain stable between patch releases. Given that our major releases tend to be long-lived, what would be a reasonable policy for native deps in minor releases? Is there a set of standards used by packagers we could adopt?

If our compatibility guidelines are setting users' expectations, I hesitate to promise more than best-effort, here., [~chris.douglas]. Given we are talking about external dependencies, we cannot assume that they use the same versioning standard. However, talking about Hadoop versioning standard, I would assume that a minor release requires only minor releases in dependencies. Let's be more specific with an example. If we ship Hadoop 5.0 with support for C++ standards before C++14, this requirement would assume that 5.1 will not add a requirement of C++14 as a minimum.
In case of Java I would rephrase this question, would you allow Hadoop 2.9 ship with a requirement of Java 8, if 2.8 depended on Java 7 before?, bq. I would assume that a minor release requires only minor releases in dependencies
That's a reasonable proposal. As I read the current draft, upgrading minor versions of dependencies is prohibited.

bq. C++ standards before C+14, this requirement would assume that 5.1 will not add a requirement of C+14 as a minimum
Also reasonable, but also different from the current text.

bq. would you allow Hadoop 2.9 ship with a requirement of Java 8, if 2.8 depended on Java 7 before?
To use this example, I would not require that Hadoop compile and run against a particular build of openjdk. That's too restrictive., bq. To use this example, I would not require that Hadoop compile and run against a particular build of openjdk. That's too restrictive.
Thank you [~chris.douglas] for the feedback. Here is the use case I am thinking about. Let's say I run my cluster with Hadoop 5.1 compiling with Java7. Auditing Java8 takes lots of effort and potential issues, so in order to install 5.2 with minor bug fixes, I think I should not be required to install Java8.
However, to follow your logic, if there is no public support for Java7 anymore a minor release should update to Java 8. That is indeed something to consider., How about this:

{quote}The minimum required versions of the native components on which Hadoop depends
at compile time and/or runtime SHALL be considered
\[Evolving\](./InterfaceClassification.html#Stable). Changes to the minimum
required versions SHOULD NOT increase between minor releases within a major
version, though updates because of security issues, license issues, or other
reasons may occur. When the native components on which Hadoop depends must
be updated between minor releases within a major release, where possible the
changes SHOULD only change the minor versions of the components without
changing the major versions.{quote}, Thanks, Daniel. Skimming RFC-2119 that looks like a standard we can enforce. Other than fixing the Evolving -> Stable link, lgtm. +1, Fixed the link.  [~miklos.szegedi@cloudera.com], any comments?, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 30s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 14m 51s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 58s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 16s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 18m  4s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:71bbb86 |
| JIRA Issue | HADOOP-14897 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12888591/HADOOP-14897.002.patch |
| Optional Tests |  asflicense  mvnsite  |
| uname | Linux e22203c2b594 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 164a063 |
| modules | C: hadoop-common-project/hadoop-common U: hadoop-common-project/hadoop-common |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/13364/console |
| Powered by | Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thank you, [~templedf], I do not have any more comments. +1 (non-binding), Anyone else?  CC [~steve_l], [~aw].  If not, I'll commit tonight (CET) or tomorrow., SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #12964 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/12964/])
HADOOP-14897. Loosen compatibility guidelines for native dependencies (templedf: rev 0807470808156af13e0992285cac070052d86c26)
* (edit) hadoop-common-project/hadoop-common/src/site/markdown/Compatibility.md
, Thanks to [~chris.douglas] for filing the issue and the review.  Thanks also to [~miklos.szegedi@cloudera.com] and [~aw] for reviews.  Committed to trunk and branch-3.0.]