[[~xiaochen], due to time constraints (and that we aren't running the kms via embedded jetty), do you want to help integrate these changes?, Worth noting, the intrinsic methods mentioned above are on by default starting in 8u152 ([https://bugs.openjdk.java.net/browse/JDK-8154945,] [https://www.oracle.com/technetwork/java/javase/8u152-relnotes-3850503.html).]  , Should also note that Oracle recommends using /dev/urandom with their products:

[Avoiding JVM Delays Caused by Random Number Generation|https://docs.oracle.com/cd/E13209_01/wlcp/wlss40/configwlss/jvmrand.html]

Rather sad the intrinsics were disabled due to a failed unit test on Solaris when compiled with sun's compiler...


 , Catching up emails after PTO. Thanks [~daryn] for the ping, and great archeology here... Also thanks [~Steven Rand] for the pointer.

[~knanasi] or [~jojochuang], is this something you're interested to test out? I'm happy to review if so., I would like to pick this up – will probably work on this starting next week., According to JDK release notes/docs,
-XX:+UseMontgomerySquareIntrinsic is implemented in 8u102 https://www.oracle.com/technetwork/java/javase/8u102-relnotes-3021767.html
-XX:+UseMontgomeryMultiplyIntrinsic also since 8u102

According to the release note of 8u152, the "BigInteger" performance improvements are enabled by default.

I think we'll have to benchmark different JDK versions since we heavily rely on JDK for TLS. Waiting for HADOOP-15967 (KMS Benchmark Tool) before working on this one [~ghuangups] FYI.]