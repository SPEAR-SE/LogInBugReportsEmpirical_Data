[Attaching the patch adding trace only in debug mode and just message in warn, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12616718/HADOOP-10142.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3330//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3330//console

This message is automatically generated., So, I think we should just see if the user we're trying to resolve is {{dr.who}}, and if so, simply declare that it doesn't exist rather than asking the operating system.  This will potentially provide a big performance increase for us, since some user lookup methods are quite slow, and negative caching (HDFS-5369) has not been implemented yet (if it ever will be).  After all, the web UI picked {{dr.who}} specifically because it was a user ID that should not exist., Thanks colin. Your idea make sense.
I will post a patch for that soon., Attaching a patch for exclusion of "dr.who" from group lookup, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12617120/HADOOP-10142.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3336//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3336//console

This message is automatically generated., {{dr.who}} is actually only a default.  The HTTP user is configurable, in {{hadoop.http.staticuser.user}}.  So I don't really like the idea of hard-coding this in {{Groups.java}}.  What about creating a new configuration value like {{hadoop.unprivileged.users}} in {{CommonConfigurationKeys.java}} that will set a semicolon-delimited list of usernames which we never try to resolve?  And then just defaulting that to {{dr.who}}?

I'll also ask other folks what they think about this.  I think it's a great improvement, since those lookups are really ugly and unnecessary., I'm +1 for this idea too. Hopefully negative caching does get done eventually (I unassigned myself in case someone else wants to pick it up), but this is a good stopgap measure. Having a comma separated list (can use {{Configuration#getStrings}}) is important, because I've seen this kind of spew from users besides {{dr.who}} too.

My only comment on the patch thus far is that we should be consistent with {{isDebugEnabled}} and {{LOG.debug}}. We could just additionally print another message with the stack trace when debug is enabled., Thanks Colin and Andrew. 
I will make unprevileged users as configurable and post a patch soon., Updated the patch as per comments.

Andrew, I didn't understand your last comment regarding debug log. I removed that change itself as we can avoid huge logs by configuration. :), {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12617302/HADOOP-10142.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3339//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3339//console

This message is automatically generated., thanks, Vinay.  I agree that taking the log change out is a good idea... it shouldn't be necessary (hopefully) with proper configuration.  It will be nice not to see that log spew-- that's why I really like this change.

Even though I was the one who originally suggested it, I'm not sure if {{hadoop.unprivileged.users}} is the right config key here.  I guess these are more like users with no groups.  Theoretically they might have privileges (we're not changing the way users are handled-- dr.who can still own files, if people are crazy enough to let him.)

I wonder if we should have something like {{hadoop.user.group.mapping.overrides}} that contains something like "<user1>=<group1>,<group2>:<user2>=<group1>,<group2>".  Then the default would be "dr.who=" (mapping dr.who to no groups).  It seems like a natural extension of our pluggable user/group resolution setup., Thanks Colin. 
How about "hadoop.user.group.static.mapping" ? with group static group mappings and dr.who mapping to empty groups.. , How about {{hadoop.user.group.static.mapping.override}}?  I kind of feel like override should be in there somewhere, to signify that it's overriding the normal groups resolution mechanism., er, that should be *overrides* since there can be multiple, ok. got it . I will try to implement it and post a patch soon, Attaching the patch for the proposed {{hadoop.user.group.static.mapping.overrides}}.
Please review , {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12617376/HADOOP-10142.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3342//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3342//console

This message is automatically generated., [~xifang] or [~chuanliu], could you take a look at this patch?  I recall that one of you talked to me in the past about a need to configure static user-to-group mappings in certain Windows deployments.  You might want to code review this patch to see if it suits your needs., I am +1 on this.  Thanks, Vinay.  I will hold off on committing for a few days to give other people time to check it out., Thanks Vinay and Chris. I think this patch also solves our static user-to-group mapping problem in certain Windows deployments. It would be good to have this patch in the Hadoop codebase., Xi, thanks for taking a look.  Colin, I think we're good to go, and you can commit any time.  Vinay, thank you for the patch!, SUCCESS: Integrated in Hadoop-trunk-Commit #4847 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4847/])
HADOOP-10142. Avoid groups lookup for unprivileged users such as dr.who (vinay via cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1548763)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/CommonConfigurationKeys.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/resources/core-default.xml
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/TestGroupsCaching.java
, committed.  thanks, all., Thanks all.. , FAILURE: Integrated in Hadoop-Yarn-trunk #414 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/414/])
HADOOP-10142. Avoid groups lookup for unprivileged users such as dr.who (vinay via cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1548763)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/CommonConfigurationKeys.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/resources/core-default.xml
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/TestGroupsCaching.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1605 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1605/])
HADOOP-10142. Avoid groups lookup for unprivileged users such as dr.who (vinay via cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1548763)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/CommonConfigurationKeys.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/resources/core-default.xml
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/TestGroupsCaching.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1631 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1631/])
HADOOP-10142. Avoid groups lookup for unprivileged users such as dr.who (vinay via cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1548763)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/CommonConfigurationKeys.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/StringUtils.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/resources/core-default.xml
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/TestGroupsCaching.java
, Thanks Vinay. I backport this to branch-1-win and branch-1 (HADOOP-10142-branch-1.patch)., Hi, [~xifang].  The backport looks good, but I just noticed a few minor differences from the trunk patch in terms of whitespace and line wrapping.  Could you please make the whitespace and line wrapping identical to the trunk patch?  Sorry to nitpick on this, but if we keep the code as similar as possible between the two branches, then it will make any future backports easier.  Thank you!, Hi [~cnauroth], thanks for pointing this out. I made a new patch (HADOOP-10142-branch-1.2.patch) and tried to make the format as identical as possible. 

Thanks!, +1 for the backport patch.  I committed this to branch-1 and branch-1-win.  Thank you again to Vinay for the original patch, and thank you to Xi for doing the backport.]