[Thanks Shanyu for reporting the problem and preparing the patch.

Fix looks good overall. Have just two minor comments:
1. I think you'll want to use Path#isAbsolute() to validate whether a path is relative or absolute on Windows. The problem with File#isAbsolute() is that it returns false for paths like "\\some\\path".
2. Nit:
{code}
+        File fileCpEntry = new File(classPathEntry);
+        if(!fileCpEntry.isAbsolute()) {
+          fileCpEntry = new File(workingDir, classPathEntry);
+        }
{code}
Can you factor the code such that File object is not created twice for relative paths?, Thanks Ivan for your comments! Suggest taken and a new patch is attached., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12601201/HADOOP-9924-2.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3053//console

This message is automatically generated., previous patch was against 2.1.0-beta. This one is against trunk., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12601218/HADOOP-9924-3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3054//console

This message is automatically generated., +1 from me as well.

bq. -1 javac. The patch appears to cause the build to fail.

I think you may need to remove Windows new line characters for the patch to apply. Easiest way may be to run 'dos2unix.exe' on the patch., fix the patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12601238/HADOOP-9924-4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-common-project/hadoop-common:

org.apache.hadoop.ipc.TestIPC

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3056//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3056//console

This message is automatically generated., Thanks Shanyu for addressing the comments. TestIPC is failing due to HADOOP-9916. Latest patch looks good, +1, will commit shortly., SUCCESS: Integrated in Hadoop-trunk-Commit #4364 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4364/])
HADOOP-9924. FileUtil.createJarWithClassPath() does not generate relative classpath correctly. Contributed by Shanyu Zhao. (ivanmi: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1519891)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileUtil.java
, I committed the patch to trunk, branch-2 and branch-2.1-beta. Thanks Shanyu for the contribution and Chuan for the review., SUCCESS: Integrated in Hadoop-Yarn-trunk #322 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/322/])
HADOOP-9924. FileUtil.createJarWithClassPath() does not generate relative classpath correctly. Contributed by Shanyu Zhao. (ivanmi: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1519891)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileUtil.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1512 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1512/])
HADOOP-9924. FileUtil.createJarWithClassPath() does not generate relative classpath correctly. Contributed by Shanyu Zhao. (ivanmi: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1519891)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileUtil.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1539 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1539/])
HADOOP-9924. FileUtil.createJarWithClassPath() does not generate relative classpath correctly. Contributed by Shanyu Zhao. (ivanmi: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1519891)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileUtil.java
, There is a corner case the previous patch does not handler correctly. When there's empty string included in the classpath, "new Path(classPathEntry)" will through an exception. 

The manifest of this problem is that when you try to run a pig job, the job will fail because the application master is failed to start.

The addendum patch will handle the empty string scenario. Unit test cases are updated to test this scenario as well., Thanks Shanyu, addendum patch looks good, will commit shortly., SUCCESS: Integrated in Hadoop-trunk-Commit #4385 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4385/])
HADOOP-9924. Addendum patch to address issue with an empty classpath entry on Windows. Contributed by Shanyu Zhao. (ivanmi: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1520903)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileUtil.java
, +1 on the addendum patch. I verified that the test passes on Linux and on Windows.

I have committed the change to trunk, branch-2 and branch-2.1-beta. Thanks Shanyu!, SUCCESS: Integrated in Hadoop-Yarn-trunk #327 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/327/])
HADOOP-9924. Addendum patch to address issue with an empty classpath entry on Windows. Contributed by Shanyu Zhao. (ivanmi: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1520903)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileUtil.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1517 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1517/])
HADOOP-9924. Addendum patch to address issue with an empty classpath entry on Windows. Contributed by Shanyu Zhao. (ivanmi: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1520903)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileUtil.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1543 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1543/])
HADOOP-9924. Addendum patch to address issue with an empty classpath entry on Windows. Contributed by Shanyu Zhao. (ivanmi: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1520903)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestFileUtil.java
]