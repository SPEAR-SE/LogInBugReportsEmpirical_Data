[screenshot of broken progress counters, The problem was that SequenceFile.Sorter.MergeQueue calculates progress as (total size of keys and values read) / (total size of files to be merged on disk). When a file is compressed, the file size is much smaller than the combined sizes of the keys and values. In fact, there is also a problem when compression is turned off - the code returns progress less than 100% because it does not count bytes in the file that are not part of keys and values, such as the header and length fields. This patch changes MergeQueue to use the position in the input stream to calculate number of bytes read from disk and divide that by the total amount of data to be merged., Patch that changes progress computation to use position in input stream., Matei, unfortunately this patch won't work for hadoop-0.18.* since HADOOP-2095 changed Map-Reduce to use a new file format called IFile for intermediate sort/merge..., interesting. can a patch be submitted for 17.*  as well? (generally seems useful and 17 has a few minor releases to come ..), Looking at the patch submitted for HADOOP-2095, it seems that it has the same problem (by doing totalBytesProcessed += (key.getLength()-key.getPosition()) + 
 (value.getLength()-value.getPosition())). I can submit a separate patch against 18 to fix that, but it would also be good to place this in 17 because 18 is not getting released for a while.
, Is anyone still interested in me writing a patch for 0.18, or have you fixed this issue in IFile already?, Here's a patch that fixes IFile too., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12385650/merge-progress-trunk.patch
  against trunk revision 676069.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2835/console

This message is automatically generated., New patch against trunk to fix the previous merge conflict., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12386001/HADOOP-3131-v2.patch
  against trunk revision 677872.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2906/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2906/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2906/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2906/console

This message is automatically generated., New patch fixing findbugs problem., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12386447/HADOOP-3131-v3.patch
  against trunk revision 678080.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2912/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2912/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2912/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2912/console

This message is automatically generated., Matei, am I missing something here or should IFile.Reader.getPosition return in.getPosition and not 'bytesRead' which is decompressed bytes' count?, Thanks for pointing that out.. here's a new patch that fixes it and includes a test with compression for IFile., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12386583/HADOOP-3131-v4.patch
  against trunk revision 678593.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 8 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to cause Findbugs to fail.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2919/testReport/
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2919/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2919/console

This message is automatically generated., Fixes compile error., Matei, a minor nit: looking through your patch I realised that 'progress reporting' based on rawIn.getPosition might actually off due to the buffering done by IFile.Reader (see IFile.Reader.readData). Should we fix it too? (Of course, it's only a temporary glitch i.e. till the buffered data is consumed and won't be too bad...), I'm not sure it's worth fixing that, because we don't need perfect progress reporting, just a rough guide to tell whether a task is doing something, and what rate it's working at. With compression enabled, it would also be  difficult to figure out which spot in the buffer corresponds to which byte in the compressed file, if we were to use the position in the buffer to figure out progress., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12386638/HADOOP-3131-v5.patch
  against trunk revision 678692.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 8 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2921/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2921/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2921/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2921/console

This message is automatically generated., I do not think that the test failure has anything to do with this patch, but will resubmit the patch to make sure that this is true., Resubmitting., I don't think the TestCLI failure has anything to do with this: HADOOP-3809 should address it., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12386638/HADOOP-3131-v5.patch
  against trunk revision 679202.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 8 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2933/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2933/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2933/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2933/console

This message is automatically generated., Matei, sorry I missed this piece the first time around:

{noformat}
+          for (Segment<K, V> s: segmentsToMerge) {
+            totalBytesProcessed += s.getPosition(); // Count initial bytes read
+          }
+          if (totalBytes != 0) {
+            mergeProgress.set(totalBytesProcessed * progPerByte);
+          } else {
+            mergeProgress.set(1.0f);
+          }
{noformat}

At best it reports progress slightly early (i.e. before the final merge begins) and at worst it provides completely wrong progress value during the merging of intermediate map-outputs since all output for all reduces is in a single file. Hence {{s.getPosition}} is hopelessly off as a  measure of merge progress... I vote we just do away with that block., New patch fixing issues that Arun pointed out., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12386816/HADOOP-3131-v6.patch
  against trunk revision 679601.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 8 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2946/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2946/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2946/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2946/console

This message is automatically generated., Hi arun, would you like to code-review this patch one final time? Thanks., I just committed this. Thanks, Matei! (It's been a long-drawn affair, appreciate your patience!), Awesome, thanks!, Integrated in Hadoop-trunk #581 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/581/])]