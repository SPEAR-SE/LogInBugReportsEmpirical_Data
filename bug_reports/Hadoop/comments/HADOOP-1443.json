[I am marking this as a blocker for  0.13 release. Investigation under progress., This looks like a bug that occurs when a zero-length file is read. Possible fix is attached.  A test case for zero-length files will follow shortly (either as part of this issue or a separate issue)., It'd be nice to have the test case included in this issue, so we can verify both the bug and that it's fixed.  But perhaps it's not trivial to create such a test?, This does not work if you getBlockLocation for the offset at the start of the second block.
I'm working on it. I'll create test cases., The bug is related to a corner case. An empty file in hdfs is represented by one block 
of size 0, which is replicated on the required number of nodes, and the replicas are 
represented respectively by empty files. This case was not handled correctly.
I fixed the bug and created test cases that verify correctness of 2 things:
- empty file open and read;
- reading beyond the file end.
, +1

http://issues.apache.org/jira/secure/attachment/12358751/EmptyFile.patch applied and successfully tested against trunk revision r543622.

Test results:   http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/236/testReport/
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/236/console, +1 code looks good.

Two minor comments:

1. There is a comment in the test saying "// create and write a file that contains three blocks of data". This might not be correct.

2. This patch checks for negative offsets and lengths. Is there a way to enhance the test so that it triggers negative lengths and negative offsets and verify that they generate the expected exceptions?, I just committed this.  Thanks, Konstantin!, This patch has conflicts with the 0.13 branch.  We need a new version of the patch for that branch that does not conflict., My current theory is that this was caused by HADOOP-894, which is not in 0.13.  If that's the case, then this should not be merged into the 0.13 branch, and the "Fix Version" should be 0.14, not 0.13.  Does that sound right to others, or is this really a problem in 0.13?, I agree. This bug does not exist in 0.13. , Moving to 0.14 and downgrading., Yes 0.14 is right for this patch if 894 is not in 0.13.]