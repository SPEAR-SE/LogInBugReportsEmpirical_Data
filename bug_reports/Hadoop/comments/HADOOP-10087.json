[I have a user hdadmin on my machine, with hdadmin as its primary group and shadow as its supplementary group. The API UserGroupInformation.getGroupNames() should return hdadmin group first since it's primary, but I got following different result when I ran org.apache.hadoop.security.UserGroupInformation.main():
Getting UGI for current user
13/10/30 15:22:23 DEBUG security.Groups:  Creating new Groups object
13/10/30 15:22:23 DEBUG util.NativeCodeLoader: Trying to load the custom-built native-hadoop library...
13/10/30 15:22:23 DEBUG util.NativeCodeLoader: Loaded the native-hadoop library
13/10/30 15:22:23 DEBUG security.JniBasedUnixGroupsMapping: Using JniBasedUnixGroupsMapping for Group resolution
13/10/30 15:22:23 DEBUG security.JniBasedUnixGroupsMappingWithFallback: Group mapping impl=org.apache.hadoop.security.JniBasedUnixGroupsMapping
13/10/30 15:22:24 DEBUG security.Groups: Group mapping impl=org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback; cacheTimeout=300000
13/10/30 15:22:24 DEBUG security.UserGroupInformation: hadoop login
13/10/30 15:22:24 DEBUG security.UserGroupInformation: hadoop login commit
13/10/30 15:22:24 DEBUG security.UserGroupInformation: using local user:UsernamePrincipal: hdadmin
13/10/30 15:22:24 DEBUG security.UserGroupInformation: UGI loginUser:hdadmin (auth:SIMPLE)
User: hdadmin
Group Ids:
13/10/30 15:22:24 DEBUG security.Groups: Returning fetched groups for 'hdadmin'
Groups: shadow hdadmin
UGI: hdadmin (auth:SIMPLE)
Auth method SIMPLE
Keytab false, I have a user hdadmin on my machine, with hdadmin as its primary group and shadow as its supplementary group. The API UserGroupInformation.getGroupNames() should return hdadmin group first since it's primary, but I got following different result when I ran org.apache.hadoop.security.UserGroupInformation.main():
Getting UGI for current user
13/10/30 15:22:23 DEBUG security.Groups:  Creating new Groups object
13/10/30 15:22:23 DEBUG util.NativeCodeLoader: Trying to load the custom-built native-hadoop library...
13/10/30 15:22:23 DEBUG util.NativeCodeLoader: Loaded the native-hadoop library
13/10/30 15:22:23 DEBUG security.JniBasedUnixGroupsMapping: Using JniBasedUnixGroupsMapping for Group resolution
13/10/30 15:22:23 DEBUG security.JniBasedUnixGroupsMappingWithFallback: Group mapping impl=org.apache.hadoop.security.JniBasedUnixGroupsMapping
13/10/30 15:22:24 DEBUG security.Groups: Group mapping impl=org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback; cacheTimeout=300000
13/10/30 15:22:24 DEBUG security.UserGroupInformation: hadoop login
13/10/30 15:22:24 DEBUG security.UserGroupInformation: hadoop login commit
13/10/30 15:22:24 DEBUG security.UserGroupInformation: using local user:UsernamePrincipal: hdadmin
13/10/30 15:22:24 DEBUG security.UserGroupInformation: UGI loginUser:hdadmin (auth:SIMPLE)
User: hdadmin
Group Ids:
13/10/30 15:22:24 DEBUG security.Groups: Returning fetched groups for 'hdadmin'
Groups: shadow hdadmin
UGI: hdadmin (auth:SIMPLE)
Auth method SIMPLE
Keytab false, Yu Gao, does this fix your issue?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12613259/HADOOP-10087.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3275//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3275//console

This message is automatically generated., Hi Colin, thanks for the patch. It solves the reported problem., Patch looks good to me, thanks for fixing this Colin. Just one comment:

* Can we skip the {{goto error}} handling in hadoop_user_info_getgroups? I think that free is already handled in JniBasedUnixGroupMapping and the main by calling hadoop_user_info_free.

+1 once addressed., you're right.  hadoop_user_info_free takes care of this.  I removed the error handling from hadoop_user_info_getgroups., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618167/HADOOP-10087.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3353//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3353//console

This message is automatically generated., SUCCESS: Integrated in Hadoop-trunk-Commit #4866 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4866/])
HADOOP-10087. UserGroupInformation.getGroupNames() fails to return primary group first when JniBasedUnixGroupsMappingWithFallback is used (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1550229)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/security/hadoop_user_info.c
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1610 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1610/])
HADOOP-10087. UserGroupInformation.getGroupNames() fails to return primary group first when JniBasedUnixGroupsMappingWithFallback is used (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1550229)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/security/hadoop_user_info.c
, FAILURE: Integrated in Hadoop-Yarn-trunk #420 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/420/])
HADOOP-10087. UserGroupInformation.getGroupNames() fails to return primary group first when JniBasedUnixGroupsMappingWithFallback is used (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1550229)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/security/hadoop_user_info.c
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1637 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1637/])
HADOOP-10087. UserGroupInformation.getGroupNames() fails to return primary group first when JniBasedUnixGroupsMappingWithFallback is used (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1550229)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/security/hadoop_user_info.c
]