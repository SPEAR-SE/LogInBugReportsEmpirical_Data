[After again updated to latest trunk, the problem is resolved., Already fixed by latest version., The latest trunk only fix the compile problem of generating the right version-info file. 
But using the lastest trunk (-r 1439752), the runtime has a critical problem that the hadoop name node and data node starts up with incorrect version information. Thus cause problems for other systems.
, I tried to find the problem that why this random phenomenon happens even at the runtime.

The problem lies on the class path using to load the common-version-info.properties. I checked that the common-version-info.properties file in the hadoop-common-3.0.0-SNAPSHOT.jar has the right information. But it loaded from another common-version-info.properties file which is in the hadoop-common-3.0.0-SNAPSHOT-sources.jar( when sources was packaged). While the values of common-version-info.properties file in the hadoop-common-3.0.0-SNAPSHOT-sources.jar are uninitialized and thus shows values such as ${pom.version}.

In some environments, the hadoop-common-3.0.0-SNAPSHOT-sources.jar may appear after hadoop-common-3.0.0-SNAPSHOT.jar in the class path. But in some others, it map appear before and cause problems.

I checked that in trunk version without this problem, the common-version-info.properties doesn't exists in hadoop-common-3.0.0-SNAPSHOT-sources.jar. So it has no problem., Hi, Jerry.

I expected this to be resolved by the patch on HADOOP-9246, which was committed on 1/28.  Can you try again with the latest trunk code, and let me know if you still see a problem?  You can be sure that you have the HADOOP-9246 fix if the pom.xml for hadoop-common and hadoop-yarn-common show that the {{version-info}} goal is bound to {{<phase>generate-resources</phase>}}.

Thanks!
, Hi Chris,
The trunk revision I checked out is -r 1439752 which already include HADOOP-9246 (-r 1439620).
This is a different problem phenomenon. Before HADOOP-9246, the common-version-info.properties in hadoop-common-3.0.0-SNAPSHOT.jar is NOT correctly generated. But in trunk -r 1439752 (which is with HADOOP-9246) the common-version-info.properties in hadoop-common-3.0.0-SNAPSHOT.jar is correctly generated. But another common-version-info.properties with incorrect information was packaged to hadoop-common-3.0.0-SNAPSHOT-sources.jar which cause the runtime may load the incorrect file since both files are in the class path.

Jerry, The latest trunk -r 1440286 has the same problem. 

On one machine:
[hadoop@bdpe01 tools]$ hadoop version
Hadoop ${pom.version}
Subversion ${version-info.scm.uri} -r ${version-info.scm.commit}
Compiled by ${user.name} on ${version-info.build.time}
From source with checksum ${version-info.source.md5}

While on another machine with the same binary:
[hadoop@bdpe02 ~]$ hadoop version
Hadoop 2.0.2-alpha
Subversion http://svn.apache.org/repos/asf/hadoop/common -r 1440286
Compiled by haifeng on 2013-01-30T18:41Z
From source with checksum 5fab855acaace993f9bbf06ebda1fa9e
, Please note that I changed the hadoop version manually to Hadoop 2.0.2-alpha for my own testing purposes and that doesn't related to the problem., The incorrect version would cause more problems when running MapReduce jobs even if the cluster seems to start as normal. For example, when running Hive queries, the query failed at random and the log shows:

2013-01-30 15:45:37,080 WARN [main] org.apache.hadoop.mapred.YarnChild: Exception running child : java.lang.RuntimeException: java.lang.reflect.InvocationTargetException
	at org.apache.hadoop.util.ReflectionUtils.newInstance(ReflectionUtils.java:128)
	at org.apache.hadoop.io.serializer.WritableSerialization$WritableDeserializer.deserialize(WritableSerialization.java:66)
	at org.apache.hadoop.io.serializer.WritableSerialization$WritableDeserializer.deserialize(WritableSerialization.java:42)
	at org.apache.hadoop.mapred.MapTask.getSplitDetails(MapTask.java:370)
	at org.apache.hadoop.mapred.MapTask.runOldMapper(MapTask.java:402)
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:341)
	at org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:158)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:396)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1452)
	at org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:153)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
	at org.apache.hadoop.util.ReflectionUtils.newInstance(ReflectionUtils.java:126)
	... 10 more
Caused by: java.lang.NumberFormatException: For input string: "${pom"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
	at java.lang.Integer.parseInt(Integer.java:449)
	at java.lang.Integer.parseInt(Integer.java:499)
	at org.apache.hadoop.hive.shims.ShimLoader.getMajorVersion(ShimLoader.java:125)
	at org.apache.hadoop.hive.shims.ShimLoader.loadShims(ShimLoader.java:92)
	at org.apache.hadoop.hive.shims.ShimLoader.getHadoopShims(ShimLoader.java:66)
	at org.apache.hadoop.hive.ql.io.CombineHiveInputFormat$CombineHiveInputSplit.<init>(CombineHiveInputFormat.java:85)
	... 15 more
, Jerry, thank you for the details.  That helps clarify the problem.  I would not expect the HADOOP-9246 patch to fix the problem that you're seeing.

I think we need to revisit HADOOP-8723 (patch from [~jlowe]) or HADOOP-9116 (patch from [~tucu00]).  The goal of both of these issues is to remove the test and source jars from the runtime classpath, because they can cause odd problems like this.  There was some question about those patches potentially making it more awkward to run tests, so they haven't been committed yet.  If we need a compromise, then maybe we could just move the source jar out of the way for now and revisit moving the test jar off of the classpath later.  We only need to move the source jar out of the way to resolve HADOOP-9260, and it's definitely not correct to have the source jar on the classpath.
, Agree that we should move the source jars off the classpath.  +1 for taking just the source jars portion of HADOOP-9116 in the short term to fix this issue, then HADOOP-9116 can complete the move of test jars off the classpath when we decide how to resolve the running of tests issue.
, I'm uploading a patch to move the source jars under a /source sub-directory in the distribution tarballs.

I confirmed that the NameNode and ResourceManager UI both show correct version info with this patch.  I also ran a full distro build including native and bundled snappy on Ubuntu and manually checked the resulting tarballs to make sure that there were no unintended side effects.

[~jerrychenhf], do you want to test this to see if it resolved the issue for you?

[~jlowe], do you want to check this patch to make sure it doesn't interfere too much with the plans for HADOOP-9116?

Thanks!
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12567884/HADOOP-9260.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-assemblies.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2143//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2143//console

This message is automatically generated., No tests, because it's a change in the build only., +1, changes look good to me and is aligned with HADOOP-9116 wrt. source jar placement.  Giving Jerry some time to kick the tires on the patch before committing., +1 By applying the patch, the sources jar are put to separate sources folder and the problem is resolved.
Thanks,
Jerry, Thanks, Chris!  I committed this to trunk and branch-2., Integrated in Hadoop-trunk-Commit #3324 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3324/])
    HADOOP-9260. Hadoop version may be not correct when starting name node or data node. Contributed by Chris Nauroth (Revision 1442639)

     Result = SUCCESS
jlowe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1442639
Files : 
* /hadoop/common/trunk/hadoop-assemblies/src/main/resources/assemblies/hadoop-dist.xml
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
, Integrated in Hadoop-Yarn-trunk #119 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/119/])
    HADOOP-9260. Hadoop version may be not correct when starting name node or data node. Contributed by Chris Nauroth (Revision 1442639)

     Result = FAILURE
jlowe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1442639
Files : 
* /hadoop/common/trunk/hadoop-assemblies/src/main/resources/assemblies/hadoop-dist.xml
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
, Integrated in Hadoop-Hdfs-trunk #1308 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1308/])
    HADOOP-9260. Hadoop version may be not correct when starting name node or data node. Contributed by Chris Nauroth (Revision 1442639)

     Result = SUCCESS
jlowe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1442639
Files : 
* /hadoop/common/trunk/hadoop-assemblies/src/main/resources/assemblies/hadoop-dist.xml
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
, Integrated in Hadoop-Mapreduce-trunk #1336 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1336/])
    HADOOP-9260. Hadoop version may be not correct when starting name node or data node. Contributed by Chris Nauroth (Revision 1442639)

     Result = SUCCESS
jlowe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1442639
Files : 
* /hadoop/common/trunk/hadoop-assemblies/src/main/resources/assemblies/hadoop-dist.xml
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
]