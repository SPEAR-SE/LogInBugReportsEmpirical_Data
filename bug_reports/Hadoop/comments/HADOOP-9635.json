[Attached Patch., {code}
Program received signal EXC_BAD_ACCESS, Could not access memory.
Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000000
[Switching to process 406 thread 0x1103]
0x00000001094a67fc in Java_org_apache_hadoop_net_unix_DomainSocket_validateSocketPathSecurity0 (env=0x1005004c0, clazz=0x1094a90e9, jstr=0x0, skipComponents=0) at DomainSocket.c:308
308            token && rest[0];
(gdb) bt
#0  0x00000001094a67fc in Java_org_apache_hadoop_net_unix_DomainSocket_validateSocketPathSecurity0 (env=0x1005004c0, clazz=0x1094a90e9, jstr=0x0, skipComponents=0) at DomainSocket.c:308
#1  0x0000000105011eee in ?? ()
#2  0x000000010500685a in ?? ()
#3  0x00000001050069b3 in ?? ()
#4  0x000000010500685a in ?? ()
#5  0x00000001050069b3 in ?? ()
#6  0x000000010500685a in ?? ()
#7  0x000000010500685a in ?? ()
#8  0x000000010500685a in ?? ()
#9  0x00000001050069b3 in ?? ()
#10 0x00000001050069b3 in ?? ()
#11 0x00000001050069b3 in ?? ()
#12 0x000000010500685a in ?? ()
#13 0x0000000105001438 in ?? ()
#14 0x0000000101096a12 in JVM_Lseek ()
#15 0x00000001010967d6 in JVM_Lseek ()
#16 0x00000001010b95d3 in JVM_FindLoadedClass ()
#17 0x00000001010b947b in JVM_FindLoadedClass ()
#18 0x0000000100002cf3 in ?? ()
#19 0x0000000100003240 in ?? ()
#20 0x00007fff9753b7a2 in _pthread_start ()
#21 0x00007fff975281e1 in thread_start ()
(gdb) 
{code}, Thanks for finding this.

bq.     jthr = newIOException(env, "path is too long!  We expected a path no longer than %zd UTF-8 bytes.", sizeof(path));

You should also update this {{IOException}} to talk about sizeof(path) - 1 bytes.

With regard to {{GetStringUTFRegion}}, I wasn't able to find anything in the JNI docs saying that it didn't NULL-terminate.  On the other hand, there was nothing in there saying it did.  I looked in my copy of the OpenJDK 6 source code, and it was NULL-terminating.  However, given the ambiguity in the docs, we should do this., Incorporated changes for Exception. Also, first formatted patch. , Hi [~cmccabe],

Thank you for the review. I have incorporated that into the patch. This is now a patch. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12587199/0001-HADOOP-9635-Fix-Potential-Stack-Overflow-in-DomainSo.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2631//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2631//console

This message is automatically generated., +1.  Thanks, V. Karthik., Integrated in Hadoop-trunk-Commit #3898 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3898/])
    HADOOP-9635. Fix potential stack overflow in DomainSocket.c (V. Karthik Kumar via cmccabe) (Revision 1491927)

     Result = SUCCESS
cmccabe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1491927
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/net/unix/DomainSocket.c
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, committed to trunk and branch-2, [~cmccabe] Can you please merge this into branch-2.1-beta too? Seems like an important fix. Thanks!, committed to branch-2.1-beta., Integrated in Hadoop-Yarn-trunk #238 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/238/])
    HADOOP-9635. Fix potential stack overflow in DomainSocket.c (V. Karthik Kumar via cmccabe) (Revision 1491927)

     Result = SUCCESS
cmccabe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1491927
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/net/unix/DomainSocket.c
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, Integrated in Hadoop-Hdfs-trunk #1428 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1428/])
    HADOOP-9635. Fix potential stack overflow in DomainSocket.c (V. Karthik Kumar via cmccabe) (Revision 1491927)

     Result = FAILURE
cmccabe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1491927
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/net/unix/DomainSocket.c
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, Integrated in Hadoop-Mapreduce-trunk #1455 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1455/])
    HADOOP-9635. Fix potential stack overflow in DomainSocket.c (V. Karthik Kumar via cmccabe) (Revision 1491927)

     Result = SUCCESS
cmccabe : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1491927
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/net/unix/DomainSocket.c
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, For some reason this is in trunk section in CHANGES.txt on trunk, in 2.0.5 section in 2.1.0-beta. I fixed the CHANGES.txt in trunk and 2.1.0-beta.]