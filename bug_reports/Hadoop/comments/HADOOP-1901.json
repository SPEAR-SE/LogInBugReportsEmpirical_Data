[Added shutdown hook and also removed an obsolete Javadoc comment in main., +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12365894/HADOOP-1901.patch
against trunk revision r575578.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/768/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/768/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/768/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/768/console

This message is automatically generated., What are the important benefits of running stopTracker() over simply having the JVM exit?  It seems to mostly just cause threads to exit and sockets to close, which would happen anyway when the JVM exits.  Is there some external state that's changed by stopTracker()?, stopTracker() calls close() and we want to put the cleanup code for all the systems started by JobTracker under here. We are working on a patch that logs hadoop metrics data into DFS using a simon aggregator that is launched by the JobTracker and this aggregator needs to be shutdown properly for it to close the DFS file (to make the file visible). There might be other use cases as well where people want to commit something before exit for a clean shutdown., So, to be clear, nothing currently requires this, but a future feature may depend on this, right?  Can you please create the future issue that will depend on this?, Yes, you are right. I just filed HADOOP-1918 on the proposed feature., Perhaps we should simply include this in HADOOP-1918, as this provides no value and isn't really a bug until HADOOP-1918 is implemented., Ok, I will include this as part of HADOOP-1918.]