[After further code review, I don't think this is really a problem in practice.  While it's true that the {{Listener}} and {{Reader}} threads are not guaranteed to be fully initialized after return from {{RPC#Server#start}}, the important thing is that the server socket is listening and accepting connections, via the code in the {{Listener}} constructor:

{code}
    public Listener() throws IOException {
      address = new InetSocketAddress(bindAddress, port);
      // Create a new server socket and set to non blocking mode
      acceptChannel = ServerSocketChannel.open();
      acceptChannel.configureBlocking(false);

      // Bind the server socket to the local host and port
      bind(acceptChannel.socket(), address, backlogLength, conf, portRangeConfig);
{code}

The server socket bind is guaranteed to be done before {{RPC#Server#start}} returns, so a caller can start a server and be guaranteed that an immediate connection attempt will succeed.  It might experience some extra latency on the response if it needs to wait for the {{Listener}} and {{Reader}} threads to finish initialization, but it won't fail.

I don't think this is really a bug.  We probably just need to change the logic of the failing test, and this is already covered in HADOOP-8980.

I'm planning on resolving this as Not a Problem.  I'll leave this open a few more days in case anyone else wants to comment., As per prior comments, this doesn't appear to be a real problem in practice, so I'm resolving it as not a problem.]