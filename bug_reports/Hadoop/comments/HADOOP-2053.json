[Marking this a blocker since apps that were working with 0.13 release fails with 0.14, If fixing HADOOP-2043 leads us to doing a 0.14.3 release, we should include the fix for this issue in that as well., Here is a patch which frees the reference to the large {{DataOutputBuffer}} that {{BasicTypeSorterBase}} has in it's {{close}} method... this lets the GC collect away the keyValBuffer. 

In absence of this patch, there is a window where both the currently active keyValBuffer and the one that should have been freed in the previous iteration are both active i.e. doubling the required amount of memory, which leads to the OutOfMemoryException.

All credit to this goes to Koji!, Previously (hadoop-0.13.0) re-used the keyValBuffer by doing a *reset* on it, this led to some scenarios (HADOOP-875) where the large keyValBuffer could be kept around even after spilling, and subsequent iterations wouldn't need it, thus wasting memory.

Now, we completely release it and use a new buffer in every iteration, however it means we could run into a performance-regression vis-a-vis 0.13.0, but this jira is about fixing the correctness issue.

I've filed HADOOP-2054 to try and capture the creamy parts of both -  lets discuss., I just committed this. Thanks, Arun!, Integrated in Hadoop-Nightly #274 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/274/])]