[On MapR, this is the intended affect ... the shuffle files should be placed in the DFS and not on local drives. So if you are planning to make changes, please do so in a HDFS-only manner., I believe the intent was to have the intermediate files on the same file system as the result. Simply removing the prepending of the mapped.local.dir path works, as the intermediate file names are already being generated to avoid conflicts. I have modified SequenceFile to this effect and the sort/merge works properly without creating unintended directories on HDFS. Here is one of the changes (there are a couple other minor changes to support this).
{code}
//            Path outputFile =  lDirAlloc.getLocalPathForWrite(
//                                                tmpFilename.toString(),
//                                                approxOutputSize, conf);
//            LOG.debug("writing intermediate results to " + outputFile);
//
//            Writer writer = cloneFileAttributes(
//                    fs.makeQualified(segmentsToMerge.get(0).segmentPathName),
//                    fs.makeQualified(outputFile), null);
            LOG.debug("writing intermediate results to " + tmpFilename);

            Writer writer = cloneFileAttributes(
                    fs.makeQualified(segmentsToMerge.get(0).segmentPathName),
                    fs.makeQualified(tmpFilename), null);
{code}, Hi everyone,

This bug is still alive. Are there any updates on fixing it?, Let me check this. , [~akshayrai09], hmm, I think the situation is a bit complex since SequenceFile#sort is using tmpDir as outputDir. It means current code assume outputDir is same to tmpDir. I think we need to refactor SequenceFile drastically to fix this problem..., [~ozawa], sorry for the late reply. I am not clear with the point you raised. From what I can gather, the output directory is different from the directory where the temporary/intermediate files are stored. The temporary files are stored in a location specified by "mapred.local.dir" or "io.seqfile.local.dir" and the output is stored in the location specified by the user(outFile, parameter to the sort method). 

However, the problem here is that the code creates the temporary files in hdfs if it has the required permissions and the reason as explained in the description., [~ozawa], any thoughts?, [~akshayrai09] Yes, I think I can understand the problem itself. We should fix this problem.

{quote}
 I am not clear with the point you raised. From what I can gather, the output directory is different from the directory where the temporary/intermediate files are stored.
{quote}

I mentioned about the internal design of SequenceFile.Sorter. We need a big refactoring of the code to fix this.]