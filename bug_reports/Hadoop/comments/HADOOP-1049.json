[If the call to connection.setupIOstreams() in org.apache.hadoop.ipc.Client.getConnection() is the problem, then this was introduced by HADOOP-312., I just looked at the code to find out possible race conditions. I saw that one possible case is when there is an error in connecting to a server. In such a case, the values of the various fields are:
socket = some valid value, inUse = 0, shouldCloseConnection = false, in = null
At this point of time, the connection-thread is waiting on a wait() method (inside waitForWork)
Now, assuming that the ConnectionCuller has not killed the connection (removed the connection from the cache), if another attempt is made to connect to the same server, the ref count is incremented on the connection object. The call to setupIOstreams will notify the connection-thread that there is work to be done and return immediately (as the socket is non-null). The connection-thread wakes up and finds the values:
socket = some valid value, inUse = 1, shouldCloseConnection = false, in = null
So waitForWork returns "true". This causes the next statement in the connection-thread's run method to execute which is "in.readInt" and since "in" is null we get a NullPointerException.

When the patch to HADOOP-312 was committed, the socket.connect call was not there and instead the socket would always be null if the connection could not be established to the server in question. In some patch, this behaviour got changed (included timeout) to 
socket = new Socket();
socket.connect(address, timeout); 
So, irrespective of whether we could connect to the server, socket would always have a valid non-null value. Unfortunately, this impacts the logic of the IPC client system. 

A fix for this would be to set socket to null if we could not connect to the server after maxRetries number of retrials (today just inUse is set to zero if this condition becomes true)., I am attaching a fix for this issue (since I think I know where the problem is and it is a major issue)., +1, +1, because http://issues.apache.org/jira/secure/attachment/12352264/1049.patch applied and successfully tested against trunk revision http://svn.apache.org/repos/asf/lucene/hadoop/trunk/513935. Results are at http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch, I just committed this.  Thanks, Devaraj!]