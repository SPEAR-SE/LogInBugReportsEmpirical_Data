[+1 for deprecating these methods, and removing them in a subsequent release.

+0 for (in a separate issue) adding new set(String,Writable) and getWritable(String) methods., These methods were added to support caching of transient Objects created within the scope of a single task - especially Objects that are costly to instantiate, and which follow a "singleton" pattern within the scope of the current task. Examples: plugin registry, which requires reading and parsing a lot of config files; individual plugin instances; processing chains composed of several plugins, etc.

These Objects are not Writable, nor does it make sense to make them Writable - the only purpose of this pattern is to avoid repetitive instantiation of Configurable objects with the same Configuration instance.

If we remove this functionality from Hadoop, then a dozen Nutch subsystems would break, since they rely on this feature. Nutch could implement its own object cache, but then a lot of APIs would have to be changed to take not only a Configuration instance but also an object cache singleton ..

Perhaps a clarification in the javadoc would be sufficient?, > Perhaps a clarification in the javadoc would be sufficient?

In my opinion, no. Hadoop is a framework for distributed programming and the functions as they exist right now don't work in that context. 

I'd propose that Nutch have a PluginRegistry that has an IdentityHashMap<Configuration, Map<String, Object>> or possibly a WeakHashMap. That would allow you to look up objects based a configuration without pretending that the Configuration was going to store the object in some portable way., That's a good point. Even though it means changing ~20 APIs in Nutch ... :(

So, reluctantly, +1 from me., This patch deprecates the offending methods. It also adds a method "getRaw" that returns the value from the config without variable replacements being done. (Some of the code was using the fact that get(String, Object) wasn't do replacement.) It also replaces a couple spots where dfs was putting an enumeration in to the config using these methods., +1

http://issues.apache.org/jira/secure/attachment/12356896/no-object-get.patch applied and successfully tested against trunk revision r536000.

Test results:   http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/122/testReport/
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/122/console, I just committed this.  Thanks, Owen!, Integrated in Hadoop-Nightly #83 (See http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/83/)]