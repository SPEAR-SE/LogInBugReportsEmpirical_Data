[I think HOSTNAME should be changed from upper to lower case as describe below.

{code}
    if (thisScheme.equals(thatScheme)) {          // schemes match
      if(thisAuthority != null && thatAuthority != null) {
        thisAuthority = thisAuthority.toLowerCase();
        thatAuthority = thatAuthority.toLowerCase();
      }
    ...
{code}

Is it create any problems?, Submitting a patch., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12379341/1373.patch
against trunk revision 643282.

    @author +1.  The patch does not contain any @author tags.

    tests included -1.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2160/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2160/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2160/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2160/console

This message is automatically generated., Ok, i'll add a test and re-submit., Here's a v02 patch., Submit this patch., +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12379464/1373_v02.patch
against trunk revision 643282.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 3 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2175/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2175/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2175/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2175/console

This message is automatically generated., Would someone review this? 
, +1 for the first patch. I don't think we need the second patch. If we want to add a test, the test should test checkPath() rather than testing 'toLowerCase()'.

Could change the test to check checkPath()?

, Raghu, I see.
What do you think about add a checkPath() test to TestDFSMkdirs()?, Sure. Is it easier to add there than TestFileSystem.java? Either place is fine., -1 for adding public String convertHostNameToLower(String hostName) to FileSystem.
Is there a good reason to add this method to the FileSystem public API?

> Could change the test to check checkPath()?
+1 the JUnit test should test the problem described in this JIRA but not the newly created methods., Thanks for your review. I'll add a test to 01 version patch., Please review this v03 patch., +1. Looks good to me., +1 patch looks good, Updated patch uses 'eqaulsIgnoreCase()' instead of converting the strings to lower case.

# avoids new string creations and extra traversals.
# applies this fix while comparing with defaultURI also
# now schemes are also case insensitive (that is correct, right?)., 1373_v04.patch:  +1, 1373_v04.patch: +1, -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12379677/1373_v04.patch
against trunk revision 645773.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 3 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs -1.  The patch appears to cause Findbugs to fail.

    core tests -1.  The patch failed core unit tests.

    contrib tests -1.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2185/testReport/
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2185/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2185/console

This message is automatically generated., 
The findbugs warning is for a line that is not changed in the patch : {code}
if (thisAuthority == thatAuthority ||       // & authorities match {code}

{noformat}
Bug type ES_COMPARING_STRINGS_WITH_EQ (click for details)
In class org.apache.hadoop.fs.FileSystem
In method org.apache.hadoop.fs.FileSystem.checkPath(Path)
Actual type java.lang.String
At FileSystem.java:[line 297]
Details
ES_COMPARING_STRINGS_WITH_EQ: Comparison of String objects using == or !=
{noformat}

The description says :
bq. This code compares java.lang.String objects for reference equality using the == or != operators. Unless both strings are either constants in a source file, or have been interned using the String.intern() method, the same string value may be represented by two different String objects. Consider using the equals(Object) method instead.

I tried casting them to 'Object' in the same line, but didn't work. AFICS this usage is fine. Any one sees a real issue here?
, -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12379677/1373_v04.patch
against trunk revision 645773.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 3 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs -1.  The patch appears to introduce 1 new Findbugs warnings.

    core tests -1.  The patch failed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2195/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2195/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2195/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2195/console

This message is automatically generated., That's strange. My local findbugs doesn't report it., {code}
public class Test {
  public static void main(String[] args) {
      String thisAuthority = "EDWARD";
      String thatAuthority = "edward".toUpperCase();
      System.out.println(thisAuthority == thatAuthority); // prints false
      System.out.println(thisAuthority.equals(thatAuthority)); // print true 
  }
}
{code}

Oh... I think It should probably be using
  thisAuthority.equals(thatAuthority)
rather than 
  thisAuthority == thatAuthority
, Retrying., Re-scheduling, 
I don't know what  v05 fixes.

> Oh... I think It should probably be using
> thisAuthority.equals(thatAuthority)

No. This is the main fix. It should use equalsIgnoreCase() and it already does. Adding one more equals does not help and in fact result in NPE if {{thisAuthority}} is null.

I think we should just commit v04. 


, I just committed v04.patch. Thanks Edward! 

If we want to fix the findbugs (it may not exist in newer version of findbugs), we can file a jira for 0.18., Thanks Raghu!
I learned a great deal about myself on this issue. ;), Integrated in Hadoop-trunk #457 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/457/])]