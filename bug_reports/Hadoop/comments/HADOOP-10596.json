[I created a patch, which did the following things:

1. Whenever SPENGO is enabled, the authentication is going to protect all URLs instead of none.

2. Make the authentication filter more robust and configurable:
* setting the cookie path
* allowing signature secret file config
* allowing customized authentication filter, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12644481/HADOOP-10596.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3935//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3935//console

This message is automatically generated., I'm not sure this is the right approach. The authentication filter is already customizable. What you might want is to disable spnego when a customized authentication filter is specified., bq. The authentication filter is already customizable.

It's much like the requirement of Http FS uses HttpFSAuthenticationFilter for Kerberos + DT authentication, which is done in web.xml config. I think it's good to allow the similar configuration programatically. , bq. It's much like the requirement of Http FS uses HttpFSAuthenticationFilter for Kerberos + DT authentication.

If I understand correctly, this is supported today in the webhdfs server.

, bq. If I understand correctly, this is supported today in the webhdfs server.

Right, YARN style is to have webapp imbedded in the daemon, and configure it programmatically, which is actually the motivation here., The patch does not seem to be conceptually clean. For example, secret file is an implementation of the filter, it should not be exposed in HttpServer2. Maybe I don't quite understand the use case here. Under what circumstances you only want to parts of the HttpServer to be authenticated?

, bq. For example, secret file is an implementation of the filter, it should not be exposed in HttpServer2

Right, it's the config of the filter. However, we already live with the similar thing in the current HttpServer2. See:

{code}
 params.put(AuthenticationFilter.AUTH_TYPE, "kerberos");
{code}

bq. Under what circumstances you only want to parts of the HttpServer to be authenticated?

I'm not sure I understand your question here. I think the existing code can not protect the web since it doesn't apply the filter to any urls. I changed it to protect all urls, as I think once the authentication is enabled, all the web resources should be secured. Please let me know if it is not the case., bq. params.put(AuthenticationFilter.AUTH_TYPE, "kerberos");

Introducing the secret file is a much larger change. I think a better idea is to clean it up.

bq. ... all the web resources should be secured. Please let me know if it is not the case.

I think there is a configuration to toggle whether NN web UI can be accessed without spnego in secure mode., bq. Introducing the secret file is a much larger change. I think a better idea is to clean it up.

If you strongly object adding more configs in the scope of HttpServer2, I can definitely move it out and this is a proof-of-concept patch, though I'm not sure it's a good idea to have some configs here, others elsewhere.

bq. I think there is a configuration to toggle whether NN web UI can be accessed without spnego in secure mode.

Let me introduce more background about SPNEGO:

1.  We can configure to use authentication or not.
2. When authentication is enabled, we can choose whether to use SPNEGO for web access.
3. When SPNEGO is enabled for web, we need to define what URLs we want to protect.

The configuration you mentioned sounds like the 2nd step.

The problem I found is with the 3rd step. All YARN daemons use initSpnego to initiate the authentication filter to protect web resources (not sure HDFS is using the same method or not as there's an alternative way). The problem is:

1. The authentication filter is actually protect nothing since no urls has been applied to this filter.
2. initSpnego doesn't provide enough flexibility of configuring secret file and the customized filter class programmatically. YARN daemons start the web app inside it instead of putting it into another container, such as Tomcat (It seems that web hdfs is doing this and can use web.xml to configure the filter) , I'm also not sure I agree with adding the secret file to the http server.  It's an implementation detail of the kerberos authenticator., Timeline service security has already worked around the issue.]