[You mention that file:// is being added to the path, but in the stack trace it appears the problem is {{ftp://localhost:61246/tmp/myfile}} is having a leading slash prepended because that's probably the cwd of the server.  Thus the real fix in your patch is calling {{path.getPath}} to remove the scheme+authority.

I may suggest implementing {{setWorkingDirectory(Path)}} to pass only {{path#getPath()}} through to the server, although I question why many of the methods are implicitly changing the cwd?, @Daryn i don't think you are right here, the first log line from ftp server reads:

{noformat}
 Received command: [CWD ftp://localhost:61246/tmp/myfile]
{noformat}

while it should receive only [CWD /tmp/myfile] from hadoop's FTPFileSystem

Also all other calls to changeWorkingDirectory in FTPFileSystem use a variant of parent.toUri().getPath() (parent.toUri().getPath().toString())
{noformat}
FTPFileSystem.java-6393-    // FSDataInputStream.
FTPFileSystem.java:6419:    client.changeWorkingDirectory(parent.toUri().getPath());
--
FTPFileSystem.java-8320-    // FSDataOutputStream.
FTPFileSystem.java:8347:    client.changeWorkingDirectory(parent.toUri().getPath());
--
FTPFileSystem.java-17201-        String parentDir = parent.toUri().getPath();
FTPFileSystem.java:17254:        client.changeWorkingDirectory(parentDir);
--
FTPFileSystem.java-19688-    }
FTPFileSystem.java:19694:    client.changeWorkingDirectory(parentSrc);
{noformat}

so i think it should be patched like this

I'm sorry im not providing a unit/integration testcase, is there one ? Basically this was caught by our integration tests trying to use FTPFileSystem for some file renaming., My apologies if I was confusing.  We're saying the same thing - the fully qualified path, not the fully qualified uri, should be passed.  I suggested a common method since many places seem to do the same logic to invoke with just the path.

Note this may just be a test case bug:  the next line after the CWD you cite is {noformat}org.mockftpserver.fake.filesystem.FileSystemException: /ftp://...{noformat} which means it may just be the mock prepending the /?, the "/" is the ftp user's home directory, which is set to / in the mock server setup. Changing the home to "/home/test/", the next error line reads
{noformat}
org.mockftpserver.fake.filesystem.FileSystemException: /home/test/ftp://localhost:61246/tmp/myfile
{noformat}
/home/test/ftp://localhost:61246/tmp/myfile

I'm not so sure it makes sense to create an additional method for this, changeWorkingDirectory(String) method is a public one and
I don't really have a clue about hadoop's file systems, so all that Path to URI to Path conversion happening in this close is a mystery to me.

The patch had a unneeded toString() at parentSrc.getPath().toString()
{noformat}
-    client.changeWorkingDirectory(parentSrc);
+    client.changeWorkingDirectory(parentSrc.getPath());
{noformat}, Ok, that's what I thought.  Does the test fail if run against a live {{FTPFileSystem}}?  It looks like it's maybe a mock problem, although the patch is an improvement.  BTW, you need to attach patches as a file to the jira and submit them for the pre-commit build to test it.

Related, but perhaps for another jira: you may consider having {{makeAbsolute(Path)}} return {{new Path(null, null, makeQualified(path).getPath())}}.  That will return just the absolute path of the URI, which will allow the code in rename and many other methods to be simplified., patch making the argument to changeWorkingDirectory() in rename() correct - without ftp:// scheme prefix, well testing on live ftp, the "CWD file://path" is still being sent to it (and of course failing on the ftp server side), no mock problem, ftp server commands have no clue about schemes...  

attaching the patch against trunk, patch for FTPFileSystem rename method fix, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12539796/HDFS-8653-1.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.ha.TestZKFailoverController

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1264//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1264//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12539796/HDFS-8653-1.patch
  against trunk revision 14e2639.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4717//console

This message is automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12539796/HDFS-8653-1.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6360/console |


This message was automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12539796/HDFS-8653-1.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6363/console |


This message was automatically generated.]