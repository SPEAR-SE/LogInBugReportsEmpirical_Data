[The idea is mostly borrowed from https://github.com/google/flatbuffers/blob/master/include/flatbuffers/flatbuffers.h

Compile passed on macosx and ubuntu, no ppc environment to test this.
, links to related jiras, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12702154/HADOOP-11665.001.patch
  against trunk revision 4228de9.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5830//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5830//console

This message is automatically generated., I verified this patch in both ppc64 LE and ppc64 BE environment. It works fine., [~decster], this sounds like a new feature to me without looking at the details. If so, can we put this in 2.8? I'm trying to reduce more churn on 2.7 in order to get to a release soon. Tx., Looks like [~Ayappan] mark this as blocker, maybe he require this as bugfix?
, Vinod Kumar Vavilapalli, this is not a new feature. This jira actually came from HADOOP-10846. Native checksum calculation fails in Big Endian architecture. Its better we can have this in 2.7 release. Thank You, Yes, its a bugfix and not a new feature, Any update on this?, Any update here? This issue has been lingering around for a long time., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |   5m 10s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 27s | There were no new javac warning messages. |
| {color:green}+1{color} | release audit |   0m 18s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | whitespace |   0m  0s | The patch has 4  line(s) that end in whitespace. Use git apply --whitespace=fix. |
| {color:green}+1{color} | install |   1m 37s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | common tests |  22m 43s | Tests passed in hadoop-common. |
| | |  37m 50s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12702154/HADOOP-11665.001.patch |
| Optional Tests | javac unit |
| git revision | trunk / 8ef07f7 |
| whitespace | https://builds.apache.org/job/PreCommit-HADOOP-Build/7052/artifact/patchprocess/whitespace.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/7052/artifact/patchprocess/testrun_hadoop-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/7052/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/7052/console |


This message was automatically generated., Rather than depending on compiler-specific macros a better approach might be to use CMake's endian checks and pass in the appropriate -D flag as part of the compiler invocation. See http://www.cmake.org/cmake/help/v3.0/module/TestBigEndian.html, I have also checked that the endianness macro being used in the patch ('__BIG_ENDIAN__') is specifically defined by gcc on Mac. I have checked it for SLES Big Endian platform and it is not defined there. Therefore It doesn't seem to be reliable for platforms other than Mac.

I have modified the existing patch and used c code to check endianness instead of __BIG_ENDIAN__ macro.
I will be adding the modified patch (HADOOP-11665.002.patch) here. Please verify it., Adding modified patch to remove dependency for _BIG_ENDIAN_ macro., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 7s {color} | {color:blue} docker + precommit patch detected. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 8m 48s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 26s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 9m 34s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 4s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 15s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 1m 44s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 8m 35s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 8m 35s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 8m 35s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 9m 25s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 9m 25s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 9m 25s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 6s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 15s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} whitespace {color} | {color:red} 0m 0s {color} | {color:red} The patch has 83 line(s) that end in whitespace. Use git apply --whitespace=fix. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 7m 30s {color} | {color:red} hadoop-common in the patch failed with JDK v1.8.0_66. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 7m 30s {color} | {color:red} hadoop-common in the patch failed with JDK v1.7.0_85. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 16s {color} | {color:red} Patch generated 1 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 66m 44s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Failed junit tests | hadoop.io.file.tfile.TestTFile |
|   | hadoop.fs.TestFsShellCopy |
|   | hadoop.io.file.tfile.TestTFileComparator2 |
|   | hadoop.security.alias.TestCredShell |
|   | hadoop.fs.TestFSMainOperationsLocalFileSystem |
|   | hadoop.io.TestMapFile |
|   | hadoop.fs.contract.localfs.TestLocalFSContractOpen |
|   | hadoop.security.TestLdapGroupsMapping |
|   | hadoop.io.TestArrayFile |
|   | hadoop.fs.TestLocalFSFileContextMainOperations |
|   | hadoop.security.ssl.TestSSLFactory |
|   | hadoop.security.TestShellBasedIdMapping |
|   | hadoop.io.file.tfile.TestTFileUnsortedByteArrays |
|   | hadoop.io.file.tfile.TestVLong |
|   | hadoop.io.TestSetFile |
|   | hadoop.fs.contract.localfs.TestLocalFSContractRename |
|   | hadoop.io.TestSequenceFileSync |
|   | hadoop.io.file.tfile.TestTFileSplit |
|   | hadoop.fs.contract.localfs.TestLocalFSContractMkdir |
|   | hadoop.io.file.tfile.TestTFileNoneCodecsByteArrays |
|   | hadoop.fs.shell.TestCopyPreserveFlag |
|   | hadoop.io.TestSequenceFileSerialization |
|   | hadoop.fs.viewfs.TestFcMainOperationsLocalFs |
|   | hadoop.fs.viewfs.TestFSMainOperationsLocalFileSystem |
|   | hadoop.fs.contract.localfs.TestLocalFSContractSeek |
|   | hadoop.io.file.tfile.TestTFileSeqFileComparison |
|   | hadoop.crypto.key.TestKeyProviderFactory |
|   | hadoop.security.alias.TestCredentialProviderFactory |
|   | hadoop.io.file.tfile.TestTFileStreams |
|   | hadoop.io.file.tfile.TestTFileNoneCodecsStreams |
|   | hadoop.crypto.TestCryptoStreamsForLocalFS |
|   | hadoop.io.file.tfile.TestTFileSeek |
|   | hadoop.io.TestSequenceFile |
|   | hadoop.io.file.tfile.TestTFileByteArrays |
|   | hadoop.io.file.tfile.TestTFileNoneCodecsJClassComparatorByteArrays |
|   | hadoop.io.TestBloomMapFile |
|   | hadoop.util.TestGenericOptionsParser |
|   | hadoop.io.compress.TestCodec |
|   | hadoop.io.file.tfile.TestTFileJClassComparatorByteArrays |
|   | hadoop.fs.contract.localfs.TestLocalFSContractCreate |
|   | hadoop.fs.TestChecksumFileSystem |
|   | hadoop.util.TestNativeCrc32 |
|   | hadoop.fs.TestSymlinkLocalFSFileSystem |
|   | hadoop.crypto.key.TestKeyShell |
| JDK v1.7.0_85 Failed junit tests | hadoop.io.file.tfile.TestTFile |
|   | hadoop.fs.TestFsShellCopy |
|   | hadoop.io.file.tfile.TestTFileComparator2 |
|   | hadoop.security.alias.TestCredShell |
|   | hadoop.fs.TestFSMainOperationsLocalFileSystem |
|   | hadoop.io.TestMapFile |
|   | hadoop.fs.contract.localfs.TestLocalFSContractOpen |
|   | hadoop.security.TestLdapGroupsMapping |
|   | hadoop.io.TestArrayFile |
|   | hadoop.fs.TestLocalFSFileContextMainOperations |
|   | hadoop.security.ssl.TestSSLFactory |
|   | hadoop.io.file.tfile.TestTFileUnsortedByteArrays |
|   | hadoop.ipc.TestDecayRpcScheduler |
|   | hadoop.io.file.tfile.TestVLong |
|   | hadoop.io.TestSetFile |
|   | hadoop.fs.contract.localfs.TestLocalFSContractRename |
|   | hadoop.io.TestSequenceFileSync |
|   | hadoop.io.file.tfile.TestTFileSplit |
|   | hadoop.fs.contract.localfs.TestLocalFSContractMkdir |
|   | hadoop.io.file.tfile.TestTFileNoneCodecsByteArrays |
|   | hadoop.fs.shell.TestCopyPreserveFlag |
|   | hadoop.io.TestSequenceFileSerialization |
|   | hadoop.fs.viewfs.TestFcMainOperationsLocalFs |
|   | hadoop.fs.viewfs.TestFSMainOperationsLocalFileSystem |
|   | hadoop.fs.contract.localfs.TestLocalFSContractSeek |
|   | hadoop.io.file.tfile.TestTFileSeqFileComparison |
|   | hadoop.crypto.key.TestKeyProviderFactory |
|   | hadoop.security.alias.TestCredentialProviderFactory |
|   | hadoop.io.file.tfile.TestTFileStreams |
|   | hadoop.io.file.tfile.TestTFileNoneCodecsStreams |
|   | hadoop.crypto.TestCryptoStreamsForLocalFS |
|   | hadoop.io.file.tfile.TestTFileSeek |
|   | hadoop.io.TestSequenceFile |
|   | hadoop.io.file.tfile.TestTFileByteArrays |
|   | hadoop.io.file.tfile.TestTFileNoneCodecsJClassComparatorByteArrays |
|   | hadoop.io.TestBloomMapFile |
|   | hadoop.util.TestGenericOptionsParser |
|   | hadoop.io.compress.TestCodec |
|   | hadoop.io.file.tfile.TestTFileJClassComparatorByteArrays |
|   | hadoop.fs.contract.localfs.TestLocalFSContractCreate |
|   | hadoop.fs.TestChecksumFileSystem |
|   | hadoop.util.TestNativeCrc32 |
|   | hadoop.fs.TestSymlinkLocalFSFileSystem |
|   | hadoop.crypto.key.TestKeyShell |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:date2015-11-19 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12773196/HADOOP-11665.002.patch |
| JIRA Issue | HADOOP-11665 |
| Optional Tests |  asflicense  compile  cc  mvnsite  javac  unit  |
| uname | Linux 735e5eb6d877 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HADOOP-Build/patchprocess/apache-yetus-3f4279a/precommit/personality/hadoop.sh |
| git revision | trunk / 23a130a |
| whitespace | https://builds.apache.org/job/PreCommit-HADOOP-Build/8091/artifact/patchprocess/whitespace-eol.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8091/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_66.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8091/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_85.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HADOOP-Build/8091/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_66.txt https://builds.apache.org/job/PreCommit-HADOOP-Build/8091/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_85.txt |
| JDK v1.7.0_85  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8091/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-HADOOP-Build/8091/artifact/patchprocess/patch-asflicense-problems.txt |
| modules | C: hadoop-common-project/hadoop-common U: hadoop-common-project/hadoop-common |
| Max memory used | 77MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8091/console |


This message was automatically generated.

, I suggest the endian detection approach used in HADOOP-11505 is better. CMake already has a probe for endianness, we should just use that.

The problems addressed by this bug and HADOOP-11505 overlap, I suggest the two should be combined into one and one or other of the bugs closed.

Files affected by HADOOP-11665:
hadoop-common-project/hadoop-common/src/main/native/src/hadoop_byteorder.h
hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/util/bulk_crc32.c
hadoop-common-project/hadoop-common/src/main/native/src/org_apache_hadoop.h

Files affected by HADOOP-11505:
hadoop-common-project/hadoop-common/src/CMakeLists.txt
hadoop-common-project/hadoop-common/src/hadoop_endian.h.cmake
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/CMakeLists.txt
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/INativeComparable.java
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/NativeTask.h
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/BlockCodec.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/Lz4Codec.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/codec/SnappyCodec.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/CombineHandler.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/handler/MCollectorOutputHandler.h
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/Buffers.h
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/IFile.h
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/NativeObjectFactory.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/SpillInfo.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/commons.h
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/lib/primitives.h
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/src/util/WritableUtils.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestIFile.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/TestSort.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestKVBuffer.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemBlockIterator.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestMemoryBlock.cc
hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/native/test/lib/TestPartitionBucket.cc
, The latest patch indicates that the checksum calculations assume the buffer is little endian, is that correct? Network byte order (big endian) would be more usual, so I'm just checking..., And FYI I've rolled this up into an updated patch for HADOOP-11505, Given x86 is the CPU for almost all hadoop systems, it's assumptions live in the code: byte ordering, whether misaligned accesses are permitted, etc. There's no assumptions about cache lines in the code —but that's because there's been no optimisation of struct layout for cache efficiency, Resolved by the integration of  HADOOP-11505]