[See this comment for a proposed solution using JNI to call {{fchmod}}:

https://issues.apache.org/jira/browse/HADOOP-11321?focusedCommentId=14233329&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14233329

Note that just creating the file or directory with specific permissions initially may be insufficient, because the existing contract of {{FileSystem}} basically guarantees that the process umask is not a factor.  That's discussed in more detail here:

https://issues.apache.org/jira/browse/HADOOP-11321?focusedCommentId=14230778&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14230778
, can we switch to the java7 {{java.nio.file}} code now, that does let us set permissions on file creation?, bq. can we switch to the java7 java.nio.file code now, that does let us set permissions on file creation?

I investigated this while working on HADOOP-11321.  This would not be a backwards-compatible change, because those permissions would be filtered by the process umask.  The existing semantics of {{FileSystem}} are that the permissions passed by the caller are not influenced by the process umask.  For example, if you call {{FileSystem#create}} with 644 permissions, we make sure the final result is a file with 644 permissions, even if your process umask is 027, which would have silently changed the resulting permissions to 640 by POSIX semantics.  I discussed this in more detail in this comment:

https://issues.apache.org/jira/browse/HADOOP-11321?focusedCommentId=14230778&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14230778

We could consider switching to {{java.nio.file}} in trunk targeted to 3.x if we decide these semantics are incorrect or not worth preserving.]