[Which filesystem?  Ie. hdfs or local?  GlobStatus should return a sorted list because it calls listStatus which returns a sorted list.  If the glob results are not sorted, then listStatus is likely the culprit., Tested on local filesystem. works on a macosx, but not on linux., [~daryn]: smart.  I was wondering why it worked on HDFS but not on localFS.

I don't know how I feel about this JIRA.  The obvious solution is to have localFS sort its output on Linux, but this will cripple performance by forcing us to buffer the whole list of files before we return anything (in addition to the cost of the sort itself, of course).

It would be a bit easier to do in globStatus, since we always have an array there (unlike in listStatus where we might just have an iterator), but the same issues crop up.  We're slowing stuff down, for a feature most don't need.

Do users really depend on this behavior, or can we just drop this from the spec?  I guess the shell probably wants sorted output, to provide a consistent display.  But it can sort it itself, of course.  Thoughts?, In my oppinion, dropping this is totally ok. I agree, that this sorting feature may not be used often. 
, I thought about this some more, and I think we should just sort the array returned from globStatus.  Otherwise, applications will get inconsistent behavior.  Applications can always use the raw listStatus if they don't want to pay the cost of a sort.  And the cost of a sort is not that high when you already have everything in an array (like we do with globStatus)., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12656923/HADOOP-10798.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 1262 javac compiler warnings (more than the trunk's current 1260 warnings).

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.ipc.TestIPC
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4368//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/4368//artifact/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4368//console

This message is automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 36s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:red}-1{color} | javac |   7m 29s | The applied patch generated  123  additional warning messages. |
| {color:green}+1{color} | javadoc |   9m 37s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m  7s | The applied patch generated  2 new checkstyle issues (total was 4, now 5). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   4m 41s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | common tests |  23m 35s | Tests passed in hadoop-common. |
| {color:green}+1{color} | hdfs tests | 165m  1s | Tests passed in hadoop-hdfs. |
| | | 230m 45s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12656923/HADOOP-10798.001.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 6ae2a0d |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/6435/artifact/patchprocess/diffJavacWarnings.txt |
| checkstyle |  https://builds.apache.org/job/PreCommit-HADOOP-Build/6435/artifact/patchprocess/diffcheckstylehadoop-common.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6435/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6435/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/6435/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf901.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6435/console |


This message was automatically generated., I would like to drop the requirement from the API.  Since no one is reporting their application is breaking, no one appears to be depending on the output being sorted.  It's better to let the client pay the cost of sorting, if they need the output sorted, rather than than impose the cost on all callers.  This is particularly true for FileSystem implementations that may not by default return sorted listStatus results., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 42s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:red}-1{color} | javac |   7m 30s | The applied patch generated  2  additional warning messages. |
| {color:green}+1{color} | javadoc |   9m 35s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 14s | The applied patch generated  2 new checkstyle issues (total was 4, now 5). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 35s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   4m 42s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  22m 58s | Tests passed in hadoop-common. |
| {color:green}+1{color} | hdfs tests | 163m 57s | Tests passed in hadoop-hdfs. |
| | | 229m 20s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12656923/HADOOP-10798.001.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / e422e76 |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/6747/artifact/patchprocess/diffJavacWarnings.txt |
| checkstyle |  https://builds.apache.org/job/PreCommit-HADOOP-Build/6747/artifact/patchprocess/diffcheckstylehadoop-common.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6747/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6747/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/6747/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf901.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6747/console |


This message was automatically generated., Hi guys, does parallel sorting rely on the returned files being sorted? If the sorted results are in multiple files, we need to read the files in specific order to maintain the global sort right?, I don't feel strongly about this either way.  If you want to implement the no-sort option, please add sorting to the relevant parts of the shell, though, and post a patch modifying the javadoc., I'd like to go ahead and remove the sorting language from the API.  There's no need to do the sort on shell-side since it's not being done already and hence there should be no behavior change.  Sorting, particularly for large or already sorted entries can be costly.  If the client really needs it sorted either in the code or from the shell, it's easy for them to do so and pay the cost.  

This is a minor change to the API documentation, so it'd be a good newbie task for my colleague, [~srevanka] and I'll assign it to her if we're cool with this plan.
, bq. I'd like to go ahead and remove the sorting language from the API.

OK

bq. There's no need to do the sort on shell-side since it's not being done already and hence there should be no behavior change.

Disagree.  "ls" on UNIX has always returned entries in sorted order.  So does Hadoop's ls, except in the special case where you are using a non-HDFS filesystem.  This is not a normal case, so the discrepancy got overlooked.  But I think we should fix it now.

We don't need to be ultra-fast in the shell, so there seems to be no reason why we shouldn't just add a sort.  At least that's my thinking right now.  What do you think?, Right now this JIRA is limited to correcting an incorrect javadoc.  If we add in changing the output of a reasonably distant command (specifically the shell of liststatus, not just the API of FileSystem.listStatus), that's a pretty big change relative to the original JIRA.  I'd be fine with having that discussion (to sort the shell output of ls) in another JIRA.  Since this additional change would potentially affect current behavior for non-HDFS FileSystems, as you say, it should probably be considered an incompatible change, which again is beyond the scope of the current JIRA.

Can we just restrict this one to the API correction and open another to discuss adding sorting?, OK, I did a little more research into this.  The {{globStatus}} code back in 2.0.3-alpha does sort the entries it returned.  Around Hadoop 2.3, the sort was lost during the globber rewrite.  This was a bug, but it was hidden by the fact that HDFS sorts its listStatus entries (this behavior is undocumented, but 100% consistent).

Since the API documentation says that sorted entries are returned, and since this is the case for the vast majority of use-cases (i.e. when using Hadoop with HDFS), I think changing this behavior in {{globStatus}} would be an incompatible change.  Any user code relying on the old documented behavior would break.  Let's commit the original patch I posted to fix this situation.  If we want to have a discussion about changing the API contract we can have that discussion for Hadoop 3.0 only.

also I feel that the facts that:
1. globStatus has historically had a sort in it
2. users who want to optimize by avoiding a sort can use listStatus

strongly suggest that changing this behavior is not a good idea, even in 3.x., OK, if this is a regression rather than an incorrect Javadoc, I'm OK with the sorting.  +1 on the patch, assuming javadoc and checkstyle warnings are spurious.  I'd like it to go back to 2.6 and 2.7 as well, and will backport it if you don't have the time., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  19m 36s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:red}-1{color} | javac |   7m 34s | The applied patch generated  2  additional warning messages. |
| {color:green}+1{color} | javadoc |   9m 34s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 23s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 14s | The applied patch generated  2 new checkstyle issues (total was 4, now 5). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   4m 59s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  21m 56s | Tests passed in hadoop-common. |
| {color:green}+1{color} | hdfs tests | 159m 17s | Tests passed in hadoop-hdfs. |
| | | 228m 57s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12656923/HADOOP-10798.001.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 5b5bb8d |
| javac | https://builds.apache.org/job/PreCommit-HADOOP-Build/6991/artifact/patchprocess/diffJavacWarnings.txt |
| checkstyle |  https://builds.apache.org/job/PreCommit-HADOOP-Build/6991/artifact/patchprocess/diffcheckstylehadoop-common.txt |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6991/artifact/patchprocess/testrun_hadoop-common.txt |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6991/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/6991/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6991/console |


This message was automatically generated., Thanks, [~jghoman].  It's good to have this finally fixed.  Committed to 2.8, FAILURE: Integrated in Hadoop-trunk-Commit #8101 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8101/])
HADOOP-10798. globStatus() should always return a sorted list of files (cmccabe) (cmccabe: rev 68e588cbee660d55dba518892d064bee3795a002)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Globber.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #975 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/975/])
HADOOP-10798. globStatus() should always return a sorted list of files (cmccabe) (cmccabe: rev 68e588cbee660d55dba518892d064bee3795a002)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Globber.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk-Java8 #245 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/245/])
HADOOP-10798. globStatus() should always return a sorted list of files (cmccabe) (cmccabe: rev 68e588cbee660d55dba518892d064bee3795a002)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Globber.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2172 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2172/])
HADOOP-10798. globStatus() should always return a sorted list of files (cmccabe) (cmccabe: rev 68e588cbee660d55dba518892d064bee3795a002)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Globber.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #233 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/233/])
HADOOP-10798. globStatus() should always return a sorted list of files (cmccabe) (cmccabe: rev 68e588cbee660d55dba518892d064bee3795a002)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Globber.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2191 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2191/])
HADOOP-10798. globStatus() should always return a sorted list of files (cmccabe) (cmccabe: rev 68e588cbee660d55dba518892d064bee3795a002)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Globber.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk-Java8 #243 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/243/])
HADOOP-10798. globStatus() should always return a sorted list of files (cmccabe) (cmccabe: rev 68e588cbee660d55dba518892d064bee3795a002)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Globber.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
* hadoop-common-project/hadoop-common/CHANGES.txt
]