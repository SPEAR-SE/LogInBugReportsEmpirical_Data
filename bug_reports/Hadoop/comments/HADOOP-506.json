[One case in which I am able to reproduce this repeatedly is that job tracker restarts when tasktrackers are still running. basically UNKNOWN_TASKTRACKER status messages are not handled properly in job tracker. 

here is what happens in that case - 

synchronized (taskTrackers) {
    synchronized (trackerExpiryQueue) {
        boolean seenBefore = updateTaskTrackerStatus(trackerName,
                                                     trackerStatus);
        if (initialContact) {		                                        <<<<==== This is false 
            // If it's first contact, then clear out any state hanging around
            if (seenBefore) {		
                lostTaskTracker(trackerName, trackerStatus.getHost());
            }
        } else {
            // If not first contact, there should be some record of the tracker
            if (!seenBefore) {
                return InterTrackerProtocol.UNKNOWN_TASKTRACKER;    
                                                  <<<<=== returns this, but TT already in tasktrackers and not in expiryQueue
            }
        }

        if (initialContact) {
            trackerExpiryQueue.add(trackerStatus);	                         <<<<==== not called 
        }
    }
}


in updateTaskTrackerStatus if (oldStatus == null && initialContact == false ) then its a rogue status and should not be added to tasktrackers map in job tracker. 

I am investigating if this can happen in some other condition as well.
, This patch removes tasktracker from Map maintained by JobTracker if its a UNKNOWN_TASKTRACKER tracker. 
, I just committed this.  Thanks, Sanjay!]