[There are several findbugs warnings. They will be addressed in installments. This change addresses the following issues:
- Use static inner classes where instance variables from the outer class is not used
- Use Iterator for Map Entry to access key avalues instead of iterating over the key set and getting the values for the key from the map
- Use valueOf for Byte, Integer, Short and Long to use existing objects instead of creating new one
- Remove some unused variables

, This change does not have any unit tests as the functionality remains the same. Only minor changes to the code that reduces findbugs warnings., - It is safe to remove match.group(0).length() in StreamXmlRecordReader.

- I think it is better to use the Java foreach-loop in AbstractMetricsContext instead of Iterator.

Other parts look good., Thanks for the comments. I have made the suggested changes.

I ran the unit tests. All the tests passed except org.apache.hadoop.mapred.jobcontrol.TestLocalJobControl. That test fails without this patch also. So it is an unrelated problem.

Without the patch findbugs warnings is 225. With this patch the number of findbugs warnings is 201.

Here is the result of ant test-patch

     [exec] +1 overall.  

     [exec]     +1 @author.  The patch does not contain any @author tags.

     [exec]     +1 tests included.  The patch appears to include 3 new or modified tests.

     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.

     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.


, For the Findbugs warning SR_NOT_CHECKED in StreamXmlRecordReader, I think we should fix it, instead of excluding it.

We may fix it as below:
{code}
-      skippedBytes = bin_.skip(endPos); //Skip succeeds as we have already read this is buffer
+      for(long skiplen = endPos; skiplen > 0; ) {
+        skiplen -= bin_.skip(skiplen); //Skip succeeds as we have already read this is buffer
+      }
{code}
However, if bin_.skip(skiplen) keeps returning 0, it will end up a infinite loop.  We might throw an exception in such case., StreamXmlRecordReader is buggy and from what I am told is discouraged from use. It should be probably be rewritten. Turning off findbugs for this instance helps in focusing on more important bugs. 

Any way here is the updated patch with the suggested change.
, HADOOP-*4210*.patch? Wrong file?, Thanks Nicholas. Here is the right attachment :-), +1 the latest patch looks good., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12390779/HADOOP-4204.patch
  against trunk revision 700322.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 Eclipse classpath. The patch retains Eclipse classpath integrity.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3404/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3404/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3404/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/3404/console

This message is automatically generated., {noformat}
+      Set<Entry<String, MetricValue>> entrySet = metricUpdates.entrySet();
+      for (Entry<String, MetricValue> entry : entrySet) {
+        String metricName = entry.getKey ();
+        MetricValue updateValue = entry.getValue ();
{noformat}
Formatting method invocations as {{ident ()}} is contrary to the [coding conventions|http://java.sun.com/docs/codeconv/html/CodeConventions.doc7.html#490]. It is also more conventional to import java.util.Map (in every file you import java.util.Map.Entry, java.util.Map is already imported) and use
{code}
for (Map.Entry<K,V> entry : map.entrySet()) {
  // ...
}
{code}

It's not worth redoing the patch, but it's worth mentioning., I just committed this. Thanks, Suresh, Integrated in Hadoop-trunk #620 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/620/])
    . Fix findbugs warnings related to unused variables, naive
Number subclass instantiation, Map iteration, and badly scoped inner
classes. Contributed by Suresh Srinivas.
]