[Attaching patch v1 with fix and test case., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12605485/HADOOP-10003.1.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3134//console

This message is automatically generated., trying patch v2, didn't use --binary when generating patch v1, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12605511/HADOOP-10003.2.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3135//console

This message is automatically generated., One more time .. patch was generated using branch 2.1.1-beta, using trunk this time. Uploading patch v3., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12605576/HADOOP-10003.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 2 release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.fs.TestHarFileSystemBasics

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3137//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/3137//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3137//console

This message is automatically generated., [~jdere], can you please look at release audit and the test failure?, bq. It looks like HarFileSystem.listLocatedStatus() doesn't work properly because it is inheriting FilterFileSystem's implementation.
Can you please describe what "not working properly" means and why this patch fixes that issue?, So I'm not a bit unsure as to why the test case is failing in the HadoopQA - I've run this locally on both MacOS and CentOS VM, and the test passes for me.

If HarFileSystem doesn't override listLocatedStatus, the new unit test errors out with the error shown below.  It looks like FilterFileSystem.listLocatedStatus() simply pushing the call down the its underlying filesystem, but since this is a hadoop archive the underlying filesystem won't know about the files in the archive, it needs to look at the index/data files in the archive to be able to get information about the files in the archive. This fix to HarFileSystem originally was in MAPREDUCE-1981 (patch v5), but seems to be missing in subsequent versions of the patch.

Running org.apache.hadoop.fs.TestHarFileSystemBasics
Tests run: 10, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 6.869 sec <<< FAILURE! - in org.apache.hadoop.fs.TestHarFileSystemBasics
testListLocatedStatus(org.apache.hadoop.fs.TestHarFileSystemBasics)  Time elapsed: 0.403 sec  <<< ERROR!
java.io.FileNotFoundException: File dir1 does not exist
	at org.apache.hadoop.fs.RawLocalFileSystem.listStatus(RawLocalFileSystem.java:386)
	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:1482)
	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:1522)
	at org.apache.hadoop.fs.FileSystem$4.<init>(FileSystem.java:1678)
	at org.apache.hadoop.fs.FileSystem.listLocatedStatus(FileSystem.java:1677)
	at org.apache.hadoop.fs.ChecksumFileSystem.listLocatedStatus(ChecksumFileSystem.java:579)
	at org.apache.hadoop.fs.FilterFileSystem.listLocatedStatus(FilterFileSystem.java:235)
	at org.apache.hadoop.fs.TestHarFileSystemBasics.testListLocatedStatus(TestHarFileSystemBasics.java:255)
, {noformat}
    // Use FileSystem's implementation
    return listLocatedStatus(f, DEFAULT_FILTER);
{noformat}

The above listLocatedStatus call actually uses listLocatedStatus implementation from FilterFileSystem and not FileSystem.

Here is the issue. Before the patch:
HarFileSystem#listLocatedStatus(path) in following call chain:
-> FilterFileSystem#listLocatedStatus(path)
--> FilterFileSystem's internal fs#listLocatedStatus(path)

This essentially calls the underlying file system (local or HDFS) listLocatedStatus.


With the patch:
HarFileSystem#listLocatedStatus(path) in following call chain:
-> FilterFileSystem#listLocatedStatus(path, filter)
--> FileSystem#listLocatedStatus(path, filter)
---> FilterFileSystem#listStatus(path, filter)
---> FileSystem#listStatus(path, filter)
---> HarFileSystem#listStatus(path)

Hence the HarFileSystem listStatus comes into picture and the patch fixes the bug.

, BTW the main problem here is, HarFileSystem should not have used FilterFileSystem as the base class. Pretty much every method that FilterFileSystem implements where the method call is delegated to underlying file system, HarFileSystem must override it., Attaching test.har as a tar archive, as Suresh reported having issues applying the patch with binary files., Updated patch. It changes HarFileSystem to subclass FileSystem instead of FilterFileSystem. This patch also must include test.har posted by [~jdere]., Updated patch to remove the rat checks for the har data files required for testing.

With this patch, TestHarFileSystemBasics is still expected to fail due to the absence of test.har in the patch. Reviewer, please run the test TestHarFileSystemBasics, after untarring the test.har.tar in hadoop-common-project/hadoop-common/src/test/resources., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12606177/HADOOP-10003.5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.fs.TestHarFileSystemBasics

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3154//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3154//console

This message is automatically generated., +1
Create a new jira to to update har test to ensure that HarFileSystem implements every declared method of FileSystem (see TestFilterFileSystem#testFilterFileSystem()  - it does a similar check). This ensures that when a new method is added to FileSystem, the test will catch that HarFileSystem is updated accordingly)., SUCCESS: Integrated in Hadoop-trunk-Commit #4508 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4508/])
HADOOP-10003. HarFileSystem.listLocatedStatus() fails. Contributed by Jason Dere and suresh. (suresh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1528256)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/HarFileSystem.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestHarFileSystemBasics.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/resources/test.har
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/resources/test.har/.part-0.crc
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/resources/test.har/_SUCCESS
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/resources/test.har/_index
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/resources/test.har/_masterindex
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/resources/test.har/part-0
, I committed the patch to 2.1.2 beta and all the branches leading up to it., FAILURE: Integrated in Hadoop-Yarn-trunk #350 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/350/])
HADOOP-10003. HarFileSystem.listLocatedStatus() fails. Contributed by Jason Dere and suresh. (suresh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1528256)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/pom.xml
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/HarFileSystem.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/TestHarFileSystemBasics.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/resources/test.har
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/resources/test.har/.part-0.crc
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/resources/test.har/_SUCCESS
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/resources/test.har/_index
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/resources/test.har/_masterindex
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/resources/test.har/part-0
, Closing old tickets that are already part of a release.]