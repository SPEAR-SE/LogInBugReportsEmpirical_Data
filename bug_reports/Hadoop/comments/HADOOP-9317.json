[(This issue is impacting production workflows)

The user can already specify a ticket cache via the env KRB5CCNAME.  Added corresponding envs for KRB5KEYTAB and KRB5PRINCIPAL.

If KRB5KEYTAB is defined, the ticket cache will continue to be searched first but it will fallback to the keytab if there is no ticket cache, no TGT in the ticket cache, or if the ticket cache TGT cannot be renewed.  KRB5PRINCIPAL may optionally be specified if the keytab principal does not match the unix user.

If both KRB5KEYTAB and KRB5CCNAME are defined, a TGT acquired via the keytab will be written to the ticket cache to avoid constantly acquiring a new TGT.

Removed an unnecessary re-instantiation of the UGI (just after it's instantiated and assigned an auth type) to avoid double writing the ticket cache. 

There is no change to existing behavior if the KRB5KEYTAB env is not defined.  These changes allow a user to no longer have to issue periodic kinits, and to no longer have commands fail when the ticket is gone/empty/expired., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12569954/HADOOP-9317.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2201//console

This message is automatically generated., Update stale patch due to changes for ibm's java., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12569963/HADOOP-9317.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2202//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/2202//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2202//console

This message is automatically generated., Fix findbugs warning., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12569971/HADOOP-9317.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2204//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2204//console

This message is automatically generated., Hey Daryn, have you tested this with IBM Java? I don't think it will quite work, since it could result in both useDefaultCcache and useKeytab being set, which according to [IBM's JGSS documentation|http://publib.boulder.ibm.com/infocenter/javasdk/v6r0/index.jsp?topic=%2Fcom.ibm.java.security.component.doc%2Fsecurity-component%2FjgssDocs%2Fjaas_login_user.html] are incompatible when set in the same JAAS config., Maybe I'm missing something, but I don't understand why just using a different KRB5CCNAME for every invocation doesn't fix this.  i.e., program flow should be:

{code}
export KRB5CCNAME=/tmp/mycoolcache.$$
kinit -k -t keytab identity
hadoop jar blah
rm /tmp/mycookcache.$$
{code}

You could even be smarter and check the creation timestamp vs. expiry.  Additionally, I'm not sure, but I don't think kinit -R removes the file.  (But I could be wrong.), As background for the motivation:  In some production environments we have hundreds of job launches every few mins.  The launches may perform dozens of hadoop commands before actually submitting the job.  We are seeing a huge failure rate, necessitating unnecessary retry loops, because of this kinit issue whether it be explicitly by the user or implicitly by hadoop's background renewal.  As the job load is increased, we are seeing more and more failures that are "breaking through" the retry loop.

@Aaron:
I have not tested with IBM's java.  If you have convenient access, would you be able to test it for me?  On the bright side, even if it's broken, it won't be a problem unless the user sets the KRB5KEYTAB env to activate the new code.  If it is broken, could I file another jira to make it work for IBM's java?

@Allen:
Yes, kinit will regardless of -R, unlink the file, open/write the principal, open/write the TGT.  So your suggestion won't work because concurrent launches issuing the kinit will still result in the race condition where one process may be issuing the kinit while another is trying to run hadoop commands.  Obtaining a new TGT for every launch would place tremendously more pressure on the KDC, thus why this change tries the ticket cache, falls back to the keytab, and updates the ticket cache if it had to fallback.
, Refreshed the patch to latest trunk/branch-2, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12584166/HADOOP-9317.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2554//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2554//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12584166/HADOOP-9317.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3328//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3328//console

This message is automatically generated., Talked to Daryn offline. Removing the target version for 0.23, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12584166/HADOOP-9317.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3781//console

This message is automatically generated., bq.  So your suggestion won't work because concurrent launches issuing the kinit will still result in the race condition where one process may be issuing the kinit while another is trying to run hadoop commands.

If you look at the sample script I wrote, we should be using a different credential cache per invocation, thus removing the race condition.

In any case, cancelling the patch since it no longer applies., Moving bugs out of previously closed releases into the next minor release 2.8.0., There has been no movement on this for a while. We'll need to move it out of scope for 2.8.0 soon. Let me know if you disagree., Not much going on here for a long time, dropping from 2.8.0.

Not putting any target-version either anymore, let's target this depending on when there is patch activity.]