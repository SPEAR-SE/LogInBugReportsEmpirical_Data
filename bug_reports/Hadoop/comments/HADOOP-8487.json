[Attaching patch with the fix proposal. This fix modifies problematic tests to use an "abstract" hardcode path instead of System.getProperty("test.build.data") path, as the later one resolves to a local path that fails the DFS check.

This was initially part of the patch for HADOOP-8409 but was spit as it generally represents an issue on its own., Quick question, why is {{WebHdfsFileSystem}} special cased in a few instances?, bq. why is WebHdfsFileSystem special cased in a few instances?
Test utility class {{FileSystemTestHelper}} is used by two tests, {{TestFSMainOperationsLocalFileSystem}} and {{TestFSMainOperationsWebHdfs}}. The former test uses DFS and the latter uses LocalFileSystem. I could change {{FileSystemTestHelper}} to always use {{DFS_TEST_ROOT_DIR}} but in that case, local files would be created under a path different than {{System.getProperty("test.build.data")}} what I was trying to avoid in my changes., @Daryn: Another idea I was thinking about is to allow DFS paths with a colon (for example, let {{/c:/some/path}} be a valid DFS path). I attached an alternate patch that showcases this approach. Ideally we would scope this down to test only, but it is not obvious how. , Attaching updated patch.

New patch fixes the following tests on Windows:

TestBBWBlockReport
TestNameNodeMetrics
TestJobQueueInformation
TestSubmitJob
TestFSMainOperationsWebHdfs
TestMultipleCachefiles
TestStreamingBadRecords
TestSymLink
TestDistCacheEmulation
TestSleepJob, For a few places, if you leave the the variable name to TEST_DIR, rather than change it to DFS_TEST_PATH, the patch becomes a lot smaller. TEST_DIR is a good enough variable name., Thanks for reviewing Sanjay. Attaching updated patch that addresses your comment., I have committed this to Hadoop-1 windows branch. Thanks Ivan.
Ivan, please provide a patch for trunk and I will commit this to trunk., A few small comments:
# In {{FileSystemTestHelper}}, does the {{final}} keyword need to be removed?
# In {{TestFSMainOperationsLocalFileSystem}}, are any changes actually needed?  Ie. why override just to call {{super}}?
# In all of test class changes, please default to build/test/data.  Hardcoding /tmp may cause multiple test runs to collide., Thanks for reviewing Daryn.

bq. In FileSystemTestHelper, does the final keyword need to be removed?
We need this because we want to be able to override the value by tests ({{TestFSMainOperationsWebHdfs}} is one example). This path is not always used in the context of the local path, and this causes problems on Windows, as paths like {{c:/some/path/build/test/data}} are not valid DFS paths (because of the colon).

bq. In TestFSMainOperationsLocalFileSystem, are any changes actually needed? Ie. why override just to call super?
I think I saw this test failing on Windows because the super {{tearDown()}} was not called, causing subsequent tests to fail (could it be related to junit version?). Will try to repro the problem and report back.

bq. In all of test class changes, please default to build/test/data. Hardcoding /tmp may cause multiple test runs to collide.
This is actually the test fix. Similar comment to #1, {{build.test.data}} is a local path and given that it is used in HDFS tests, it fails the valid DFS path check. IOW, these tests should not write to the local file system, and if I understood your worry correctly, should not collide with other tests. We also have the test name embedded in the path, so it should be easy to spot such cases if they exists. Does it make sense?, Makes perfect sense.  I'm fine with /tmp as long as it's always a path in dfs and not the local fs., Apologies for the late response Daryn. To follow up on your commend #2 from above, I verified and the super call is not needed. Given that this is already committed and the actual change is small/irrelevant, it might be an overhead to fix this. I attached the patch that reverts this part anyways, your call on whether you want to commit this :)

Thanks for catching this!
, Thanks for the followup, but it's not a big deal since it's a test., Great, thanks!, Resolving as this is committed to branch-1-win. This way, the state of active Jiras is up to date under HADOOP-8645. Will reference this Jira once we get to fixing this in trunk.]