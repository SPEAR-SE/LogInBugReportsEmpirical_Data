[{code}
Running org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl
Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.422 sec <<< FAILURE!
testInitFirst(org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl)  Time elapsed: 422 sec  <<< FAILURE!
Wanted but not invoked:
metricsSink.putMetrics(<Capturing argument>);
-> at org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl.testInitFirst(TestMetricsSystemImpl.java:99)
Actually, there were zero interactions with this mock.

	at org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl.testInitFirst(TestMetricsSystemImpl.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.mockito.internal.runners.JUnit45AndHigherRunnerImpl.run(JUnit45AndHigherRunnerImpl.java:37)
	at org.mockito.runners.MockitoJUnitRunner.run(MockitoJUnitRunner.java:62)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
{code}
, Seems to be a duplicate of HDFS-3636., For this test failure, I do not think our code has any problems. So, basically, how the testInitFirst function works like this: it will register three sinks, named "Test","Sink1" and "Sink2", each of them has its own blockingQueue, initially the queue is empty, and if there are any items in the queue, they will consume them. In the testInitFirst function, what the function ms.onTimerEvent() did is to put items to all of the queues that let the sinks can consume the items. Followed by this function is stop function. Basically it stops all the threads. 
Why the test is fail is because the sink does not finish to consume the items, it is stopped by calling the function stop().  If we add Thread.sleep(sometime) before the stop function, the test will be successful.Original I think maybe we can add the checking condition to check if the queue is empty before we actually do the stop. But I think that the purpose of this stop() function is when I call this functions, all the sink threads should stop no matter they are idle or they are doing something. If we actually add the checking condition or other synchronized mechnism to make sure all the items in queue is consumed before we stop the thread, does this violate the purpose of calling stop function ?
And actually the test is fail, on the other side, it proved that our stop function is actually worked correctly. When we call the stop, everything is stopped no matter what they are doing right now. Based on that, I runned this test several times, I found that sometimes it will be successful, sometimes half rigth half wrong, sometimes all fails.
If we try to make the testcase pass, what we need to do is to change the test case to :
    verify(sink1, atMost(2)).putMetrics(r1.capture());
    List<MetricsRecord> mr1 = r1.getAllValues();
    verify(sink2, atMost(2)).putMetrics(r2.capture());
    List<MetricsRecord> mr2 = r2.getAllValues();
    if(mr1.size() != 0 && mr2.size() != 0){
    	checkMetricsRecords(mr1);
        assertEquals("output", mr1, mr2);
    }else if(mr1.size() != 0){
    	checkMetricsRecords(mr1);
    }else if(mr2.size() != 0){
    	checkMetricsRecords(mr2);
    }, Attached the patch that addresses the test fails on windows. Add a test case to verify the callback correctly, abd test case to verify the stop call immediately, Tabs should be replaced with two spaces. Looks fine otherwise., Is this the same issue as reported by HADOOP-9057?, Yes, it is the same. Your fix is very similar to what Chuan has submitted i.e. adding a short sleep before the verification., Format the code, Actually, using mockito timeout works. We actually verify the callback before we call stop functions. But I still keep the test case that verify the stop function correctly. 

Patch 3 is the mockito timeout version, Thanks for the patch Xuan! The patch lgtm besides some minor nits:

# Please add a comment about atMost(2) in the original test to document the intention.
# Please fix the style issues according to https://wiki.apache.org/hadoop/CodeReviewChecklist
** Indentation needs to be 2 spaces, I see 2, 3, 4, 8 being used at the same time :), Thanks Xuan for the patch! I don't have anything else to add on top of what Luke already called out. Patch looks good., Format the code, Hi, Xuan.  Unfortunately, this patch has gone stale and now does not apply cleanly to branch-trunk-win.  I believe it's because of other changes in the same file in HADOOP-9090.  Can you rebase the patch against current branch-trunk-win?  Thanks!, +1 The rebased patch (version 5) worked great., +1 for the patch., I committed the patch. Thank you Xuan., This isn't windows specific right? See HDFS-3636. How about merging to trunk as well?, Okay, will merge it into trunk., I committed the patch to trunk and branch-2 as well., Integrated in Hadoop-trunk-Commit #3302 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3302/])
    HADOOP-8981. Merge r1422279 from branch-trunk-win to trunk (Revision 1440780)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1440780
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/metrics2/impl/TestMetricsSystemImpl.java
, Integrated in Hadoop-Yarn-trunk #113 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/113/])
    HADOOP-8981. Merge r1422279 from branch-trunk-win to trunk (Revision 1440780)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1440780
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/metrics2/impl/TestMetricsSystemImpl.java
, Integrated in Hadoop-Hdfs-trunk #1302 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1302/])
    HADOOP-8981. Merge r1422279 from branch-trunk-win to trunk (Revision 1440780)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1440780
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/metrics2/impl/TestMetricsSystemImpl.java
, Integrated in Hadoop-Mapreduce-trunk #1330 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1330/])
    HADOOP-8981. Merge r1422279 from branch-trunk-win to trunk (Revision 1440780)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1440780
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/metrics2/impl/TestMetricsSystemImpl.java
, Could we please backport this test fix to branch-1 and branch-1-win?  I'm attaching a patch that makes the equivalent change for branch-1.  The same patch file is applicable to branch-1-win too.  Thanks!, +1 for the branch-1 patch., I committed the branch-1 patch to branch-1 and branch-1-win. Thank you Chris.]