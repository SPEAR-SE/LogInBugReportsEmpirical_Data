[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12671994/HADOOP-11156.000.patch
  against trunk revision 0577eb3.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4838//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4838//console

This message is automatically generated., It will be very hard to do unit test for this patch. Because the free disk space can be changed by other process and the test environment will affect the test result.
Also DelegateToFileSystem.getFsStatus is matching to FileSystem.getStatus, the change is very straightforward.
  public FsStatus getFsStatus() throws IOException {
    return fsImpl.getStatus();
  }
public FsStatus getFsStatus(final Path f) throws IOException {
    return fsImpl.getStatus(f);
}
, Yea, I agree that testing this may be kind of hard. It looks like it matters most for RawLocalFileSystem, and you need multiple partitions configured.

+1 I'll commit this shortly, thanks for working on this Zhihai., Committed to trunk and branch-2. I haven't seen an announcement yet about branch-2.6, but I assume that since it exists, branch-2 = 2.7.0 now., thanks [~andrew.wang] for review and commit., SUCCESS: Integrated in Hadoop-trunk-Commit #6158 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6158/])
HADOOP-11156. DelegateToFileSystem should implement getFsStatus(final Path f). Contributed by Zhihai Xu. (wang: rev d7075ada5d3019a8c520d34bfddb0cd73a449343)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DelegateToFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #697 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/697/])
HADOOP-11156. DelegateToFileSystem should implement getFsStatus(final Path f). Contributed by Zhihai Xu. (wang: rev d7075ada5d3019a8c520d34bfddb0cd73a449343)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DelegateToFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1888 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1888/])
HADOOP-11156. DelegateToFileSystem should implement getFsStatus(final Path f). Contributed by Zhihai Xu. (wang: rev d7075ada5d3019a8c520d34bfddb0cd73a449343)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DelegateToFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1913 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1913/])
HADOOP-11156. DelegateToFileSystem should implement getFsStatus(final Path f). Contributed by Zhihai Xu. (wang: rev d7075ada5d3019a8c520d34bfddb0cd73a449343)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/DelegateToFileSystem.java
]