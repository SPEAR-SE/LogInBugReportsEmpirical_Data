[I have found a similar Bug And a fix, MAPREDUCE-4512. Please reffer the patch, and kindly encorporate the same.
While fixing I too have encounted such a senario, I think this occur at the end of the buffer which would capture 4096 Charactors.
My understanding is the ending and begining of next buffer can and the delimiter indexses are not properly handled.
This is resulting in some or the other bugs.

Tried solving , but the fix resulted in some new bugs. The once all the senario is caught we can ensure a posible fix., A few lines of change in LineReader, also incorporaed the MAPREDUCE-4512 patch, A few lines of change in LineReader, also incorporaed the MAPREDUCE-4512 patch, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12539291/MAPREDUCE-4519.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2709//testReport/
Console output: https://builds.apache.org/job/PreCommit-MAPREDUCE-Build/2709//console

This message is automatically generated., As with MAPREDUCE-4512, I moved this to project Hadoop Common since that's where the patch needs to be applied.

In the future, please don't set the Reviewed flag unless the patch has been reviewed and approved by someone in the community. I see no record of that occurring, so I've cleared that flag. Also the Fix versions field is intended to mark where the patch has been integrated, so please don't set this field. If you'd like to indicate what versions you'd like to have the patch committed to, use the Target Versions field instead.
, Thank you Meria for including my patch as well.
Thats Jason, for have a closer look, and merging it.
Please guide about howt to categorize , the bug
As this was a issue faced in MAP REDUCE
And was supposed to be raised in HADOOP, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12539291/MAPREDUCE-4519.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1253//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1253//console

This message is automatically generated., Finding the right JIRA project is a straightforward mapping from the top-level projects in the code base:

* Anything under hadoop-common-project maps to Hadoop Common
* Anything under hadoop-hdfs-project maps to Hadoop HDFS
* Anything under hadoop-mapreduce-project maps to Hadoop Map/Reduce, The issue occurs when the buffer that reads the input file content, at a particular instance, ends with a character or character sequence that matches the head of the record delimiter.

For example, in the above case, while reading the file, the buffer's end bytes at an instance might be as follows,

........</name></entity><entity><id>3</

causing it to skip the last two characters considering it as a part of the delimiter </entity>.

The default buffer size is 4096 bytes.Hence the input should be more than 4096 bytes and the last bytes of the buffer should match the head of the delimiter...Please guide how to create test case for the patch..



 

, Patch with test case. This patch holds good with the test case of HADOOP-8654., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12541222/HADOOP-8654.patch
  against trunk revision .

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1318//console

This message is automatically generated., Comments from a quick perusal of the patch:

* Please post patches with appropriate names, this is HADOOP-8655 but the patch name implies it's for HADOOP-8654.
* Patch needs to be updated to trunk. HADOOP-8654 has been committed since this patch was posted.
* Patch contains tabs, please convert to spaces.
* Why were the {{InterfaceAudience}} and {{InterfaceStability}} decorators removed?
, Patch is commited aganist 04ba22681a494bf718dff7926e783c75bf64c2c7 taking care of HADOOP-8654,, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12541232/HADOOP-8655.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    -1 javac.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1320//console

This message is automatically generated., The code looks good, but it looks like you put TestLineReader.java under the main directory when it should be under the test directory.  It will not compile under main.  I also haven't had a chance to look at it in depth., Revised the patch as per Robert Joseph Evans comments, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12541726/HADOOP-8655.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.ha.TestZKFailoverController

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1339//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1339//console

This message is automatically generated., Could any body clarify about 
org.apache.hadoop.ha.TestZKFailoverController Unit Test

, The TestZKFailoverController failure is unrelated, see HADOOP-8591., Thanks Robert Joseph Evans & Jason Lowe , for providing the info,
If I am not wrong, ZKFailoverController itself has a problem , and that is being reflected here.
If so, I hope this could be closed,
Lets listen from Arun AK, as well,
Hope his data sets would respond positevely., Gelesh,

The new patch looks better, but I still have a few comments.

 # Please make sure you follow the style guide. It should follow [Sun's code conventions|http://java.sun.com/docs/codeconv/] except indentation is 2 spaces, not 4.  There are still tabs everywhere throughout the code and there are many lines that go over 80 characters in length.  Comments are included in the 80 character limit.
 # In the test getTestData method is only called once, and is very specific to the single test method.  I would prefer to see it inlined in testCustomDeliminator.
 # I appreciate that you want to explain what is happening in your code, but I don't think you need quite so many comments.  For example you don't need to reference HADOOP-8654.  There should be test cases added with HADOOP-8654 to validate that there were no regression. , Thank you Robert Joseph Evans,
This patch is updated as per your comments, Since Hadoop_QA automated testing has not acted upon the previous patch, re uploading the same, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542076/HADOOP-8655%20%282%29.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.ha.TestZKFailoverController

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1348//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1348//console

This message is automatically generated., Gelesh :I had tried out the patch that you have posted herein. That really solves my problem. Thanks a lot for the patch. Is the patch that you re uploaded same as before? Do I need to apply this new patch?, Thanks for the patch Gelesh +1.

I checked this into trunk and branch-2., Integrated in Hadoop-Common-trunk-Commit #2627 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2627/])
    HADOOP-8655. Fix TextInputFormat for large deliminators. (Gelesh via  bobby) (Revision 1376592)

     Result = SUCCESS
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1376592
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/LineReader.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestLineReader.java
, Integrated in Hadoop-Hdfs-trunk-Commit #2691 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2691/])
    HADOOP-8655. Fix TextInputFormat for large deliminators. (Gelesh via  bobby) (Revision 1376592)

     Result = SUCCESS
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1376592
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/LineReader.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestLineReader.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #2655 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2655/])
    HADOOP-8655. Fix TextInputFormat for large deliminators. (Gelesh via  bobby) (Revision 1376592)

     Result = FAILURE
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1376592
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/LineReader.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestLineReader.java
, Integrated in Hadoop-Hdfs-trunk #1144 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1144/])
    HADOOP-8655. Fix TextInputFormat for large deliminators. (Gelesh via  bobby) (Revision 1376592)

     Result = FAILURE
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1376592
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/LineReader.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestLineReader.java
, Integrated in Hadoop-Mapreduce-trunk #1175 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1175/])
    HADOOP-8655. Fix TextInputFormat for large deliminators. (Gelesh via  bobby) (Revision 1376592)

     Result = FAILURE
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1376592
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/LineReader.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestLineReader.java
]