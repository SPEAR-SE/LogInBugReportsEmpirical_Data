[same bug different chipset, Hi [~genebradley],

I recommend keeping your description short so that people can quickly look at it and see what this bug is about.  You can provide additional details in the first few comments if necessary.

The discussion on HADOOP-11466 does explain why we chose to blacklist SPARC rather than whitelisting x86.  The biggest reason is that there are many x86 variants with slightly different names, and we were afraid of missing one and causing a fallback to unoptimized performance on x86.  The other reason is that most modern architectures support unaligned access, so disabling the optimization is getting less and less relevant.

I see that you are running on Itanium.  This is actually a platform I'm not familiar with.  It seems like both Red Hat and Microsoft have dropped support for Itanium in their latest releases, so I'm not sure how much more of this architecture we will see.

Would you care to post a patch fixing the problem on Itanium?, 
Hi  Colin,

I always add stack trace and register info so if some other unlucky guy hits a crash they can do patch and match.

if (System.getProperty("os.arch").equals("sparc"))  || System.getProperty("os.arch").equals("ia64"))  

should be a pretty easy fix just testing in would be the issue.

This came in thru a customer of ours in China, let me check with them if they can swing a test for us.

And I can post the fix, but since I have never done this before would benefit from some guidance.


Gene




, Hi gene,

It would be better if you put the stack into a comment than in the description.

bq. if (System.getProperty("os.arch").equals("sparc")) || System.getProperty("os.arch").equals("ia64")) should be a pretty easy fix just testing in would be the issue.

ok

bq. And I can post the fix, but since I have never done this before would benefit from some guidance.

Just attach it as a patch file to this JIRA.  Thanks!, HI Colin,

How can I get this fixed.  Again itâ€™s a  real simple fix.


Gene


]