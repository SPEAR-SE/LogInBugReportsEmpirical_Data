[I looked at this code path and it looks like if Hadoop was indeed compiled without OpenSSL you would have gotten the following message 
"build does not support openssl."

This failure seems have come from the InitDS call , which calls into Native Code. To understand why the loading failed, I need to understand which OS you are running, your LD config info and which version of OpenSSL shared objects are in your path. 

In other words, I need more info on how to reproduce this bug. This is error message is certainly not due to hadoop being compiled without openssl support. It is most probably due to a runtime error.


, My best guess is that this happens when the build finds an OpenSSL, but it's too old for us to use.  According to the CMake logic, we'd skip compilation of OpensslCipher.c:

{code}
if (OPENSSL_LIBRARY AND OPENSSL_INCLUDE_DIR)
    GET_FILENAME_COMPONENT(HADOOP_OPENSSL_LIBRARY ${OPENSSL_LIBRARY} NAME)
    INCLUDE(CheckCSourceCompiles)
    SET(OLD_CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES})
    SET(CMAKE_REQUIRED_INCLUDES ${OPENSSL_INCLUDE_DIR})
    CHECK_C_SOURCE_COMPILES("#include \"${OPENSSL_INCLUDE_DIR}/openssl/evp.h\"\nint main(int argc, char **argv) { return !EVP_aes_256_ctr; }" HAS_NEW_ENOUGH_OPENSSL)
    SET(CMAKE_REQUIRED_INCLUDES ${OLD_CMAKE_REQUIRED_INCLUDES})
    if(NOT HAS_NEW_ENOUGH_OPENSSL)
        MESSAGE("The OpenSSL library installed at ${OPENSSL_LIBRARY} is too old.  You need a version at least new enough to have EVP_aes_256_ctr.")
    else(NOT HAS_NEW_ENOUGH_OPENSSL)
        SET(USABLE_OPENSSL 1)
    endif(NOT HAS_NEW_ENOUGH_OPENSSL)
endif (OPENSSL_LIBRARY AND OPENSSL_INCLUDE_DIR)
if (USABLE_OPENSSL)
    SET(OPENSSL_SOURCE_FILES
        "${D}/crypto/OpensslCipher.c"
        "${D}/crypto/random/OpensslSecureRandom.c")
{code}

However, the check for {{buildSupportsOpenssl}} is driven by {{HADOOP_OPENSSL_LIBRARY}}, and I believe the CMake logic still left that defined:

{code}
JNIEXPORT jboolean JNICALL Java_org_apache_hadoop_util_NativeCodeLoader_buildSupportsOpenssl
  (JNIEnv *env, jclass clazz)
{
#ifdef HADOOP_OPENSSL_LIBRARY
  return JNI_TRUE;
#else
  return JNI_FALSE;
#endif
}
{code}

At the Java layer, this would cause it to think the build supports OpenSSL, therefore it calls {{initIDs}}, but they symbol isn't really in libhadoop.so.  Therefore, it's an {{UnsatisfiedLinkError}} with message set to the signature of the Java native method.

Colin, if you know you saw this happening with a particular version of OpenSSL, would you please comment?  That would help Anu with a repro.  Thanks!, This patch defines HADOOP_OPENSSL_LIBRARY  if and only if we find a USABLE_OPENSSL. Based on Chris analysis, it is possible for us to find a invalid OpenSSL installation but still  have  _buildSupportsOpenssl() function return true, since the HADOOP_OPENSSL_LIBRARY gets defined in CMake file., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12696037/HDFS-7520.001.patch
  against trunk revision 8acc5e9.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9404//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9404//console

This message is automatically generated., -1 tests included. - Since this moves a BUILD variable definition to proper location no new tests are really required. This was tested by building native builds with this change., I moved this issue from HDFS to HADOOP, because that's where the root cause is., +1 for the patch.  I committed this to trunk and branch-2.

I put this through some additional manual testing by forcing a compilation failure in the C snippet that we compile to check how old OpenSSL is.  When I did that, I reproduced the same erroneous output reported in the description.  I then verified that the patch fixed the problem.

Colin, thank you for reporting the problem.  Anu, thank you for contributing the patch., FAILURE: Integrated in Hadoop-trunk-Commit #7003 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7003/])
HADOOP-11548. checknative should display a nicer error message when openssl support is not compiled in. Contributed by Anu Engineer. (cnauroth: rev 064e0770a0f32e7f32a7ba16c71394d7e75a3eb3)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12696037/HDFS-7520.001.patch
  against trunk revision 34fe11c.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5582//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5582//console

This message is automatically generated., Thanks, guys.  Haven't had a chance to test this but it looks like the right direction.  Those build variants can be tricky., FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #95 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/95/])
HADOOP-11548. checknative should display a nicer error message when openssl support is not compiled in. Contributed by Anu Engineer. (cnauroth: rev 064e0770a0f32e7f32a7ba16c71394d7e75a3eb3)
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #829 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/829/])
HADOOP-11548. checknative should display a nicer error message when openssl support is not compiled in. Contributed by Anu Engineer. (cnauroth: rev 064e0770a0f32e7f32a7ba16c71394d7e75a3eb3)
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #2027 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2027/])
HADOOP-11548. checknative should display a nicer error message when openssl support is not compiled in. Contributed by Anu Engineer. (cnauroth: rev 064e0770a0f32e7f32a7ba16c71394d7e75a3eb3)
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #92 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/92/])
HADOOP-11548. checknative should display a nicer error message when openssl support is not compiled in. Contributed by Anu Engineer. (cnauroth: rev 064e0770a0f32e7f32a7ba16c71394d7e75a3eb3)
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #96 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/96/])
HADOOP-11548. checknative should display a nicer error message when openssl support is not compiled in. Contributed by Anu Engineer. (cnauroth: rev 064e0770a0f32e7f32a7ba16c71394d7e75a3eb3)
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2046 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2046/])
HADOOP-11548. checknative should display a nicer error message when openssl support is not compiled in. Contributed by Anu Engineer. (cnauroth: rev 064e0770a0f32e7f32a7ba16c71394d7e75a3eb3)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/CMakeLists.txt
]