[Changed the replication timeout to 4 seconds (from the default of 5 minutes) for this unit test., I am testing this patch on the machine where it failed, The test failed with the patch, +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12374097/testDecommissionWindows.patch
against trunk revision 614721.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1683/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1683/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1683/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1683/console

This message is automatically generated., This test passes for me if I apply patch from HADOOP-2713 .
, I think Raghu is right. HADOOP-2713 shows that block replication fail  on windows. This might be the cause of timeout for TestDecomission., I just committed this., Do we really want to commit this patch since it did not really fix a bug? Even if the test passed the config parameters might just hide., I can reproduce the exact problem that this bug is supposed to fix. I f there is a real bug then decresing the timeout will *not* hide it. The code will retry the transfer multiple times and still timeout., Integrated in Hadoop-trunk #380 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/380/])]