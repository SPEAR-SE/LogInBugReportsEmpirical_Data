[UserGroupInformation should not become dependent on Server, rather, UserGroupInformation should own the ThreadLocal, and Server should be a client of that functionality., Here is a patch implementing the idea of Raghu and Doug, Note that the running time of TestNNThroughputBenchmark drops from 14.281 sec to 4.937 sec in my machine., A few comments:

# Isn't this a security hole to get super user privileges? All client needs to do is to send NULL for ticket, right? I think Server.getUserInfo() should only return ticket associated with the RPC. 
# Minor: Could you remove debug in setCurrentUGI()? It is run for evey RPC.
# unrelated warning fixes in Server.java. It will conflict with HADOOP-2789., Note that (1) above can happen even with a programming error, need not be deliberate., After an RPC is done, UGI is not reset. I would implement Server.java changes like this:

- Server.java does not call {{UserGroupInformation.setCurrentUGI()}}
- {{Server.getUserInfo()}} looks like this: {code}
    public static UserGroupInformation getUserInfo() {
     Call call = CurCall.get();
     if (call != null) { // inside an RPC
       return call.connection.ticket;
     }
     return UserGroupInformation.getCurrentUGI();
   } {code}
 - Otherwise, there is no need to have {{Server.getUserInfo()}} at all.

, -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12375247/2683_20080211.patch
against trunk revision 619744.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 3 new or modified tests.

    javadoc -1.  The javadoc tool appears to have generated 1 warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests -1.  The patch failed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1772/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1772/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1772/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1772/console

This message is automatically generated., Thank you for your comment, Raghu.  I like your idea for (1).

2683_20080211b.patch:
# see above
# check LOG.isDebugEnabled() first before LOG.debug(...).  Also RPC calls do not invoke UserGroupInformation.setCurrentUGI(...) anymore.
# reverted the unrelated warning fixes, +1. , -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12375257/2683_20080211b.patch
against trunk revision 619744.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 3 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests -1.  The patch failed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1774/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1774/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1774/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1774/console

This message is automatically generated., Timeout on TestBalancer, which is addressed in HADOOP-2784.  It seems it is not related to this issue.

2683_20080212.patch: updated with current trunk., +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12375398/2683_20080212.patch
against trunk revision 619744.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 3 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1783/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1783/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1783/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1783/console

This message is automatically generated., I'd prefer if we could get rid of Server.getUserInfo().
Current code and the proposed patch need to call Server.getUserInfo() even if there is no RPC and therefore no Server.
Instead the Server should set UserGroupInformation.currentUGI before executing the call.
The name-node will call UserGroupInformation.getCurrentUGI() instead Server.getUserInfo().
If currentUGI = null the PermissionChecker should throw AccessControlException.
I think we should not automatically assume superuser privileges when currentUGI is null.
In case of non-RPC calls to name-node methods the caller should explicitly invoke UserGroupInformation.setCurrentUGI(..).
It could be done once per thread and should not make calls inefficient.
, bq. I'd prefer if we could get rid of Server.getUserInfo().
Current code and the proposed patch need to call Server.getUserInfo() even if there is no RPC and therefore no Server.

+0.5 :). It is required to call this only if caller expects to be in an RPC. But getting rid of it sounds just as good.

bq. I think we should not automatically assume super privileges currentUGI is null.
+1., 2683_20080213.patch: no auto login, Server.getUserInfo() is deprecated.

Thanks, Konstantin., +1, -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12375531/2683_20080213.patch
against trunk revision 619744.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 9 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac -1.  The applied patch generated 604 javac compiler warnings (more than the trunk's current 603 warnings).

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1795/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1795/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1795/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1795/console

This message is automatically generated., 2683_20080213b.patch: added an annotation for a deprecated api, +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12375548/2683_20080213b.patch
against trunk revision 619744.

    @author +1.  The patch does not contain any @author tags.

    tests included +1.  The patch appears to include 9 new or modified tests.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new javac compiler warnings.

    release audit +1.  The applied patch does not generate any new release audit warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1798/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1798/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1798/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/1798/console

This message is automatically generated., I just committed this. Thank you Nicholas., Integrated in Hadoop-trunk #401 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/401/])]