[When a checksumed file system tries to recover from a ChecksumError, it first reports the checksum error and then tries to read from a different replica.

For the local file system, it closes the input stream when reporting checksum error. In read retry, it does a seek on the closed input stream and thus causes a NPE.

One solution to this problem is not to retry reading for the local file system. We could let reportCheckError returns a flag indicating if we want to retry or not., a patch for review., This patch should have a unit test case, but otherwise looks good., New patch with a test case., +1, +1, because http://issues.apache.org/jira/secure/attachment/12354361/1123_with_test.patch applied and successfully tested against trunk revision http://svn.apache.org/repos/asf/lucene/hadoop/trunk/523072. Results are at http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch, I just ran the unit tests with this patch and I get the following consistent failure in testLocalFileCorruption. Any ideas?

A ChecksumException is expected to be logged.
2007-03-28 20:02:08,528 INFO  fs.FSInputChecker (ChecksumFileSystem.java:readBuffer(217)) - Found checksum error: org.apache.hadoop.fs.ChecksumException: Check
sum error: /Users/tom/Documents/workspace/hadoop-committer/build/test/data/corruptFile at 0
        at org.apache.hadoop.fs.ChecksumFileSystem$FSInputChecker.verifySum(ChecksumFileSystem.java:258)
        at org.apache.hadoop.fs.ChecksumFileSystem$FSInputChecker.readBuffer(ChecksumFileSystem.java:213)
        at org.apache.hadoop.fs.ChecksumFileSystem$FSInputChecker.read(ChecksumFileSystem.java:167)
        at org.apache.hadoop.fs.FSDataInputStream$PositionCache.read(FSDataInputStream.java:41)
        at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:235)
        at org.apache.hadoop.fs.FSDataInputStream$Buffer.read(FSDataInputStream.java:93)
        at java.io.DataInputStream.readByte(DataInputStream.java:241)
        at org.apache.hadoop.dfs.TestFileCorruption.testLocalFileCorruption(TestFileCorruption.java:90)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at junit.framework.TestCase.runTest(TestCase.java:154)
        at junit.framework.TestCase.runBare(TestCase.java:127)
        at junit.framework.TestResult$1.protect(TestResult.java:106)
        at junit.framework.TestResult.runProtected(TestResult.java:124)
        at junit.framework.TestResult.run(TestResult.java:109)
        at junit.framework.TestCase.run(TestCase.java:118)
        at junit.framework.TestSuite.runTest(TestSuite.java:208)
        at junit.framework.TestSuite.run(TestSuite.java:203)
        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)

------------- ---------------- ---------------
------------- Standard Error -----------------
Waiting for the NameNode to initialize...
Waiting for the Mini HDFS Cluster to start...
------------- ---------------- ---------------

Testcase: testFileCorruption took 4.929 sec
Testcase: testLocalFileCorruption took 0.04 sec
        Caused an ERROR
null
java.lang.NullPointerException
        at org.apache.hadoop.fs.LocalFileSystem.reportChecksumFailure(LocalFileSystem.java:76)
        at org.apache.hadoop.fs.ChecksumFileSystem$FSInputChecker.readBuffer(ChecksumFileSystem.java:219)
        at org.apache.hadoop.fs.ChecksumFileSystem$FSInputChecker.read(ChecksumFileSystem.java:167)
        at org.apache.hadoop.fs.FSDataInputStream$PositionCache.read(FSDataInputStream.java:41)
        at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:235)
        at org.apache.hadoop.fs.FSDataInputStream$Buffer.read(FSDataInputStream.java:93)
        at java.io.DataInputStream.readByte(DataInputStream.java:241)
        at org.apache.hadoop.dfs.TestFileCorruption.testLocalFileCorruption(TestFileCorruption.java:90), This patch includes the fix to NPE that Tom got., +1, because http://issues.apache.org/jira/secure/attachment/12354474/LocalFileCorruption.patch applied and successfully tested against trunk revision http://svn.apache.org/repos/asf/lucene/hadoop/trunk/523072. Results are at http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch, The new patch fixed the NPE I was seeing, so I've committed this. Thanks Hairong & Nigel!, Integrated in Hadoop-Nightly #41 (See http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/41/)]