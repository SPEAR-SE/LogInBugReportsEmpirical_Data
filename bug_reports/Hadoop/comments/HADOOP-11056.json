[Submit patch rev 001, thanks for reviewing.
, BTW, The added test is for observation purpose. There may not be a stable way to detect the problem but one can observe the difference with this testcase before and after the fix.
, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12666263/HADOOP-11056.001.patch
  against trunk revision ce04621.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4638//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4638//console

This message is automatically generated., {code}
+    if (stream != null) {
+      stream.close();
+      stream = null;
+    }
{code}

If an exception happens, stream never gets set to null.  Anyway, please use {{IOUtils.cleanup}} instead of this.

{code}
+      if (stream != null) {
+        try {
+          close();
+        } catch (IOException e1) {
+          throw new RuntimeException(e1);
+        }
+      }
{code}

You don't need to check if stream is null, since close checks that for you.

Also don't make your close method throw IOException, and you won't need this extra catch block., HI [~cmccabe], thanks a lot for the review, I uplaoded rev 002 to address your comments. 
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12666354/HADOOP-11056.002.patch
  against trunk revision d9a03e2.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.metrics2.impl.TestMetricsSystemImpl

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4642//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4642//console

This message is automatically generated., +1.  Thanks, Yongjun., Thanks a lot Colin!
, FAILURE: Integrated in Hadoop-Yarn-trunk #670 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/670/])
HADOOP-11056. OsSecureRandom.setConf() might leak file descriptors.  Contributed by Yongjun Zhang. (cmccabe: rev 8f1a668575d35bee11f4cd8173335be5352ec620)
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/random/TestOsSecureRandom.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/random/OsSecureRandom.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1861 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1861/])
HADOOP-11056. OsSecureRandom.setConf() might leak file descriptors.  Contributed by Yongjun Zhang. (cmccabe: rev 8f1a668575d35bee11f4cd8173335be5352ec620)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/random/OsSecureRandom.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/random/TestOsSecureRandom.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1886 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1886/])
HADOOP-11056. OsSecureRandom.setConf() might leak file descriptors.  Contributed by Yongjun Zhang. (cmccabe: rev 8f1a668575d35bee11f4cd8173335be5352ec620)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/random/OsSecureRandom.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/random/TestOsSecureRandom.java
]