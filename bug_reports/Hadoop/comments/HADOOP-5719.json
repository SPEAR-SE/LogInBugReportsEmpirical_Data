[Currently job initialization is done in {{JobInitalizationPoller}} in the poller when an Exception is thrown while doing {{JobInProgress.initTasks()}} it does a {{JobInProgress.fail()}} but the fail does not inform all the job in progress listeners, resulting in job not being removed from the waiting job list of scheduler., Attaching a fix which addresses this issue. Alongwith test case which tests the condition., The result of ant test-patch  is :

{noformat}
     [exec] 
     [exec] 
     [exec] 
     [exec] +1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 3 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec] 
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec] 
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
{noformat}, Few comments:
 - I think a better place for job removal from the JobQueuesManager is the cleanUpInitializedJobsList() method of teh JobInitializationPoller. We may want to rename this method and change its javadoc a bit.
 - We don't need the null check before job.fail() in the initialization-poller
 - Test-case doesn't compile(perhaps because of HADOOP-5726). Need to change the signature of FakeQueueInfo
 - In the test-case, the statements depicting the error scenarios have to be reversed. For e.g. at TestCapacityScheduler.java +2045 {code}     assertFalse("Waiting job does not contain submitted job",  mgr.getWaitingJobs("default").contains(job)); {code} should instead be {code} assertFalse("Waiting job contains submitted job", mgr.getWaitingJobs("default").contains(job)); {code}, Attaching patch incorporating most of Vinod's comments.

bq.  I think a better place for job removal from the JobQueuesManager is the cleanUpInitializedJobsList() method of teh JobInitializationPoller. We may want to rename this method and change its javadoc a bit.

This has not been incorporated because of issue described in HADOOP-5020 it is hit when {{JobInProgress.initTasks()}} throws an exception and terminate job is called and Capacity scheduler would never be able to remove the job from the waiting queue.

Also added a new test case {{TestJobInitalizationPoller}} which uses {{MiniMRCluster}} to verify if jobs failing initialization are actually removed from waiting queue., Removing an unused import statement from {{JobInitializationPoller}}, Attaching patch incorporating Vinod's offline comments:

* Adding apache license to new test case file.
* Changed the name of new test case from TestJobInitializationPoller to TestJobInitialization.
* Corrected Typo of initialization the TestCapacityScheduler.
* Removed unnecessary whitespaces.
* Removed unused variable from TestJobInitialization
* Removed unused import from TestCapacityScheduler
, +1 for the patch., Output from ant test-patch:

{noformat}
     [exec]
     [exec]
     [exec] +1 overall.
     [exec]
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec]
     [exec]     +1 tests included.  The patch appears to include 6 new or modified tests.
     [exec]
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec]
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec]
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec]
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec]
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     [exec]
{noformat}, Attaching patch for branch 20., Attaching patch incorporating Hemanth's offline comments.

In {{TestJobInitialization}}

* Changed the scheduler property from guaranteed-capacity to capacity.
* Asserting if the submitted job is failed. 


Attaching both 20 branch and trunk patch, Changes look fine to me. +1., Output for ant test-patch for the latest attachment is as follows:

{noformat}
     [exec]
     [exec] +1 overall.
     [exec]
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec]
     [exec]     +1 tests included.  The patch appears to include 6 new or modified tests.
     [exec]
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec]
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec]
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec]
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec]
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     [exec]
{noformat}, I just committed this to trunk and branch 0.20. Thanks, Sreekanth !, Integrated in Hadoop-trunk #828 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/828/])
    . Forgot to add a new file in the previous commit.
. Remove jobs that failed initialization from the waiting queue in the capacity scheduler. Contributed by Sreekanth Ramakrishnan.
]