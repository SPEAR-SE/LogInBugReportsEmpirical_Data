[Ideally, the task should have exited when this exception was thrown. By any chance, did you get a jstack dump of the task when it hung after the exception? (kill -3 <pid> would also help). At this point of time, one suspect is some thread is not a daemon thread and it is preventing the process from exiting. The other suspect is that the task JVM is stuck for some reason in the finally clause of TaskTracker.Child.main(). Do you know whether the TT was reachable and whether it logged the task failure?, Is there space available on other drives on that TT that aren't being used, or are all configured drives completely out of space? Does the reduce eventually fail and get rescheduled or does it hang? In the latter case, is the task ever rescheduled/speculated or does this state persist until the job is killed? In the former case, is it being rescheduled on the same node, ultimately and incorrectly failing the job, or does the job eventually succeed?

Quick aside: it would help a lot if the issue description were to present an abstract of the observed behavior; stack traces and other verbose diagnostic information is more readable (especially by email) in a comment., Runping, you marked this as a duplicate of another more active bug.  I'm resolving this one.]