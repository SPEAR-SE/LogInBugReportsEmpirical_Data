[1. Looks like there is bug in removing corrupted blocks from the corrupted block map.
We do not remove corrupted replicas until the valid replicas are fully re-replicated on other nodes.
When they do the corrupted replicas can and should be removed from the data-nodes.
So FSNamesystem.addStoredBlock() actually checks whether there is enough healthy replicas
and invalidates corrupted replicas by:
- removing corrupted locations from the block's list of locations, and
- calling CorruptReplicasMap.removeFromCorruptReplicasMap(), which is supposed to remove it from the set of corrupted.

But removeFromCorruptReplicasMap() has a condition under which it removes the block from the corruptReplicasMap
only if the block does not belong to the main blocksMap.
This particularly means that once in the corruptReplicasMap the block stays there until the file is removed.
The ArrayIndexOutOfBoundsException comes from getBlockLocations(), which assumes that the set
of corrupted replicas is always a subset of all block replicas. Due to the bug in removeFromCorruptReplicasMap()
it is not the case because corrupt replicas are not in the block's location list, but are still in the corruptReplicasMap.

2. In CorruptReplicasMap.invalidateCorruptReplicas() I see boolean variable "gotException" which is set to false
and never changes. I think there was an intention to set it to true in the catch{} section.
But may the right thing to do is just to remove the variable and the call of removeFromCorruptReplicasMap() from this
method because removeFromCorruptReplicasMap() will be called within fsNamesystem.invalidateBlock() if
it is successful.

Promoting this to a blocker for 0.18, By writing a testcase we were able to reproduce this. The attached patch fixes this issue as described by Konstantin. Also, when a bad replica is reported, it is added to neededReplication. , # This does not work if you have 2 out of 3 replicas corrupt. 
When the first replication happens you will unconditionally remove the block from the 
corrupt replica map not waiting for the second replication to complete.
We should make a test case for that.
# testBlockCorruptionRecoveryPolicy() needs JavaDoc explaining what it tests.
# Could you please remove redundant import of ByteBuffer in TestDatanodeBlockScanner.
# You should not corruptReplica() twice (the same one) in testBlockCorruptionRecoveryPolicy()
, Thanks Konstantin. I changed the test case and made few more fixes. This new patch, tests both 1 and 2 corrupt replica cases. The tests poll until the corrupted blocks reaches health state and corresponding entries are removed from corruptReplicasMap. I ran the test in a loop for 20 times and seem to work fine. , This looks right.
I made some minor changes to the patch:
# removed CorruptReplicasMap.size() method which is not used anywhere, and
# moved CorruptReplicasMap.invalidateCorruptReplicas() into FSNamesystem, which imo it belongs to based on the structure of our name-node class hierarchy., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12384986/HADOOP-3649-3.patch
  against trunk revision 672918.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 4 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2774/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2774/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2774/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch/2774/console

This message is automatically generated., I just committed this. Thank you Lohit., Integrated in Hadoop-trunk #535 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/535/])]