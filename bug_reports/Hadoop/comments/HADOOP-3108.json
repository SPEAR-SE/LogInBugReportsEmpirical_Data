[Oops, it throws NPE when the path does not exist.  I will fix it., Here is the codes I got. Konstantin will continue work on it.
, I extended Nicholas's patch.
Found one more potential NPE related to getNode() method in FSDirectory.
TestPermissions failed in its original version because it was catching
FileNotFoundException but was receiving a RemoteException instead.

I wrote a unwrapRemoteException() method, which throws the cause of the
RemoteException if it is of the right type. I recommend using it instead
of analyzing the exception message.
I should say in general that handling of RemoteExceptions e.g. in connection
with FileNotFoundException is terrible. I will file a separate jira.
The test was not closing file system correctly, I fixed that.
And also a couple of findBugs warnings related to ignoring return values of called methods.
I used the same unwrapping for canMkdirs(), canCreate() and canOpen() methods:
this test is based on FileSystem API, which should not know anything about
RemoteException, because e.g. LocalFileSystem does not throw this, ever.
These changes affected TestDFSPermission, which in turn led to changes in 
DFSClient methods responsible, which report permission violations.
With all the changes TestPermissions now correctly tests the case of changing
permissions and owner of missing files Nicholas introduced.

All tests pass on my machine except for TestDFSShell. Something is wrong with getFileInfo().
Hudson is stuck again so I cannot verify on a different machine either.
Please somebody take a look., > I should say in general that handling of RemoteExceptions e.g. in connection
> with FileNotFoundException is terrible. I will file a separate jira.

This has been a long standing issue. Doug commented many times on this. If I remember correctly, his latest suggestion was something like to unwrap the exception as long as the inner exception class exists on  the client. New jira will be good. 
, For this patch, I would say it is safer to use unwrapRemoteException only the test and leave DFSClient.java unchanged. The new jira might unwrap the exception in RPC client it self.
, Since this patch is meant for 16, I think its better if it only fixes the NPEs. Changing some of the IOExceptions to FileNotFound might be ok. But any other semantic changes probably belong in 17 or trunk. For example with the patch, deleting a file can throw IOException, where i think it should return false., > Since this patch is meant for 16, I think its better if it only fixes the NPEs.

+1 we should minimize the last minute changes., This is a patch for 0.16.2, This is a version with the testPermission changed to catch the case., +1. , This patch applies both to trunk and 0.16.
I corrected test failure in my previous patch., I just committed this., Integrated in Hadoop-trunk #445 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/445/])]