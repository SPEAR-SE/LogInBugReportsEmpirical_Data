[Note that this is potentially not a regression in s3n itself, more that a change in the tests has broken things. Test endpoint: s3 ireland
{code}
testRecursiveRootListing(org.apache.hadoop.fs.contract.s3n.ITestS3NContractRootDir)  Time elapsed: 3.26 sec  <<< ERROR!
java.lang.IllegalArgumentException: Can not create a Path from an empty string
	at org.apache.hadoop.fs.Path.checkPathArg(Path.java:163)
	at org.apache.hadoop.fs.Path.<init>(Path.java:175)
	at org.apache.hadoop.fs.Path.<init>(Path.java:120)
	at org.apache.hadoop.fs.s3native.NativeS3FileSystem.listStatus(NativeS3FileSystem.java:577)
	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:1539)
	at org.apache.hadoop.fs.FileSystem.listStatus(FileSystem.java:1582)
	at org.apache.hadoop.fs.FileSystem$4.<init>(FileSystem.java:1745)
	at org.apache.hadoop.fs.FileSystem.listLocatedStatus(FileSystem.java:1744)
	at org.apache.hadoop.fs.FileSystem.listLocatedStatus(FileSystem.java:1727)
	at org.apache.hadoop.fs.FileSystem$6.<init>(FileSystem.java:1826)
	at org.apache.hadoop.fs.FileSystem.listFiles(FileSystem.java:1822)
	at org.apache.hadoop.fs.contract.AbstractContractRootDirectoryTest.testRecursiveRootListing(AbstractContractRootDirectoryTest.java:171)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
{code}, I tried to repro this, but the test is passing fine for me on current trunk, branch-2 and branch-2.8.  My test runs use a bucket in US-west-2.  Steve, is there anything else unique about your test setup, aside from our difference in AWS region?]