[Not sure if this problem is more appropriate for HADOOP or MAPREDUCE.
, -Dio.native.lib.available=false and -Dmapreduce.map.output.compress.codec=org.apache.hadoop.io.compress.GzipCodec are conditions that opposed each other.  There is no pure Java only implementation of GzipCodec compressor.  There is a pure Java only decompressor.  To solve this issue, we have two options:

1. Either implement a compressor codec for GzipCodec that does not depend on zlib
2. The jobclient needs to validate the compressor and compression related flags to safe guard contradictions and spaw off reducer with properly validated decompressor.

Either options are possible., Agree with Eric, we should get this fixed. At least implement option 2 so it won't fail in this ugly way it does today., It seems that the property "io.native.lib.available" has already been discussed. 
This property will be supported for 2.x because of backwards compatibility, and removed for 3.x
Akira AJISAKA has provided document patch for 2.x to clarify that the property only
control bz2 and zlib. See the details here: https://issues.apache.org/jira/browse/HADOOP-8642.
So I think we can just close this jira since the community has a good decision.

]