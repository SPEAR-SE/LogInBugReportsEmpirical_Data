[Sorry for this, here is a simple patch to avoid this, I am not sure the name "Unavailable" is suitable for windows, if there is some function like dladdr in windows, or there is some macro which defines the library name in windows, we can change the name to a more suitable one. 
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593468/HADOOP-9755.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2824//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2824//console

This message is automatically generated., Thanks chang, its worked for me., I agree with Binglin that "Unavailable" is ambiguous. How about a more explicit "library path detection not implemented"?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12593629/HADOOP-9755.v2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2830//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2830//console

This message is automatically generated., Thanks for the review Luke. Here is the new version address your comments., Looks like HADOOP-9759 already solve this issue using windows version of "dladdr", Thanks for addressing the build break!
In HADOOP-9759, we provided a Windows version of {{NativeCodeLoader#getLibraryName}} instead of just skipping this method., Thanks for resolving the issues., I have small doubt.. HADOOP-9759 is created after this jira atleast by seeing the Jira Id, then how come this will be duplicate of HADOOP-9759., HADOOP-9759 is resolved/fixed first :)]