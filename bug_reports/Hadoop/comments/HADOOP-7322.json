[Hi Bharath,
1. suggest javadoc comment for FileUtil.listFiles() to read:
+   * A wrapper for {@link File#listFiles()}. This java.io API returns null 
+   * when dir is not directory or for any I/O error. Instead of having to
+   * null check everywhere File#listFiles() is used, we will add this utility 
+   * api to get around this problem, for the majority of cases where we prefer
+   * an IOException to be thrown.

2. Not sure about the change to RunJar.main().  Isn't jar extraction usually pretty forgiving?  It is currently written to skip any directory it can't read.  Can you please give an argument for why that's wrong?

3. In the last line of testlistFiles(), to assure that the referenced directory can't possibly exist, why not use the same name as the directory you just deleted in the previous line?  Maybe after asserting:
Assert.assertTrue("Failed to delete test dir", !newDir.exists());, Thanks for the comments, Matt. 

Regarding 2: Yes, we can be forgiving on this case. I added this because of eliminating null check. 

Attaching a patch which addresses all these comments. , Thanks, Bharath.  Unfortunately I have one more item.  Looking more at testlistFiles(), there are many calls that could cause an IOException, but only the last one should be an allowed IOException.  Therefore, I think we have to remove the "expected=IOException.class" from the @Test annotation, and instead use the idiom:
{code}
try {
  files = FileUtil.listFiles(newDir);
  fail("IOException expected on listFiles() for non-existent dir " + newDir.getString());
} catch (IOException ioe) {
  //expected
}
{code}
, Not a problem. I have updated the testcase., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12480373/HADOOP-7322-3.patch
  against trunk revision 1127215.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/523//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/523//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HADOOP-Build/523//console

This message is automatically generated., +1.  Committed to trunk.  Thanks, Bharath!, Integrated in Hadoop-Common-trunk-Commit #622 (See [https://builds.apache.org/hudson/job/Hadoop-Common-trunk-Commit/622/])
    HADOOP-7322. Adding a util method in FileUtil for directory listing, avoid NPEs on File.listFiles(). Contributed by Bharath Mundlapudi.

mattf : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1127697
Files : 
* /hadoop/common/trunk/CHANGES.txt
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/RawLocalFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/FileUtil.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/TestFileUtil.java
, Integrated in Hadoop-Common-trunk #700 (See [https://builds.apache.org/hudson/job/Hadoop-Common-trunk/700/])
    HADOOP-7322. Adding a util method in FileUtil for directory listing, avoid NPEs on File.listFiles(). Contributed by Bharath Mundlapudi.

mattf : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1127697
Files : 
* /hadoop/common/trunk/CHANGES.txt
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/RawLocalFileSystem.java
* /hadoop/common/trunk/src/java/org/apache/hadoop/fs/FileUtil.java
* /hadoop/common/trunk/src/test/core/org/apache/hadoop/fs/TestFileUtil.java
]