[The trivial fix (attached) doesn't resolve this for me:
{noformat}
     [exec] creating libnativezlib.la
     [exec] (cd .libs && rm -f libnativezlib.la && ln -s ../libnativezlib.la libnativezlib.la)
     [exec] make[2]: Leaving directory `/snip/hadoop/build/native/Linux-i386-32/src/org/apache/hadoop/io/compress/zlib'
     [exec] make[2]: Entering directory `/snip/hadoop/build/native/Linux-i386-32'
     [exec] make[2]: Leaving directory `/snip/hadoop/build/native/Linux-i386-32'
     [exec] make[1]: Leaving directory `/snip/hadoop/build/native/Linux-i386-32'
     [exec] libtool: install: `/snip/hadoop/build/native/Linux-i386-32/lib/libhadoop.la' is not a valid libtool archive
     [exec] Try `libtool --help --mode=install' for more information.

BUILD FAILED
/snip/hadoop/build.xml:484: exec returned: 1
{noformat}, [edit] Cleaned up description, This patch fixes the error compiling compile-core-native target. This is an improved version over the patch submitted by Chris, thanks to Chris

local test-patch O/P

 [exec] +1 overall.
     [exec]
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec]
     [exec]     +1 tests included.  The patch appears to include 1 new or modified tests.
     [exec]
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec]
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec]
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs warnings.
     [exec]
     [exec]     +1 Eclipse classpath. The patch retains Eclipse classpath integrity.
     [exec]

Thanks,
Giri, Tested Giri's patch and was able to successfully build native hdfs., Tried the patches.  Both patches failed on my machine.  It might be the case that my machine is not set up correctly for compiling the native library.

The following is the results from Giri's patch.  
{noformat}
$ ant compile-native
Buildfile: build.xml

compile-native:

...

     [exec] config.status: config.h is unchanged
     [exec] config.status: executing depfiles commands
     [exec]  cd /home/tsz/hadoop/latest/src/native && /bin/sh /home/tsz/hadoop/latest/src/native/config/missing --run automake-1.9 --gnu 
     [exec] Usage: autoconf [-h] [--help] [-m dir] [--macrodir=dir]
     [exec]        [-l dir] [--localdir=dir] [--version] [template-file]
     [exec] automake-1.9: autoconf failed with exit status: 1
     [exec] make: *** [/home/tsz/hadoop/latest/src/native/Makefile.in] Error 1

BUILD FAILED
/home/tsz/hadoop/latest/build.xml:448: The following error occurred while executing this line:
/home/tsz/hadoop/latest/build.xml:477: exec returned: 2

Total time: 21 seconds
{noformat}
I got the same problem for Chris' patch., Nicholas,  it looks like you don't have the right version of autconf.  Hadoop-3344 requires updates to autoconf and ant, and has been applied to trunk., 4949_20081230.patch: For easier review, I removed all the generated codes from Giri's patch.
, +1

I updated autoconf in my machine.  With Giri's patch (or 4949_20081230.patch),  both the followings succeed in my machine.
- ant compile -Dcompile.c++=true -Dlibhdfs=true 
- ant compile-native, Checked again 4949_20081230.patch only works for "ant compile -Dcompile.c++=true -Dlibhdfs=true" but not "ant compile-native".  Giri's patch works for both., 4949_20081231.patch: added the change in src/native/aclocal.m4.  This patch works for both ant commands., I just committed this. Thanks Chris, Giri, and Nicholas., - After compiled the native library, some generated files are overwritten.  For examples,
{noformat}
M      src/native/configure
M      src/native/Makefile.in
M      src/native/src/org/apache/hadoop/io/compress/zlib/Makefile.in
M      src/native/lib/Makefile.in
M      src/c++/pipes/aclocal.m4
M      src/c++/pipes/configure
M      src/c++/utils/configure
?      src/c++/libhdfs/autom4te.cache
M      src/c++/libhdfs/Makefile.in
{noformat}
The changes depend on which the ant command parameters used.  Should we add these files to the ignore list?

- The compilation depends on the ordering of executions.  In my machine, 
-* it works if
-*# ant compile -Dcompile.c++=true -Dlibhdfs=true
-*# ant compile-native
-* but if fails if
-*# ant compile-native
-*# ant compile -Dcompile.c++=true -Dlibhdfs=true

- There are different ways to compile native library.  It is not clear to me that which one should be used.  e.g.
-* ant -Dcompile.c++=yes -Dcompile.native=yes -Dlibhdfs=yes compile
-* ant compile-native -Dcompile.c++=true -Dlibhdfs=true
-* ant compile -Dcompile.c++=true -Dlibhdfs=true
-* ant compile-native

, I'm sorry, but none of the methods above work for me.

If I try "ant compile-native" on the trunk I get the following failure on the compile-core-native target" regardless of which of the above methods I use to invoke it.  It also fails if I invoke: "ant -Dcompile.c++=yes -Dcompile.native=yes -Dlibhdfs=yes compile"

     [exec] libtool: install: `/grid/0/gs/gridre/Spring/hadoopSource/build/native/Linux-i386-32/lib/libhadoop.la' is not a valid libtool archive
     [exec] Try `libtool --help --mode=install' for more information.

The only command that seems to work correctly is: "ant compile -Dcompile.c++=true -Dlibhdfs=true".   I suspect that the compile-native target is the root cause, but will need to investigate further., The following should work for current trunk:
# checkout a fresh copy or revert all local changes (you need this as long as you ever have run ant to compile native library since some scripts may be incorrectly generated.)
# ant compile -Dcompile.c++=true -Dlibhdfs=true
# ant compile-native
After the above, any ant commands will work.

I believe the problem is in build.xml.  It does not generate the scripts correctly., Giri, I'm reopening this because 4949 isn't completely fixed. , The cases Nicholas cited earlier, particularly the ordering problem, are regressions from r727255 and should be fixed. Since the current fix touches rarely modified code, I'd like to keep it in trunk until this is resolved., Integrated in Hadoop-trunk #708 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/708/])
    . Fix native compilation. (Chris Douglas via rangadi)
, removing all traces of previous bad patch., This patch changes the clean target to clean up the makefiles by running autoreconf -if.  If I understand correctly, this just resets the build artifacts to match the gnutools installed.   The compile-native target now also does and autoreconf, just like the c++ targets do.

If you do either of the following commands, the build now works correctly.

ant -Dcompile.c++=true -Dcompile.native=yes -Dlibhdfs=true clean compile-native compile
ant -Dcompile.c++=true -Dcompile.native=yes -Dlibhdfs=true clean compile compile-native

(My assumption is that non-c++ and non-native targets aren't impacted by this change.)

It needs to be applied in addition to the previously committed patch.  This patch also works, with some "fuzzing" on the 0.20 branch., Attached patch assumes that the currently committed patch has been reverted; it works for me, but further testing may be required., I just committed this. Thanks, Chris!]