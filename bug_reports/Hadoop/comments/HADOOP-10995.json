[Make a patch to recover the removed code., Could HBase use hsync instead of sync?, In terms of HttpServer, the code between branch-2 and trunk are different. Note that (1) branch-2 works against hbase 0.98. (2) the HttpServer issue for hbase is fixed in HBASE-10336. Therefore I don't think {{HttpServer}} should be reintroduced into trunk in this case.
, [~szetszwo] and [~wheat9], thanks for your comments. It sounds good suggestions when HBase try to rebase with the latest hadoop. However, our case is a bit counter-intuitive. Let me describe more about the problem.

In YARN-2033, we'd like to create an HBase based timeline store to scale out the storage layer, such that we need to add the dependency for the timeline server sub-module, making it depend on hbase 0.9x (actually in the patch we use 0.98). However,  hbase 0.9x releases were built against Hadoop branch-2, and used HttpServer as well as Syncable.sync, which are removed from trunk now. On the contrary, in YARN-2033, to verify whether the HBase based timeline store works properly, we need to start a mini HBase cluster for test cases. At runtime, the mini HBase cluster will invoke HttpServer and Syncable.sync. Since these classes are not found, the mini HBase cluster cannot start successfully.

Therefore, if we don't bring these classes back to trunk, the test cases will not work on trunk. It makes it difficult to verify if any further code changes will affect the HBase based timeline store., bq. such that we need to add the dependency for the timeline server sub-module, making it depend on hbase 0.9x (actually in the patch we use 0.98). However, hbase 0.9x releases were built against Hadoop branch-2.

Does that mean hadoop trunk will then have dependency on hbase and even hadoop branch-2? Not quite sure how that will work..., bq. Does that mean hadoop trunk will then have dependency on hbase and even hadoop branch-2?

Actually, the hbase libs only, we will stop the cascading dependency, bq. Actually, the hbase libs only, we will stop the cascading dependency

Can you be more specific? Here is the result of {{mvn dependency:tree}} of hbase-client:

{noformat}
[INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ hbase-client ---
[INFO] org.apache.hbase:hbase-client:jar:0.99.0-SNAPSHOT
[INFO] +- org.apache.hbase:hbase-common:jar:0.99.0-SNAPSHOT:compile
[INFO] |  \- commons-collections:commons-collections:jar:3.2.1:compile
[INFO] +- org.apache.hbase:hbase-common:test-jar:tests:0.99.0-SNAPSHOT:test
[INFO] +- org.apache.hbase:hbase-protocol:jar:0.99.0-SNAPSHOT:compile
[INFO] +- commons-codec:commons-codec:jar:1.7:compile
[INFO] +- commons-io:commons-io:jar:2.4:compile
[INFO] +- commons-lang:commons-lang:jar:2.6:compile
[INFO] +- commons-logging:commons-logging:jar:1.1.3:compile
[INFO] +- com.google.guava:guava:jar:12.0.1:compile
[INFO] |  \- com.google.code.findbugs:jsr305:jar:1.3.9:compile
[INFO] +- com.google.protobuf:protobuf-java:jar:2.5.0:compile
[INFO] +- io.netty:netty:jar:3.6.6.Final:compile
[INFO] +- org.apache.zookeeper:zookeeper:jar:3.4.6:compile
[INFO] |  +- org.slf4j:slf4j-api:jar:1.6.4:compile
[INFO] |  \- org.slf4j:slf4j-log4j12:jar:1.6.1:compile
[INFO] +- org.htrace:htrace-core:jar:3.0.3:compile
[INFO] |  \- org.mortbay.jetty:jetty-util:jar:6.1.26:compile
[INFO] +- org.codehaus.jackson:jackson-mapper-asl:jar:1.8.8:compile
[INFO] |  \- org.codehaus.jackson:jackson-core-asl:jar:1.8.8:compile
[INFO] +- log4j:log4j:jar:1.2.17:test
[INFO] +- org.apache.hadoop:hadoop-common:jar:2.4.0:compile
[INFO] |  +- commons-cli:commons-cli:jar:1.2:compile
[INFO] |  +- org.apache.commons:commons-math3:jar:3.1.1:compile
[INFO] |  +- xmlenc:xmlenc:jar:0.52:compile
[INFO] |  +- commons-httpclient:commons-httpclient:jar:3.1:compile
[INFO] |  +- commons-net:commons-net:jar:3.1:compile
[INFO] |  +- org.mortbay.jetty:jetty:jar:6.1.26:compile
[INFO] |  +- com.sun.jersey:jersey-core:jar:1.8:compile
[INFO] |  +- com.sun.jersey:jersey-json:jar:1.8:compile
[INFO] |  |  +- org.codehaus.jettison:jettison:jar:1.3.1:compile
[INFO] |  |  +- com.sun.xml.bind:jaxb-impl:jar:2.2.3-1:compile
[INFO] |  |  +- org.codehaus.jackson:jackson-jaxrs:jar:1.8.8:compile
[INFO] |  |  \- org.codehaus.jackson:jackson-xc:jar:1.8.8:compile
[INFO] |  +- commons-el:commons-el:jar:1.0:runtime
[INFO] |  +- net.java.dev.jets3t:jets3t:jar:0.9.0:compile
[INFO] |  |  +- org.apache.httpcomponents:httpcore:jar:4.1.2:compile
[INFO] |  |  \- com.jamesmurty.utils:java-xmlbuilder:jar:0.4:compile
[INFO] |  +- commons-configuration:commons-configuration:jar:1.6:compile
[INFO] |  |  +- commons-digester:commons-digester:jar:1.8:compile
[INFO] |  |  |  \- commons-beanutils:commons-beanutils:jar:1.7.0:compile
[INFO] |  |  \- commons-beanutils:commons-beanutils-core:jar:1.8.0:compile
[INFO] |  +- org.apache.avro:avro:jar:1.7.4:compile
[INFO] |  |  +- com.thoughtworks.paranamer:paranamer:jar:2.3:compile
[INFO] |  |  \- org.xerial.snappy:snappy-java:jar:1.0.4.1:compile
[INFO] |  +- com.jcraft:jsch:jar:0.1.42:compile
[INFO] |  \- org.apache.commons:commons-compress:jar:1.4.1:compile
[INFO] |     \- org.tukaani:xz:jar:1.0:compile
[INFO] +- org.apache.hadoop:hadoop-auth:jar:2.4.0:compile
[INFO] |  \- org.apache.httpcomponents:httpclient:jar:4.2.5:compile
[INFO] +- org.apache.hadoop:hadoop-mapreduce-client-core:jar:2.4.0:compile
[INFO] |  +- org.apache.hadoop:hadoop-yarn-common:jar:2.4.0:compile
[INFO] |  |  +- org.apache.hadoop:hadoop-yarn-api:jar:2.4.0:compile
[INFO] |  |  +- javax.xml.bind:jaxb-api:jar:2.2.2:compile
[INFO] |  |  |  \- javax.activation:activation:jar:1.1:compile
[INFO] |  |  +- javax.servlet:servlet-api:jar:2.5:compile
[INFO] |  |  +- com.google.inject:guice:jar:3.0:compile
[INFO] |  |  |  +- javax.inject:javax.inject:jar:1:compile
[INFO] |  |  |  \- aopalliance:aopalliance:jar:1.0:compile
[INFO] |  |  +- com.sun.jersey:jersey-server:jar:1.8:compile
[INFO] |  |  |  \- asm:asm:jar:3.1:compile
[INFO] |  |  \- com.sun.jersey.contribs:jersey-guice:jar:1.9:compile
[INFO] |  \- com.google.inject.extensions:guice-servlet:jar:3.0:compile
[INFO] +- org.apache.hadoop:hadoop-annotations:jar:2.4.0:compile
[INFO] |  \- jdk.tools:jdk.tools:jar:1.7:system
[INFO] +- com.github.stephenc.findbugs:findbugs-annotations:jar:1.3.9-1:compile
[INFO] +- junit:junit:jar:4.11:compile
[INFO] |  \- org.hamcrest:hamcrest-core:jar:1.3:compile
[INFO] \- org.mockito:mockito-all:jar:1.9.0:test
{noformat}

For example, hbase-client needs to depend on hadoop-common, which depends on jetty and guava. That is said, this will block incompatible changes like HADOOP-10075, HADOOP-10101 going into trunk. That beats the whole point of having the trunk branch.

, We want to use hbase-client and hbase-testing-util and all their dependency on other hbase parts, but exclude the cascading dependency to hadoop as well as the third-party one which has already been introduce by hadoop.

I attached a dependency change I've used. It may not be completely correct, but so far it work well for me., bq. I attached a dependency change I've used. It may not be completely correct, but so far it work well for me.

This change assumes binary compatibilities of hadoop-common and hadoop-auth between trunk and 2.x. Again this is undesirable. This will block useful changes like HADOOP-9845 going into trunk.

In general, I'm opposed to create circular dependency by putting hbase dependency into the pom., bq. In general, I'm opposed to create circular dependency by putting hbase dependency into the pom.

I'm not sure we should simply conclude cyclic dependency that hbase depends on hadoop and hadoop depends on hbase now, because both projects are divided into multiple artifacts. In YARN-2032, in hadoop-yarn-server-applicatioinhistoryservice, we only want to add hbase-client and hbase-testing-util, which have dependency on hadoop-common, hadoop-auth, hadoop-hdfs, hadoop-mapreduce-client-core and some others. However, none of them actually depend on hadoop-yarn-server-applicatioinhistoryservice, resulting in cyclic dependency. Therefore, with the attached dependency change, the project is built secussefully. In fact, you can consider hadoop-yarn-server-applicatioinhistoryservice as an independent project that depends on hadoop-common, as hbase-client/hbase-testing-util does. The dependency is still going to be a DAG after the change.

bq. This change assumes binary compatibilities of hadoop-common and hadoop-auth between trunk and 2.x.

As hbase 0.9x is built against branch-2. It's going to be binary incompatible against trunk, and this is why I raised the this Jira. However, this Jira is not aiming to ensure thorough binary compatibility between trunk and 2.x, but getting back the necessary pieces to unblock the tests against hbase mini cluster. Once the new version hbase dependency rebases to the new API (i.e., HttpServer2 and Syncable.hsync), These pieces should be safe to be removed. Hopefully it's a fair point., Can this jira be closed as invalid?, Per the new patch on YARN-2032, we plan to ignore the test cases on trunk to walk around the compatibility issue. Close this ticket as invalid.]