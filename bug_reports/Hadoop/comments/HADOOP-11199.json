[I believe it's intentional.  Otherwise, it would be impossible to document properties in the .xml file without accidentally setting a value.  Also, lots of code would have to be added to check for null/empty values (spaces have wreaked havoc with property values before).

I made a change in YARN-2284 (patch submitted, but not committed) that makes allowing empty values configurable (for unit testing)., Here are the changes I made to Configuration.java for YARN-2284.  See if this would satisfy what you need for your test code., [~rchiang], thanks for you patch,
Actually, I don't think this is intentional, because we cannot set an empty value instead of null for a key in configuration. And the empty value configuration should be a determinate behavior instead of a configurable one, there's complete different semantics between empty and null. I think if a existing module rely on behavior today should be updated. Do you have any example for configs rely on this? 

Thanks,
Wangda, I don't recall the specifics of any example offhand, but I do recall running into an MR/YARN property situation which looked something like this:

1) Newer property overrides the older property, but the older property is still the default behavior
2) Both properties are defined in the corresponding .xml file.  Empty/null equivalency is exploited in that both are documented, but one is "undefined" which prevents the newer one from overriding the older one.

Sadly, I can't remember the exact property offhand, but I would expect it's in one of mapred-default.xml or yarn-default.xml since I haven't looked at any others.

I'm fine with having value null/value empty/value fully defined as three definite states--I just don't know what side effects there would be until all the code is updated.

Right now, I see 31 properties in yarn-default.xml and 16 in mapred-default.xml that are empty/null., [~rchiang],
Thanks for your explanation, this is more like a legacy issue, and people didn't rely on the different value between null/empty before. I'll take a look at these properties also.

Wangda, Duping this to HADOOP-6228 since there are more people on that JIRA.]