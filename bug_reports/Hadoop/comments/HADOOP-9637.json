[Post a patch. In this patch, I implemented {{NativeIO.POSIX.getFstat()}} for Windows. There are some minimal refactoring in winutils to make this work, including:

1. Moved symlink and directory check from '{{Ls()}}' method to '{{FindFileOwnerAndPermission()}}'.

2. Added an additional mode flag equivalent of S_IFREG on Linux.

3. Added '{{FindFileOwnerAndPermissionByHandle()}}' method -- a lightweight method that calls '{{FindFileOwnerAndPermission()}}'. The Java native method {{fstat()}} on Windows directly calls this new method to get file stat.

4. Enabled two TestNativeIO test cases, {{testFstat}} and {{testFstatClosedFdfor}}, that are previously disabled on Windows.

5. In {{NativeIO.POSIX.getFstat()}}, I used the similar pattern as {{NativeIO.POSIX.chmod()}} to map the Windows Error 6 (ERROR_INVALID_HANDLE: The handle is invalid ) to Linux exception Errno.EBADF. In analog, {{chmod()}} maps Windows error code 3 ERROR_PATH_NOT_FOUND to Linux Errno.ENOENT., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12587204/HADOOP-9637-trunk.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2642//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2642//console

This message is automatically generated., The patch can also fix TestContainerLogsPage., Nice work, Chuan!  Here are a couple of questions:

{code}
        if (Shell.WINDOWS) {
          int i = owner.indexOf('\\');
          if (i != -1)
            this.owner = owner.substring(i + 1);
        }
{code}

If I understand correctly, this is intended to remove the domain portion from a username.  (Am I understanding it correctly?)  Does Windows ever prepend domain to the group name too?  Do we need similar logic for initializing {{this.group}}?

It seems that this logic would treat user DOMAIN1\cnauroth the same as DOMAIN2\cnauroth, when in reality the same username in 2 different domains might not be the same person.  Consumers of fstat would end up seeing "cnauroth" as the owner without being able to differentiate between the 2 different users in 2 different domains.  Is this acceptable?

{code}
  stat_ctor2 = (*env)->GetMethodID(env, stat_clazz, "<init>",
	  "(Ljava/lang/String;Ljava/lang/String;I)V");
  if (!stat_ctor2) {
	  return; // exception has been raised
  }
{code}

Minor nit: use 2-space indentation in the above code.

{code}
  dwRtnCode = GetFinalPathNameByHandle(fileHandle, path, cchPathLen, 0);
  if (dwRtnCode == 0)
  {
    ret = GetLastError();
    goto FindFileOwnerAndPermissionByHandleEnd;
  }
  cchPathLen = dwRtnCode;
  path = (LPWSTR) LocalAlloc(LPTR, cchPathLen * sizeof(WCHAR));
  if (path == NULL)
  {
    ret = GetLastError();
    goto FindFileOwnerAndPermissionByHandleEnd;
  }

  dwRtnCode = GetFinalPathNameByHandle(fileHandle, path, cchPathLen, 0);
  if (dwRtnCode != cchPathLen - 1)
  {
    ret = GetLastError();
    goto FindFileOwnerAndPermissionByHandleEnd;
  }
{code}

I read up on the MSDN docs for {{GetFinalPathNameByHandle}} here:

http://msdn.microsoft.com/en-us/library/windows/desktop/aa364962(v=vs.85).aspx

The first call returns the required buffer length, including null terminator:

{quote}
If the function fails because lpszFilePath is too small to hold the string plus the terminating null character, the return value is the required buffer size, in TCHARs. This value includes the size of the terminating null character.
{quote}

However, the value of {{cchFilePath}} passed to the function in the second call is expected to exclude the null terminator:

{quote}
cchFilePath [in]
The size of lpszFilePath, in TCHARs. This value does not include a NULL termination character.
{quote}

Does this mean that we need to subtract 1 from {{cchPathLen}} earlier, such as when we assign {{cchPathLen = dwRtnCode}}?
, May be you should edit the title to be something in the line of "Adding Native Fstat for Windows as needed by YARN"., >May be you should edit the title to be something in the line of "Adding Native Fstat for Windows as needed by YARN".
Thanks for the suggestion! I have changed the title; will update the description shortly., Thanks for reviewing, Chris!

>If I understand correctly, this is intended to remove the domain portion from a username. (Am I understanding it correctly?) Does Windows ever prepend domain to the group name too? Do we need similar logic for initializing this.group?

You are right. We also need this for group name. I will fix this in a new patch.

>It seems that this logic would treat user DOMAIN1\cnauroth the same as DOMAIN2\cnauroth, when in reality the same username in 2 different domains might not be the same person. Consumers of fstat would end up seeing "cnauroth" as the owner without being able to differentiate between the 2 different users in 2 different domains. Is this acceptable?

This is by design right now. UserGroupInformation, NativeIO.Windows.getOwner(), and a few other places all assume this pattern, i.e. username without domain. (UserGroupInformation does not explicitly strip the domain, however, the Java API it used only returns username.) There are some discussions on this in HADOOP-8455. The main scenario we want to support (for unsecure Hadoop on Windows) is to allow local users of the same name to run Hadoop cluster without a domain controller. For example, users can create local user 'Alex' on the two machines 'Win1' and 'Win2', and run Hadoop under the local user 'Alex'. I think it is acceptable for now; I have outlined some thoughts on how we can improve this in HADOOP-8455.

>Minor nit: use 2-space indentation in the above code.

Thanks for pointing this out; will fix in new patch.

>Does this mean that we need to subtract 1 from cchPathLen earlier, such as when we assign cchPathLen = dwRtnCode?

Not necessary. I have similar thoughts when I wrote the code. I intentionally make the buffer size 1 char larger; so the last character is the NULL terminator. Because without NULL terminator, some functions, e.g. wcslen(), will fail on the string, including some Windows function like GetNamedSecurityInfo() that is called on the path later. I think the MSDN document means the buffer only need to be as large as string length without null terminator. However, it does not require the buffer to be exact size. You may notice the example given at the MSDN page also used a larger buffer to save the path.
, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12588295/HADOOP-9637-trunk.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2663//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2663//console

This message is automatically generated., Thanks for addressing my questions.  It all makes sense.  I have just one more comment about the new patch.

{code}
        if (Shell.WINDOWS) {
          int i = owner.indexOf('\\');
          if (i != -1)
            this.owner = owner.substring(i + 1);
        }
{code}

This code is identical for username and group, so let's refactor it behind a helper function.  We also can add comments stating that the reason for this is to remove domain., Attaching a new patch., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12588442/HADOOP-9637-trunk.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2665//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2665//console

This message is automatically generated., +1 for the patch.  I verified on Mac (without native libs), Linux (with native libs), and Windows (with native libs).  Chuan, thank you for incorporating all of the feedback.  I'll commit this., Integrated in Hadoop-trunk-Commit #3971 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3971/])
    HADOOP-9637. Adding Native Fstat for Windows as needed by YARN. Contributed by Chuan Liu. (Revision 1494341)

     Result = SUCCESS
cnauroth : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1494341
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/chmod.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/chown.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/include/winutils.h
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/ls.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/io/nativeio/TestNativeIO.java
, I committed this to trunk, branch-2, and branch-2.1-beta.  Chuan, thank you for the contribution., Integrated in Hadoop-Yarn-trunk #245 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/245/])
    HADOOP-9637. Adding Native Fstat for Windows as needed by YARN. Contributed by Chuan Liu. (Revision 1494341)

     Result = FAILURE
cnauroth : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1494341
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/chmod.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/chown.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/include/winutils.h
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/ls.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/io/nativeio/TestNativeIO.java
, Integrated in Hadoop-Hdfs-trunk #1435 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1435/])
    HADOOP-9637. Adding Native Fstat for Windows as needed by YARN. Contributed by Chuan Liu. (Revision 1494341)

     Result = FAILURE
cnauroth : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1494341
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/chmod.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/chown.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/include/winutils.h
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/ls.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/io/nativeio/TestNativeIO.java
, Integrated in Hadoop-Mapreduce-trunk #1462 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1462/])
    HADOOP-9637. Adding Native Fstat for Windows as needed by YARN. Contributed by Chuan Liu. (Revision 1494341)

     Result = FAILURE
cnauroth : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1494341
Files : 
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/chmod.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/chown.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/include/winutils.h
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/winutils/ls.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/io/nativeio/TestNativeIO.java
]