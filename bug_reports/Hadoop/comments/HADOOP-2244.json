[Rest the internal hash map every time readFields is called on MapWritable, This sounds reasonable. 

I'd like to point out, however, that readFields does not "make instances", but rather overwrites the value that the object currently has., The 'instances' is quoted in the original description., Pardon.  I should say more.  Owen, true. The 'instances' was quoted in the original description.  It was meant to be short-hand for: readFields does a sorta new instance - - the internal Writable representation is blasted and overwritten with new data -- but then they are not really new instances since the object is being reused...., Passes test locally..., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12369955/hadoop-2244.patch
against trunk revision r597144.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests -1.  The patch failed core unit tests.

    contrib tests -1.  The patch failed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1136/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1136/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1136/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1136/console

This message is automatically generated., Resubmitting to jira to check if tests pass..., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12369955/hadoop-2244.patch
against trunk revision r597616.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs -1.  The patch appears to introduce  new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests -1.  The patch failed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1145/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1145/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1145/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1145/console

This message is automatically generated., Anyone knows why this seems to break org.apache.hadoop.hbase.TestCompaction.testCompaction?

{noformat}
Regression

org.apache.hadoop.hbase.TestCompaction.testCompaction
Failing for the past 1 build (since Failed#1145)

junit.framework.AssertionFailedError
	at org.apache.hadoop.hbase.TestCompaction.testCompaction(TestCompaction.java:154)
{noformat}
, Arun,

I'll take a look at testCompaction

-Jim
, Looks like a Hudson heisenbug. Neither TestCompaction nor its superclasses use MapWritable., Thanks for looking into this Jim!, Resubmitting to see if tests pass (Doesn't fail TestCompaction locally).  At most will get a FindBugs complaint (HADOOP-2272)., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12369955/hadoop-2244.patch
against trunk revision r597663.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs -1.  The patch appears to introduce  new Findbugs warnings.

    core tests -1.  The patch failed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1149/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1149/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1149/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1149/console

This message is automatically generated., Failed the findbugs as expected but also failed org.apache.hadoop.mapred.TestMiniMRWithDFS.testWithDFS (I thought this had been fixed by the recent patch back-out)., Retrying for a +1.  Passes all tests locally., +1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12369955/hadoop-2244.patch
against trunk revision r598152.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests +1.  The patch passed core unit tests.

    contrib tests +1.  The patch passed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1162/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1162/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1162/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1162/console

This message is automatically generated., Michael, there is one problem with the patch. The testcase would pass even without the change to the readFields method in MapWritable. This is because you are reading the same key over and over again in the for loop (just for clarity, note that the 'instance' field in MapWritable is a Map and not a List). Rather, each iteration of the loop should read a different key., Thank you for the review Devaraj and in particular for finding flaw in my test.  Here is new version that redoes the test so it asserts fix actually works., Patch looks good. Submitting it to hudson., -1 overall.  Here are the results of testing the latest attachment 
http://issues.apache.org/jira/secure/attachment/12370341/2244-v2.patch
against trunk revision r598780.

    @author +1.  The patch does not contain any @author tags.

    javadoc +1.  The javadoc tool did not generate any warning messages.

    javac +1.  The applied patch does not generate any new compiler warnings.

    findbugs +1.  The patch does not introduce any new Findbugs warnings.

    core tests -1.  The patch failed core unit tests.

    contrib tests -1.  The patch failed contrib unit tests.

Test results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1185/testReport/
Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1185/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1185/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/1185/console

This message is automatically generated., I just committed this. Thanks, Michael!, Integrated in Hadoop-Nightly #317 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/317/])]