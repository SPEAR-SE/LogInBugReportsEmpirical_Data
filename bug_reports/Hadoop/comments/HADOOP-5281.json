[Sorry, the file got munged.. here's a full version of the test, Does this problem still happen when you use DefaultCodec instead of GzipCodec?, No, only with GzipCodec., Edited description, When GzipCodec is specified, it's used only for the data, not the index (which always uses DefaultCodec). When the two match, there's no problem.

It's clear that the index is being read with GzipCodec after being written with DefaultCodec (so it expects a header, but doesn't find one). Still trying to determine how that's happening...

This didn't work with previous versions of Hadoop, right?, The compressors are being recycled, but GzipCodec and DefaultCodec are improperly exchanging ZlibCompressors. In a trace printing out identityHashCode for all compressors:
{quote}
09/03/17 01:44:46 INFO compress.CodecPool: Got brand-new compressor *12182618  GzipCodec/ZlibCompressor*
09/03/17 01:44:46 INFO compress.CodecPool: Got brand-new compressor 12376621  DefaultCodec/ZlibCompressor
09/03/17 01:44:46 INFO compress.CodecPool: Returned ZlibCompressor/12182618
09/03/17 01:44:46 INFO compress.CodecPool: Returned ZlibCompressor/12376621
09/03/17 01:44:46 INFO compress.CodecPool: Got recycled compressor 12376621  GzipCodec/ZlibCompressor
09/03/17 01:44:46 INFO compress.CodecPool: Got recycled compressor *12182618  DefaultCodec/ZlibCompressor*
{quote}, Patch returns different Compressor/Decompressor types for GzipCodec. While one could probably use end() and init() to share ZlibCompressor instances between the codecs, this keeps the existing semantics.

{noformat}
09/03/17 03:28:45 INFO compress.CodecPool: Got brand-new compressor 1049443  GzipCodec/GzipZlibCompressor
09/03/17 03:28:45 INFO compress.CodecPool: Got brand-new compressor 1043272  DefaultCodec/ZlibCompressor
09/03/17 03:28:45 INFO compress.CodecPool: Returned GzipZlibCompressor/1049443
09/03/17 03:28:45 INFO compress.CodecPool: Returned ZlibCompressor/1043272
09/03/17 03:28:45 INFO compress.CodecPool: Got recycled compressor 1049443  GzipCodec/GzipZlibCompressor
09/03/17 03:28:45 INFO compress.CodecPool: Got recycled compressor 1043272  DefaultCodec/ZlibCompressor
{noformat}, Added a unit test, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12402340/5281-1.patch
  against trunk revision 755057.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no tests are needed for this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 Eclipse classpath. The patch retains Eclipse classpath integrity.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/93/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/93/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/93/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hadoop-Patch-vesta.apache.org/93/console

This message is automatically generated., +1, I committed this., Integrated in Hadoop-trunk #783 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/783/])
    . Prevent sharing incompatible ZlibCompressor instances between GzipCodec and DefaultCodec.
]