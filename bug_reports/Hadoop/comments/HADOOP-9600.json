[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12584733/HADOOP-9600.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2566//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12584736/HADOOP-9600.2.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2568//console

This message is automatically generated., JAVA_HOME is also used within the code in Yarn application definitions - fixed what I could find there to quote it as well., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12584754/HADOOP-9600.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2570//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2570//console

This message is automatically generated., Thanks for the patch!

Why we need the following change?

{noformat}
-for /f "delims=" %%A in ('%JAVA% -Xmx32m %HADOOP_JAVA_PLATFORM_OPTS% -classpath "%CLASSPATH%" org.apache.hadoop.util.PlatformName') do set JAVA_PLATFORM=%%A
+%JAVA% -Xmx32m %HADOOP_JAVA_PLATFORM_OPTS% -classpath "%CLASSPATH%" org.apache.hadoop.util.PlatformName > %TEMP%\java_platforms.txt
+set /p JAVA_PLATFORM=<%TEMP%\java_platforms.txt
+del %TEMP%\java_platforms.txt
 @rem replace space with underscore
 set JAVA_PLATFORM=%JAVA_PLATFORM: =_%
{noformat}, Thanks [~chuanliu]. I needed this change because I couldn't find a way to get quoting to work in the "for" syntax when one of the arguments to the command is quoted as well. Here's a simple repro of that problem:
{code}
md "c:\a b"
echo @echo Hi > "c:\a b\a.cmd"
echo for /f "delims=" %%A in ('"c:\a b\a.cmd" "X"') do set ABC=%%A > "c:\a b\x.cmd"
"c:\a b\x.cmd"
{code}
This will fail with {quote}'c:\a' is not recognized as an internal or external command, operable program or batch file. {quote}. Since the purpose of this for statement is to assign the output to the JAVA_PLATFORM variable, I did this in the alternate way instead., Have you tried to add quotes as part of the %JAVA% and %CLASSPATH% environment variables?
So we don't need to quote them in the for command. The 'for' statement becomes something like the follows.
{noformat}
for /f "delims=" %%A in ("%JAVA_QUOTED% -Xmx32m %HADOOP_JAVA_PLATFORM_OPTS% -classpath %CLASSPATH_QUOTED% org.apache.hadoop.util.PlatformName") do set JAVA_PLATFORM=%%A
{noformat}
where JAVA_QUOTED="C:\Program Files\Java\jdk1.7.0_11\bin\java.exe", and CLASSPATH_QUOTED="<all classpath>".

Another option may be usebackq.
I am not sure if it will work; but I think it worth trying., For example, the following script works for me.

{noformat}
echo off
set X="c:\a b\a.cmd"
set Y="a b c"
for /f %%A in ("%X% %Y%") do set ABC=%%A
@echo %ABC%
{noformat}, Sorry for the very late reply here: Chuan - your script doesn't actually work, it produces {code}"c:\a{code} since it's not executing the command, just going through the text (you used double-quotes). If you use single quotes you'll see the error.
I also tried usebackq (good suggestion) but no luck., I got the same output. Maybe I did something differently last time.
I don't have any ideas how to make this work.
I guess we have to accept the temp file solution.

+1 on the rest of the code change.

Thanks for the patch!
I think this change addresses a really important scenario for Windows, e.g. default Java installation location contains space., Thanks Chuan. I'm attaching an updated patch that applies to the latest sources. Also a note on the "-1 tests included": I don't think this is unit-testable unless someone has any ideas on how to do that., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12589178/HADOOP-9600.4.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2697//console

This message is automatically generated., Re-updating (turns out I was too slow in updating)., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12589188/HADOOP-9600.5.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell:

                  org.apache.hadoop.mapreduce.security.ssl.TestEncryptedShuffle
                  org.apache.hadoop.mapred.TestMiniMRClasspath
                  org.apache.hadoop.mapred.TestMiniMRChildTask
                  org.apache.hadoop.mapreduce.v2.TestMROldApiJobs
                  org.apache.hadoop.mapred.TestReduceFetchFromPartialMem
                  org.apache.hadoop.mapred.TestClusterMRNotification
                  org.apache.hadoop.mapred.TestJobName
                  org.apache.hadoop.mapreduce.v2.TestUberAM
                  org.apache.hadoop.mapred.TestJobCounters
                  org.apache.hadoop.mapred.TestLazyOutput
                  org.apache.hadoop.mapreduce.TestChild
                  org.apache.hadoop.mapreduce.v2.TestMiniMRProxyUser
                  org.apache.hadoop.mapreduce.security.TestBinaryTokenFile
                  org.apache.hadoop.mapreduce.security.TestMRCredentials
                  org.apache.hadoop.mapreduce.lib.output.TestJobOutputCommitter
                  org.apache.hadoop.mapred.TestMiniMRWithDFSWithDistinctUsers
                  org.apache.hadoop.mapred.TestMerge
                  org.apache.hadoop.mapred.TestJobSysDirWithDFS
                  org.apache.hadoop.mapreduce.v2.TestMRJobs
                  org.apache.hadoop.mapreduce.TestMRJobClient
                  org.apache.hadoop.mapreduce.v2.TestSpeculativeExecution
                  org.apache.hadoop.mapreduce.TestMapReduceLazyOutput
                  org.apache.hadoop.mapred.TestMiniMRClientCluster
                  org.apache.hadoop.mapred.TestReduceFetch
                  org.apache.hadoop.mapreduce.v2.TestMRJobsWithHistoryService
                  org.apache.hadoop.mapred.TestClusterMapReduceTestCase
                  org.apache.hadoop.mapred.TestJobCleanup
                  org.apache.hadoop.yarn.applications.distributedshell.TestDistributedShell

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2698//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2698//console

This message is automatically generated., That's weird about the test failures - they don't seem related to my change. I see a lot of exceptions of the sort:
{code}
Caused by: java.io.IOException: Server asks us to fall back to SIMPLE auth, but this client is configured to only allow secure connections.
	at org.apache.hadoop.security.SaslRpcClient.saslConnect(SaslRpcClient.java:250)
{code}
Anyone have any ideas/, I can repro the failures without your patch. I need to debug a little to tell what is going on., The test failures are due to the following change:
{noformat}
Revision: 1494702
Author: atm
Date: Wednesday, June 19, 2013 10:31:20 AM
Message:
Clean up an IPC error message. Contributed by Aaron T. Myers.

----
Modified : /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/CommonConfigurationKeys.java
Modified : /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java
Modified : /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcClient.java
Modified : /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/resources/core-default.xml
{noformat}

I cannot find the JIRA for the change., Thanks Mostafa for reporting the problem and the patch.

I have one question on the patch:
{code}
+%JAVA% -Xmx32m %HADOOP_JAVA_PLATFORM_OPTS% -classpath "%CLASSPATH%" org.apache.hadoop.util.PlatformName > %TEMP%\java_platforms.txt
+set /p JAVA_PLATFORM=<%TEMP%\java_platforms.txt
+del %TEMP%\java_platforms.txt
{code}
Will this work when we have concurrent invocations of cmd scripts?

My guess would be that we should be able to make the original/below line work with some escaping. Will give this a try and report back
{code}
for /f "delims=" %%A in ('%JAVA% -Xmx32m %HADOOP_JAVA_PLATFORM_OPTS% -classpath "%CLASSPATH%" org.apache.hadoop.util.PlatformName') do set JAVA_PLATFORM=%%A
{code} 

The rest of the patch looks good. 
, Updated patch against latest trunk code., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12639264/HADOOP-9600.6.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell:

                  org.apache.hadoop.mapreduce.v2.app.TestMRAppMaster

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/3760//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/3760//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12639264/HADOOP-9600.6.patch
  against trunk revision ef237bd.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5379//console

This message is automatically generated., Cancelling patch since it no longer applies., This issue is reproducible in hadoop-2.6.1  (23 Sep, 2015 release) as well!! Is there any fix as such?]