[If there is a forward seek within the current block, then do not re-issue the block-read request to the datanode., Did you mean to do this only for small seeks? The code does not enforce that. Even a 100MB seek will read 100MB data that should be skipped?
, Use skipBytes() instead of reading all the intervening data that is skipped., A forward skip within a previously read data block just manipulates the underlying file pointer rather than re-reding the entire block from the datanode.

This has been reviewed by Milind. His review comments were :" Looks good to me. Can we ask the blockStream to skip diff bytes instead of reading them one by one ?"

, In response to Raghu's comments: By "small seeks" I meant "seeks within the current block". The contents of this block was already fetched by the preceeding read call. If a datablock is 128MB then even a 100MB seek could trigger this particular optimization., +1, because http://issues.apache.org/jira/secure/attachment/12349553/smallreadseek3.patch applied and successfully tested against trunk revision r499156., The call to skipTo() will still, in the worst case, cause an entire block to be streamed across the wire, using a lot of network bandwidth.  Before we commit this I'd like to see some benchmarks showing that this is faster than closing and re-opening the connection.

Note also that the stream buffering code already performs a similar optimization: if a 100k buffer is used, and one seeks within the buffer, then no i/o is performed on the underlying stream.  So seeks of the underlying stream are generally at least a few k bytes away., I agree with your comments. The amount of data cached by the receiving size of the TCP connection could possibly depend on the latency of transfer and the amount of memory available to the sender and received.

By default, the TCP sending window size is usually 128KB and receiving windows size is 4MB. I propose that I change the above patch to trigger the optmization only if the skip length is <= 128KB.  , > I propose that I change the above patch to trigger the optmization only if the skip length is <= 128KB.

+1
, One change from the previously submitted patch: allow the optimization only if the skip-length is within 128KB range. (The TCP receive window size is typically more than this limit)., One change from the previously submitted patch: allow the optimization only if the skip-length is within 128KB range. (The TCP receive window size is typically more than this limit)., I just committed this.  Thanks, Dhruba!, -1, because the patch command could not apply the latest attachment (http://issues.apache.org/jira/secure/attachment/12349962/smallreadseek4.patch) as a patch to trunk revision r501616. Please note that this message is automatically generated and may represent a problem with the automation system and not the patch.]