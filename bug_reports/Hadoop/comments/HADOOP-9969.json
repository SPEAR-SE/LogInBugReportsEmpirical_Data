[When TGT expired, client trying to access NameNode got this error:
WARN org.apache.hadoop.ipc.Client: Exception encountered while connecting to the server : javax.security.sasl.SaslException: Failure to initialize security context [Caused by org.ietf.jgss.GSSException, major code: 8, minor code: 0
	major string: Credential expired
	minor string: Kerberos credential has expired]

And method org.apache.hadoop.ipc.Client.Connection.shouldAuthenticateOverKrb()returned false since the authMethod got from sasl client was SIMPLE, so relogin never happened, A quick fix would be updating field authMethod of class SaslRpcClient with the current auth type being attempted in the given list, before calling SaslRpcClient#createSaslClient(SaslAuth authType) in method SaslRpcClient#selectSaslClient(List<SaslAuth> authTypes).

Attaching the patch., HADOOP-9850 already records the auth being attempted so the sasl failure loop can tell if kerberos is being attempted.  We saw this issue internally and 9850 did indeed fix the issue for us.

Would you please attach (please don't post inline) a log with client debugging enabled?, Sure. Attaching a relevant sub-section of JobTracker log throwing the expiration exception. I'm using Hadoop 2.1.0-beta + MapReduce 1.1.1, with IBM JDK 6., Hi, [~crystal_gaoyu], [~daryn], 
This bug still exists with IBM JDK7, but will not happen with Oracle JDK. The exceptions thrown by IBM JDK and Oracle JDK are different:

IBM JDK (*Failure to initialize security context [Caused by org.ietf.jgss.GSSException*):
{code}
2015-06-01 17:55:40,448 DEBUG security.SaslRpcClient (SaslRpcClient.java:createSaslClient(247)) - Creating SASL GSSAPI(KERBEROS)  client to authenticate to service at hadoop.hadoop.com
2015-06-01 17:55:40,470 DEBUG security.UserGroupInformation (UserGroupInformation.java:doAs(1645)) - PrivilegedActionException as:nsbigpub@HADOOP.COM (auth:KERBEROS) cause:javax.security.sasl.SaslException: Failure to initialize security context [Caused by org.ietf.jgss.GSSException， major code: 8, minor code: 0
		major string: Credential expired
		minor string: Kerberos credential has expired]
2015-06-01 17:55:40,472 DEBUG security.UserGroupInformation (UserGroupInformation.java:logPrivilegedAction(1665)) - PrivilegedAction as:nsbigpub@HADOOP.COM (auth:KERBEROS) from:org.apache.hadoop.ipc.Client$Connection.handleSaslConnectionFailure(Client.java:654)
2015-06-01 17:55:40,472 DEBUG ipc.Client (Client.java:shouldAuthenticateOverKrb(551)) - this.authMethod != SaslRpcServer.AuthMethod.KERBEROS
2015-06-01 17:55:40,473 WARN  ipc.Client (Client.java:run(686)) - Exception encountered while connecting to the server : {color:red}javax.security.sasl.SaslException: Failure to initialize security context [Caused by org.ietf.jgss.GSSException{color}, major code: 8, minor code: 0
		major string: Credential expired
		minor string: Kerberos credential has expired]]
{code}
Oracle JDK (*GSS initiate failed [Caused by GSSException: No valid credentials provided*):
{code}
2015-06-01 18:31:24,441 DEBUG [main]: PrivilegedActionException as:nsbigpub@HADOOP.COM (auth:KERBEROS) cause:javax.security.sasl.SaslException: GSS initiate failed [Caused by GSSException: No valid credentials provided (Mechanism level: Failed to find any Kerberos tgt)] org.apache.hadoop.security.UserGroupInformation(1645)
2015-06-01 18:31:24,442 DEBUG [main]: PrivilegedAction as:nsbigpub@HADOOP.COM (auth:KERBEROS) from:org.apache.hadoop.ipc.Client$Connection.handleSaslConnectionFailure(Client.java:654) org.apache.hadoop.security.UserGroupInformation(1665)
2015-06-01 18:31:24,442 DEBUG [main]: this.authMethod == AuthMethod.KERBEROS org.apache.hadoop.ipc.Client(535)
{code}

The reason is: 
when TGT expired,  {{javax.security.sasl.Sasl#createSaslClient()}} of IBM JDK will throw {{SaslException}}, but the method of Oracle JDK will not. The {{SaslException}} was thrown by {{saslClient#evaluateChallenge()}} with Oracle JDK. So, the client can handle the failure with Oracle JDK but cannot with IBM JDK.

I am confused with the reason why the exceptions are different between IBM JDK and Oracle JDK. Any thought about it? Can we make {{javax.security.sasl.Sasl#createSaslClient()}} of IBM JDK return success?

The HADOOP-9969.patch can fix this bug, but also has some other side-effects., This is because IBM JDK behaves differently when initializing SaslClient in Sasl.createSaslClient, which requires valid kerberos credentials in place, even before the server and client start the negotiation. While Oracle JDK seems not checking credentials until evaluateChallenge is called., This also affects IBM JDK8..., [~crystal_gaoyu] and [~xinwei] I noticed it's stated that there are some other side-effects? Please advise. , [~daryn] I have reached out to IBM JDK Security team to try to get info on if IBM is doing it correctly.. I patched my HDP build from HWX and it seems to solve the issues.. But waiting to hear from IBM JDK folks... Any other info on plans to integrate this into the Core Hadoop build would be great..

thanks, [~acmurthy] can we have a quick discussion on this JIRA to find out what is going on with it.. I think Dan or Beth will work to set something up..
, Any update on this issue? I meet the same issue on Hadoop 2.7.3 with IBM JDK 1.8, Please attach a current stack trace.  Glancing at the code, it should be retrying..., any update?  meet this with ibmjdk-1.7.0 SR4   hadoop2.7.2, and the code in 2.7.2 is the same as already add the patch]