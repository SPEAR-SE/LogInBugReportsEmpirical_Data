[{{RawLocalFileSystem#mkOneDirWithMode}} applyUMask is failing. In {{RollingLevelDBTimelineStore}}
{code}
  static final FsPermission LEVELDB_DIR_UMASK = FsPermission
      .createImmutable((short) 0700);
{code}
change to 
 {code}static final FsPermission LEVELDB_DIR_UMASK =  new FsPermission((short)0700);
 {code}
will work.  [~rkanter] can we change as above?? any comments ?, [~bibinchundatt], good find!  That fixes the test.  Would you like to assign this JIRA to yourself and post a patch with the change?, Please review patch uploaded, +1 pending Jenkins, Jenkins not triggering so cancelled and submitted patch again, I don't think this is the correct fix.  RollingLevelDBTimelineStore is using an immutable permission to specify the umask.  If the proposed fix is to make it mutable, then that implies we're allowing a constant to be modified by the filesystem.  If this permission were passed to multiple subsystems, having it magically mutate by one subsystem using it is probably not the correct approach.

Instead it appears to be a problem with ImmutableFsPermission.  It prevents applyUmask from being invoked, but in reality applyUmask does not modify the permission object -- it returns a new permission object instead.  Therefore I think the real bug is that ImmutableFsPermission is preventing applyUmask from being invoked., [~jlowe] Thnks for the review. Currently the {{ImmutableFsPermission#applyUMask}} is unsupported and was causing the failure. So as i understand the you would like the have implementation change for {{applyUmask}} in {{ImmutableFsPermission}}
{code}
  private static class ImmutableFsPermission extends FsPermission {
    public ImmutableFsPermission(short permission) {
      super(permission);
    }
    @Override
    public FsPermission applyUMask(FsPermission umask) {
      throw new UnsupportedOperationException();
    }
    @Override
    public void readFields(DataInput in) throws IOException {
      throw new UnsupportedOperationException();
    }    
  }
}
{code}
removed the overriding of the same ? Any suggestion ?
Also [~varun_saxena] any comments one the same?
, Yes, ImmutableFsPermission should not be overriding applyUMask since the method does not actually mutate the object.  readFields does mutate and therefore is appropriate for preventing invocation for constant objects.

The main point is that we shouldn't be blaming the client code and say it was wrong to pass a constant permission object.  If the filesystem can't handle constant permissions being passed to it then it's a bug in the framework not the client code., bq. Yes, ImmutableFsPermission should not be overriding applyUMask since the method does not actually mutate the object. readFields does mutate and therefore is appropriate for preventing invocation for constant objects.

I agree.  It seems that {{FsPermission#ImmutablePermission}} is incorrectly overriding {{FsPermission#applyUMask}}.  There is no reason to override this method since it doesn't modify the {{FsPermission}}.  The right fix should be to simply stop overriding that method.  Do you want to move the JIRA over to Hadoop-common and post a patch for that?, Thnk you for review comments .As per comments have updated ImmutableFspermission .Please review the patch. TestRollingLevelDB class all test are passing. , [~cmccabe] and [~jlowe] Have uploaded the patch and have moved the same to common since the fix is on common. , \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  16m 19s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 32s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 39s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   1m  3s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 35s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   1m 49s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | common tests |  22m  2s | Tests passed in hadoop-common. |
| | |  60m 57s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12740269/0002-YARN-3812.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 2ad6687 |
| hadoop-common test log | https://builds.apache.org/job/PreCommit-HADOOP-Build/6989/artifact/patchprocess/testrun_hadoop-common.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/6989/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf909.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/6989/console |


This message was automatically generated., +1.  Thanks, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #230 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/230/])
HADOOP-12100. ImmutableFsPermission should not override applyUmask since that method doesn't modify the FsPermission (Bibin A. Chundatt via Colin P. McCabe) (cmccabe: rev 6e0a9f92fe0052d39b95a605174b3f6423c6aae7)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-trunk-Commit #8038 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8038/])
HADOOP-12100. ImmutableFsPermission should not override applyUmask since that method doesn't modify the FsPermission (Bibin A. Chundatt via Colin P. McCabe) (cmccabe: rev 6e0a9f92fe0052d39b95a605174b3f6423c6aae7)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2178 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2178/])
HADOOP-12100. ImmutableFsPermission should not override applyUmask since that method doesn't modify the FsPermission (Bibin A. Chundatt via Colin P. McCabe) (cmccabe: rev 6e0a9f92fe0052d39b95a605174b3f6423c6aae7)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #233 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/233/])
HADOOP-12100. ImmutableFsPermission should not override applyUmask since that method doesn't modify the FsPermission (Bibin A. Chundatt via Colin P. McCabe) (cmccabe: rev 6e0a9f92fe0052d39b95a605174b3f6423c6aae7)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #963 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/963/])
HADOOP-12100. ImmutableFsPermission should not override applyUmask since that method doesn't modify the FsPermission (Bibin A. Chundatt via Colin P. McCabe) (cmccabe: rev 6e0a9f92fe0052d39b95a605174b3f6423c6aae7)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2161 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2161/])
HADOOP-12100. ImmutableFsPermission should not override applyUmask since that method doesn't modify the FsPermission (Bibin A. Chundatt via Colin P. McCabe) (cmccabe: rev 6e0a9f92fe0052d39b95a605174b3f6423c6aae7)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #222 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/222/])
HADOOP-12100. ImmutableFsPermission should not override applyUmask since that method doesn't modify the FsPermission (Bibin A. Chundatt via Colin P. McCabe) (cmccabe: rev 6e0a9f92fe0052d39b95a605174b3f6423c6aae7)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java
* hadoop-common-project/hadoop-common/CHANGES.txt
]