[Passes our internal QA tests with kerberos enabled., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12597721/HADOOP-9868.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 2 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2974//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/2974//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2974//console

This message is automatically generated., [~daryn], I'm a bit puzzled by this HADOOP-9789. While I understand the reasoning for it, doesn't that weaken security? An impersonator can publish an alternate principal for which it has a keytab for. , bq. Daryn Sharp, I'm a bit puzzled by this HADOOP-9789. While I understand the reasoning for it, doesn't that weaken security? An impersonator can publish an alternate principal for which it has a keytab for.

Please note that server advertised principals won't be honored by default. 

In order for the scenario you mentioned to happen, the client needs to connect to the fake service. It means DNS or the server is compromised or something like man-in-the-middle. If this happens, one can pretend to be a service, regardless of HADOOP-9789. For client-side exploits, if the client-side is compromised, a fake server address and a wide open SPN pattern may be placed in the config to trick the client. But if the system is compromised to this level, one can trick the client in many different ways anyway.

, +1 I've verified the patch in a secure cluster., SUCCESS: Integrated in Hadoop-trunk-Commit #4272 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4272/])
HADOOP-9868. Server must not advertise kerberos realm. Contributed by Daryn Sharp. (kihwal: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1514448)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcServer.java
, The patch has been committed to trunk, branch-2 and branch-2.1-beta., [~kihwal], the scenario I'm thinking does not require a compromised DNS. It is the following:

real service listening at host1:10000 with principal foo/host1 crashes.
fake service starts listening at host1:10000 with principal bar/host1, and it advertises its principal is bar/host1.

granted this requires a bar/host1 keytab.

I have not looked at the patch, so I don't know what safeguards it has. Can you confirm the behavior in the following 2 scenarios?

1. Does the client accept an arbitrary principal without a service host name? the server advertising 'bar' as principal, no hostname.

I think the client should not accept this alternate.

2. Does the client accept an alternate advertised with the a different shortname than one used originally by the client? using example above: original server principal submitted by the client foo/host1, advertised server principal bar/host1.

I think we should reject that scenario, as it would cover the case when keytabs for foo/* principals are not compromised. So an alternate o foo/host1a would be ok but a bar/host1 would not.
, SUCCESS: Integrated in Hadoop-Yarn-trunk #303 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/303/])
HADOOP-9868. Server must not advertise kerberos realm. Contributed by Daryn Sharp. (kihwal: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1514448)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcServer.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1493 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1493/])
HADOOP-9868. Server must not advertise kerberos realm. Contributed by Daryn Sharp. (kihwal: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1514448)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcServer.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1520 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1520/])
HADOOP-9868. Server must not advertise kerberos realm. Contributed by Daryn Sharp. (kihwal: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1514448)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcServer.java
]