[This patch cleans up the compilation warnings on both Linux and Windows.  For reference, I've pasted the compilation warnings I was seeing from both platforms below.  Most of these were innocuous.  I think the only one that had the potential to cause real problems was in {{JniBasedUnixGroupsMappingWin}}, where we could have written an error message to the wrong memory address.

This patch does not clean up the warnings in lz4.h on Windows.  I think the right answer on that one is to refresh our copy of the lz4 code from upstream.  This warning was already fixed in the latest lz4 code.  I'd prefer to track updating lz4 in a separate issue instead of combining it into this patch.

Linux:
{code}
     [exec] /mnt/data/cnauroth/git/hadoop-common/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/compress/zlib/ZlibCompressor.c:393:1: warning: control reaches end of non-void function [-Wreturn-type]
     [exec] /mnt/data/cnauroth/git/hadoop-common/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c:951:3: warning: return makes integer from pointer without a cast [enabled by default]
     [exec] /mnt/data/cnauroth/git/hadoop-common/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c:986:3: warning: return makes integer from pointer without a cast [enabled by default]
     [exec] /mnt/data/cnauroth/git/hadoop-common/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c:659:3: warning: ‘jstr_username’ may be used uninitialized in this function [-Wuninitialized]
     [exec] /mnt/data/cnauroth/git/hadoop-common/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c:658:27: warning: ‘pw_buf’ may be used uninitialized in this function [-Wuninitialized]
     [exec] /mnt/data/cnauroth/git/hadoop-common/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c:781:3: warning: ‘jstr_groupname’ may be used uninitialized in this function [-Wuninitialized]
     [exec] /mnt/data/cnauroth/git/hadoop-common/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c:780:27: warning: ‘pw_buf’ may be used uninitialized in this function [-Wuninitialized]
     [exec] /mnt/data/cnauroth/git/hadoop-common/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/net/unix/DomainSocketWatcher.c:142:20: warning: ‘pollfd’ may be used uninitialized in this function [-Wuninitialized]
{code}

Windows:
{code}
  c:\hdc\hadoop-common-project\hadoop-common\src\main\native\src\org\apache\hadoop\io\compress\lz4\lz4.h(59): warning C4005: 'inline' : macro redefinition [C:\hdc\hadoop-common-project\hadoop-common\src\main\native\native.vcxproj]
  c:\hdc\hadoop-common-project\hadoop-common\src\main\native\src\org\apache\hadoop\io\compress\lz4\lz4.h(59): warning C4005: 'inline' : macro redefinition [C:\hdc\hadoop-common-project\hadoop-common\src\main\native\native.vcxproj]
  src\org\apache\hadoop\io\nativeio\NativeIO.c(693): warning C4047: 'return' : 'jlong' differs in levels of indirection from 'void *' [C:\hdc\hadoop-common-project\hadoop-common\src\main\native\native.vcxproj]
  src\org\apache\hadoop\io\nativeio\NativeIO.c(713): warning C4098: 'Java_org_apache_hadoop_io_nativeio_NativeIO_00024POSIX_munmap' : 'void' function returning a value [C:\hdc\hadoop-common-project\hadoop-common\src\main\native\native.vcxproj]
  src\org\apache\hadoop\security\JniBasedUnixGroupsMappingWin.c(48): warning C4047: 'function' : 'LPSTR' differs in levels of indirection from 'LPSTR *' [C:\hdc\hadoop-common-project\hadoop-common\src\main\native\native.vcxproj]
  src\org\apache\hadoop\security\JniBasedUnixGroupsMappingWin.c(48): warning C4024: 'FormatMessageA' : different types for formal and actual parameter 5 [C:\hdc\hadoop-common-project\hadoop-common\src\main\native\native.vcxproj]
{code}
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12654902/HADOOP-10810.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.fs.TestSymlinkLocalFSFileContext
                  org.apache.hadoop.ipc.TestIPC
                  org.apache.hadoop.fs.TestSymlinkLocalFSFileSystem

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4242//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4242//console

This message is automatically generated., The test failures are unrelated to this patch.  It appears we're having some environmental problems on the new Jenkins slaves.  I'm following up on that separately.
, Thanks for looking at this, Chris.

{code}
   for (i = 0; i < used_size; i++) {
-    pollfd = sd->pollfd + i;
-    if (pollfd->fd == fd) break;
+    if ((sd->pollfd + i)->fd == fd) {
+      pollfd = sd->pollfd + i;
+      break;
+    }
   }
-  if (i == used_size) {
+  if (pollfd == NULL) {
{code}

I don't understand the motivation behind this, can you explain?  Also you would probably express this as {{sd->pollfd\[i\]->fd}}.

The rest looks good.  You might want to try clang if you've got that.  It often reveals warnings that gcc doesn't (and vice versa), Thanks for the review, Colin.  I'm attaching patch v2 with a slight modification on the change you suggested.  I used {{sd->pollfd\[i\].fd}}.  (Dot instead of arrow needed after the indexing into the array.)  I agree that this looks better.

The change in DomainSocketWatcher.c addresses this warning from gcc:

{code}
     [exec] /mnt/data/cnauroth/git/hadoop-common/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/net/unix/DomainSocketWatcher.c:142:20: warning: ‘pollfd’ may be used uninitialized in this function [-Wuninitialized]
{code}

The interesting case to consider is if {{used_size}} is 0, because then the {{pollfd}} assignment line never executes.  It seems the compiler then doesn't think the {{i == used_size}} check is sufficient to give an early exit before the later code accesses {{pollfd}}.  It's probably considering the possibility that {{used_size}} could have been assigned a negative value.  (That's not something that really happens in practice, but the compiler doesn't know that.)  To fix this, I switched the logic to something equivalent but more explicit by initializing {{pollfd}} to {{NULL}} and then checking for that condition in the early exit.

bq. You might want to try clang if you've got that.

That's an interesting idea.  If you don't mind, I'd like to keep this patch focused on this set of warnings and leave clang warnings for future investigation., +1.  Thanks, Chris., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12655596/HADOOP-10810.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common:

                  org.apache.hadoop.ipc.TestIPC
                  org.apache.hadoop.fs.TestSymlinkLocalFSFileSystem
                  org.apache.hadoop.fs.TestSymlinkLocalFSFileContext

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4266//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4266//console

This message is automatically generated., Colin, thanks very much for the code review.  I committed this to trunk and branch-2.

bq. -1 tests included. The patch doesn't appear to include any new or modified tests.

These are unrelated test failures that are under investigation after deployment of new Jenkins machines., FAILURE: Integrated in Hadoop-trunk-Commit #5878 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5878/])
HADOOP-10810. Clean up native code compilation warnings. Contributed by Chris Nauroth. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1610524)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/compress/zlib/ZlibCompressor.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/net/unix/DomainSocketWatcher.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/security/JniBasedUnixGroupsMappingWin.c
, FAILURE: Integrated in Hadoop-Yarn-trunk #613 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/613/])
HADOOP-10810. Clean up native code compilation warnings. Contributed by Chris Nauroth. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1610524)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/compress/zlib/ZlibCompressor.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/net/unix/DomainSocketWatcher.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/security/JniBasedUnixGroupsMappingWin.c
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1805 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1805/])
HADOOP-10810. Clean up native code compilation warnings. Contributed by Chris Nauroth. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1610524)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/compress/zlib/ZlibCompressor.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/net/unix/DomainSocketWatcher.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/security/JniBasedUnixGroupsMappingWin.c
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1832 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1832/])
HADOOP-10810. Clean up native code compilation warnings. Contributed by Chris Nauroth. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1610524)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/compress/zlib/ZlibCompressor.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/net/unix/DomainSocketWatcher.c
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/security/JniBasedUnixGroupsMappingWin.c
]