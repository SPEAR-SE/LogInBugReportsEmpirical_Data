[patch that should work for hte precommit tester. checking other jobs now for an example of failures., Touched each of the Common, HDFS, YARN, and MapReduce precommit test jobs to specify "clean after checkout" behavior. That should insulate subsequent runs from a hard crashed instance., updated patch to remove spurious mvn clean following git clean., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704872/HADOOP-11721.1.patch.txt
  against trunk revision 72cd4e4.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common:

                  org.apache.hadoop.yarn.util.TestProcfsBasedProcessTree

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5952//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5952//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704882/HADOOP-11721.2.patch.txt
  against trunk revision 2681ed9.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5953//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5953//console

This message is automatically generated., So in test-patch.sh, I see us already doing {{git clean -xdf}} in the checkout function. Is this not getting called? This should wipe out bad state left behind by a previous build, which I thought was our suspect issue.

Some sample bad build output would be very helpful, can look for the {{git clean}} output., agreed. I've asked on the mailing list and will dig through back log tomorrow. I haven't been able to replicate the failure locally., The only part of test-patch that runs tests in e.g. hadoop-hdfs is the runTests function, and it goes last.

For that method to call {{mvn clean}} after there are tests results requires that we end up with either repeats in the ordered_modules list or a child & parent pair of modules (~line 759 of test-patch) with the child building first., Some of the HDFS precommit builds were failing when Jenkins tried to use {{git clean -xdf}} on the workspace. I made it and hte Hadoop precommit stop doing their own git clean., The problem with removing git clean is that some of test cases will fail with the directory permission problem.

This may not be pretty, but does remove the problem before anything is attempted.
{code}
     echo
   else   
     cd $BASEDIR
+    if [ -d hadoop-hdfs-project/hadoop-hdfs/target/test/data ]; then
+      chmod -R u+x hadoop-hdfs-project/hadoop-hdfs/target/test/data
+    fi
     $GIT reset --hard
     $GIT clean -xdf
     $GIT checkout trunk
{code}, to be clear, I just returned the jenkins build to its previous state of not doing its own git clean. the test-patch script still starts with a git clean invocation.

if I can reproduce this failure by setting target/test/data to non-executable, I'll see if I make a better option than setting it executable. If not, probably it's worth ensuring all subdirectories of target are executable?, As of now, I am making a temp commit of changing permission of that directory and cleaning it.
Will revert it as soon build becomes normal., You can simulate the condition by modifying {{TestDataNodeVolumeFailure.java}}. Just make tearDown() do nothing. Removing the {{@After}} annotation might do the job., FAILURE: Integrated in Hadoop-trunk-Commit #7348 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7348/])
HADOOP-11721. switch jenkins patch tester to use git clean instead of mvn clean (temp commit) (vinayakumarb: rev a89b087c45e549e1f5b5fc953de4657fcbb97195)
* dev-support/test-patch.sh
, [~vinayrpet] Why don't we leave your change in for now? I am afraid the build slaves will get broken again soon after reverting the commit. I +1 on leaving it in until we finalize the fix., [~kihwal]. Sure, we can keep it. Now the problem seems to be on only one node H9. So whenever build gets triggered on that node, it will be cleaned., Do we want a general fix? That is, one that can recover from tests changing directory permissions in any target?

I have the start of one, but I don't want to spend the time to finish it if we're only concerned about the immediate triage., FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #136 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/136/])
HADOOP-11721. switch jenkins patch tester to use git clean instead of mvn clean (temp commit) (vinayakumarb: rev a89b087c45e549e1f5b5fc953de4657fcbb97195)
* dev-support/test-patch.sh
, FAILURE: Integrated in Hadoop-Yarn-trunk #870 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/870/])
HADOOP-11721. switch jenkins patch tester to use git clean instead of mvn clean (temp commit) (vinayakumarb: rev a89b087c45e549e1f5b5fc953de4657fcbb97195)
* dev-support/test-patch.sh
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2068 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2068/])
HADOOP-11721. switch jenkins patch tester to use git clean instead of mvn clean (temp commit) (vinayakumarb: rev a89b087c45e549e1f5b5fc953de4657fcbb97195)
* dev-support/test-patch.sh
, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #127 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/127/])
HADOOP-11721. switch jenkins patch tester to use git clean instead of mvn clean (temp commit) (vinayakumarb: rev a89b087c45e549e1f5b5fc953de4657fcbb97195)
* dev-support/test-patch.sh
, I think we are good now. For completeness, I am attaching Vinay's patch., FAILURE: Integrated in Hadoop-Mapreduce-trunk #2086 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2086/])
HADOOP-11721. switch jenkins patch tester to use git clean instead of mvn clean (temp commit) (vinayakumarb: rev a89b087c45e549e1f5b5fc953de4657fcbb97195)
* dev-support/test-patch.sh
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #136 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/136/])
HADOOP-11721. switch jenkins patch tester to use git clean instead of mvn clean (temp commit) (vinayakumarb: rev a89b087c45e549e1f5b5fc953de4657fcbb97195)
* dev-support/test-patch.sh
]