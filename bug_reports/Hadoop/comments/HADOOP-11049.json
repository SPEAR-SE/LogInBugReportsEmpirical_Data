[Proposed patch.

Basically refined the "javax" package into subpackages, taking into account what is in JavaSE and what is in JavaEE. Looked at the best practices in dealing with system packages (such as OSGi). The idea is to spell out javax packages that are included in the JavaSE.

I also factored out the system classes default into a properties file. The main reason is to help people override this value more easily now that the list has become longer. Looking at the properties file would be significantly easier than checking out the source and getting the value from the java source file., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12666661/HADOOP-11049.patch
  against trunk revision 6104520.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapreduce.v2.util.TestMRApps

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4655//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4655//console

This message is automatically generated., Fixed the broken unit test., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12666821/HADOOP-11049.patch
  against trunk revision 45efc96.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.mapred.TestJavaSerialization

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4659//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4659//console

This message is automatically generated., The test failure appears unrelated with the patch., Thanks for the patch, Sangjin!

I think "application-classloader.properties" might be too generic.  Maybe we should add the org.apache.hadoop. prefix or otherwise make it more unique?

Having one giant property line is not great for maintenance, as every patch against it will be a big blob of text changing to another big blob of text.  We should split the value on multiple lines so it's easier to read and easier to maintain.

, Hi Jason, thanks for the review as always!

Those are both good suggestions. I'll make those changes, and submit a new patch soon., Updated the patch (v.3). For your convenience, you can look at the link on github fork to see diffs more easily: https://github.com/apache/hadoop/pull/5, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12671514/HADOOP-11049.patch
  against trunk revision 3a1f981.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient:

                  org.apache.hadoop.ha.TestZKFailoverControllerStress
                  org.apache.hadoop.mapreduce.lib.input.TestMRCJCFileInputFormat

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4813//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4813//console

This message is automatically generated., Test failures unrelated., +1 lgtm.  Committing this., Thanks, Sangjin!  I committed this to trunk and branch-2., FAILURE: Integrated in Hadoop-trunk-Commit #6136 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6136/])
HADOOP-11049. javax package system class default is too broad. Contributed by Sangjin Lee (jlowe: rev cf4631d7c9448205f4952341c071e1650e7922dc)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/test/java/org/apache/hadoop/mapreduce/v2/util/TestMRApps.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMRJobs.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java
* hadoop-common-project/hadoop-common/src/main/resources/org.apache.hadoop.application-classloader.properties
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestRunJar.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, Thanks Jason!, FAILURE: Integrated in Hadoop-Yarn-trunk #696 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/696/])
HADOOP-11049. javax package system class default is too broad. Contributed by Sangjin Lee (jlowe: rev cf4631d7c9448205f4952341c071e1650e7922dc)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMRJobs.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/test/java/org/apache/hadoop/mapreduce/v2/util/TestMRApps.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/resources/org.apache.hadoop.application-classloader.properties
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestRunJar.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1887 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1887/])
HADOOP-11049. javax package system class default is too broad. Contributed by Sangjin Lee (jlowe: rev cf4631d7c9448205f4952341c071e1650e7922dc)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java
* hadoop-common-project/hadoop-common/src/main/resources/org.apache.hadoop.application-classloader.properties
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMRJobs.java
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/test/java/org/apache/hadoop/mapreduce/v2/util/TestMRApps.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestRunJar.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1912 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1912/])
HADOOP-11049. javax package system class default is too broad. Contributed by Sangjin Lee (jlowe: rev cf4631d7c9448205f4952341c071e1650e7922dc)
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/test/java/org/apache/hadoop/mapreduce/v2/TestMRJobs.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/util/TestRunJar.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/test/java/org/apache/hadoop/mapreduce/v2/util/TestMRApps.java
* hadoop-common-project/hadoop-common/src/main/resources/org.apache.hadoop.application-classloader.properties
]