[Here some additional data:
A certain application with extensive logging for debugging turned on took 5.5 hours, with logging turned off just 3 minutes.
When logging was turned on, the throughput to userlogs was 6kBps, with about 90 log messages per sec.
, This applies not only to pipes, but to Java programs too. I'm investigating the cause., Ok, I tried moving the logging down into the Task and that fixed the performance problem, but doesn't help any code that writes directly to stdout or stderr. That doesn't help.

So I propose running all Tasks via /bin/sh, using the shell to do the redirect of stdin, stdout, and stderr. This will allow us to keep the system performant and log the user's output., This patch fixes the performance problems with user task logging. Before the patch, running the word count example on a given input (Alice in Wonderland *smile*) would take 6 seconds normally and minutes if the program printed to stdout. After the patch, it takes 4 seconds with no stdout and 6 seconds with printing.

This patch includes several incompatible changes:
  1. The user logs are no longer stored in segments, but rather complete files.
  2. All tasks are launched via bash to get input redirection.
  3. The cap on user logs has been turned off by default. It is still available, but makes the command used to launch tasks much more complicated.
  4. The entire length of the user log cap is stored in memory now rather than disk. Thus, setting the cap to a large value may cause problems.
  5. The task logger has fewer configuration knobs that have been removed from the log4j.properties.
  6. The urls to access the task logs from the task tracker have changed. The new urls only have start and end offsets, but the offsets may be either positive from the start of the file or negative from the end of the file. 
  7. The jsp has been replaced by a servlet, so that the bytes don't need to be interpreted as a string.
  8. The servlet does not buffer the entire log into memory before it sent to the user.
  9. The TaskLog class is now public so that pipes can use it.
, +0, new Findbugs warnings

http://issues.apache.org/jira/secure/attachment/12362939/new-log.patch
applied and successfully tested against trunk revision r561603,
but there appear to be new Findbugs warnings introduced by this patch.

New Findbugs warnings: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/496/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Test results:   http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/496/testReport/
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/496/console, Because of find bugs warnings., Fixed findbugs warnings., -1, build or testing failed

2 attempts failed to build and test the latest attachment http://issues.apache.org/jira/secure/attachment/12362983/new-log-2.patch against trunk revision r561603.

Test results:   http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/500/testReport/
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/500/console

Please note that this message is automatically generated and may represent a problem with the automation system and not the patch., This patch fixes the path names to work under windows., It didn't work under windows., Now it does., +1

http://issues.apache.org/jira/secure/attachment/12363013/new-log-3.patch applied and successfully tested against trunk revision r561975.

Test results:   http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/506/testReport/
Console output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/506/console, +1 (assuming the shell shenanigans work on Windows and cgywin+cygpath... I only tested the patch on Linux. *smile*)

Personally I'm glad we only have 3 files: ${HADOOP_LOG_DIR}/userlogs/${taskid}/[stdout|stderr|syslog] rather than subdirs... much easier to debug stuff.


Super-minor nit: Given that {{mapred.userlog.retain.hours}} defaults to 24hrs in hadoop-default.xml...

{noformat}
Index: src/java/org/apache/hadoop/mapred/TaskTracker.java
===================================================================
--- src/java/org/apache/hadoop/mapred/TaskTracker.java	(revision 561588)
+++ src/java/org/apache/hadoop/mapred/TaskTracker.java	(working copy)
@@ -1758,6 +1764,7 @@
             
       Task task = umbilical.getTask(taskid);
       JobConf job = new JobConf(task.getJobFile());
+      TaskLog.cleanup(job.getInt("mapred.userlog.retain.hours", 12));
       task.setConf(job);
           
       defaultConf.addFinalResource(new Path(task.getJobFile()));
{noformat}

should be:
{noformat}
+      TaskLog.cleanup(job.getInt("mapred.userlog.retain.hours", 24));
{noformat}, This has been commited.]