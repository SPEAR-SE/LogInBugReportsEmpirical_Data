[I don't think we want one of these per client.  You might consider moving the SEND_PARAMS_EXECUTOR into the ClientCache, and having that cache pass it into the constructor of {{org.apache.hadoop.ipc.Client}}.

Alternately, you could have some kind of reference-counted static object inside the Client class.  That would involve fewer code changes., [~cmccabe], thanks for comments, and I agree with you. I'll implement it., Attached a patch for stopping SEND_PARAM_EXECUTOR when all clients are stopped with reference counter in Client.java., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12591398/HADOOP-9703.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2756//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/2756//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-common.html
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2756//console

This message is automatically generated., I think the warning generated by findbugs is unavoidable in this case, because of the management of reference-counted static object.
Should we switch to the design by using ClientCache to avoid this warning? What do you think?, Thanks for tackling this JIRA.  The logic looks OK.

I think it would be better to create a static object which handles all of this for you.

For example you could have 
{code}
private static final ClientExecutorServiceFactory = 
    new ClientExecutorServiceFactory();

private static class ClientExecutorServiceFactory {
    synchronized ExecutorService ref() { ... }
    synchronized ExecutorService unref() { ... }
};
{code}

ref manages incrementing the reference count and unref manages decrementing it.

This avoids the findbugs warning, and avoids having to document what locks have to be taken where (because ClientExecutorServiceFactory handles that for you), Thanks for reviewing, Colin.

I attached the fixed patch to surpress warning of findbugs by implementing ClientExecutorServiceFactory and add a test case of IPC after stopping Client., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12591820/HADOOP-9703.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2768//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2768//console

This message is automatically generated., This shouldn't actually need to be static, should it?

{code}
+    private static int executorRefCount = 0;
{code}

Might also add an assert(executorRefCount >= 0) to unref

+1 once that is addressed.  thanks Tsuyoshi, Thanks for reviewing, Colin.
Yes, I agree with the point you point out, so I fixed to remove needless static modifier from executorRefCounter and add assert after decrement executorRefCounter., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12591975/HADOOP-9703.3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2775//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2775//console

This message is automatically generated., +1 , SUCCESS: Integrated in Hadoop-trunk-Commit #4078 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4078/])
HADOOP-9703.  org.apache.hadoop.ipc.Client leaks threads on stop (Tsuyoshi OZAWA via Colin Patrick McCabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1502696)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestIPC.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #269 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/269/])
HADOOP-9703.  org.apache.hadoop.ipc.Client leaks threads on stop (Tsuyoshi OZAWA via Colin Patrick McCabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1502696)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestIPC.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1459 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1459/])
HADOOP-9703.  org.apache.hadoop.ipc.Client leaks threads on stop (Tsuyoshi OZAWA via Colin Patrick McCabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1502696)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestIPC.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1486 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1486/])
HADOOP-9703.  org.apache.hadoop.ipc.Client leaks threads on stop (Tsuyoshi OZAWA via Colin Patrick McCabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1502696)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/CHANGES.txt
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestIPC.java
]