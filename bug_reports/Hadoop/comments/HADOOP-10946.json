[First attempt at cleaning up typos in log messages., Submit first patch for testing.  Cleans up a bunch of log messages across a bunch of files., nice to see someone addressing the minor irritants...let's see if the patch breaks any test that is checking for the text.

A few of the classes have the same text logged/thrown in multiple places. This patch could consider consolidating them into a string constant which is reused â€”although once we switch to Java 7 (soon) we could maybe just use multi-catch to consolidate the exception handling, this being the common source of the problem , Thanks.  This one is fairly conservative.

- I didn't change spelling differences like "Cancelling" (British English) vs. "Canceling" (American English).
- These misspellings were found using grep/sed and visual inspection, so it's likely there are a few left around.
- Also, I didn't fix any misspellings in any comments.
, The Jenkins job looks like it ended up in some kind of crashed state., Found a few more misspellings.  Hopefully a second test run will work okay., Resubmitting for testing., Twice now, I'm seeing the Jenkins job end up in a weird state (neither pass nor fail).  Who can help with this sort of thing?  I've re-run each failing unit test in my tree and it seems to pass fine., Can you post a link the incomplete run?, Latest failure is at:

https://builds.apache.org/job/PreCommit-HADOOP-Build/4445/

Previous failure is at:

https://builds.apache.org/job/PreCommit-HADOOP-Build/4438/

seems to have failed with exactly the same set of errors as well, none of which fails for me on an individual test run.
, FYI,

HDFS-6694 and HDFS-4663. So those TestPipeline failures are almost certainly not real failures., Good to know.  Thanks.

I just thought it odd that on Jenkins the only two non-PASS/non-FAILs in the recent job list were the two runs I listed above., Found one more spelling error.  Will submit new patch., Found one more typo., Submit for testing., What's really weird is that I now see the tests run, but I don't get any update in this JIRA from Jenkins.  This time, it was the one corresponding to this:

HADOOP-10668: TestZKFailoverControllerStress#testExpireBackAndForth occasionally fails
, Will submit renamed patch for proper testing., Renamed patch for gathering proper test results., Submit for testing., I've triggered a manual jenkins test. (I think.) So weird., Try restarting the patch process., Submit reformed patch against trunk., Resubmit for testing., Hmmm...I see this job being run:

https://builds.apache.org/job/PreCommit-HADOOP-Build/4541/

But no posting to this JIRA.  Should I clone/re-create this JIRA and try again?, Probably the patch requires Jenkins to run the tests of many projects, so Jenkins timed out.
Would you try the below?
# file separate jiras in HDFS, MapReduce, and YARN projects
# split the patch for each project
# attach and submit them, That makes sense.  I'll give that a try., Created YARN-2450 as a test., That worked.  Created MAPREDUCE-6051 next., Limit patch to hadoop-common-project and hadoop-tools directories., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12664246/HADOOP-10946-06.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-tools/hadoop-azure hadoop-tools/hadoop-gridmix hadoop-tools/hadoop-streaming:

                  org.apache.hadoop.ha.TestZKFailoverControllerStress
                  org.apache.hadoop.mapred.gridmix.TestDistCacheEmulation

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/4544//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/4544//console

This message is automatically generated., The v6 patch looks good to me, +1(non-binding)., RE: Test failures.  Tests look to be unrelated.  They pass in my tree., RE: No added unit tests.  Changes are just to log file messages., Forgot to link HDFS-6942., It looks like the other three have been committed.  Is there anyone else who wants to comment or review this?, I'm surprised the other patches were committed to branch-2 given that those may have been interpreted by user scripts.  But oh well, who am I to question that now?

+1 lgtm. I'll commit in a second., Patch doesn't apply to branch-2., OK, it's only the Azure bit. Not a big deal.  Committing to branch-2 and trunk., Great.  Thanks!, It looks like we have a test failure in {{TestJournalNode#testFailToStartWithBadConfig}}, because it has an assertion that looks for a strict match on the old {{DiskChecker}} error message.  [~rchiang], do you want to file an HDFS patch to fix that up?  Thanks!, Will do., Filed HDFS-7105 and put up a patch that I tested in my tree., One quick follow up question.  Would it make sense in the future to expose these sorts of strings (e.g. log messages) as "public static final" for use in unit tests that need to do this sort of comparison?  Or is there a better way?, bq. Would it make sense in the future to expose these sorts of strings (e.g. log messages) as "public static final" for use in unit tests that need to do this sort of comparison?

I think this is situational.  Sometimes a string is part of the contract on a public interface (i.e. a WebHDFS JSON key).  In those situations, there might actually be value in the unit test repeating the string.  This way, you can catch problems in code changes that accidentally broke the contract, say by renaming the key.  For something like this though, there really isn't a public contract around this log message, so a constant could help make the test less brittle., SUCCESS: Integrated in Hadoop-Yarn-trunk #686 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/686/])
HADOOP-10946. Fix a bunch of typos in log messages (Ray Chiang via aw) (aw: rev 9f03a7c018bb2c497cd0ef758f1a3e08e8163d06)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics/util/MetricsDynamicMBeanBase.java
* hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/Gridmix.java
* hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java
* hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/StreamJob.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/VersionMismatchException.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1877 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1877/])
HADOOP-10946. Fix a bunch of typos in log messages (Ray Chiang via aw) (aw: rev 9f03a7c018bb2c497cd0ef758f1a3e08e8163d06)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/StreamJob.java
* hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/Gridmix.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics/util/MetricsDynamicMBeanBase.java
* hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/VersionMismatchException.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1902 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1902/])
HADOOP-10946. Fix a bunch of typos in log messages (Ray Chiang via aw) (aw: rev 9f03a7c018bb2c497cd0ef758f1a3e08e8163d06)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/VersionMismatchException.java
* hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/Gridmix.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics/util/MetricsDynamicMBeanBase.java
* hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java
* hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/StreamJob.java
, Thanks [~cnauroth].  That makes sense.]