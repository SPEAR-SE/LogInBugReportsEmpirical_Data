[Here I propose
# saying MUST throw {{FileAlreadyExistsException}}
# fixing all the hadoop filesystems to do this where they do not today.
# making sure the FS tests check for this.

HDFS already has the correct behaviour, as do the blobstore(s)., stack
{code}
ava.io.IOException: File already exists: file:/Users/stevel/tmp/buffer.json
	at org.apache.hadoop.fs.RawLocalFileSystem.create(RawLocalFileSystem.java:276)
	at org.apache.hadoop.fs.RawLocalFileSystem.create(RawLocalFileSystem.java:269)
	at org.apache.hadoop.fs.ChecksumFileSystem$ChecksumFSOutputSummer.<init>(ChecksumFileSystem.java:382)
	at org.apache.hadoop.fs.ChecksumFileSystem.create(ChecksumFileSystem.java:430)
	at org.apache.hadoop.fs.ChecksumFileSystem.create(ChecksumFileSystem.java:411)
	at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:888)
	at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:869)
	at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:768)
{code}, This patch updates the RawLocalFileSystem to throw FileAlreadyExistsException., Patch for the RawLocalFileSystem (including unit tests), I'm reviewing the other filesystems to see if some updates are required to correctly throw FileAlreadyExistsException., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12588436/HADOOP-9651.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2664//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2664//console

This message is automatically generated., New patch with fix on other filesystems., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12588785/HADOOP-9651.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/2683//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2683//console

This message is automatically generated., Core patch looks good, though you need to make sure that your IDE isn't turning imports into .* imports -having them leave all imports alone is the best way to avoid gratuitous diff/merge problems.


I'll add common contract tests for this then merge in the exception modifications, incorporated in the uber-JIRA HADOOP-9361]