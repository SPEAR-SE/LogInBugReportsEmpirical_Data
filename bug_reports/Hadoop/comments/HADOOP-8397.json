[I think we just need to check for a null result, and throw EOFException in that case., Attached patch. As suggested by todd just throwing EOFException on null response., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12530541/HADOOP-8397.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-common-project/hadoop-common.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HADOOP-Build/1067//testReport/
Console output: https://builds.apache.org/job/PreCommit-HADOOP-Build/1067//console

This message is automatically generated., +1, looks good. Will commit this momentarily., Vinay: before I commit, what name would you like listed in the changelog? Just "Contributed by Vinay" or would you like a last name as well?, Thanks todd for review. "Contributed by Vinay" is Ok for me., Is this related with only 2.0.0?
I am using 1.0.3 and when I tried to run a mahout example, I ran into a similar error:
{noformat}
java.lang.NullPointerException
	at org.apache.hadoop.ipc.Client$Connection.receiveResponse(Client.java:852)
	at org.apache.hadoop.ipc.Client$Connection.run(Client.java:781)
{noformat}, Sorry, I forgot about this one and it looks like the bug got fixed as part of HDFS-3504.]