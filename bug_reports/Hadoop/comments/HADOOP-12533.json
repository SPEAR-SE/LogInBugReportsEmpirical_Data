[Added first iteration for the fix., # nice to see a concurrency test in there
# I don't see any test cleanup though....shouldn't those input streams be closed?

If you're finding and fixing bits where azure storage client behaves differently from HDFS, I'd recommend you consider implementing the  {{AbstractFSContract}} suite of tests for WASB, as I don't see it there right now. It does do seek testing, including the various corner cases ... and could have found this mismatch. (actually, I'm not sure what the other filesystems do if you rename a file that's being read, usually that's a "things may fail, failure modes undefined).

, [~stevel@apache.org] Thanks steve. 

For 2. Since the files are deleted and the correctness of the test depends on getting the exception, I didn't close the streams. 

Thanks for the suggestion. I think adding the AbstractFSContract suite of tests can be done as improvement. I would let Chris comment on this.

, [~dchickabasapa], thank you for the patch.

{code}
  public static final String AZURE_STORAGE_BLOBNOTFOUND_ERRORCODE = "BlobNotFound";
  public static final String AZURE_STORAGE_RESOURCENOTFOUND_ERRORCODE = "RESOURCE_NOT_FOUND";
{code}

Instead of repeating these constants within hadoop-azure, do you want to use {{com.microsoft.azure.storage#BLOB_NOT_FOUND}} and {{#RESOURCE_NOT_FOUND}}?  (BTW, is the second one really meant to have a value of "ResourceNotFound"?  That's how it's defined in the SDK.

{code}
            throw new FileNotFoundException();
{code}

Please pass a descriptive string to help with troubleshooting any time you call an exception constructor.  For a {{FileNotFoundException}}, including the file path is very helpful.

The exception unwinding logic is repeated multiple times.  Can that be refactored into a shared helper method?

bq. Since the files are deleted and the correctness of the test depends on getting the exception, I didn't close the streams.

Please ensure all streams get closed anyway at the end of the test.  If you need the stream to be left open while doing some other logic and running assertions, then that's fine, but proper cleanup at the end of a test run is still good practice.

bq. I think adding the AbstractFSContract suite of tests can be done as improvement.

This has come up as feedback on multiple code reviews.  The contract tests are a great way to catch early if a {{FileSystem}} implementation is not satisfying the semantics that Hadoop expects.  I appreciate controlling the scope of this patch, but I also see this as a deferred maintenance problem, ultimately causing more churn as patches come in piecemeal.

I've filed HADOOP-12535 to track work on the contract tests.  Dushyanth, I tentatively assigned this to you.  If this is not something that you're going to work on, please unassign it, so that someone else interested in the community can pick it up., [~onpduo], sorry for the confusion if you received an email on the earlier comment.  I meant it for [~dchickabasapa]., Thanks [~cnauroth] for the quick CR.

1) I have made the change to use error codes from the Azure Storage SDK classes. However the Java Azure storage SDK, does not handle error codes consistently. In some places the error code returned back from the SDK is from [~StorageErrorCode] enum class (https://github.com/Azure/azure-storage-java/blob/9248873511c14f112fcae5f6402447a7fab76162/microsoft-azure-storage/src/com/microsoft/azure/storage/StorageErrorCode.java)  as its the case here in [~StorageException.java] (https://github.com/Azure/azure-storage-java/blob/9248873511c14f112fcae5f6402447a7fab76162/microsoft-azure-storage/src/com/microsoft/azure/storage/StorageException.java#L128) and in some cases it is from the StorageErrorCodeStrings class. So I have refactored the code to handle both possible cases.

2) I have added exception message for FileNotFoundException.

3) I have added teardown method to close the inputstream after each test.

4) I will check with my manager to see if I need to pick up the adding of AbstractFSContract suite to WASB., h2. {{seek()}}

# I'd go from {{e.getMessage()}} in the log statement to just {{e}}; some exceptions don't have a message, but they do have a {{toString()}} value. I don't think it's the case here, but it's still a practise we shouldn't have in the codebase.
# in that try/catch statement, I'd add a check for {{in}} being non-null before closing it. Use {{ IOUtils.closeStream(in)}} for this

Looking at the whole input stream code, I can see that the close operation always assumes in is valid too, it sets {{closed=true}} after closing the stream in an unsynced method, and checks for that {{closed==true}} flag are patchy. Best to review that code and consistently reject operations like {{seek}} on a closed stream., maybe in {{close()}} catch exceptions in {{in.close()}} and always set it to null afterwards. 

{code}
public synchronized void close() throws IOException {
  if (!closed) {
    closed = true;
    IOUtils.closeStream(in)
    in = null;
  }
}
{code}

Not sure if this patch is the right place for that (it'll show up in the FS contract tests), but at the very least seek() should refuse to seek if {{closed==true}} and use {{IOUtils for that close}}. , [~dchickabasapa], thank you for posting a new patch.  I'm clicking the Submit Patch button to trigger a Jenkins pre-commit test run.  Please do respond to Steve's feedback too.  Thanks!, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 6s {color} | {color:blue} docker + precommit patch detected. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 22s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 12s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 14s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 7s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 14s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 31s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 12s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 14s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 11s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 11s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 14s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 14s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 7s {color} | {color:red} Patch generated 5 new checkstyle issues in hadoop-tools/hadoop-azure (total was 26, now 30). {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 36s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 11s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 14s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 1m 1s {color} | {color:green} hadoop-azure in the patch passed with JDK v1.8.0_60. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 1m 15s {color} | {color:green} hadoop-azure in the patch passed with JDK v1.7.0_79. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 24s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 10m 53s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.7.1 Server=1.7.1 Image:test-patch-base-hadoop-date2015-10-31 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12769916/HADOOP-12533.002.patch |
| JIRA Issue | HADOOP-12533 |
| Optional Tests |  asflicense  javac  javadoc  mvninstall  unit  findbugs  checkstyle  compile  |
| uname | Linux 8ab504c74d4a 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HADOOP-Build/patchprocess/apache-yetus-e77b1ce/precommit/personality/hadoop.sh |
| git revision | trunk / 7fd6416 |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_60 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_79 |
| findbugs | v3.0.0 |
| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/7988/artifact/patchprocess/diff-checkstyle-hadoop-tools_hadoop-azure.txt |
| JDK v1.7.0_79  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/7988/testReport/ |
| modules | C: hadoop-tools/hadoop-azure U: hadoop-tools/hadoop-azure |
| Max memory used | 224MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/7988/console |


This message was automatically generated.

, [~dchickabasapa], in addition to Steve's feedback, please also address the Checkstyle warning from the Jenkins run.  Thank you., [~stevel@apache.org] [~cnauroth] Thanks a lot for the CR. 

Steve I addressed both comments on the previous iteration.

Chris I fixed the style check warnings.

, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 5s {color} | {color:blue} docker + precommit patch detected. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 2s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 12s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 13s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 7s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 11s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 29s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 11s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 13s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 15s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 11s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 11s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 13s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 13s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 7s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 11s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 38s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 11s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 14s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 1m 2s {color} | {color:green} hadoop-azure in the patch passed with JDK v1.8.0_60. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 1m 15s {color} | {color:green} hadoop-azure in the patch passed with JDK v1.7.0_79. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 20s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 10m 20s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.7.1 Server=1.7.1 Image:test-patch-base-hadoop-date2015-10-31 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12769961/HADOOP-12533.003.patch |
| JIRA Issue | HADOOP-12533 |
| Optional Tests |  asflicense  javac  javadoc  mvninstall  unit  findbugs  checkstyle  compile  |
| uname | Linux 217cb6b7c43a 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HADOOP-Build/patchprocess/apache-yetus-e77b1ce/precommit/personality/hadoop.sh |
| git revision | trunk / 7fd6416 |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_60 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_79 |
| findbugs | v3.0.0 |
| JDK v1.7.0_79  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/7991/testReport/ |
| modules | C: hadoop-tools/hadoop-azure U: hadoop-tools/hadoop-azure |
| Max memory used | 226MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/7991/console |


This message was automatically generated.

, w.r.t closing checks on seek(), I'd lift the check from {{S3AInputStream}}
  
{code}
private void checkNotClosed() throws IOException {
  if (closed) {
    throw new IOException(FSExceptionMessages.STREAM_IS_CLOSED);
  }
}
{code}

call that at the start of the seek()
Then add a check for a negative position

{code}
public synchronized void seek(long pos) throws IOException {
  checkNoClosed()
  if (targetPos < 0) {
    throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);
  }
{code}, Addressed Steve's Comments., | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 8s {color} | {color:blue} docker + precommit patch detected. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 3m 13s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 14s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 14s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 8s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 11s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 32s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 13s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 14s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 15s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 12s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 14s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 14s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 7s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 38s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 12s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 13s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 1m 2s {color} | {color:green} hadoop-azure in the patch passed with JDK v1.8.0_60. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 1m 17s {color} | {color:green} hadoop-azure in the patch passed with JDK v1.7.0_79. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 23s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 10m 51s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.7.1 Server=1.7.1 Image:test-patch-base-hadoop-date2015-11-01 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12770000/HADOOP-12533.004.patch |
| JIRA Issue | HADOOP-12533 |
| Optional Tests |  asflicense  javac  javadoc  mvninstall  unit  findbugs  checkstyle  compile  |
| uname | Linux f5b19cdd3f03 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HADOOP-Build/patchprocess/apache-yetus-e77b1ce/precommit/personality/hadoop.sh |
| git revision | trunk / 7fd6416 |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_60 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_79 |
| findbugs | v3.0.0 |
| JDK v1.7.0_79  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/7994/testReport/ |
| modules | C: hadoop-tools/hadoop-azure U: hadoop-tools/hadoop-azure |
| Max memory used | 226MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/7994/console |


This message was automatically generated.

, [~dchickabasapa], the {{close}} logic is only correct if the method is marked {{synchronized}}.  Otherwise, 2 threads could enter the {{close}} method, both get past the check on the {{closed}} flag and then double-close the underlying stream.  There could also be a problem with a concurrent {{seek}}} getting past the {{checkNotClosed}} check, but then finding that another thread ran {{close}} before it could complete the method.

There is a strong encouragement that implementations of the JDK stream classes should provide an idempotent {{close}} operation.  Marking it {{synchronized}} would help achieve that goal.

After {{close}} is marked {{synchronized}} and we get a fresh Jenkins pre-commit run, I think the patch will be ready to commit.  I'll wait a bit before committing in case Steve has additional feedback., Addressed [~cnauroth] comments. 

[~stevel@apache.org] can you please take a look., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 8s {color} | {color:blue} docker + precommit patch detected. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
| {color:red}-1{color} | {color:red} mvninstall {color} | {color:red} 1m 42s {color} | {color:red} root in trunk failed. {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 18s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 13s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 10s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 36s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 34s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 13s {color} | {color:green} trunk passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 13s {color} | {color:green} trunk passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 14s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 12s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 12s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 9s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 10s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 41s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 12s {color} | {color:green} the patch passed with JDK v1.8.0_60 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 13s {color} | {color:green} the patch passed with JDK v1.7.0_79 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 1m 14s {color} | {color:green} hadoop-azure in the patch passed with JDK v1.8.0_60. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 1m 24s {color} | {color:green} hadoop-azure in the patch passed with JDK v1.7.0_79. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 28s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 10m 13s {color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=1.7.1 Server=1.7.1 Image:test-patch-base-hadoop-date2015-11-02 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12770019/HADOOP-12533.005.patch |
| JIRA Issue | HADOOP-12533 |
| Optional Tests |  asflicense  javac  javadoc  mvninstall  unit  findbugs  checkstyle  compile  |
| uname | Linux 9f9cb19eab09 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /home/jenkins/jenkins-slave/workspace/PreCommit-HADOOP-Build/patchprocess/apache-yetus-e77b1ce/precommit/personality/hadoop.sh |
| git revision | trunk / 6e4f8a4 |
| Default Java | 1.7.0_79 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_60 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_79 |
| mvninstall | https://builds.apache.org/job/PreCommit-HADOOP-Build/7995/artifact/patchprocess/branch-mvninstall-root.txt |
| findbugs | v3.0.0 |
| JDK v1.7.0_79  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/7995/testReport/ |
| modules | C: hadoop-tools/hadoop-azure U: hadoop-tools/hadoop-azure |
| Max memory used | 65MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/7995/console |


This message was automatically generated.

, [~cnauroth] I see that Hadoop QA run failed in mvninstall subsystem. The failure seems to be in hadoop-common. The only change between the previous patch and this one was making close() synchronized. Which I doubt would have any effect on mvninstall. Is this a legitimate issue or a transient failure?

[~Steve Loughran] This is hitting a bit of deadline for a release, so it would be great if we can get a review from you. Sorry for the inconvenience., bq. This is hitting a bit of deadline for a release...

This patch currently is targeted to Apache Hadoop 2.8.0, which does not yet have any proposed release timeline.  That said, I do expect we can finish this out today and commit., +1 for patch v005.  I have committed this to trunk and branch-2.  [~dchickabasapa], thank you for contributing the patch.  [~stevel@apache.org], thank you for helping with the code review., FAILURE: Integrated in Hadoop-trunk-Commit #8743 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8743/])
HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek (cnauroth: rev 3ce0a6502e78240f551c29bb27a2324ce359cd70)
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationsExceptionHandlingMultiThreaded.java
* hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationExceptionHandling.java
* hadoop-common-project/hadoop-common/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #617 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/617/])
HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek (cnauroth: rev 3ce0a6502e78240f551c29bb27a2324ce359cd70)
* hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationsExceptionHandlingMultiThreaded.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationExceptionHandling.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #628 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/628/])
HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek (cnauroth: rev 3ce0a6502e78240f551c29bb27a2324ce359cd70)
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationExceptionHandling.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationsExceptionHandlingMultiThreaded.java
* hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2558 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2558/])
HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek (cnauroth: rev 3ce0a6502e78240f551c29bb27a2324ce359cd70)
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationsExceptionHandlingMultiThreaded.java
* hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationExceptionHandling.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #1351 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/1351/])
HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek (cnauroth: rev 3ce0a6502e78240f551c29bb27a2324ce359cd70)
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationExceptionHandling.java
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationsExceptionHandlingMultiThreaded.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #564 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/564/])
HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek (cnauroth: rev 3ce0a6502e78240f551c29bb27a2324ce359cd70)
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationsExceptionHandlingMultiThreaded.java
* hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java
* hadoop-common-project/hadoop-common/CHANGES.txt
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationExceptionHandling.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2501 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2501/])
HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek (cnauroth: rev 3ce0a6502e78240f551c29bb27a2324ce359cd70)
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationsExceptionHandlingMultiThreaded.java
* hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java
* hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/TestFileSystemOperationExceptionHandling.java
* hadoop-common-project/hadoop-common/CHANGES.txt
]