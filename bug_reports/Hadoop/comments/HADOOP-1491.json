[My impression from looking at the one case of Koji's investigation:

Two files involved: A and B. On the source side of distcp both are fine. On the destination side A (A_dest) is fine. B_dest is corrupted. .B_dest.crc is same as .B_src.crc, but B_dest has the same content as A_src. Both A and B are small have only one block. Looks like while writing B_dest, it some how wrote block corresponding to A. 

One possible bug that can result in this situation is HADOOP-1396. If both A_dest and B_dest were created around the same time, then it is even more likely culprit (we can check the creation times from creation times of the blocks).
, To confirm Dhruba and Raghu's analysis, 
I inserted one debug print statement inside DFSClient.newBackupFile to print out the "result" and "src".

On one node, two mappers started (almost) at the same time by the distcp.
There were definitely clashing on the temporary file names.  
Attaching the two userlogs.


Picked files from the clashing and dfs -get from source and target cluster. ls -l showed 

-rw-r--r--  1 knoguchi users 133142 Jun 15 10:46 part-270-source
-rw-r--r--  1 knoguchi users 133848 Jun 15 10:47 part-270-target
-rw-r--r--  1 knoguchi users 133848 Jun 15 10:48 part-277-source
-rw-r--r--  1 knoguchi users 133848 Jun 15 10:47 part-277-target

After the copy, part-270 file was corrupted.


, Duplicate of HADOOP-1396., Integrated in Hadoop-trunk #790 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-trunk/790/])
    .  In contrib/index, better control memory usage.  Contributed by Ning Li.
]