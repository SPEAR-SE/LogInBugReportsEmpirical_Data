[Looks like this may be a bug in the metrics system rather than container metrics.  At a glance it appears that unregistering a metrics source won't remove the name from UniqueNames which would be a bug in HADOOP rather than YARN if that ends up being the case.
, This looks like a problem in DefaultMetricsSystem.  There are two UniqueNames instances in that class, mBeanNames and sourceNames.  When a ContainerMetrics source unregisters the names are getting cleaned out properly from mBeanNames but not from sourceNames.  Each source will register a new name in sourceNames, but the only way to clear them out is by shutting down the DefaultMetricsSystem instance.  There needs to be a way to remove elements from sourceNames when a source unregisters.

I updated the summary based on this analysis, and I'll move the JIRA to the HADOOP project since that's where the fix is needed., Hi [~jlowe], as I mentioned in YARN-5296, I think the work you proposed above is already done in YARN-5190. Can you double check on it? Thanks!, Thanks for the pointer!  Yes, it appears YARN-5190 fixed this as a side-effect since it added the requisite methods to DefaultMetricsSystem.

You had mentioned in YARN-5296 that a part of YARN-1643 is needed since metrics.finished() isn't being called, but I'm not sure that's necessary.  In the heap dump I didn't see any leak beyond the source names.  MetricsSystemImpl.unregisterSource is being called for each container, and once YARN-5190 changes that method to unregister the source name from DefaultMetrics I think we're OK at that point., Ah I think I see what you mean.  I think if we just took the source name unregistering from YARN-5190 we'd be OK, but if we take the whole patch then it also adds a metrics leak that we need parts of YARN-1643 to fix?, Note that we've not seen the uncaught exception issue described in YARN-5190 on 2.7, probably because 2.7 doesn't have YARN-4906.  Seems to me the prudent thing to do is extract the part of YARN-5190 that fixes the issue with sourceNames leaking since it's a small and targeted fix that we'd have high confidence doesn't create new problems.  If you agree we can reopen this issue and use it to target a patch to 2.7., bq. Note that we've not seen the uncaught exception issue described in YARN-5190 on 2.7, probably because 2.7 doesn't have YARN-4906. 
Agree. After YARN-4906, things a bit tricky here is: we are calling ContainerMetrics.forContainer() (and unregister) two times: once in ContainerImpl and the other one in ContainerMonitorImpl. And the fix in YARN-1643 has issue in this case because it will call register a metrics again before calling finish it.
However, I am still suspecting only backport part of YARN-5190 is enough as I didn't see where we call ContainerMetrics.finish() in 2.7.3. Do I miss anything here?, Ah. I think it is get called in ContainerDoneTransition. 
Sure. Please feel free to reopen this issue (or YARN-5190) and I can backport the fix in YARN-5190., bq. However, I am still suspecting only backport part of YARN-5190 is enough as I didn't see where we call ContainerMetrics.finish() in 2.7.3. Do I miss anything here?

It's definitely getting called in practice because after almost 2 million containers on that node the only leak I saw was the metric source names.  The bean names and other stuff was getting cleaned up as it should.  The metrics are getting cleaned up in the monitoring thread's run() method:
{code}
        // Remove finished containers
        synchronized (containersToBeRemoved) {
          for (ContainerId containerId : containersToBeRemoved) {
            if (containerMetricsEnabled) {
              ContainerMetrics.forContainer(
                  containerId, containerMetricsPeriodMs,
                  containerMetricsUnregisterDelayMs).finished();
{code}
, Reopening to target a fix just to the DefaultMetricsSystem for 2.7 rather than pulling in the entire patch from YARN-5296 (and its dependencies)., bq. The metrics are getting cleaned up in the monitoring thread's run() method.
I see. The monitor thread code of run() is significantly different with trunk now so I missed that before.

Put a patch to include hadoop-common fix only (with test in TestContainerMetrics).
, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 11m  3s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 22s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 14m 15s{color} | {color:green} branch-2.7 passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  5m 48s{color} | {color:green} branch-2.7 passed with JDK v1.8.0_91 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  6m 30s{color} | {color:green} branch-2.7 passed with JDK v1.7.0_101 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 21s{color} | {color:green} branch-2.7 passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 18s{color} | {color:green} branch-2.7 passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 29s{color} | {color:green} branch-2.7 passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 41s{color} | {color:red} hadoop-common-project/hadoop-common in branch-2.7 has 3 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  7s{color} | {color:green} branch-2.7 passed with JDK v1.8.0_91 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 20s{color} | {color:green} branch-2.7 passed with JDK v1.7.0_101 {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 13s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  1s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m  1s{color} | {color:green} the patch passed with JDK v1.8.0_91 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  7m  1s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  6m 13s{color} | {color:green} the patch passed with JDK v1.7.0_101 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  6m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 25s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  1s{color} | {color:red} The patch has 2857 line(s) that end in whitespace. Use git apply --whitespace=fix. {color} |
| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  1m 33s{color} | {color:red} The patch 124 line(s) with tabs. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 49s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 15s{color} | {color:green} the patch passed with JDK v1.8.0_91 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 22s{color} | {color:green} the patch passed with JDK v1.7.0_101 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 20m 24s{color} | {color:red} hadoop-common in the patch failed with JDK v1.7.0_101. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}  7m  9s{color} | {color:red} hadoop-yarn-server-nodemanager in the patch failed with JDK v1.7.0_101. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 21s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}127m 17s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_91 Failed junit tests | hadoop.ipc.TestRPC |
|   | hadoop.ha.TestZKFailoverController |
|   | hadoop.ipc.TestIPC |
| JDK v1.8.0_91 Timed out junit tests | org.apache.hadoop.conf.TestConfiguration |
| JDK v1.7.0_101 Failed junit tests | hadoop.ha.TestZKFailoverController |
|   | hadoop.yarn.server.nodemanager.containermanager.logaggregation.TestLogAggregationService |
| JDK v1.7.0_101 Timed out junit tests | org.apache.hadoop.conf.TestConfiguration |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:c420dfe |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12817183/HADOOP-13362-branch-2.7.patch |
| JIRA Issue | HADOOP-13362 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 44e073b71333 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | branch-2.7 / 830516b |
| Default Java | 1.7.0_101 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_91 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_101 |
| findbugs | v3.0.0 |
| findbugs | https://builds.apache.org/job/PreCommit-HADOOP-Build/9956/artifact/patchprocess/branch-findbugs-hadoop-common-project_hadoop-common-warnings.html |
| whitespace | https://builds.apache.org/job/PreCommit-HADOOP-Build/9956/artifact/patchprocess/whitespace-eol.txt |
| whitespace | https://builds.apache.org/job/PreCommit-HADOOP-Build/9956/artifact/patchprocess/whitespace-tabs.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/9956/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_101.txt |
| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/9956/artifact/patchprocess/patch-unit-hadoop-yarn-project_hadoop-yarn_hadoop-yarn-server_hadoop-yarn-server-nodemanager-jdk1.7.0_101.txt |
| JDK v1.7.0_101  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/9956/testReport/ |
| modules | C: hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager U: . |
| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/9956/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, +1 lgtm.  Verified the test in TestContainerMetrics fails without the change in hadoop-common and passes afterwards.  The other test failures appear to be unrelated, and the tests pass for me locally with the patch applied.

Committing this., Thanks, Junping!  I committed this to branch-2.7., Thanks [~jlowe] for review and commit!, Hi [~jlowe], forget to ask, any reason to not putting this patch to 2.7.3?, bq. any reason to not putting this patch to 2.7.3?

2.7.3 was in lockdown for only critical blockers that were preventing it from being released, so I just committed it to branch-2.7.  I'm OK with it going into 2.7.3 if there's still a chance to do so, assuming the 2.7.3 release manager is also OK with it., bq. 2.7.3 was in lockdown for only critical blockers that were preventing it from being released, so I just committed it to branch-2.7.
I see. We do see this happen a lot recently in some clusters with enabling container metrics. So I wish we could have it in 2.7.3.

bq. I'm OK with it going into 2.7.3 if there's still a chance to do so, assuming the 2.7.3 release manager is also OK with it.
Agree. Even this should not block 2.7.3 release, but we should try to get it in if by any chance. [~vinodkv], I saw you leave comments in 2.7.3-rc0 voting thread that rc0 will be withdrawn. Can you confirm this patch can be backport to 2.7.3? Thanks!, It sounds like we are missing this in 2.8 branch. Reopen this for backport to 2.8.1., I forget we have a different patch - YARN-5190 for 2.8 and after. Resolve it.]