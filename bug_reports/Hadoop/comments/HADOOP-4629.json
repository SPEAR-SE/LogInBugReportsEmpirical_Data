[now returns -1 on EOF rather than 0.
, -1
I am not in favor of this patch. I believe the original code tried to mimic libc behavior returning 0 bytes at EOF. This patch will probably break a lot of existing clients., a valid return for hadoop read is 0 bytes though - that does not mean EOF.  How does the caller differentiate between 0 bytes read and EOF in this case? , Java API for read(byte[] b) says:

If no byte is available because the stream is at the end of the file, the value -1 is returned; otherwise, *at least* one byte is read and stored into b. 

What would be the situation where 0 bytes is returned without being at EOF (and no exception thrown)?, This is what Dhruba tells me.
, ok i misunderstood dhruba - he says it shouldn't but it could if there's a bug and that's what we may have seen in HADOOP-4616.

I will change this back, but will print a message to stderr if Hadoop returns 0 bytes.
]