{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Yongjun Zhang",
            "key": "yzhangal",
            "name": "yzhangal",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yzhangal",
            "timeZone": "America/Los_Angeles"
        },
        "components": [{
            "id": "12330961",
            "name": "common",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12330961"
        }],
        "created": "2018-06-12T01:28:33.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Yongjun Zhang",
            "key": "yzhangal",
            "name": "yzhangal",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yzhangal",
            "timeZone": "America/Los_Angeles"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2018-06-14T19:44:51.871+0000",
        "customfield_12310222": null,
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i3ur3r:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 17 06:40:03 UTC 2018",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "In Client.java, sendRpcRequest does the following\r\n\r\n{code}\r\n   /** Initiates a rpc call by sending the rpc request to the remote server.\r\n     * Note: this is not called from the Connection thread, but by other\r\n     * threads.\r\n     * @param call - the rpc request\r\n     */\r\n    public void sendRpcRequest(final Call call)\r\n        throws InterruptedException, IOException {\r\n      if (shouldCloseConnection.get()) {\r\n        return;\r\n      }\r\n\r\n      // Serialize the call to be sent. This is done from the actual\r\n      // caller thread, rather than the sendParamsExecutor thread,\r\n\r\n      // so that if the serialization throws an error, it is reported\r\n      // properly. This also parallelizes the serialization.\r\n      //\r\n      // Format of a call on the wire:\r\n      // 0) Length of rest below (1 + 2)\r\n      // 1) RpcRequestHeader  - is serialized Delimited hence contains length\r\n      // 2) RpcRequest\r\n      //\r\n      // Items '1' and '2' are prepared here. \r\n      RpcRequestHeaderProto header = ProtoUtil.makeRpcRequestHeader(\r\n          call.rpcKind, OperationProto.RPC_FINAL_PACKET, call.id, call.retry,\r\n          clientId);\r\n\r\n      final ResponseBuffer buf = new ResponseBuffer();\r\n      header.writeDelimitedTo(buf);\r\n      RpcWritable.wrap(call.rpcRequest).writeTo(buf);\r\n\r\n      synchronized (sendRpcRequestLock) {\r\n        Future<?> senderFuture = sendParamsExecutor.submit(new Runnable() {\r\n          @Override\r\n          public void run() {\r\n            try {\r\n              synchronized (ipcStreams.out) {\r\n                if (shouldCloseConnection.get()) {\r\n                  return;\r\n                }\r\n                if (LOG.isDebugEnabled()) {\r\n                  LOG.debug(getName() + \" sending #\" + call.id\r\n                      + \" \" + call.rpcRequest);\r\n                }\r\n                // RpcRequestHeader + RpcRequest\r\n                ipcStreams.sendRequest(buf.toByteArray());\r\n                ipcStreams.flush();\r\n              }\r\n            } catch (IOException e) {\r\n              // exception at this point would leave the connection in an\r\n              // unrecoverable state (eg half a call left on the wire).\r\n              // So, close the connection, killing any outstanding calls\r\n              markClosed(e);\r\n            } finally {\r\n              //the buffer is just an in-memory buffer, but it is still polite to\r\n              // close early\r\n              IOUtils.closeStream(buf);\r\n            }\r\n          }\r\n        });\r\n\r\n        try {\r\n          senderFuture.get();\r\n        } catch (ExecutionException e) {\r\n          Throwable cause = e.getCause();\r\n\r\n          // cause should only be a RuntimeException as the Runnable above\r\n          // catches IOException\r\n          if (cause instanceof RuntimeException) {\r\n            throw (RuntimeException) cause;\r\n          } else {\r\n            throw new RuntimeException(\"unexpected checked exception\", cause);\r\n          }\r\n        }\r\n      }\r\n    }\r\n{code}\r\n\r\nIt's observed that the call can be stuck at {{senderFuture.get();}} with the following stack\r\n{code}\r\n\"Thread-13\" #40 prio=5 os_prio=0 tid=0x000000000fb0d000 nid=0xf189c waiting on condition [0x00007f697c582000]\r\n   java.lang.Thread.State: WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00000006187e5ec0> (a java.util.concurrent.FutureTask)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n        at java.util.concurrent.FutureTask.awaitDone(FutureTask.java:429)\r\n        at java.util.concurrent.FutureTask.get(FutureTask.java:191)\r\n        at org.apache.hadoop.ipc.Client$Connection.sendRpcRequest(Client.java:1088)\r\n        - locked <0x00000006215c1e08> (a java.lang.Object)\r\n        at org.apache.hadoop.ipc.Client.call(Client.java:1483)\r\n        at org.apache.hadoop.ipc.Client.call(Client.java:1441)\r\n        at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:230)\r\n        at com.sun.proxy.$Proxy10.getBlockLocations(Unknown Source)\r\n        at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.getBlockLocations(ClientNamenodeProtocolTranslatorPB.java:266)\r\n        at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:258)\r\n        at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:104)\r\n        at com.sun.proxy.$Proxy11.getBlockLocations(Unknown Source)\r\n        at org.apache.hadoop.hdfs.DFSClient.callGetBlockLocations(DFSClient.java:1323)\r\n        at org.apache.hadoop.hdfs.DFSClient.getLocatedBlocks(DFSClient.java:1310)\r\n        at org.apache.hadoop.hdfs.DFSClient.getLocatedBlocks(DFSClient.java:1298)\r\n        at org.apache.hadoop.hdfs.DFSInputStream.fetchLocatedBlocksAndGetLastBlockLength(DFSInputStream.java:309)\r\n        at org.apache.hadoop.hdfs.DFSInputStream.openInfo(DFSInputStream.java:275)\r\n        - locked <0x00000006187e5530> (a java.lang.Object)\r\n        at org.apache.hadoop.hdfs.DFSInputStream.<init>(DFSInputStream.java:267)\r\n        at org.apache.hadoop.hdfs.DFSClient.open(DFSClient.java:1629)\r\n        at org.apache.hadoop.hdfs.DistributedFileSystem$4.doCall(DistributedFileSystem.java:338)\r\n        at org.apache.hadoop.hdfs.DistributedFileSystem$4.doCall(DistributedFileSystem.java:334)\r\n        at org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81)\r\n        at org.apache.hadoop.hdfs.DistributedFileSystem.open(DistributedFileSystem.java:334)\r\n{code}\r\n\r\nGiven that we support rpcTimeOut, we could chose the second method of Future below:\r\n{code}\r\n  /**\r\n     * Waits if necessary for the computation to complete, and then\r\n     * retrieves its result.\r\n     *\r\n     * @return the computed result\r\n     * @throws CancellationException if the computation was cancelled\r\n     * @throws ExecutionException if the computation threw an\r\n     * exception\r\n     * @throws InterruptedException if the current thread was interrupted\r\n     * while waiting\r\n     */\r\n    V get() throws InterruptedException, ExecutionException;\r\n\r\n    /**\r\n     * Waits if necessary for at most the given time for the computation\r\n     * to complete, and then retrieves its result, if available.\r\n     *\r\n     * @param timeout the maximum time to wait\r\n     * @param unit the time unit of the timeout argument\r\n     * @return the computed result\r\n     * @throws CancellationException if the computation was cancelled\r\n     * @throws ExecutionException if the computation threw an\r\n     * exception\r\n     * @throws InterruptedException if the current thread was interrupted\r\n     * while waiting\r\n     * @throws TimeoutException if the wait timed out\r\n     */\r\n    V get(long timeout, TimeUnit unit)\r\n        throws InterruptedException, ExecutionException, TimeoutException;\r\n{code}\r\n\r\nIn theory, since the RPC at client is serialized, we could just use the main thread to do the execution, instead of using a threadpool to create new thread. This can be discussed in a separate jira.\r\n\r\nAnd why the RPC is not processed and returned by NN is another topic (HADOOP-15538).\r\n\r\n\r\n\r\n                                              ",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [{
            "id": "12536394",
            "inwardIssue": {
                "fields": {
                    "issuetype": {
                        "avatarId": 21133,
                        "description": "A problem which impairs or prevents the functions of the product.",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                        "id": "1",
                        "name": "Bug",
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                        "subtask": false
                    },
                    "priority": {
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "id": "3",
                        "name": "Major",
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                    },
                    "status": {
                        "description": "The issue is open and ready for the assignee to start work on it.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                        "id": "1",
                        "name": "Open",
                        "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                        "statusCategory": {
                            "colorName": "blue-gray",
                            "id": 2,
                            "key": "new",
                            "name": "To Do",
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
                        }
                    },
                    "summary": "Possible RPC deadlock in Client"
                },
                "id": "13166019",
                "key": "HADOOP-15538",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/13166019"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12536394",
            "type": {
                "id": "10030",
                "inward": "is related to",
                "name": "Reference",
                "outward": "relates to",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
            }
        }],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095"
            },
            "id": "12310240",
            "key": "HADOOP",
            "name": "Hadoop Common",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310240"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Yongjun Zhang",
            "key": "yzhangal",
            "name": "yzhangal",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yzhangal",
            "timeZone": "America/Los_Angeles"
        },
        "resolution": null,
        "resolutiondate": null,
        "status": {
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "id": "1",
            "name": "Open",
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "statusCategory": {
                "colorName": "blue-gray",
                "id": 2,
                "key": "new",
                "name": "To Do",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
            }
        },
        "subtasks": [],
        "summary": "RPC could stuck at senderFuture.get()",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2018-10-17T06:46:48.000+0000",
        "versions": [],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HADOOP-15530/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HADOOP-15530/watchers",
            "watchCount": 6
        },
        "workratio": -1
    },
    "id": "13165463",
    "key": "HADOOP-15530",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165463"
}