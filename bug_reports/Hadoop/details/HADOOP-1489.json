{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12371558","self":"https://issues.apache.org/jira/rest/api/2/issue/12371558","key":"HADOOP-1489","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312474","id":"12312474","description":"","name":"0.14.0","archived":false,"released":true,"releaseDate":"2007-08-20"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2007-06-14T06:10:14.833+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Jun 21 12:21:23 UTC 2007","customfield_12310420":"19171","customfield_12312320":null,"customfield_12310222":"10002_*:*_1_*:*_62768248_*|*_1_*:*_1_*:*_554442284_*|*_6_*:*_1_*:*_0_*|*_5_*:*_1_*:*_5257359262","customfield_12312321":null,"resolutiondate":"2007-06-20T21:49:37.782+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-1489/watchers","watchCount":0,"isWatching":false},"created":"2007-06-13T18:22:47.250+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312348","id":"12312348","description":"","name":"0.13.0","archived":false,"released":true,"releaseDate":"2007-06-08"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2007-08-20T18:12:17.042+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310687","id":"12310687","name":"io","description":""}],"timeoriginalestimate":null,"description":"When input file has \\r\\n, LineRecordReader uses mark()/reset() to read one byte ahead to check if \\r is followed by \\n.   This probably caused the BufferedInputStream to issue a small read request (e.g., 127 bytes).   The  ChecksumFileSystem.FSInputChecker.read() code \n{code}\n   public int read(byte b[], int off, int len) throws IOException {\n     // make sure that it ends at a checksum boundary\n     long curPos = getPos();\n     long endPos = len+curPos/bytesPerSum*bytesPerSum;\n     return readBuffer(b, off, (int)(endPos-curPos));\n   }\n{code}\ntries to truncate \"len\" to checksum boundary.  For DFS, bytesPerSum is 512.  So for small reads, the truncated length become negative (i.e., endPos - curPos is < 0).   The underlying DFS read returns 0 when length is negative.  However, readBuffer changes it to -1 assuming end-of-file has been reached.   This means effectively, the rest of the input file did not get read.  In my case, only 8MB of a 52MB file is actually read.   Two sample stacks are appended.\n\nOne related issue, if there are assumptions (such as len >= bytesPerSum) in FSInputChecker's read(), would it be ok to add a check that throws an exception when the assumption is violated?   This assumption is a bit unusal and as code changes (both Hadoop and Java's implementation of BufferedInputStream), the assumption may get violated.  This silently dropping large part of input seems really difficult for people to notice (and debug) when people start to deal with terabytes of data.   Also, I suspect the performance impact for such a check would not be noticed.\n\nbwolen\n\nHere are two sample stacks.  (i have readbuffer throw when it gets 0 bytes, and have inputchecker catches the exception and rethrow both.  This way, I catch the values from both caller and callee (see the callee one starts with \"Caused by\")\n\n-------------------------------------\n{code}\njava.lang.RuntimeException: end of read()\nin=org.apache.hadoop.fs.ChecksumFileSystem$FSInputChecker len=127\npos=45223932 res=-999999\n       at org.apache.hadoop.fs.FSDataInputStream$PositionCache.read(FSDataInputStream.java:50)\n       at java.io.BufferedInputStream.fill(BufferedInputStream.java:218)\n       at java.io.BufferedInputStream.read(BufferedInputStream.java:237)\n       at org.apache.hadoop.fs.FSDataInputStream$Buffer.read(FSDataInputStream.java:116)\n       at java.io.FilterInputStream.read(FilterInputStream.java:66)\n       at org.apache.hadoop.mapred.LineRecordReader.readLine(LineRecordReader.java:132)\n       at org.apache.hadoop.mapred.LineRecordReader.readLine(LineRecordReader.java:124)\n       at org.apache.hadoop.mapred.LineRecordReader.next(LineRecordReader.java:108)\n       at org.apache.hadoop.mapred.MapTask$1.next(MapTask.java:168)\n       at org.apache.hadoop.mapred.MapRunner.run(MapRunner.java:44)\n       at org.apache.hadoop.mapred.MapTask.run(MapTask.java:186)\n       at org.apache.hadoop.mapred.TaskTracker$Child.main(TaskTracker.java:1720)\n\n\nCaused by: java.lang.RuntimeException: end of read()\ndatas=org.apache.hadoop.dfs.DFSClient$DFSDataInputStream pos=45223932\nlen=-381 bytesPerSum=512 eof=false read=0\n       at org.apache.hadoop.fs.ChecksumFileSystem$FSInputChecker.readBuffer(ChecksumFileSystem.java:200)\n       at org.apache.hadoop.fs.ChecksumFileSystem$FSInputChecker.read(ChecksumFileSystem.java:175)\n       at org.apache.hadoop.fs.FSDataInputStream$PositionCache.read(FSDataInputStream.java:47)\n       ... 11 more\n---------------\n\njava.lang.RuntimeException: end of read()  in=org.apache.hadoop.fs.ChecksumFileSystem$FSInputChecker len=400 pos=4503 res=-999999\n\tat org.apache.hadoop.fs.FSDataInputStream$PositionCache.read(FSDataInputStream.java:50)\n\tat java.io.BufferedInputStream.fill(BufferedInputStream.java:218)\n\tat java.io.BufferedInputStream.read(BufferedInputStream.java:237)\n\tat org.apache.hadoop.fs.FSDataInputStream$Buffer.read(FSDataInputStream.java:116)\n\tat java.io.FilterInputStream.read(FilterInputStream.java:66)\n\tat org.apache.hadoop.mapred.LineRecordReader.readLine(LineRecordReader.java:132)\n\tat org.apache.hadoop.mapred.LineRecordReader.readLine(LineRecordReader.java:124)\n\tat org.apache.hadoop.mapred.LineRecordReader.next(LineRecordReader.java:108)\n\tat org.apache.hadoop.mapred.MapTask$1.next(MapTask.java:168)\n\tat org.apache.hadoop.mapred.MapRunner.run(MapRunner.java:44)\n\tat org.apache.hadoop.mapred.MapTask.run(MapTask.java:186)\n\tat org.apache.hadoop.mapred.TaskTracker$Child.main(TaskTracker.java:1720)\n\nCaused by: java.lang.RuntimeException: end of read()  datas=org.apache.hadoop.dfs.DFSClient$DFSDataInputStream pos=4503 len=-7 bytesPerSum=512 eof=false read=0\n\tat org.apache.hadoop.fs.ChecksumFileSystem$FSInputChecker.readBuffer(ChecksumFileSystem.java:200)\n\tat org.apache.hadoop.fs.ChecksumFileSystem$FSInputChecker.read(ChecksumFileSystem.java:175)\n\tat org.apache.hadoop.fs.FSDataInputStream$PositionCache.read(FSDataInputStream.java:47)\n\t... 11 more\n\n{code}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12360131","id":"12360131","filename":"HADOOP-1489.2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-19T18:42:16.183+0000","size":7080,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12360131/HADOOP-1489.2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12359918","id":"12359918","filename":"HADOOP-1489.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-16T07:40:37.559+0000","size":8981,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12359918/HADOOP-1489.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12359640","id":"12359640","filename":"MRIdentity.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-13T23:06:23.599+0000","size":578,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12359640/MRIdentity.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12359644","id":"12359644","filename":"slashr33.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-14T00:37:41.854+0000","size":45550,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12359644/slashr33.txt"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"106214","customfield_12312823":null,"summary":"Input file get truncated for text files with \\r\\n","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504472","id":"12504472","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"This is a simple map-reduce that uses the default identity mapper / reducer.   To run this, you need to give it two input arguments\n   - input file/directory\n   - output directory\nNext attachment slashr33.txt contains the input file to run on.  I'll document more on the skipping behavior there.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-13T23:06:23.732+0000","updated":"2007-06-13T23:06:23.732+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504484","id":"12504484","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"\nIt turned out not to be trivial to generate a small input file that breaks both the 0.13.0 release and head of the source tree.   It probably is related to buffer size settings...etc.  The only input file I got that consistently breaks all the config setups, is the original 52MB file.  This is not so ideal.   So, here is a 45k input file that breaks 0.13.0 release with the following hadoop-site.xml settings.\n\n{quote}\ndfs.replication:  1 \nhadoop.tmp.dir \nfs.default.name \ndfs.name.dir \nmapred.job.tracker \n {quote}\n\nOther config settings may not break on this small input file.\n\nRunning MRIdentity on this, you get\n{quote}\n07/06/13 17:33:28 INFO mapred.JobClient:     Map input bytes=26870\n{quote}\n\nSince the file is 45KB,  about 20k bytes didn't get read.\n\nI want to emphasize that different buffersize setup in the config may result in different outcome.     Please let me know if there difficulties reproducing this.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-14T00:37:41.994+0000","updated":"2007-06-14T00:37:41.994+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504553","id":"12504553","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dhruba","name":"dhruba","key":"dhruba","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dhruba&avatarId=30636","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dhruba&avatarId=30636","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dhruba&avatarId=30636","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dhruba&avatarId=30636"},"displayName":"dhruba borthakur","active":true,"timeZone":"America/Tijuana"},"body":"Does this problem exist in previous release, e.g. 0.12.3? It will be good to know whether this was introduced in 0.13 release. Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dhruba","name":"dhruba","key":"dhruba","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dhruba&avatarId=30636","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dhruba&avatarId=30636","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dhruba&avatarId=30636","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dhruba&avatarId=30636"},"displayName":"dhruba borthakur","active":true,"timeZone":"America/Tijuana"},"created":"2007-06-14T06:10:14.833+0000","updated":"2007-06-14T06:10:14.833+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504554","id":"12504554","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"body":"It exists in prev releases also.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-14T06:13:51.821+0000","updated":"2007-06-14T06:13:51.821+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504572","id":"12504572","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dhruba","name":"dhruba","key":"dhruba","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dhruba&avatarId=30636","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dhruba&avatarId=30636","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dhruba&avatarId=30636","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dhruba&avatarId=30636"},"displayName":"dhruba borthakur","active":true,"timeZone":"America/Tijuana"},"body":"So, can it be related to HADOOP-1491? In that case, distcp copies files with a buffer size specified by \"copy.buf.size\". It has a default value of 4K.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dhruba","name":"dhruba","key":"dhruba","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dhruba&avatarId=30636","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dhruba&avatarId=30636","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dhruba&avatarId=30636","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dhruba&avatarId=30636"},"displayName":"dhruba borthakur","active":true,"timeZone":"America/Tijuana"},"created":"2007-06-14T07:20:33.170+0000","updated":"2007-06-14T07:20:33.170+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504575","id":"12504575","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"body":"> So, can it be related to HADOOP-1491? In that case, distcp copies files with a buffer size specified by \"copy.buf.size\". It has a default value of 4K.\n\nI don't think so. This bug only truncates and only occurs when user uses 'mark()' on inputstream. I don't hink distcp uses mark().  In the case of HADOOP-1491 one file (or block) seems to get overwritten.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-14T07:26:29.989+0000","updated":"2007-06-14T07:26:29.989+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504908","id":"12504908","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hairong","name":"hairong","key":"hairong","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hairong Kuang","active":true,"timeZone":"Etc/UTC"},"body":"This is a good one and very subtle too.\n\nThe problem is caused by using an external buffer for checksum verification. So FSInputChecker requires the amount of data read should be at least bytesPerCheccksum, which makes sure that no checksum verified data are read.\n\nWe use Java's BufferedInputStream to implement the external buffer and guranteens that the buffer size is at least bytePerChecksum. However, in order to support mark() in BufferedInputStream, BufferedInputStream sometimes may expand its buffer size and issue read that asks for bytes which are less than bytesPerChecksum. Therefore, we get the problem described in this jira.\n\nThe proposal in HADOOP-1470 is to verify checksum using an internal buffer.  So the buffer size restriction will no longer be required.  Hence a patch to HADOOP-1470 will also resolve this issue.\n\nAn alternative quick fix is to overide markSupported() in FSDataInputStream.Buffer so that it returns false.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hairong","name":"hairong","key":"hairong","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hairong Kuang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-14T20:44:22.937+0000","updated":"2007-06-14T20:44:22.937+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504913","id":"12504913","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cutting","name":"cutting","key":"cutting","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Doug Cutting","active":true,"timeZone":"America/Los_Angeles"},"body":"> An alternative quick fix is to overide markSupported() in FSDataInputStream.Buffer so that it returns false.\n\n+1 I think we should do that in the short-term to fix this.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cutting","name":"cutting","key":"cutting","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Doug Cutting","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-14T20:53:12.329+0000","updated":"2007-06-14T20:53:12.329+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504915","id":"12504915","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"body":"+1. I think in short term even HADOOP-1470 will not support mark().\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-14T21:00:38.373+0000","updated":"2007-06-14T21:00:38.373+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504918","id":"12504918","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"> An alternative quick fix is to overide markSupported() in FSDataInputStream.Buffer so that it returns false.\n\nIf you do this, please also fix LineRecordReader().  Otherwise, the initial seek will fail.\nMy current work around (before i understood what was happening) was delaying\nthe initial seek till BufferedInputStream() is created.  (The orig code directly reads\nusing FSDataInputStream)\n\n{code}\n    boolean skipFirstLine = false; \n    ...\n    } else if (start != 0) { \n      --start; \n      fileIn.seek(start); \n      skipFirstLine = true; \n    } \n \n    this.in = new BufferedInputStream(in); \n    if (skipFirstLine) { \n      start += LineRecordReader.readLine(this.in, null); \n    } \n{code}\n\nHaving an extra buffer on top means that the external buffer being used by the FSInputChecker will never be called with mark() or reset().\n\nbwolen\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-14T21:04:18.597+0000","updated":"2007-06-14T21:04:18.597+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504919","id":"12504919","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"by \"initial seek\" I mean it's search for newline in\n{code}\n  LineRecordReader.readLine(fileIn, null);\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-14T21:06:14.522+0000","updated":"2007-06-14T21:06:14.522+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504923","id":"12504923","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"btw, if people agrees with these, I would be comfortable to submitting a patch, including a check on FSInputChecker.read()'s assumption.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-14T21:21:29.966+0000","updated":"2007-06-14T21:21:29.966+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504954","id":"12504954","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hairong","name":"hairong","key":"hairong","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hairong Kuang","active":true,"timeZone":"Etc/UTC"},"body":"+1 on the fix to the use of LineRecordReader.readLine. Shall we enforce that LineRecordReader.readLine to take BufferedInputStream as an input?\n\nBwolen, you are more than welcome to submit a patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hairong","name":"hairong","key":"hairong","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hairong Kuang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-14T22:43:03.639+0000","updated":"2007-06-14T22:43:03.639+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12504999","id":"12504999","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"> Shall we enforce that LineRecordReader.readLine to take BufferedInputStream as an input?\n\nwould It be too restrictive to force BufferedInputStream on future extensions of\nLineRecordReader?\n\nThe only requirement is that InputStream needs to support mark/reset.  \nThis would be easy to check if a LineReader class got broken out of LineRecordReader.\n(though maybe an overkill till someone else needs a LineReader outside of LineRecordReader).\n\nAnother thing is that reading BufferedReader.nextLine, its implementation does not depend on mark/reset as it remembers seeing \\r means that when people request to read the next line, and if the first character is \\n, skip it.   It is too bad BufferedReader.nextLine returns a String instead of allowing people to pass it an OutputStream to write to....   Would have been nice to use it to simlify code and avoid a copy.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-15T01:52:00.279+0000","updated":"2007-06-15T01:52:00.279+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12505012","id":"12505012","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"body":"We need to mark only because readLine tries to let '\\r' alone to be a valid end of line character. I think most other software don't define that way. We could require a '\\n' to end a line. Of course readLine should still swallow a '\\r' if it immediately followed by '\\n'. Then we don't need to mark or 'put back' a byte.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-15T03:06:48.221+0000","updated":"2007-06-15T03:06:48.221+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12505013","id":"12505013","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"body":"{noformat}\nbash-3.2$ printf \"1 \\n 2 \\n 3 \\r 4 \\n\" | wc\n      3       4      14\n{noformat}\nBut current our readLine would count 4 lines.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-15T03:12:07.964+0000","updated":"2007-06-15T03:12:07.964+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12505023","id":"12505023","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"BufferedReader.nextLine() will also treat \\r alone (without \\n afterwards) as a newline by itself.\nIt basically returns a line when it see a \\r or a \\n.\nOn the \\r case, it sets a variable called skipLF so that on the next \"nextLine()\" call,\nit will skip the next character if it is \\n.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-15T03:50:11.220+0000","updated":"2007-06-15T03:50:11.220+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12505027","id":"12505027","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"body":"Then we should fix BufferedReader.nextLine() too.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-15T04:10:35.313+0000","updated":"2007-06-15T04:10:35.313+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12505031","id":"12505031","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"\nBufferedReader came from java.io\n\n{quote}\nhttp://java.sun.com/j2se/1.3/docs/api/java/io/BufferedReader.html\n{quote}\n\nThe semantics of treating \\r without \\n afterwards as a end of a line seems to be a correct semantics \nsince \\r is the carriage return character.   \n\nI am only saying what BufferedReader implements basically is what Hadoop's LineRecordReader does\nwithout using mark()/reset().   Had it's nextLine() allows writes to OutputStream, we could simplify \nLineRecordReader to use it instead of implement yet another line reader.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-15T04:30:59.098+0000","updated":"2007-06-15T04:30:59.098+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12505299","id":"12505299","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cutting","name":"cutting","key":"cutting","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Doug Cutting","active":true,"timeZone":"America/Los_Angeles"},"body":"I like the idea of using the same logic as BufferedReader.  Can we simply maintain a flag instead of using mark() and reset()?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cutting","name":"cutting","key":"cutting","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Doug Cutting","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-15T16:43:38.202+0000","updated":"2007-06-15T16:43:38.202+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12505323","id":"12505323","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"body":"This function is a stateless static function. Bwolen's work around to create a BufferedInputSream() by before calling ReadLine() should work ok now ( because the caller anyway created BufferedInputStream()) or using BufferedReader.readLine() will also work I think.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-15T17:42:08.986+0000","updated":"2007-06-15T17:42:08.986+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12505439","id":"12505439","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"Here is a patch for this bug.   Please review.\n\nThis patch \"fixes\" this bug by\n- making FSDataInputStream.Buffer not support mark()/reset()\n- make sure all read() in LineRecordReader is done thru a top level InputStreamBuffer.\n\nIt also adds checks to FSInputChecker to ensure that whenever read() wants to return -1, it better be not due to the request is asking for 0 bytes.   The check is somewhat aggressive to find potential violations early.   Please comment.\n\nFinally, I added a unittest.  I ended up reading BufferedInputStream to make this test possible.  Current head of tree will fail with an assertion failure.   While it is a good test for testing the existence of current bug, it is not a good test for whether the fix is correct.  i.e., \nthis test works with the patch simply because \"mark()\" does nothing when markSupported() is disabled (modelled after InputStream).    Suggestions?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-16T07:40:37.681+0000","updated":"2007-06-16T07:40:37.681+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12505559","id":"12505559","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"body":"Bwolen,\nregd changes under hadoop/fs/, It will heavily conflict with HADOOP-1470. For hadoop/fs, would it be enough to implement markSupported()  and mark() as you did. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-17T00:45:34.119+0000","updated":"2007-06-17T00:45:34.119+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12505634","id":"12505634","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"\n> changes under hadoop/fs/, It will heavily conflict with HADOOP-1470. \n\nare you referring to  3 changes in \n   hadoop/fs/ChecksumFileSystem.java\ntwo in callers to readBuffer(), and one in readBuffer() itself.\n\nThese 3 changes are checking for 2 assumptions:\n1. read() assumes \"len >= bytesPerSum\"\n2. readBuffer() assumes if 0 bytes read, then it must be end-of-file.\n\n- The changes for 1 is 11 lines in 1 code block.\n- The changes for 2 is 11 lines in 2 code blocks.\n\nGenerally, it would be nice for unusual assumptions to be verified at run time if it doesn't have much performance impacts.\nThough if people think it would generate too much integration pain, I will remove the checks.   Please let me know which\nof these 3 changes would impact integration badly. \n\nA separate question, would either of these assumptions go away for HADOOP-1470?\nIf not, could the implementer please add the checks in his/her version?\nAlternatively, will HADOOP-1470 be ready soon?  If so, I would be happy to add those checks back in after 1470 get submitted.\n\nlet me know.  thanks\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-17T23:34:21.105+0000","updated":"2007-06-17T23:34:21.105+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12505870","id":"12505870","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"body":"I am fine either way. I am not opposed to having those checks in hadoop/fs. I think readBuffer() itself will go away in 1470, so both of the assumptions, I think will go way.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-18T16:32:53.697+0000","updated":"2007-06-18T16:32:53.697+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12506261","id":"12506261","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"ok.  let's deal with the checks when HADOOP-1470 is done.\nHere is a HADOOP-1489.2.patch without those 3 checks.\nAre there other issues I should consider before submitting this patch for review?\nalso, currently the build is broken by hbase.  does patch submission need to wait for the build to be fixed first?\n\nthanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-19T18:42:16.355+0000","updated":"2007-06-19T18:42:16.355+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12506283","id":"12506283","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"body":"+1. Changes look good. I am not sure if implementing reset() is necessary though. Default implementation is supposed to check markSupported().\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-19T20:16:21.833+0000","updated":"2007-06-19T20:16:21.833+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12506359","id":"12506359","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"> Default implementation is supposed to check markSupported().\n\nI just grep thru Hadoop code base, I didn't find any code that checks for this.  It is better to be safer... \nLet me know which function's default implementation is suppose to have checked this.  I will verify whether or not it does.\n\nfinally, how does \"submit patch\" work?  I click on \"submit patch\" link on the left, but it doesn't allow me to select which patch I am submitting.  does it just assume the newest patch?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-20T01:41:53.855+0000","updated":"2007-06-20T01:41:53.855+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12506363","id":"12506363","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"body":"I was thinking of original contract of reset http://java.sun.com/j2se/1.4.2/docs/api/java/io/InputStream.html#reset(). But what you have is fine.\n\n'Submit patch\" is just a flag, it does not actually commit anything. Usually the commiter selects the latest patch. Also in the case of Hadoop, this flag triggers automated build and runs unit tests.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rangadi","name":"rangadi","key":"rangadi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Raghu Angadi","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-20T01:56:43.679+0000","updated":"2007-06-20T01:56:43.679+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12506389","id":"12506389","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"marking for sumbit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-20T04:23:29.519+0000","updated":"2007-06-20T04:23:29.519+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12506390","id":"12506390","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"body":"> original contract of reset \n\nLooks in in the entire java source code, only one function actually bothered to check for this...\n{code}\n   net/URLConnection.java\n   static public String guessContentTypeFromStream(InputStream is)\n                        throws IOException {\n        // If we can't read ahead safely, just give up on guessing\n        if (!is.markSupported())\n{code}\n\nLet's play it safe just in case people forgets...\nthanks for the input.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wbwolen","name":"wbwolen","key":"wbwolen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bwolen Yang","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-20T04:27:01.786+0000","updated":"2007-06-20T04:27:01.786+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12506398","id":"12506398","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"+1\n\nhttp://issues.apache.org/jira/secure/attachment/12360131/HADOOP-1489.2.patch applied and successfully tested against trunk revision r548794.\n\nTest results:   http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/310/testReport/\nConsole output: http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Patch/310/console","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-20T05:29:12.674+0000","updated":"2007-06-20T05:29:12.674+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12506693","id":"12506693","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cutting","name":"cutting","key":"cutting","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Doug Cutting","active":true,"timeZone":"America/Los_Angeles"},"body":"I just committed this.  Thanks, Bwolen!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cutting","name":"cutting","key":"cutting","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Doug Cutting","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-06-20T21:49:37.746+0000","updated":"2007-06-20T21:49:37.746+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12371558/comment/12506870","id":"12506870","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"Integrated in Hadoop-Nightly #131 (See [http://lucene.zones.apache.org:8080/hudson/job/Hadoop-Nightly/131/])","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-21T12:21:23.009+0000","updated":"2007-06-21T12:21:23.009+0000"}],"maxResults":34,"total":34,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-1489/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0ij9b:"}}