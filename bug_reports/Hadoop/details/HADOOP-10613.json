{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12714696","self":"https://issues.apache.org/jira/rest/api/2/issue/12714696","key":"HADOOP-10613","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2014-05-19T03:27:25.320+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon May 19 09:09:55 UTC 2014","customfield_12310420":"393009","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-10613/watchers","watchCount":4,"isWatching":false},"created":"2014-05-16T02:50:15.625+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326144","id":"12326144","description":"2.4.0 release","name":"2.4.0","archived":false,"released":true,"releaseDate":"2014-04-07"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-05-19T09:09:55.212+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310689","id":"12310689","name":"fs","description":"Generic FileSystem code"}],"timeoriginalestimate":null,"description":"There is no size limit of the hashmap in  FileSystem.CACHE, which can cause a potential memory leak.\nIf every time i use a new UGI object to invoke FileSystem.get(conf)  and never invoke FileSystem's close method,this issue will raise.\n\nIf there is a size limit of the hashmap or changing fileSystem instances to soft reference,then user's code don't need to consider too much about the cache leak issues.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"393176","customfield_12312823":null,"summary":"Potential Resource Leaks in FileSystem.CACHE ","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nemon","name":"nemon","key":"nemon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=nemon&avatarId=22931","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nemon&avatarId=22931","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nemon&avatarId=22931","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nemon&avatarId=22931"},"displayName":"Nemon Lou","active":true,"timeZone":"Asia/Shanghai"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nemon","name":"nemon","key":"nemon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=nemon&avatarId=22931","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nemon&avatarId=22931","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nemon&avatarId=22931","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nemon&avatarId=22931"},"displayName":"Nemon Lou","active":true,"timeZone":"Asia/Shanghai"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12714696/comment/14001359","id":"14001359","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"body":"> ... If every time i use a new UGI object to invoke FileSystem.get(conf) and never invoke FileSystem's close method,this issue will raise.\n ...\n\nIs it similar to if an application open a lot of (local) files but not closing them, or open a lot of sockets but not closing them?  I think the application is responsible to call close() for releasing the resource in such cases.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-05-19T03:27:25.320+0000","updated":"2014-05-19T03:27:25.320+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12714696/comment/14001518","id":"14001518","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nemon","name":"nemon","key":"nemon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=nemon&avatarId=22931","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nemon&avatarId=22931","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nemon&avatarId=22931","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nemon&avatarId=22931"},"displayName":"Nemon Lou","active":true,"timeZone":"Asia/Shanghai"},"body":"Yes,application is responsable to release FileSystem object int the case i described above for now.\nBut i think FileSystem can do better(easier to use).\nThere are differences between hadoop's FileSystem and java's File.\nFor java File object,user need to close it very time after open it.\nFor hadoop FileSystem object ,user don't need to close it after call FileSystem.get(conf).Because the FileSystem object is cached\nand can be reused next time when user's code invoke FileSystem.get(conf) again.It's life cycle is higher than java's File object. \nThe perpose to call FileSystem's close method is removing it from cache ,and making delete-on-exit featrue work.\nIf user' code never call FileSystem's close method,it's still ok.Because there is a shut down hook for each FileSystem object,the close method will be called\nwhen application stops.The only problem is the memory leak.So,a LRU cache or something similar will be better than the no size limited hashmap based cache. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nemon","name":"nemon","key":"nemon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=nemon&avatarId=22931","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nemon&avatarId=22931","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nemon&avatarId=22931","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nemon&avatarId=22931"},"displayName":"Nemon Lou","active":true,"timeZone":"Asia/Shanghai"},"created":"2014-05-19T09:09:55.212+0000","updated":"2014-05-19T09:09:55.212+0000"}],"maxResults":2,"total":2,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-10613/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1vodb:"}}