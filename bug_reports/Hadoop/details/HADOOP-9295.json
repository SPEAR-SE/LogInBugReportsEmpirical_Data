{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12631712","self":"https://issues.apache.org/jira/rest/api/2/issue/12631712","key":"HADOOP-9295","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2013-02-11T17:25:13.261+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Apr 15 18:07:16 UTC 2013","customfield_12310420":"312208","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-9295/watchers","watchCount":2,"isWatching":false},"created":"2013-02-11T11:37:05.177+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12320248","id":"12320248","description":"maintenance release on branch-1.0","name":"1.0.3","archived":false,"released":true,"releaseDate":"2012-05-07"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-04-15T18:07:16.813+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310687","id":"12310687","name":"io","description":""}],"timeoriginalestimate":null,"description":"Verified the trunk looks the same as 1.0.3 for this issue.\n\nWhen mappers output MapWritables with different class types, then they are read in on the Reducer via an iterator (multiple calls to readFields without instantiating a new object) you'll get this:\n\njava.lang.IllegalArgumentException: Id 1 exists but maps to org.me.ClassTypeOne and not org.me.ClassTypeTwo\n        at org.apache.hadoop.io.AbstractMapWritable.addToMap(AbstractMapWritable.java:73)\n        at org.apache.hadoop.io.AbstractMapWritable.readFields(AbstractMapWritable.java:201)\n\nIt happens because AbstractMapWritable accumulates class type entries in its ClassType to ID (and vice versa) hashmaps.\n\nThose accumulating classtype-to-id hashmaps need to be cleared to support multiple calls to readFields().\n\nI've attached a JUnit test that both demonstrates the problem and contains an embedded, fixed version of MapWritable and ArrayMapWritable (note the //TODO comments in the code where it was fixed in 2 places).\n\nIf there's a better way to submit this recommended bug fix, someone please feel free to let me know.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12568812","id":"12568812","filename":"MapWritableBugTest.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"created":"2013-02-11T11:38:13.817+0000","size":14075,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12568812/MapWritableBugTest.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12574176","id":"12574176","filename":"test-hadoop-9295.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2013-03-18T17:50:21.572+0000","size":3590,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12574176/test-hadoop-9295.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"312554","customfield_12312823":null,"summary":"AbstractMapWritable throws exception when calling readFields() multiple times when the maps contain different class types","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13575913","id":"13575913","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"Thanks for filing this, David. Looks like you already a fix. Will you be interested in posting a patch for the same?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2013-02-11T17:25:13.261+0000","updated":"2013-02-11T17:25:13.261+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13582124","id":"13582124","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"body":"I'd be happy to submit this as a patch, however I don't know what that entails, can you point me to some documentation of the format you want it in, or offer some help in doing that?\n\nThanks,\nDave\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"created":"2013-02-20T11:42:11.971+0000","updated":"2013-02-20T11:42:11.971+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13582307","id":"13582307","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"http://wiki.apache.org/hadoop/HowToContribute is a good place to start. The instructions there are for svn - you can definitely use git - http://wiki.apache.org/hadoop/GitAndHadoop\n\nNote that Hadoop uses spaces for tabs - and both tab and indentation are 2 spaces.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2013-02-20T16:38:39.634+0000","updated":"2013-02-20T16:38:39.634+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13605402","id":"13605402","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"I thought about this further and wonder if there is really a problem here. I uploaded a test (test-hadoop-9295.patch) to capture valid use of MapWritable/SortedMapWritable and the test passes. I might be missing something.\n\n[~davidparks21], can you please point out what intended behavior is not being captured in the test.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2013-03-18T17:54:34.839+0000","updated":"2013-03-18T17:54:34.839+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13606271","id":"13606271","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"body":"Your test missed the problem. You added two Text objects, you need to add 2 custom MapWrtiable objects to the map to trigger the problem.\n\nThe reason explained:\n\nNotice this code in AbstractMapWritable:\n\n\t    addToMap(ArrayWritable.class, Byte.valueOf(Integer.valueOf(-127).byteValue())); \n\t    addToMap(BooleanWritable.class, Byte.valueOf(Integer.valueOf(-126).byteValue()));\n\t    addToMap(BytesWritable.class, Byte.valueOf(Integer.valueOf(-125).byteValue()));\n\t    addToMap(FloatWritable.class, Byte.valueOf(Integer.valueOf(-124).byteValue()));\n\t    addToMap(IntWritable.class, Byte.valueOf(Integer.valueOf(-123).byteValue()));\n\t    addToMap(LongWritable.class, Byte.valueOf(Integer.valueOf(-122).byteValue()));\n\t    addToMap(MapWritable.class, Byte.valueOf(Integer.valueOf(-121).byteValue()));\n\t    addToMap(MD5Hash.class, Byte.valueOf(Integer.valueOf(-120).byteValue()));\n\t    addToMap(NullWritable.class, Byte.valueOf(Integer.valueOf(-119).byteValue()));\n\t    addToMap(ObjectWritable.class, Byte.valueOf(Integer.valueOf(-118).byteValue()));\n\t    addToMap(SortedMapWritable.class, Byte.valueOf(Integer.valueOf(-117).byteValue()));\n\t    addToMap(Text.class, Byte.valueOf(Integer.valueOf(-116).byteValue()));\n\t    addToMap(TwoDArrayWritable.class, Byte.valueOf(Integer.valueOf(-115).byteValue()));\n\t    \n\t    // UTF8 is deprecated so we don't support it\n\t    addToMap(VIntWritable.class, Byte.valueOf(Integer.valueOf(-114).byteValue()));\n\t    addToMap(VLongWritable.class, Byte.valueOf(Integer.valueOf(-113).byteValue()));\n\nIt's adding the \"typical\" Writables to the class map by default, so any of these classes always maps correctly, this is probably why the problem was never noticed before now.\n\nIt's only when you add a Writable object that isn't already in this list that it has to add it to the map, and thus encounters the bug.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"created":"2013-03-19T12:14:43.602+0000","updated":"2013-03-19T12:14:43.602+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13606272","id":"13606272","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"body":"Further note that the two Writable objects you add *must* be of different types, example:\n\nclass MyFirstCustomWritable extends Writable {}\nclass MySecondCustomWritable extends Writable {}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"created":"2013-03-19T12:16:01.987+0000","updated":"2013-03-19T12:16:01.987+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13611535","id":"13611535","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"Thanks [~davidparks21], and sorry for the delay. I understand the bug now. Let me update the test and work on a patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2013-03-23T02:53:19.205+0000","updated":"2013-03-23T02:53:19.205+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13611545","id":"13611545","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"Actually, I don't think the test MapWritableBugTest#reproduceMapWritableBug() tests adding MapWritable objects either. Also, if X and Y are the two different classes named MapWritable, isn't X.readFields(Y.write(out)) expected to fail? Shouldn't it be as below (there are two objects map1 and map2 is not because we are calling readFields twice, but primarily because they are two different MapWritables):\n\n{code}\norg.apache.hadoop.io.MapWritable map1 = new org.apache.hadoop.io.MapWritable();\nmap1.readFields(in);\nAssert.assertTrue( map1.get(new Text(\"testKey1\")) instanceof CustomWritableOne );\n\nMapWritable map1 = new MapWritable();\nmap2.readFields(in);\nAssert.assertTrue( map2.get(new Text(\"testKey2\")) instanceof CustomWritableTwo );\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2013-03-23T03:41:25.235+0000","updated":"2013-03-23T03:41:25.235+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13611557","id":"13611557","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"body":"Haha, this gets confusing, you had me thinking I totally muffed up that testcase for a few minutes.\n\nThe test case, and the reason I created 2 *different* MapWritable objects, serves to emulate what is happening in a hadoop Map/Reduce phase (where I actually ran into the bug).\n\nTake this example MapReduce job with 2 mappers:\n\n MapperX adds a new MapWritable with: (key -> \"testKey1\", value -> CustomWritableOne)\n MapperY adds a new MapWritable with: (key -> \"testKey2\", value -> CustomWritableTwo)\n\nNow the mappers would have done:\n\n MapperX: context.write( new Text(\"commonkey\"), mapWritableWithTestKey1 );\n MapperY: context.write( new Text(\"commonkey\"), mapWritableWithTestKey2 );\n\nIn the reducer we now have an Iterator of MapWritable objects that contain 2 distinct object types that we wanted to join on \"commonkey\". \n\nThe use of testKey1 vs. testKey2 as the MapWritable key allows our reducer to identify which data type is contained in this MapWritable. This seems like a quick way to join two differently typed Writable objects for processing in the reducer.\n\nThe problem happens when we read mapWritableWithTestKey1 in, then use the same object to read mapWritableWithTestKey2 in, which is exactly what the reducer is doing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"created":"2013-03-23T04:13:47.584+0000","updated":"2013-03-23T04:13:47.584+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13611558","id":"13611558","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"body":"How did you highlight your code like that anyway?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"created":"2013-03-23T04:14:08.255+0000","updated":"2013-03-23T04:14:08.255+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13611587","id":"13611587","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"Enclosing code in { code } without spaces highlights it. :)\n\nIIUC, the issue then is with composite MapWritables?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2013-03-23T04:29:11.370+0000","updated":"2013-03-23T04:29:11.370+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13611596","id":"13611596","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"body":"Correct, MapWritable's that contain at least 2 other <? extends Writable> objects that aren't already in that pre-defined list we have earlier in the conversation.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"created":"2013-03-23T04:34:32.324+0000","updated":"2013-03-23T04:34:32.324+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13611600","id":"13611600","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"body":"Note that the fix is in there as well, it's as simple as a clear() method, and removing the pre-cached list of common classes (which interferes with our ability to clear() properly).\n\nLook for the comments to call out the 2 changes (2 lines added, 33 lines removed):\n{code}\n\t    /*\n\t     * TODO BUG FIX\n\t     */\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"created":"2013-03-23T04:38:47.080+0000","updated":"2013-03-23T04:38:47.080+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13611604","id":"13611604","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"body":"specifically, add a call to clear:\n\n{code}\n\t    /*\n\t     * TODO BUG FIX\n\t     */\n\t\tclassToIdMap.clear();\n\t\tidToClassMap.clear();\n{code}\n\nand remove the pre-cached class types\n{code}\n\t    /*\n\t     * TODO BUG FIX\n\t     */\n//\t    addToMap(ArrayWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-127).byteValue())); \n//\t    addToMap(BooleanWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-126).byteValue()));\n//\t    addToMap(BytesWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-125).byteValue()));\n//\t    addToMap(FloatWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-124).byteValue()));\n//\t    addToMap(IntWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-123).byteValue()));\n//\t    addToMap(LongWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-122).byteValue()));\n//\t    addToMap(MapWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-121).byteValue()));\n//\t    addToMap(MD5Hash.class,\n//\t        Byte.valueOf(Integer.valueOf(-120).byteValue()));\n//\t    addToMap(NullWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-119).byteValue()));\n//\t    addToMap(ObjectWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-118).byteValue()));\n//\t    addToMap(SortedMapWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-117).byteValue()));\n//\t    addToMap(Text.class,\n//\t        Byte.valueOf(Integer.valueOf(-116).byteValue()));\n//\t    addToMap(TwoDArrayWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-115).byteValue()));\n//\t    \n//\t    // UTF8 is deprecated so we don't support it\n//\n//\t    addToMap(VIntWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-114).byteValue()));\n//\t    addToMap(VLongWritable.class,\n//\t        Byte.valueOf(Integer.valueOf(-113).byteValue()));\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=davidparks21","name":"davidparks21","key":"davidparks21","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Parks","active":true,"timeZone":"Etc/UTC"},"created":"2013-03-23T04:40:00.258+0000","updated":"2013-03-23T04:40:00.258+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631712/comment/13631950","id":"13631950","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"body":"Haven't been able to make progress on this. Marking it \"Unassgined\" in case someone else wants to take a stab it. Will reclaim if it is still open by the time I get to it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kkambatl","name":"kkambatl","key":"kkambatl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Karthik Kambatla","active":false,"timeZone":"America/Los_Angeles"},"created":"2013-04-15T18:07:16.805+0000","updated":"2013-04-15T18:07:16.805+0000"}],"maxResults":15,"total":15,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-9295/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1hvn3:"}}