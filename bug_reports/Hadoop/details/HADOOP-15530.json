{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13165463","self":"https://issues.apache.org/jira/rest/api/2/issue/13165463","key":"HADOOP-15530","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2018-06-14T19:44:51.871+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Jul 06 00:32:39 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-15530/watchers","watchCount":5,"isWatching":false},"created":"2018-06-12T01:28:33.181+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[{"id":"12536394","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12536394","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"13166019","key":"HADOOP-15538","self":"https://issues.apache.org/jira/rest/api/2/issue/13166019","fields":{"summary":"Possible RPC deadlock in Client","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yzhangal","name":"yzhangal","key":"yzhangal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yongjun Zhang","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-07-06T00:32:39.989+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12330961","id":"12330961","name":"common"}],"timeoriginalestimate":null,"description":"In Client.java, sendRpcRequest does the following\r\n\r\n{code}\r\n   /** Initiates a rpc call by sending the rpc request to the remote server.\r\n     * Note: this is not called from the Connection thread, but by other\r\n     * threads.\r\n     * @param call - the rpc request\r\n     */\r\n    public void sendRpcRequest(final Call call)\r\n        throws InterruptedException, IOException {\r\n      if (shouldCloseConnection.get()) {\r\n        return;\r\n      }\r\n\r\n      // Serialize the call to be sent. This is done from the actual\r\n      // caller thread, rather than the sendParamsExecutor thread,\r\n\r\n      // so that if the serialization throws an error, it is reported\r\n      // properly. This also parallelizes the serialization.\r\n      //\r\n      // Format of a call on the wire:\r\n      // 0) Length of rest below (1 + 2)\r\n      // 1) RpcRequestHeader  - is serialized Delimited hence contains length\r\n      // 2) RpcRequest\r\n      //\r\n      // Items '1' and '2' are prepared here. \r\n      RpcRequestHeaderProto header = ProtoUtil.makeRpcRequestHeader(\r\n          call.rpcKind, OperationProto.RPC_FINAL_PACKET, call.id, call.retry,\r\n          clientId);\r\n\r\n      final ResponseBuffer buf = new ResponseBuffer();\r\n      header.writeDelimitedTo(buf);\r\n      RpcWritable.wrap(call.rpcRequest).writeTo(buf);\r\n\r\n      synchronized (sendRpcRequestLock) {\r\n        Future<?> senderFuture = sendParamsExecutor.submit(new Runnable() {\r\n          @Override\r\n          public void run() {\r\n            try {\r\n              synchronized (ipcStreams.out) {\r\n                if (shouldCloseConnection.get()) {\r\n                  return;\r\n                }\r\n                if (LOG.isDebugEnabled()) {\r\n                  LOG.debug(getName() + \" sending #\" + call.id\r\n                      + \" \" + call.rpcRequest);\r\n                }\r\n                // RpcRequestHeader + RpcRequest\r\n                ipcStreams.sendRequest(buf.toByteArray());\r\n                ipcStreams.flush();\r\n              }\r\n            } catch (IOException e) {\r\n              // exception at this point would leave the connection in an\r\n              // unrecoverable state (eg half a call left on the wire).\r\n              // So, close the connection, killing any outstanding calls\r\n              markClosed(e);\r\n            } finally {\r\n              //the buffer is just an in-memory buffer, but it is still polite to\r\n              // close early\r\n              IOUtils.closeStream(buf);\r\n            }\r\n          }\r\n        });\r\n\r\n        try {\r\n          senderFuture.get();\r\n        } catch (ExecutionException e) {\r\n          Throwable cause = e.getCause();\r\n\r\n          // cause should only be a RuntimeException as the Runnable above\r\n          // catches IOException\r\n          if (cause instanceof RuntimeException) {\r\n            throw (RuntimeException) cause;\r\n          } else {\r\n            throw new RuntimeException(\"unexpected checked exception\", cause);\r\n          }\r\n        }\r\n      }\r\n    }\r\n{code}\r\n\r\nIt's observed that the call can be stuck at {{senderFuture.get();}} with the following stack\r\n{code}\r\n\"Thread-13\" #40 prio=5 os_prio=0 tid=0x000000000fb0d000 nid=0xf189c waiting on condition [0x00007f697c582000]\r\n   java.lang.Thread.State: WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00000006187e5ec0> (a java.util.concurrent.FutureTask)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n        at java.util.concurrent.FutureTask.awaitDone(FutureTask.java:429)\r\n        at java.util.concurrent.FutureTask.get(FutureTask.java:191)\r\n        at org.apache.hadoop.ipc.Client$Connection.sendRpcRequest(Client.java:1088)\r\n        - locked <0x00000006215c1e08> (a java.lang.Object)\r\n        at org.apache.hadoop.ipc.Client.call(Client.java:1483)\r\n        at org.apache.hadoop.ipc.Client.call(Client.java:1441)\r\n        at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:230)\r\n        at com.sun.proxy.$Proxy10.getBlockLocations(Unknown Source)\r\n        at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolTranslatorPB.getBlockLocations(ClientNamenodeProtocolTranslatorPB.java:266)\r\n        at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.apache.hadoop.io.retry.RetryInvocationHandler.invokeMethod(RetryInvocationHandler.java:258)\r\n        at org.apache.hadoop.io.retry.RetryInvocationHandler.invoke(RetryInvocationHandler.java:104)\r\n        at com.sun.proxy.$Proxy11.getBlockLocations(Unknown Source)\r\n        at org.apache.hadoop.hdfs.DFSClient.callGetBlockLocations(DFSClient.java:1323)\r\n        at org.apache.hadoop.hdfs.DFSClient.getLocatedBlocks(DFSClient.java:1310)\r\n        at org.apache.hadoop.hdfs.DFSClient.getLocatedBlocks(DFSClient.java:1298)\r\n        at org.apache.hadoop.hdfs.DFSInputStream.fetchLocatedBlocksAndGetLastBlockLength(DFSInputStream.java:309)\r\n        at org.apache.hadoop.hdfs.DFSInputStream.openInfo(DFSInputStream.java:275)\r\n        - locked <0x00000006187e5530> (a java.lang.Object)\r\n        at org.apache.hadoop.hdfs.DFSInputStream.<init>(DFSInputStream.java:267)\r\n        at org.apache.hadoop.hdfs.DFSClient.open(DFSClient.java:1629)\r\n        at org.apache.hadoop.hdfs.DistributedFileSystem$4.doCall(DistributedFileSystem.java:338)\r\n        at org.apache.hadoop.hdfs.DistributedFileSystem$4.doCall(DistributedFileSystem.java:334)\r\n        at org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81)\r\n        at org.apache.hadoop.hdfs.DistributedFileSystem.open(DistributedFileSystem.java:334)\r\n{code}\r\n\r\nGiven that we support rpcTimeOut, we could chose the second method of Future below:\r\n{code}\r\n  /**\r\n     * Waits if necessary for the computation to complete, and then\r\n     * retrieves its result.\r\n     *\r\n     * @return the computed result\r\n     * @throws CancellationException if the computation was cancelled\r\n     * @throws ExecutionException if the computation threw an\r\n     * exception\r\n     * @throws InterruptedException if the current thread was interrupted\r\n     * while waiting\r\n     */\r\n    V get() throws InterruptedException, ExecutionException;\r\n\r\n    /**\r\n     * Waits if necessary for at most the given time for the computation\r\n     * to complete, and then retrieves its result, if available.\r\n     *\r\n     * @param timeout the maximum time to wait\r\n     * @param unit the time unit of the timeout argument\r\n     * @return the computed result\r\n     * @throws CancellationException if the computation was cancelled\r\n     * @throws ExecutionException if the computation threw an\r\n     * exception\r\n     * @throws InterruptedException if the current thread was interrupted\r\n     * while waiting\r\n     * @throws TimeoutException if the wait timed out\r\n     */\r\n    V get(long timeout, TimeUnit unit)\r\n        throws InterruptedException, ExecutionException, TimeoutException;\r\n{code}\r\n\r\nIn theory, since the RPC at client is serialized, we could just use the main thread to do the execution, instead of using a threadpool to create new thread. This can be discussed in a separate jira.\r\n\r\nAnd why the RPC is not processed and returned by NN is another topic (HADOOP-15538).\r\n\r\n\r\n\r\n                                              ","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"RPC could stuck at senderFuture.get()","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yzhangal","name":"yzhangal","key":"yzhangal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yongjun Zhang","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yzhangal","name":"yzhangal","key":"yzhangal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yongjun Zhang","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165463/comment/16512907","id":"16512907","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"{quote}Given that we support rpcTimeOut, we could chose the second method of Future below:\r\n{quote}\r\nThat would just mask the root cause.\r\n{quote}In theory, since the RPC at client is serialized, we could just use the main thread to do the execution, instead of using a threadpool to create new thread.\r\n{quote}\r\nNo, the client uses a different thread for a very specific reason.  If an interrupted thread attempts nio operations on a channel then the channel is closed.  See the jira from the annotation:\r\n\r\nHADOOP-6762. Exception while doing RPC I/O closes channel.\r\n\r\n \r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2018-06-14T19:44:51.871+0000","updated":"2018-06-14T19:44:51.871+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165463/comment/16513156","id":"16513156","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yzhangal","name":"yzhangal","key":"yzhangal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yongjun Zhang","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks a lot for the feedback and good info [~daryn]. \r\n\r\nAbout the root cause, I'm still digging as reported in HADOOP-15538.\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yzhangal","name":"yzhangal","key":"yzhangal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yongjun Zhang","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-15T00:00:09.114+0000","updated":"2018-06-15T00:00:09.114+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165463/comment/16534321","id":"16534321","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"body":"I've been giving this issue a lot of thoughts recently. For cases like HADOOP-15359, time out in Future.get() will not help, because the threads are still blocked by the same object monitors.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-07-06T00:32:39.989+0000","updated":"2018-07-06T00:32:39.989+0000"}],"maxResults":3,"total":3,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-15530/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3ur3r:"}}