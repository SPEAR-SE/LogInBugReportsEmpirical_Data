{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13196960","self":"https://issues.apache.org/jira/rest/api/2/issue/13196960","key":"HADOOP-15911","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2018-11-08T11:09:49.894+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Nov 08 11:09:49 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-15911/watchers","watchCount":3,"isWatching":false},"created":"2018-11-08T00:09:12.236+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-11-08T11:09:49.894+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12330961","id":"12330961","name":"common"}],"timeoriginalestimate":null,"description":"The heap-memory path of ByteBufferUtil.fallbackRead ([see master branch code here|[https://github.com/apache/hadoop/blob/a0da1ec01051108b77f86799dd5e97563b2a3962/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ByteBufferUtil.java#L95])]Â massively overallocates memory when the underlying input stream returns data in smaller chunks. This happens on a regular basis when using the S3 input stream as input.\r\n\r\nThe behavior is an O(N^2)-ish. In a recent debug session, we were trying to read 6MB, but getting 16K at a time. The code would:\r\n * allocate 16M, use the first 16K\r\n * allocate 16M - 16K, use the first 16K of that\r\n * allocate 16M - 32K, use the first 16K of that\r\n * (etc)\r\n\r\nThe patch is simple. Here's the text version of the patch:\r\n{code}\r\n@@ -88,10 +88,17 @@ public final class ByteBufferUtil {\r\n         buffer.flip();\r\n       } else {\r\n         buffer.clear();\r\n-        int nRead = stream.read(buffer.array(),\r\n-          buffer.arrayOffset(), maxLength);\r\n-        if (nRead >= 0) {\r\n-          buffer.limit(nRead);\r\n+        int totalRead = 0;\r\n+        while (totalRead < maxLength) {\r\n+          final int nRead = stream.read(buffer.array(),\r\n+            buffer.arrayOffset() + totalRead, maxLength - totalRead);\r\n+          if (nRead <= 0) {\r\n+            break;\r\n+          }\r\n+          totalRead += nRead;\r\n+        }\r\n+        if (totalRead >= 0) {\r\n+          buffer.limit(totalRead);\r\n           success = true;\r\n         }\r\n       }\r\n{code}\r\n\r\nso, essentially, do the same thing that the code in the direct memory path is doing","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Over-eager allocation in ByteBufferUtil.fallbackRead","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vancobuca","name":"vancobuca","key":"vancobuca","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=vancobuca&avatarId=33916","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=vancobuca&avatarId=33916","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=vancobuca&avatarId=33916","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=vancobuca&avatarId=33916"},"displayName":"Vanco Buca","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vancobuca","name":"vancobuca","key":"vancobuca","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=vancobuca&avatarId=33916","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=vancobuca&avatarId=33916","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=vancobuca&avatarId=33916","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=vancobuca&avatarId=33916"},"displayName":"Vanco Buca","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13196960/comment/16679606","id":"16679606","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stevel%40apache.org","name":"stevel@apache.org","key":"stevel@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stevel%40apache.org&avatarId=16513","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stevel%40apache.org&avatarId=16513","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stevel%40apache.org&avatarId=16513","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stevel%40apache.org&avatarId=16513"},"displayName":"Steve Loughran","active":true,"timeZone":"Europe/London"},"body":"Patches should be supplied as a .patch file, then hit \"patch-submit\". Jenkins likes tests for this.\r\n\r\nw.r.t S3 download, whose library? S3A doesn't do byte buffers, AFAIK","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stevel%40apache.org","name":"stevel@apache.org","key":"stevel@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stevel%40apache.org&avatarId=16513","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stevel%40apache.org&avatarId=16513","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stevel%40apache.org&avatarId=16513","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stevel%40apache.org&avatarId=16513"},"displayName":"Steve Loughran","active":true,"timeZone":"Europe/London"},"created":"2018-11-08T11:09:49.894+0000","updated":"2018-11-08T11:09:49.894+0000"}],"maxResults":1,"total":1,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-15911/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|s008xc:"}}