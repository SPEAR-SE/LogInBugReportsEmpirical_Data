{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12756580","self":"https://issues.apache.org/jira/rest/api/2/issue/12756580","key":"HADOOP-11321","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327583","id":"12327583","description":"2.7.0 release","name":"2.7.0","archived":false,"released":true,"releaseDate":"2015-04-20"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2014-11-20T01:22:39.163+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Dec 17 15:41:08 UTC 2014","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"10002_*:*_2_*:*_1212397892_*|*_1_*:*_2_*:*_1118911216_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2014-12-16T23:45:23.394+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-11321/watchers","watchCount":8,"isWatching":false},"created":"2014-11-20T00:10:14.346+0000","customfield_12310192":null,"customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"9.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327179","id":"12327179","description":"2.6.0 release","name":"2.6.0","archived":false,"released":true,"releaseDate":"2014-11-18"}],"issuelinks":[{"id":"12402662","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12402662","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12759248","key":"HADOOP-11349","self":"https://issues.apache.org/jira/rest/api/2/issue/12759248","fields":{"summary":"RawLocalFileSystem leaks file descriptor while creating a file if creat succeeds but chmod fails.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12403702","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12403702","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12762142","key":"HADOOP-11415","self":"https://issues.apache.org/jira/rest/api/2/issue/12762142","fields":{"summary":"Local file system on Linux may create files and directories initially with wider permissions than intended.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12402615","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12402615","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12758990","key":"HADOOP-11347","self":"https://issues.apache.org/jira/rest/api/2/issue/12758990","fields":{"summary":"RawLocalFileSystem#mkdir and create should honor umask","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-04-10T20:04:33.368+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310689","id":"12310689","name":"fs","description":"Generic FileSystem code"}],"timeoriginalestimate":null,"description":"In Hadoop 2, it is impossible to use {{copyToLocal}} to copy a file from HDFS to a destination on an SMB share.  This is because in Hadoop 2, the {{copyToLocal}} maps to 2 underlying {{RawLocalFileSystem}} operations: {{create}} and {{setPermission}}.  On an SMB share, the user may be authorized for the {{create}} but denied for the {{setPermission}}.  Windows denies the {{WRITE_DAC}} right required by {{setPermission}} unless the user has Full Control permissions.  Granting Full Control isn't feasible for most deployments, because it's insecure.  This is a regression from Hadoop 1, where {{copyToLocal}} only did a {{create}} and didn't do a separate {{setPermission}}.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327583","id":"12327583","description":"2.7.0 release","name":"2.7.0","archived":false,"released":true,"releaseDate":"2015-04-20"}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12686133","id":"12686133","filename":"HADOOP-11321.003.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-09T23:31:13.797+0000","size":29314,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12686133/HADOOP-11321.003.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12686166","id":"12686166","filename":"HADOOP-11321.004.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-10T00:53:56.382+0000","size":29963,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12686166/HADOOP-11321.004.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12686966","id":"12686966","filename":"HADOOP-11321.005.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-12T22:56:05.905+0000","size":30012,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12686966/HADOOP-11321.005.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12687025","id":"12687025","filename":"HADOOP-11321.006.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-13T07:24:53.443+0000","size":31984,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12687025/HADOOP-11321.006.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12687562","id":"12687562","filename":"HADOOP-11321.007.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-16T20:26:42.262+0000","size":31987,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12687562/HADOOP-11321.007.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12687592","id":"12687592","filename":"HADOOP-11321.008.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-16T21:34:30.707+0000","size":32028,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12687592/HADOOP-11321.008.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12682536","id":"12682536","filename":"HADOOP-11321.1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-11-20T00:22:33.166+0000","size":5945,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12682536/HADOOP-11321.1.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12683664","id":"12683664","filename":"HADOOP-11321.2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-11-25T21:30:59.012+0000","size":5708,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12683664/HADOOP-11321.2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12683962","id":"12683962","filename":"winutils.tmp.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-11-27T00:55:33.407+0000","size":3779,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12683962/winutils.tmp.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14218764","id":"14218764","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"The access denied error occurs in libwinutils.c, in {{ChangeFileModeByMask}}, when it calls the Windows API {{SetFileSecurity}} with a security descriptor containing the new discretionary access control list.  The SMB share denies the {{WRITE_DAC}} right.  More details on those APIs are here:\n\nhttp://msdn.microsoft.com/en-us/library/windows/desktop/aa379577(v=vs.85).aspx\n\nhttp://msdn.microsoft.com/en-us/library/windows/desktop/aa374892(v=vs.85).aspx\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-11-20T00:14:29.014+0000","updated":"2014-11-20T00:14:29.014+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14218774","id":"14218774","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"I'm attaching a patch.  The idea is to stop treating it as an error condition if an implicit {{setPermission}} fails due to access denied on a local file system.  By \"implicit\", I mean that the {{setPermission}} was not called explicitly by an external caller, but implicitly as part of the caller's main operation, like a {{create}}.  I'm not aware of any other local file systems where a user could be authorized to create a file, but then unauthorized to {{chmod}} that same file.  The difference in behavior would have to be a known limitation when operating on SMB shares without Full Control permissions.\n\nFixing this was a bit messy.  If anyone has another idea, I'd like to hear it.  I'd especially appreciate if I could get a review from one of the Windows experts, such as [~chuanliu], [~ivanmi], [~rusanu] or [~shanyu].","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-11-20T00:22:33.174+0000","updated":"2014-11-20T00:22:33.174+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14218842","id":"14218842","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12682536/HADOOP-11321.1.patch\n  against trunk revision 72c141b.\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.\n                        Please justify why no new tests are needed for this patch.\n                        Also please list what manual steps were performed to verify this patch.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5106//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5106//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-11-20T01:22:39.163+0000","updated":"2014-11-20T01:22:39.163+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14219118","id":"14219118","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"LGTM","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2014-11-20T08:06:10.470+0000","updated":"2014-11-20T08:06:10.470+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14223824","id":"14223824","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"I don't like the patch as currently written.  It seems wrong to be asked to create a file with a certain permission, but then create it with a different permission and declare success.\n\nIsn't there an API on Windows to set the permissions of the file we're creating?  Usually you can set this at file creation time (which is really how we should be doing it anyway for efficiency reasons.)  I haven't searched through all those shiny new JDK7 file APIs, surely it's there?\n\nIf we absolutely, positively can't get this right, then we can have a config option to ignore the permission argument to local file creates... ugh.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-11-25T00:21:34.852+0000","updated":"2014-11-25T00:21:34.852+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14225238","id":"14225238","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"I'm attaching a v2 patch.  This refactors {{setPermissionIfAllowed}} into {{FileSystem}}.  Subclasses can call this as needed.  I think this is preferable over my earlier version with the method in {{FileUtil}}, which is annotated {{Public}}.\n\nbq. -1 tests included. The patch doesn't appear to include any new or modified tests.\n\nI don't think we'll be able to add a reliable unit test that works across all dev environments.  The only way I know to create this condition is to set up an SMB share and run as a user that doesn't have Full Control access.  Not all environments will have the necessary rights to create an SMB share.  I have tested this manually, with an SMB share mounted by both a Linux host and a Windows host.\n\n[~cmccabe], thank you for reviewing.\n\nbq. It seems wrong to be asked to create a file with a certain permission, but then create it with a different permission and declare success.\n\nWhile I agree that it can be strange, it's interesting to note that there is existing precedent for handling it this way.  This is the same behavior I see in both Linux and Cygwin operating on an SMB share.  See below for a sample Cygwin session, where F: is mounted to an SMB share.  I suppose this was a pragmatic choice for dealing with odd cases where a user may have rights to create a file but not control its permissions.  This could include an SMB share denying {{WRITE_DAC}} or a file system using NFSv4 ACLs with a deny ACE on {{WRITE_ACL}}.\n\n{code}\ncnauroth@WIN-NCDLEQLC13J /cygdrive/c/hdc\n$ mkdir -m 755 /cygdrive/f/dir2\n\ncnauroth@WIN-NCDLEQLC13J /cygdrive/c/hdc\n$ stat -c%a /cygdrive/f/dir2\n700\n{code}\n\nbq. Isn't there an API on Windows to set the permissions of the file we're creating?\n\nUnfortunately, this is not a matter of using a different syscall.  The OS is denying the {{WRITE_DAC}} right, so access will be denied on attempts to set the discretionary access control list.\n\nAlso, I might be misinterpreting, but this sounded like a suggestion to look for a possible solution in native Windows APIs.  Just to clarify, this isn't a Windows-only bug.  It's possible for a Linux host to mount an SMB share too.  In that case, even if there was a native Windows API that could circumvent the {{WRITE_DAC}} denial, the solution wouldn't work for a Linux client.\n\nbq. I haven't searched through all those shiny new JDK7 file APIs, surely it's there?\n\nI believe you're thinking of [{{Files#createDirectory}}|http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#createDirectory(java.nio.file.Path,%20java.nio.file.attribute.FileAttribute...)] and [{{Files#createFile}}|http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#createFile(java.nio.file.Path,%20java.nio.file.attribute.FileAttribute...)], with the caller passing [{{PosixFilePermissions}}|http://docs.oracle.com/javase/7/docs/api/java/nio/file/attribute/PosixFilePermissions.html] as a file attribute.  It turns out that doing this will fail fast on Windows with an unchecked exception stating that the file system doesn't implement POSIX permissions.  The only reason the Hadoop code is able to do something like this is that we've written native code to translate POSIX permissions to a roughly equivalent discretionary access control list.\n\nbq. If we absolutely, positively can't get this right, then we can have a config option to ignore the permission argument to local file creates... ugh.\n\nThis is pretty standard Hadoop code review feedback.  As a result, Hadoop now has 762 configuration properties.  That's from a {{grep -c}} of core-default.xml, hdfs-default.xml, yarn-default.xml and mapred-default.xml, so the count doesn't include undocumented properties.  I'm reluctant to keep pushing this higher.  Would you consider the possibility that this is just a pragmatic choice for dealing with an edge case, based on the existing precedent shown elsewhere?  Also, I've taken care that this patch only triggers this behavior for an {{EACCES}}, not general I/O errors or other problems.\n\nIf you insist, then let me know, and I'll add a new configuration property.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-11-25T21:30:59.020+0000","updated":"2014-11-25T21:30:59.020+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14225320","id":"14225320","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12683664/HADOOP-11321.2.patch\n  against trunk revision 78f7cdb.\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.\n                        Please justify why no new tests are needed for this patch.\n                        Also please list what manual steps were performed to verify this patch.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common.\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5120//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5120//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-11-25T22:32:47.431+0000","updated":"2014-11-25T22:32:47.431+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14226818","id":"14226818","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"I guess my concern is that if the user requests a restrictive permission on the newly created file, and the system denies it, sets a more permissive one instead, and returns no error... that would be considered a security hole.  I could imagine malicious users playing games with moving newly created files around rapidly so that some user got an EACESS, and silently failed to set the permission the file they created.  After all, it's possible for a user to have write permission on a directory, without having read permission on any of the files inside of it.  And this gives the bad guy the ability to move around files as he likes.\n\nTo be honest, I really don't like the way we do this right now, even independently of your patch.  Creating the file and setting the permissions on the file should not be two separate steps.  The way we do it now opens us up to race conditions and possibly worse.  And of course, it's less efficient to do two syscalls rather than one.\n\nThere is a {{FileInputStream}} constructor that takes a {{FileDescriptor}}.  This might allow us to do the \"open\" and \"set permissions\" steps as a single atomic step.  I'm not familiar with the APIs on Windows, but certainly on Linux, the {{creat}} syscall takes an argument that can set the permissions of what it is creating.  Is there a native API on Windows that creates a file with certain permissions?  Even if {{Files#createFile}} doesn't work on Windows, we must have some JNI function we can write that does?  This would fix the race condition and eliminate the problem you're describing here, at one go.  Sure, we might have to use different methods of getting the {{FileDsecriptor}} on Linux and Windows, but that seems OK.  \n\ncygwin is an interesting precedent, but have you confirmed that it is doing the same thing as we are (creating the file and setting permissions in two separate steps?)  I would be surprised if it was.  It's ok to create the file or directory with more restrictive permissions than what was requested, but silently opening up the permissions is not ok, I think.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-11-26T21:15:40.527+0000","updated":"2014-11-26T21:15:40.527+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14227070","id":"14227070","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. Is there a native API on Windows that creates a file with certain permissions?\n\nI think this would be [{{CreateFile}}|http://msdn.microsoft.com/en-us/library/windows/desktop/aa363858%28v=vs.85%29.aspx] with the fourth argument containing a security descriptor with a DACL and [{{CreateDirectory}}|http://msdn.microsoft.com/en-us/library/windows/desktop/aa363855%28v=vs.85%29.aspx] with the same in the second argument.  I had thought this would still get blocked for lack of the {{WRITE_DAC}} right, but after playing around with this more, it seems like {{WRITE_DAC}} is only enforced on modification of an existing object, not on creation of a new file or directory.  Maybe I had an incorrect assumption.\n\nI'm attaching a demo patch with some scratch code that shows how this works for directory creation.  We'd need to plug something like this into JNI calls.  On Linux, we'd need to do the equivalent for {{creat}} and {{mkdir}}.\n\nI agree with the other benefits of this approach you mentioned, Colin.  I'm going to experiment with this more and see if it's feasible.  I'll report back later.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-11-27T00:55:33.413+0000","updated":"2014-11-27T00:57:11.425+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14230289","id":"14230289","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Awesome.  Thanks for working on this, Chris.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-01T19:28:52.422+0000","updated":"2014-12-01T19:28:52.422+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14230778","id":"14230778","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"Unfortunately, I've discovered a snag in the pure native code approach: the process umask.  The Hadoop file system APIs have established a contract that permissions on newly created objects are governed not by the process umask, but rather by the {{fs.permissions.umask-mode}} configuration property.  On the local file system, this is implemented by separate syscalls for {{creat}}/{{mkdir}} followed by {{chmod}}.  This guarantees that if the caller asks for 644, then it gets 644, even if the process umask is 077.\n\nActually, it's more confusing than that, because we're not consistent about it.  It looks like file creations always apply {{fs.permissions.umask-mode}}.  For directories, {{FileContext}} applies it, but {{FileSystem}} doesn't.  This means, for example, that \"hadoop fs -mkdir\" on the local file system is in fact governed by the process umask.\n\nAnother interesting thing I found after further experimentation is that the problem does not repro for an SMB share mounted on Linux.  A {{chmod}} call \"succeeds\" without error, but simply does not change the permissions.  The error handling seems to be specific to the OS client.  This may in fact turn out to be a Windows-only bug, contrary to my prior statement.\n\nI'm not aware of any Unix file/directory creation syscalls that let you bypass the umask.  That would mean achieving atomic create-and-set-permissions would require a native {{umask(0)}} call.  I'm very reluctant to do that, because we can't predict how this might compromise existing applications, especially for applications that use a mix of Hadoop and their own file creation calls.  I suppose another possibility is to fork another process to do its own {{umask(0)}}, but then we'd have a lot of process creation overhead.\n\nConsidering all of that, I'm currently pursuing a Windows-only native code implementation, with Linux continuing to run the existing code path.  I believe this can work, because Windows does not have a process umask or anything equivalent that would interfere with the intention of {{fs.permissions.umask-mode}}.  Unfortunately, creations on Linux would still be subject to the race condition between {{creat}}/{{mkdir}} and {{chmod}} that we have in today's code, but at least the situation wouldn't get any worse.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-02T00:48:50.366+0000","updated":"2014-12-02T00:48:50.366+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14232111","id":"14232111","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. Actually, it's more confusing than that, because we're not consistent about it. It looks like file creations always apply fs.permissions.umask-mode. For directories, FileContext applies it, but FileSystem doesn't. This means, for example, that \"hadoop fs -mkdir\" on the local file system is in fact governed by the process umask.\n\nThis seems like a bug in {{FileSystem}}-- can you open a follow-on JIRA?  It may be that we can only make the fix in 3.0, but we should still fix it.\n\nbq. Another interesting thing I found after further experimentation is that the problem does not repro for an SMB share mounted on Linux. A chmod call \"succeeds\" without error, but simply does not change the permissions. The error handling seems to be specific to the OS client. This may in fact turn out to be a Windows-only bug, contrary to my prior statement.\n\nThis still seems like incorrect behavior to me.  If someone asks us for a restrictive set of permissions and we create the file with a more relaxed set, that seems insecure.\n\nbq. I'm not aware of any Unix file/directory creation syscalls that let you bypass the umask. That would mean achieving atomic create-and-set-permissions would require a native umask(0) call. I'm very reluctant to do that, because we can't predict how this might compromise existing applications, especially for applications that use a mix of Hadoop and their own file creation calls. I suppose another possibility is to fork another process to do its own umask(0), but then we'd have a lot of process creation overhead.\n\nI think maybe the right thing to do is to issue a {{LOG.info}} if the process umask doesn't match the configured value of {{fs.permissions.umask-mode}}.  Most users are probably running with a umask that matches {{fs.permissions.umask-mode}} anyway.  If they aren't, the only problem is that the LocalFilesystem will create files with more restrictive permissions than intended.  This isn't a security hole, just a hassle, since things are just more locked down than intended.  And it should be easy to fix if the user reads the logs and realizes his umask is wrong.\n\nbq. Considering all of that, I'm currently pursuing a Windows-only native code implementation, with Linux continuing to run the existing code path. I believe this can work, because Windows does not have a process umask or anything equivalent that would interfere with the intention of fs.permissions.umask-mode. Unfortunately, creations on Linux would still be subject to the race condition between creat/mkdir and chmod that we have in today's code, but at least the situation wouldn't get any worse.\n\nIf you want to just do the Windows part here, I am +1 on that.  But I think we should also do this for Linux.  We should eliminate this race condition on all platforms.  So if you choose to just do Windows here, I'll open a follow-on JIRA for Linux.\n\nThanks, [~cnauroth]!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-02T20:54:26.780+0000","updated":"2014-12-02T20:54:26.780+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14232176","id":"14232176","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. This seems like a bug in FileSystem-- can you open a follow-on JIRA?\n\nI filed HADOOP-11347.  I agree that it needs to be targeted to 3.0, because applications might depend on the current behavior.\n\nbq. This still seems like incorrect behavior to me. If someone asks us for a restrictive set of permissions and we create the file with a more relaxed set, that seems insecure.\n\nI just had an a-ha moment reading the man page for CIFS mounts:\n\nhttp://linux.die.net/man/8/mount.cifs\n\n{quote}\nFile And Directory Ownership And Permissions\n\nThe core CIFS protocol does not provide unix ownership information or mode for files and directories. Because of this, files and directories will generally appear to be owned by whatever values the uid= or gid= options are set, and will have permissions set to the default file_mode and dir_mode for the mount. Attempting to change these values via chmod/chown will return success but have no effect.\n{quote}\n\nThis explains the behaviors I've seen in Cygwin and SMB shares mounted on Linux clients.  While this can be seen as a security hole, it's a known issue in the CIFS protocol, and we're not going to be able to do anything to change that.\n\nbq. I think maybe the right thing to do is to issue a LOG.info if the process umask doesn't match the configured value of fs.permissions.umask-mode. Most users are probably running with a umask that matches fs.permissions.umask-mode anyway. If they aren't, the only problem is that the LocalFilesystem will create files with more restrictive permissions than intended. This isn't a security hole, just a hassle, since things are just more locked down than intended. And it should be easy to fix if the user reads the logs and realizes his umask is wrong.\n\nI suppose we can do this, but there is a risk that it would be backwards-incompatible.  I think this is something else that can't be done on the 2.x line and would have to wait for 3.0.  We can't anticipate if there are applications running with a 027 process umask and relying on the alternative contract of {{FileSystem}} to open up read access for other on new files.  After deploying the change in those environments, others would no longer be able to access new files.  As you said, this one is not a security problem, but it is a functionality problem.  Users would have to respond by either adding explicit {{chmod}} calls or relaxing their process umask (and possibly compromising security concerns in other parts of their code).\n\nRegarding the info logging, we might just have to skip it, or at least suppress it when used from the fs shell.  No one wants log output when running the shell commands.\n\nbq. If you want to just do the Windows part here, I am +1 on that. But I think we should also do this for Linux. We should eliminate this race condition on all platforms. So if you choose to just do Windows here, I'll open a follow-on JIRA for Linux.\n\nThanks, Colin.  My focus is here is just getting functionality working on 2.x for both Linux and Windows.  This is going to restore functionality that had been working in 1.x.  My current assessment is that the patch will impact Windows code only.  I'm not focused on the atomicity problem in the current code.  Please feel free to file a follow-up, but again, I believe it must target 3.0.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-02T21:36:34.941+0000","updated":"2014-12-02T21:36:34.941+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14233309","id":"14233309","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"While reviewing the existing code, I discovered another bug in the 2-step file creation followed by setting permission.  If creation succeeds, but setting permission fails with an exception, then we leak a file descriptor.  I don't plan to fix it here, so I filed HADOOP-11349 for follow-up.  Depending on where we go with the atomic create-with-permissions discussion, it might supersede HADOOP-11349.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-03T18:38:11.185+0000","updated":"2014-12-03T18:38:11.185+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14233329","id":"14233329","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Those are good points.\n\nIt sounds like for Windows, we can go with the solution you're looking at now.  For Linux (and in general anything implementing POSIX.1-2001), perhaps we can just create the file with the requested permission, and then use {{fchmod}} on the file descriptor to \"open it up\" by setting that same permission.  Then we get the best of all worlds... there is no point at which the permissions are more open then we desire, and we ignore umask (except on filesystems like samba where fchmod silently fails, but we can't solve that anyway... and it never worked in the past.)  The solution is in the samba case is just to open up your umask and then the create will succeed with the desired permission.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-03T18:50:06.360+0000","updated":"2014-12-03T18:50:06.360+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14233351","id":"14233351","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. For Linux (and in general anything implementing POSIX.1-2001), perhaps we can just create the file with the requested permission, and then use {{fchmod}} on the file descriptor to \"open it up\" by setting that same permission.\n\nThat sounds great.  I think we've got it now!  It's a shame we couldn't cut down to 1 syscall, but it seems like this is what it takes to maintain the current contract.  Thanks, Colin.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-03T19:03:50.485+0000","updated":"2014-12-03T19:03:50.485+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14238819","id":"14238819","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Awesome.  Let me know if you want help on the fchmod thing... we could split this JIRA into one for Windows and one for Linux.  Or maybe it makes sense to keep it all here, and just do it for both platforms in this patch?\n\nI reviewed HADOOP-11349, which is a small fix for just the FD leak (good find)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-09T01:35:30.421+0000","updated":"2014-12-09T01:35:30.421+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14240248","id":"14240248","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. The solution is in the samba case is just to open up your umask and then the create will succeed with the desired permission.\n\nTechnically, we're not going to need any Hadoop code changes or changes to umask to support a Linux client with a Samba mount.  This works (or at least it doesn't fail the client), because CIFS mounts are implemented to silently ignore chmod failures, as described in my earlier comment.\n\nbq. Let me know if you want help on the fchmod thing... we could split this JIRA into one for Windows and one for Linux. Or maybe it makes sense to keep it all here, and just do it for both platforms in this patch?\n\nThanks for volunteering, [~cmccabe].  I'm about to post a patch shortly.  Based on what I have so far, I suspect the Linux {{fchmod}} support will be a fairly small incremental thing.  Let me know your thoughts after you see the patch, and then we can make a call on whether or not to roll it all into one patch here or split it out separately.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-09T23:07:37.486+0000","updated":"2014-12-09T23:07:37.486+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14240286","id":"14240286","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"Patch v3 implements a native code solution for creating local file system directories and files with an initial security descriptor equivalent to the mode passed by the caller.  I have tested this locally.  It fixes the original reported problem for a Windows client accessing an SMB share.  For a Linux client accessing an SMB share, there is no change in behavior in the Hadoop code, and it still works fine via the error handling in Linux CIFS mounts (silently ignoring the chmod failure).\n\nHere is a description of the changes.\n* {{RawLocalFileSystem}}: On Windows, make a JNI call to open a file descriptor for write instead of using {{java.io.FileOutputStream}}.  There are 2 new methods that can be overridden in subclasses: {{mkOneDirWithMode}} and {{createOutputStreamWithMode}}.  These are intended to support {{ElevatedRawLocalFileSystem}}, discussed in more detail below.  We cannot remove the older protected methods {{mkOneDir}} and {{createOutputStream}}, because the class is annotated {{Public}} and {{Stable}}.  These are now implemented as simple forwarding methods.\n* {{ChecksumFileSystem}}: This needed to change some of the file creation calls it uses on the wrapped file system to pass down the mode.  There is one awkward point here that required an {{instanceof}} check, but I think it's preferable over adding more abstract methods to {{FileSystem}} just to cover one special case.  Several calls are rerouted to equivalent overloaded methods that can accept mode as an argument.\n* {{NativeIO}}: Added Windows-specific JNI wrappers for a native implementation of directory and file creation.  For file creation, I needed to be careful to match the semantics that were implemented by {{java.io.FileOutputStream}}.  This involved reading a bit of the JDK code, and I've described the details in comments.\n* {{NativeIO.c}}: Added JNI implementations for the 2 new functions.  These are pretty boring and just pass through to the real action in...\n* {{libwinutils.c}}: This contains the implementation of calling the relevant Windows APIs.  I've reused our implementation of translating a mode to a discretionary access control list ({{GetWindowsDACLs}}), so this will be consistent with, for example, {{winutils.exe chmod}}.\n* {{WindowsSecureContainerExecutor}}: This needed some adjustment to be able to handle the changes required in {{RawLocalFileSystem}}.  [~rusanu], this implementation still does creation and setting permissions in separate syscalls.  I suppose we could consolidate to a single syscall if we update the IDL for the RPC protocol to accept a mode argument, but I didn't want to tackle that in this patch.  I also don't know the compatibility constraints around versioning this RPC protocol.  This change was focused on a bug fix related to SMB shares.  I don't believe this is a major limitation for {{ElevatedRawLocalFileSystem}}.  If NodeManager is running backed by an SMB share for the localization directory, then there are probably lots of other problems anyway.  :-)  If you think it's important to come back to this, please file a separate jira for that.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-09T23:31:13.805+0000","updated":"2014-12-09T23:31:13.805+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14240303","id":"14240303","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12686133/HADOOP-11321.003.patch\n  against trunk revision 03867eb.\n\n    {color:red}-1 patch{color}.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5219//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-09T23:40:41.457+0000","updated":"2014-12-09T23:40:41.457+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14240435","id":"14240435","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"Patch v004 is a rebase after the HADOOP-11349 changes went in to {{RawLocalFileSystem}}.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-10T00:53:56.389+0000","updated":"2014-12-10T00:53:56.389+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14240626","id":"14240626","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12686166/HADOOP-11321.004.patch\n  against trunk revision 2ed90a5.\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.\n                        Please justify why no new tests are needed for this patch.\n                        Also please list what manual steps were performed to verify this patch.\n\n      {color:red}-1 javac{color}.  The applied patch generated 1216 javac compiler warnings (more than the trunk's current 156 warnings).\n\n    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 49 warning messages.\n        See https://builds.apache.org/job/PreCommit-HADOOP-Build/5221//artifact/patchprocess/diffJavadocWarnings.txt for details.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:red}-1 findbugs{color}.  The patch appears to introduce 40 new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:\n\n                  org.apache.hadoop.hdfs.server.namenode.ha.TestRetryCacheWithHA\n\nTest results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5221//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5221//artifact/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html\nJavac warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5221//artifact/patchprocess/diffJavacWarnings.txt\nConsole output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5221//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-10T04:31:51.725+0000","updated":"2014-12-10T04:31:51.725+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14240864","id":"14240864","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"The WSCE has no versioning in the IDL. As the calls are always local, it is expected that the binaries deployed are self-consistent.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2014-12-10T09:51:55.686+0000","updated":"2014-12-10T09:51:55.686+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14240866","id":"14240866","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"The WSCE file operations should only apply to container launch/localization. Even if all the NM operations all succeed on a SMB share, when the impersonated container launched by WSCE will fail to launch on a SMB share because it implies Kerberos delegation and the S4U token used by the WSCE impersonation model does not support delegation.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2014-12-10T09:55:02.529+0000","updated":"2014-12-10T09:55:02.529+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14241544","id":"14241544","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"[~rusanu], thank you for the clarifications.\n\nFindbugs is a known, unrelated issue right now.  I could not repro the javac and javadoc warnings locally, so it seems like something was strange about that Jenkins run.  Let's continue with code review, and I'll try another Jenkins run at a later time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-10T19:06:53.935+0000","updated":"2014-12-10T19:06:53.935+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14244938","id":"14244938","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"I'm uploading patch v005 to fix a bug in my error handling for {{INVALID_HANDLE_VALUE}}.  This is the diff since v004:\n\n{code}\ndiff --git a/hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c b/hadoop-common-project/hadoop-comm\nindex b006f17..c63ea3f 100644\n--- a/hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c\n+++ b/hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c\n@@ -1696,10 +1696,13 @@ DWORD CreateFileWithMode(__in LPCWSTR lpPath, __in DWORD dwDesiredAccess,\n \n   hFile = CreateFileW(lpLongPath, dwDesiredAccess, dwShareMode, &sa,\n     dwCreationDisposition, dwFlagsAndAttributes, NULL);\n-  if (hFile != INVALID_HANDLE_VALUE) {\n-    *pHFile = hFile;\n+  if (hFile == INVALID_HANDLE_VALUE) {\n+    dwRtnCode = GetLastError();\n+    goto done;\n   }\n \n+  *pHFile = hFile;\n+\n done:\n   LocalFree(lpLongPath);\n   LocalFree(pDACL);\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-12T22:56:05.913+0000","updated":"2014-12-12T22:56:05.913+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14244957","id":"14244957","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Great.  Let me take a look.\n\n{code}\n-    if (permission != null) {\n+    // A local file system implementation may choose to create the file and set\n+    // permissions immediately in a single syscall.  If so, then skip setting\n+    // permissions here.\n+    if (permission != null && !(fs instanceof RawLocalFileSystem &&\n+        Path.WINDOWS && NativeIO.isAvailable())) {\n{code}\n\nDo we need this part?  Earlier in this function, we invoke the {{FileSystem#create}} method that takes an {{FsPermission}}, right?  Then the FileSystem handles it atomically (hopefully) or non-atomically (ew).  Surely we're not going to try to work around {{FileSystem}} instances that don't honor the permission passed to {{create}}?  (And surely we don't have any of those... do we?)\n\n{code}\n    /**\n     * Create a directory with permissions set to the specified mode.  By setting\n     * permissions at creation time, we avoid issues related to the user lacking\n     * WRITE_DAC rights on subsequent chmod calls.  One example where this can\n     * occur is writing to an SMB share where the user does not have Full Control\n     * rights, and therefore WRITE_DAC is denied.  This method mimics the\n     * contract of {@link java.io.File#mkdir()}.  All exceptions are caught and\n     * reported by returning {@code false} to the caller.\n     *\n     * @param path directory to create\n     * @param mode permissions of new directory\n     * @return boolean true if directory creation succeeded\n     */\n    public static boolean createDirectoryWithMode(File path, int mode) {\n{code}\n\nI think we should just pass the exception through here.  We don't want to keep people guessing if there is an I/O error.  Just like the new JDK7 File functions throw an IOException on error, we should throw an IOE if the IO can't be done.  Then the caller can catch it and ignore it if appropriate.  I realize we need the (bad) \"return false\" semantics in FileSystem, but by putting this here, we encourage people to use it for other stuff.\n\n{code}\n#ifdef UNIX\n  THROW(env, \"java/io/IOException\",\n    \"The function Windows.createDirectoryWithMode0() is not supported on Unix\");\n#endif\n\n#ifdef WINDOWS\n...\n{code}\nWould it make more sense to have an {{#else}} after the {{#ifdef WINDOWS}} clause?  [edit: and change the message to say \"is not supported on this platform\" rather than \"not supported on Unix\"]\n\nin {{libwinutils.c}}:\n{code}\n  *ppSD = pSD;\n\ndone:\n  if (dwRtnCode != ERROR_SUCCESS) {\n    LocalFree(pSD);\n  }\n{code}\nI guess this is a nitpick, but perhaps we should only set {{ppSD}} when the return code is success?  Of course it won't matter for callers that check the return code, as they should.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-12T23:13:58.996+0000","updated":"2014-12-12T23:14:59.085+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14245008","id":"14245008","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12686966/HADOOP-11321.005.patch\n  against trunk revision 7784b10.\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.\n                        Please justify why no new tests are needed for this patch.\n                        Also please list what manual steps were performed to verify this patch.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:red}-1 findbugs{color}.  The patch appears to introduce 23 new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager:\n\n                  org.apache.hadoop.ha.TestZKFailoverControllerStress\n                  org.apache.hadoop.yarn.server.nodemanager.TestLocalDirsHandlerService\n\nTest results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5259//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5259//artifact/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-nodemanager.html\nFindbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5259//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html\nConsole output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5259//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-13T00:01:13.309+0000","updated":"2014-12-13T00:01:13.309+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14245233","id":"14245233","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for the code review, Colin.  I'm uploading patch v006 with the following changes.\n* {{ChecksumFileSystem}}: Removed the special case for calling {{setPermission}}.  I agree that this shouldn't be necessary anymore.\n* {{NativeIO#createDirectoryWithMode}}: Changed to propagate the exception.\n* {{RawLocalFileSystem#mkOneDirWithMode}}: Changed to catch the exception and return {{false}}.\n* {{NativeIO.c}}: Changed to use {{#else}} instead of {{#ifdef UNIX}} and updated error messages.\n* {{libwinutils.c}}: I discovered a bug in our logic for deciding to convert to long path format.  Normally, the length restriction is defined by {{MAX_PATH}}, which we already check.  However, for directories, there is an additional requirement that it must be possible to append a child file name in 8.3 format (12 characters).  This is documented about 1/3 of the page down here:\nhttp://msdn.microsoft.com/en-us/library/windows/desktop/aa365247%28v=vs.85%29.aspx .  The patch handles this the same way that the JDK code handles it, by checking for {{MAX_PATH - 12}}.\n* {{TestLocalDirsHandlerService}}: I discovered an odd behavior in {{FileContext#mkdir}}.  You can pass in an {{FsPermission}}.  If creation of the directory fails because it already exists, then we still call {{setPermission}} and potentially change the mode.  This happens due to the code in the current trunk version of {{RawLocalFileSystem#primitiveMkdir}}.  This seems like a bug.  POSIX {{mkdir}} and {{FileSystem}} don't behave this way.  By removing {{RawLocalFileSystem#primitiveMkdir}} in my patch, that behavior is going away.  I found that {{TestLocalDirsHandlerService}} was depending on this old behavior, but it's probably just a coincidence that the test suite keeps reusing the same directories across multiple tests.  I changed the test suite to clean up in between tests.  If anyone thinks this behavior of {{FileContext}} is intentional, please let me know.\n\nbq. I guess this is a nitpick, but perhaps we should only set ppSD when the return code is success?\n\nAt this point in the code, it's guaranteed that the return code is success.  The earlier code paths check the individual API calls for errors, and if found, jump to the {{done}} label, going past the assignment to {{ppSD}}.  (I do agree with the principle that functions should only write to an out parameter if it succeeds.)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-13T07:24:53.452+0000","updated":"2014-12-13T07:24:53.452+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14245253","id":"14245253","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12687025/HADOOP-11321.006.patch\n  against trunk revision 9458cd5.\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:red}-1 findbugs{color}.  The patch appears to introduce 23 new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager:\n\n                  org.apache.hadoop.crypto.random.TestOsSecureRandom\n\nTest results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5260//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5260//artifact/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-nodemanager.html\nFindbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5260//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html\nConsole output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5260//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-13T08:34:40.703+0000","updated":"2014-12-13T08:34:40.703+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14245570","id":"14245570","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"The Findbugs warnings and test failures are unrelated to this patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-13T21:48:23.646+0000","updated":"2014-12-13T21:48:23.646+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14245881","id":"14245881","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi Chris,\n\n{code}\n+//  Checks if the path is longer than (MAX_PATH - 12) in which case it needs to\n+//  be prepended with \\\\?\\ for Windows OS to understand it.  The -12 is to\n+//  account for an additional constraint for directories that it must be possible\n+//  to append an 8.3 file name.\n{code}\nGood catch. If the directory does not end in a trailing backslash then should it be -13 instead?\n\n+1 otherwise.\n\nFWIW I agree the prior behavior of {{FileContext#mkdir}} looks buggy. There is a small chance of creating a security issue if someone was depending on the buggy behavior. Perhaps it could be emulated by issuing a setPermissions if the createFile fails.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-14T09:57:26.956+0000","updated":"2014-12-14T09:58:03.875+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14246810","id":"14246810","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for reviewing, Arpit.\n\nbq. Good catch. If the directory does not end in a trailing backslash then should it be -13 instead?\n\nBy the time execution reaches here, we have passed the path through {{java.io.File#getAbsolutePath}}.  This appears to have the behavior of removing the trailing slash if present.  Even if that weren't the case, the JDK code has no special handling for a trailing slash, so I think we're all clear.\n\nhttp://hg.openjdk.java.net/jdk7/modules/jdk/file/a37326fa7f95/src/windows/native/java/io/io_util_md.c#l146\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-15T16:31:17.315+0000","updated":"2014-12-15T16:31:17.315+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14248856","id":"14248856","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"I'm attaching patch v007.  This has one small change from v006, shown in the incremental diff below.  Instead of basing ownership on the TokenUser of the current process, the new patch uses TokenOwner.  According to documentation, this is the correct way to identify the default owner SID for newly created objects.\n\nhttp://msdn.microsoft.com/en-us/library/windows/desktop/aa379626%28v=vs.85%29.aspx\n\nMore details are here:\n\nhttp://technet.microsoft.com/en-us/library/cc961992.aspx\n\nWith this change, we correctly handle the special case that for files created by a member of the Administrators group, the ownership is set to the Administrators group instead of to the individual user SID.\n\n{code}\ndiff --git a/hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c b/hadoop-common-project/hadoop-c\nindex c1dd914..040d563 100644\n--- a/hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c\n+++ b/hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c\n@@ -1515,7 +1515,7 @@ static DWORD GetWindowsDACLsForCreate(__in INT mode, __out PACL *ppDACL) {\n   DWORD dwRtnCode = ERROR_SUCCESS;\n   HANDLE hToken = NULL;\n   DWORD dwSize = 0;\n-  PTOKEN_USER pTokenUser = NULL;\n+  PTOKEN_OWNER pTokenOwner = NULL;\n   PTOKEN_PRIMARY_GROUP pTokenPrimaryGroup = NULL;\n   PSID pOwnerSid = NULL, pGroupSid = NULL;\n   PACL pDACL = NULL;\n@@ -1525,11 +1525,11 @@ static DWORD GetWindowsDACLsForCreate(__in INT mode, __out PACL *ppDACL) {\n     goto done;\n   }\n \n-  dwRtnCode = GetTokenInformationByClass(hToken, TokenUser, &pTokenUser);\n+  dwRtnCode = GetTokenInformationByClass(hToken, TokenOwner, &pTokenOwner);\n   if (dwRtnCode != ERROR_SUCCESS) {\n     goto done;\n   }\n-  pOwnerSid = pTokenUser->User.Sid;\n+  pOwnerSid = pTokenOwner->Owner;\n \n   dwRtnCode = GetTokenInformationByClass(hToken, TokenPrimaryGroup,\n       &pTokenPrimaryGroup);\n@@ -1549,7 +1549,7 @@ done:\n   if (hToken) {\n     CloseHandle(hToken);\n   }\n-  LocalFree(pTokenUser);\n+  LocalFree(pTokenOwner);\n   LocalFree(pTokenPrimaryGroup);\n   return dwRtnCode;\n }\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-16T20:26:42.275+0000","updated":"2014-12-16T20:26:42.275+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14248951","id":"14248951","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"+1 from me as well.  Thanks, Chris.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-16T21:17:16.219+0000","updated":"2014-12-16T21:17:16.219+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14248992","id":"14248992","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"[~arpitagarwal] correctly pointed out an issue in the handling of the max length rule for {{CreateDirectory}}.  If it must be possible to append an 8.3 file name, then we also need room for an additional path separator, in case the original path didn't provide it.  In fact, in our case, we expect not to have a trailing path separator, because it gets removed by {{java.io.File#getAbsolutePath}}.  Here is patch v008, changing to {{MAX_PATH - 13}} instead of {{MAX_PATH - 12}}.  Thanks for the good eye, Arpit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-16T21:34:30.716+0000","updated":"2014-12-16T21:34:30.716+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14248995","id":"14248995","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12687562/HADOOP-11321.007.patch\n  against trunk revision a97a1e7.\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:red}-1 findbugs{color}.  The patch appears to introduce 23 new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager:\n\n                  org.apache.hadoop.crypto.random.TestOsSecureRandom\n                  org.apache.hadoop.ha.TestZKFailoverController\n\nTest results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5281//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5281//artifact/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-nodemanager.html\nFindbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5281//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html\nConsole output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5281//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-16T21:35:55.221+0000","updated":"2014-12-16T21:35:55.221+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14249013","id":"14249013","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for fixing that Chris!\n\n+1 for the v008 patch, pending Jenkins.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-16T21:43:53.311+0000","updated":"2014-12-16T21:44:10.025+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14249102","id":"14249102","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12687592/HADOOP-11321.008.patch\n  against trunk revision 565d72f.\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:red}-1 findbugs{color}.  The patch appears to introduce 23 new Findbugs (version 2.0.3) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager:\n\n                  org.apache.hadoop.crypto.random.TestOsSecureRandom\n\nTest results: https://builds.apache.org/job/PreCommit-HADOOP-Build/5282//testReport/\nFindbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5282//artifact/patchprocess/newPatchFindbugsWarningshadoop-yarn-server-nodemanager.html\nFindbugs warnings: https://builds.apache.org/job/PreCommit-HADOOP-Build/5282//artifact/patchprocess/newPatchFindbugsWarningshadoop-common.html\nConsole output: https://builds.apache.org/job/PreCommit-HADOOP-Build/5282//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-16T22:44:39.951+0000","updated":"2014-12-16T22:44:39.951+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14249169","id":"14249169","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"FAILURE: Integrated in Hadoop-trunk-Commit #6732 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6732/])\nHADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth. (cnauroth: rev e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf)\n* hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java\n* hadoop-common-project/hadoop-common/src/main/winutils/include/winutils.h\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLocalDirsHandlerService.java\n* hadoop-common-project/hadoop-common/CHANGES.txt\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/WindowsSecureContainerExecutor.java\n* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ChecksumFileSystem.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-16T23:42:36.356+0000","updated":"2014-12-16T23:42:36.356+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14249171","id":"14249171","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"The test failure and Findbugs warnings are unrelated.  I committed this to trunk and branch-2.  Thanks very much to the code reviewers: Colin, Remus and Arpit.\n\nI filed HADOOP-11415 to track use of {{fchmod}} for providing a similar solution on Linux.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-16T23:45:23.437+0000","updated":"2014-12-16T23:45:23.437+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14249741","id":"14249741","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #44 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/44/])\nHADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth. (cnauroth: rev e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf)\n* hadoop-common-project/hadoop-common/src/main/winutils/include/winutils.h\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java\n* hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ChecksumFileSystem.java\n* hadoop-common-project/hadoop-common/CHANGES.txt\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLocalDirsHandlerService.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/WindowsSecureContainerExecutor.java\n* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-17T11:33:19.550+0000","updated":"2014-12-17T11:33:19.550+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14249747","id":"14249747","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"FAILURE: Integrated in Hadoop-Yarn-trunk #778 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/778/])\nHADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth. (cnauroth: rev e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf)\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java\n* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c\n* hadoop-common-project/hadoop-common/src/main/winutils/include/winutils.h\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/WindowsSecureContainerExecutor.java\n* hadoop-common-project/hadoop-common/CHANGES.txt\n* hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ChecksumFileSystem.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLocalDirsHandlerService.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-17T11:36:49.099+0000","updated":"2014-12-17T11:36:49.099+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14249901","id":"14249901","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"FAILURE: Integrated in Hadoop-Hdfs-trunk #1976 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1976/])\nHADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth. (cnauroth: rev e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf)\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ChecksumFileSystem.java\n* hadoop-common-project/hadoop-common/src/main/winutils/include/winutils.h\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/WindowsSecureContainerExecutor.java\n* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java\n* hadoop-common-project/hadoop-common/CHANGES.txt\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLocalDirsHandlerService.java\n* hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-17T14:30:05.607+0000","updated":"2014-12-17T14:30:05.607+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14249911","id":"14249911","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #41 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/41/])\nHADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth. (cnauroth: rev e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf)\n* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLocalDirsHandlerService.java\n* hadoop-common-project/hadoop-common/CHANGES.txt\n* hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ChecksumFileSystem.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/WindowsSecureContainerExecutor.java\n* hadoop-common-project/hadoop-common/src/main/winutils/include/winutils.h\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-17T14:36:01.644+0000","updated":"2014-12-17T14:36:01.644+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14249954","id":"14249954","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #45 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/45/])\nHADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth. (cnauroth: rev e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf)\n* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java\n* hadoop-common-project/hadoop-common/src/main/winutils/include/winutils.h\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLocalDirsHandlerService.java\n* hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ChecksumFileSystem.java\n* hadoop-common-project/hadoop-common/CHANGES.txt\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/WindowsSecureContainerExecutor.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-17T15:08:33.587+0000","updated":"2014-12-17T15:08:33.587+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12756580/comment/14250009","id":"14250009","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1995 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1995/])\nHADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth. (cnauroth: rev e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf)\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/WindowsSecureContainerExecutor.java\n* hadoop-common-project/hadoop-common/src/main/winutils/libwinutils.c\n* hadoop-common-project/hadoop-common/CHANGES.txt\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java\n* hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/TestLocalDirsHandlerService.java\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ChecksumFileSystem.java\n* hadoop-common-project/hadoop-common/src/main/winutils/include/winutils.h\n* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/nativeio/NativeIO.c\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-17T15:41:08.034+0000","updated":"2014-12-17T15:41:08.034+0000"}],"maxResults":47,"total":47,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-11321/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i22l4n:"}}