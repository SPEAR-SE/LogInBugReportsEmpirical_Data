{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12917314","self":"https://issues.apache.org/jira/rest/api/2/issue/12917314","key":"HADOOP-12611","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329058","id":"12329058","description":"2.8.0 release","name":"2.8.0","archived":false,"released":true,"releaseDate":"2017-03-22"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12337975","id":"12337975","name":"3.0.0-alpha2","archived":false,"released":true,"releaseDate":"2017-01-25"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12342315","id":"12342315","description":"2.7.6 release","name":"2.7.6","archived":false,"released":true,"releaseDate":"2018-04-16"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2015-12-02T09:01:20.424+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Jan 04 23:52:45 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_107901309_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_1_*:*_26760362783","customfield_12312321":null,"resolutiondate":"2016-10-07T16:39:01.399+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-12611/watchers","watchCount":5,"isWatching":false},"created":"2015-12-01T17:14:38.734+0000","customfield_12310192":null,"customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"6.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[{"id":"12450581","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12450581","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12842517","key":"HADOOP-12181","self":"https://issues.apache.org/jira/rest/api/2/issue/12842517","fields":{"summary":"Fix intermittent test failure of TestZKSignerSecretProvider","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-01-04T23:52:45.123+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"https://builds.apache.org/job/Hadoop-Common-trunk/2053/testReport/junit/org.apache.hadoop.security.authentication.util/TestZKSignerSecretProvider/testMultipleInit/\r\n\r\nError Message\r\n\r\nexpected null, but was:<[B@142bad79>\r\n\r\nStacktrace\r\n\r\njava.lang.AssertionError: expected null, but was:<[B@142bad79>\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotNull(Assert.java:664)\r\n\tat org.junit.Assert.assertNull(Assert.java:646)\r\n\tat org.junit.Assert.assertNull(Assert.java:656)\r\n\tat org.apache.hadoop.security.authentication.util.TestZKSignerSecretProvider.testMultipleInit(TestZKSignerSecretProvider.java:149)\r\n\r\n\r\nI think the failure was introduced after HADOOP-12181\r\n\r\nThis is likely where the root cause is:\r\n\r\n2015-11-29 00:24:33,325 ERROR ZKSignerSecretProvider - An unexpected exception occurred while pulling data fromZooKeeper\r\njava.lang.IllegalStateException: instance must be started before calling this method\r\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:145)\r\n\tat org.apache.curator.framework.imps.CuratorFrameworkImpl.getData(CuratorFrameworkImpl.java:363)\r\n\tat org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider.pullFromZK(ZKSignerSecretProvider.java:341)\r\n\tat org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider.rollSecret(ZKSignerSecretProvider.java:264)\r\n\tat org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider$$EnhancerByMockitoWithCGLIB$$575f06d8.CGLIB$rollSecret$2(<generated>)\r\n\tat org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider$$EnhancerByMockitoWithCGLIB$$575f06d8$$FastClassByMockitoWithCGLIB$$6f94a716.invoke(<generated>)\r\n\tat org.mockito.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:216)\r\n\tat org.mockito.internal.creation.AbstractMockitoMethodProxy.invokeSuper(AbstractMockitoMethodProxy.java:10)\r\n\tat org.mockito.internal.invocation.realmethod.CGLIBProxyRealMethod.invoke(CGLIBProxyRealMethod.java:22)\r\n\tat org.mockito.internal.invocation.realmethod.FilteredCGLIBProxyRealMethod.invoke(FilteredCGLIBProxyRealMethod.java:27)\r\n\tat org.mockito.internal.invocation.Invocation.callRealMethod(Invocation.java:211)\r\n\tat org.mockito.internal.stubbing.answers.CallsRealMethods.answer(CallsRealMethods.java:36)\r\n\tat org.mockito.internal.MockHandler.handle(MockHandler.java:99)\r\n\tat org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:47)\r\n\tat org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider$$EnhancerByMockitoWithCGLIB$$575f06d8.rollSecret(<generated>)\r\n\tat org.apache.hadoop.security.authentication.util.RolloverSignerSecretProvider$1.run(RolloverSignerSecretProvider.java:97)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\r\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:304)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:178)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\n\tat java.lang.Thread.run(Thread.java:745)","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12775311","id":"12775311","filename":"HADOOP-12611.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-02T15:13:01.301+0000","size":9919,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12775311/HADOOP-12611.001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12775426","id":"12775426","filename":"HADOOP-12611.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-02T23:10:17.998+0000","size":5990,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12775426/HADOOP-12611.002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12830582","id":"12830582","filename":"HADOOP-12611.003.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-09-27T21:53:13.311+0000","size":11754,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12830582/HADOOP-12611.003.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12831409","id":"12831409","filename":"HADOOP-12611.004.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-10-03T21:39:51.595+0000","size":14329,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12831409/HADOOP-12611.004.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12831821","id":"12831821","filename":"HADOOP-12611.005.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-10-05T22:04:24.222+0000","size":9474,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12831821/HADOOP-12611.005.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12831957","id":"12831957","filename":"HADOOP-12611.006.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-10-06T13:41:24.522+0000","size":16305,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12831957/HADOOP-12611.006.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"TestZKSignerSecretProvider#testMultipleInit occasionally fail","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15034591","id":"15034591","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"body":"The exception \"An unexpected exception occurred while pulling data fromZooKeeper\" is unrelated to this failure. I can reproduce the failure even without that exception.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-01T21:17:21.127+0000","updated":"2015-12-01T21:17:21.127+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15035225","id":"15035225","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"body":"The test logic assumes that rollSecret() is not called when allSecretsA[1] is checked ( allSecretsA[1] is initially null, and will be updated by calling rollSecret() ). But some times, the test code takes more time to run, and rollSecret() will be called. This is a race condition.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-02T03:56:12.828+0000","updated":"2015-12-02T03:56:12.828+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15035494","id":"15035494","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=iwasakims","name":"iwasakims","key":"iwasakims","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=iwasakims&avatarId=18289","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=iwasakims&avatarId=18289","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=iwasakims&avatarId=18289","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=iwasakims&avatarId=18289"},"displayName":"Masatake Iwasaki","active":true,"timeZone":"Asia/Tokyo"},"body":"Thanks for working on this, [~jojochuang]. I changed {{rolloverFrequency}} from 15s to 2s in order to shorten test execution time. It is possible to be too short on heavily loaded build server. Setting {{rolloverFrequency}} under 50ms reproduced the error on my VM. It is hard to say what value is appropriate.\n\nI think mocking out scheduler and calling {{ZKSignerSecretProvider#rollSecret}} explicitly could be an option to make test deterministic. If it is difficult to mock scheduler, we can effectively deactivate scheduler by setting very long {{rolloverFrequency}} instead.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=iwasakims","name":"iwasakims","key":"iwasakims","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=iwasakims&avatarId=18289","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=iwasakims&avatarId=18289","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=iwasakims&avatarId=18289","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=iwasakims&avatarId=18289"},"displayName":"Masatake Iwasaki","active":true,"timeZone":"Asia/Tokyo"},"created":"2015-12-02T09:01:20.424+0000","updated":"2015-12-02T09:01:20.424+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15035497","id":"15035497","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=iwasakims","name":"iwasakims","key":"iwasakims","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=iwasakims&avatarId=18289","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=iwasakims&avatarId=18289","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=iwasakims&avatarId=18289","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=iwasakims&avatarId=18289"},"displayName":"Masatake Iwasaki","active":true,"timeZone":"Asia/Tokyo"},"body":"bq. The exception \"An unexpected exception occurred while pulling data fromZooKeeper\" is unrelated to this failure. I can reproduce the failure even without that exception.\n\nYeah. {{java.lang.IllegalStateException: instance must be started before calling this method}} means curator client is used before started. There may be another bug on the test or ZKSignerSecretProvider.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=iwasakims","name":"iwasakims","key":"iwasakims","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=iwasakims&avatarId=18289","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=iwasakims&avatarId=18289","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=iwasakims&avatarId=18289","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=iwasakims&avatarId=18289"},"displayName":"Masatake Iwasaki","active":true,"timeZone":"Asia/Tokyo"},"created":"2015-12-02T09:02:08.130+0000","updated":"2015-12-02T09:02:08.130+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15035735","id":"15035735","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~iwasakims] thanks for comments.\nSo yes, I believe HADOOP-12181 reduced timeout which makes the test more likely to fail.\nI think the original test logic had the race condition/is not thread-safe. I have to increase the timeout by twice (timeout=8000) in order not to see the failures (in 1000 runs). On my machine, some ZKSignerProvider.init() calls takes long time (~1000 ms) to complete, and therefore rollSecret() has been called already.\n\nIn general I don't like the idea of relying on timing. I think a better hack is to subclass ZKSignerSecretProvider, overriding rollSecret() to collect secrets after each invocation. Let it run for a few periods, and then compare the secret of each secret provider.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-02T12:40:13.286+0000","updated":"2015-12-02T12:40:13.286+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15035940","id":"15035940","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"body":"Rev01: proof of concept.\n\nThe main point in the patch is to avoid the synchronization problem. By subclassing ZKSignerSecretProvider, and overriding pullFromZK(), I can store the secret each time it is updated. In this way, I can store and compare multiple versions of secrets without the need to synchronize three secret providers.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-02T15:13:01.305+0000","updated":"2015-12-02T15:13:01.305+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15035953","id":"15035953","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"body":"[~iwasakims] Thanks for your suggestions. I think your proposed solution will also fix the issue. \n\nBecause the issue is mostly related to test logic, it would be great if we can change just the test code, and minimize the change to the src code. My patch here only has only one line of change in ZKSignerSecretProvider (changing modifier from private to protected) and no change to RolloverSignerSecretProvider.  It also preserves the period rolling of secret, which is another property the test tries to  verify.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-02T15:23:02.008+0000","updated":"2015-12-02T15:23:02.008+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15036058","id":"15036058","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"body":"My understanding of the code is probably wrong. Maybe the correct solution is to patch ZKSignerSecretProvider so that it does not roll secret until the initialization is done?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-02T16:22:12.590+0000","updated":"2015-12-02T16:22:12.590+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15036841","id":"15036841","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"body":"Rev02 is based on Masatake's suggestion with my hack.\n\nSub-class ZKSignerSecretProvider, make rollSecret() of the subclass an no-op. In this way, we can avoid the race-condition issue; on the other hand, Mockito can still verify that rollSecret() is called periodically at the expected frequency. \n\nFinally, because rollSecret() of the subclass is a no-op, the test manually calls ZKSignerSecretProvider.rollSecret() to update the secret. Best of all, src/ code is virtually not modified (except for some logging).\n\nI tested this patch locally and no test failures happened in more than 100 runs.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-02T23:10:18.002+0000","updated":"2015-12-02T23:10:18.002+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15036940","id":"15036940","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 9m 18s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 11m 0s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 40s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 9s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 25s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 15s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 31s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 17s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 16s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 22s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 52s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 10m 52s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 37s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 10m 37s {color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 13s {color} | {color:red} Patch generated 1 new checkstyle issues in hadoop-common-project/hadoop-auth (total was 2, now 3). {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 24s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 14s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 0m 42s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 15s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 0m 16s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 3m 59s {color} | {color:green} hadoop-auth in the patch passed with JDK v1.8.0_66. {color} |\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 4m 14s {color} | {color:green} hadoop-auth in the patch passed with JDK v1.7.0_85. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 28s {color} | {color:green} Patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 66m 45s {color} | {color:black} {color} |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:0ca8df7 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12775426/HADOOP-12611.002.patch |\n| JIRA Issue | HADOOP-12611 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 24a5217a203a 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 6b9a5be |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/8176/artifact/patchprocess/diff-checkstyle-hadoop-common-project_hadoop-auth.txt |\n| JDK v1.7.0_85  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8176/testReport/ |\n| modules | C: hadoop-common-project/hadoop-auth U: hadoop-common-project/hadoop-auth |\n| Max memory used | 76MB |\n| Powered by | Apache Yetus   http://yetus.apache.org |\n| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8176/console |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2015-12-03T00:24:12.191+0000","updated":"2015-12-03T00:24:12.191+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15037094","id":"15037094","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"body":"I actually think the approach in the 001 patch is better.  One of the things that the test is checking is the {{ZKSignerSecretProvider}}'s logic of talking to ZK to have all instances agree on the same secret.  So there should be an element of randomness and timing in this test, because that's what will normally happen.  Though I agree that makes the test more difficult to manage.\n\nIf my understanding is correct, it looks like the issue we see in the test is that {{ZKSignerSecretProvider}} can start trying to talk to ZK before the client is connected, right?  In that case, I think we can easily fix that by having the test create the Curator clients and wait for them (using {{blockUntilConnected}}) to connect to ZK before even creating the {{ZKSignerSecretProviders}}.  You can make {{ZKSignerSecretProvider}} use an existing Curator client by passing it from the {{ServletContext}} (see {{getDummyServletContext()}}).  That said, perhaps it would be a best to put {{blockUntilConnected}} in {{ZKSignerSecretProvider}} itself, like your 001 patch does, or we might run into this problem in the real world?  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-03T02:21:07.196+0000","updated":"2015-12-03T02:21:07.196+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15038222","id":"15038222","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks Robert for the explanation!\n\nThere does exist the issue with talking to ZK before connection is created, but that does not seem to cause the test failure. I have added blockUntilConnected previously but which did not resolve the issue. Although it seems to be an issue in the real world.\n\nThe root cause of this issue is, in the test, three ZKSignerSecretProvider are initialized and get secret. By the time the third one finishes initialization, rollSecret() has been called to update the state of secret, both locally and remotely on the ZK server. However, the test code assumed the initialization is instantaneous, and that it can inspect the initial state of secret (currentSecret[1] == null) right after the three ZKSignerSecretProvider are initialized.\n\nThe 001 patch did not pass the test, which is why I proposed the second patch, which passed on my local machine. But I'd agree 002 patch lost the randomness. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-03T18:09:54.832+0000","updated":"2015-12-03T18:09:54.832+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15042024","id":"15042024","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote} it can inspect the initial state of secret (currentSecret\\[1] == null) right after the three ZKSignerSecretProvider are initialized.{quote}\nOk, I think the problem here is that HADOOP-12181 changed the rollover frequency to only 2 seconds (it was originally 15).  So, it's very likely that one or more of the {{ZKSignerSecretProviders}} has already rolled by the time we check that {{currentSecret\\[1] == null}}, so it's no longer {{null}}.  With a rollover time of 15 seconds, this was much less likely to occur, though I suppose it was still possible.\n\nTrying to keep the timing/randomness that we'd like to test but still making the test not flakey, I think the best approach would be to do something similar to the 001 patch where you'd have a subclass of {{ZKSignerSecretProvider}} that keeps track of {{secrets}}, let it run for two iterations (which you can check based on the size of the list keeping the {{secrets}} so no timing is involved), and then verify that each iteration of {{secrets}} is correct.  For example:\n# {{\\[s1]\\[null]}}\n# {{\\[s2]\\[s1]}}\n# {{\\[s3]\\[s2]}}\n\nAnd the test itself doesn't have any timing components because you'd be waiting for the list of {{secrets}} from each {{ZKSignerSecretProvider}} to contain 3 snapshots.  You can then just check that all sets of snapshots agree.\n\nDoes that sound good?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-04T19:10:50.078+0000","updated":"2015-12-04T19:10:50.078+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15524274","id":"15524274","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"body":"I just saw this test fail in our internal 2.8 build with the following stack trace\n\n{noformat}\norg.junit.internal.ArrayComparisonFailure: arrays first differed at element [0]; expected:<49> but was:<56>\n\tat org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:50)\n\tat org.junit.Assert.internalArrayEquals(Assert.java:473)\n\tat org.junit.Assert.assertArrayEquals(Assert.java:294)\n\tat org.junit.Assert.assertArrayEquals(Assert.java:305)\n\tat org.apache.hadoop.security.authentication.util.TestZKSignerSecretProvider.testMultipleUnsychnronized(TestZKSignerSecretProvider.java:237)\n{noformat}\n\nHere are the relevant log lines from stdout:\n{noformat}\n016-09-22 20:16:16,988 INFO  ZKSignerSecretProvider - Creating secret znode\n2016-09-22 20:16:18,001 INFO  SessionTrackerImpl - SessionTrackerImpl exited loop!\n2016-09-22 20:16:18,992 INFO  PrepRequestProcessor - Processed session termination for sessionid: 0x157538a9e5e0000\n2016-09-22 20:16:18,993 INFO  ZooKeeper - Session: 0x157538a9e5e0000 closed\n2016-09-22 20:16:18,993 INFO  ClientCnxn - EventThread shut down\n2016-09-22 20:16:18,993 INFO  NIOServerCnxn - Closed socket connection for client /127.0.0.1:47644 which had sessionid 0x157538a9e5e0000\n2016-09-22 20:16:18,994 ERROR ZKSignerSecretProvider - An unexpected exception occurred while pulling data fromZooKeeper\njava.lang.IllegalStateException: instance must be started before calling this method\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:145)\n\tat org.apache.curator.framework.imps.CuratorFrameworkImpl.getData(CuratorFrameworkImpl.java:363)\n\tat org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider.pullFromZK(ZKSignerSecretProvider.java:314)\n\tat org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider.rollSecret(ZKSignerSecretProvider.java:237)\n\tat org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider$$EnhancerByMockitoWithCGLIB$$91cc7da3.CGLIB$rollSecret$0(<generated>)\n\tat org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider$$EnhancerByMockitoWithCGLIB$$91cc7da3$$FastClassByMockitoWithCGLIB$$200c7800.invoke(<generated>)\n\tat org.mockito.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:216)\n\tat org.mockito.internal.creation.AbstractMockitoMethodProxy.invokeSuper(AbstractMockitoMethodProxy.java:10)\n\tat org.mockito.internal.invocation.realmethod.CGLIBProxyRealMethod.invoke(CGLIBProxyRealMethod.java:22)\n\tat org.mockito.internal.invocation.realmethod.FilteredCGLIBProxyRealMethod.invoke(FilteredCGLIBProxyRealMethod.java:27)\n\tat org.mockito.internal.invocation.Invocation.callRealMethod(Invocation.java:211)\n\tat org.mockito.internal.stubbing.answers.CallsRealMethods.answer(CallsRealMethods.java:36)\n\tat org.mockito.internal.MockHandler.handle(MockHandler.java:99)\n\tat org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:47)\n\tat org.apache.hadoop.security.authentication.util.ZKSignerSecretProvider$$EnhancerByMockitoWithCGLIB$$91cc7da3.rollSecret(<generated>)\n\tat org.apache.hadoop.security.authentication.util.RolloverSignerSecretProvider$1.run(RolloverSignerSecretProvider.java:97)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\n{noformat}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-09-26T21:50:57.549+0000","updated":"2016-09-26T21:50:57.549+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15524275","id":"15524275","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"body":"[~rkanter], [~jojochuang], I read up on all of your comments on here and I think I understand what's going on. Robert, could you expand on what randomness we would be losing if we called rollSecret() explicitly as Wei-Chiu has in his v2 patch? The secret generation RNG is deterministic since we have given a deterministic seed, so we know what values are going to come out of generating the secret each time. The timing of exactly when rollSecret() would fire using the rolloverFrequency is random, but we're waiting on it anyway with the verify() functionality. Is there something else that I've missed here? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-09-26T21:51:05.758+0000","updated":"2016-09-26T21:51:05.758+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15524322","id":"15524322","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"body":"[~ebadger] It's a shame I've not worked on this patch for a long time. If you like feel free to grab and submit a patch!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-26T22:03:49.018+0000","updated":"2016-09-26T22:03:49.018+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15524505","id":"15524505","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 17s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 48s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 45s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 13s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 17s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 11s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 23s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 58s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  7m 58s{color} | {color:green} the patch passed {color} |\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 12s{color} | {color:orange} hadoop-common-project/hadoop-auth: The patch generated 5 new + 3 unchanged - 1 fixed = 8 total (was 4) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 31s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 19s{color} | {color:green} hadoop-auth in the patch passed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 31m 48s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Issue | HADOOP-12611 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12775426/HADOOP-12611.002.patch |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 18983f7587b0 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 8e06d86 |\n| Default Java | 1.8.0_101 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/10599/artifact/patchprocess/diff-checkstyle-hadoop-common-project_hadoop-auth.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/10599/testReport/ |\n| modules | C: hadoop-common-project/hadoop-auth U: hadoop-common-project/hadoop-auth |\n| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/10599/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-26T23:34:23.911+0000","updated":"2016-09-26T23:34:23.911+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15524592","id":"15524592","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"body":"It's been quite a while since I looked at this, so hopefully I'm remembering things correctly.  The trick to the {{ZKSignerSecretProvider}} is that it doesn't rely on external locking by taking advantage of the versioning property in ZNodes.  Specifically, each server has it's own seed for the RNG.  Instead of reconciling that, because we don't really care about the actual content of the secret, all servers try to push their next generated secret to the ZNode based on the current version.  Only one will succeed because the version will increment.  All servers then read back the next generated secret from the ZNode.  So while each server (or instance of {{ZKSignerSecretProvider}}) is deterministic because we give them a deterministic seed, we can't guarantee the ordering of the servers when they talk to ZooKeeper; whichever one happens to get there first, will \"win\".  It would be best if the test reflects the fact that any of the servers can win at updating the secret, as that's more like what will happen in a real environment.  Does that make sense?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-27T00:19:27.025+0000","updated":"2016-09-27T00:19:27.025+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15526620","id":"15526620","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"body":"[~rkanter], thanks for the detailed response! What you said makes sense with regards to the race between the servers calling rollSecret() to push their secrets to ZK. Let me make sure that I understand the approach that you proposed above. \n\n1. Seed deterministically as we are currently doing and let rollSecret() happen twice. \n  - You said above to check secrets based on size, but the secrets list is only ever 2 elements. So I could check for it to change, but I don't know how I would check for each iteration based on the size of the list.\n \n2. Keep track of the secrets list for both A and B at each iteration.\n3. Check to make sure that A and B are correct at each iteration\n  - A: [A1, null], [A2, A1], [A3 or B3, A2]\n  - B: [A2, A1], [A3 or B3, A2]\n\nI do see a potential problem with this setup though. Right after we call secretProviderB.init(), we check to make sure that it's secrets are equal to [A2, A1]. But if there is a slow code path for whatever reason in the main code, then rollSecret() could be called to update the secrets via either secretProviderA or secretProviderB. This would make the secrets [A3 or B3, A2] (or something else if rollSecret() was called multiple times) instead of [A2, A1]. I'm not sure how to remove this race condition without changing the source code. \n\nA little hokey, but would it be acceptable to explicitly call rollSecret() instead of using verify(), but calling them in a random order? This way we guarantee the number of times that rollSecret() is called, we guarantee the contents of secrets for both secretProviders, and we still provide the randomness of each secretProvider being able to talk to ZK first.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-09-27T16:16:56.805+0000","updated":"2016-09-27T16:20:24.054+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15527114","id":"15527114","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"body":"That sounds right to me.\n\n{quote}You said above to check secrets based on size, but the secrets list is only ever 2 elements. So I could check for it to change, but I don't know how I would check for each iteration based on the size of the list.{quote}\n[~jojochuang]'s 001 patch adds a subclass that remembers all secrets in an arraylist.  That should let you determine based on size.\n\nCalling {{rollSecret()}} in a random order is an interesting idea.  I think that would cover testing the randomness in the ordering.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-27T19:02:25.934+0000","updated":"2016-09-27T19:02:25.934+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15527525","id":"15527525","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"body":"Uploading a new patch that is built off of [~jojochuang]'s 002 patch. I made 3 main changes. \n\n1. I explicitly call realRollSecret() so that we got rid of the race condition between rollSecret() being called and checking the secrets of each secretProvider. \n2. I changed the verify() functions to use atLeast() instead of times(), because it is possible for rollSecret() to be called many times if the main code is slow and the scheduler thread is not. \n3. I randomized the order in which realRollSecret() is called for each secretProvider. \n\nIn regards to change #3, I had an offline conversation with [~jlowe] that makes me wonder why we need this in the first place (though I was the one who suggested randomly selecting the order). Why are we relying on the test to give us randomness? If there are a finite amount of states like there are here, why don't we iterate over all of them instead of trying to randomly get all of the states over multiple runs? If we care that every permutation of the order of realRollSecret() works, then we should test every permutation. Randomly selecting the order means that it would take 6+ runs to go through every permutation. So if a change was made in the source that screwed up one of those permutations, we might not see it until a long ways down (and then it would be really hard to debug since we wouldn't know what order). [~rkanter], I think the better way to do this is to explicitly iterate through all of the permutations (or at least 2 permutations, 1 with each secretProvider \"winning\" the race). ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-09-27T21:53:13.316+0000","updated":"2016-09-27T21:53:13.316+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15527618","id":"15527618","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 14s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m  2s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 11s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 11s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 16s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 11s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 20s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m  9s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  7m  9s{color} | {color:green} the patch passed {color} |\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 13s{color} | {color:orange} hadoop-common-project/hadoop-auth: The patch generated 26 new + 2 unchanged - 2 fixed = 28 total (was 4) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 17s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m  8s{color} | {color:green} hadoop-auth in the patch passed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 29m 21s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Issue | HADOOP-12611 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12830582/HADOOP-12611.003.patch |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 920793daf2e8 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 2acfb1e |\n| Default Java | 1.8.0_101 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/10617/artifact/patchprocess/diff-checkstyle-hadoop-common-project_hadoop-auth.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/10617/testReport/ |\n| modules | C: hadoop-common-project/hadoop-auth U: hadoop-common-project/hadoop-auth |\n| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/10617/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-27T22:36:14.027+0000","updated":"2016-09-27T22:36:14.027+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15527659","id":"15527659","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"body":"Iterating through all of the permutations sounds like the best solution.  It's been too long for me to remember why I didn't do that before :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-27T22:43:53.413+0000","updated":"2016-09-27T22:43:53.413+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15536596","id":"15536596","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"body":"[~rkanter], it seems like redundant work to iterate through all 6 of the orderings for 3 clients. Would it be acceptable to run through 3 (1 where each secretProvider \"wins\" the race)? It only takes a few seconds to run, but those seconds add up with tests. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-09-30T17:59:54.852+0000","updated":"2016-09-30T17:59:54.852+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15536644","id":"15536644","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"body":"I looked through the test in more detail and I think there's actually only two cases here:\n# *providerX* wins the first rollover, *providerX* wins the second rollover\n# *providerX* wins the first rollover, *providerY* wins the second rollover\n\nWhether X and Y are A, B, or C doesn't really matter, right?  They're all identical code, so in a vacuum, whether A wins, B wins, or C wins is the same case.  Given that, what we really only have the two above cases where either the original winner wins the second time or not.\n\nSo I think we only need to run two orderings, e.g:\n# providerA wins both rollovers\n# providerA wins the first rollover, providerB wins the second rollover\n\nDoes that make sense?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-30T18:24:07.449+0000","updated":"2016-09-30T18:24:40.344+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15543506","id":"15543506","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"body":"bq. Does that make sense?\nYes. It does. However, it means that {{testMultipleInit}} only has 1 possible outcome, since there is only 1 {{rollSecret}} call. It makes me wonder what it gives us that {{testMultipleUnsynchronized}} doesn't already give us. {{testMultipleUnsynchronized}} has 3 secretProviders and rolls the secrets twice, while {{testMultipleInit}} has 2 secretProviders and rolls the secrets once. So it seems like {{testMultipleInit}} is just a subset of {{testMultipleUnsynchronized}}. [~rkanter], what do you think?\n\nI'm uploading a patch that makes it so that the tests only test the ordering between {{rollSecret}} calls (meaning that {{testMultipleInit}} only has 1 outcome, while {{testMultipleUnsynchronized}} has 2). If you agree that {{testMultipleInit}} is a redundant subset of {{testMultipleUnsynchronized}} then  I can upload a patch removing it completely. And of course if you think that there is functionality in {{testMultipleInit}} that I've stripped out, please do let me know. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-10-03T21:39:51.599+0000","updated":"2016-10-03T21:39:51.599+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15549457","id":"15549457","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"body":"Ya, looking at it now with the changes, {{testMultipleInit}} is a duplicate of case 1 in {{testMultipleUnsynchronized}}; so I think removing it makes sense.\n\nA few comments on {{testMultipleUnsynchronized}}:\n# The javadoc shouldn't have {{int}} in the {{\\@param}}\n# We should do more asserting of the initial state (e.g. there's no checking on {{secretProviderB}}).  You can probably just copy stuff from {{testMultipleInit}} for this.\n# At the end, when we're doing this:\n{code:java}\n      if (Arrays.equals(secretA3, currentSecretA)) {\n        Assert.assertArrayEquals(secretA3, allSecretsA[0]);\n      } else if (Arrays.equals(secretB3, currentSecretB)) {\n        Assert.assertArrayEquals(secretB3, allSecretsA[0]);\n      } else {\n        Assert.fail(\"It appears that they all agreed on the same secret, but \"\n                + \"not one of the secrets they were supposed to\");\n      }\n{code}\nwe now know the correct order that should have happened (via {{order}}), so we can make this another switch statement instead.  That way, we'll assert the expected order based on the roll order, instead of just one of the two orders.\n# I think we can just rename this to {{testMultiple}} now.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-05T17:38:58.952+0000","updated":"2016-10-05T17:39:33.697+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15550070","id":"15550070","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"body":"[~rkanter], thanks for the comments! I'm attaching a patch that I believe addresses each of them. \n\n1. Done\n2. Done\n3. This is a little bit trickier, actually. Since {{allSecrets}} is an array of 2 secrets, we need to roll the secret twice before it will actually reflect that the \"race\" was won by A or B. This is what I gathered by studying the code and by testing it out through unit testing. So I've added in 2 rolls of the secret which are both \"won\" by either A or B depending on the {{order}}. \n4. Done\n\nI also removed {{testMultipleInit}}. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-10-05T22:04:24.226+0000","updated":"2016-10-05T22:04:24.226+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15550080","id":"15550080","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |\n| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  5s{color} | {color:red} HADOOP-12611 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| JIRA Issue | HADOOP-12611 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12831821/HADOOP-12611.005.patch |\n| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/10680/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-05T22:08:32.436+0000","updated":"2016-10-05T22:08:32.436+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15551956","id":"15551956","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"body":"Looks like I accidentally uploaded the diff of my commits, not the diff against trunk. Attaching new patch against trunk. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-10-06T13:41:24.527+0000","updated":"2016-10-06T13:41:24.527+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15552045","id":"15552045","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 16s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m  5s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m 15s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 17s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 11s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 21s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 11s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  7m  8s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  7m  8s{color} | {color:green} the patch passed {color} |\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 12s{color} | {color:orange} hadoop-common-project/hadoop-auth: The patch generated 27 new + 2 unchanged - 2 fixed = 29 total (was 4) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 17s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 30s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m  6s{color} | {color:green} hadoop-auth in the patch passed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 21s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 29m 22s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Issue | HADOOP-12611 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12831957/HADOOP-12611.006.patch |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 9ff44ff61ca7 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 35b9d7d |\n| Default Java | 1.8.0_101 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HADOOP-Build/10691/artifact/patchprocess/diff-checkstyle-hadoop-common-project_hadoop-auth.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/10691/testReport/ |\n| modules | C: hadoop-common-project/hadoop-auth U: hadoop-common-project/hadoop-auth |\n| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/10691/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-06T14:17:53.692+0000","updated":"2016-10-06T14:17:53.692+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15553178","id":"15553178","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"body":"+1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-06T21:08:42.198+0000","updated":"2016-10-06T21:08:42.198+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15555568","id":"15555568","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~ebadger].  Committed to trunk and branch-2!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-07T16:39:02.398+0000","updated":"2016-10-07T16:39:02.398+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15555677","id":"15555677","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #10565 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/10565/])\nHADOOP-12611. TestZKSignerSecretProvider#testMultipleInit occasionally (rkanter: rev c183b9de8d072a35dcde96a20b1550981f886e86)\n* (edit) hadoop-common-project/hadoop-auth/src/test/java/org/apache/hadoop/security/authentication/util/TestZKSignerSecretProvider.java\n* (edit) hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/RolloverSignerSecretProvider.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-07T17:18:44.780+0000","updated":"2016-10-07T17:18:44.780+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15555746","id":"15555746","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"body":"Thanks, [~rkanter]!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-10-07T17:47:13.810+0000","updated":"2016-10-07T17:47:13.810+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15555750","id":"15555750","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"body":"[~rkanter], can we commit this to 2.8 as well? The cherry-pick is clean and this is where I originally saw the failure. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-10-07T17:48:44.553+0000","updated":"2016-10-07T17:48:44.553+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/15555764","id":"15555764","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"body":"Sure.  Also committed to branch-2.8!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-07T17:53:40.938+0000","updated":"2016-10-07T17:53:40.938+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12917314/comment/16312226","id":"16312226","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"body":"Cherry-picked to branch-2.7 so we could commit HADOOP-14246.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkanter","name":"rkanter","key":"rkanter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Kanter","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-01-04T23:52:45.112+0000","updated":"2018-01-04T23:52:45.112+0000"}],"maxResults":38,"total":38,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-12611/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2p4l3:"}}