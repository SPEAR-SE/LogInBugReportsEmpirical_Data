{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12400866","self":"https://issues.apache.org/jira/rest/api/2/issue/12400866","key":"HADOOP-3818","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/2","id":"2","description":"The problem described is an issue which will never be fixed.","name":"Won't Fix"},"customfield_12312322":null,"customfield_12310220":"2008-07-24T06:42:46.064+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Aug 11 18:39:07 UTC 2011","customfield_12310420":"65375","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_96246257901_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2011-08-11T18:39:07.171+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-3818/watchers","watchCount":4,"isWatching":false},"created":"2008-07-23T19:34:49.284+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12313190","id":"12313190","description":"","name":"0.17.1","archived":false,"released":true,"releaseDate":"2008-06-23"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-08-11T18:39:07.181+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310689","id":"12310689","name":"fs","description":"Generic FileSystem code"}],"timeoriginalestimate":null,"description":"FileSystem uses addShutdownHook to close all FileSystems at exit.  This makes it impossible to access a FileSystem from within your own ShutdownHook threads, say for deleting incomplete output.  Using a pre-existing FileSystem object is unsafe since it may be closed by the time the thread executes.  Using FileSystem.get(...) results in an exception:\n\nException in thread \"Thread-10\" java.lang.IllegalStateException: Shutdown in progress\n\tat java.lang.Shutdown.add(Shutdown.java:81)\n\tat java.lang.Runtime.addShutdownHook(Runtime.java:190)\n\tat org.apache.hadoop.fs.FileSystem$Cache.get(FileSystem.java:1293)\n\tat org.apache.hadoop.fs.FileSystem.get(FileSystem.java:203)\n\tat org.apache.hadoop.fs.FileSystem.get(FileSystem.java:108)\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"104741","customfield_12312823":null,"summary":"Not possible to access a FileSystem from within a ShutdownHook","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=r0wb0t","name":"r0wb0t","key":"r0wb0t","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rowan Nairn","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=r0wb0t","name":"r0wb0t","key":"r0wb0t","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rowan Nairn","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12400866/comment/12616356","id":"12616356","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ankur","name":"ankur","key":"ankur","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ankur","active":true,"timeZone":"Etc/UTC"},"body":"We faced the same issue and the workaround that we did was to register a SIGNAL handler in the application code that would re\ncieve a the TERM signal before shutdown hooks are invoked. However this introduces a dependency on Sun's misc package which generates a compiler warning stating the package might be de-supported in Sun's JDK.\n\nI think a better solution would be for FileSystem to expose an API to register application cleanup code and guarantee that the code is invoked ahead of the code in filesystem shutdown hook.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ankur","name":"ankur","key":"ankur","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ankur","active":true,"timeZone":"Etc/UTC"},"created":"2008-07-24T06:42:46.064+0000","updated":"2008-07-24T06:42:46.064+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12400866/comment/12616576","id":"12616576","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=r0wb0t","name":"r0wb0t","key":"r0wb0t","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rowan Nairn","active":true,"timeZone":"Etc/UTC"},"body":"bq. I think a better solution would be for FileSystem to expose an API to register application cleanup code and guarantee that the code is invoked ahead of the code in filesystem shutdown hook.\n\nI'm not sure how you would do that.  AFAIK there's no guaranteed ordering of shutdown hooks.  Another option would be to let FileSystems be created in shutdown hooks with the caveat that the creator is responsible for closing the filesystem before the hook ends.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=r0wb0t","name":"r0wb0t","key":"r0wb0t","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rowan Nairn","active":true,"timeZone":"Etc/UTC"},"created":"2008-07-24T18:42:44.676+0000","updated":"2008-07-24T18:42:44.676+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12400866/comment/12616585","id":"12616585","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"body":"> This makes it impossible to access a FileSystem from within your own ShutdownHook threads, say for deleting incomplete output.\n\nFor deleting file on exit, we should use FileSystem.deleteOnExit(Path f), instead of a ShutdownHook.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"created":"2008-07-24T18:51:45.523+0000","updated":"2008-07-24T18:51:45.523+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12400866/comment/12617005","id":"12617005","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=r0wb0t","name":"r0wb0t","key":"r0wb0t","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rowan Nairn","active":true,"timeZone":"Etc/UTC"},"body":"bq. For deleting file on exit, we should use FileSystem.deleteOnExit(Path f), instead of a ShutdownHook.\n\nThis doesn't seem to fit my use case.  I want to delete an unfinished MapRed output directory from HDFS *only* if the user terminates the process.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=r0wb0t","name":"r0wb0t","key":"r0wb0t","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rowan Nairn","active":true,"timeZone":"Etc/UTC"},"created":"2008-07-25T18:55:36.044+0000","updated":"2008-07-25T18:55:36.044+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12400866/comment/12617018","id":"12617018","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"body":"A trick not sure it will work for you: First create files and call FileSystem.deleteOnExit(...) for them.  Then, do rename at the end of the application.  If user terminates the process, they file won't be renamed and will be deleted.\n\nIt will be more efficient if you put everything in a directory and do deleteOnExit and rename on that directory.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"created":"2008-07-25T19:22:34.087+0000","updated":"2008-07-25T19:22:34.087+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12400866/comment/12617184","id":"12617184","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=steve_l","name":"steve_l","key":"steve_l","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steve Loughran","active":true,"timeZone":"Etc/UTC"},"body":"in SmartFrog we had fun with Sun JVM signal handling, which provides extra compatibility problems with the clean-room OSS implementations and are pretty hard to test. \n\nMaybe the classname of the class to run as a filesystem hook could be configurable, so someoneone could subclass and extend its shutdown code, rather than run race condition pain in shutdown. Which, for anyone who has tried, is essentially non-debuggable and therefore to be feared. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=steve_l","name":"steve_l","key":"steve_l","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Steve Loughran","active":true,"timeZone":"Etc/UTC"},"created":"2008-07-26T14:46:11.735+0000","updated":"2008-07-26T14:46:11.735+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12400866/comment/12617227","id":"12617227","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dhruba","name":"dhruba","key":"dhruba","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dhruba&avatarId=30636","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dhruba&avatarId=30636","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dhruba&avatarId=30636","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dhruba&avatarId=30636"},"displayName":"dhruba borthakur","active":true,"timeZone":"America/Tijuana"},"body":"My experience is that it is better If the appliction uses  deleteOnExit, rather than depend on the behaviour of the shutdown hook. does that work for you?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dhruba","name":"dhruba","key":"dhruba","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dhruba&avatarId=30636","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dhruba&avatarId=30636","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dhruba&avatarId=30636","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dhruba&avatarId=30636"},"displayName":"dhruba borthakur","active":true,"timeZone":"America/Tijuana"},"created":"2008-07-27T00:30:38.954+0000","updated":"2008-07-27T00:30:38.954+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12400866/comment/12617369","id":"12617369","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ankur","name":"ankur","key":"ankur","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ankur","active":true,"timeZone":"Etc/UTC"},"body":"The use case that we hit upon was client flushing data from Apache servers directly onto hadoop clusters and client dying because of unexpected server failures in which case the client receives SIGTERM and gets killed. What we want to do here is simply close our output stream before exiting so that data isn't lost. \n\nBut I can see other use cases where people might want to do additional operations in the client like renaming, moving etc (besides deleting and closing).\n\nSo I see a couple of approaches for this. \n1. Provide additional API's like closeOnExit(..),  moveOnExit(...) etc. which I think would not be so elegant and somewhat limited in the control they provide.\n\n2. Provide additional API in FileSystem, something like FileSystem.addShutdownEventReciever() that allows clients to register there custom cleanup code. In the shutdown hook, make sure that all the exit handlers registered by client are invoked before any code in the shutdown hook. This is more flexible but relies on the fact there is only one shutdown hook thread that runs once JVM starts to shutdown which currently is the case,  I think. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ankur","name":"ankur","key":"ankur","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ankur","active":true,"timeZone":"Etc/UTC"},"created":"2008-07-28T06:43:01.861+0000","updated":"2008-07-28T06:43:01.861+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12400866/comment/12617477","id":"12617477","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"body":"> What we want to do here is simply close our output stream before exiting so that data isn't lost. \n\nWe already have automatic files closing during shutdown.  It is done by the FileSystem shutdown hook.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"created":"2008-07-28T17:13:18.127+0000","updated":"2008-07-28T17:13:18.127+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12400866/comment/12617718","id":"12617718","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ankur","name":"ankur","key":"ankur","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ankur","active":true,"timeZone":"Etc/UTC"},"body":"Cool! Though I am not sure if this was always there or just got introduced a via some JIRA for 0.18 release. The behavior we saw with 0.17 release is that if a client in the middle of writing data gets a SIGTERM, then all the data is lost.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ankur","name":"ankur","key":"ankur","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ankur","active":true,"timeZone":"Etc/UTC"},"created":"2008-07-29T06:20:22.132+0000","updated":"2008-07-29T06:20:22.132+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12400866/comment/13083352","id":"13083352","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eli","name":"eli","key":"eli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eli Collins","active":true,"timeZone":"America/Los_Angeles"},"body":"Out of date","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eli","name":"eli","key":"eli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eli Collins","active":true,"timeZone":"America/Los_Angeles"},"created":"2011-08-11T18:39:07.179+0000","updated":"2011-08-11T18:39:07.179+0000"}],"maxResults":11,"total":11,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-3818/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0ia5z:"}}