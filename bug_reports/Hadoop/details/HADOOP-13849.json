{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13024422","self":"https://issues.apache.org/jira/rest/api/2/issue/13024422","key":"HADOOP-13849","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2016-11-30T17:49:13.702+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Dec 05 03:49:16 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-13849/watchers","watchCount":4,"isWatching":false},"created":"2016-11-30T13:10:39.532+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327179","id":"12327179","description":"2.6.0 release","name":"2.6.0","archived":false,"released":true,"releaseDate":"2014-11-18"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-12-05T03:49:16.930+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/4","description":"This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/reopened.png","name":"Reopened","id":"4","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12330961","id":"12330961","name":"common"}],"timeoriginalestimate":null,"description":"I tested bzip2 java-builtin and system-native compression, and I found the compress speed is almost the same. (I think the system-native should have better compress speed than java-builtin)\n\nMy test case:\n1. input file: 2.7GB text file without compression\n2. after bzip2 java-builtin compress: 457MB, 12min 4sec\n3. after bzip2 system-native compress: 457MB, 12min 19sec\n\nMy MapReduce Config:\nconf.set(\"mapreduce.fileoutputcommitter.marksuccessfuljobs\", \"false\");\nconf.set(\"mapreduce.output.fileoutputformat.compress\", \"true\");\nconf.set(\"mapreduce.output.fileoutputformat.compress.type\", \"BLOCK\");\nconf.set(\"mapreduce.output.fileoutputformat.compress.codec\", \"org.apache.hadoop.io.compress.BZip2Codec\");\nconf.set(\"io.compression.codec.bzip2.library\", \"java-builtin\"); // for java-builtin\nconf.set(\"io.compression.codec.bzip2.library\", \"system-native\"); // for system-native\n\nAnd I am sure I have enable the bzip2 native, the output of command \"hadoop checknative -a\" is as follows:\nNative library checking:\nhadoop:  true /usr/lib/hadoop/lib/native/libhadoop.so.1.0.0\nzlib:    true /lib64/libz.so.1\nsnappy:  true /usr/lib/hadoop/lib/native/libsnappy.so.1\nlz4:     true revision:99\nbzip2:   true /lib64/libbz2.so.1\nopenssl: true /usr/lib64/libcrypto.so","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Bzip2 java-builtin and system-native have almost the same compress speed","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=litao1990","name":"litao1990","key":"litao1990","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=litao1990&avatarId=21841","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=litao1990&avatarId=21841","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=litao1990&avatarId=21841","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=litao1990&avatarId=21841"},"displayName":"Tao Li","active":true,"timeZone":"Asia/Shanghai"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=litao1990","name":"litao1990","key":"litao1990","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=litao1990&avatarId=21841","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=litao1990&avatarId=21841","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=litao1990&avatarId=21841","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=litao1990&avatarId=21841"},"displayName":"Tao Li","active":true,"timeZone":"Asia/Shanghai"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"os version: redhat6\nhadoop version: 2.6.0\nnative bzip2 version: bzip2-devel-1.0.5-7.el6_0.x86_64\n","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13024422/comment/15709247","id":"15709247","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stevel%40apache.org","name":"stevel@apache.org","key":"stevel@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stevel%40apache.org&avatarId=16513","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stevel%40apache.org&avatarId=16513","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stevel%40apache.org&avatarId=16513","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stevel%40apache.org&avatarId=16513"},"displayName":"Steve Loughran","active":true,"timeZone":"Europe/London"},"body":"# you can see what code is used in the logs; if it says \"java builtin\" then it's using the java one; if it says system, then its using system.\n# there are other factors in performance, like disk bandwidth. you may not get speedup.\n# compare the decompress times too.\n\nClosing as invalid, sorry\nhttps://wiki.apache.org/hadoop/InvalidJiraIssues ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stevel%40apache.org","name":"stevel@apache.org","key":"stevel@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stevel%40apache.org&avatarId=16513","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stevel%40apache.org&avatarId=16513","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stevel%40apache.org&avatarId=16513","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stevel%40apache.org&avatarId=16513"},"displayName":"Steve Loughran","active":true,"timeZone":"Europe/London"},"created":"2016-11-30T17:49:13.702+0000","updated":"2016-11-30T17:49:13.702+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13024422/comment/15709305","id":"15709305","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=raviprak","name":"raviprak","key":"raviprak","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=raviprak&avatarId=10113","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=raviprak&avatarId=10113","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=raviprak&avatarId=10113","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=raviprak&avatarId=10113"},"displayName":"Ravi Prakash","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi Tao Li!\n\nThanks for your effort to benchmark the two implementations. Are you proposing to make one faster than the other?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=raviprak","name":"raviprak","key":"raviprak","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=raviprak&avatarId=10113","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=raviprak&avatarId=10113","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=raviprak&avatarId=10113","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=raviprak&avatarId=10113"},"displayName":"Ravi Prakash","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-11-30T18:12:28.767+0000","updated":"2016-11-30T18:12:28.767+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13024422/comment/15710655","id":"15710655","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=litao1990","name":"litao1990","key":"litao1990","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=litao1990&avatarId=21841","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=litao1990&avatarId=21841","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=litao1990&avatarId=21841","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=litao1990&avatarId=21841"},"displayName":"Tao Li","active":true,"timeZone":"Asia/Shanghai"},"body":"[~stevel@apache.org]\n1. I saw the \"using java builtin\" or \"using system-native\" in my test cases log, so I am sure my test cases are correct.\n2. My hardware CPU/Memory/Network bandwidh/Disk bandwidh are not bottleneck\n3. I have also tested decompress speed. I even found that the \"java builtin\" is faster than \"system native\"","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=litao1990","name":"litao1990","key":"litao1990","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=litao1990&avatarId=21841","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=litao1990&avatarId=21841","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=litao1990&avatarId=21841","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=litao1990&avatarId=21841"},"displayName":"Tao Li","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-01T02:48:25.430+0000","updated":"2016-12-01T02:48:25.430+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13024422/comment/15710658","id":"15710658","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=litao1990","name":"litao1990","key":"litao1990","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=litao1990&avatarId=21841","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=litao1990&avatarId=21841","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=litao1990&avatarId=21841","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=litao1990&avatarId=21841"},"displayName":"Tao Li","active":true,"timeZone":"Asia/Shanghai"},"body":"Yes. I think the \"system native\" should have better compress/decompress performance than \"java builtin\".","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=litao1990","name":"litao1990","key":"litao1990","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=litao1990&avatarId=21841","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=litao1990&avatarId=21841","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=litao1990&avatarId=21841","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=litao1990&avatarId=21841"},"displayName":"Tao Li","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-01T02:49:40.670+0000","updated":"2016-12-01T02:49:40.670+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13024422/comment/15711831","id":"15711831","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stevel%40apache.org","name":"stevel@apache.org","key":"stevel@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stevel%40apache.org&avatarId=16513","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stevel%40apache.org&avatarId=16513","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stevel%40apache.org&avatarId=16513","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stevel%40apache.org&avatarId=16513"},"displayName":"Steve Loughran","active":true,"timeZone":"Europe/London"},"body":"Well, if you want to work on it, feel free. \n\nhowever, know that the native codec uses the standard {{libbz2}}; there's not much that can be done in the Hadoop code to speed that up other than any improvements in how data is moved between the Java memory structures and those of libbz...if there are memory copies taking place then that could be hurting performance. Anything that can help there would be good.\n\n\nbq. I think the \"system native\" should have better compress/decompress performance than \"java builtin\".\n\nThat's something to explore. The latest Java 8 compilers are fast, and if the algorithms aren't doing lots of object creation, then bit operations in Java should be on a par with C-language actions against general registers. Where you would expect differences is if the native code uses some special CPU registers and operations (example, Intel SSE2) for significant performance. I don't know if bzip does that.\n\nThe fun part in benchmarking is isolating things. For codec performance, maybe have some test data being pre generated in CPU & cached in RAM. in standard formats (avro, orc), and the different codecs, then compressing that to RAM not HDD, so that the compression code is isolated from Disk IO, etc, etc. \n\nIf the isolated native code is faster than the java one, then the implication is that the bottleneck is elsewhere in the workflow, not the codec. Again: that's interesting information.\n\nbq. My hardware CPU/Memory/Network bandwidh/Disk bandwidh are not bottleneck\n\none of them is. Always —and it can be things like CPU cache latencies, excess synchronization in the code, even branch-misprediction in the CPU can hurt efficiency. FWIW, Flamegraphs are current the tool of choice for visualising performance during microbenchmarks\n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stevel%40apache.org","name":"stevel@apache.org","key":"stevel@apache.org","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=stevel%40apache.org&avatarId=16513","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=stevel%40apache.org&avatarId=16513","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=stevel%40apache.org&avatarId=16513","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=stevel%40apache.org&avatarId=16513"},"displayName":"Steve Loughran","active":true,"timeZone":"Europe/London"},"created":"2016-12-01T12:22:12.913+0000","updated":"2016-12-01T12:22:12.913+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13024422/comment/15712862","id":"15712862","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=raviprak","name":"raviprak","key":"raviprak","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=raviprak&avatarId=10113","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=raviprak&avatarId=10113","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=raviprak&avatarId=10113","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=raviprak&avatarId=10113"},"displayName":"Ravi Prakash","active":true,"timeZone":"America/Los_Angeles"},"body":"That makes sense Steve and Tao Li! Thanks for your efforts. Please keep us updated if you find any bottlenecks. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=raviprak","name":"raviprak","key":"raviprak","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=raviprak&avatarId=10113","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=raviprak&avatarId=10113","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=raviprak&avatarId=10113","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=raviprak&avatarId=10113"},"displayName":"Ravi Prakash","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-12-01T19:36:06.029+0000","updated":"2016-12-01T19:36:06.029+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13024422/comment/15721131","id":"15721131","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=litao1990","name":"litao1990","key":"litao1990","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=litao1990&avatarId=21841","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=litao1990&avatarId=21841","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=litao1990&avatarId=21841","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=litao1990&avatarId=21841"},"displayName":"Tao Li","active":true,"timeZone":"Asia/Shanghai"},"body":"[~stevel@apache.org] Thanks Steve. I will do some profiling in the future to find the bottleneck.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=litao1990","name":"litao1990","key":"litao1990","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=litao1990&avatarId=21841","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=litao1990&avatarId=21841","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=litao1990&avatarId=21841","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=litao1990&avatarId=21841"},"displayName":"Tao Li","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-12-05T03:49:16.930+0000","updated":"2016-12-05T03:49:16.930+0000"}],"maxResults":7,"total":7,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-13849/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i36ynj:"}}