{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12952663","self":"https://issues.apache.org/jira/rest/api/2/issue/12952663","key":"HADOOP-12955","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12335733","id":"12335733","description":"3.0.0-alpha1 release","name":"3.0.0-alpha1","archived":false,"released":true,"releaseDate":"2016-09-03"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2016-03-23T12:58:50.799+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Mar 31 22:48:57 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_31796263_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_1_*:*_733334523","customfield_12312321":null,"resolutiondate":"2016-03-31T22:14:08.653+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-12955/watchers","watchCount":8,"isWatching":false},"created":"2016-03-23T01:41:57.916+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[{"id":"12462008","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12462008","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12953692","key":"HADOOP-12966","self":"https://issues.apache.org/jira/rest/api/2/issue/12953692","fields":{"summary":"TestNativeLibraryChecker is crashing","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-05-12T18:25:15.808+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312070","id":"12312070","name":"native","description":"The native code that is loaded into the jvm"}],"timeoriginalestimate":null,"description":"Ref. the comment [here|https://issues.apache.org/jira/browse/HADOOP-11540?focusedCommentId=15207619&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15207619]. \n\nWhen run hadoop checknative, it also failed. Got something like below from log:\n{noformat}\nStack: [0x00007f2b9d405000,0x00007f2b9d506000],  sp=0x00007f2b9d504748,  free space=1021k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nV  [libjvm.so+0xa90c90]  UTF8::unicode_length(char const*)+0x0\nV  [libjvm.so+0x6ddfc3]  jni_NewStringUTF+0xc3\nj  org.apache.hadoop.io.erasurecode.ErasureCodeNative.getLibraryName()Ljava/lang/String;+0\nj  org.apache.hadoop.util.NativeLibraryChecker.main([Ljava/lang/String;)V+212\nv  ~StubRoutines::call_stub\nV  [libjvm.so+0x68c616]  JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*)+0x1056\nV  [libjvm.so+0x6cdc32]  jni_invoke_static(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*)+0x362\nV  [libjvm.so+0x6ea63a]  jni_CallStaticVoidMethod+0x17a\nC  [libjli.so+0x7bcc]  JavaMain+0x80c\nC  [libpthread.so.0+0x8182]  start_thread+0xc2\n\nJava frames: (J=compiled Java code, j=interpreted, Vv=VM code)\nj  org.apache.hadoop.io.erasurecode.ErasureCodeNative.getLibraryName()Ljava/lang/String;+0\nj  org.apache.hadoop.util.NativeLibraryChecker.main([Ljava/lang/String;)V+212\nv  ~StubRoutines::call_stub\n{noformat}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12794965","id":"12794965","filename":"HADOOP-12955-v1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-23T09:17:04.073+0000","size":3159,"mimeType":"text/x-diff","content":"https://issues.apache.org/jira/secure/attachment/12794965/HADOOP-12955-v1.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12795177","id":"12795177","filename":"HADOOP-12955-v2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-24T07:21:47.943+0000","size":4609,"mimeType":"text/x-diff","content":"https://issues.apache.org/jira/secure/attachment/12795177/HADOOP-12955-v2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12795579","id":"12795579","filename":"HADOOP-12955-v3.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-28T06:17:41.289+0000","size":5916,"mimeType":"text/x-diff","content":"https://issues.apache.org/jira/secure/attachment/12795579/HADOOP-12955-v3.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12795813","id":"12795813","filename":"HADOOP-12955-v4.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-29T10:32:55.008+0000","size":5829,"mimeType":"text/x-diff","content":"https://issues.apache.org/jira/secure/attachment/12795813/HADOOP-12955-v4.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Fix bugs in the initialization of the ISA-L library JNI bindings","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15208117","id":"15208117","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"Uploaded a patch for the fix. The root causes for the crash when calling {{Java_org_apache_hadoop_io_erasurecode_ErasureCodeNative_getLibraryName}} are: 1) the library isn't loaded; 2) {{get_library_name}} returns pointer to local variable. \n\nTest passed locally as follows.\n{noformat}\n[root@zkdesk hadoop-3.0.0-SNAPSHOT]# bin/hadoop checknative\n16/03/24 17:05:49 INFO bzip2.Bzip2Factory: Successfully loaded & initialized native-bzip2 library system-native\n16/03/24 17:05:49 INFO zlib.ZlibFactory: Successfully loaded & initialized native-zlib library\nNative library checking:\nhadoop:  true /home/workspace/hadoop3/hadoop-dist/target/hadoop-3.0.0-SNAPSHOT/lib/native/libhadoop.so.1.0.0\nzlib:    true /lib64/libz.so.1\nsnappy:  true /lib64/libsnappy.so.1\nlz4:     true revision:99\nbzip2:   true /lib64/libbz2.so.1\nopenssl: true /lib64/libcrypto.so\nISA-L:   true /home/workspace/hadoop3/hadoop-dist/target/hadoop-3.0.0-SNAPSHOT/lib/native/libisal.so.2\n{noformat}\n\n[~cmccabe], sorry for not catching this in HADOOP-11996 because I forgot test the command while providing later revision of patches there. Would you help review this? Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-23T09:17:04.078+0000","updated":"2016-03-23T09:17:04.078+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15208120","id":"15208120","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"I guess when YETUS-222 is committed, the ISA-L related building will be in the loop so such cases will be caught the first time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-23T09:18:51.864+0000","updated":"2016-03-23T09:18:51.864+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15208365","id":"15208365","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 20s {color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 10m 6s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m 2s {color} | {color:green} trunk passed with JDK v1.8.0_74 {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 20s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 20s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 20s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 57s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m 1s {color} | {color:green} the patch passed with JDK v1.8.0_74 {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 47m 26s {color} | {color:green} root-jdk1.8.0_74 with JDK v1.8.0_74 generated 0 new + 19 unchanged - 2 fixed = 19 total (was 21) {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 12m 1s {color} | {color:green} root in the patch passed with JDK v1.8.0_74. {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 12m 1s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 23s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |\n| {color:red}-1{color} | {color:red} cc {color} | {color:red} 57m 50s {color} | {color:red} root-jdk1.7.0_95 with JDK v1.7.0_95 generated 3 new + 26 unchanged - 5 fixed = 29 total (was 31) {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 10m 23s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 10m 23s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 18s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 22s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 10m 47s {color} | {color:red} hadoop-common in the patch failed with JDK v1.8.0_74. {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 9m 59s {color} | {color:red} hadoop-common in the patch failed with JDK v1.7.0_95. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 34s {color} | {color:green} Patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 81m 17s {color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| JDK v1.8.0_74 Failed junit tests | hadoop.ipc.TestRPCWaitForProxy |\n|   | hadoop.fs.shell.find.TestIname |\n| JDK v1.7.0_95 Failed junit tests | hadoop.ipc.TestRPCWaitForProxy |\n|   | hadoop.fs.shell.find.TestPrint0 |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:fbe3e86 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12794965/HADOOP-12955-v1.patch |\n| JIRA Issue | HADOOP-12955 |\n| Optional Tests |  asflicense  compile  cc  mvnsite  javac  unit  |\n| uname | Linux 9e32ecfc6d42 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / a107cee |\n| Default Java | 1.7.0_95 |\n| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_74 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |\n| cc | root-jdk1.7.0_95: https://builds.apache.org/job/PreCommit-HADOOP-Build/8906/artifact/patchprocess/diff-compile-cc-root-jdk1.7.0_95.txt |\n| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8906/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_74.txt |\n| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8906/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_95.txt |\n| unit test logs |  https://builds.apache.org/job/PreCommit-HADOOP-Build/8906/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_74.txt https://builds.apache.org/job/PreCommit-HADOOP-Build/8906/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_95.txt |\n| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8906/testReport/ |\n| modules | C: hadoop-common-project/hadoop-common U: hadoop-common-project/hadoop-common |\n| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8906/console |\n| Powered by | Apache Yetus 0.2.0   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-23T12:58:50.799+0000","updated":"2016-03-23T12:58:50.799+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15209299","id":"15209299","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks, [~drankye].  I agree that building using {{\\-Drequire.isal}} is important, and I hope we can get YETUS-222 in soon.\n\n{code}\n124 void get_library_name(char* buf, size_t buf_len) {\n125 #ifdef UNIX \n126   Dl_info dl_info;\n127\n128   if (isaLoader == NULL || isaLoader->ec_encode_data == NULL) {\n129     strncpy(buf, HADOOP_ISAL_LIBRARY, buf_len);\n130   }\n131\n132   if(dladdr(isaLoader->ec_encode_data, &dl_info)) {\n133     strncpy(buf, dl_info.dli_fname, buf_len);\n134   }\n135 #else\n136   LPTSTR filename = NULL;\n137\n138   if (isaLoader == NULL || isaLoader->libec == NULL) {\n139     strncpy(buf, HADOOP_ISAL_LIBRARY, buf_len);\n140   }\n141\n142   if (GetModuleFileName(isaLoader->libec, filename, 256) > 0) {\n143     strncpy(buf, filename, buf_len);\n144   }\n145 #endif\n{code}\n\nRight now, {{buf}} is left uninitialized if neither if statement is taken in the non-UNIX code path.  This case should be an error instead.\n\nPlease do not use {{strncpy}}.  It zeroes the entire end of the buffer, which is unnecessary in this case.  It also can produce a buffer which is not null-terminated if {{src}} is longer than {{dst}}.  Instead, use {{snprintf(buf, buf_len, \"%s\", source);}}.\n\nYou need to check if the string you're trying to copy is too long, and return an error if that is so.  Please do not silently truncate the name string.\n\nWhy is there no return statement on line 140?  Is there ever a case where we would want to overwrite the string we wrote on line 139 later in the function?\n\nThe potential error coming from {{loadLib}} is not handled.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-03-23T22:24:50.823+0000","updated":"2016-03-23T22:24:50.823+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15209562","id":"15209562","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"Thanks [~cmccabe] for the valuable review comments!\nbq. buf is left uninitialized if neither if statement is taken in the non-UNIX code path.\nYes buf should be ensured to be initialized by this call. Will fix this.\nbq. Please do not use strncpy. ... Instead, use snprintf(buf, buf_len, \"%s\", source);\nSounds great!\nbq. You need to check if the string you're trying to copy is too long, and return an error if that is so. Please do not silently truncate the name string.\nOK, I will make the function return an error if any. Return null if no error at all.\nbq. Why is there no return statement on line 140? \nIt's my stupid mistake. Good catch. It should return immediately.\nbq. The potential error coming from loadLib is not handled.\nI thought loadLib handles its error itself by throwing an exception. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-24T01:45:10.132+0000","updated":"2016-03-24T01:45:10.132+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15209906","id":"15209906","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"Updated the patch according to review comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-24T07:21:47.947+0000","updated":"2016-03-24T07:21:47.947+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15210091","id":"15210091","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 18s {color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 10m 55s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 56s {color} | {color:green} trunk passed with JDK v1.8.0_74 {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 11m 34s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 27s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 24s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 1m 10s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 58s {color} | {color:green} the patch passed with JDK v1.8.0_74 {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 55m 44s {color} | {color:green} root-jdk1.8.0_74 with JDK v1.8.0_74 generated 0 new + 11 unchanged - 10 fixed = 11 total (was 21) {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 14m 58s {color} | {color:green} root in the patch passed with JDK v1.8.0_74. {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 14m 58s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 12m 20s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 68m 5s {color} | {color:green} root-jdk1.7.0_95 with JDK v1.7.0_95 generated 0 new + 21 unchanged - 10 fixed = 21 total (was 31) {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 12m 20s {color} | {color:green} root in the patch passed with JDK v1.7.0_95. {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 12m 20s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 33s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 25s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 14m 15s {color} | {color:red} hadoop-common in the patch failed with JDK v1.8.0_74. {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 12m 25s {color} | {color:red} hadoop-common in the patch failed with JDK v1.7.0_95. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 40s {color} | {color:green} Patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 97m 48s {color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| JDK v1.8.0_74 Failed junit tests | hadoop.ipc.TestRPCWaitForProxy |\n|   | hadoop.fs.shell.find.TestIname |\n|   | hadoop.fs.shell.find.TestPrint0 |\n|   | hadoop.fs.shell.find.TestPrint |\n|   | hadoop.fs.shell.find.TestName |\n| JDK v1.7.0_95 Failed junit tests | hadoop.ipc.TestRPCWaitForProxy |\n|   | hadoop.fs.shell.find.TestIname |\n|   | hadoop.security.token.delegation.TestZKDelegationTokenSecretManager |\n|   | hadoop.fs.shell.find.TestPrint0 |\n|   | hadoop.fs.shell.find.TestPrint |\n|   | hadoop.fs.shell.find.TestName |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:fbe3e86 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12795177/HADOOP-12955-v2.patch |\n| JIRA Issue | HADOOP-12955 |\n| Optional Tests |  asflicense  compile  cc  mvnsite  javac  unit  |\n| uname | Linux cb98028f283e 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 19b645c |\n| Default Java | 1.7.0_95 |\n| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_74 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |\n| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8911/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_74.txt |\n| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8911/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_95.txt |\n| unit test logs |  https://builds.apache.org/job/PreCommit-HADOOP-Build/8911/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_74.txt https://builds.apache.org/job/PreCommit-HADOOP-Build/8911/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_95.txt |\n| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8911/testReport/ |\n| modules | C: hadoop-common-project/hadoop-common U: hadoop-common-project/hadoop-common |\n| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8911/console |\n| Powered by | Apache Yetus 0.2.0   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-24T11:18:10.909+0000","updated":"2016-03-24T11:18:10.909+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15212543","id":"15212543","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for the revisions.  It is good to see checking for names which are too long, as well as fixes to the other little bugs.\n\nIf the error string being returned is a constant string, it should be a {{const char*}} rather than a {{char*}}.  Also, please document that the string does not need to be freed by the caller in the doxygen.\n\nbq. I thought loadLib handles its error itself by throwing an exception.\n\nC does not have exceptions.  When the C code calls a Java method via JNI, the C code must check for an error condition and return if that occurs.  if the C caller does not check, execution will continue.  The results of calling many JNI methods when an exception is raised are undefined.  I believe the situation is similar when calling Java code through C++, even though that language does have exceptions.  The important thing to keep in mind is that Java exceptions do not translate into the JNI code.\n\nCan you fix the cases where we are not checking for java exceptions?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-03-25T22:56:37.860+0000","updated":"2016-03-25T22:56:37.860+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15212677","id":"15212677","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"Thanks [~cmccabe] for the further helpful explanation. I will investigate the cases and fix them. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-26T00:59:17.440+0000","updated":"2016-03-26T00:59:17.440+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15213714","id":"15213714","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"After looking into {{THROW}} and the question how to do exception handling in JNI, I agree we need to do the error checking after the call {{loadLib}}  in {{Java_org_apache_hadoop_io_erasurecode_ErasureCodeNative_getLibraryName}} by using something like {{ExceptionOccurred}}. \n\nWhile looking around more, I found there is some codes to clean up in {{NativeLibraryChecker}} and also make consistent with other native things like openssl. So the resultant codes will remove the call to loadLib totally. The JNI function {{getLibraryName}} should assume {{loadLibrary}} is called already. If not called, then the simple constant like {{HADOOP_ISAL_LIBRARY}} will be returned.\n\nWill update the patch. [~cmccabe] would you please help with check it, thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-28T01:48:24.974+0000","updated":"2016-03-28T01:48:24.974+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15213855","id":"15213855","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"Updated the patch according to above discussions. Tested and passed with or without ISA-L installed or the related options.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-28T06:17:41.293+0000","updated":"2016-03-28T06:17:41.293+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15213927","id":"15213927","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 25s {color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 26s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 11m 6s {color} | {color:green} trunk passed with JDK v1.8.0_74 {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 9m 36s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 24s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 16s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 15s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 7s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 14s {color} | {color:green} trunk passed with JDK v1.8.0_74 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 6s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 44s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 9m 4s {color} | {color:green} the patch passed with JDK v1.8.0_74 {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 14m 26s {color} | {color:green} root-jdk1.8.0_74 with JDK v1.8.0_74 generated 0 new + 11 unchanged - 10 fixed = 11 total (was 21) {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 9m 4s {color} | {color:green} root in the patch passed with JDK v1.8.0_74. {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 9m 4s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 7m 32s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 21m 58s {color} | {color:green} root-jdk1.7.0_95 with JDK v1.7.0_95 generated 0 new + 21 unchanged - 10 fixed = 21 total (was 31) {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 7m 32s {color} | {color:green} root in the patch passed with JDK v1.7.0_95. {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 7m 32s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 19s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 1s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 13s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 52s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 5s {color} | {color:green} the patch passed with JDK v1.8.0_74 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 8s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 13m 49s {color} | {color:red} hadoop-common in the patch failed with JDK v1.8.0_74. {color} |\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 10m 10s {color} | {color:green} hadoop-common in the patch passed with JDK v1.7.0_95. {color} |\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 22s {color} | {color:red} Patch generated 1 ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 83m 23s {color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| JDK v1.8.0_74 Failed junit tests | hadoop.fs.shell.find.TestPrint |\n|   | hadoop.fs.shell.find.TestIname |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:fbe3e86 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12795579/HADOOP-12955-v3.patch |\n| JIRA Issue | HADOOP-12955 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  cc  |\n| uname | Linux fe8d86ca24d7 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 55ae143 |\n| Default Java | 1.7.0_95 |\n| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_74 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8938/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_74.txt |\n| unit test logs |  https://builds.apache.org/job/PreCommit-HADOOP-Build/8938/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_74.txt |\n| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8938/testReport/ |\n| asflicense | https://builds.apache.org/job/PreCommit-HADOOP-Build/8938/artifact/patchprocess/patch-asflicense-problems.txt |\n| modules | C: hadoop-common-project/hadoop-common U: hadoop-common-project/hadoop-common |\n| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8938/console |\n| Powered by | Apache Yetus 0.2.0   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-28T07:43:18.454+0000","updated":"2016-03-28T07:43:18.454+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15215162","id":"15215162","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"{code}\n  if (error != NULL) {\n    THROW(env, \"java/lang/UnsatisfiedLinkError\", error);\n  }\n{code}\nThere needs to be a {{return null;}} here after the {{THROW}} macro.\n\n{code}\n-      try {\n-        isalDetail = ErasureCodeNative.getLoadingFailureReason();\n-        isalDetail = ErasureCodeNative.getLibraryName();\n-        isalLoaded = true;\n-      } catch (UnsatisfiedLinkError e) {\n+      isalDetail = ErasureCodeNative.getLoadingFailureReason();\n+      if (isalDetail != null) {\n         isalLoaded = false;\n+      } else {\n+        try {\n+          isalDetail = ErasureCodeNative.getLibraryName();\n+          isalLoaded = true;\n+        } catch (UnsatisfiedLinkError e) {\n+          isalDetail = e.getMessage();\n+          isalLoaded = false;\n+        }\n{code}\nI don't understand the rationale for doing this differently than the other native libraries.  If there is an {{UnsatisfiedLinkError}}, this should be reflected by the return value of {{ErasureCodeNative#getLoadingFailureReason}}.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-03-29T00:41:42.294+0000","updated":"2016-03-29T00:41:42.294+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15215173","id":"15215173","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"Thanks Colin!\nbq. There needs to be a return null; here after the THROW macro.\nYes it's needed. Sorry I may accidentally lost the line while changing around.\nbq. If there is an UnsatisfiedLinkError, this should be reflected by the return value of ErasureCodeNative#getLoadingFailureReason.\nNote getLoadingFailureReason can capture exceptions during loadLibrary. getLibraryName may also throw exception now. To be consistent, I'm wondering if we would do the same thing for other native things as well in case getLibraryName is allowed to throw exception in all the places.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-29T00:49:42.748+0000","updated":"2016-03-29T00:49:42.748+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15215194","id":"15215194","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"bq. There needs to be a return null; here after the THROW macro.\nI thought you meant the code in getLibraryName. It's a new mistake. Thanks for catching it. :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-29T01:07:19.594+0000","updated":"2016-03-29T01:07:19.594+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15215195","id":"15215195","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"In general, the other native libraries expect {{getLibraryName}} to succeed if the initialization succeeded.  There may be some extremely rare cases where it doesn't, but this should reflect an internal bug 99% of the time.  In contrast, initialization routinely fails because of missing libraries.\n\nI think it would be safer to have the initialization function set up a static variable so that it contained the library name.  That way, we only have to expect a failure in one place, and we wouldn't even need a {{getLibraryName}} function.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-03-29T01:07:56.187+0000","updated":"2016-03-29T01:07:56.187+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15215201","id":"15215201","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"bq. I think it would be safer to have the initialization function set up a static variable so that it contained the library name. That way, we only have to expect a failure in one place, and we wouldn't even need a getLibraryName function.\nGood idea and I agree with the new approach. Do you mean we'd refactor all the relate native codes? getLibraryName may be still needed as a JNI call to retrieve the library name to print in Java codes.\n\nGuess we'd like to have a small change for the aspect to move on this. How about right now getting away the exception catching for {{ErasureCodeNative.getLibraryName()}} and do the refactoring suggested above separately?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-29T01:16:20.367+0000","updated":"2016-03-29T01:16:20.367+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15215209","id":"15215209","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"bq. we wouldn't even need a getLibraryName function.\nIf you meant the c function {{const char* get_library_name(char* buf, size_t buf_len)}}, yes it can be avoided in the new approach.\nI may use the new approach in this patch just for the erasure coding part. For other native things, we may consider it separately. Sounds good?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-29T01:26:45.802+0000","updated":"2016-03-29T01:26:45.802+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15215818","id":"15215818","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"Updated the patch:\n* Get the library name ready during loading phase. If loading successful, the library name is sure to be ready to get;\n* Put the library name into the {{IsaLibLoader}} structure as a field for later getting;\n* Got rid of the pure c function {{get_library_name}} and allow to access the loader object directly;\n* Removed the inconsistent codes in {{NativeLibraryChecker}}.\n\nThe resultant codes look much clean than before. Thanks Colin for the more review in advance.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-29T10:32:55.019+0000","updated":"2016-03-29T10:32:55.019+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15215896","id":"15215896","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 18s {color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 31s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 8m 56s {color} | {color:green} trunk passed with JDK v1.8.0_74 {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 7m 55s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 22s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 0s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 14s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 43s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 0s {color} | {color:green} trunk passed with JDK v1.8.0_74 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 4s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 46s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 9m 9s {color} | {color:green} the patch passed with JDK v1.8.0_74 {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 13m 54s {color} | {color:green} root-jdk1.8.0_74 with JDK v1.8.0_74 generated 0 new + 11 unchanged - 10 fixed = 11 total (was 21) {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 9m 9s {color} | {color:green} root in the patch passed with JDK v1.8.0_74. {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 9m 9s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 7m 27s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |\n| {color:red}-1{color} | {color:red} cc {color} | {color:red} 21m 21s {color} | {color:red} root-jdk1.7.0_95 with JDK v1.7.0_95 generated 1 new + 20 unchanged - 11 fixed = 21 total (was 31) {color} |\n| {color:green}+1{color} | {color:green} cc {color} | {color:green} 7m 27s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 7m 27s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 22s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 1s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 14s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 0s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 6s {color} | {color:green} the patch passed with JDK v1.8.0_74 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 15s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 14m 36s {color} | {color:red} hadoop-common in the patch failed with JDK v1.8.0_74. {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 14m 3s {color} | {color:red} hadoop-common in the patch failed with JDK v1.7.0_95. {color} |\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 24s {color} | {color:red} Patch generated 1 ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 83m 37s {color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| JDK v1.8.0_74 Failed junit tests | hadoop.fs.shell.find.TestPrint |\n|   | hadoop.fs.shell.find.TestPrint0 |\n|   | hadoop.fs.shell.find.TestIname |\n|   | hadoop.fs.shell.find.TestName |\n|   | hadoop.ipc.TestRPCWaitForProxy |\n| JDK v1.7.0_95 Failed junit tests | hadoop.net.TestDNS |\n|   | hadoop.fs.shell.find.TestPrint |\n|   | hadoop.fs.shell.find.TestPrint0 |\n|   | hadoop.fs.shell.find.TestIname |\n|   | hadoop.fs.shell.find.TestName |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:fbe3e86 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12795813/HADOOP-12955-v4.patch |\n| JIRA Issue | HADOOP-12955 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  cc  |\n| uname | Linux a3517ca9210b 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 0050fa5 |\n| Default Java | 1.7.0_95 |\n| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_74 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |\n| findbugs | v3.0.0 |\n| cc | root-jdk1.7.0_95: https://builds.apache.org/job/PreCommit-HADOOP-Build/8954/artifact/patchprocess/diff-compile-cc-root-jdk1.7.0_95.txt |\n| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8954/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_74.txt |\n| unit | https://builds.apache.org/job/PreCommit-HADOOP-Build/8954/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_95.txt |\n| unit test logs |  https://builds.apache.org/job/PreCommit-HADOOP-Build/8954/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.8.0_74.txt https://builds.apache.org/job/PreCommit-HADOOP-Build/8954/artifact/patchprocess/patch-unit-hadoop-common-project_hadoop-common-jdk1.7.0_95.txt |\n| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HADOOP-Build/8954/testReport/ |\n| asflicense | https://builds.apache.org/job/PreCommit-HADOOP-Build/8954/artifact/patchprocess/patch-asflicense-problems.txt |\n| modules | C: hadoop-common-project/hadoop-common U: hadoop-common-project/hadoop-common |\n| Console output | https://builds.apache.org/job/PreCommit-HADOOP-Build/8954/console |\n| Powered by | Apache Yetus 0.2.0   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-29T12:02:16.308+0000","updated":"2016-03-29T12:02:16.308+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15215926","id":"15215926","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"The cc warning and test failures are not relevant. Building passed on Windows.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-29T12:26:10.286+0000","updated":"2016-03-29T12:26:10.286+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15220745","id":"15220745","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"+1.  Thanks, [~drankye].","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-03-31T22:09:02.849+0000","updated":"2016-03-31T22:09:02.849+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15220757","id":"15220757","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"body":"Thanks Colin for driving into this nice result and the commit!! Much learned.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=drankye","name":"drankye","key":"drankye","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kai Zheng","active":true,"timeZone":"Asia/Chongqing"},"created":"2016-03-31T22:17:12.044+0000","updated":"2016-03-31T22:17:12.044+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12952663/comment/15220811","id":"15220811","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"FAILURE: Integrated in Hadoop-trunk-Commit #9538 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/9538/])\nHADOOP-12955. Fix bugs in the initialization of the ISA-L library JNI (cmccabe: rev 19639785f5e9c483558ce585287b9dda9d626263)\n* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/erasurecode/isal_load.h\n* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/erasurecode/erasure_coder.c\n* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/NativeLibraryChecker.java\n* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/erasurecode/jni_erasure_code_native.c\n* hadoop-common-project/hadoop-common/src/main/native/src/org/apache/hadoop/io/erasurecode/isal_load.c\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-31T22:48:57.433+0000","updated":"2016-03-31T22:48:57.433+0000"}],"maxResults":24,"total":24,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-12955/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2v2c7:"}}