{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12628666","self":"https://issues.apache.org/jira/rest/api/2/issue/12628666","key":"HADOOP-9232","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12323306","id":"12323306","description":"Trunk branch for Windows support","name":"trunk-win","archived":true,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-01-28T05:23:06.760+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue Mar 05 19:57:58 UTC 2013","customfield_12310420":"307191","customfield_12312320":null,"customfield_12310222":"10002_*:*_1_*:*_51387222_*|*_1_*:*_2_*:*_3559291078_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2013-03-05T02:22:33.477+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-9232/watchers","watchCount":8,"isWatching":false},"created":"2013-01-22T07:24:35.219+0000","customfield_12310192":null,"customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12323306","id":"12323306","description":"Trunk branch for Windows support","name":"trunk-win","archived":true,"released":false}],"issuelinks":[{"id":"12371858","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12371858","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12657119","key":"HADOOP-9718","self":"https://issues.apache.org/jira/rest/api/2/issue/12657119","fields":{"summary":"Branch-1-win TestGroupFallback#testGroupWithFallback() failed caused by java.lang.UnsatisfiedLinkError","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12364439","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12364439","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12632678","key":"HADOOP-9312","self":"https://issues.apache.org/jira/rest/api/2/issue/12632678","fields":{"summary":"JniBasedUnixGroupsMapping#getGroupForUser can potentially leak memory","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12363395","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12363395","type":{"id":"12310050","name":"Regression","inward":"is broken by","outward":"breaks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310050"},"inwardIssue":{"id":"12604135","key":"HADOOP-8712","self":"https://issues.apache.org/jira/rest/api/2/issue/12604135","fields":{"summary":"Change default hadoop.security.group.mapping","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}},{"id":"12364078","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12364078","type":{"id":"12310040","name":"Required","inward":"is required by","outward":"requires","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310040"},"inwardIssue":{"id":"12631183","key":"HADOOP-9290","self":"https://issues.apache.org/jira/rest/api/2/issue/12631183","fields":{"summary":"Some tests cannot load native library","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2013-07-10T17:55:38.905+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312070","id":"12312070","name":"native","description":"The native code that is loaded into the jvm"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12312526","id":"12312526","name":"security"}],"timeoriginalestimate":null,"description":"{{JniBasedUnixGroupsMapping}} calls native code which isn't implemented properly for Windows, causing {{UnsatisfiedLinkError}}.  The fallback logic in {{JniBasedUnixGroupsMappingWithFallback}} works by checking if the native code is loaded during startup.  In this case, hadoop.dll is present and loaded, but it doesn't contain the right code.  There will be no attempt to fallback to {{ShellBasedUnixGroupsMapping}}.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12323306","id":"12323306","description":"Trunk branch for Windows support","name":"trunk-win","archived":true,"released":false}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12566719","id":"12566719","filename":"HADOOP-9232.branch-trunk-win.jnigroups.2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"created":"2013-01-28T05:35:35.651+0000","size":6337,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12566719/HADOOP-9232.branch-trunk-win.jnigroups.2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12569402","id":"12569402","filename":"HADOOP-9232.branch-trunk-win.jnigroups.3.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"created":"2013-02-14T22:17:09.480+0000","size":6452,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12569402/HADOOP-9232.branch-trunk-win.jnigroups.3.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12566716","id":"12566716","filename":"HADOOP-9232.branch-trunk-win.jnigroups.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"created":"2013-01-28T05:23:06.755+0000","size":6149,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12566716/HADOOP-9232.branch-trunk-win.jnigroups.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12572011","id":"12572011","filename":"HADOOP-9232.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-05T02:20:10.399+0000","size":6222,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12572011/HADOOP-9232.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"269352","customfield_12312823":null,"summary":"JniBasedUnixGroupsMappingWithFallback fails on Windows with UnsatisfiedLinkError","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13559448","id":"13559448","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"HADOOP-8712 will change the default hadoop.security.group.mapping to {{JniBasedUnixGroupsMappingWithFallback}}.  This will break on Windows.  A workaround would be to manually configure hadoop.security.group.mapping back to {{ShellBasedUnixGroupsMapping}}.\n\nWe can fix the problem by providing a proper implementation of the method on Windows in hadoop.dll.  There is already similar logic in the winutils.exe groups command.\n\nTo see the problem, start a NameNode and DataNode with hadoop.dll on the path and core-site.xml containing:\n\n{code}\n<property>\n  <name>hadoop.security.group.mapping</name>\n  <value>org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback</value>\n</property>\n{code}\n\nWhen the DataNode connects to the NameNode, you'll see this stack trace in the NameNode log:\n\n{noformat}\n13/01/21 23:19:26 WARN ipc.Server: IPC Server handler 0 on 19000, call org.apache.hadoop.hdfs.server.protocol.DatanodeProtocol.versionRequest from 127.0.0.1:55352: error: java.lang.UnsatisfiedLinkError: org.apache.hadoop.security.JniBasedUnixGroupsMapping.getGroupForUser(Ljava/lang/String;)[Ljava/lang/String;\njava.lang.UnsatisfiedLinkError: org.apache.hadoop.security.JniBasedUnixGroupsMapping.getGroupForUser(Ljava/lang/String;)[Ljava/lang/String;\n\tat org.apache.hadoop.security.JniBasedUnixGroupsMapping.getGroupForUser(Native Method)\n\tat org.apache.hadoop.security.JniBasedUnixGroupsMapping.getGroups(JniBasedUnixGroupsMapping.java:58)\n\tat org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback.getGroups(JniBasedUnixGroupsMappingWithFallback.java:50)\n\tat org.apache.hadoop.security.Groups.getGroups(Groups.java:89)\n\tat org.apache.hadoop.security.UserGroupInformation.getGroupNames(UserGroupInformation.java:1311)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.<init>(FSPermissionChecker.java:51)\n\tat org.apache.hadoop.hdfs.server.namenode.FSPermissionChecker.checkSuperuserPrivilege(FSPermissionChecker.java:72)\n\tat org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkSuperuserPrivilege(FSNamesystem.java:4591)\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.versionRequest(NameNodeRpcServer.java:962)\n\tat org.apache.hadoop.hdfs.protocolPB.DatanodeProtocolServerSideTranslatorPB.versionRequest(DatanodeProtocolServerSideTranslatorPB.java:203)\n\tat org.apache.hadoop.hdfs.protocol.proto.DatanodeProtocolProtos$DatanodeProtocolService$2.callBlockingMethod(DatanodeProtocolProtos.java:18305)\n\tat org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:474)\n\tat org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1018)\n\tat org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:1778)\n\tat org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:1774)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:396)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1450)\n\tat org.apache.hadoop.ipc.Server$Handler.run(Server.java:1772)\n{noformat}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-01-22T07:32:03.796+0000","updated":"2013-01-22T07:32:03.796+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13564050","id":"13564050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"body":"Attaching the patch.\n\nI introduced a separate c file for Windows native implementation, otherwise, I'd have to ifdef many places in the file.\n\nTestJNIGroupsMapping passes with the patch. I also verified that HDFS (NameNode/DataNode) works fine with the patch (previously NameNode was throwing an exception). \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"created":"2013-01-28T05:23:06.760+0000","updated":"2013-01-28T05:23:06.760+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13564055","id":"13564055","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12566716/HADOOP-9232.branch-trunk-win.jnigroups.patch\n  against trunk revision .\n\n    {color:red}-1 patch{color}.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2098//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-01-28T05:32:04.874+0000","updated":"2013-01-28T05:32:04.874+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13564065","id":"13564065","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12566719/HADOOP-9232.branch-trunk-win.jnigroups.2.patch\n  against trunk revision .\n\n    {color:red}-1 patch{color}.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-HADOOP-Build/2099//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-01-28T05:41:59.692+0000","updated":"2013-01-28T05:41:59.692+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13564593","id":"13564593","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks, Ivan.  I applied the patch locally and tested a few HDFS operations and MapReduce jobs.  I didn't need to override the config to {{ShellBasedUnixGroupsMapping}}.  It worked great!  I also did a build with -Pnative in an Ubuntu VM to confirm that it didn't accidentally harm native compilation on Linux.\n\nHere are a few questions:\n\n1. Regarding {{throw_ioe}}, it looks like an almost-copy of the #ifdef WINDOWS path of the function in {{NativeIO.c}}.  Can we refactor and reuse the same {{throw_ioe}} everywhere, or is that too cumbersome?\n\n2. Assuming that the answer to #1 is that we really need to keep a separate {{throw_ioe}} in here, then is it intentional that this version uses LPSTR/FormatMessageA, whereas the version in {{NativeIO.c}} uses LPWSTR/FormatMessageW?\n\n{code}\n  ...\n  LPSTR buffer = NULL;\n  const char* message = NULL;\n\n  len = FormatMessageA(\n  ...\n{code}\n\n3. Once again assuming that we need to keep the separate {{throw_ioe}}, I don't think we need to NULL out buffer before returning.  For the version in {{NativeIO.c}}, this was required to prevent a double-free later in the control flow, but this version only has one possible path to calling {{LocalFree}}.\n\n{code}\n   ...\n  LocalFree(buffer);\n  buffer = NULL;\n\n  return;\n}\n{code}\n\n4. Is the following code not thread-safe?\n\n{code}\n...\nstatic jobjectArray emptyGroups = NULL;\n...\n  if (emptyGroups == NULL) {\n    jobjectArray lEmptyGroups = (jobjectArray)(*env)->NewObjectArray(env, 0,\n            (*env)->FindClass(env, \"java/lang/String\"), NULL);\n    if (lEmptyGroups == NULL) {\n      goto cleanup;\n    }\n    emptyGroups = (*env)->NewGlobalRef(env, lEmptyGroups);\n    if (emptyGroups == NULL) {\n      goto cleanup;\n    }\n  }\n{code}\n\nFor example, assume 2 threads concurrently call {{getGroupForUser}}.  Thread 1 executes the NULL check, enters the if body, and then gets suspended by the OS.  Thread 2 executes and {{emptyGroups}} is still NULL, so it initializes it.  Then, the OS resumes thread 1, which proceeds inside the if body and calls NewObjectArray again.  Since {{emptyGroups}} never gets freed, I believe the net effect would be a small memory leak.\n\n5.  On the {{THROW}} calls, can we add strings that describe the point of failure (i.e. \"Couldn't allocate memory for user\") instead of NULL for the third argument?\n\n{code}\n  user = (*env)->GetStringChars(env, juser, NULL);\n  if (user == NULL) {\n    THROW(env, \"java/lang/OutOfMemoryError\", NULL);\n    goto cleanup;\n  }\n{code}\n\nThanks, again!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-01-28T19:38:57.290+0000","updated":"2013-01-28T19:38:57.290+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13564595","id":"13564595","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"Clicking Cancel Patch, since Jenkins only knows how to apply patches for pre-commit builds going to trunk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-01-28T19:39:42.712+0000","updated":"2013-01-28T19:39:42.712+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13578741","id":"13578741","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"body":"Addressing Chris' comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"created":"2013-02-14T22:17:09.484+0000","updated":"2013-02-14T22:17:09.484+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13578764","id":"13578764","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"body":"Thanks Chris for the review, all good comments!\n\nMy responses are below:\n\n1. The functions are actually slightly different and I wanted to keep them that way. Nativeio function throws a NativeIOException exception (not IOException). Also, if you take a closer look nativeio exposes some static initialization methods which are used to initialize nioe_clazz and nioe_ctor, so all is encapsulated within nativeio and I wanted to keep it this way. Let me know if this sounds good. \n\n2. Yes, this is what we need. THROW macro definition expects char* (not WCHAR*), hence the difference. In nativeio#throw_ie, we use a slightly different conversion patterns\n\n3. Fixed\n\n4. I saw this as well. I inherited the problem from the linux implementation. As you said, it seems that the only side effect could be an extra memory allocation which isn't too bad. \n\n5. Thanks, fixed\n\nAttached is the updated patch. Let me know if it looks good. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"created":"2013-02-14T22:33:55.071+0000","updated":"2013-02-14T22:33:55.071+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13579652","id":"13579652","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"+1 for the new patch\n\nThank you for addressing all of the feedback.  Regarding #4, you're right that the memory leak is already there in the Linux implementation too.  I filed HADOOP-9312 to follow up on fixing it for both Linux and Windows.\n\nI ran the new patch locally and confirmed that it works.  Thanks again for taking care of this.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-16T01:01:20.134+0000","updated":"2013-02-16T01:01:20.134+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13580895","id":"13580895","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chuanliu","name":"chuanliu","key":"chuanliu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chuan Liu","active":true,"timeZone":"America/Los_Angeles"},"body":"The code looks very good!\nHowever, the \"JniBasedUnixGroupsMappingWin\" name seems a weird for me.\nI think a better approach may be to create a seperate JniBasedWinGroupsMapping.java class and add some Java code to use choose JniBasedWinGroupsMapping and JniBasedUnixGroupsMapping based on the platform. This way we can also seperate the native implementation more easily in the future.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chuanliu","name":"chuanliu","key":"chuanliu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chuan Liu","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-18T23:36:30.852+0000","updated":"2013-02-18T23:36:30.852+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13583774","id":"13583774","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"body":"{quote}However, the \"JniBasedUnixGroupsMappingWin\" name seems a weird for me.\nI think a better approach may be to create a seperate JniBasedWinGroupsMapping.java class and add some Java code to use choose JniBasedWinGroupsMapping and JniBasedUnixGroupsMapping based on the platform. This way we can also seperate the native implementation more easily in the future.\n{quote}\nThanks Chuan for the review! Actually, I will not agree on this one. We should try to make Java side interfaces platform independent (where we can) and only have platform dependent implementations. In this specific case, the interface is quite simple and works well cross platforms so I think this is fine. Let me know what you think.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"created":"2013-02-22T01:05:57.766+0000","updated":"2013-02-22T01:05:57.766+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13583959","id":"13583959","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nWe should try to make Java side interfaces platform independent (where we can) and only have platform dependent implementations.\n{quote}\n\nAgreed with this.  The established pattern is to code platform-agnostic interfaces on the Java side and build platform-specific implementations of the JNI functions using conditional compilation.  Introducing a JniBasedWinGroupsMapping.java would be a divergence from this pattern.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-22T06:30:05.167+0000","updated":"2013-02-22T06:30:05.167+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13588716","id":"13588716","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nHowever, the \"JniBasedUnixGroupsMappingWin\" name seems a weird for me.\n{quote}\n\nI just realized that I was not completely understanding the objection.  I agree that it is strange to see a name like this that contains both \"Unix\" and \"Win\".  It's true that the established pattern is to create platform-agnostic interfaces on the Java side, but JniBasedUnixGroupsMapping is unique in that the class name on the Java side already mentions a specific platform.\n\nI suppose the ideal thing would be to remove \"Unix\" from that class name on the Java side and then allow for platform-specific C implementation files: JniBasedGroupsMapping.java, JniBasedUnixGroupsMapping.c, and JniBasedWinGroupsMapping.c.  Unfortunately, I don't think that's feasible for 2 reasons.  One problem is that it would greatly expand the scope of the patch.  The other bigger problem is that JniBasedUnixGroupsMapping is mentioned in end user config files as the value of hadoop.security.group.mapping, so renaming the Java class risks breaking those users' config files.  That might have to be flagged backwards-incompatible.\n\nI think we're stuck with 1 of 2 practical options: a big conditional compilation #ifdef in the existing JniBasedUnixGroupsMapping.c, or just accept the awkward name of JniBasedUnixGroupsMappingWin.c.  My personal preference is for separation by file instead of conditional compilation.  This is what Ivan's current patch does, so I am still +1.  What do others think?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-27T20:28:22.189+0000","updated":"2013-02-27T20:28:22.189+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13588829","id":"13588829","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi Ivan. The branch-trunk-win code base already uses conditional compilation to separate Unix/Windows implementations (see NativeIO.c). We should probably be consistent and keep the implementation in a single file. It also resolves the naming problem for now.\n\nIf we wish to rename JniBasedUnixGroupsMapping - which would be nice - we can file a separate Jira.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-27T21:57:47.839+0000","updated":"2013-02-27T21:57:47.839+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13589820","id":"13589820","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chuanliu","name":"chuanliu","key":"chuanliu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chuan Liu","active":true,"timeZone":"America/Los_Angeles"},"body":"+1\n\nI don't have too strong an objection since it's just a naming issue.\nIn my original thinking, I thought to rename JniBasedUnixGroupsMapping to JniBasedGroupsMapping, or have a new class, e.g. JniBasedWinGroupsMapping, representing Windows implementation.\nI agree with platform independent API principle; but I think we can also create platform specific code when necessary.\n\nIn this case, JniBased[Platform]Mapping is already designed to suit one platform in the beginning as its name suggested. In my opinion if we want to extend the support for Windows, the next logical thing is to provide a new GroupMappingServiceProvider for Windows, e.g. JniBasedWinGroupsMapping; or we can create a new platform independent GroupMappingServiceProvider for both Windows and Unix, e.g. JniBasedGroupsMapping.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chuanliu","name":"chuanliu","key":"chuanliu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chuan Liu","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-28T19:19:51.920+0000","updated":"2013-02-28T19:19:51.920+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13589831","id":"13589831","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nThe branch-trunk-win code base already uses conditional compilation to separate Unix/Windows implementations (see NativeIO.c).\n{quote}\n\nI'm +1 for Ivan's code whether it's wrapped in conditional compilation or separate files.  I expressed a personal preference for separate files, but it's no big deal.  We could always split later if the conditional compilation becomes too cumbersome over time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-28T19:26:16.103+0000","updated":"2013-02-28T19:26:16.103+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13589864","id":"13589864","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chuanliu","name":"chuanliu","key":"chuanliu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chuan Liu","active":true,"timeZone":"America/Los_Angeles"},"body":"I also notice ShellBasedUnixGroupsMapping has the Unix in the class name while also supporting Windows in its implementation. So I think we should be fine here.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chuanliu","name":"chuanliu","key":"chuanliu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chuan Liu","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-28T19:48:22.138+0000","updated":"2013-02-28T19:48:22.138+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13592738","id":"13592738","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"body":"Quick recap: we have +1 from 2 contributors, and there are no blocking issues remaining on this patch.  [~sureshms], we are ready for review from a committer.  Thank you.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cnauroth","name":"cnauroth","key":"cnauroth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cnauroth&avatarId=11432","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cnauroth&avatarId=11432","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cnauroth&avatarId=11432","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cnauroth&avatarId=11432"},"displayName":"Chris Nauroth","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-04T22:24:33.508+0000","updated":"2013-03-04T22:24:33.508+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13592962","id":"13592962","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"+1 for the patch. \n\nMinor update to the patch that did not apply cleanly to latest branch-trunk-win.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-05T02:20:10.404+0000","updated":"2013-03-05T02:20:10.404+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13592963","id":"13592963","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"Committed the patch to the branch.\n\nThank you Ivan!. Thank you Arpit, Chuan and Chris for the review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-05T02:22:33.504+0000","updated":"2013-03-05T02:22:33.504+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13593776","id":"13593776","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"body":"I am not clear if we have fixed the root cause or the symptom?\nIt looks like JniBasedUnixGroupsMappingWithFallback checks for native impl being present and if not it falls back to Shell. Thereafter, it will use the native code and fail when the native code does not have the expected function.\nIn Windows, the native code is always present for other reasons. So we are never going to fall back to Shell. So basically there is no fallback.\nIn the patch we have fixed the missing function in the native jni code. But is that the complete fix? For any other/new jni based function we will be back to this situation because on Windows the native code is always loaded.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bikassaha","name":"bikassaha","key":"bikassaha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=bikassaha&avatarId=29845","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bikassaha&avatarId=29845","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bikassaha&avatarId=29845","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bikassaha&avatarId=29845"},"displayName":"Bikas Saha","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-05T19:05:46.740+0000","updated":"2013-03-05T19:05:46.740+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12628666/comment/13593837","id":"13593837","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"body":"Thanks Bikas for reviewing!\n\nI would say that we fixed the root cause :) we do want to have native impl for getGroups on Windows. However, you bring up a really interesting point:\nbq. For any other/new jni based function we will be back to this situation because on Windows the native code is always loaded.\nCurrent approach of checking whether the native code is loaded or not makes sense to me. If we want to scope this down to a function, we would have to run test function call to see if it will return unresolved link error (or fallback later) what would be really ugly. The right way to handle cases where we want to gracefully degrade functionality and fallback would be to have a config that would enable the feature. In this specific instance of the problem, we also have a config which is enabled by default. Now we can argue whether it should be enabled by default or not, I believe it should, but this is an orthogonal discussion. \n\nNow going back to your point, a good sanity test for whether a feature should be enabled by default or not could be that it is supported by all release platforms. Make sense? Thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ivanmi","name":"ivanmi","key":"ivanmi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Mitic","active":true,"timeZone":"Europe/Berlin"},"created":"2013-03-05T19:57:58.433+0000","updated":"2013-03-05T19:57:58.433+0000"}],"maxResults":22,"total":22,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-9232/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1ahtb:"}}