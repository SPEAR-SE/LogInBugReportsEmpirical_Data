{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12435073","self":"https://issues.apache.org/jira/rest/api/2/issue/12435073","key":"HADOOP-6245","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2009-09-08T17:44:49.925+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Sat Sep 26 18:13:57 UTC 2009","customfield_12310420":"77774","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-6245/watchers","watchCount":4,"isWatching":false},"created":"2009-09-08T09:04:51.911+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2009-09-26T18:13:58.036+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12310711","id":"12310711","name":"conf","description":"Hadoop configuration mechanism."}],"timeoriginalestimate":null,"description":"In HADOOP-6105, we provided a method of adding deprecated keys from other sub-projects like HDFS and Map/Reduce using a key called hadoop.conf.extra.classes. The expectation was that this key had class names that will be statically loaded by the Configuration class and the classes could add deprecated keys in static blocks of their classes. We discovered as in HADOOP-6243, that the classes added could have side-effects if they, for e.g. load resources in configuration. To unblock builds, we are disabling this feature in fixing HADOOP-6243. However, I am opening this JIRA to follow-up on a fix for the original intention.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"103317","customfield_12312823":null,"summary":"Provide a way to load deprecated keys from other sub-projects into configuration","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhemanth","name":"yhemanth","key":"yhemanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hemanth Yamijala","active":true,"timeZone":"Asia/Kolkata"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhemanth","name":"yhemanth","key":"yhemanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hemanth Yamijala","active":true,"timeZone":"Asia/Kolkata"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435073/comment/12752517","id":"12752517","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhemanth","name":"yhemanth","key":"yhemanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hemanth Yamijala","active":true,"timeZone":"Asia/Kolkata"},"body":"There are the following options we have:\n- Not have this feature. HDFS and Map/Reduce teams will submit patches to the common project to add deprecated keys in the Configuration.java class. Simple, reliable, but inconvenient if this list keeps changing. Also, dependency on the hadoop common jars will exist w.r.to. project releases etc.\n- Have a static final variable in Configuration to define the names of classes to load statically. Attempt to load these classes in the static block of Configuration.java. This makes it possible for projects to define one entry point class to add deprecated keys to configuration. We feel making it a variable as opposed to a configuration item is simpler, because we would then not have to create an instance of Configuration to add the deprecated keys from sub projects. There is a need though to make a one time change to Configuration to include a class for the HDFS and M/R projects.\n- Same as above, but make the contract more rigourous - for e.g. define something along these lines:\n{code}\npackage org.apache.hadoop.conf;\n\npublic abstract class DeprecatedKeyProvider {\n  public abstract DeprecatedKeyInfo[] getDeprecatedKeys();\n}\n{code}\n\nClasses in M/R and HDFS can extend this class. In getDeprecatedKeys, they can construct and return deprecated keys to add to the configuration class. Configuration will create an instance of these classes in it's static block and call getDeprecatedKeys() on each of them.\n\nThoughts ?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhemanth","name":"yhemanth","key":"yhemanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hemanth Yamijala","active":true,"timeZone":"Asia/Kolkata"},"created":"2009-09-08T13:40:28.373+0000","updated":"2009-09-08T13:40:28.373+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435073/comment/12752631","id":"12752631","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cutting","name":"cutting","key":"cutting","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Doug Cutting","active":true,"timeZone":"America/Los_Angeles"},"body":"It might be better if subprojects could push deprecated keys into the registry, rather than have the registry pull them in.\n\nPerhaps we could have a public static method, Configuration.addDeprecatedKeys(String[]), and an indispensable classes in each subproject with a static block that calls this.  The trick is finding the indispensable class(es).  HDFS and mapreduce could each have a single class that adds all keys for the subproject.  This class can then be referenced statically from a key client class (e.g. DistributedFileSystem and Job) and each of the daemons.  Could something like this work?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cutting","name":"cutting","key":"cutting","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Doug Cutting","active":true,"timeZone":"America/Los_Angeles"},"created":"2009-09-08T17:44:49.925+0000","updated":"2009-09-08T17:44:49.925+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435073/comment/12756987","id":"12756987","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhemanth","name":"yhemanth","key":"yhemanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hemanth Yamijala","active":true,"timeZone":"Asia/Kolkata"},"body":"Doug, the API you suggest was already part of HADOOP-6105. So, it looks like we need no work. I also confirmed with Amareshwari working on MAPREDUCE-849, that using the technique Doug suggested works for including deprecated keys from other projects. So, I think we can close this JIRA.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yhemanth","name":"yhemanth","key":"yhemanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hemanth Yamijala","active":true,"timeZone":"Asia/Kolkata"},"created":"2009-09-18T06:05:24.373+0000","updated":"2009-09-18T06:05:24.373+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12435073/comment/12759928","id":"12759928","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"While I see the advantage of push over pull, this approach would require that HDFS has its own config initialization that pushes the deprecated keys.\nHDFS does not have such a thing. Not a big deal to add it to the HDFS daemons but we would also have to add it to all the tests. ( I guess one could argue \nthat tests should have moved from old keys to new keys anyway.)\nIt would have been better to have the deprecated keys initialized via config files - not sure what this would entail.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2009-09-26T18:13:57.997+0000","updated":"2009-09-26T18:13:57.997+0000"}],"maxResults":4,"total":4,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-6245/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0i1dj:"}}