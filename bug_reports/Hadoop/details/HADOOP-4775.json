{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12409957","self":"https://issues.apache.org/jira/rest/api/2/issue/12409957","key":"HADOOP-4775","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/3","id":"3","description":"The problem is a duplicate of an existing issue.","name":"Duplicate"},"customfield_12312322":null,"customfield_12310220":"2008-12-04T20:49:57.374+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue Dec 16 15:06:40 UTC 2008","customfield_12310420":"126725","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_1038629921_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2008-12-16T15:06:40.921+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-4775/watchers","watchCount":1,"isWatching":false},"created":"2008-12-04T14:36:11.973+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2009-07-08T17:05:04.095+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"Every morning I come in and find many nodes which have developed the dreaded \"Transport endpoint not connected\" error overnight.  This has only started after the 0.19.0 upgrade.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12395462","id":"12395462","filename":"fuse_lotsofmem_bt.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-06T00:09:00.024+0000","size":15060,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12395462/fuse_lotsofmem_bt.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12395463","id":"12395463","filename":"fuse_lotsofmem_pmap.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-06T00:14:48.501+0000","size":9472,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12395463/fuse_lotsofmem_pmap.txt"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"104119","customfield_12312823":null,"summary":"FUSE crashes reliably on 0.19.0","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12653314","id":"12653314","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"body":"I have no clue as to what is causing this; I'm currently doing a long run of our application to see if I can trigger it with debugging turned on.\n\nIt's been pretty easy to crash, and I'm working to find the exact cause (other than \"use it for a long time\").  I'll update this JIRA as more info becomes available.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-04T14:38:03.454+0000","updated":"2008-12-04T14:38:03.454+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12653343","id":"12653343","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"body":"It seems that this might be memory-leak related.  PS output:\n\nroot     26631 34.3 27.4 1462748 1108148 ?   Ssl  Dec03 426:50 fuse_dfs -oserver=hadoop-name -oport=9000 /mnt/hadoop -oallow_other\n\nThis is a 4GB nodes, so fuse-dfs is using about 1GB of memory.  Suspicious.  I haven't had much luck with GDB on the fuse_dfs process, as multithreaded apps are tough to step through.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-04T16:19:58.996+0000","updated":"2008-12-04T16:19:58.996+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12653471","id":"12653471","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wyckoff","name":"wyckoff","key":"wyckoff","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Pete Wyckoff","active":true,"timeZone":"Etc/UTC"},"body":"Hi Brian,\n\nHave you tried 4616 and 4635 patches?\n\n4616 fixes a memory leak of a group name and 4635 fixes a memory leak of not detroying a mutex.\n\nyou could also compile with -Dlibhdfs.noperms=1 just to ensure it isn't related to groups.\n\nWhen investigating 4635, we saw that it's very hard to judge fuse-dfs's use of memory because of the JVM GC of the DFSClient is hard to judge.\n\n-- pete\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wyckoff","name":"wyckoff","key":"wyckoff","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Pete Wyckoff","active":true,"timeZone":"Etc/UTC"},"created":"2008-12-04T20:49:57.374+0000","updated":"2008-12-04T20:49:57.374+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12653495","id":"12653495","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wyckoff","name":"wyckoff","key":"wyckoff","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Pete Wyckoff","active":true,"timeZone":"Etc/UTC"},"body":"Another thing occurred to me is that on a 4GB machine, how big is the default memory allocation?  1GB? How big is the DFSClient buffer per file? if it is the block size, then 8 concurrent reads blows away 1GB.\n\nWas there any output in the syslog?\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=wyckoff","name":"wyckoff","key":"wyckoff","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Pete Wyckoff","active":true,"timeZone":"Etc/UTC"},"created":"2008-12-04T21:32:19.447+0000","updated":"2008-12-04T21:32:19.447+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12653976","id":"12653976","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"body":"Hey Pete,\n\nI'll have our sysadmins try out the 4616 and 4635 patches\n\nThere were no messages in syslog, meaning it probably didn't segfault (is this correct?)\n\nHere's what the failure looks like:\nhttp://jobrobot.web.cern.ch/JobRobot/errors_081205.html#T2_US_Nebraska\nhttp://jobrobot.web.cern.ch/JobRobot/errors_081204.html#T2_US_Nebraska\n\nI've got a hard time believing that a memory leak alone could disconnect the FUSE endpoint... 1/3 of the workers are 4GB, 1/3 are 8GB, 1/3 are 16GB.  It would take quite a bit of effort to get a memory leak to cause the problems on the 16GB nodes.  Plus, I didn't see OOM killing anything in dmesg.\n\nI set up a debug FUSE instance on a node and hit it with a similar workflow.  No problems at all; it may be that, in debug mode, FUSE doesn't allow multiple threads?\n\nMy suspicion is that either FUSE-DFS or libhdfs has a problem with error recovery which causes an infinite loop (like we've seen in other places).  The interesting thing for the \"ps\" output I showed above is that the fuse_dfs process was using 30% CPU *when nothing was using FUSE* and the node wasn't swapping.\n\nNagios now restarts FUSE-DFS whenever the problem occurs, so I don't get much of a chance to debug.  Still, about 7% of our jobs die because FUSE conks out mid-job.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-05T23:24:23.486+0000","updated":"2008-12-05T23:24:23.486+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12653993","id":"12653993","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"body":"Attached the back traces of the fuse_dfs process.  Most of them look like harmless java threads, but:\n\n1) no active FUSE threads?\n2) Still, this is using 1GB of memory.  Has not had any FUSE usage for awhile, so I would suspect that any Java memory usage should be garbage collected at this point.\n\nDoes this help anyone?  Is there a way to view what part is used by java and what's memory lost to the C-side?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-06T00:09:00.111+0000","updated":"2008-12-06T00:09:00.111+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12653998","id":"12653998","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"body":"Attached pmap of the process.  It does like something malloc'd a 600MB area in memory.\n\nHopefully this helps.  Let me know if you can think of anything else I can look at.  The application *only* opens files and reads; no listing of directories, no stat'ing, no writing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-06T00:14:48.529+0000","updated":"2008-12-06T00:14:48.529+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12654768","id":"12654768","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"body":"I finally found a process that was stuck which had a usable stack trace, below.\n\nIt appears that the JVM is deadlocking when hdfsPread invokes jni_NewByteArray.\n\nSo,\n1) Can I somehow adjust the \"DFSClient buffer per file\" as Pete suggests above?  I wasn't able to find a config option for this.\n2) I'll be upgrading the JVM to 1.6.0-11 from 1.6.0-7.\n3) I'll allocate more memory for the fuse_dfs client\n4) Is there anything else which can be done from the Hadoop side to avoid deadlocking on this call?\n\n(gdb) bt\n#0  0x0000003587b08b3a in pthread_cond_wait@@GLIBC_2.3.2 () from /lib64/tls/libpthread.so.0\n#1  0x0000002a95c6ba5f in Monitor::wait () from /mnt/nfs04/opt-2/osg-wn-source/jdk1.5/jre/lib/amd64/server/libjvm.so\n#2  0x0000002a95ded329 in VMThread::execute () from /mnt/nfs04/opt-2/osg-wn-source/jdk1.5/jre/lib/amd64/server/libjvm.so\n#3  0x0000002a95c95938 in ParallelScavengeHeap::mem_allocate () from /mnt/nfs04/opt-2/osg-wn-source/jdk1.5/jre/lib/amd64/server/libjvm.so\n#4  0x0000002a9591cad7 in CollectedHeap::common_mem_allocate_noinit () from /mnt/nfs04/opt-2/osg-wn-source/jdk1.5/jre/lib/amd64/server/libjvm.so\n#5  0x0000002a95db9977 in typeArrayKlass::allocate () from /mnt/nfs04/opt-2/osg-wn-source/jdk1.5/jre/lib/amd64/server/libjvm.so\n#6  0x0000002a95ae7af8 in jni_NewByteArray () from /mnt/nfs04/opt-2/osg-wn-source/jdk1.5/jre/lib/amd64/server/libjvm.so\n#7  0x0000002a9555a891 in hdfsPread (fs=Variable \"fs\" is not available.\n) at hdfs.c:708\n#8  0x00000000004027f2 in dfs_read ()\n#9  0x0000002a9566b7f2 in fuse_lib_read (req=0x70f480, ino=Variable \"ino\" is not available.\n) at fuse.c:1961\n#10 0x0000002a9566ff93 in do_read (req=0x11a6b, nodeid=0, inarg=Variable \"inarg\" is not available.\n) at fuse_lowlevel.c:623\n#11 0x0000002a9566edb0 in fuse_do_work (data=Variable \"data\" is not available.\n) at fuse_loop_mt.c:100\n#12 0x0000003587b06137 in start_thread () from /lib64/tls/libpthread.so.0\n#13 0x00000035874c9883 in clone () from /lib64/tls/libc.so.6\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-09T11:24:16.622+0000","updated":"2008-12-09T11:24:16.622+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12654887","id":"12654887","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"body":"I have found quite a few more processes which are stuck on the NewByteArray method.  We're trying to increase the available memory in LIBHDFS_OPTS; we'll post if this fixes things.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-09T18:43:25.475+0000","updated":"2008-12-09T18:43:25.475+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12655347","id":"12655347","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"body":"After increasing the memory in LIBHDFS_OPTS, fuse_dfs no longer completely deadlocks.  Instead, it continues to use 100-200% CPU and 1-1.5GB memory, but still processes new requests.\n\nIt seems that something (maybe an error handling routine?) is causing an infinite loop which caused the deadlocks.\n\nBrian","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-10T20:33:52.475+0000","updated":"2008-12-10T20:33:52.475+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12655353","id":"12655353","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"body":"Could this code be the problem in line 857 of fuse_dfs.c:\n\n  if (size >= dfs->rdbuffer_size) {\n    int num_read;\n    int total_read = 0;\n    while (size - total_read > 0 && (num_read = hdfsPread(fh->fs, fh->hdfsFH, offset + total_read, buf + total_read, size - total_read)) > 0) {\n      total_read += num_read;\n    }\n    return total_read;\n  } \n\nNotice that if hdfsPread fails, then it will still return successfully.  In other instances of hdfsPread, we have:\n\n      if (num_read < 0) {\n        // invalidate the buffer \n        fh->bufferSize = 0;\n        syslog(LOG_ERR, \"Read error - pread failed for %s with return code %d %s:%d\", path, (int)num_read, __FILE__, __LINE__);\n        ret = -EIO;\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-10T20:59:15.252+0000","updated":"2008-12-10T20:59:15.252+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12655843","id":"12655843","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"body":"Ah, it's this code:\n\n    size_t num_read;\n    size_t total_read = 0;\n    while (size - total_read > 0 && (num_read = hdfsPread(fh->fs, fh->hdfsFH, offset + total_read, buf + total_read, size - total_read)) > 0) {\n      total_read += num_read;\n    }\n    if (num_read < 0) {\n      // invalidate the buffer \n      syslog(LOG_ERR, \"Read error - pread failed for %s with return code %d %s:%d\", path, (int)num_read, __FILE__, __LINE__);\n      return -EIO;\n    }\n    return total_read;\n\nsize_t is an unsigned integer.  You are checking to see if an unsigned integer is less than 0: this is never going to be true.  This means that fuse-dfs will never be able to do any error recovery *and* the first error is going to throw a thread into an infinite loop.  Each error will eat up 100% CPU on a new core, and quickly hit lots and lots of used memory.\n\nProblem solved!  Unittest anyone?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-12T01:29:23.793+0000","updated":"2008-12-12T01:29:23.793+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12409957/comment/12657008","id":"12657008","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"body":"It appears that HADOOP-4616 fixes this problem too (although you can't tell that from the summary...).  Marking this ticket as duplicate.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bockelman","name":"bockelman","key":"bockelman","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brian Bockelman","active":true,"timeZone":"America/Chicago"},"created":"2008-12-16T15:06:40.877+0000","updated":"2008-12-16T15:06:40.877+0000"}],"maxResults":13,"total":13,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-4775/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0i6br:"}}