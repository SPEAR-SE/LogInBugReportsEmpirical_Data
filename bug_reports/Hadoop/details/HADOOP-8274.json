{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12550779","self":"https://issues.apache.org/jira/rest/api/2/issue/12550779","key":"HADOOP-8274","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/2","id":"2","description":"The problem described is an issue which will never be fixed.","name":"Won't Fix"},"customfield_12312322":null,"customfield_12310220":"2012-04-18T11:33:41.717+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Sep 18 04:49:36 UTC 2015","customfield_12310420":"235643","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_23859094514_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2013-01-14T09:49:28.044+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-8274/watchers","watchCount":7,"isWatching":false},"created":"2012-04-13T06:17:53.597+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316390","id":"12316390","description":"Merge append/sync support with security","name":"0.20.205.0","archived":false,"released":true,"releaseDate":"2011-10-06"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12318244","id":"12318244","description":"1.0.0 release","name":"1.0.0","archived":false,"released":true,"releaseDate":"2011-12-27"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12319501","id":"12319501","description":"maintenance release on branch-1.0","name":"1.0.1","archived":false,"released":true,"releaseDate":"2012-02-22"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12314296","id":"12314296","description":"","name":"0.22.0","archived":false,"released":true,"releaseDate":"2011-12-10"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lsattr","name":"lsattr","key":"lsattr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"haoxiaohui","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-09-18T04:49:36.998+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"The standalone model is ok. But, in pseudo or cluster model, it always throw errors, even I just run wordcount example.\n\nThe HDFS works fine, but tasktracker can not create threads(jvm) for new job.  It is empty under /logs/userlogs/job-xxxx/attempt-xxxx/.\n\nThe reason looks like that in windows, Java can not recognize a symlink of folder as a folder. \n\nThe detail description is as following,\n\n======================================================================================================\n\nFirst, the error log of tasktracker is like:\n\n\n======================\n12/03/28 14:35:13 INFO mapred.JvmManager: In JvmRunner constructed JVM ID: jvm_201203280212_0005_m_-1386636958\n12/03/28 14:35:13 INFO mapred.JvmManager: JVM Runner jvm_201203280212_0005_m_-1386636958 spawned.\n12/03/28 14:35:17 INFO mapred.JvmManager: JVM Not killed jvm_201203280212_0005_m_-1386636958 but just removed\n12/03/28 14:35:17 INFO mapred.JvmManager: JVM : jvm_201203280212_0005_m_-1386636958 exited with exit code -1. Number of tasks it ran: 0\n12/03/28 14:35:17 WARN mapred.TaskRunner: attempt_201203280212_0005_m_000002_0 : Child Error\njava.io.IOException: Task process exit with nonzero status of -1.\n        at org.apache.hadoop.mapred.TaskRunner.run(TaskRunner.java:258)\n12/03/28 14:35:21 INFO mapred.TaskTracker: addFreeSlot : current free slots : 2\n12/03/28 14:35:24 INFO mapred.TaskTracker: LaunchTaskAction (registerTask): attempt_201203280212_0005_m_000002_1 task's state:UNASSIGNED\n12/03/28 14:35:24 INFO mapred.TaskTracker: Trying to launch : attempt_201203280212_0005_m_000002_1 which needs 1 slots\n12/03/28 14:35:24 INFO mapred.TaskTracker: In TaskLauncher, current free slots : 2 and trying to launch attempt_201203280212_0005_m_000002_1 which needs 1 slots\n12/03/28 14:35:24 WARN mapred.TaskLog: Failed to retrieve stdout log for task: attempt_201203280212_0005_m_000002_0\njava.io.FileNotFoundException: D:\\cygwin\\home\\timwu\\hadoop-1.0.0\\logs\\userlogs\\job_201203280212_0005\\attempt_201203280212_0005_m_000002_0\\log.index (The system cannot find the path specified)\n        at java.io.FileInputStream.open(Native Method)\n        at java.io.FileInputStream.<init>(FileInputStream.java:120)\n        at org.apache.hadoop.io.SecureIOUtils.openForRead(SecureIOUtils.java:102)\n        at org.apache.hadoop.mapred.TaskLog.getAllLogsFileDetails(TaskLog.java:188)\n        at org.apache.hadoop.mapred.TaskLog$Reader.<init>(TaskLog.java:423)\n        at org.apache.hadoop.mapred.TaskLogServlet.printTaskLog(TaskLogServlet.java:81)\n        at org.apache.hadoop.mapred.TaskLogServlet.doGet(TaskLogServlet.java:296)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)\n        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1221)\n        at org.apache.hadoop.http.HttpServer$QuotingInputFilter.doFilter(HttpServer.java:835)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)\n        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)\n        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\n        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)\n        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n        at org.mortbay.jetty.Server.handle(Server.java:326)\n        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:928)\n        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)\n        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\n        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)\n        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n12/03/28 14:35:24 WARN mapred.TaskLog: Failed to retrieve stderr log for task: attempt_201203280212_0005_m_000002_0\njava.io.FileNotFoundException: D:\\cygwin\\home\\timwu\\hadoop-1.0.0\\logs\\userlogs\\job_201203280212_0005\\attempt_201203280212_0005_m_000002_0\\log.index (The system cannot find the path specified)\n        at java.io.FileInputStream.open(Native Method)\n        at java.io.FileInputStream.<init>(FileInputStream.java:120)\n        at org.apache.hadoop.io.SecureIOUtils.openForRead(SecureIOUtils.java:102)\n        at org.apache.hadoop.mapred.TaskLog.getAllLogsFileDetails(TaskLog.java:188)\n        at org.apache.hadoop.mapred.TaskLog$Reader.<init>(TaskLog.java:423)\n        at org.apache.hadoop.mapred.TaskLogServlet.printTaskLog(TaskLogServlet.java:81)\n        at org.apache.hadoop.mapred.TaskLogServlet.doGet(TaskLogServlet.java:296)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)\n        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1221)\n        at org.apache.hadoop.http.HttpServer$QuotingInputFilter.doFilter(HttpServer.java:835)\n        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)\n        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)\n        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)\n        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)\n        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)\n        at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)\n        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n        at org.mortbay.jetty.Server.handle(Server.java:326)\n        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:928)\n        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)\n        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)\n        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)\n        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n\n=======================================\n\nI've tried to remote debug tasktracker. In \n\norg.apache.hadoop.mapredTaskLog.createTaskAttemptLogDir(TaskAttemptID, boolean, String[]) line: 97:\npublic static void createTaskAttemptLogDir(TaskAttemptID taskID,\n      boolean isCleanup, String[] localDirs) throws IOException{\n    String cleanupSuffix = isCleanup ? \".cleanup\" : \"\";\n    String strAttemptLogDir = getTaskAttemptLogDir(taskID, \n        cleanupSuffix, localDirs);\n    File attemptLogDir = new File(strAttemptLogDir);\n    if (!attemptLogDir.mkdirs()) {\n      throw new IOException(\"Creation of \" + attemptLogDir + \" failed.\");\n    }\n    String strLinkAttemptLogDir = \n        getJobDir(taskID.getJobID()).getAbsolutePath() + File.separatorChar + \n        taskID.toString() + cleanupSuffix;\n    if (FileUtil.symLink(strAttemptLogDir, strLinkAttemptLogDir) != 0) {\n      throw new IOException(\"Creation of symlink from \" + \n                            strLinkAttemptLogDir + \" to \" + yestrAttemptLogDir +\n                            \" failed.\");\n    }\n    //Set permissions for target attempt log dir \n    FsPermission userOnly = new FsPermission((short) 0777); //FsPermission userOnly = new FsPermission((short) 0700);\n    FileUtil.setPermission(attemptLogDir, userOnly);\n  }\nand  symlink() function\npublic static int symLink(String target, String linkname) throws IOException{\n    String cmd = \"ln -s \" + target + \" \" + linkname;\n    Process p = Runtime.getRuntime().exec(cmd, null);\n    int returnVal = -1;\n    try{\n      returnVal = p.waitFor();\n    } catch(InterruptedException e){\n      //do nothing as of yet\n    }\n    if (returnVal != 0) {\n      LOG.warn(\"Command '\" + cmd + \"' failed \" + returnVal + \n               \" with: \" + copyStderr(p));\n    }\n    return returnVal;\n  }\n\nwe know hadoop will create a log folder in ${hadoop.tmp.dir},  and then invoke \"ln -s \" to create its symlink under /logs/userlog/job-xxx/attermp-xxxx. \n\nIn my case, \nstrLinkAttemptLogDir = D:\\cygwin\\home\\timwu\\hadoop-1.0.0\\logs\\userlogs\\job_201203280212_0005\\attempt_201203280212_0005_m_000002_1\nstrAttemptLogDir=/tmp/hadoop-timwu/mapred/local\\userlogs\\job_201203280212_0005\\attempt_201203280212_0005_m_000002_1\n\nAfter a subtrack is created by tasktracker, it runs error in the following function:\n\nin org.apache.hadoop.mapred.java , DefaultTaskController.launchTask(String, String, String, List<String>, List<String>, File, String, String) line: 107        \n      ...............\n      //mkdir the loglocation\n      String logLocation = TaskLog.getAttemptDir(jobId, attemptId).toString();\n      if (!localFs.mkdirs(new Path(logLocation))) {\n        throw new IOException(\"Mkdirs failed to create \" \n                   + logLocation);\n      }\n     ..............\n\nmkdir() return false, because logLocation is a symlink file. In my case, it is ogLocation=D:\\cygwin\\home\\timwu\\hadoop-1.0.0\\logs\\userlogs\\job_201203280212_0005\\attempt_201203280212_0005_m_000002_1.  If I open it from explorer in windows, it is just a file,  but not a folder or shortcut. And its content is like,\n         <symlink>/tmp/hadoop-timwu/mapred/local\\userlogs\\job_201203280212_0005\\attempt_201203280212_0005_m_000002_1 \n\nBecause the mkdir() is\npublic boolean mkdirs(Path f) throws IOException {\n    Path parent = f.getParent();\n    File p2f = pathToFile(f);\n    return (parent == null || mkdirs(parent)) &&\n      (p2f.mkdir() || p2f.isDirectory());\n  }\n\nSo, p2f.isDirectory returns false.  And p2f.isFile will return true. So, for java, it is a file. Hence, IOException(\"Mkdirs failed to create D:\\cygwin\\home\\timwu\\hadoop-1.0.0\\logs\\userlogs\\job_201203280212_0005\\attempt_201203280212_0005_m_000001_1\")\nwill be throws in child threads, and return -1.  Then, we will get the above exception in main thread.\n\nIs it any way to close this symlink? Or any other way I can follow?\n\nBTW, in core-site.xml, I set  hadoop.tmp.dir = /tmp/hadoop-${user.name},  and my $User.name is timwu. So, it should create a tmp folder /tmp/hadoop-timwu  under cygwin's.   However, in deed , it create  a folder of d:/tmp/hadoop-timwu. If in cygwin, it is /cygdriver/d/tmp/hadoop-timwu.  Is it correct?","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"43681","customfield_12312823":null,"summary":"In pseudo or cluster model under Cygwin, tasktracker can not create a new job because of symlink problem.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chinatimwu","name":"chinatimwu","key":"chinatimwu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"tim.wu","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chinatimwu","name":"chinatimwu","key":"chinatimwu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"tim.wu","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"windows7+cygwin 1.7.11-1+jdk1.6.0_31+hadoop 1.0.0","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12550779/comment/13256454","id":"13256454","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fkorning","name":"fkorning","key":"fkorning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"FKorning","active":true,"timeZone":"Etc/UTC"},"body":"see https://issues.apache.org/jira/browse/HADOOP-7682\n\nas mentioned, java io doesn't understand symlinks or junctions.\n\nthe workaround is to ensure that your windows and cygwin paths are equal.\nCreate a /cygwin symlink pointing back to the cygwin root ( /cygwin -> / )\nUse driveless paths and use the cygwin tmp dir for your hadoop_tmp_dir.\n\nhadoop_tmp_dir=/cygwin/tmp/hadoop-cyg_server  <==> c:\\cygwin\\tmp\\hadoop-cyg_server\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fkorning","name":"fkorning","key":"fkorning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"FKorning","active":true,"timeZone":"Etc/UTC"},"created":"2012-04-18T11:33:41.717+0000","updated":"2012-04-18T11:33:41.717+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12550779/comment/13264577","id":"13264577","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fkorning","name":"fkorning","key":"fkorning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"FKorning","active":true,"timeZone":"Etc/UTC"},"body":"If the symlinks really are necessary, here's a java.io.File wrapper\nthat understands cygwin symlinks (and windows shortcuts).\n\n{code}\npackage net.muxbus.io;\n\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.net.URI;\n\n\n/**\n * \n * @author      Francis Korning   fkorning@yahoo.ca\n * @date        2012-04-30    \n * \n * @project     muxbus            muxbus.net\n * @source      sourceforge       https://sourceforge.net/p/muxbus/ \n *     \n * @copyright   2012              F.Korning\n * @license     LGPL              http://www.gnu.org/copyleft/lesser.html\n * \n * @credit      Jesse Hager       jessehager@iname.com    (.lnk shortcut file format).\n * \n * \n * LinkedFile is a java.io.File wrapper that understands both Cygwin Symbolic Links\n * and Windows Explorer Shorcut Links (.lnk).  If a given File is a Link, it tries\n * to resolve the File by following link paths recursively until a final canonical\n * target is found, and if the file exists will act as a wrapper for the link\n * target. A LinkedFile always tracks its source and provides link reflection.\n *\n * A common frustration for POSIX platform developers is that Java on windows does\n * not understand symbolic Links which aren't handled by the windows io native libs.\n * This means that Cygwin or Interix (aka Winterix or Windows Service for Unix)\n * integrated java applications that depend on POSIX tools may break when it comes\n * to resolution of paths with linked files and directories.\n * \n * The first workaround strategy, which works where links are predictably created,\n * is to ensure that cygwin paths and windows paths are equivalent and identical.\n * For example, you create a circular \"/cygwin\" link that maps back to the root \"/\":\n * \n * <code>\n * <pre>                \n *     /cygwin      ->  /      ->  \\cygwin\\      ->  C:\\cygwin\\\n *     /cygwin/tmp  ->  /tmp/  ->  \\cygwin\\tmp\\  ->  C:\\cygwin\\tmp\\\n * </pre>\n * </code>\n * \n * But you often have no control over much of the integrated codebase and tools.\n * If some of the components create symlinks dynamically where java expects real\n * files and directories this workaround will fail.\n * \n * Now the only OS-native IO alternative would be to use Windows NTFS Junctions.\n * These are completely transparent and work in shells, in Explorer, and for java.\n * The best implementation would be the junction provided in the SysInternals suite.\n * You could wrap the cygwin 'ln' command and force it to use a junction instead,\n * but this breaks some POSIX compatibility and requires Administrator superuser\n * rights which you may not want to assign to all your running service daemons.\n * \n * Next Interix symbolic links and the mklink command are built-in since Windows Vista.\n * These fall in between as they act like native symlinks in the shell and in java,\n * look like cygwin links inside the shell, but again they can only be created by the\n * Administrator, and also break POSIX. Unlike cygwin they do appear as shortcuts in\n * a Windows Explorer, with the caveat that these are broken because of permissions.\n * \n * Note that both strategies only work if the tools create links via the 'ln' command.\n * But what if the offending integrated tools are in perl or python, or even better yet in\n * compiled c/c++ code making use of libc calls for which we have no source nor license?\n * This means that we will need to adopt a strategy to adapt java.io.File to Cygwin libc.\n * Also, most multi-platform java developers favour Cygwin instead of Microsoft's Interix.\n * All of the POSIX daemons we're looking at expect cygwin shells, and this compatibility\n * is our main focus here; we ideally an a model that works without having to wrap 'ln'.\n * \n * Now Both Cygwin Symlinks and Explorer Shortcuts are just plain binary files underneath\n * with some information pointing to their link targets.  They have the advantage that\n * we can parse these and thus this allows us to add some link reflection to java.io.\n * (This also creates a strange case where windows would have more functionality than\n * unix, unless one would write a unix java native libc wrapper for link functions).\n * They also require no special Administrator rights for creation and maintenance.\n * \n * A side-effect is that shortcuts created under Windows Explorer have the feature that \n * a (.lnk) extension is appended, which is obscured from the explorer.  As the names\n * differ, both a Cygwin Symlink and a Windows Shortcut can co-exist in the same place\n * and make for a consistent interface both in the cygwin shell and Windows Explorer.\n *\n * This means that one could well mirror every cygwin symlink with a windows shortcut,\n * and thus have symbolic links that work even under non-Administrator user shells and\n * are mirrored by corresponding Windows Shortcuts that work in the Windows Explorer.\n * Cygwin also comes with its own programmatic 'mkshortcut' command to create Shorcuts\n * from a shell (which you can't under windows by default - doesn't Windows suck?).\n * \n * <code>\n * <pre>\n *     dir       ->         /dir/            symlink\n *     dir.lnk   ->         /dir/            shortcut\n *     file      ->         /dir/file        symlink\n *     file.lnk  ->         /dir/file        shortcut\n * </pre>\n * </code>\n * \n * Note that synchronizing of Cygwin symlinks and Windows Shortcuts is left out-of-scope.\n * Our primary concern is to get our POSIX daemons running, not to add sugar to Explorer.\n * However LinkedFile will support and resolve links for both link formats, with first\n * preferrence given to Cygwin Symlinks if found, and then to Windows Shortcuts of the\n * same name (without the .lnk extension), which you may extend for such a facility.\n * \n * For those wishing to extend the functionality to support transparent mirroring between\n * Explorer and the shell, note that you will have to map links to their (.lnk) shortcuts.\n * Also note that Windows Shortcuts are never interpreted as links by the Cygwin shell.\n * Most critically note that Windows shortcuts are unpredictable in the shell if moved,\n * as they seem to only recalculate relative paths after a link is accessed in Explorer. \n *\n * \n * @see cygwin:             http://www.cygwin.com\n * @see cygwin  symlinks:   http://cygwin.com/ml/cygwin/2010-11/msg00394.html \n * @see interix links:      http://technet.microsoft.com/en-us/library/bb463204.aspx\n * @see windows shortcuts:  http://ithreats.files.wordpress.com/2009/05/lnk_the_windows_shortcut_file_format.pdf\n * @see windows junctions:  http://technet.microsoft.com/en-us/sysinternals\n * \n */\npublic class LinkedFile\n    extends java.io.File\n{\n\n    \n    public static final String TOK_SYMLINK = \"!<symlink>\\u00FF\\u00FE\";\n    \n    public static final String TOK_SHORTCUT = \"\\u004C\\u0000\\u0000\\u0000\\u0001\\u0014\\u0002\";\n    public static final String TOK_SHORTCUT_SEP = \"\\u0000\";\n    \n    public static final int    SHORTCUT_MAX = 1024;    // shortcuts should probably never be that big\n    public static final int    SHORTCUT_OFFSET = 76;   // first shortcut section length offset at 0x4C    \n\n\n    \n    // utilities\n    \n    \n    /**\n     * read a link header.\n     * \n     * both cygwin symlinks and windows shortcuts are plain binary files.\n     * cygwin is faily simple, consisting of magic header and the target.\n     * shortcuts have variable length structures but will not exceed 1kb.\n     */\n    public static String header (File file)\n        throws IOException\n    {\n        if (file == null)\n            return null;\n        \n        String header = null;\n        \n        if (file.exists() && file.canRead())\n        {\n            if (file.isFile() || (!file.isDirectory()))\n            {                \n                char[] buf = new char [SHORTCUT_MAX];\n                int length = new BufferedReader(new FileReader(file)).read(buf, 0, SHORTCUT_MAX);\n                header = new String(buf);\n\n                //System.err.println (\"length: \" + length);\n                //System.err.println (\"header: \" + header);\n                \n                if (isSymlinkHeader(header))\n                {\n                    //System.err.println(\"isSymlink: true\");                    \n                }\n                else if (isShortcutHeader(header))\n                {\n                    //System.err.println(\"isShortcut: true\");\n                }\n                else\n                {\n                    header = null;\n                }\n                \n            }\n        }\n        \n        return header;\n    }\n\n    \n    public static boolean isLinkHeader (String header)\n        throws IOException\n    {\n        return ( isSymlinkHeader(header) || isShortcutHeader(header) );\n    }\n    \n    \n    public static boolean isSymlinkHeader (String header)\n        throws IOException\n    {\n        if (header == null)\n            return false;\n        \n        if (header.startsWith(TOK_SYMLINK))\n        {\n            return true;\n        }\n        \n        return false;\n    }\n\n    \n    public static boolean isShortcutHeader (String header)\n        throws IOException\n    {\n        if (header == null)\n            return false;\n        \n        if (header.startsWith(TOK_SHORTCUT))\n        {\n            return true;\n        }\n        \n        return false;\n    }\n\n\n    /**\n     * parse a 2-char short length offset from a position in a windows shortcut file.\n     */\n    public static int shortcutHeaderOffset (String header, int pos)\n    {\n        if (header == null)\n            return 0;\n\n        char small = header.charAt(pos);\n        char large = header.charAt(pos +1);\n        int offset = small + (large * 16 * 16);\n        \n        //System.err.println (\"offset [\" + pos + \"] '\" + (short)small + \" \" + (short)large + \"' : \" + offset);        \n        return offset;\n    }\n    \n    \n    /**\n     * parse the final link target from a cygwin symlink or windows shortcut.\n     * \n     * cygwin symlink targets are immediately after the header \"<!symlink> 0xFF xFE\".\n     * \n     * windows shortcuts start with the header \"L 0x00 0x00 0x00 0x01 0x14 0x02\".\n     * the windows shortcut files are organized into sections of variable lengths,\n     * starting after the header at 0x4c (76). the lengths are 2-char short offsets.\n     * windows shortcut final name is at the end of the second \"file location\" section.\n     */\n    public static String headerTarget (String header)\n    {\n        if (header == null)\n            return null;\n\n        String target = null;\n\n        try\n        {\n            if (isSymlinkHeader(header))\n            {\n                StringBuffer buf = new StringBuffer(\"\");\n                for (int i = TOK_SYMLINK.length();  i < header.length(); i+=2)\n                {\n                    buf.append (header.charAt(i));\n                }\n                \n                target = buf.toString();                \n            }\n            else if (isShortcutHeader(header))\n            {\n                // first get the length of the next \"item id\" section \n                int a = shortcutHeaderOffset(header, SHORTCUT_OFFSET);\n                // now get the length of the next \"file location\" section\n                int b = shortcutHeaderOffset(header, SHORTCUT_OFFSET + a  + 2);\n                \n                // the final name is the last field of the \"file location\" section \n                int j = SHORTCUT_OFFSET + a + b;                \n                int i = header.lastIndexOf(TOK_SHORTCUT_SEP, j - 2) + 1;\n                \n                target = header.substring (i,j);                \n            }\n        }\n        catch (IOException e) {}\n\n        //System.err.println (\"target: \" + target);\n        return target;\n    }\n    \n    \n    \n    public static boolean isLink (File file)\n    {\n        if (file == null)\n            return false;\n        \n        try\n        {\n            if (file.exists() && file.canRead())\n            {\n                if (file.isFile() || (!file.isDirectory()))\n                {\n                    String header = header(file);\n                    return isLinkHeader(header);\n                }\n            }\n        }\n        catch (IOException e) {}\n        \n        return false;\n    }\n\n    \n    public static boolean isSymlink (File file)\n    {\n        if (file == null)\n            return false;\n        \n        try\n        {\n            if (file.exists() && file.canRead())\n            {\n                if (file.isFile() || (!file.isDirectory()))\n                {\n                    String header = header(file);\n                    return isSymlinkHeader(header);\n                }\n            }\n        }\n        catch (IOException e) {}\n        \n        return false;\n    }\n\n    \n    public static boolean isShortcut (File file)\n    {\n        if (file == null)\n            return false;\n        \n        try {\n            if (file.exists() && file.canRead())\n            {\n                if (file.isFile() || (!file.isDirectory()))\n                {\n                    String header = header(file);\n                    return isShortcutHeader(header);\n                }\n            }\n        }\n        catch (IOException e) {}\n        \n        return false;\n    }\n    \n    \n    /**\n     * Resolve a target by recursively traversing links until the canonical target.\n     * If the file is not a link, return the file's canonical AbsolutePath.\n     */\n    public static String resolveTarget (File file)\n    {\n        String target = file.getAbsolutePath();\n        //System.err.println(\"\\path: \" + target);\n        \n        try\n        {\n            if (file.exists() && file.canRead())\n            {\n                if (file.isFile() || (!file.isDirectory()))\n                {\n                    String header = header(file);\n                    if (isLinkHeader(header))\n                    {\n                        target = headerTarget(header);\n                        boolean absolute = (target.substring(1)).startsWith(\":\");\n                        boolean logical = (target.startsWith(\"/\") || target.startsWith(\"\\\\\"));\n                        boolean parent = (target.startsWith(\"../\") || target.startsWith(\"..\\\\\"));                        \n                        boolean current = (target.startsWith(\"./\") || target.startsWith(\".\\\\\"));\n                        \n                        File link = null;\n                        if (absolute)\n                            link = new File (target.substring(0,2), target.substring(2));\n                        else if (logical)\n                            link = new File(target.substring(0,1), target.substring(1));\n                        else if (parent)\n                            link = new File(target.substring(0,2), target.substring(2));                        \n                        else if (current)\n                            link = new File(target.substring(0,1), target.substring(1));\n                        else\n                            link = new File (target);\n                                                \n                        if (! file.equals(link))\n                        {\n                            target = resolveTarget(link);\n                        }\n                    }\n                }\n            }\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n        \n        //System.err.println(\"resolve: \" + target);\n        return target;\n    }\n\n    \n    /**\n     * \n     * Resolve a file by recursively traversing links until the canonical target.\n     * If the file is not a link, return the file itself.\n\n     * @param file\n     * @return\n     */\n    public static File resolveFile (File file)\n    {\n        //System.err.println(\"file: \" + file.getAbsolutePath());\n        \n        try\n        {\n            if (file.exists() && file.canRead())\n            {\n                if (file.isFile() || (!file.isDirectory()))\n                {\n                    String header = header(file);\n                    if (isLinkHeader(header))\n                    {\n                        String target = headerTarget(header);\n                        boolean absolute = (target.substring(1)).startsWith(\":\");\n                        boolean logical = (target.startsWith(\"/\") || target.startsWith(\"\\\\\"));\n                        boolean parent = (target.startsWith(\"../\") || target.startsWith(\"..\\\\\"));                        \n                        boolean current = (target.startsWith(\"./\") || target.startsWith(\".\\\\\"));\n                        \n                        File link = null;\n                        if (absolute)\n                            link = new File (target.substring(0,2), target.substring(2));\n                        else if (logical)\n                            link = new File(target.substring(0,1), target.substring(1));\n                        else if (parent)\n                            link = new File(target.substring(0,2), target.substring(2));                        \n                        else if (current)\n                            link = new File(target.substring(0,1), target.substring(1));\n                        else\n                            link = new File (target);\n                        \n                        if (! file.equals(link))\n                        {    \n                            file = resolveFile(link.getAbsoluteFile());\n                        }\n                    }\n                }\n            }\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n\n        //System.err.println(\"resolve: \" + file.getAbsolutePath());\n        return file;\n    }\n    \n    \n    // commmands\n\n    \n    /**\n     * LinkedFile command resolves a link and prints its final link target name.\n     * \n     * @param args\n     * @throws IOException\n     */\n    public static void main (String[] args)\n        throws IOException\n    {\n        try\n        {\n            if (args.length == 0)\n            {\n                System.err.println (\"usage: LinkedFile <filepath>\");\n                System.exit (1);\n            }\n            \n            LinkedFile file = new LinkedFile(args[0]);\n            System.out.println(file);\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n            System.exit (1);\n        }\n        \n    }\n\n\n    \n    \n    // fields\n    \n    \n    protected String source;        // the file source\n    protected String target;        // the resolved target path\n    \n    protected String header;        // the link header, if source is a link\n    protected boolean symlink;      // file is a cygwin symlink\n    protected boolean shortcut;     // file is a windows shortcut\n\n    protected File link;            // the original source file link\n\n    \n    \n    \n\n    // instantiators \n\n    \n    // constructors\n    \n    /**\n     * Creates a new File instance by converting the given pathname string into\n     * an abstract pathname.\n     */\n    public LinkedFile(String pathname)\n    {\n        super((resolveFile(new File(pathname))).getAbsolutePath());\n        \n        this.target = getAbsolutePath();\n        this.source = \"\" + pathname;\n        \n        this.link = new File(pathname);\n        this.symlink = isSymlink(link);\n        this.shortcut = isShortcut(link);\n    }\n\n    \n    /**\n     * Creates a new File instance from a parent abstract pathname and a child\n     * pathname string.\n     */\n    public LinkedFile(File parent, String child)\n    {\n        super((resolveFile(new File(parent, child))).getAbsolutePath());\n        \n        this.target = getAbsolutePath();\n        this.source = \"\" + parent.getName() + \"/\" + child;\n        \n        this.link = new File(parent, child);\n        this.symlink = isSymlink(link);\n        this.shortcut = isShortcut(link);\n    }\n\n    \n    /**\n     * Creates a new File instance from a parent pathname string and a child\n     * pathname string.\n     */\n    public LinkedFile(String parent, String child)\n    {\n        super((resolveFile(new File(parent, child))).getAbsolutePath());\n        \n        this.target = getAbsolutePath();\n        this.source = \"\" + parent + \"/\" + child;\n        \n        this.link = new File(parent, child);\n        this.symlink = isSymlink(link);\n        this.shortcut = isShortcut(link);\n    }\n\n    \n    /**\n     * Creates a new File instance by converting the given file: URI into an\n     * abstract pathname.\n     */\n    public LinkedFile(URI uri)\n    {\n        super((resolveFile(new File(uri))).getAbsolutePath());\n        \n        this.target = getAbsolutePath();\n        this.source = \"\" + uri;\n        \n        this.link = new File(uri);\n        this.symlink = isSymlink(link);\n        this.shortcut = isShortcut(link);\n    }\n\n    \n    // accessors\n\n\n    public boolean isLink()\n    {\n        return (symlink || shortcut);\n    }\n\n    \n    public boolean isSymlink()\n    {\n        return (symlink);\n    }\n\n\n    public boolean isShortcut()\n    {\n        return (shortcut);\n    }\n\n    \n    public String getSource()\n    {\n        return source;\n    }\n\n    public String getTarget()\n    {\n        return target;\n    }\n    \n    \n    \n    // overrides\n    \n    \n    public String getName()\n    {\n        return super.getName().replace('\\\\', '/');\n    }\n\n    public String getPath()\n    {\n        return super.getPath().replace('\\\\', '/');\n    }\n    \n    public String getAbsolutePath()\n    {\n        return super.getAbsolutePath().replace('\\\\', '/');\n    }\n    \n    public String getCanonicalPath()\n        throws IOException\n    {\n        return super.getCanonicalPath().replace('\\\\', '/');\n    }\n\n    \n    public String toString()\n    {\n\n//        System.err.println(\"\");\n//        System.err.println(\"file: \" + getAbsolutePath());\n//        System.err.println(\"path: \" + getPath());        \n//        System.err.println(\"name: \" + getName());\n//                \n//        System.err.println(\"source: \" + getSource());\n//        System.err.println(\"target: \" + getTarget());\n//\n//        System.err.println(\"exists: \" + exists());        \n//        System.err.println(\"canRead: \" + canRead());\n//        System.err.println(\"canWrite: \" + canWrite());\n//        System.err.println(\"canExecute: \" + canExecute());\n//\n//        System.err.println(\"isDirectory: \" + isDirectory());\n//        System.err.println(\"isSymlink: \" + isSymlink());\n//        System.err.println(\"isShortcut: \" + isShortcut());\n        \n\n        StringBuffer s = new StringBuffer(\"\");\n\n        if (isLink())\n            s.append(getSource() + \" -> \");\n\n        s.append(getTarget());\n\n        if (isDirectory())\n            s.append(\"/\");\n        \n        return s.toString();\n    }\n\n}\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fkorning","name":"fkorning","key":"fkorning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"FKorning","active":true,"timeZone":"Etc/UTC"},"created":"2012-04-29T16:03:47.669+0000","updated":"2012-04-29T16:03:47.669+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12550779/comment/13268978","id":"13268978","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fkorning","name":"fkorning","key":"fkorning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"FKorning","active":true,"timeZone":"Etc/UTC"},"body":"I've managed to get this working to the point where jobs are dispatched, tasks executed, and results compiled.\n\n* [http://en.wikisource.org/wiki/User:Fkorning/Code/Haddoop-on-Cygwin]\n\nHowever we still need to get the servlets to understand cygwin symlinks.  I have no idea how to do this in Jetty.\n\nThese two links show how to allow Tomcat and jetty to follow symlinks, but I don't know if this works in cygwin.\n*  http://www.lamoree.com/machblog/index.cfm?event=showEntry&entryId=A2F0ED76-A500-41A6-A1DFDE0D1996F925\n*  http://stackoverflow.com/questions/315093/configure-symlinks-for-single-directory-in-tomcat\n\nOtherwise we'll have to open up the jetty code and replace java.io.File with org.apache.hadoop.fs.LinkedFile.\n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fkorning","name":"fkorning","key":"fkorning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"FKorning","active":true,"timeZone":"Etc/UTC"},"created":"2012-05-05T15:02:28.059+0000","updated":"2012-05-05T15:02:28.059+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12550779/comment/13268985","id":"13268985","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fkorning","name":"fkorning","key":"fkorning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"FKorning","active":true,"timeZone":"Etc/UTC"},"body":"make that: http://en.wikisource.org/wiki/User:Fkorning/Code/Hadoop-on-Cygwin","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fkorning","name":"fkorning","key":"fkorning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"FKorning","active":true,"timeZone":"Etc/UTC"},"created":"2012-05-05T15:16:55.280+0000","updated":"2012-05-05T15:16:55.280+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12550779/comment/13552525","id":"13552525","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dolaamon2","name":"dolaamon2","key":"dolaamon2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"JY chen","active":true,"timeZone":"Etc/UTC"},"body":"I found there are some problems the LinkedFile.java above in my windows 7. When the stdout/stderr/syslog are created under tmp folder and hadoop create a linux symlink to corresponding files in local logs/userlogs/job_2XXXXXXXX/attempt_XXXXX/stdout. However, this folder\nlogs/userlogs/job_2XXXXXXXX/attempt_XXXXX is a symlink and stdout is a file in a symlink directory.\n\nI modify LinkeFile.java as\n\n........................\n\n    public LinkedFile(File parent, String child)\n    {\n        //work around when parent is linked symbol\n        super(resolveFile(new File(resolveFile(new File(parent.toString())).getAbsolutePath()\n          , child)).getAbsolutePath());\n        this.target = getAbsolutePath();\n\n........................\n\n    public LinkedFile(String parent, String child)\n    {\n        //work around when parent is linked symbol\n        super(resolveFile(new File(resolveFile(new File(parent)).getAbsolutePath()\n\n........................\n\nthat's only work around for this case","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dolaamon2","name":"dolaamon2","key":"dolaamon2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"JY chen","active":true,"timeZone":"Etc/UTC"},"created":"2013-01-14T09:15:45.836+0000","updated":"2013-01-14T09:15:45.836+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12550779/comment/13552536","id":"13552536","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=qwertymaniac","name":"qwertymaniac","key":"qwertymaniac","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=qwertymaniac&avatarId=16780","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=qwertymaniac&avatarId=16780","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=qwertymaniac&avatarId=16780","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=qwertymaniac&avatarId=16780"},"displayName":"Harsh J","active":true,"timeZone":"Asia/Kolkata"},"body":"For Windows, since the mainstream branch does not support it actively, am closing this as a Won't Fix.\n\nI'm certain the same issue does not happen on the branch-1-win 1.x branch (or the branch-trunk-win branch), and I urge you to use that instead if you wish to continue using Windows for development or other usage. Find the Windows-optimized sources at http://svn.apache.org/repos/asf/hadoop/common/branches/branch-1-win/ or http://svn.apache.org/repos/asf/hadoop/common/branches/branch-trunk-win/.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=qwertymaniac","name":"qwertymaniac","key":"qwertymaniac","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=qwertymaniac&avatarId=16780","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=qwertymaniac&avatarId=16780","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=qwertymaniac&avatarId=16780","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=qwertymaniac&avatarId=16780"},"displayName":"Harsh J","active":true,"timeZone":"Asia/Kolkata"},"created":"2013-01-14T09:49:28.070+0000","updated":"2013-01-14T09:49:28.070+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12550779/comment/13553191","id":"13553191","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fkorning","name":"fkorning","key":"fkorning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"FKorning","active":true,"timeZone":"Etc/UTC"},"body":"Yes, You'll need to make LinkedFile recursively traverse through symlinks.\nI just did a quick hack to get it to resolve the last basename as a link.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fkorning","name":"fkorning","key":"fkorning","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"FKorning","active":true,"timeZone":"Etc/UTC"},"created":"2013-01-14T22:13:34.611+0000","updated":"2013-01-14T22:13:34.611+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12550779/comment/14804915","id":"14804915","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lsattr","name":"lsattr","key":"lsattr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"haoxiaohui","active":true,"timeZone":"Etc/UTC"},"body":"Hi everybody,HADOOP-8274 has been Resolved? and How?  I can`t  run wordcount successfully with 1.0.1 on cygwin. Someone can help me !","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lsattr","name":"lsattr","key":"lsattr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"haoxiaohui","active":true,"timeZone":"Etc/UTC"},"created":"2015-09-18T03:37:05.124+0000","updated":"2015-09-18T03:37:05.124+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12550779/comment/14804964","id":"14804964","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lsattr","name":"lsattr","key":"lsattr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"haoxiaohui","active":true,"timeZone":"Etc/UTC"},"body":"can i down the detail?thanks a lot","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=lsattr","name":"lsattr","key":"lsattr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"haoxiaohui","active":true,"timeZone":"Etc/UTC"},"created":"2015-09-18T04:49:36.998+0000","updated":"2015-09-18T04:49:36.998+0000"}],"maxResults":9,"total":9,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-8274/votes","votes":2,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i07ubz:"}}