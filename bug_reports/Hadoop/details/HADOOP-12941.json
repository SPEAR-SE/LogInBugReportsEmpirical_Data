{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12951378","self":"https://issues.apache.org/jira/rest/api/2/issue/12951378","key":"HADOOP-12941","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310240","id":"12310240","key":"HADOOP","name":"Hadoop Common","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310240&avatarId=10095","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310240&avatarId=10095","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310240&avatarId=10095","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310240&avatarId=10095"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2016-03-20T17:08:17.699+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Aug 05 20:11:40 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-12941/watchers","watchCount":3,"isWatching":false},"created":"2016-03-17T23:25:42.081+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[{"id":"12461160","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12461160","type":{"id":"12310361","name":"Blocked","inward":"Blocked","outward":"Blocked","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310361"},"outwardIssue":{"id":"12765445","key":"HADOOP-11466","self":"https://issues.apache.org/jira/rest/api/2/issue/12765445","fields":{"summary":"FastByteComparisons: do not use UNSAFE_COMPARER on the SPARC architecture because it is slower there","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}}],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-08-05T20:11:40.989+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[],"timeoriginalestimate":null,"description":"Now that we have a core to look at we can sorta see what is going on#14 0x9fffffffaf000dd0 in Java native_call_stub frame#15 0x9fffffffaf014470 in JNI frame: sun.misc.Unsafe::getLong (java.lang.Object, long) ->long#16 0x9fffffffaf0067a0 in interpreted frame: org.apache.hadoop.hbase.util.Bytes$LexicographicalComparerHolder$UnsafeComparer::compareTo (byte[], int, int, byte[], int, int) ->int bci: 74#17 0x9fffffffaf0066e0 in interpreted frame: org.apache.hadoop.hbase.util.Bytes$LexicographicalComparerHolder$UnsafeComparer::compareTo (java.lang.Object, int, int, java.lang.Object, int, int) ->int bci: 16#18 0x9fffffffaf006720 in interpreted frame: org.apache.hadoop.hbase.util.Bytes::compareTo (byte[], int, int, byte[], int, int) ->int bci: 11#19 0x9fffffffaf0066e0 in interpreted frame: org.apache.hadoop.hbase.KeyValue$KVComparator::compareRowKey (org.apache.hadoop.hbase.Cell, org.apache.hadoop.hbase.Cell) ->int bci: 36#20 0x9fffffffaf0066e0 in interpreted frame: org.apache.hadoop.hbase.KeyValue$KVComparator::compare (org.apache.hadoop.hbase.Cell, org.apache.hadoop.hbase.Cell) ->int bci: 3#21 0x9fffffffaf0066e0 in interpreted frame: org.apache.hadoop.hbase.KeyValue$KVComparator::compare (java.lang.Object, java.lang.Object) ->int bci: 9;; Line: 4000xc00000003ad84d30:0 <Unsafe_GetLong+0x130>:    (p1)  ld8              r45=[r34]0xc00000003ad84d30:1 <Unsafe_GetLong+0x131>:          adds             r34=16,r320xc00000003ad84d30:2 <Unsafe_GetLong+0x132>:          adds             ret0=8,r32;;0xc00000003ad84d40:0 <Unsafe_GetLong+0x140>:          add              ret1=r35,r45 <==== r35 is off0xc00000003ad84d40:1 <Unsafe_GetLong+0x141>:          ld8              r35=[r34],240xc00000003ad84d40:2 <Unsafe_GetLong+0x142>:          nop.i            0x00xc00000003ad84d50:0 <Unsafe_GetLong+0x150>:          ld8              r41=[ret0];;0xc00000003ad84d50:1 <Unsafe_GetLong+0x151>:          ld8.s            r49=[r34],-240xc00000003ad84d50:2 <Unsafe_GetLong+0x152>:          nop.i            0x00xc00000003ad84d60:0 <Unsafe_GetLong+0x160>:          ld8              r39=[ret1];; <=== abort0xc00000003ad84d60:1 <Unsafe_GetLong+0x161>:          ld8              ret0=[r35]0xc00000003ad84d60:2 <Unsafe_GetLong+0x162>:          nop.i            0x0;;0xc00000003ad84d70:0 <Unsafe_GetLong+0x170>:          cmp.ne.unc       p1=r0,ret0;;M,MI0xc00000003ad84d70:1 <Unsafe_GetLong+0x171>:    (p1)  mov              r48=r410xc00000003ad84d70:2 <Unsafe_GetLong+0x172>:    (p1)  chk.s.i          r49,Unsafe_GetLong+0x290(gdb) x /10i $pc-48*20x9fffffffaf000d70:           flushrs                                                            MMI0x9fffffffaf000d71:           mov              r44=r320x9fffffffaf000d72:           mov              r45=r330x9fffffffaf000d80:           mov              r46=r34                                           MMI0x9fffffffaf000d81:           mov              r47=r350x9fffffffaf000d82:           mov              r48=r360x9fffffffaf000d90:           mov              r49=r37                                           MMI0x9fffffffaf000d91:           mov              r50=r380x9fffffffaf000d92:           mov              r51=r39\n0x9fffffffaf000da0:           adds             r14=0x270,r4                                      MMI(gdb) p /x $r35$9 = 0x22(gdb) x /x $ret10x9ffffffe1d0d2bda:     0x677a68676c78743a(gdb) x /x $r45+0x220x9ffffffe1d0d2bda:     0x677a68676c78743aSo here is the problem,  this is a 64bit JVM 0 : /opt/java8/bin/IA64W/java1 : -Djava.util.logging.config.file=/test28/gzh/tomcat/conf/logging.properties2 : -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager3 : -Dorg.apache.catalina.security.SecurityListener.UMASK=0224 : -server5 : -XX:PermSize=128m6 : -XX:MaxPermSize=256m7 : -Djava.endorsed.dirs=/test28/gzh/tomcat/endorsed8 : -classpath9 : /test28/gzh/tomcat/bin/bootstrap.jar:/test28/gzh/tomcat/bin/tomcat-juli.jar10 : -Dcatalina.base=/test28/gzh/tomcat11 : -Dcatalina.home=/test28/gzh/tomcat12 : -Djava.io.tmpdir=/test28/gzh/tomcat/temp13 : org.apache.catalina.startup.Bootstrap14 : startSince they are not passing and -Xmx values we are taking defaults which look at the system resources. So what is happening here is a 32 bit word aligned address is being used to index into a byte array (gdb) jo 0x9ffffffe1d0d2bb8_mark = 0x0000000000000001, _klass = 0x9fffffffa8c00768, instance of type [Blength of the array: 1180 0 0 102 0 0 0 8 0 70 103 122 104 103 108 120 116 58 70 83 78 95 50 48 49 53 49 48 50 50 44 65 44 49 52 52 53 52 55 57 57 51 51 57 53 56 46 52 56 54 55 50 48 51 49 99 57 97 101 52 57 101 97 101 49 100 56 49 51 53 51 99 99 97 97 54 98 56 100 46 4 105 110 102 111 115 101 113 110 117 109 68 117 114 105 110 103 79 112 101 110 0 0 1 80 -6 96 -95 -48 4 0 0 0 0 0 0 0 4This is the whole string gdb) x /2s 0x9ffffffe1d0d2bd80x9ffffffe1d0d2bd8:      \"\"0x9ffffffe1d0d2bd9:      \"Fgzhglxt:FSN_20151022,A,1445479933958.48672031c9ae49eae1d81353ccaa6b8d.\\004infoseqnumDuringOpen\"To me this is a bug in the callee potentially in org.apache.hadoop.hbase.util.Bytes$LexicographicalComparerHolder$UnsafeComparer::compareToWhy are they calling Unsafe_GetLong on a byte array,  there is no checking of alignment and I really think this is a bug on their part. As far as I know, GetLong expects 64 bit alignment I did find some other 64 bit users who saw this with the same stack trace as this customer\nhttps://issues.apache.org/jira/browse/PHOENIX-1438http://permalink.gmane.org/gmane.comp.java.hadoop.hbase.devel/39017\n\nthe fix would go here by adding a test for ia64 \n\nlooking at the code from a bug they are checking for if the box is sparc.  static Comparer<byte[]> getBestComparer() {\n+      if (System.getProperty(\"os.arch\").equals(\"sparc\")) {  <====\n+        if (LOG.isTraceEnabled()) {\n+          LOG.trace(\"Lexicographical comparer selected for \"\n+              + \"byte aligned system architecture\");\n+        }\n+        return lexicographicalComparerJavaImpl();\n+      }\n       try {\n         Class<?> theClass = Class.forName(UNSAFE_COMPARER_NAME);so this is 'fixable' from a java class perspective.Hari said he will talk with his open source contact \nThis Hadoop bug report points to the same problem in the same code:\n\n\nhttps://issues.apache.org/jira/browse/HADOOP-11466\n\n\n\n\nIn that case the symptom of the unaligned accesses was bad performance instead of a crash. This shows diffs for that fix:\n\n\nhttp://mail-archives.apache.org/mod_mbox/hadoop-common-commits/201501.mbox/%3Cb19d5f83ca7148b782e5b432817b6448@git.apache.org%3E\n\n\nThose diffs show that fix only avoids the bad code when running on \"sparc\". They really should have instead avoided that bad code for every architecture other than x86. They should not be assuming that that FastByteComparisons enhancement will work on other processors and actually improves performance. On processors that do allow unaligned accesses at much cost they are just creating bad performance that will be hard for anyone to ever find.\n\nFor all IA64 customers this will be an issue when running 64 bit. The IA processor enforces alignment on instruction types\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"abort in Unsafe_GetLong when running IA64 HPUX 64bit mode ","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genebradley","name":"genebradley","key":"genebradley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gene bradley","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genebradley","name":"genebradley","key":"genebradley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gene bradley","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"hpux IA64  running 64bit mode ","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12951378/comment/15200635","id":"15200635","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genebradley","name":"genebradley","key":"genebradley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gene bradley","active":true,"timeZone":"Etc/UTC"},"body":"same bug different chipset","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genebradley","name":"genebradley","key":"genebradley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gene bradley","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-17T23:45:02.473+0000","updated":"2016-03-17T23:45:02.473+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12951378/comment/15203364","id":"15203364","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~genebradley],\n\nI recommend keeping your description short so that people can quickly look at it and see what this bug is about.  You can provide additional details in the first few comments if necessary.\n\nThe discussion on HADOOP-11466 does explain why we chose to blacklist SPARC rather than whitelisting x86.  The biggest reason is that there are many x86 variants with slightly different names, and we were afraid of missing one and causing a fallback to unoptimized performance on x86.  The other reason is that most modern architectures support unaligned access, so disabling the optimization is getting less and less relevant.\n\nI see that you are running on Itanium.  This is actually a platform I'm not familiar with.  It seems like both Red Hat and Microsoft have dropped support for Itanium in their latest releases, so I'm not sure how much more of this architecture we will see.\n\nWould you care to post a patch fixing the problem on Itanium?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-03-20T17:08:17.699+0000","updated":"2016-03-20T17:08:17.699+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12951378/comment/15205054","id":"15205054","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genebradley","name":"genebradley","key":"genebradley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gene bradley","active":true,"timeZone":"Etc/UTC"},"body":"\nHi  Colin,\n\nI always add stack trace and register info so if some other unlucky guy hits a crash they can do patch and match.\n\nif (System.getProperty(\"os.arch\").equals(\"sparc\"))  || System.getProperty(\"os.arch\").equals(\"ia64\"))  \n\nshould be a pretty easy fix just testing in would be the issue.\n\nThis came in thru a customer of ours in China, let me check with them if they can swing a test for us.\n\nAnd I can post the fix, but since I have never done this before would benefit from some guidance.\n\n\nGene\n\n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genebradley","name":"genebradley","key":"genebradley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gene bradley","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-21T20:35:40.625+0000","updated":"2016-03-21T20:35:40.625+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12951378/comment/15205231","id":"15205231","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi gene,\n\nIt would be better if you put the stack into a comment than in the description.\n\nbq. if (System.getProperty(\"os.arch\").equals(\"sparc\")) || System.getProperty(\"os.arch\").equals(\"ia64\")) should be a pretty easy fix just testing in would be the issue.\n\nok\n\nbq. And I can post the fix, but since I have never done this before would benefit from some guidance.\n\nJust attach it as a patch file to this JIRA.  Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-03-21T21:52:18.700+0000","updated":"2016-03-21T21:52:18.700+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12951378/comment/15409994","id":"15409994","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genebradley","name":"genebradley","key":"genebradley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gene bradley","active":true,"timeZone":"Etc/UTC"},"body":"HI Colin,\n\nHow can I get this fixed.  Again it’s a  real simple fix.\n\n\nGene\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genebradley","name":"genebradley","key":"genebradley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"gene bradley","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-05T20:11:40.740+0000","updated":"2016-08-05T20:11:40.740+0000"}],"maxResults":5,"total":5,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HADOOP-12941/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2uuvj:"}}