{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Gary Tully",
            "key": "gtully",
            "name": "gtully",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=gtully",
            "timeZone": "Etc/UTC"
        },
        "components": [{
            "id": "12313892",
            "name": "Broker",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12313892"
        }],
        "created": "2009-02-17T15:35:46.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Andrew",
            "key": "aremuzzi",
            "name": "aremuzzi",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=aremuzzi",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310041": null,
        "customfield_12310080": null,
        "customfield_12310220": "2010-08-06T14:06:50.288+0000",
        "customfield_12310222": "1_*:*_1_*:*_46462087292_*|*_5_*:*_1_*:*_0",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "75066",
        "customfield_12310920": "159889",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0rq7b:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Aug 09 09:43:53 UTC 2010",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "Config and stack trace attached \n\nusing below config activemq broker fails to start as it is unable to resolve IP to domain name.\n\nusing transport connector syntax from here \n\nhttp://activemq.apache.org/tcp-transport-reference.html\n\n\n<!-- \n   Licensed to the Apache Software Foundation (ASF) under one or more \n   contributor license agreements.  See the NOTICE file distributed with \n   this work for additional information regarding copyright ownership. \n   The ASF licenses this file to You under the Apache License, Version 2.0 \n   (the \"License\"); you may not use this file except in compliance with \n   the License.  You may obtain a copy of the License at \n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software \n   distributed under the License is distributed on an \"AS IS\" BASIS, \n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \n   See the License for the specific language governing permissions and \n   limitations under the License. \n--> \n<!-- START SNIPPET: example --> \n<beans \n xmlns=\"http://www.springframework.org/schema/beans\" \n xmlns:amq=\"http://activemq.apache.org/schema/core\" \n xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\n http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd\n http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd\"> \n\n   <!-- Allows us to use system properties as variables in this configuration file --> \n   <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\"> \n        <property name=\"locations\"> \n           <value>file:///${activemq.base}/conf/credentials.properties<\/value> \n        <\/property> \n   <\/bean> \n\n   <broker xmlns=\"http://activemq.apache.org/schema/core\" brokerName=\"localhost\" dataDirectory=\"${activemq.base}/data\"> \n\n       <!-- Destination specific policies using destination names or wildcards --> \n       <destinationPolicy> \n           <policyMap> \n               <policyEntries> \n                   <policyEntry queue=\">\" memoryLimit=\"5mb\"/> \n                   <policyEntry topic=\">\" memoryLimit=\"5mb\"> \n                     <!-- you can add other policies too such as these \n                       <dispatchPolicy> \n                           <strictOrderDispatchPolicy/> \n                       <\/dispatchPolicy> \n                       <subscriptionRecoveryPolicy> \n                           <lastImageSubscriptionRecoveryPolicy/> \n                       <\/subscriptionRecoveryPolicy> \n                     --> \n                   <\/policyEntry> \n               <\/policyEntries> \n           <\/policyMap> \n       <\/destinationPolicy> \n\n       <!-- Use the following to configure how ActiveMQ is exposed in JMX --> \n       <managementContext> \n           <managementContext createConnector=\"false\"/> \n       <\/managementContext> \n\n       <!-- The store and forward broker networks ActiveMQ will listen to --> \n       <networkConnectors> \n           <!-- by default just auto discover the other brokers --> \n        <!--   <networkConnector name=\"default-nc\" uri=\"multicast://default\"/> --> \n           <!-- Example of a static configuration: \n           <networkConnector name=\"host1 and host2\" uri=\"static://(tcp://host1:61616,tcp://host2:61616)\"/> \n           --> \n       <\/networkConnectors> \n\n       <persistenceAdapter> \n           <amqPersistenceAdapter syncOnWrite=\"false\" directory=\"${activemq.base}/data\" maxFileLength=\"20 mb\"/> \n       <\/persistenceAdapter> \n\n       <!-- Use the following if you wish to configure the journal with JDBC --> \n       <!-- \n       <persistenceAdapter> \n           <journaledJDBC dataDirectory=\"${activemq.base}/data\" dataSource=\"#postgres-ds\"/> \n       <\/persistenceAdapter> \n       --> \n\n       <!-- Or if you want to use pure JDBC without a journal --> \n       <!-- \n       <persistenceAdapter> \n           <jdbcPersistenceAdapter dataSource=\"#postgres-ds\"/> \n       <\/persistenceAdapter> \n       --> \n\n       <sslContext> \n           <sslContext keyStore=\"file:${activemq.base}/conf/broker.ks\" keyStorePassword=\"password\" trustStore=\"file:${activemq.base}/conf/broker.ts\" trustStorePassword=\"password\"/> \n       <\/sslContext> \n\n       <!--  The maximum about of space the broker will use before slowing down producers --> \n       <systemUsage> \n           <systemUsage> \n               <memoryUsage> \n                   <memoryUsage limit=\"20 mb\"/> \n               <\/memoryUsage> \n               <storeUsage> \n                   <storeUsage limit=\"1 gb\" name=\"foo\"/> \n               <\/storeUsage> \n               <tempUsage> \n                   <tempUsage limit=\"100 mb\"/> \n               <\/tempUsage> \n           <\/systemUsage> \n       <\/systemUsage> \n\n\n       <!-- The transport connectors ActiveMQ will listen to --> \n       <transportConnectors> \n           <transportConnector name=\"openwire\" uri=\"tcp://192.168.98.101:61616?useLocalHost=true\" /> \n       <!--    <transportConnector name=\"openwire\" uri=\"tcp://localhost:61616\" discoveryUri=\"multicast://default\"/> \n           <transportConnector name=\"ssl\" uri=\"ssl://localhost:61617\"/> \n           <transportConnector name=\"stomp\" uri=\"stomp://localhost:61613\"/> \n           <transportConnector name=\"xmpp\" uri=\"xmpp://localhost:61222\"/> --> \n       <\/transportConnectors> \n\n   <\/broker> \n\n   <!-- \n   ** Lets deploy some Enterprise Integration Patterns inside the ActiveMQ Message Broker \n   ** For more details see \n   ** \n   ** http://activemq.apache.org/enterprise-integration-patterns.html\n   --> \n   <camelContext id=\"camel\" xmlns=\"http://activemq.apache.org/camel/schema/spring\"> \n\n       <!-- You can use a <package> element for each root package to search for Java routes --> \n       <package>org.foo.bar<\/package> \n\n       <!-- You can use Spring XML syntax to define the routes here using the <route> element --> \n       <route> \n           <from uri=\"activemq:example.A\"/> \n           <to uri=\"activemq:example.B\"/> \n       <\/route> \n   <\/camelContext> \n\n   <!-- \n   ** Lets configure some Camel endpoints \n   ** \n   ** http://activemq.apache.org/camel/components.html\n   --> \n\n   <!-- configure the camel activemq component to use the current broker --> \n   <bean id=\"activemq\" class=\"org.apache.activemq.camel.component.ActiveMQComponent\" > \n       <property name=\"connectionFactory\"> \n         <bean class=\"org.apache.activemq.ActiveMQConnectionFactory\"> \n           <property name=\"brokerURL\" value=\"vm://localhost?create=false&waitForStart=10000\" /> \n           <property name=\"userName\" value=\"${activemq.username}\"/> \n           <property name=\"password\" value=\"${activemq.password}\"/> \n         <\/bean> \n       <\/property> \n   <\/bean> \n\n\n\n   <!-- Uncomment to create a command agent to respond to message based admin commands on the ActiveMQ.Agent topic --> \n   <!-- \n   <commandAgent xmlns=\"http://activemq.apache.org/schema/core\" brokerUrl=\"vm://localhost\" username=\"${activemq.username}\" password=\"${activemq.password}\"/> \n   --> \n\n\n   <!-- An embedded servlet engine for serving up the Admin console --> \n   <jetty xmlns=\"http://mortbay.com/schemas/jetty/1.0\"> \n       <connectors> \n           <nioConnector port=\"8161\"/> \n       <\/connectors> \n\n       <handlers> \n           <webAppContext contextPath=\"/admin\" resourceBase=\"${activemq.base}/webapps/admin\" logUrlOnStart=\"true\"/> \n           <webAppContext contextPath=\"/demo\" resourceBase=\"${activemq.base}/webapps/demo\" logUrlOnStart=\"true\"/> \n           <webAppContext contextPath=\"/fileserver\" resourceBase=\"${activemq.base}/webapps/fileserver\" logUrlOnStart=\"true\"/> \n       <\/handlers> \n   <\/jetty> \n\n   <!--  This xbean configuration file supports all the standard spring xml configuration options --> \n\n   <!-- Postgres DataSource Sample Setup --> \n   <!-- \n   <bean id=\"postgres-ds\" class=\"org.postgresql.ds.PGPoolingDataSource\"> \n     <property name=\"serverName\" value=\"localhost\"/> \n     <property name=\"databaseName\" value=\"activemq\"/> \n     <property name=\"portNumber\" value=\"0\"/> \n     <property name=\"user\" value=\"activemq\"/> \n     <property name=\"password\" value=\"activemq\"/> \n     <property name=\"dataSourceName\" value=\"postgres\"/> \n     <property name=\"initialConnections\" value=\"1\"/> \n     <property name=\"maxConnections\" value=\"10\"/> \n   <\/bean> \n   --> \n\n   <!-- MySql DataSource Sample Setup --> \n   <!-- \n   <bean id=\"mysql-ds\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\"> \n     <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/> \n     <property name=\"url\" value=\"jdbc:mysql://localhost/activemq?relaxAutoCommit=true\"/> \n     <property name=\"username\" value=\"activemq\"/> \n     <property name=\"password\" value=\"activemq\"/> \n     <property name=\"maxActive\" value=\"200\"/> \n     <property name=\"poolPreparedStatements\" value=\"true\"/> \n   <\/bean> \n   --> \n\n   <!-- Oracle DataSource Sample Setup --> \n   <!-- \n   <bean id=\"oracle-ds\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\"> \n     <property name=\"driverClassName\" value=\"oracle.jdbc.driver.OracleDriver\"/> \n     <property name=\"url\" value=\"jdbc:oracle:thin:@localhost:1521:AMQDB\"/> \n     <property name=\"username\" value=\"scott\"/> \n     <property name=\"password\" value=\"tiger\"/> \n     <property name=\"maxActive\" value=\"200\"/> \n     <property name=\"poolPreparedStatements\" value=\"true\"/> \n   <\/bean> \n   --> \n\n   <!-- Embedded Derby DataSource Sample Setup --> \n   <!-- \n   <bean id=\"derby-ds\" class=\"org.apache.derby.jdbc.EmbeddedDataSource\"> \n     <property name=\"databaseName\" value=\"derbydb\"/> \n     <property name=\"createDatabase\" value=\"create\"/> \n   <\/bean> \n   --> \n\n<\/beans> \n<!-- END SNIPPET: example --> \n\n\n\n2009-01-27 16:42:43,439 [erSimpleAppMain] INFO  DefaultCamelContext            - JMX enabled. Using InstrumentationLifecycleStrategy. \n2009-01-27 16:42:43,558 [erSimpleAppMain] ERROR BrokerService                  - Failed to resolve localhost \n2009-01-27 16:42:44,592 [erSimpleAppMain] INFO  BrokerService                  - Using Persistence Adapter: AMQPersistenceAdapter(/opt/activemq/data) \n2009-01-27 16:42:44,709 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - AMQStore starting using directory: /opt/activemq/data \n2009-01-27 16:42:44,988 [erSimpleAppMain] INFO  KahaStore                      - Kaha Store using data directory /opt/activemq/data/kr-store/state \n2009-01-27 16:42:45,473 [erSimpleAppMain] INFO  AMQPersistenceAdapter          - Active data files: [] \n2009-01-27 16:42:45,726 [erSimpleAppMain] INFO  BrokerService                  - ActiveMQ 5.2.0 JMS Message Broker (localhost) is starting \n2009-01-27 16:42:45,726 [erSimpleAppMain] INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/\n2009-01-27 16:42:45,820 [erSimpleAppMain] INFO  KahaStore                      - Kaha Store using data directory /opt/activemq/data/kr-store/data \n2009-01-27 16:42:46,126 [erSimpleAppMain] ERROR BrokerService                  - Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Transport Connector could not be registered in JMX: Failed to bind to server socket: tcp://192.168.98.101:61616?useLocalHost=true due to: java.net.UnknownHostException: test_host.test_domain: test_host.test_domain \njava.io.IOException: Transport Connector could not be registered in JMX: Failed to bind to server socket: tcp://192.168.98.101:61616?useLocalHost=true due to: java.net.UnknownHostException: test_host.test_domain: test_host.test_domain \n       at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27) \n       at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1434) \n       at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:1893) \n       at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1844) \n       at org.apache.activemq.broker.BrokerService.start(BrokerService.java:480) \n       at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:52) \n       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1368) \n       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1334) \n       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473) \n       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409) \n       at java.security.AccessController.doPrivileged(Native Method) \n       at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380) \n       at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264) \n       at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221) \n       at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261) \n       at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185) \n       at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164) \n       at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429) \n       at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729) \n       at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381) \n       at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64) \n       at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52) \n       at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96) \n       at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52) \n       at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71) \n       at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54) \n       at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115) \n       at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74) \n       at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) \n       at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129) \n       at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57) \n       at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79) \n       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \n       at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) \n       at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) \n       at java.lang.reflect.Method.invoke(Unknown Source) \n       at org.apache.activemq.console.Main.runTaskClass(Main.java:225) \n       at org.apache.activemq.console.Main.main(Main.java:106) \n       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \n       at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) \n       at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) \n       at java.lang.reflect.Method.invoke(Unknown Source) \n       at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240) \n       at java.lang.Thread.run(Unknown Source) \nCaused by: java.io.IOException: Failed to bind to server socket: tcp://192.168.98.101:61616?useLocalHost=true due to: java.net.UnknownHostException: test_host.test_domain: test_host.test_domain \n       at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33) \n       at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:141) \n       at org.apache.activemq.transport.tcp.TcpTransportFactory.doBind(TcpTransportFactory.java:60) \n       at org.apache.activemq.transport.TransportFactory.bind(TransportFactory.java:131) \n       at org.apache.activemq.broker.TransportConnector.createTransportServer(TransportConnector.java:293) \n       at org.apache.activemq.broker.TransportConnector.getServer(TransportConnector.java:135) \n       at org.apache.activemq.broker.TransportConnector.asManagedConnector(TransportConnector.java:98) \n       at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1428) \n       ... 42 more \nCaused by: java.net.UnknownHostException: test_host.test_domain: test_host.test_domain \n       at java.net.InetAddress.getLocalHost(Unknown Source) \n       at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:133) \n       ... 48 more \n2009-01-27 16:42:46,129 [erSimpleAppMain] INFO  BrokerService                  - ActiveMQ Message Broker (localhost, null) is shutting down \n2009-01-27 16:42:46,129 [erSimpleAppMain] INFO  TransportConnector             - Connector openwire Stopped \n2009-01-27 16:42:46,204 [erSimpleAppMain] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, null) stopped \n\n\n",
        "duedate": null,
        "environment": "RHEL linux Ver 5 ",
        "fixVersions": [{
            "archived": false,
            "description": "version 5 feature complete",
            "id": "12315623",
            "name": "5.4.0",
            "releaseDate": "2010-08-17",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315623"
        }],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Andrew",
            "key": "aremuzzi",
            "name": "aremuzzi",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=aremuzzi",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2010-08-09T09:43:53.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Active MQ Transport connector does not appear to honor use LocalHost option",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2010-08-09T09:43:53.000+0000",
        "versions": [{
            "archived": false,
            "description": "",
            "id": "12315619",
            "name": "5.2.0",
            "releaseDate": "2008-11-20",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315619"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2122/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2122/watchers",
            "watchCount": 1
        },
        "workratio": -1
    },
    "id": "12481759",
    "key": "AMQ-2122",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12481759"
}