{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12977292","self":"https://issues.apache.org/jira/rest/api/2/issue/12977292","key":"AMQ-6318","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2016-06-13T12:44:38.621+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Jun 27 20:00:25 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6318/watchers","watchCount":3,"isWatching":false},"created":"2016-06-09T17:05:18.563+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12335045","id":"12335045","name":"5.13.3","archived":false,"released":true,"releaseDate":"2016-05-02"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-06-27T20:00:25.937+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"Just trying to setup a policyEntry for a limit of pending messages in a topic \"customer01.data.value\" where an application is writing messages to just realized that the wildcards seems to not to being handled properly.\n\n{code:xml}\n        <destinationPolicy>\n            <policyMap>\n              <policyEntries>\n                <policyEntry topic=\">\" >\n                    <!-- The constantPendingMessageLimitStrategy is used to prevent\n                         slow topic consumers to block producers and affect other consumers\n                         by limiting the number of messages that are retained\n                         For more information, see:\n\n                         http://activemq.apache.org/slow-consumer-handling.html\n\n                    -->\n                  <pendingMessageLimitStrategy>\n                    <constantPendingMessageLimitStrategy limit=\"1000\"/>\n                  </pendingMessageLimitStrategy>\n                </policyEntry>\n\t\t\t\t<policyEntry topic=\"*.data.>\" topicPrefetch=\"1\" durableTopicPrefetch=\"1\">\n\t\t\t\t\t<pendingMessageLimitStrategy>\n\t\t\t\t\t\t<constantPendingMessageLimitStrategy limit=\"10\"/>\n\t\t\t\t\t</pendingMessageLimitStrategy>\n\t\t\t\t</policyEntry>             \n              </policyEntries>\n            </policyMap>\n        </destinationPolicy>\n{code}\n\nAbove causes inconsistencies on all the topics receiving messages that even didn't match the wildcard naming ie. \"customer01.in.data\"\n\nTried also with: \n\n{code:xml}\n<policyEntry topic=\"customer01.data.>\" topicPrefetch=\"1\" durableTopicPrefetch=\"1\">\n\t\t\t\t\t<pendingMessageLimitStrategy>\n\t\t\t\t\t\t<constantPendingMessageLimitStrategy limit=\"10\"/>\n\t\t\t\t\t</pendingMessageLimitStrategy>\n\t\t\t\t</policyEntry> \n{code}\n\nand with: \n\n{code:xml}\n<policyEntry topic=\"customer01.data.value\" topicPrefetch=\"1\" durableTopicPrefetch=\"1\">\n\t\t\t\t\t<pendingMessageLimitStrategy>\n\t\t\t\t\t\t<constantPendingMessageLimitStrategy limit=\"10\"/>\n\t\t\t\t\t</pendingMessageLimitStrategy>\n\t\t\t\t</policyEntry> \n{code}\n\nLast two above didn't caused inconsistencies on the topics that didn't match the naming but anyway didn't made the limit strategy of pending messages for the topic \"customer01.data.value\"","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"policyEntry doesn't handle wildcards properly","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=teixi","name":"teixi","key":"teixi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=teixi&avatarId=25250","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=teixi&avatarId=25250","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=teixi&avatarId=25250","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=teixi&avatarId=25250"},"displayName":"Jaume Teixi","active":true,"timeZone":"Europe/Berlin"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=teixi","name":"teixi","key":"teixi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=teixi&avatarId=25250","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=teixi&avatarId=25250","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=teixi&avatarId=25250","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=teixi&avatarId=25250"},"displayName":"Jaume Teixi","active":true,"timeZone":"Europe/Berlin"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12977292/comment/15327281","id":"15327281","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"body":"[~gtully] and [~tabish121],\n\nI have noticed this filtering issue before when I was working on some policy stuff.  For example, I would expect the following code would work but it actually fails as the map returns a value which seems odd as the entry specifies a decendent and the value passed to get() doesn't have a descendent:\n{code:java}\nDestinationMap map = new DestinationMap();\nmap.put(new ActiveMQQueue(\"value.>\"), \"\");\nassertTrue(map.get(new ActiveMQQueue(\"value\")) == null);\n{code}\n\nThere's a comment on line 255 of the DestinationMapNode class which seems to indicate that this is intentional so I left it alone in the past but I wanted to see what you guys thought about this behavior as it doesn't seem right to me in this case.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"created":"2016-06-13T12:44:38.621+0000","updated":"2016-06-13T12:44:38.621+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12977292/comment/15350901","id":"15350901","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"[~cshannon] I agree, it seems wrong but I guess it depends on if ANY_DESCENDENT included none. \nGiven how long that code has been there my bet is changing it will cause some head ache for existing users.\nAny internal dependency should fall out from the existing tests.\n\nNote: * or ANY_CHILD will not match none, which makes sense.\n\n{code}\n        ActiveMQQueue queue = new ActiveMQQueue(\"value\");\n        DestinationMap map2 = new DestinationMap();\n        map2.put(new ActiveMQQueue(\"value.>\"), v1);\n        assertEquals(1, map2.get(queue).size());\n\n        map2 = new DestinationMap();\n        map2.put(new ActiveMQQueue(\"value.*\"), v1);\n        assertEquals(0, map2.get(queue).size());\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2016-06-27T12:19:23.816+0000","updated":"2016-06-27T12:19:23.816+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12977292/comment/15351702","id":"15351702","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"body":"[~gtully], thanks for the input.  [~tabish121] and I discussed this a little bit a week or 2 ago and we came to the same conclusion about the existing user case being an issue.  \n\nThe only way I could see changing it would be to do fix it in a major release (like 5.14.0) and then try and document the change in the release notes.  But given how long the behavior has existed I'm not sure it would be worth the headache to change it at this point. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"created":"2016-06-27T20:00:25.937+0000","updated":"2016-06-27T20:00:25.937+0000"}],"maxResults":3,"total":3,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6318/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2z8fj:"}}