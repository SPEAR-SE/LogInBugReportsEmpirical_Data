{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12483333","self":"https://issues.apache.org/jira/rest/api/2/issue/12483333","key":"AMQ-1350","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"parent":{"id":"12482170","key":"AMQ-1352","self":"https://issues.apache.org/jira/rest/api/2/issue/12482170","fields":{"summary":"Shutdown fails if DB connection is lost","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315630","id":"12315630","description":"Issues that need to be reviewed - do we keep 'em or do we kick 'em? ","name":"NEEDS_REVIEW","archived":false,"released":false}],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2007-07-28T11:45:49.641+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Sep 08 20:35:16 UTC 2008","customfield_12310420":"95764","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-1350/watchers","watchCount":5,"isWatching":false},"created":"2007-07-27T21:37:26.470+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315619","id":"12315619","description":"","name":"5.2.0","archived":false,"released":true,"releaseDate":"2008-11-20"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2010-04-28T17:29:25.576+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313895","id":"12313895","name":"Message Store"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"This problem involves the JDBC master/slave configuration when the db server is restarted, or when the brokers lose their JDBC connections for whatever reason temporarily, and when a datasource is in use that can re-establish stale connections prior to providing them to the broker.\n\nThe problem lies with the JDBC locking strategy used to determine which broker is master and which are slaves.  Let's say there are two brokers, a master and a slave, and they've successfully initialized.  If you restart the database server, the slave will throw an exception because it's just caught an exception while blocked attempting to get the lock.  The slave will then *retry* the process of getting a lock over and over again.  Now, since the database was bounced, the *master* will have lost its lock in the activemq_lock table.  However, with the current 4.x-5.x code, it will never \"know\" that it has lost the lock.  There is no mechanism to check the lock state.  So it will continue to think that it is the master and will leave all of its network connectors active.\n\nWhen the slave tries to acquire the lock now, if the datasource has restored connections to the now-restarted database server, it will succeed.  The slave will come up as master, and there will be two masters active concurrently.  Both masters should at this point be fully-functional, as both will have datasources that can talk to the database server once again.\n\nI have tested this with c3p0 and verified that I get two masters after bouncing the database server.  If, at that point, I kill the original slave broker, the original master still appears to be functioning normally.  If, instead, I kill the original master broker, messages are still delivered via the original slave (now co-master).  It does not seem to matter which broker the clients connect to - both work.\n\nThere is no workaround that I can think of that would function correctly across multiple database bounces.  If a slave's datasource does not have the functionality to do database reconnects, then, after the first database server restart, it will never be able to establish a connection to the db server in order to attempt to acquire the lock.  This, combined with the fact that the JDBC master/slave topology does not have any favored brokers -- all can be masters or slaves depending on start-up order and the failures that have occurred over time, means that a datasource that can do reconnects is required on all brokers.  Therefore it would seem that in the JDBC masters/slave topology a database restart or temporary loss of database connectivity will always result in multiple masters.\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12460633","id":"12460633","filename":"activemq-master-slave.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=msiegenthaler","name":"msiegenthaler","key":"msiegenthaler","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mario Siegenthaler","active":true,"timeZone":"Etc/UTC"},"created":"2007-07-28T22:54:12.552+0000","size":13137,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12460633/activemq-master-slave.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10042","value":"Patch Available","id":"10042"}],"customfield_12310921":null,"customfield_12310920":"59854","customfield_12312823":null,"summary":"JDBC master/slave does not work properly with datasources that can reconnect to the database","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eta","name":"eta","key":"eta","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Anderson","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eta","name":"eta","key":"eta","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Anderson","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Linux x86_64, Sun jdk 1.6, Postgresql 8.2.4, c3p0 or other pooling datasources","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483333/comment/12936470","id":"12936470","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=msiegenthaler","name":"msiegenthaler","key":"msiegenthaler","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mario Siegenthaler","active":true,"timeZone":"Etc/UTC"},"body":"We've also expired this behavior on a 4.1.1 master/slave configuration using SQL-Server. The master has somehow lost the lock during a database maintance operation (we suspect some DB-admin killed the lock in order to be able to backup the database) and we ended up with two masters.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=msiegenthaler","name":"msiegenthaler","key":"msiegenthaler","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mario Siegenthaler","active":true,"timeZone":"Etc/UTC"},"created":"2007-07-28T11:45:49.641+0000","updated":"2007-07-28T11:45:49.641+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483333/comment/12936474","id":"12936474","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=msiegenthaler","name":"msiegenthaler","key":"msiegenthaler","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mario Siegenthaler","active":true,"timeZone":"Etc/UTC"},"body":"Patch for this issue. You can now specify a keep-alive/check period for the lock on the database. If the lock is lost then the broker is shut down.\nExample configuration:\n    <persistenceAdapter>\n        <jdbcPersistenceAdapter dataSource=\"#mysql-ds\" lockKeepAlivePeriod=\"1000\"/>\n    </persistenceAdapter>\n\nDetail content:\n - Expose the already existing lock (added getter and setter)\n - Fixed the startup of the PersistenceAdapter by the BrokerService. The configureService() method wasn't executed when configured via xml.\n - Fixed some smaller things within JDBCPersistence (mostly error handling stuff in the shutdown case)\n - Better handling of absent database-locking (configuration-flag). Introduced a NoLock-Locker to avoid having to check for the flag all over the place. \n - Moved the INSERT-row into lock table from the database setup to the lock-aquire. Reason: This statement executed on the slave (db already locked) will block resulting in the missing \"Attempting to acquire the exclusive lock to become the Master broker\" message. (this fix is not directly related to this issue)\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=msiegenthaler","name":"msiegenthaler","key":"msiegenthaler","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mario Siegenthaler","active":true,"timeZone":"Etc/UTC"},"created":"2007-07-28T22:54:12.660+0000","updated":"2007-07-28T22:54:12.660+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483333/comment/12936420","id":"12936420","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=msiegenthaler","name":"msiegenthaler","key":"msiegenthaler","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mario Siegenthaler","active":true,"timeZone":"Etc/UTC"},"body":"Note that the patch will not try to reaquire the lock, it'll just check if nobody else holds the lock and shutdown in that case. We could also try to check if we still hold the lock and update it if neccessary. However I fear that doing a SELECT FOR UPDATE every x seconds will kill/slowdown the database because it'll result in 1000s of lock. Or does the database realize that we already have locked this thing and the statement is a no-op lockingwise? Also is there a portable way to check for a existing lock without being blocked in that case?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=msiegenthaler","name":"msiegenthaler","key":"msiegenthaler","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mario Siegenthaler","active":true,"timeZone":"Etc/UTC"},"created":"2007-07-28T23:00:11.876+0000","updated":"2007-07-28T23:00:11.876+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483333/comment/12936166","id":"12936166","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=msiegenthaler","name":"msiegenthaler","key":"msiegenthaler","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mario Siegenthaler","active":true,"timeZone":"Etc/UTC"},"body":"I did some further research on this topic. Here's what I'm going for:\n  a) Lock something (f.e. the lock table) on startup\n      + on success: goto b\n      + else: try to lock until you succeed (repeat a)\n  b) Start the broker and a keep alive thread (executed every x seconds -> c)\n  c) Check if we still do hold the lock (and that the db is still there)\n      + if we do: wait till next keepalive, then execute c)\n      + else: d) \n   d) Shut down the broker because there's another master running\n\nNow the tricky part of this idea is actually set c), because there's no possibility to express \"go see if you can lock that row/table/whatever and return immediately if it's already locked\" (something like a tryLockNoWait). There isn't even a standard way to express a lock-wait-timeout.\nWhile it's possible to simulate a lock timeout (f.e. terminate the query after 5s and consider the table locked by another party) this is an unclean and IMO risky approach.\n\nI can offer a solution for three database systems:\n* MySQL: select get_lock(\"my_activemq_lock\", 0); does exactly what I want to do. I doesn't use the lock-table.\n* MS SQL-Server: select * from activemq_lock where id=1 with readpast would skip the row if it's locked without waiting, so we can look at the result count. The same should also be possible with an update statement.\n* Oracle: Is supposed to have the same feature as sql-server although with a slightly different syntax. \n\nMy research for a DB2 solution was without success, the others I didn't try yet.\n\nAny feedback on this solution?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=msiegenthaler","name":"msiegenthaler","key":"msiegenthaler","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mario Siegenthaler","active":true,"timeZone":"Etc/UTC"},"created":"2007-08-02T23:41:59.313+0000","updated":"2007-08-02T23:41:59.313+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483333/comment/12939207","id":"12939207","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manishbel","name":"manishbel","key":"manishbel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manish Bellani","active":true,"timeZone":"Etc/UTC"},"body":"How About using DistributedLock from Jgroups to make the master/slave work? or something similar.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=manishbel","name":"manishbel","key":"manishbel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manish Bellani","active":true,"timeZone":"Etc/UTC"},"created":"2007-11-02T16:24:48.554+0000","updated":"2007-11-02T16:24:48.554+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483333/comment/12940191","id":"12940191","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"the fix for https://issues.apache.org/activemq/browse/AMQ-1885 should help a bit here. The slave will retry and the master will fail in the event of a db outage. On db restart, the slave, still being alive, should become the master.\nThere is a [test case|http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/broker/ft/JDBCQueueMasterSlaveTest.java?view=markup] with the change that may provide a template for a test case for this issue.\nIn your scenario it seems odd that there are two masters, this points to a problem with the lock statements for your test db. \nnote the org.apache.activemq.store.jdbc.DefaultDatabaseLocker, which attempts to maintain an acquired lock by updating a table entry, it has a configurable lockKeepAlivePeriod.\nWould it be possible to revisit your patch in the light of the current trunk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2008-09-08T18:02:17.359+0000","updated":"2008-09-08T18:02:17.359+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483333/comment/12940176","id":"12940176","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=msiegenthaler","name":"msiegenthaler","key":"msiegenthaler","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mario Siegenthaler","active":true,"timeZone":"Etc/UTC"},"body":"Yes, the patch for AMQ-1885 helps a lot, I've yet to encounter a situation where it fails to work. My patch was mostly about enabling the lockKeepAlivePeriod.\n\nThe only thing that does not work for me is a correct broker shutdown. The broker kinda quits itself but then gives a \"failed to stop broker\" and leaves the VM running. This is a bit annoying because we could just auto-restart the vm if it did terminate properly. This way we have to go through ugly log parsing and process killing in the shell script. My patch fixed the shutdown for the then-trunk, I was rather trivial to do (just catch&log/ignore some exceptions).\n\nI propose to close this issue and open a new one regarding the failing broker shutdown (5.1) on db-failure [also happens when i.e. the transaction log is full].","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=msiegenthaler","name":"msiegenthaler","key":"msiegenthaler","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Mario Siegenthaler","active":true,"timeZone":"Etc/UTC"},"created":"2008-09-08T20:35:16.408+0000","updated":"2008-09-08T20:35:16.408+0000"}],"maxResults":7,"total":7,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-1350/votes","votes":2,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0am3r:"}}