{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12916971","self":"https://issues.apache.org/jira/rest/api/2/issue/12916971","key":"AMQ-6067","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12338124","id":"12338124","name":"5.14.1","archived":false,"released":true,"releaseDate":"2016-09-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12338054","id":"12338054","name":"5.15.0","archived":false,"released":true,"releaseDate":"2017-07-05"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2015-11-30T16:41:29.355+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Aug 26 18:34:44 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_23341922006_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2016-08-26T18:34:12.766+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6067/watchers","watchCount":7,"isWatching":false},"created":"2015-11-30T14:42:12.643+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["durable","durable_subscription","expiration","jdbc","timeToLive,"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324950","id":"12324950","name":"5.10.0","archived":false,"released":true,"releaseDate":"2014-06-10"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-08-26T18:35:13.850+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12324803","id":"12324803","name":"JDBC"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"There is a problem in\n{noformat}\norg.apache.activemq.broker.region.Topic.expireMessagesTask\n{noformat}\nWhen there are big amount of topic messages that are going to be expired, this {{expireMessagesTask}} loads all of the messages to memory. This causes\n{noformat}\n2015-11-24 11:05:46.359 WARN  [ActiveMQ Broker[JmsEngineActivemqBroker] Scheduler] [Topic] Failed to browse Topic: test-topic\njava.lang.OutOfMemoryError: Java heap space\n\tat oracle.sql.BLOB.getBytes(BLOB.java:204)\n\tat oracle.jdbc.driver.T4CBlobAccessor.getBytes(T4CBlobAccessor.java:464)\n\tat oracle.jdbc.driver.OracleResultSetImpl.getBytes(OracleResultSetImpl.java:676)\n\tat org.apache.commons.dbcp.DelegatingResultSet.getBytes(DelegatingResultSet.java:203)\n\tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.getBinaryData(DefaultJDBCAdapter.java:80)\n\tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doRecover(DefaultJDBCAdapter.java:418)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)\n\tat org.springframework.aop.interceptor.AbstractTraceInterceptor.invoke(AbstractTraceInterceptor.java:113)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)\n\tat $Proxy14.doRecover(Unknown Source)\n\tat org.apache.activemq.store.jdbc.JDBCMessageStore.recover(JDBCMessageStore.java:236)\n\tat org.apache.activemq.store.ProxyTopicMessageStore.recover(ProxyTopicMessageStore.java:62)\n\tat org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:594)\n\tat org.apache.activemq.broker.region.Topic.access$100(Topic.java:65)\n\tat org.apache.activemq.broker.region.Topic$6.run(Topic.java:733)\n\tat org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)\n\tat java.util.TimerThread.mainLoop(Timer.java:512)\n\tat java.util.TimerThread.run(Timer.java:462)\n{noformat}\n\nThe problem happens when using JDBC persistency with ActiveMQ 5.10.0. After a short look to source code, the same problem could be also with 5.12.1.\n\nTest case:\n- run ActiveMQ broker with JDBC persistency\n- create subscription to a topic, but do not receive the messages\n- send enough number of messages with short TimeToLive\n- when expireMessagesTask is scheduled, it tries to load all of the messages and causes the OutOfMemoryError\n\nIt would be fine if\n{noformat}\norg.apache.activemq.store.jdbc.JDBCMessageStore.recover(MessageRecoveryListener)\n{noformat}\nwill be updated like this:\n{code:java}\npublic void recover(final MessageRecoveryListener listener) throws Exception {\n  // Get all the Message ids out of the database.\n  TransactionContext c = persistenceAdapter.getTransactionContext();\n  try {\n    c = persistenceAdapter.getTransactionContext();\n    adapter.doRecover(c, destination, new JDBCMessageRecoveryListener() {\n      public boolean recoverMessage(long sequenceId, byte[] data) throws Exception {\n        if (listener.hasSpace()) {\n          Message msg = (Message)wireFormat.unmarshal(new ByteSequence(data));\n          msg.getMessageId().setBrokerSequenceId(sequenceId);\n          return listener.recoverMessage(msg);\n        } else {\n          logger.debug(\"Recovery limit of the messages has exceeded.\");\n          return false;\n        }                    \n      }\n\n      public boolean recoverMessageReference(String reference) throws Exception {\n        if (listener.hasSpace()) {\n          return listener.recoverMessageReference(new MessageId(reference));\n        } else {\n          logger.debug(\"Recovery limit of the message references has exceeded.\");\n          return false;\n        }\n      }\n    });\n  } catch (SQLException e) {\n    JDBCPersistenceAdapter.log(\"JDBC Failure: \", e);\n    throw IOExceptionSupport.create(\"Failed to recover container. Reason: \" + e, e);\n  } finally {\n    c.close();\n  }\n}\n{code}\n\nBut I am not sure if this limitation is the best way, because there will be some messages that should be expired, but need to wait. So better solution might be to do this job in more separated transactions.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"OutOfMemoryError when expiring big amount of topic messages","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phavran","name":"phavran","key":"phavran","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Petr Havránek","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=phavran","name":"phavran","key":"phavran","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Petr Havránek","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15032054","id":"15032054","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"ideally we would be able to have a store cursor that would walk the messages in the store independent of the dispatch/prefetch cursors. In the meantime, the intent is that the destination memory limit or the MaxExpirePageSize (which ever is smaller) should limit a browse for expiry.\nThe logic in Queue.java does a loop paging in messages to reach the memory limit in maxPagesize chunks, that same logic could be applied to durable subs.\nIn any event, the limit needs to be checked via the hasSpace callback from the recover call so that fix looks sensible.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2015-11-30T16:41:29.355+0000","updated":"2015-11-30T16:41:29.355+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15032071","id":"15032071","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"the follow up to https://issues.apache.org/jira/browse/AMQ-3362 introduced a fix and test for this.\nMaybe that test can be tweaked to reproduce again, not sure from where the regression arrived.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2015-11-30T16:57:26.202+0000","updated":"2015-11-30T16:57:26.202+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15365519","id":"15365519","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=itsganu%40gmail.com","name":"itsganu@gmail.com","key":"itsganu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ganesan","active":true,"timeZone":"Etc/UTC"},"body":"We still see this problem with 5.13.2, The outofmemory happens whenever I set the expiremessages other than 0. When I set to 0 and run the test  no OOO and also GC activity looks good.\n\nThe other problem we see the durable topics does not seem to be getting cleaned up from active_msgs even if I set expiremessages to 60000 or 90000.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=itsganu%40gmail.com","name":"itsganu@gmail.com","key":"itsganu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ganesan","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-07T02:55:07.760+0000","updated":"2016-07-07T02:55:07.760+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15385691","id":"15385691","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=smrui","name":"smrui","key":"smrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Smruti","active":true,"timeZone":"Etc/UTC"},"body":"We also observed similar message \n\n2016-07-20 09:19:20,084 | WARN  | Failed to browse Topic: cemp | org.apache.activemq.broker.region.Topic | ActiveMQ Broker[localhost] Scheduler\njava.lang.OutOfMemoryError: Java heap space\n\nActive MQ version: 5.13.3\n\nCould someone please check this issue, this has become big pain now\nEvery time we have to restart to over come this issue, the number of messages is quite huge and we're planning to send the records in chunk but not sure if that can solve this issue","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=smrui","name":"smrui","key":"smrui","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Smruti","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-20T11:13:44.529+0000","updated":"2016-07-20T11:13:44.529+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15407533","id":"15407533","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cszczotka","name":"cszczotka","key":"cszczotka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Czeslaw","active":true,"timeZone":"Etc/UTC"},"body":"Hi,\nI see under debugger that for version 5.13.2 in org.apache.activemq.broker.region.Topic the expireMessagesTask does not check max expire page size which is passed as a parameter to the doBrowse method:\n\nprivate final Runnable expireMessagesTask = new Runnable() {\n    @Override\n    public void run() {\n        List<Message> browsedMessages = new InsertionCountList<Message>();\n        doBrowse(browsedMessages, getMaxExpirePageSize());\n    }\n};\n\n\nIn my case I have default settings for max expire page size eq 400. In doBrowse method are collected all messages belongs to topic into browseList and never is checked max ( or called hasSpace internal method):\n\nprivate void doBrowse(final List<Message> browseList, final int max) {\n    try {\n        if (topicStore != null) {\n            final List<Message> toExpire = new ArrayList<Message>();\n            topicStore.recover(new MessageRecoveryListener() {\n                @Override\n                public boolean recoverMessage(Message message) throws Exception {\n                    if (message.isExpired()) {\n                        toExpire.add(message);\n                    }\n                    browseList.add(message);\n                    return true;\n                }\n\n                @Override\n                public boolean recoverMessageReference(MessageId messageReference) throws Exception {\n                    return true;\n                }\n\n                @Override\n                public boolean hasSpace() {\n                    return browseList.size() < max;\n                }\n\n                @Override\n                public boolean isDuplicate(MessageId id) {\n                    return false;\n                }\n            });\n            final ConnectionContext connectionContext = createConnectionContext();\n   ...\n}\n \nIn other words if you have 1 000 000 messages under ACTIVEMQ_MSGS table for same topic all messages will be collected into memory ( browseList) and this can cause OutOfMemoryError.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cszczotka","name":"cszczotka","key":"cszczotka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Czeslaw","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-04T10:30:03.143+0000","updated":"2016-08-04T10:38:13.677+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15407558","id":"15407558","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"Thank you [~cszczotka], that is indeed a bug, seems only return from recoverMessage is checked by the store.\nmaybe https://github.com/apache/activemq/blob/e2b4ca2c59a316be91cf391c758a10e518dd3a1f/activemq-unit-tests/src/test/java/org/apache/activemq/usecases/ExpiredMessagesWithNoConsumerTest.java can provide some inspiration for a unit test to capture this use case and the fix into the future.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-04T10:45:41.370+0000","updated":"2016-08-04T10:45:41.370+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15411746","id":"15411746","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cszczotka","name":"cszczotka","key":"cszczotka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Czeslaw","active":true,"timeZone":"Etc/UTC"},"body":"Question is how we can mitigate this memory issue for system where is running amq 5.13.2. I  can  try to increase –Xmx, make smaller expireMessagesPeriods so we will expire messages more frequently. Do you see other options ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cszczotka","name":"cszczotka","key":"cszczotka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Czeslaw","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-08T12:42:24.356+0000","updated":"2016-08-08T12:42:24.356+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15411794","id":"15411794","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"body":"Not much can be done to truly fix it without a patch.  In the recover method of DefaultJDBCAdapter there needs to be a hasSpace() check done in the recovery loop so it can abort early if memory is full just like KahaDB does.  The proposed fix posted above does exactly this check and looks good to me so it can probably be targeted for a 5.14.1 release.\n\nIn the meantime, as you pointed out you can try things like more memory and smaller expire messages period to give yourself a better chance of not running out of memory.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"created":"2016-08-08T13:19:00.870+0000","updated":"2016-08-08T13:19:00.870+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15413093","id":"15413093","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cszczotka","name":"cszczotka","key":"cszczotka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Czeslaw","active":true,"timeZone":"Etc/UTC"},"body":"Hi,\nI see another issue in amq 5.13.2 related with topic message expiration.   I have one producer which send me messages to MyTopic and one durable subscriber/consumer. Messages are stored in DB and after 30 seconds amq broker trying to expire these messages ( I have configuration entry for this: <amq:policyEntry topic=\"MyTopic.>\" expireMessagesPeriod=\"30000\"> ). I’m getting NullPointerException from AdvisoryBroker and messages are never expired and remain in activemq_msgs table.\n\njava.lang.NullPointerException\n\tat org.apache.activemq.advisory.AdvisoryBroker.messageExpired(AdvisoryBroker.java:430)\n\tat org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:313)\n\tat org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:313)\n\tat org.apache.activemq.broker.BrokerFilter.messageExpired(BrokerFilter.java:313)\n\tat org.apache.activemq.broker.MutableBrokerFilter.messageExpired(MutableBrokerFilter.java:325)\n\tat org.apache.activemq.broker.region.Topic.messageExpired(Topic.java:776)\n\tat org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:660)\n\nIt is logged on console as WARN:\n\n09:25:30.274 [ActiveMQ Broker[my-broker] Scheduler] WARN  org.apache.activemq.advisory.AdvisoryBroker - Failed to fire expired advisory, reason: java.lang.NullPointerException\n\n\n\nUnder debugger I see that in org.apache.activemq.advisory.AdvisoryBroker.messageExpired  baseDestination is null and call baseDestination.getActiveMQDestination() generates NPE\n\n@Override\npublic void messageExpired(ConnectionContext context, MessageReference messageReference, Subscription subscription) {\n    super.messageExpired(context, messageReference, subscription);\n    try {\n        if (!messageReference.isAdvisory()) {\n            BaseDestination baseDestination = (BaseDestination) messageReference.getMessage().getRegionDestination();\n            ActiveMQTopic topic = AdvisorySupport.getExpiredMessageTopic(baseDestination.getActiveMQDestination());\n\n Below is code how messages are produced:\n\npublic static class Producer implements Runnable {\n    public void run() {\n        try {\n            ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(BROKER_ULR);\n            Connection connection = connectionFactory.createConnection();\n            connection.start();\n            Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n            Topic destination = session.createTopic(\"MyTopic\");\n\n            MessageProducer producer = session.createProducer(destination);\n            producer.setDeliveryMode(DeliveryMode.PERSISTENT);\n            producer.setTimeToLive(30000);\n          \n            for(int i =0; i < 10; i ++) {\n                String text = \"Message number \" + i +  \"  From: \" + Thread.currentThread().getName();\n                TextMessage message = session.createTextMessage(text);\n                message.setJMSDestination(destination);\n                producer.send(destination, message);\n\n                Thread.sleep(10000);\n            }\n            // Clean up\n            session.close();\n            connection.close();\n        }\n        catch (Exception e) {\n            System.out.println(\"Caught: \" + e);\n            e.printStackTrace();\n        }\n    }\n}\n\nUnder debugger I see that setter method setRegionDestination (org.apache.activemq.command.Message ) is called in org.apache.activemq.broker.region.Topic class before message is send:\n  \n@Override\npublic void send(final ProducerBrokerExchange producerExchange, final Message message) throws Exception {\n    final ConnectionContext context = producerExchange.getConnectionContext();\n\n    final ProducerInfo producerInfo = producerExchange.getProducerState().getInfo();\n    producerExchange.incrementSend();\n    final boolean sendProducerAck = !message.isResponseRequired() && producerInfo.getWindowSize() > 0\n            && !context.isInRecoveryMode();\n\n    message.setRegionDestination(this);\n\nI don’t see call this setRegionDestination method when message is loaded from db into memory.\n\nDo you have any idea what can be wrong ? Is it issue in my messages (something is missing)  or it is another bug in amq code ?\n \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cszczotka","name":"cszczotka","key":"cszczotka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Czeslaw","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-09T07:19:30.764+0000","updated":"2016-08-09T07:33:37.879+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15439460","id":"15439460","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit b9fad53fc650a9026391bef0fd74aea1bea7ec1b in activemq's branch refs/heads/master from [~cshannon]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b9fad53 ]\n\nhttps://issues.apache.org/jira/browse/AMQ-6067\n\nThe JDBCMessageStore now checks hasSpace() when running a message\nrecovery listener to prevent going past the max configured page size\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-26T17:50:10.934+0000","updated":"2016-08-26T17:50:10.934+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15439467","id":"15439467","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit a99edb81757899a58d22c54a59294f7d86949659 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a99edb8 ]\n\nhttps://issues.apache.org/jira/browse/AMQ-6067\n\nThe JDBCMessageStore now checks hasSpace() when running a message\nrecovery listener to prevent going past the max configured page size\n\n(cherry picked from commit b9fad53fc650a9026391bef0fd74aea1bea7ec1b)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-26T17:55:24.746+0000","updated":"2016-08-26T17:55:24.746+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15439534","id":"15439534","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"body":"Patch and test applied to master and 5.14.x.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"created":"2016-08-26T18:34:14.419+0000","updated":"2016-08-26T18:34:14.419+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12916971/comment/15439538","id":"15439538","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"body":"You should create a new Jira for this issue so it can be tracked separately.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"created":"2016-08-26T18:34:44.499+0000","updated":"2016-08-26T18:35:13.731+0000"}],"maxResults":13,"total":13,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6067/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2p2gv:"}}