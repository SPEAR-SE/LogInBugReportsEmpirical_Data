{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12646315","self":"https://issues.apache.org/jira/rest/api/2/issue/12646315","key":"AMQ-4512","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12323932","id":"12323932","name":"5.9.0","archived":false,"released":true,"releaseDate":"2013-10-21"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-05-07T13:35:00.218+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Oct 14 16:14:42 UTC 2015","customfield_12310420":"326673","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_327608908_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2013-05-10T17:14:18.331+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-4512/watchers","watchCount":4,"isWatching":false},"created":"2013-05-06T22:14:09.441+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"6.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12317974","id":"12317974","description":"Next v5 maintenance release","name":"5.6.0","archived":false,"released":true,"releaseDate":"2012-05-07"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12321258","id":"12321258","description":"Next v5 maintenance release","name":"5.7.0","archived":false,"released":true,"releaseDate":"2012-10-08"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-10-14T16:14:42.847+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"There is a race condition in MemoryUsage which makes it possible for it to be left in an inconsistent state and thereby hang any clients in waitForSpace().\n\nThe core issue is in the following block of code:\n{code:java}\n    public void decreaseUsage(long value) {\n        if (value == 0) {\n            return;\n        }\n        int percentUsage;\n        synchronized (usageMutex) {\n            usage -= value;\n            percentUsage = caclPercentUsage();\n        }\n        setPercentUsage(percentUsage);\n        if (parent != null) {\n            parent.decreaseUsage(value);\n        }\n    }\n{code}\n\nThe bug occurs when multiple threads are calling increment/decrement at same time. Since the field \"usage\" is protected with the usageMutex each writer/reader will see the correct and current value for usage and calculate the right value for percentUsage at that instant. \"setPercentUsage\" is also   protected by the same usageMutex so we resyncronize on usageMutex to set the percentUsage field as well. The issue is that threads may enter the setPercentUsage synchronized block in a different order than they entered the percentUsage \"calculating\" block. Since percentUsage is carried between the two blocks, a reordering of threads can allow the wrong final percentUsage value to be set. \n\nPossible threading (imagine usage starts at 0 and limit is 100).\nThread #1 - usage += 150; percentUsage = 150;\nThread #1 - suspended before called setPercentUsage\nThread #2 - usage -= 150; percentUsage = 0;\nThread #2 - setPercentUsage(0);\nThread #1 - resumed, can now call setPercentUsage\nThread #1 - setPercentUsage(150);\n\nFinal value = 150\n\nThis same pattern of synchronizing to calculate the percentUsage and then setting the value later is repeated in all of the Usage objects I looked at. My guess it was written this way to avoid holding locks while making calls out to \"untrusted code\" but it is a very dangerous way to do the calculations. The most surprising thing is the locks are still being explicitly held while calling fireEvent anyways.\n\nI have attached two screenshots taken using a debugger of two threads that have both been stalled for multiple minutes on \"waitForSpace\" trying to publish to the same queue. Notice they both have a \"usage\" of 0 but a \"percentUsage\" > 100, this should be impossible. To get the system into this state I was using JmsTemplate and a CachingConnectionFactory to publish on 8 threads and a single DefaultMessageListenerContainer who is pulling the messages off as fast as possible. The test publishes 100000 measurements and around ~75% of the time atleast a few producers end up stalled in waitForSpace() even though the queue is ready for more messages. I can also reproduce these results using JmsTemplate and PooledConnectionFactory so I don't believe it's an issue in the pooling implementations.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12582353","id":"12582353","filename":"AMQ4512Patch.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2013-05-08T20:03:28.307+0000","size":27944,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12582353/AMQ4512Patch.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12582348","id":"12582348","filename":"AMQ4512Patch.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2013-05-08T19:33:05.082+0000","size":27937,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12582348/AMQ4512Patch.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12582105","id":"12582105","filename":"MemoryUsageTest.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"created":"2013-05-07T14:55:29.595+0000","size":5153,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12582105/MemoryUsageTest.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12581976","id":"12581976","filename":"MemUsage1.PNG","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"created":"2013-05-06T22:14:42.105+0000","size":46533,"mimeType":"image/png","content":"https://issues.apache.org/jira/secure/attachment/12581976/MemUsage1.PNG"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12581977","id":"12581977","filename":"MemUsage2.PNG","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"created":"2013-05-06T22:14:42.107+0000","size":51769,"mimeType":"image/png","content":"https://issues.apache.org/jira/secure/attachment/12581977/MemUsage2.PNG"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12581980","id":"12581980","filename":"QueueStats.PNG","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"created":"2013-05-06T22:30:21.179+0000","size":26017,"mimeType":"image/png","content":"https://issues.apache.org/jira/secure/attachment/12581980/QueueStats.PNG"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"327018","customfield_12312823":null,"summary":"MemoryUsage waitForSpace in inconsistent state","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12646315/comment/13650808","id":"13650808","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"analysis looks good. lining up for 5.9 - any chance you could produce a simple junit test case that just exercises MemoryUsage and multiple threads. would be good to have a simple way to validate and protect any fix.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2013-05-07T13:35:00.218+0000","updated":"2013-05-07T13:35:00.218+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12646315/comment/13650925","id":"13650925","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"body":"Wow, I'm not surprised this doesn't occur alot for other people, it takes 10s of thousands of iterations for me to detect a failure. I am amazed it occurs so often in my main test case using the full broker, I'm sure if I was on another machine with more/less cores I wouldn't have ever noticed this. \n\nThe test case I'm uploading fails most runs. I found attaching a debugger and/or profiler made it much more likely to hit. Switching the number of cores it can run on should also help. Heres a sample output on a failure.\n\n{code:java}\nAttempt: 673 : Usage(null) percentUsage=35%, usage=0, limit=1000, percentUsageMinDelta=1%\nOperations: [15, 12, 33, 76, 23, 64, 43, 58, 64, 21, 57, 57, 15, 80, 50, 17, 63, 90, 58, 46, 98, 21, 22, 78, 43, 9, 58, 16, 83, 45, 60, 59, 99, 42, 62, 91, 62, 29, 69, 97, 12, 80, 33, 36, 15, 97, 48, 28, 9, 63, 93, 13, 75, 83, 7, 21, 29, 20, 87, 88, 23, 81, 39, 91, 68, 46, 75, 35, 46, 53, 42, 89, 59, 7, 98, 2, 36, 28, 9, 3, 51, 13, 90, 71, 82, 40]\n\njava.lang.AssertionError: \nExpected :0\nActual   :35\n <Click to see difference>\n\tat org.junit.Assert.fail(Assert.java:93)\n\tat org.junit.Assert.failNotEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:128)\n\tat org.junit.Assert.assertEquals(Assert.java:472)\n\tat org.junit.Assert.assertEquals(Assert.java:456)\n\tat com.sms.backspool.jms.MemoryUsageTest.checkPercentage(MemoryUsageTest.java:149)\n\tat com.sms.backspool.jms.MemoryUsageTest.testCycle(MemoryUsageTest.java:22)\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"created":"2013-05-07T14:55:07.139+0000","updated":"2013-05-07T15:04:58.305+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12646315/comment/13650927","id":"13650927","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"body":"Test case showing failure. Remember that there are many other functions that have the same broken pattern of letting the \"percentUsage\" escape the synchronized block and they should be fixed across the board, not just for MemoryUsage.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"created":"2013-05-07T14:55:29.598+0000","updated":"2013-05-07T14:56:42.538+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12646315/comment/13652254","id":"13652254","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"I took a stab at cleaning this up, you're welcome to review and comment.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2013-05-08T19:33:05.084+0000","updated":"2013-05-08T19:33:05.084+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12646315/comment/13652328","id":"13652328","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"body":"Changes look pretty solid, did the test case break for you reliably?\n\nI am still worried about holding the lock during listener callbacks, seems like an easy way to cause deadlocks. Meh, its gotten this far without deadlocking and this is no worse so its probably ok.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"created":"2013-05-08T20:42:31.457+0000","updated":"2013-05-08T20:42:31.457+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12646315/comment/13652347","id":"13652347","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"Yes, the test shows the issue reliably.\n\nAt least in the case of fireEvent we queue up the callbacks in an executor so really the locks can be safely held.  The one that's a bit more scary is the notifyCallbackWhenNotFull but if you look at the Broker code the callbacks are merely waking up a task runner so its ok for these as well. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2013-05-08T20:52:34.851+0000","updated":"2013-05-08T20:52:34.851+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12646315/comment/13654616","id":"13654616","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"Fixes and the test case added on trunk","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2013-05-10T17:14:18.346+0000","updated":"2013-05-10T17:14:18.346+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12646315/comment/14236923","id":"14236923","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"body":"We are still pinned to 5.8.0 because of some other dependencies (camel mostly) so despite me knowing about this issue for nearly 2 years I still can't ship with producerWindow enabled. This has become a real problem because the \"raw socket blocking\" is preventing any sort of clean shutdown. \n\nDo you think I would be about backporting these fixes and the related one for AMQ-4361 to 5.8.0? I copied over the Usage class and it's sub classes from 5.9.0. No other code changes were made and all of the unit tests in activemq passed. Any ideas how I would go about verifying the safety of these changes?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-06T18:50:39.484+0000","updated":"2014-12-06T18:50:39.484+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12646315/comment/14957177","id":"14957177","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dhananjaydp","name":"dhananjaydp","key":"dhananjaydp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dhananjay Patkar","active":true,"timeZone":"Etc/UTC"},"body":"Is there any valid work around for applications which are stick to 5.7.0?\n\nI am using 5.7.0 client libraries, as I am tied to other dependencies like karaf, camel etc. \n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dhananjaydp","name":"dhananjaydp","key":"dhananjaydp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dhananjay Patkar","active":true,"timeZone":"Etc/UTC"},"created":"2015-10-14T16:14:42.847+0000","updated":"2015-10-14T16:14:42.847+0000"}],"maxResults":9,"total":9,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-4512/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1kcvj:"}}