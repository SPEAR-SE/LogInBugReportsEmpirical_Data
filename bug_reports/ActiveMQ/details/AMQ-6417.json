{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13002850","self":"https://issues.apache.org/jira/rest/api/2/issue/13002850","key":"AMQ-6417","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/4","id":"4","description":"The problem is not completely described.","name":"Incomplete"},"customfield_12312322":null,"customfield_12310220":"2016-09-06T08:55:31.786+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Nov 18 19:18:52 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_6348206022_*|*_6_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2016-11-18T19:18:52.730+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6417/watchers","watchCount":4,"isWatching":false},"created":"2016-09-06T07:55:26.960+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["exception","expired","timeout"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334251","id":"12334251","name":"5.13.1","archived":false,"released":true,"releaseDate":"2016-02-05"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12334774","id":"12334774","name":"5.13.2","archived":false,"released":true,"releaseDate":"2016-03-04"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12335045","id":"12335045","name":"5.13.3","archived":false,"released":true,"releaseDate":"2016-05-02"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12335661","id":"12335661","name":"5.13.4","archived":false,"released":true,"releaseDate":"2016-07-19"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12334188","id":"12334188","name":"5.14.0","archived":false,"released":true,"releaseDate":"2016-08-05"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-11-18T19:18:52.978+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"customfield_12310080":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10091","value":"Regression","id":"10091"}],"description":"Starting from ActiveMQ 5.13.1, we get a timeout when consuming expired messages.  I'm at loss at how to resolve this, so any help is appreciated.  Here's my test:\n\n{code}\npackage no.foo.integration.module\n\nimport no.foo.integration.FooIntegrationApplication\nimport no.foo.test_helpers.PortSelector\nimport org.apache.camel.EndpointInject\nimport org.apache.camel.builder.AdviceWithRouteBuilder\nimport org.apache.camel.component.mock.MockEndpoint\nimport org.apache.camel.management.JmxSystemPropertyKeys\nimport org.apache.camel.model.BeanDefinition\nimport org.apache.camel.model.ModelCamelContext\nimport org.apache.camel.test.spring.CamelSpringJUnit4ClassRunner\nimport org.apache.camel.test.spring.UseAdviceWith\nimport org.junit.*\nimport org.junit.runner.RunWith\nimport org.springframework.beans.factory.annotation.Autowired\nimport org.springframework.jms.core.JmsTemplate\nimport org.springframework.test.context.ContextConfiguration\nimport org.springframework.test.context.support.AnnotationConfigContextLoader\n\nimport static no.foo.integration.constants.Route.INCOMING\nimport static no.foo.integration.constants.Route.INTEGRATIONS_TOPIC_EXPIRED_MESSAGES_ADVISORY\nimport static no.foo.test_helpers.SystemPropertyUtil.resetProperty\nimport static no.foo.test_helpers.SystemPropertyUtil.writeProperty\n\n@RunWith(CamelSpringJUnit4ClassRunner.class)\n@UseAdviceWith\n@ContextConfiguration(classes = [FooIntegrationApplication.class, MockConfig.class], loader = AnnotationConfigContextLoader.class)\npublic class ExpiredMessagesRouteModuleTest {\n\n    private static final String CONSUMER_DESTINATION_ONE = \"activemq:Consumer.monster.VirtualTopic.Foo.Integrations\"\n    private static final String CONSUMER_DESTINATION_TWO = \"activemq:Consumer.monstermagnet.VirtualTopic.Foo.Integrations\"\n    private static int freePortBroker\n\n    @Autowired\n    private JmsTemplate jmsTemplate\n\n    @Autowired\n    private ModelCamelContext context\n\n    @EndpointInject(uri = \"mock:expiredMessages\")\n    private MockEndpoint expiredMessagesEndpointMock\n\n\n    @BeforeClass\n    public static void enableCamelJMX() {\n       System.clearProperty(JmxSystemPropertyKeys.DISABLED)\n       freePortBroker = PortSelector.random().select()\n       writeProperty(\"foo-broker.port\", \"\" + freePortBroker)\n    }\n\n    @AfterClass\n    public static void tearDown() {\n       resetProperty(\"foo-broker.port\")\n    }\n\n    @Before\n    public void replaceBeanWithMockEndpoint() throws Exception {\n        context.getRouteDefinition(INTEGRATIONS_TOPIC_EXPIRED_MESSAGES_ADVISORY.name()).adviceWith(context, new AdviceWithRouteBuilder() {\n            @Override\n            public void configure() throws Exception {\n               weaveByType(BeanDefinition).replace().to(expiredMessagesEndpointMock)\n            }\n        });\n\n        context.start()\n    }\n\n    @Test(timeout = 10000L)\n    public void consume_from_expired_messages_advisory_topic() throws Exception {\n        createTwoTopicConsumers()\n        setUpMessagesToExpireFast()\n\n        jmsTemplate.convertAndSend(INCOMING.destination, [SEARCH_ID_KEY: \"1\"])\n\n        waitForMessageToExpire()\n        expiredMessagesEndpointMock.expectedMessageCount(2)\n        expiredMessagesEndpointMock.assertIsSatisfied()\n    }\n\n    private void setUpMessagesToExpireFast() {\n        jmsTemplate.setExplicitQosEnabled(true)\n        jmsTemplate.setTimeToLive(500L)\n    }\n\n    // Need to create topic consumer, otherwise the messages sent to the topic will be discarded before they expire.\n    private void createTwoTopicConsumers() {\n        context.createConsumerTemplate().receiveNoWait(CONSUMER_DESTINATION_ONE)\n        context.createConsumerTemplate().receiveNoWait(CONSUMER_DESTINATION_TWO)\n    }\n\n    def waitForMessageToExpire() {\n        Thread.sleep(1000)\n    }\n}\n{code}\n\nand here's the exception\n\n{code}\n no.foo.integration.module.ExpiredMessagesRouteModuleTest > consume_from_expired_messages_advisory_topic FAILED\n     org.junit.runners.model.TestTimedOutException: test timed out after 10000 milliseconds\n         at sun.misc.Unsafe.park(Native Method)\n         at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\n         at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1037)\n         at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)\n         at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)\n         at org.apache.camel.component.mock.MockEndpoint.waitForCompleteLatch(MockEndpoint.java:1425)\n         at org.apache.camel.component.mock.MockEndpoint.waitForCompleteLatch(MockEndpoint.java:1409)\n         at org.apache.camel.component.mock.MockEndpoint.doAssertIsSatisfied(MockEndpoint.java:405)\n         at org.apache.camel.component.mock.MockEndpoint.assertIsSatisfied(MockEndpoint.java:386)\n         at org.apache.camel.component.mock.MockEndpoint.assertIsSatisfied(MockEndpoint.java:374)\n         at org.apache.camel.component.mock.MockEndpoint$assertIsSatisfied$0.call(Unknown Source)\n         at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\n         at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\n         at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:117)\n         at no.foo.integration.module.ExpiredMessagesRouteModuleTest.consume_from_expired_messages_advisory_topic(ExpiredMessagesRouteModuleTest.groovy:77)\n         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n         at java.lang.reflect.Method.invoke(Method.java:498)\n         at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n         at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n         at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n         at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n         at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n         at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\n         at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\n         at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\n         at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)\n         at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)\n         at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n         at java.lang.Thread.run(Thread.java:745)\n{code}\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Timeout when consuming from expired messages route","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=monti","name":"monti","key":"monti","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Henrik","active":true,"timeZone":"Europe/Berlin"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=monti","name":"monti","key":"monti","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Henrik","active":true,"timeZone":"Europe/Berlin"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002850/comment/15466868","id":"15466868","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"enable trace level logging for org.apache.activemq.broker.region\n\neither the advisory name is incorrect or it gets one message and the second is a duplicate because the expiry check is on dispatch.\n\nthere is a nice unit test at: org.apache.activemq.broker.policy.DeadLetterExpiryTest\n\nalso, by default, non persistent messages are not send to the dlq. so they won't give an advisory (i think)\n\norg.apache.activemq.broker.region.policy.AbstractDeadLetterStrategy#setProcessNonPersistent","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-06T08:55:31.786+0000","updated":"2016-09-06T08:55:31.786+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002850/comment/15467127","id":"15467127","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=monti","name":"monti","key":"monti","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Henrik","active":true,"timeZone":"Europe/Berlin"},"body":"Thanks, I'll see what I can find.  I am trying to figure out which changes in 5.13.1 that introduced this, since 5.13.0 works as expected.  (Doing a \"git bisect\" session is  tempting)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=monti","name":"monti","key":"monti","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Henrik","active":true,"timeZone":"Europe/Berlin"},"created":"2016-09-06T11:01:18.170+0000","updated":"2016-09-06T11:01:18.170+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002850/comment/15677509","id":"15677509","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"No further test or information provided.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2016-11-18T19:18:52.856+0000","updated":"2016-11-18T19:18:52.856+0000"}],"maxResults":3,"total":3,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6417/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i339r3:"}}