{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12765168","self":"https://issues.apache.org/jira/rest/api/2/issue/12765168","key":"AMQ-5508","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/3","id":"3","description":"The problem is a duplicate of an existing issue.","name":"Duplicate"},"customfield_12312322":null,"customfield_12310220":"2015-01-21T01:40:15.113+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Sat Jul 30 12:19:10 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_49313233601_*|*_6_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2016-07-30T12:19:09.011+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-5508/watchers","watchCount":5,"isWatching":false},"created":"2015-01-06T18:11:57.077+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324950","id":"12324950","name":"5.10.0","archived":false,"released":true,"releaseDate":"2014-06-10"}],"issuelinks":[{"id":"12476457","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12476457","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12724276","key":"AMQ-5251","self":"https://issues.apache.org/jira/rest/api/2/issue/12724276","fields":{"summary":"Scheduler missing some synchronization","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-07-30T12:19:10.389+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"}],"timeoriginalestimate":null,"customfield_12310080":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10091","value":"Regression","id":"10091"}],"description":"This issue is seen on the surface with the broker failing to remove a consumer:\n\n2014-12-19 10:45:42,586 | WARN  | Failed to remove consumer:\nID:hack-34927-1419007505006-2:3:0:0 |\norg.apache.activemq.broker.TransportConnection | ActiveMQ\nBrokerService[broker0] Task-6\njava.lang.IllegalStateException: Timer already cancelled.\n\nThe full stack trace [STACK_TRACE] will be specified at the end of this report.\n\nIn this case, the race condition is exposed via some of the AdvisoryBroker code while trying to send an advisory message as part of the consumer/producer addition/removal code. Below are excerpts of code to explain this race condition:\n\nactivemq-broker/src/main/java/org/apache/activemq/advisory/AdvisoryBroker.java\n\nLines 605 - 637 [in fireAdvisory(...)]\nif (getBrokerService().isStarted()) {\n     // code to create and populate an advisory message\n     next.send(producerExchange, advisoryMessage);\n     // send will trigger destination creation/addition for this advisory message topic\n}\n\nHowever, it can easily happen that a client (consumer or producer) connects and is added _before_ getBrokerService().isStarted() is true, so in that case, the boolean expression in the block above will evaluate to false and hence skip the entire advisory message send and create/add destination process. At this point, the consumer/producer destination does not have its advisory message destination created. If no other consumer/producer connects on the same destination until the broker is shutting down, then no advisory destination pairing will be created for that consumer/producer. When the broker starts the shutdown process, the event that will trigger an advisory message will be the removal of a consumer/producer as part of the TransportConnection stopping process. The sequence of calls with line numbers can be seen within the STACK_TRACE.\n\nBack to the above specified code block, when the broker is shutting down, the broker is still in the started state. Then, the boolean expression will evaluate to true and hence proceed with the advisory message creation/sending and destination creation/addition process. However, in the meantime, as part of the shutdown process, the Scheduler timer is being cancelled. Consider the following blocks of code:\n\nactivemq-broker/src/main/java/org/apache/activemq/broker/BrokerService.java\n\nLines 756 - 761 [in stop()]\n// for each service\n     stopper.stop(service);\n\nactivemq-client/src/main/java/org/apache/activemq/util/ServiceSupport.java\n\nLines 67 - 84 [in stop()]\nif (stopped.compareAndSet(false, true)) {\n    ... some code ...\n    doStop(stopper);\n    ... some code ...    \n}\n\nactivemq-client/src/main/java/org/apache/activemq/thread/Scheduler.java\n\nLines 69 - 71 [in doStop(...)]\n\nif (this.timer != null) {\n     this.timer.cancel();\n}\n\nAt this point, the timer is cancelled. Now, back to the thread removing the consumer. From the STACK_TRACE, it can be seen that after many calls related to the advisory message destination creation, it ends up in AbstractRegion’s addDestination method.\n\nactivemq-broker/src/main/java/org/apache/activemq/broker/region/AbstractRegion.java\n\nLines 132 - 145 [in addDestination(...)]\nif (dest == null) {\n     ... some code ...\n     dest = createDestination(context, destination);\n     ... some code ...\n     dest.start();  \n     ... some code ...\n}\n\nAs it can be seen in the STACK_TRACE below, dest.start() call will trigger the need for a timer to be scheduled on the same timer that has already been cancelled. Some debug prints to confirm the race condition:\n\n1. Fail to send advisory message for this consumer advisory topic because getBrokerService().isStarted() is false:\n\n2015-01-06 08:49:26,215 | INFO  | patanasov: from AdvisoryBroker fireAdvisory would have sent advisoryMessage: topic ActiveMQ.Advisory.Consumer.Queue.2015.01.06-08.23.00.16401 | org.apache.activemq.advisory.AdvisoryBroker\n\n2. Broker shutting down and cancelling timer:\n\n2015-01-06 08:49:43,602 | INFO  | Apache ActiveMQ 5.10.0 (broker0, ID:host-40197-1420555763149-0:1) is shutting down | org.apache.activemq.broker.BrokerService | ActiveMQ ShutdownHook\n2015-01-06 08:49:43,603 | INFO  | patanasov: from ServiceSupport calling doStop(stopper) | org.apache.activemq.util.ServiceSupport | ActiveMQ ShutdownHook\n2015-01-06 08:49:43,603 | INFO  | patanasov: from Scheduler doStop(ServiceStopper stopper) calling this.timer.cancel(): timer java.util.Timer@7df33bb0 | org.apache.activemq.thread.Scheduler | ActiveMQ ShutdownHook\n\n3. Adding destination and scheduling on cancelled timer (7df33bb0):\n\n2015-01-06 08:49:43,767 | INFO  | patanasov: broker0 adding destination: qualified: topic://ActiveMQ.Advisory.Consumer.Queue.2015.01.06-08.23.00.16401, physical: ActiveMQ.Advisory.Consumer.Queue.2015.01.06-08.23.00.16401 | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ BrokerService[broker0] Task-12\n2015-01-06 08:49:43,782 | INFO  | patanasov: from schedualPeriodically: timer: java.util.Timer@7df33bb0 | org.apache.activemq.thread.Scheduler | ActiveMQ BrokerService[broker0] Task-12\n2015-01-06 08:49:43,785 | INFO  | patanasov: caught an exception in schedualPeriodically: | org.apache.activemq.thread.Scheduler | ActiveMQ BrokerService[broker0] Task-12\njava.lang.IllegalStateException: Timer already cancelled.\n\nI will provide a patch to fix this issue. However, the bigger concern here is that advisory message destination creations fail for clients that connect while getBrokerService().isStarted() is false. If there is only one consumer/producer on one destination and if it connects while getBrokerService().isStarted() is false, then it will fail to create/send advisory message for that destination, at least until the producer/consumer is removed at the end. I will continue looking to learn more about this state of the broker and open a separate JIRA issue if needed.\n\n\nSTACK_TRACE:\njava.lang.IllegalStateException: Timer already cancelled.\n    at java.util.Timer.sched(Timer.java:354)\n    at java.util.Timer.schedule(Timer.java:222)\n    at\norg.apache.activemq.thread.Scheduler.schedualPeriodically(Scheduler.java:53)\n    at org.apache.activemq.broker.region.Topic.start(Topic.java:563)\n    at\norg.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:141)\n    at\norg.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:325)\n    at\norg.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:167)\n    at\norg.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:184)\n    at\norg.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:167)\n    at\norg.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:167)\n    at\norg.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:172)\n    at\norg.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:439)\n    at\norg.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)\n    at\norg.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:615)\n    at\norg.apache.activemq.advisory.AdvisoryBroker.fireConsumerAdvisory(AdvisoryBroker.java:564)\n    at\norg.apache.activemq.advisory.AdvisoryBroker.fireConsumerAdvisory(AdvisoryBroker.java:550)\n    at\norg.apache.activemq.advisory.AdvisoryBroker.removeConsumer(AdvisoryBroker.java:271)\n    at\norg.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:132)\n    at\norg.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:132)\n    at\norg.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:137)\n    at\norg.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:651)\n    at\norg.apache.activemq.broker.TransportConnection.processRemoveSession(TransportConnection.java:690)\n    at\norg.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:802)\n    at\norg.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:1143)\n    at\norg.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:1073)\n    at\njava.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)\n    at\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\n    at java.lang.Thread.run(Thread.java:619) \n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12690386","id":"12690386","filename":"AMQ5508.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=patanasov","name":"patanasov","key":"patanasov","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Pero Atanasov","active":true,"timeZone":"Etc/UTC"},"created":"2015-01-06T18:36:15.872+0000","size":898,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12690386/AMQ5508.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10042","value":"Patch Available","id":"10042"}],"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Broker shutdown race condition leads to \"IllegalStateException: Timer already cancelled\"","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=patanasov","name":"patanasov","key":"patanasov","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Pero Atanasov","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=patanasov","name":"patanasov","key":"patanasov","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Pero Atanasov","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12765168/comment/14266526","id":"14266526","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=patanasov","name":"patanasov","key":"patanasov","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Pero Atanasov","active":true,"timeZone":"Etc/UTC"},"body":"Patch to fix raised issue.\nNOTE: In the stack trace, the exception happens in Scheduler.schedualPeriodically, but this function has been deprecated. Therefore, the patch is now applied within Scheduler.executePeriodically since that's what is being called now from Topic.start().\nThe fix involves checking if the timer has already been called stop on before calling schedule on it. That way no calls are made if it has already been cancelled.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=patanasov","name":"patanasov","key":"patanasov","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Pero Atanasov","active":true,"timeZone":"Etc/UTC"},"created":"2015-01-06T18:36:15.878+0000","updated":"2015-01-06T18:36:15.878+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12765168/comment/14284983","id":"14284983","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tbain98","name":"tbain98","key":"tbain98","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tim Bain","active":true,"timeZone":"America/Denver"},"body":"I think that your \"bigger concern\" described just above the stack trace is the more important issue here, and I think that fixing that should make your patch (which just deals with the fallout when that fundamental failure occurs) unnecessary.  So I'd recommend that we fix the underlying issue in this JIRA (in 5.11) rather than using the supplied patch to Band-Aid the symptoms and submitting a separate JIRA for the underlying issue, unless for some reason it's not possible to get the underlying issue fixed for 5.11.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tbain98","name":"tbain98","key":"tbain98","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tim Bain","active":true,"timeZone":"America/Denver"},"created":"2015-01-21T01:40:15.113+0000","updated":"2015-01-21T01:40:15.113+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12765168/comment/14309317","id":"14309317","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=patanasov","name":"patanasov","key":"patanasov","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Pero Atanasov","active":true,"timeZone":"Etc/UTC"},"body":"I agree that the proposed patch is just band-aiding it. This issue, considering its origin, needs to be addressed with a larger-impact fix. To explain the root cause, following are some code excerpts:\n\nBrokerService.isStarted() is used to determine whether to create/add a corresponding (to regular destination) advisory destination and send an advisory message for it accordingly.\n\nactivemq-broker/src/main/java/org/apache/activemq/advisory/AdvisoryBroker.java\n\nLines 605 - 637 [in fireAdvisory(...)]\nif (getBrokerService().isStarted()) {\n     // code to create and populate an advisory message\n     next.send(producerExchange, advisoryMessage);\n     // send will trigger destination creation/addition for this advisory message topic\n}\n\nactivemq-broker/src/main/java/org/apache/activemq/broker/BrokerService.java\n\nLines 501 - 503\npublic boolean isStarted() {\n     return started.get() && startedLatch.getCount() == 0;\n}\n\nWhen a broker is restarted, BrokerService.isStarted() will be false when known destinations are being re-added, so no corresponding advisory topic destinations will be created/added for such topics. Consider the following sequence of steps when the broker is re-starting:\n\nactivemq-broker/src/main/java/org/apache/activemq/broker/BrokerService.java\n\nLines 558 - 612 [in start()]\nif (stopped.get() || !started.compareAndSet(false, true)) {\n     // lets just ignore redundant start() calls\n     // as its way too easy to not be completely sure if start() has been\n     // called or not with the gazillion of different configuration\n     // mechanisms\n     // throw new IllegalStateException(\"Already started.\");\n     return;\n}\n\n// ... some code ...\nstartBroker(startAsync);\n// ... some code ... \n\nNote that this will set to true one of the conditions (AtomicBoolean started) on which isStarted() depends on. However, the second condition (CountDownLatch startedLatch) on which isStarted() depends on will not be decremented down to 0 *until* after all of the known topics/destinations are re-added. After the startBroker(startAsync) call, execution continues within\n\nLines 665 - 710 [in doStartBroker()]\n\n// ... some code ...\nstartDestinations();\n// ... some code ...\nLOG.info(\"Apache ActiveMQ {} ({}, {}) is starting\", new Object[]{ getBrokerVersion(), getBrokerName(), brokerId });\nbroker.start();\n// ... some code ...\nstartAllConnectors();\n// ... some code ...\nstartedLatch.countDown();\n\nThe broker.start() call above will trigger the addition of all known topics/destinations and considering the fact that startedLatch.countDown() is called later in the doStartBroker() function above, isStarted() will still be false when re-adding known destinations. Therefore, associated advisory destinations will fail to be added and advisory messages will not be sent out. That's bad. Here is the known destination re-addition code:\n\nactivemq-broker/src/main/java/org/apache/activemq/broker/region/AbstractRegion.java\n\nLines 89 - 110 [in start()]\n// ... some code ...\ncontext.getBroker().addDestination(context, dest, false);\n// ... some code ...\n\nIn summary, the order of these calls makes it impossible for advisory destinations to be created/added for known destinations upon broker restart:\n\n1.\tSet “started” AtomicBoolean variable to true\n2.\tRe-add all known destinations (associated advisory destinations will fail to be created)\n3.\tDecrement “startedLatch” CountDownLatch to 0\n4. isStarted() becomes true\n\nOnly after step 3 does isStarted() become true. At that point, we have missed to create the advisory destinations. Other events on those destinations (removal) may trigger the advisory destination addition again, but that can run into issues like the one stated in the initial report. \n\nTo really address this, the order of these events needs to change. However, I need to learn more about all of the dependencies to make sure that other things will not be broken with a potential reordering. \n\nAny ideas?\n\nNOTE: The order of the above-stated events was confirmed with a stack-trace:\n\n2015-01-06 15:49:41,976 | INFO  | \tat org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:139) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,976 | INFO  | \tat org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:330) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,976 | INFO  | \tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:171) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,977 | INFO  | \tat org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:195) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,977 | INFO  | \tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:171) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,977 | INFO  | \tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:171) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,977 | INFO  | \tat org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:177) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,977 | INFO  | \tat org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:99) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,978 | INFO  | \tat org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:190) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,978 | INFO  | \tat org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:121) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,978 | INFO  | \tat org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:187) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,978 | INFO  | \tat org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:187) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,979 | INFO  | \tat org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:120) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,979 | INFO  | \tat org.apache.activemq.broker.BrokerService$5.start(BrokerService.java:2180) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,979 | INFO  | \tat org.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:676) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,979 | INFO  | \tat org.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:660) | org.apache.activemq.broker.region.AbstractRegion | main\n2015-01-06 15:49:41,979 | INFO  | \tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:595) | org.apache.activemq.broker.region.AbstractRegion | main\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=patanasov","name":"patanasov","key":"patanasov","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Pero Atanasov","active":true,"timeZone":"Etc/UTC"},"created":"2015-02-06T15:26:10.353+0000","updated":"2015-03-02T18:37:16.364+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12765168/comment/14350331","id":"14350331","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Dmytro.Karimov","name":"Dmytro.Karimov","key":"dmytro.karimov","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dmytro Karimov","active":true,"timeZone":"Etc/UTC"},"body":"I caught the same exception on client side\nIt's happens after activating schedulerSupport=\"true\" in the broker.\n\nStacktrace:\n{code}\norg.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is javax.jms.JMSException: Timer already cancelled.\n        at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:308)\n        at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:168)\n        at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:474)\n        at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:548)\n        at test.Test.send(Test.java:55)\nCaused by: javax.jms.JMSException: Timer already cancelled.\n        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54)\n        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1420)\n        at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:2018)\n        at org.apache.activemq.ActiveMQMessageProducer.<init>(ActiveMQMessageProducer.java:124)\n        at org.apache.activemq.ActiveMQSession.createProducer(ActiveMQSession.java:1048)\n        at org.springframework.jms.core.JmsTemplate.doCreateProducer(JmsTemplate.java:968)\n        at org.springframework.jms.core.JmsTemplate.createProducer(JmsTemplate.java:949)\n        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:568)\n        at org.springframework.jms.core.JmsTemplate$4.doInJms(JmsTemplate.java:551)\n        at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:471)\n        ... 12 more\nCaused by: java.lang.IllegalStateException: Timer already cancelled.\n        at java.util.Timer.sched(Timer.java:397)\n        at java.util.Timer.schedule(Timer.java:248)\n        at org.apache.activemq.thread.Scheduler.executePeriodically(Scheduler.java:41)\n        at org.apache.activemq.broker.region.Topic.start(Topic.java:563)\n        at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:141)\n        at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:348)\n        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)\n        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)\n        at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:197)\n        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)\n        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:172)\n        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:177)\n        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:177)\n        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:462)\n        at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)\n        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)\n        at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:169)\n        at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:633)\n        at org.apache.activemq.advisory.AdvisoryBroker.fireProducerAdvisory(AdvisoryBroker.java:601)\n        at org.apache.activemq.advisory.AdvisoryBroker.fireProducerAdvisory(AdvisoryBroker.java:586)\n        at org.apache.activemq.advisory.AdvisoryBroker.addProducer(AdvisoryBroker.java:190)\n        at org.apache.activemq.broker.CompositeDestinationBroker.addProducer(CompositeDestinationBroker.java:56)\n        at org.apache.activemq.broker.BrokerFilter.addProducer(BrokerFilter.java:107)\n        at org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:112)\n        at org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:112)\n        at org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:610)\n        at org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:108)\n        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)\n        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)\n        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)\n        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)\n        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)\n        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)\n        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)\n        at java.lang.Thread.run(Thread.java:745)\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Dmytro.Karimov","name":"Dmytro.Karimov","key":"dmytro.karimov","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dmytro Karimov","active":true,"timeZone":"Etc/UTC"},"created":"2015-03-06T13:23:40.033+0000","updated":"2015-03-06T13:23:40.033+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12765168/comment/15400655","id":"15400655","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"body":"Appears to have been fixed in AMQ-5251","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"created":"2016-07-30T12:19:10.158+0000","updated":"2016-07-30T12:19:10.158+0000"}],"maxResults":5,"total":5,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-5508/votes","votes":3,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i23zy7:"}}