{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12483693","self":"https://issues.apache.org/jira/rest/api/2/issue/12483693","key":"AMQ-2497","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316331","id":"12316331","description":"Next unplanned v5 maintenance release","name":"5.x","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/3","id":"3","description":"The problem is a duplicate of an existing issue.","name":"Duplicate"},"customfield_12312322":null,"customfield_12310220":"2010-07-12T20:43:16.691+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Jan 13 22:11:54 UTC 2012","customfield_12310420":"70203","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_68097068665_*|*_6_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2012-01-13T22:11:54.795+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-2497/watchers","watchCount":11,"isWatching":false},"created":"2009-11-16T18:20:46.240+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315620","id":"12315620","description":"","name":"5.3.0","archived":false,"released":true,"releaseDate":"2009-10-13"}],"issuelinks":[{"id":"12347059","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12347059","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"outwardIssue":{"id":"12483317","key":"AMQ-1780","self":"https://issues.apache.org/jira/rest/api/2/issue/12483317","fields":{"summary":"ActiveMQ broker does not automatically reconnect if the connection to the database is lost","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2012-01-13T22:11:54.895+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"- deployed ActiveMQ 5.3.0 as RAR on JBoss\n- broker comes up fine\n- at some point database goes offline\n- broker can't communicate with database and shuts down\n- now database comes back online\n- borker will never come back again and will have to restart the JBoss manually again to start the broker\n\nThis will be a blocker for us to go to production as there is no availability of broker when database goes offline and comes back.\n\nHere is my broker-config.xml, let me know if any configuration is missing :\n\n<beans xmlns=\"http://activemq.apache.org/schema/core\">\n\n<bean xmlns=\"\" class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\"/>\n\n<bean xmlns=\"\" id=\"my-ds\" class=\"org.apache.commons.dbcp.BasicDataSource\" destroy-method=\"close\">\n<property name=\"driverClassName\" value=\"com.microsoft.sqlserver.jdbc.SQLServerDriver\"/>\n<property name=\"url\" value=\"jdbc:sqlserver://mydb:1433;databaseName=myds\"/>\n<property name=\"username\" value=\"sql\"/>\n<property name=\"password\" value=\"sql\"/>\n<property name=\"initialSize\" value=\"10\"/>\n<property name=\"poolPreparedStatements\" value=\"true\"/>\n</bean>\n\n<!-- shutdown hook is disabled as RAR classloader may be gone at shutdown -->\n<broker useJmx=\"true\" brokerName=\"sample.broker1\" useShutdownHook=\"false\">\n\n<destinations>\n<topic physicalName=\"pocket\" />\n</destinations>\n\n<managementContext>\n<!-- use appserver provided context instead of creating one,\nfor jboss use: -Djboss.platform.mbeanserver -->\n<managementContext createConnector=\"false\"/>\n</managementContext>\n\n<persistenceAdapter>\n<!-- <amqPersistenceAdapter syncOnWrite=\"false\" directory=\"${jboss.server.data.dir}/activemq\" maxFileLength=\"20 mb\"/> -->\n<!-- <journaledJDBC journalLogFiles=\"5\" dataDirectory=\"${jboss.server.data.dir}/activemq\"/> -->\n<!-- To use a different datasource, use th following syntax : -->\n\n<!-- <kahaPersistenceAdapter directory=\"${jboss.server.data.dir}/activemq\" maxDataFileLength=\"33554432\"/> -->\n\n<journaledJDBC journalLogFiles=\"5\" dataDirectory=\"${jboss.server.data.dir}/activemq\" dataSource=\"#my-ds\" useDatabaseLock=\"false\" />\n\n</persistenceAdapter>\n\n<transportConnectors>\n<transportConnector name=\"sample.broker1\" uri=\"tcp://localhost:3030\" discoveryUri=\"multicast://default\"/>\n</transportConnectors>\n\n</broker>\n</beans>\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"163863","customfield_12312823":null,"summary":"Message broker won't come back when the databse goes offline and comes back online","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiskill","name":"hiskill","key":"hiskill","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hiskill","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiskill","name":"hiskill","key":"hiskill","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hiskill","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"MS SQL 2000,2005,2008","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483693/comment/12941828","id":"12941828","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiskill","name":"hiskill","key":"hiskill","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hiskill","active":true,"timeZone":"Etc/UTC"},"body":"Do we have do anything specific to make the broker available in these scenarios. Restarting JBoss is not an acceptable option.\nAny help is highly appreciated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiskill","name":"hiskill","key":"hiskill","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hiskill","active":true,"timeZone":"Etc/UTC"},"created":"2009-11-17T17:58:52.196+0000","updated":"2009-11-17T17:58:52.196+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483693/comment/12941107","id":"12941107","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mperumalla","name":"mperumalla","key":"mperumalla","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manjuram Perumalla","active":true,"timeZone":"Etc/UTC"},"body":"Are there any updates on this issue? We've similar problem with 5.0.0 and would like to know if it's been fixed in later versions.\n\nThanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mperumalla","name":"mperumalla","key":"mperumalla","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manjuram Perumalla","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-12T20:43:16.691+0000","updated":"2010-07-12T20:43:16.691+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483693/comment/12942459","id":"12942459","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"Have you tried to configure a failover jdb connection: something like what is described here:\nhttp://forum.springsource.org/showpost.php?p=124247&postcount=4\n\nalso, a snippet of the activemq log file when it i initiates shutdown would be useful to identify what part of the code is detecting the jdbc connection failure and deciding to stop.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-13T10:01:05.556+0000","updated":"2010-07-13T10:01:05.556+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483693/comment/12937368","id":"12937368","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mperumalla","name":"mperumalla","key":"mperumalla","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manjuram Perumalla","active":true,"timeZone":"Etc/UTC"},"body":"I've added 'useDatabaseLock=false' to the database persistence adapter to disable db failover. This setting is working for us. Maybe this setting should be set to false by default (out-of-the-box) and let the users change it if they add database failover. Or improve the documentation.\n\nFrom the Javadoc of JDBCPersistenceAdapter, \"Sets whether or not an exclusive database lock should be used to enable JDBC Master/Slave. Enabled by default.\" \n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mperumalla","name":"mperumalla","key":"mperumalla","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Manjuram Perumalla","active":true,"timeZone":"Etc/UTC"},"created":"2010-08-23T22:01:08.261+0000","updated":"2010-08-23T22:01:08.261+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483693/comment/12969229","id":"12969229","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=flume","name":"flume","key":"flume","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jan Lievens","active":true,"timeZone":"Etc/UTC"},"body":"We have the same issue with a PostgreSQL database. It seems that the protected Connection in the DefaultDatabaseLocker becomes stale when the DB goes down but is still used whenever the keepAlive-method is called. Only at the start of the DefaultDatabaseLocker is the connection retrieved from the datasource (which in our case has a validationQuery) so the keepAlive catches any Exception while using the stale connection. When this happens the keepAlive returns a false which results in a stopBroker()-method call on the JDBCPersistenceAdapter.\n\nMaybe it would be better to diversify the catch-statement in the keepAlive-method and whenever this specific Exception (in our case org.postgresql.util.PSQLException: FATAL: terminating connection due to administrator command) occurs (but any SQLException will do I think), take the necessary precautions: \n- stop all the transport-connectors so that no further messages are send into ActiveMQ\n- schedule a different keepAlive that simply checks if the DB is up again \n         -> if up again: re-initialize the DefaultDatabaseLocker and start the transport-connectors again\n\nI haven't come around implementing a patch to the 5.5-SNAPSHOT yet but I am willing to do so if my assumptions stated above are somewhat correct.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=flume","name":"flume","key":"flume","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jan Lievens","active":true,"timeZone":"Etc/UTC"},"created":"2010-12-08T07:38:13.380+0000","updated":"2010-12-08T07:38:13.380+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483693/comment/12983686","id":"12983686","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=flume","name":"flume","key":"flume","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jan Lievens","active":true,"timeZone":"Etc/UTC"},"body":"It appears that there is a test present in the activemq-core module called org.apache.activemq.broker.ft.DbRestartJDBCQueueMasterSlaveTest that tests the scenario where the DB goes down and comes up again in a master/slave configuration.\nThe outcome of this test is that the master goes down never to come up again (which is the state that shouldn't occur). On the other hand the slave becomes the master when the DB comes up again (which is after the master went down).\nThis test doesn't check if the master or slave is up or down nor what master/slave states they are in.\n\nSo basically the problem is that when a master sees his DB-store fail he should revert to a slave state and not to the dead state. And when the DB comes up again the fastest of the 2 slaved brokers becomes master. This way we don't have to manually start the dead master after each DB failure. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=flume","name":"flume","key":"flume","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jan Lievens","active":true,"timeZone":"Etc/UTC"},"created":"2011-01-19T12:47:33.481+0000","updated":"2011-01-19T12:47:33.481+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483693/comment/13005342","id":"13005342","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kaiqinsun","name":"kaiqinsun","key":"kaiqinsun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kaiqin Sun","active":true,"timeZone":"Etc/UTC"},"body":"Just want to clarify the issue, it appears there are two scenarios for AMQ to deal with DataBase Reconnection:\n\n1) with Master/Slave configuration (with two DataBases):\n\n2) without Master/Slave configuration ( with only one DataBase):\n   There are lots of people facing this scenario in production environment.\n   \n   see: \n   AMQ-1780:ActiveMQ broker does not automatically reconnect if the connection to the database is lost  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kaiqinsun","name":"kaiqinsun","key":"kaiqinsun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kaiqin Sun","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-10T21:29:02.147+0000","updated":"2011-03-10T21:29:02.147+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483693/comment/13008326","id":"13008326","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kiorsak","name":"kiorsak","key":"kiorsak","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Oleg Kiorsak","active":true,"timeZone":"Etc/UTC"},"body":"same happens with 5.4.2\n\na mere restart of the SQL Server service results in both master and Slave shutting down for good... this makes it impossible to have any HA capability and essentially defeats the purpose of a \"cluster\"...\n\n------ MASTER LOG ---------------------------------------------------------------\n\n2011-03-18 15:30:25,274 | INFO  | Refreshing org.apache.activemq.xbean.XBeanBrokerFactory$1@6825c828: startup date [Fri Mar 18 15:30:25 EST 2011]; root of context hierarchy | org.apache.activemq.xbean.XBeanBrokerFactory$1 | main\n2011-03-18 15:30:29,394 | INFO  | PListStore:/usr/local/tollmobile/activemq54data/data/MobTechTest1/tmp_storage started | org.apache.activemq.store.kahadb.plist.PListStore | main\n2011-03-18 15:30:29,526 | INFO  | Using Persistence Adapter: JDBCPersistenceAdapter(org.apache.commons.dbcp.BasicDataSource@5ebbfa5c) | org.apache.activemq.broker.BrokerService | main\n2011-03-18 15:30:30,036 | INFO  | JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:2011/jmxrmi | org.apache.activemq.broker.jmx.ManagementContext | JMX connector\n2011-03-18 15:30:33,979 | INFO  | Database adapter driver override recognized for : [microsoft_sql_server_jdbc_driver_2_0] - adapter: class org.apache.activemq.store.jdbc.adapter.TransactJDBCAdapter | org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | main\n2011-03-18 15:30:35,688 | INFO  | Database lock driver override recognized for : [microsoft_sql_server_jdbc_driver_2_0] - adapter: class org.apache.activemq.store.jdbc.adapter.TransactDatabaseLocker | org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | main\n2011-03-18 15:30:35,689 | INFO  | Attempting to acquire the exclusive lock to become the Master broker | org.apache.activemq.store.jdbc.adapter.TransactDatabaseLocker | main\n2011-03-18 15:30:35,741 | INFO  | Becoming the master on dataSource: org.apache.commons.dbcp.BasicDataSource@5ebbfa5c | org.apache.activemq.store.jdbc.adapter.TransactDatabaseLocker | main\n2011-03-18 15:30:35,750 | INFO  | ActiveMQ 5.4.2-fuse-01-00 JMS Message Broker (MobTechTest1) is starting | org.apache.activemq.broker.BrokerService | main\n2011-03-18 15:30:35,751 | INFO  | For help or more information please see: http://activemq.apache.org/ | org.apache.activemq.broker.BrokerService | main\n2011-03-18 15:30:36,373 | INFO  | Listening for connections at: nio://mdtapdot01:10001 | org.apache.activemq.transport.TransportServerThreadSupport | main\n2011-03-18 15:30:36,378 | INFO  | Connector openwire Started | org.apache.activemq.broker.TransportConnector | main\n2011-03-18 15:30:36,396 | INFO  | Listening for connections at: stomp://mdtapdot01:10002 | org.apache.activemq.transport.TransportServerThreadSupport | main\n2011-03-18 15:30:36,396 | INFO  | Connector STOMP Started | org.apache.activemq.broker.TransportConnector | main\n2011-03-18 15:30:36,420 | INFO  | Listening for connections at: xmpp://mdtapdot01:10003 | org.apache.activemq.transport.TransportServerThreadSupport | main\n2011-03-18 15:30:36,421 | INFO  | Connector xmpp Started | org.apache.activemq.broker.TransportConnector | main\n2011-03-18 15:30:36,427 | INFO  | ActiveMQ JMS Message Broker (MobTechTest1, ID:mdtapdot01-35145-1300422635816-0:1) started | org.apache.activemq.broker.BrokerService | main\n2011-03-18 15:30:36,656 | INFO  | jetty-7.1.6.v20100715 | org.eclipse.jetty.util.log | main\n2011-03-18 15:30:37,509 | INFO  | ActiveMQ WebConsole initialized. | org.apache.activemq.web.WebConsoleStarter | main\n2011-03-18 15:30:37,845 | INFO  | Initializing Spring FrameworkServlet 'dispatcher' | /admin | main\n2011-03-18 15:30:38,310 | INFO  | ActiveMQ Console at http://0.0.0.0:8161/admin | org.eclipse.jetty.util.log | main\n2011-03-18 15:30:38,949 | INFO  | Initializing Spring root WebApplicationContext | /camel | main\n2011-03-18 15:30:39,438 | INFO  | OSGi environment not detected. | org.apache.camel.spring.handler.CamelNamespaceHandler | main\n2011-03-18 15:30:42,273 | INFO  | Apache Camel 2.6.0-fuse-00-00 (CamelContext: camel) is starting | org.apache.camel.spring.SpringCamelContext | main\n2011-03-18 15:30:42,274 | INFO  | JMX enabled. Using ManagedManagementStrategy. | org.apache.camel.spring.SpringCamelContext | main\n2011-03-18 15:30:44,421 | INFO  | Found 5 packages with 16 @Converter classes to load | org.apache.camel.impl.converter.AnnotationTypeConverterLoader | main\n2011-03-18 15:30:44,505 | INFO  | Loaded 151 type converters in 1.867 seconds | org.apache.camel.impl.converter.DefaultTypeConverter | main\n2011-03-18 15:30:47,132 | INFO  | Connector vm://MobTechTest1 Started | org.apache.activemq.broker.TransportConnector | main\n2011-03-18 15:30:47,520 | INFO  | Route: route1 started and consuming from: Endpoint[activemq://MDT.INBOUND] | org.apache.camel.spring.SpringCamelContext | main\n2011-03-18 15:30:47,579 | INFO  | Total 1 routes, of which 1 is started. | org.apache.camel.spring.SpringCamelContext | main\n2011-03-18 15:30:47,580 | INFO  | Apache Camel 2.6.0-fuse-00-00 (CamelContext: camel) started in 5.305 seconds | org.apache.camel.spring.SpringCamelContext | main\n2011-03-18 15:30:52,371 | INFO  | Camel Console at http://0.0.0.0:8161/camel | org.eclipse.jetty.util.log | main\n2011-03-18 15:30:52,475 | INFO  | ActiveMQ Web Demos at http://0.0.0.0:8161/demo | org.eclipse.jetty.util.log | main\n2011-03-18 15:30:52,585 | INFO  | RESTful file access application at http://0.0.0.0:8161/fileserver | org.eclipse.jetty.util.log | main\n2011-03-18 15:30:52,753 | INFO  | FUSE Web Console at http://0.0.0.0:8161/console | org.eclipse.jetty.util.log | main\n2011-03-18 15:30:52,781 | INFO  | Started SelectChannelConnector@0.0.0.0:8161 | org.eclipse.jetty.util.log | main\n2011-03-18 15:31:35,756 | ERROR | Failed to update database lock: com.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe | org.apache.activemq.store.jdbc.DefaultDatabaseLocker | ActiveMQ Cleanup Timer\ncom.microsoft.sqlserver.jdbc.SQLServerException: Broken pipe\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1368)\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.terminate(SQLServerConnection.java:1355)\n\tat com.microsoft.sqlserver.jdbc.TDSChannel.write(IOBuffer.java:1548)\n\tat com.microsoft.sqlserver.jdbc.TDSWriter.flush(IOBuffer.java:2368)\n\tat com.microsoft.sqlserver.jdbc.TDSWriter.writePacket(IOBuffer.java:2270)\n\tat com.microsoft.sqlserver.jdbc.TDSWriter.endMessage(IOBuffer.java:1877)\n\tat com.microsoft.sqlserver.jdbc.TDSCommand.startResponse(IOBuffer.java:4403)\n\tat com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:386)\n\tat com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:338)\n\tat com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:4026)\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:1416)\n\tat com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:185)\n\tat com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:160)\n\tat com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.executeUpdate(SQLServerPreparedStatement.java:306)\n\tat org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:102)\n\tat org.apache.activemq.store.jdbc.DefaultDatabaseLocker.keepAlive(DefaultDatabaseLocker.java:161)\n\tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.databaseLockKeepAlive(JDBCPersistenceAdapter.java:604)\n\tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:290)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n\tat java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:181)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:205)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:619)\n2011-03-18 15:31:35,760 | INFO  | No longer able to keep the exclusive lock so giving up being a master | org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | ActiveMQ Cleanup Timer\n2011-03-18 15:31:35,760 | INFO  | ActiveMQ Message Broker (MobTechTest1, ID:mdtapdot01-35145-1300422635816-0:1) is shutting down | org.apache.activemq.broker.BrokerService | ActiveMQ Cleanup Timer\n2011-03-18 15:31:36,468 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | ActiveMQ Cleanup Timer\n2011-03-18 15:31:38,092 | INFO  | Connector STOMP Stopped | org.apache.activemq.broker.TransportConnector | ActiveMQ Cleanup Timer\n2011-03-18 15:31:38,476 | INFO  | Connector xmpp Stopped | org.apache.activemq.broker.TransportConnector | ActiveMQ Cleanup Timer\n2011-03-18 15:31:38,488 | INFO  | Connector vm://MobTechTest1 Stopped | org.apache.activemq.broker.TransportConnector | ActiveMQ Cleanup Timer\n2011-03-18 15:31:38,502 | INFO  | PListStore:/usr/local/tollmobile/activemq54data/data/MobTechTest1/tmp_storage stopped | org.apache.activemq.store.kahadb.plist.PListStore | ActiveMQ Cleanup Timer\n2011-03-18 15:31:38,536 | INFO  | ActiveMQ JMS Message Broker (MobTechTest1, ID:mdtapdot01-35145-1300422635816-0:1) stopped | org.apache.activemq.broker.BrokerService | ActiveMQ Cleanup Timer\n\n\n------------SLAVE LOG ------------------------\n\n\n2011-03-18 15:30:31,551 | INFO  | Refreshing org.apache.activemq.xbean.XBeanBrokerFactory$1@53f64158: startup date [Fri Mar 18 15:30:31 EST 2011]; root of context hierarchy | org.apache.activemq.xbean.XBeanBrokerFactory$1 | main\n2011-03-18 15:30:39,114 | INFO  | PListStore:/usr/local/tollmobile/activemq54data/data/MobTechTest2/tmp_storage started | org.apache.activemq.store.kahadb.plist.PListStore | main\n2011-03-18 15:30:39,799 | INFO  | JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:2011/jmxrmi | org.apache.activemq.broker.jmx.ManagementContext | JMX connector\n2011-03-18 15:30:39,868 | INFO  | Using Persistence Adapter: JDBCPersistenceAdapter(org.apache.commons.dbcp.BasicDataSource@3d015a9e) | org.apache.activemq.broker.BrokerService | main\n2011-03-18 15:30:44,694 | INFO  | Database adapter driver override recognized for : [microsoft_sql_server_jdbc_driver_2_0] - adapter: class org.apache.activemq.store.jdbc.adapter.TransactJDBCAdapter | org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | main\n2011-03-18 15:31:22,664 | WARN  | Cannot create tables due to: com.microsoft.sqlserver.jdbc.SQLServerException: The connection is closed. | org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | main\n2011-03-18 15:31:22,670 | WARN  | Failure Details: The connection is closed. | org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | main\ncom.microsoft.sqlserver.jdbc.SQLServerException: The connection is closed.\n\tat com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:170)\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:304)\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.commit(SQLServerConnection.java:1641)\n\tat org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:301)\n\tat org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.commit(PoolingDataSource.java:200)\n\tat org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.java:115)\n\tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:271)\n\tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:485)\n\tat org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:115)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\n\tat org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\n\tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n\tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n\tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.activemq.console.Main.runTaskClass(Main.java:251)\n\tat org.apache.activemq.console.Main.main(Main.java:107)\n2011-03-18 15:31:22,689 | WARN  | Commit failed: The connection is closed. | org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | main\ncom.microsoft.sqlserver.jdbc.SQLServerException: The connection is closed.\n\tat com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:170)\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:304)\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.getAutoCommit(SQLServerConnection.java:1618)\n\tat org.apache.commons.dbcp.DelegatingConnection.getAutoCommit(DelegatingConnection.java:304)\n\tat org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.getAutoCommit(PoolingDataSource.java:224)\n\tat org.apache.activemq.store.jdbc.TransactionContext.commit(TransactionContext.java:162)\n\tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:277)\n\tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:485)\n\tat org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:115)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\n\tat org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\n\tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n\tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n\tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.activemq.console.Main.runTaskClass(Main.java:251)\n\tat org.apache.activemq.console.Main.main(Main.java:107)\n2011-03-18 15:31:22,707 | WARN  | Rollback failed: The connection is closed. | org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | main\ncom.microsoft.sqlserver.jdbc.SQLServerException: The connection is closed.\n\tat com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:170)\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:304)\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.rollback(SQLServerConnection.java:1655)\n\tat org.apache.commons.dbcp.DelegatingConnection.rollback(DelegatingConnection.java:328)\n\tat org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.rollback(PoolingDataSource.java:312)\n\tat org.apache.activemq.store.jdbc.TransactionContext.rollback(TransactionContext.java:194)\n\tat org.apache.activemq.store.jdbc.TransactionContext.commit(TransactionContext.java:168)\n\tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:277)\n\tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:485)\n\tat org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:115)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\n\tat org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\n\tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n\tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n\tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.activemq.console.Main.runTaskClass(Main.java:251)\n\tat org.apache.activemq.console.Main.main(Main.java:107)\n2011-03-18 15:31:22,731 | WARN  | Error while closing connection: The connection is closed. | org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | main\ncom.microsoft.sqlserver.jdbc.SQLServerException: The connection is closed.\n\tat com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:170)\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:304)\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.getAutoCommit(SQLServerConnection.java:1618)\n\tat org.apache.commons.dbcp.DelegatingConnection.getAutoCommit(DelegatingConnection.java:304)\n\tat org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.getAutoCommit(PoolingDataSource.java:224)\n\tat org.apache.activemq.store.jdbc.TransactionContext.close(TransactionContext.java:126)\n\tat org.apache.activemq.store.jdbc.TransactionContext.rollback(TransactionContext.java:201)\n\tat org.apache.activemq.store.jdbc.TransactionContext.commit(TransactionContext.java:168)\n\tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:277)\n\tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:485)\n\tat org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:115)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\n\tat org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\n\tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n\tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n\tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.activemq.console.Main.runTaskClass(Main.java:251)\n\tat org.apache.activemq.console.Main.main(Main.java:107)\n2011-03-18 15:31:22,749 | WARN  | Close failed: Already closed. | org.apache.activemq.store.jdbc.TransactionContext | main\njava.sql.SQLException: Already closed.\n\tat org.apache.commons.dbcp.PoolableConnection.close(PoolableConnection.java:84)\n\tat org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.close(PoolingDataSource.java:181)\n\tat org.apache.activemq.store.jdbc.TransactionContext.close(TransactionContext.java:137)\n\tat org.apache.activemq.store.jdbc.TransactionContext.rollback(TransactionContext.java:201)\n\tat org.apache.activemq.store.jdbc.TransactionContext.commit(TransactionContext.java:168)\n\tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:277)\n\tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:485)\n\tat org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:115)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\n\tat org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\n\tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n\tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n\tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.activemq.console.Main.runTaskClass(Main.java:251)\n\tat org.apache.activemq.console.Main.main(Main.java:107)\n2011-03-18 15:31:22,767 | ERROR | Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: The connection is closed. | org.apache.activemq.broker.BrokerService | main\njava.io.IOException: The connection is closed.\n\tat org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:45)\n\tat org.apache.activemq.store.jdbc.TransactionContext.close(TransactionContext.java:133)\n\tat org.apache.activemq.store.jdbc.TransactionContext.rollback(TransactionContext.java:201)\n\tat org.apache.activemq.store.jdbc.TransactionContext.commit(TransactionContext.java:168)\n\tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:277)\n\tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:485)\n\tat org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\n\tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:115)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)\n\tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\n\tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\n\tat org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\n\tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n\tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)\n\tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n\tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.activemq.console.Main.runTaskClass(Main.java:251)\n\tat org.apache.activemq.console.Main.main(Main.java:107)\nCaused by: com.microsoft.sqlserver.jdbc.SQLServerException: The connection is closed.\n\tat com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:170)\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:304)\n\tat com.microsoft.sqlserver.jdbc.SQLServerConnection.getAutoCommit(SQLServerConnection.java:1618)\n\tat org.apache.commons.dbcp.DelegatingConnection.getAutoCommit(DelegatingConnection.java:304)\n\tat org.apache.commons.dbcp.PoolingDataSource$PoolGuardConnectionWrapper.getAutoCommit(PoolingDataSource.java:224)\n\tat org.apache.activemq.store.jdbc.TransactionContext.close(TransactionContext.java:126)\n\t... 40 more\n2011-03-18 15:31:22,792 | INFO  | ActiveMQ Message Broker (MobTechTest2, null) is shutting down | org.apache.activemq.broker.BrokerService | main\n2011-03-18 15:31:22,794 | INFO  | Connector openwire Stopped | org.apache.activemq.broker.TransportConnector | main\n2011-03-18 15:31:22,795 | INFO  | Connector STOMP Stopped | org.apache.activemq.broker.TransportConnector | main\n2011-03-18 15:31:22,795 | INFO  | Connector xmpp Stopped | org.apache.activemq.broker.TransportConnector | main\n2011-03-18 15:31:22,840 | INFO  | PListStore:/usr/local/tollmobile/activemq54data/data/MobTechTest2/tmp_storage stopped | org.apache.activemq.store.kahadb.plist.PListStore | main\n2011-03-18 15:31:27,215 | INFO  | Database lock driver override recognized for : [microsoft_sql_server_jdbc_driver_2_0] - adapter: class org.apache.activemq.store.jdbc.adapter.TransactDatabaseLocker | org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | main\n2011-03-18 15:31:27,306 | INFO  | ActiveMQ JMS Message Broker (MobTechTest2, null) stopped | org.apache.activemq.broker.BrokerService | main\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kiorsak","name":"kiorsak","key":"kiorsak","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Oleg Kiorsak","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-18T04:38:54.923+0000","updated":"2011-03-18T04:38:54.923+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483693/comment/13012032","id":"13012032","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"The fix for https://issues.apache.org/jira/browse/AMQ-1780 will help in the case of a single broker.\nThe master/slave case and database locker needs a little more work.\n\nDefaultDatabaseLocker failure may need to delegate to the IOException handler or a JDBC specific variant and reinitialize a DefaultDatabaseLocker before resuming transports such that it can become a master or slave as appropriate. There needs to be a bunch of additional tests to validate the usecases. Also the migration from master to slave may need some work w.r.t to jmx attributes\n\n@Jan re a patch, contributions are most welcome ;-) you are on the right road. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2011-03-28T12:51:47.485+0000","updated":"2011-03-28T12:51:47.485+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483693/comment/13053745","id":"13053745","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=flume","name":"flume","key":"flume","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jan Lievens","active":true,"timeZone":"Etc/UTC"},"body":"Isn't this fixed now with the new IOExceptionHandler in version 5.5? Haven't tested it yet but will any time soon.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=flume","name":"flume","key":"flume","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jan Lievens","active":true,"timeZone":"Etc/UTC"},"created":"2011-06-23T09:36:53.909+0000","updated":"2011-06-23T09:36:53.909+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483693/comment/13185907","id":"13185907","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"This appears to be a duplicate of AMQ-1780 which has since been resolved.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2012-01-13T22:11:54.893+0000","updated":"2012-01-13T22:11:54.893+0000"}],"maxResults":11,"total":11,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-2497/votes","votes":12,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0seqf:"}}