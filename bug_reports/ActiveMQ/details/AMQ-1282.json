{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12482987","self":"https://issues.apache.org/jira/rest/api/2/issue/12482987","key":"AMQ-1282","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315620","id":"12315620","description":"","name":"5.3.0","archived":false,"released":true,"releaseDate":"2009-10-13"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2008-09-02T16:35:02.869+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue Jul 07 05:34:28 UTC 2009","customfield_12310420":"84572","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_65096026522_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2009-07-07T05:34:28.408+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-1282/watchers","watchCount":0,"isWatching":false},"created":"2007-06-14T19:20:41.886+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315614","id":"12315614","description":"","name":"4.1.1","archived":false,"released":true,"releaseDate":"2007-06-08"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rajdavies","name":"rajdavies","key":"rajdavies","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rajdavies&avatarId=13942","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rajdavies&avatarId=13942","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rajdavies&avatarId=13942","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rajdavies&avatarId=13942"},"displayName":"Rob Davies","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2009-07-07T05:34:28.376+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313896","id":"12313896","name":"JMS client"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"Consider simple reception code like this:\n\n        MapMessage message = (MapMessage) consumer.receive(1000);\n        int x = message.getInt(\"foo\"));\n\nI notice that x is now set to zero even though there was no \"foo\" value in the map. I would have expected an exception.\n\nAccording to Gaurav Hariani <gaurav@blackspark.com> \t\n\nalso from the spec api: http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MapMessage.html\n\n    Attempting to read a null value as a primitive type must be treated as calling the primitive's corresponding valueOf(String) conversion method with a null value. Since char does not support a String conversion, attempting to read a null value as a char must throw a NullPointerException.\n\n.. so you are right that it is a bug ... since Integer.valueOf(null) throws an Exception","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12460882","id":"12460882","filename":"MapMessageTest.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eharold","name":"eharold","key":"eharold","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Elliotte Rusty Harold","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-15T13:58:29.865+0000","size":5041,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12460882/MapMessageTest.java"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"233441","customfield_12312823":null,"summary":"Bad conversion of nonexistent data in MapMessage","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eharold","name":"eharold","key":"eharold","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Elliotte Rusty Harold","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eharold","name":"eharold","key":"eharold","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Elliotte Rusty Harold","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482987/comment/12936183","id":"12936183","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eharold","name":"eharold","key":"eharold","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Elliotte Rusty Harold","active":true,"timeZone":"Etc/UTC"},"body":"In fact this fails for all types except char and boolean as the following unit tests demonstrate:\n\n\nimport javax.jms.Connection;\nimport javax.jms.ConnectionFactory;\nimport javax.jms.JMSException;\nimport javax.jms.MapMessage;\nimport javax.jms.Session;\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\n\nimport junit.framework.TestCase;\n\npublic class MapMessageTest extends TestCase {\n\n    private ConnectionFactory factory;\n    private Connection connection;   \n    private MapMessage message;\n    \n    protected void setUp() throws Exception {\n        factory = new ActiveMQConnectionFactory(\"vm://localhost?broker.persistent=false\");\n        connection = factory.createConnection();\n        connection.start();             \n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n        message = session.createMapMessage();\n        super.setUp();\n    }\n    \n    protected void tearDown() throws Exception {\n        connection.close();\n        super.tearDown();\n    }    \n    \n    \n    public void testUnmappedBooleanMessage() throws JMSException {\n        \n        Object expected;\n        try {\n            expected = Boolean.valueOf(null);\n        }\n        catch (Exception ex) {\n            expected = ex;\n        }\n\n        try {\n            Boolean actual = message.getBoolean(\"foo\");\n            assertEquals(expected, actual);\n        }\n        catch (Exception ex) {\n            assertEquals(expected, ex);\n        }\n        \n    }\n    \n    public void testUnmappedIntegerMessage() throws JMSException {\n        \n        Object expected;\n        try {\n            expected = Integer.valueOf(null);\n        }\n        catch (Exception ex) {\n            expected = ex;\n        }\n\n        try {\n            Integer actual = message.getInt(\"foo\");\n            assertEquals(expected, actual);\n        }\n        catch (Exception ex) {\n            assertEquals(expected, ex);\n        }\n        \n    }\n    \n    \n    public void testUnmappedShortMessage() throws JMSException {\n        \n        Object expected;\n        try {\n            expected = Short.valueOf(null);\n        }\n        catch (Exception ex) {\n            expected = ex;\n        }\n\n        try {\n            Short actual = message.getShort(\"foo\");\n            assertEquals(expected, actual);\n        }\n        catch (Exception ex) {\n            assertEquals(expected, ex);\n        }\n        \n    }\n    \n    \n    public void testUnmappedLongMessage() throws JMSException {\n        \n        Object expected;\n        try {\n            expected = Long.valueOf(null);\n        }\n        catch (Exception ex) {\n            expected = ex;\n        }\n\n        try {\n            Long actual = message.getLong(\"foo\");\n            assertEquals(expected, actual);\n        }\n        catch (Exception ex) {\n            assertEquals(expected, ex);\n        }\n        \n    }\n    \n    \n    public void testUnmappedStringMessage() throws JMSException {\n        Object expected;\n        try {\n            expected = String.valueOf(null);\n        }\n        catch (Exception ex) {\n            expected = ex;\n        }\n\n        try {\n            String actual = message.getString(\"foo\");\n            assertEquals(expected, actual);\n        }\n        catch (Exception ex) {\n            assertEquals(expected, ex);\n        }\n    }\n   \n\n    public void testUnmappedCharMessage() throws JMSException {\n        try {\n            message.getChar(\"foo\");\n            fail(\"should have thrown NullPointerException\");\n        }\n        catch (NullPointerException success) {\n            assertNotNull(success);\n        }\n    } \n    \n    public void testUnmappedByteMessage() throws JMSException {\n        Object expected;\n        try {\n            expected = Byte.valueOf(null);\n        }\n        catch (Exception ex) {\n            expected = ex;\n        }\n\n        try {\n            Byte actual = message.getByte(\"foo\");\n            assertEquals(expected, actual);\n        }\n        catch (Exception ex) {\n            assertEquals(expected, ex);\n        }\n\n\n    }\n    \n    public void testUnmappedDoubleMessage() throws JMSException {\n\n        Object expected;\n        try {\n            expected = Double.valueOf(null);\n        }\n        catch (Exception ex) {\n            expected = ex;\n        }\n\n        try {\n            Double actual = message.getDouble(\"foo\");\n            assertEquals(expected, actual);\n        }\n        catch (Exception ex) {\n            assertEquals(expected, ex);\n        }\n\n\n    }\n    \n    public void testUnmappedFloatMessage() throws JMSException {\n        \n        Object expected;\n        try {\n            expected = Float.valueOf(null);\n        }\n        catch (Exception ex) {\n            expected = ex;\n        }\n\n        try {\n            Float actual = message.getFloat(\"foo\");\n            assertEquals(expected, actual);\n        }\n        catch (Exception ex) {\n            assertEquals(expected, ex);\n        }\n\n    }\n    \n}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eharold","name":"eharold","key":"eharold","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Elliotte Rusty Harold","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-15T13:56:46.511+0000","updated":"2007-06-15T13:56:46.511+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482987/comment/12936192","id":"12936192","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eharold","name":"eharold","key":"eharold","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Elliotte Rusty Harold","active":true,"timeZone":"Etc/UTC"},"body":"JUnit test case demonstrating bugs in MapMessage class with conversion of unmapped values","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eharold","name":"eharold","key":"eharold","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Elliotte Rusty Harold","active":true,"timeZone":"Etc/UTC"},"created":"2007-06-15T13:58:30.198+0000","updated":"2007-06-15T13:58:30.198+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482987/comment/12940127","id":"12940127","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=memelet","name":"memelet","key":"memelet","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Barry Kaplan","active":true,"timeZone":"Etc/UTC"},"body":"#getBytes also appears to be incorrect in two ways. \n\nFirst, from  [MapMessage.html|http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MapMessage.html] this method should return null if the entry does not exist. From the code, it appears as if MessageFormatException is thrown instead.\n\nSecond, if an attempt is made to MessageFormatException for a null value, an NPE will be generated due to the \"value.getClass().getName()\".\n\n{code}\npublic byte[] getBytes(String name) throws JMSException {\n        initializeReading();\n        Object value = map.get(name);\n        if (value instanceof byte[]) {\n            return (byte[])value;\n        } else {\n            throw new MessageFormatException(\" cannot read a byte[] from \" + value.getClass().getName());\n        }\n    }\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=memelet","name":"memelet","key":"memelet","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Barry Kaplan","active":true,"timeZone":"Etc/UTC"},"created":"2008-09-02T16:35:02.869+0000","updated":"2008-09-02T16:35:25.396+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482987/comment/12941691","id":"12941691","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rajdavies","name":"rajdavies","key":"rajdavies","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rajdavies&avatarId=13942","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rajdavies&avatarId=13942","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rajdavies&avatarId=13942","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rajdavies&avatarId=13942"},"displayName":"Rob Davies","active":true,"timeZone":"Etc/UTC"},"body":"Fixed by SVN revision 791708","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rajdavies","name":"rajdavies","key":"rajdavies","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rajdavies&avatarId=13942","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rajdavies&avatarId=13942","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rajdavies&avatarId=13942","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rajdavies&avatarId=13942"},"displayName":"Rob Davies","active":true,"timeZone":"Etc/UTC"},"created":"2009-07-07T05:34:28.334+0000","updated":"2009-07-07T05:34:28.334+0000"}],"maxResults":4,"total":4,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-1282/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i14c7j:"}}