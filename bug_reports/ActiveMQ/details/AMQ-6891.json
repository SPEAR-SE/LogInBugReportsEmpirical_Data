{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13133738","self":"https://issues.apache.org/jira/rest/api/2/issue/13133738","key":"AMQ-6891","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12341032","id":"12341032","name":"5.16.0","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2018-01-26T12:44:38.049+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue Jan 30 10:53:10 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_75775169_*|*_4_*:*_1_*:*_322894703_*|*_5_*:*_2_*:*_13654421","customfield_12312321":null,"resolutiondate":"2018-01-30T10:53:10.048+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6891/watchers","watchCount":3,"isWatching":false},"created":"2018-01-25T16:21:05.773+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12341669","id":"12341669","name":"5.15.2","archived":false,"released":true,"releaseDate":"2017-10-21"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-01-30T10:53:10.065+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"I have following scenario (see attached test case):\r\n # Send 1 message in JMS transaction\r\n # Enable database problem simulation (throw {{SQLException}} in {{TransactionContext.executeBatch()}} method - the similar situation should happen, when commit fails)\r\n # Attempt to send 2 messages in one JMS transaction, send operation fails as is expected (only 1 message is in database from first send operation)\r\n # Disable database problem simulation ({{SQLException}} is not thrown from now)\r\n # Repeat the attempt to send \"the same\" 2 messages in one JMS transaction, send operation is successful now, how is expected (3 messages are in database)\r\n # Attempt to receive 3 messages 1, 2, 3, but 5 messages are received 1, 2, 3, 2, 3.\r\n\r\nI have suspicion, that problem is in {{org.apache.activemq.broker.region.Queue}}. It seems that reason is {{indexOrderedCursorUpdates}} list. The {{Queue.onAdd(MessageContext)}} method is invoked for each message by {{JDBCMessageStore.addMessage(ConnectionContext, Message) method}}, which adds {{MessageContext}} into this list. The added {{MessageContext}} is processed (and removed) in {{Queue.doPendingCursorAdditions()}} method, which is invoked only from \"afterCommit synchronization\" ({{Queue.CursorAddSync.afterCommit()}} method). But when commit operation fails, then \"afterCommit\" method is not invoked (but {{afterRollback}} method is invoked) and {{MessageContext}} entries stays in {{indexOrderedCursorUpdates}} list.\r\n\r\nPersonaly I would expect, that some \"remove\" operation should be done in {{Queue.CursorAddSync.afterRolback()}} method. Probably the similar operation should be done in {{Queue.doMessageSend()}} method on place, where {{Exception}} from \"addMessage\" is handled in case when JMS transaction is not used. Or some different \"completion\" operation should be introduced, because {{MessageContext}} is only add into the list,  but don't removed in case of failure.\r\n\r\nWhen I tried to register (and use) {{LeaseLockerIOExceptionHandler}} IOExceptionHandler, the transports was successfully restarted, but my \"client\" code was blocked in {{ActiveMQSession.commit()}} method. Is it expected behavior?\r\n\r\nWhen I tried to add following code into {{Queue.CursorAddSync.afterRollback()}}, I received only 3 expected messages (when JMS transaction is used), but it was only blind shot, sorry, because I don't understand the whole logic here.\r\n{code:java}\r\n@Override\r\npublic void afterRollback() throws Exception {\r\n  synchronized(indexOrderedCursorUpdates) {\r\n    for(int i = indexOrderedCursorUpdates.size() - 1; i >= 0; i--) {\r\n      MessageContext mc = indexOrderedCursorUpdates.get(i);\r\n        if(mc.message.getMessageId().equals(messageContext.message.getMessageId())) {\r\n        indexOrderedCursorUpdates.remove(mc);\r\n        if(mc.onCompletion != null) {\r\n          mc.onCompletion.run();\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  messageContext.message.decrementReferenceCount();\r\n}\r\n{code}\r\n ","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12907847","id":"12907847","filename":"JmsTransactionCommitFailureTest.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkraus","name":"rkraus","key":"rkraus","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Radek Kraus","active":true,"timeZone":"Europe/Prague"},"created":"2018-01-26T10:29:12.670+0000","size":11078,"mimeType":"text/x-java","content":"https://issues.apache.org/jira/secure/attachment/12907847/JmsTransactionCommitFailureTest.java"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Duplicated message in JMS transaction, when jdbc persistence fails (Memory leak on Queue)","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkraus","name":"rkraus","key":"rkraus","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Radek Kraus","active":true,"timeZone":"Europe/Prague"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkraus","name":"rkraus","key":"rkraus","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Radek Kraus","active":true,"timeZone":"Europe/Prague"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133738/comment/16340885","id":"16340885","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkraus","name":"rkraus","key":"rkraus","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Radek Kraus","active":true,"timeZone":"Europe/Prague"},"body":"The test case, which should demonstrate the {{Queue}} memory leak on {{indexOrderedCursorUpdates}} list, is added into attached {{JmsTransactionCommitFailureTest}} class (only java reflection is used for acquiring list size after unsuccessful send operations). Usage of {{LeaseLockerIOExceptionHandler}} has still same effect - {{ActiveMQsession.commit()}} is blocked.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkraus","name":"rkraus","key":"rkraus","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Radek Kraus","active":true,"timeZone":"Europe/Prague"},"created":"2018-01-26T10:28:57.789+0000","updated":"2018-01-26T10:28:57.789+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133738/comment/16340992","id":"16340992","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"[~rkraus] thanks for the great test and analysis. I think you have identified the problem being the lack of work on the sync rollback. Am just wondering if the hash/equals of messageContext should be implemented such that indexOrderedCursorUpdates.remove() would be sufficient and am wondering about calling the completion in the rollback case, but it may be necessary for cleanup.\r\nI will investigate some more. thanks again for the great bug report :-)\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-26T12:44:38.049+0000","updated":"2018-01-26T12:44:38.049+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133738/comment/16341034","id":"16341034","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit f96a20e831755505b31df2e14fd3266f74d5a149 in activemq's branch refs/heads/master from [~gtully]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f96a20e ]\n\n[AMQ-6891] apply fix and test from Radek Kraus with thanks. Pending cursor adds are now dropped on rollback\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-26T13:18:33.038+0000","updated":"2018-01-26T13:18:33.038+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133738/comment/16341047","id":"16341047","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"It think your fix is on the money and the completion should be run. Thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-26T13:24:00.929+0000","updated":"2018-01-26T13:24:00.929+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133738/comment/16341252","id":"16341252","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkraus","name":"rkraus","key":"rkraus","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Radek Kraus","active":true,"timeZone":"Europe/Prague"},"body":"Thank you for your time and confirmation my issue. Thanks for your great reaction time. \r\nBut unfortunately, I think, that problem is more complex. IMHO the invocation of \\{{rollbackPendingCursorAdditions(MessageContext)}} method only from \\{{afterRollback()}} solves problem when JMS transaction is used - it is great. But the similar problem (entry is not removed from list) occurs even when JMS transaction is not used (I noted it in issue description too). The problem is, that in this situation the \"rollback\" method is not invoked at all. In this case exception handling in \\{{doMessageSend(ProducerBrokerExchange, Message)}} doesn't contains remove action too. In normal flow (no exception), the method \\{{tryOrderedCursorAdd()}} is invoked and remove operation is finally done by \"standard\" \\{{doPendingCursorAdditions()}} method. \r\n\r\n{code}\r\nvoid doMessageSend(final ProducerBrokerExchange producerExchange, final Message message) throws IOException,\r\n  ...\r\n  try {\r\n    //AMQ-6133 - don't store async if using persistJMSRedelivered\r\n    //This flag causes a sync update later on dispatch which can cause a race\r\n    //condition if the original add is processed after the update, which can cause\r\n    //a duplicate message to be stored\r\n    if (messages.isCacheEnabled() && !isPersistJMSRedelivered()) {\r\n      result = store.asyncAddQueueMessage(context, message, isOptimizeStorage());\r\n      result.addListener(new PendingMarshalUsageTracker(message));\r\n    } else {\r\n      store.addMessage(context, message);\r\n    }\r\n  } catch (Exception e) {\r\n    // we may have a store in inconsistent state, so reset the cursor\r\n    // before restarting normal broker operations\r\n    resetNeeded = true;\r\n    pendingSends.decrementAndGet();\r\n    // !!! \r\n    // Here should be remove operation too, probably?\r\n    //rollbackPendingCursorAdditions(messageContext);\r\n    // !!!\r\n    throw e;\r\n  }\r\n\r\n  ...\r\n\r\n  if(tryOrderedCursorAdd(message, context)) {\r\n    break;\r\n  }\r\n{code}\r\n\r\nYes it is my fault, because I didn't provide test case for this situation (send message without JMS transaction), sorry. I can extend my test class for this test case too. Sorry again.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rkraus","name":"rkraus","key":"rkraus","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Radek Kraus","active":true,"timeZone":"Europe/Prague"},"created":"2018-01-26T16:39:09.876+0000","updated":"2018-01-26T16:39:09.876+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133738/comment/16341300","id":"16341300","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"the non transacted case has this issue also. Most often store IOErrors would result in the broker stop. However there are cases where we want to let these error bubble back to the producers and in that case we still have leak in the non transacted case.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-26T17:11:35.358+0000","updated":"2018-01-26T17:11:35.358+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133738/comment/16344868","id":"16344868","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit dd2572bcb1c3793a8a2fa19cc4fc88cc8481f96e in activemq's branch refs/heads/master from [~gtully]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dd2572b ]\n\n[AMQ-6891] test and fix non tx variant of this leak\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-30T10:52:00.933+0000","updated":"2018-01-30T10:52:00.933+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13133738/comment/16344873","id":"16344873","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"fixed up the non transacted path and reused the leak test, thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-30T10:53:10.061+0000","updated":"2018-01-30T10:53:10.061+0000"}],"maxResults":8,"total":8,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6891/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3pd6f:"}}