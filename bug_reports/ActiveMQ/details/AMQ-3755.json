{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12544927","self":"https://issues.apache.org/jira/rest/api/2/issue/12544927","key":"AMQ-3755","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/5","id":"5","description":"All attempts at reproducing this issue failed, or not enough information was available to reproduce the issue. Reading the code produces no clues as to why this behavior would occur. If more information appears later, please reopen the issue.","name":"Cannot Reproduce"},"customfield_12312322":null,"customfield_12310220":"2012-03-02T13:54:42.791+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Mar 29 16:03:11 UTC 2012","customfield_12310420":"230113","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_2345753865_*|*_6_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2012-03-29T16:03:11.814+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-3755/watchers","watchCount":0,"isWatching":false},"created":"2012-03-02T12:27:18.214+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315626","id":"12315626","description":"","name":"5.5.0","archived":false,"released":true,"releaseDate":"2011-04-01"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2012-03-29T16:03:12.074+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"We have a server processing requests with an internal broker, connected with a vm transport. At a certain load and a high number of clients (approx. 350 clients) we see our server congested towards the internal VM broker. By looking at the stacktraces, it seems the incoming reading thread is waiting for a lock obtained by one of several other threads. This resulted in a short period (around 20-30 seconds) of very sluggish response times towards our clients. Response times of _any_ request through ActiveMQ go from a normal <50ms response time towards 2 seconds.\n\nBelow is an extract of a stackdump while this happened. The first stacktrace is the thread trying to read incoming messages with a receiveNoWait, but it is blocked by the first thread, which the second thread owns. The third and fourth are two other processes, all waiting for the same mutex. These four processes are - from our server's perspective - not related to each other:\n{noformat}\n\"RoundRobinReceiver\" prio=10 tid=0x00007f1030483800 nid=0x2a59 waiting for monitor entry [0x00007f1075f5b000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:39)\n\t- waiting to lock <0x00000006bb6028b0> (a java.lang.Object)\n\tat org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n\tat org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1265)\n\tat org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1259)\n\tat org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1863)\n\tat org.apache.activemq.ActiveMQSession.sendAck(ActiveMQSession.java:2029)\n\tat org.apache.activemq.ActiveMQSession.sendAck(ActiveMQSession.java:2024)\n\tat org.apache.activemq.ActiveMQMessageConsumer.afterMessageIsConsumed(ActiveMQMessageConsumer.java:871)\n\t- locked <0x0000000715bda898> (a java.util.LinkedList)\n\tat org.apache.activemq.ActiveMQMessageConsumer.receiveNoWait(ActiveMQMessageConsumer.java:617)\n\tat com.foo.bar.impl.server.services.jms.JMSRoundRobinListener.readFromConsumer(JMSRoundRobinListener.java:200)\n\tat com.foo.bar.impl.server.services.jms.JMSRoundRobinListener.roundRobinOverQueueConsumers(JMSRoundRobinListener.java:173)\n\tat com.foo.bar.impl.server.services.jms.JMSRoundRobinListener.receiveMessagesUntilInterrupt(JMSRoundRobinListener.java:109)\n\tat com.foo.bar.impl.server.services.jms.JMSRoundRobinListener.access$200(JMSRoundRobinListener.java:22)\n\tat com.foo.bar.impl.server.services.jms.JMSRoundRobinListener$RoundRobinReceiver.run(JMSRoundRobinListener.java:248)\n\tat java.lang.Thread.run(Thread.java:722)\n\n\"ResultPublisher1\" prio=10 tid=0x00007f0f20003000 nid=0x2b31 waiting on condition [0x00007f1060d59000]\n   java.lang.Thread.State: WAITING (parking)\n\tat sun.misc.Unsafe.park(Native Method)\n\t- parking to wait for  <0x00000006bb600410> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n\tat java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)\n\tat java.util.concurrent.LinkedBlockingQueue.put(LinkedBlockingQueue.java:349)\n\tat org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:94)\n\tat org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)\n\t- locked <0x00000006bb6028b0> (a java.lang.Object)\n\tat org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n\tat org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1265)\n\tat org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1259)\n\tat org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1744)\n\t- locked <0x00000006bc4bd448> (a java.lang.Object)\n\tat org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)\n\tat org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)\n\tat com.foo.bar.impl.server.services.jms.MappingResultPublisher.publishResponse(MappingResultPublisher.java:66)\n\tat com.foo.bar.impl.server.services.jms.QueuedMappingResultPublisher.executeJob(QueuedMappingResultPublisher.java:44)\n\tat com.foo.bar.impl.server.services.mapper.AbstractQueuedMappingJobExecutor.processJob(AbstractQueuedMappingJobExecutor.java:120)\n\tat com.foo.bar.impl.server.services.mapper.AbstractQueuedMappingJobExecutor.access$100(AbstractQueuedMappingJobExecutor.java:23)\n\tat com.foo.bar.impl.server.services.mapper.AbstractQueuedMappingJobExecutor$1.run(AbstractQueuedMappingJobExecutor.java:105)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n\tat java.lang.Thread.run(Thread.java:722)\n\n\"RemoteResolveRequestService-ReplierThread-1\" prio=10 tid=0x00007f1030485000 nid=0x2a5a waiting for monitor entry [0x00007f1075e5a000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:39)\n\t- waiting to lock <0x00000006bb6028b0> (a java.lang.Object)\n\tat org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n\tat org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1265)\n\tat org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1259)\n\tat org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1744)\n\t- locked <0x00000006baf131f8> (a java.lang.Object)\n\tat org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)\n\tat org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:300)\n\tat com.foo.bar.remoteservices.server.RpcReplierTask.sendReply(RpcReplierTask.java:129)\n\tat com.foo.bar.remoteservices.server.RpcReplierTask.run(RpcReplierTask.java:103)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:166)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n\tat java.lang.Thread.run(Thread.java:722)\n\n\"PersistEntityMessagePublisherThread\" daemon prio=10 tid=0x00007f1030b70800 nid=0x2a4b waiting for monitor entry [0x00007f1076c68000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n\tat org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:39)\n\t- waiting to lock <0x00000006bb6028b0> (a java.lang.Object)\n\tat org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n\tat org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1265)\n\tat org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1259)\n\tat org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1744)\n\t- locked <0x00000006bc542e90> (a java.lang.Object)\n\tat org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)\n\tat org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)\n\tat com.foo.bar.impl.server.services.PersistEntityMessageBackgroundPublisher.sendMessage(PersistEntityMessageBackgroundPublisher.java:140)\n\tat com.foo.bar.impl.server.services.PersistEntityMessageBackgroundPublisher.sendMessage(PersistEntityMessageBackgroundPublisher.java:132)\n\tat com.foo.bar.impl.server.services.PersistEntityMessageBackgroundPublisher.forwardMessagesToTopic(PersistEntityMessageBackgroundPublisher.java:101)\n\tat com.foo.bar.impl.server.services.PersistEntityMessageBackgroundPublisher.access$000(PersistEntityMessageBackgroundPublisher.java:22)\n\tat com.foo.bar.impl.server.services.PersistEntityMessageBackgroundPublisher$1.run(PersistEntityMessageBackgroundPublisher.java:49)\n\tat java.lang.Thread.run(Thread.java:722)\n{noformat}\nMy question is: why is the receiving of messages blocked by the other threads and why do they share a single mutex? Is there anything I can do to alleviate this problem?","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"81685","customfield_12312823":null,"summary":"receiveNoWait blocked on same mutex as sending threads","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tagliola","name":"tagliola","key":"tagliola","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Claudio Tagliola","active":true,"timeZone":"Europe/Amsterdam"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tagliola","name":"tagliola","key":"tagliola","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Claudio Tagliola","active":true,"timeZone":"Europe/Amsterdam"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12544927/comment/13220881","id":"13220881","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tagliola","name":"tagliola","key":"tagliola","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Claudio Tagliola","active":true,"timeZone":"Europe/Amsterdam"},"body":"Some more information: we run our broker mostly with default settings, except:\n * ProducerFlowControl set to disabled for all queues and topics;\n * AsyncSend set to true;\n * CopyMessageOnSend set to false.\n\nClients are connecting through a failover(tcp) connection. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tagliola","name":"tagliola","key":"tagliola","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Claudio Tagliola","active":true,"timeZone":"Europe/Amsterdam"},"created":"2012-03-02T12:43:10.266+0000","updated":"2012-03-02T12:43:10.266+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12544927/comment/13220930","id":"13220930","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"Do you have a test case that reproduces the problem?  Have you tried this against a 5.6-SNAPSHOT build to see if its already been resolved?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2012-03-02T13:54:42.791+0000","updated":"2012-03-02T13:54:42.791+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12544927/comment/13221029","id":"13221029","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tagliola","name":"tagliola","key":"tagliola","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Claudio Tagliola","active":true,"timeZone":"Europe/Amsterdam"},"body":"We do not have a reproducible test case, as we do not know what triggers this. We see this in our busiest production environment only. Obviously, we cannot test with a snapshot version in that deployment. For now, these stack traces are the only thing we have.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tagliola","name":"tagliola","key":"tagliola","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Claudio Tagliola","active":true,"timeZone":"Europe/Amsterdam"},"created":"2012-03-02T16:27:49.793+0000","updated":"2012-03-02T16:27:49.793+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12544927/comment/13222687","id":"13222687","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"From the stack trace it appears as though you VMTransport is configured for sync mode and it has reached its limit on the pending buffer (LinkedBlockingQueue) and that stalls the send operation until the broker has time to process the backed up messages.  You can provide you config for the client uris to lets us see what you have setup.  Since your producers and consumer appear to be sharing the same Connection instance they will block on the MutexTransport which is what you see in the stack trace.  As far as I can tell things are working as designed.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2012-03-05T22:30:04.600+0000","updated":"2012-03-05T22:30:04.600+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12544927/comment/13223149","id":"13223149","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tagliola","name":"tagliola","key":"tagliola","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Claudio Tagliola","active":true,"timeZone":"Europe/Amsterdam"},"body":"We had a hunch we had to move to a multiple VMTransport implementation, however, I have some follow-up questions:\n\nFrom the documentation it is not clear what the limitations of the VMTransport exactly are, it talks about a JMS Client, but that is a bit of a vague notion inside the same JVM. It seems, one of the effects of this limitation is that the receiveNoWait call will start blocking, which is not obvious from the documentation.\n\nFurthermore, if we move to multiple VMTransports, will the backed up broker be able to continue without blocking or will the bottleneck then surface inside the broker?\n\nIt will take some time to get this modified and get it deployed in our production environment.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tagliola","name":"tagliola","key":"tagliola","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Claudio Tagliola","active":true,"timeZone":"Europe/Amsterdam"},"created":"2012-03-06T10:34:36.362+0000","updated":"2012-03-06T14:56:58.936+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12544927/comment/13223345","id":"13223345","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"VMTransport doesn't cause the locking issue, that exists anytime that you use a single Connection for both send and receive operations.  As far as your other issues it depends somewhat on your configurations which you haven't shared so I can't really speak to that.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2012-03-06T15:51:54.870+0000","updated":"2012-03-06T15:51:54.870+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12544927/comment/13241338","id":"13241338","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"Not able to reproduce this locally and from the stack trace it doesn't appear as though its an actually issue.  Setting the asyncQueueDepth option to a higher value should allow the client's to continue sending.  Also should try a later 5.6-SHAPSHOT as there has been a few fixes in VMTransport.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2012-03-29T16:03:11.918+0000","updated":"2012-03-29T16:03:11.918+0000"}],"maxResults":7,"total":7,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-3755/votes","votes":2,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0ebvb:"}}