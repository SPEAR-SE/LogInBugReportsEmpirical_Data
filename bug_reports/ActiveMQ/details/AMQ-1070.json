{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12481873","self":"https://issues.apache.org/jira/rest/api/2/issue/12481873","key":"AMQ-1070","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315617","id":"12315617","description":"","name":"5.0.0","archived":false,"released":true,"releaseDate":"2007-12-17"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2006-11-29T07:54:52.000+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Nov 29 07:54:52 UTC 2006","customfield_12310420":"84420","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_377026000_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2006-11-29T07:54:52.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-1070/watchers","watchCount":0,"isWatching":false},"created":"2006-11-24T23:11:06.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315612","id":"12315612","description":"","name":"4.0.2","archived":false,"released":true,"releaseDate":"2006-07-25"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rajdavies","name":"rajdavies","key":"rajdavies","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rajdavies&avatarId=13942","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rajdavies&avatarId=13942","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rajdavies&avatarId=13942","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rajdavies&avatarId=13942"},"displayName":"Rob Davies","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2006-11-29T07:54:52.000+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"It is possible to have a deadlock as follows:\n\n\"ActiveMQ Transport: tcp:///127.0.0.1:53335\":\n        at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:66)\n        - waiting to lock <0x90786240> (a org.apache.activemq.broker.region.QueueSubscription)\n        at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:192)\n        - locked <0x908fa480> (a java.util.LinkedList)\n        at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:93)\n        - locked <0x903b9b40> (a java.lang.Object)\n        at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:221)\n        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:130)\n        at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:142)\n        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:130)\n        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:143)\n        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:182)\n        - locked <0x908e6cb8> (a java.lang.Object)\n        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:297)\n        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:74)\n        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:78)\n        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:74)\n        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:87)\n        at org.apache.activemq.broker.AbstractConnection.processAddConsumer(AbstractConnection.java:538)\n        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:296)\n        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:237)\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:63)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)\n        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:124)\n        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)\n        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)\n        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:138)\n        at java.lang.Thread.run(Thread.java:595)\n\"ActiveMQ Transport: tcp:///127.0.0.1:53315\":\n        at org.apache.activemq.broker.region.Queue.dropEvent(Queue.java:321)\n        - waiting to lock <0x908fa480> (a java.util.LinkedList)\n        at org.apache.activemq.broker.region.Queue.dropEvent(Queue.java:315)\n        at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:54)\n        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:125)\n        - locked <0x90786240> (a org.apache.activemq.broker.region.QueueSubscription)\n        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:265)\n        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:366)\n        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:177)\n        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:66)\n        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:66)\n        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:79)\n        at org.apache.activemq.broker.AbstractConnection.processMessageAck(AbstractConnection.java:445)\n        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:179)\n        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:237)\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:63)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)\n        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:124)\n        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)\n        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)\n        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:138)\n        at java.lang.Thread.run(Thread.java:595)\n\n\nThe simple solution is in AbstractReagion.java:\n@@ -89,10 +89,12 @@\n             // Add all consumers that are interested in the destination.\n             for (Iterator iter = subscriptions.values().iterator(); iter.hasNext();) {\n                 Subscription sub = (Subscription) iter.next();\n+                synchronized (sub) {\n                 if( sub.matches(destination) ) {\n                     dest.addSubscription(context, sub);\n                 }\n             }\n+            }\n             return dest;\n         }\n     }\n@@ -104,11 +106,13 @@\n         if( timeout == 0 ) {\n             for(Iterator iter=subscriptions.values().iterator();iter.hasNext();){\n                 Subscription sub=(Subscription) iter.next();\n+                synchronized (sub) {\n                 if(sub.matches(destination)){\n                     throw new JMSException(\"Destination still has an active subscription: \"+destination);\n                 }\n             }\n         }\n+        }\n\n         if( timeout > 0 ) {\n             // TODO: implement a way to notify the subscribers that we want to take the down\n@@ -125,10 +129,12 @@\n                 // timeout<0 or we timed out, we now force any remaining subscriptions to un-subscribe.\n                 for(Iterator iter=subscriptions.values().iterator();iter.hasNext();){\n                     Subscription sub=(Subscription) iter.next();\n+                    synchronized (sub) {\n                     if(sub.matches(destination)){\n                         dest.removeSubscription(context, sub);\n                     }\n                 }\n+                }\n\n                 destinationMap.removeAll(destination);\n                 dest.dispose(context);\n@@ -173,7 +179,8 @@\n             // broker will not see a destination that exists in persistent store.  We may want to\n             // eagerly load all destinations into the broker but have an inactive state for the\n             // destination which has reduced memory usage.\n-            //\n+            synchronized (sub)\n+            {\n             if( persistenceAdapter!=null ) {\n                 Set inactiveDests = getInactiveDestinations();\n                 for (Iterator iter = inactiveDests.iterator(); iter.hasNext();) {\n@@ -183,6 +190,7 @@\n                     }\n                 }\n             }\n+            }\n\n             subscriptions.put(info.getConsumerId(), sub);\n\n@@ -193,16 +201,16 @@\n             // no mutex held. Remove is only essentially run once\n             // so everything after this point would be leaked.\n\n+            synchronized (sub) {\n             // Add the subscription to all the matching queues.\n             for (Iterator iter = destinationMap.get(info.getDestination()).iterator(); iter.hasNext();) {\n                 Destination dest = (Destination) iter.next();\n                 dest.addSubscription(context, sub);\n             }\n-\n             if( info.isBrowser() ) {\n                 ((QueueBrowserSubscription)sub).browseDone();\n             }\n-\n+            }\n             return sub;\n         }\n     }\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10042","value":"Patch Available","id":"10042"}],"customfield_12310921":null,"customfield_12310920":"254951","customfield_12312823":null,"summary":"Deadlock in Queue.java","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kaitchuc","name":"kaitchuc","key":"kaitchuc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tom Kaitchuck","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kaitchuc","name":"kaitchuc","key":"kaitchuc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tom Kaitchuck","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481873/comment/12938577","id":"12938577","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rajdavies","name":"rajdavies","key":"rajdavies","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rajdavies&avatarId=13942","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rajdavies&avatarId=13942","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rajdavies&avatarId=13942","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rajdavies&avatarId=13942"},"displayName":"Rob Davies","active":true,"timeZone":"Etc/UTC"},"body":"Locking behaviour has changed for 4.2 - can now longer reproduce this","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rajdavies","name":"rajdavies","key":"rajdavies","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rajdavies&avatarId=13942","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rajdavies&avatarId=13942","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rajdavies&avatarId=13942","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rajdavies&avatarId=13942"},"displayName":"Rob Davies","active":true,"timeZone":"Etc/UTC"},"created":"2006-11-29T07:54:52.000+0000","updated":"2006-11-29T07:54:52.000+0000"}],"maxResults":1,"total":1,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-1070/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i180x3:"}}