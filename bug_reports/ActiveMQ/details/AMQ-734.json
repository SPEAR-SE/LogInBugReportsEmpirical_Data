{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12481897","self":"https://issues.apache.org/jira/rest/api/2/issue/12481897","key":"AMQ-734","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315614","id":"12315614","description":"","name":"4.1.1","archived":false,"released":true,"releaseDate":"2007-06-08"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12315617","id":"12315617","description":"","name":"5.0.0","archived":false,"released":true,"releaseDate":"2007-12-17"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2006-06-04T21:47:37.000+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Mar 07 15:18:05 UTC 2007","customfield_12310420":"84344","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_1061424000_*|*_5_*:*_2_*:*_3265022000_*|*_4_*:*_1_*:*_19865230953","customfield_12312321":null,"resolutiondate":"2007-03-07T15:25:14.953+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-734/watchers","watchCount":4,"isWatching":false},"created":"2006-05-31T15:30:38.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315610","id":"12315610","name":"4.0","archived":false,"released":true}],"issuelinks":[{"id":"12334939","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12334939","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"inwardIssue":{"id":"12481725","key":"AMQ-738","self":"https://issues.apache.org/jira/rest/api/2/issue/12481725","fields":{"summary":"Broker does not recognize failed broker upon reconnect","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chirino","name":"chirino","key":"chirino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=chirino&avatarId=12659","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=chirino&avatarId=12659","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=chirino&avatarId=12659","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=chirino&avatarId=12659"},"displayName":"Hiram Chirino","active":true,"timeZone":"America/New_York"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2007-03-07T15:25:14.951+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313893","id":"12313893","name":"Connector"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"If I pull out RJ45 port from net card ,waiting a time ,then put  RJ45 port net card .Network is resume.Other computer always throw errors and net channel can't work.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12460627","id":"12460627","filename":"Amq734Test.java","created":"2006-11-22T15:36:17.000+0000","size":5929,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12460627/Amq734Test.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12460845","id":"12460845","filename":"ASF.LICENSE.NOT.GRANTED--Amq734Test.java","created":"2006-11-22T15:37:01.000+0000","size":5929,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12460845/ASF.LICENSE.NOT.GRANTED--Amq734Test.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12460654","id":"12460654","filename":"DemandForwardingBridgeSupport.java","created":"2006-11-22T15:37:01.000+0000","size":36294,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12460654/DemandForwardingBridgeSupport.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12460585","id":"12460585","filename":"DiscoveryNetworkConnector.java","created":"2006-11-22T15:37:01.000+0000","size":10678,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12460585/DiscoveryNetworkConnector.java"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"161485","customfield_12312823":null,"summary":"Network connections do not reconnect when using static: with failover=true","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=taoyonggang","name":"taoyonggang","key":"taoyonggang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"tao","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=taoyonggang","name":"taoyonggang","key":"taoyonggang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"tao","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"winxp java1.5.6","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12938060","id":"12938060","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=j_cooper","name":"j_cooper","key":"j_cooper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Janet Cooper","active":true,"timeZone":"Etc/UTC"},"body":"(using active-mq-snapshot-30-may / linux)\n\nSome comments:\n\nGiven a network of brokers in a demand forwarding environment: Broker A + Broker B in a _real_ network on different hosts (a lot of bugs are not reproducable in a localhost-environment)\n\nUseCase 1:\nStart Broker A\nStart Broker B\nDo a network-split (aka \"unplugging the cable\") [There is an exception attached that will be generated in such a case]\nCreate new message m1 on Broker A (that is stored for later delivery)\nReconnect network\nBrokers will reconnect with exception (see below)\n\nIt is actually possible to LOSE MESSAGES that way. I found out that under certain circumstances message m1 will not be delivered. Even restarting every broker does not help in such a case. \n\n\nEXCEPTION ON UPLUGGING:\nINFO Service:185 - Async error occurred: java.lang.IllegalStateException: Cannot lookup a connection that had not been registered: ID:develop-43781-1149388950450-3:0\njava.lang.IllegalStateException: Cannot lookup a connection that had not been registered: ID:develop-43781-1149388950450-3:0\n\tat org.apache.activemq.broker.AbstractConnection.lookupConnectionState(AbstractConnection.java:241)\n\tat org.apache.activemq.broker.AbstractConnection.processRemoveConnection(AbstractConnection.java:519)\n\tat org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:59)\n\tat org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)\n\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)\n\tat org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)\n\tat org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)\n\tat org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)\n\tat org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)\n\tat org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n\tat org.apache.activemq.network.DemandForwardingBridgeSupport$2.transportInterupted(DemandForwardingBridgeSupport.java:138)\n\tat org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:98)\n\tat org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:98)\n\tat org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:223)\n\tat org.apache.activemq.transport.failover.FailoverTransport.access$300(FailoverTransport.java:53)\n\tat org.apache.activemq.transport.failover.FailoverTransport$1.onException(FailoverTransport.java:111)\n\tat org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:94)\n\tat org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:120)\n\tat org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:149)\n\tat org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:100)\n\tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:156)\n\tat java.lang.Thread.run(Thread.java:595)\n\nEXCEPTION ON RECONNECTING:\nINFO Service:185 - Async error occurred: javax.jms.InvalidClientIDException: Broker: develop - Client: NC_testbroker_inbounddevelop already connected\njavax.jms.InvalidClientIDException: Broker: develop - Client: NC_testbroker_inbounddevelop already connected\n\tat org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:176)\n\tat org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:69)\n\tat org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:69)\n\tat org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:69)\n\tat org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:82)\n\tat org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:507)\n\tat org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:118)\n\tat org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)\n\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)\n\tat org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)\n\tat org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)\n\tat org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)\n\tat org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)\n\tat org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n\tat org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:215)\n\tat org.apache.activemq.network.DemandForwardingBridgeSupport$3.run(DemandForwardingBridgeSupport.java:184)\n\n\nQuestion: Why is necessary that the localClientId is created in a fixed way?\n\n  From DemandForwardingBridgeSupport.java:\n    localClientId=\"NC_\"+remoteBrokerName+\"_inbound\"+name;\n\nHow about changing that to e.g.\n    localClientId=\"NC_\"+remoteBrokerName+\"_inbound\"+name + \"_\" + System.currentTimemillis();\n\nIf a broker crashes and is restarted it would have a new ClientId -> no exceptions on reconnect.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=j_cooper","name":"j_cooper","key":"j_cooper","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Janet Cooper","active":true,"timeZone":"Etc/UTC"},"created":"2006-06-04T21:47:37.000+0000","updated":"2006-06-04T21:47:37.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12937841","id":"12937841","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rajdavies","name":"rajdavies","key":"rajdavies","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rajdavies&avatarId=13942","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rajdavies&avatarId=13942","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rajdavies&avatarId=13942","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rajdavies&avatarId=13942"},"displayName":"Rob Davies","active":true,"timeZone":"Etc/UTC"},"body":"the reason for the fixed client_id is durable topic consumers. The network bridge amalgamates multiple durable subscribers on the same topic in to one durable subscriber - to avoid duplicates and improve performance. \n\nThere is a keep alive protocol used with the tcp connector that should detect the network outage - needs some more investigation to see why this doesn't appear to be working","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rajdavies","name":"rajdavies","key":"rajdavies","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rajdavies&avatarId=13942","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rajdavies&avatarId=13942","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rajdavies&avatarId=13942","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rajdavies&avatarId=13942"},"displayName":"Rob Davies","active":true,"timeZone":"Etc/UTC"},"created":"2006-06-09T15:31:00.000+0000","updated":"2006-06-09T15:31:00.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12938003","id":"12938003","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chirino","name":"chirino","key":"chirino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=chirino&avatarId=12659","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=chirino&avatarId=12659","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=chirino&avatarId=12659","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=chirino&avatarId=12659"},"displayName":"Hiram Chirino","active":true,"timeZone":"America/New_York"},"body":"The subsequent error seems related to the first \"Cannot lookup a connection that had not been registered\" error.  When a remote connection is 'interruted', the connection fails, the bridge destroys it's local connection to the local broker to avoid producing a slow consumer situation.\n\nIt seems that the wrong connection id was referred to when the remove command was sent localy.  This is now fix in both trunk and the 4.0 branch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chirino","name":"chirino","key":"chirino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=chirino&avatarId=12659","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=chirino&avatarId=12659","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=chirino&avatarId=12659","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=chirino&avatarId=12659"},"displayName":"Hiram Chirino","active":true,"timeZone":"America/New_York"},"created":"2006-06-12T22:21:02.000+0000","updated":"2006-06-12T22:21:02.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12937773","id":"12937773","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jgearhart","name":"jgearhart","key":"jgearhart","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arachnid","active":true,"timeZone":"Etc/UTC"},"body":"Hello,\n\nI can reproduce this issue in the 4.0.1 release.  The test is performed as in the original post.  I am producing messages to a queue, from a demandForwarding environment.  One possible difference is the producer is in a stateless session bean under JBoss (ActiveMQ RA version is 4.0.2).\n\nHere's the output from the broker..\n---------------------------------------------------------------------------------------------\nD:\\ActiveMQ\\bin>activemq\nACTIVEMQ_HOME: d:\\ActiveMq\nLoading message broker from: xbean:activemq.xml\nCreated MBeanServer with ID: 3dc0bb:10c8cef3623:-8000:fist:1\nINFO  JournalPersistenceAdapter      - Journal deleted:\nINFO  JDBCPersistenceAdapter         - Database driver recognized: [apache_derby_embedded_jdbc_driver]\nINFO  BrokerService                  - ActiveMQ 4.0.1 JMS Message Broker (fist) is starting\nINFO  BrokerService                  - For help or more information please see: http://incubator.apache.org/activemq/\nRMIConnectorServer started at: service:jmx:rmi://fist/jndi/rmi://localhost:16617/jmxrmi\nINFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi://fist/jndi/rmi://localhost:16617/jmxrmi\nINFO  JournalPersistenceAdapter      - Journal Recovery Started from: Active Journal: using 5 x 20.0 Megs at: D:\\ActiveMQ\\activemq-data\\journal\nINFO  JournalPersistenceAdapter      - Journal Recovered: 0 message(s) in transactions recovered.\nINFO  TransportServerThreadSupport   - Listening for connections at: tcp://fist:61616\nINFO  TransportConnector             - Connector default Started\nINFO  TransportServerThreadSupport   - Listening for connections at: tcp://fist:61613?wireFormat=stomp\nINFO  TransportConnector             - Connector stomp Started\nINFO  NetworkConnector               - Establishing network connection between from vm://fist?network=true to failover:tcp://204.62.234.33:61616\nINFO  VMTransportFactory             - binding to broker: fist\nINFO  TransportConnector             - Connector vm://fist Started\nINFO  DemandForwardingBridge         - Starting a network connection between vm://fist#0 and unconnected has been established.\nINFO  NetworkConnector               - Network Connector Burnt Started\nINFO  BrokerService                  - ActiveMQ JMS Message Broker (fist, ID:fist-2678-1153415721687-1:0) started\nINFO  DemandForwardingBridge         - Network connection between vm://fist#0 and tcp://204.62.234.33:61616(burnt) has been established.\nWARN  DemandForwardingBridge         - Outbound transport to burnt interrupted ...\nINFO  DemandForwardingBridge         - Outbound transport to burnt resumed\nINFO  DemandForwardingBridge         - Network connection between vm://fist#0 and tcp://204.62.234.33:61616(burnt) has been established.\nINFO  Service                        - Async error occurred: java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been regis\ntered: ID:fist-2678-1153415721687-3:1\njava.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:fist-2678-1153415721687-3:1\n        at org.apache.activemq.broker.AbstractConnection.lookupConnectionState(AbstractConnection.java:223)\n        at org.apache.activemq.broker.AbstractConnection.processMessageAck(AbstractConnection.java:356)\n        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:178)\n        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)\n        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)\n        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)\n        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n        at org.apache.activemq.network.DemandForwardingBridgeSupport$5.onCompletion(DemandForwardingBridgeSupport.java:490)\n        at org.apache.activemq.transport.FutureResponse.set(FutureResponse.java:59)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:89)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)\n        at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:105)\n        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)\n        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)\n        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)\n        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:143)\n        at java.lang.Thread.run(Thread.java:534)\nWARN  DemandForwardingBridge         - Unexpected local command: ConnectionError {commandId = 7, responseRequired = false, connectionId = null, exception = java\n.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:fist-2678-1153415721687-3:1}\nINFO  Service                        - Async error occurred: java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been regis\ntered: ID:fist-2678-1153415721687-3:1\njava.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:fist-2678-1153415721687-3:1\n        at org.apache.activemq.broker.AbstractConnection.lookupConnectionState(AbstractConnection.java:223)\n        at org.apache.activemq.broker.AbstractConnection.processMessageAck(AbstractConnection.java:356)\n        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:178)\n        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)\n        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)\n        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)\n        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n        at org.apache.activemq.network.DemandForwardingBridgeSupport$5.onCompletion(DemandForwardingBridgeSupport.java:490)\n        at org.apache.activemq.transport.FutureResponse.set(FutureResponse.java:59)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:89)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)\n        at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:105)\n        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)\n        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)\n        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)\n        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:143)\n        at java.lang.Thread.run(Thread.java:534)\nWARN  DemandForwardingBridge         - Unexpected local command: ConnectionError {commandId = 8, responseRequired = false, connectionId = null, exception = java\n.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:fist-2678-1153415721687-3:1}\nINFO  Service                        - Async error occurred: java.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been regis\ntered: ID:fist-2678-1153415721687-3:1\njava.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:fist-2678-1153415721687-3:1\n        at org.apache.activemq.broker.AbstractConnection.lookupConnectionState(AbstractConnection.java:223)\n        at org.apache.activemq.broker.AbstractConnection.processMessageAck(AbstractConnection.java:356)\n        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:178)\n        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:201)\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:62)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)\n        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)\n        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)\n        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n        at org.apache.activemq.network.DemandForwardingBridgeSupport$5.onCompletion(DemandForwardingBridgeSupport.java:490)\n        at org.apache.activemq.transport.FutureResponse.set(FutureResponse.java:59)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:89)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)\n        at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:105)\n        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:114)\n        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)\n        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:87)\n        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:143)\n        at java.lang.Thread.run(Thread.java:534)\nWARN  DemandForwardingBridge         - Unexpected local command: ConnectionError {commandId = 9, responseRequired = false, connectionId = null, exception = java\n.lang.IllegalStateException: Cannot lookup a consumer from a connection that had not been registered: ID:fist-2678-1153415721687-3:1}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jgearhart","name":"jgearhart","key":"jgearhart","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arachnid","active":true,"timeZone":"Etc/UTC"},"created":"2006-07-20T17:18:04.000+0000","updated":"2006-07-20T17:18:04.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12938620","id":"12938620","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=woode","name":"woode","key":"woode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Wood","active":true,"timeZone":"Etc/UTC"},"body":"We can reproduce this issue using the current build of 4.0.2.  We are running a distributed queue between two embedded brokers over an unreliable network (wireless).  We had been using 4.0.1, but the brokers did not reestablish the bridge when it was stopped due to inactivity timeout.  We tried 4.0.2 and it worked great for a while, but eventually one of the reconnect attempts failed.  On the receiver side broker (called CTSServer) we see in the logs wire format negotiation taking place, but on the send side broker (called CTSClient) we get the following in the log:\n \n     [java] 12:42:12,236 DEBUG DurableConduitBridge:69 - Forwarding messages for durable destination: queue://TEST.FOO\n     [java] 12:42:12,237 DEBUG DemandForwardingBridge:289 -  stopping CTSClient bridge to CTSServer is disposed already ? false\n     [java] 12:42:12,240 DEBUG DemandForwardingBridge:308 - CTSClient bridge to CTSServer stopped\n     [java] 12:42:12,241 DEBUG DemandForwardingBridge:289 -  stopping CTSClient bridge to CTSServer is disposed already ? true\n     [java] 12:42:12,242 DEBUG DemandForwardingBridge:308 - CTSClient bridge to CTSServer stopped\n     [java] 12:42:12,244  INFO NetworkConnector:96 - Establishing network connection between from vm://CTSClient?network=true to tcp://10.134.0.1:61616\n     [java] 12:42:15,986 DEBUG WireFormatNegotiator:65 - Sending: WireFormatInfo { version=1, properties={TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}\n     [java] 12:42:15,987 DEBUG TcpTransport:133 - TCP consumer thread starting\n     [java] 12:42:18,957 DEBUG WireFormatNegotiator:95 - Received WireFormat: WireFormatInfo { version=1, properties={StackTraceEnabled=true, TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}\n     [java] 12:42:18,957 DEBUG WireFormatNegotiator:102 - tcp:///10.134.0.1:61616 before negotiation: OpenWireFormat{version=1, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}\n     [java] 12:42:18,958 DEBUG WireFormatNegotiator:113 - tcp:///10.134.0.1:61616 after negotiation: OpenWireFormat{version=1, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}\n     [java] 12:42:21,838 DEBUG Service:221 - Async error occurred: javax.jms.InvalidClientIDException: Broker: CTSClient - Client: NC_CTSServer_inboundCTSClient already connected\n     [java] javax.jms.InvalidClientIDException: Broker: CTSClient - Client: NC_CTSServer_inboundCTSClient already connected\n     [java]     at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:180)\n     [java]     at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:70)\n     [java]     at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:70)\n     [java]     at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:70)\n     [java]     at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:83)\n     [java]     at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:633)\n     [java]     at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:120)\n     [java]     at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:237)\n     [java]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:61)\n     [java]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)\n     [java]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)\n     [java]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:77)\n     [java]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:45)\n     [java]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)\n     [java]     at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:225)\n     [java]     at org.apache.activemq.network.DemandForwardingBridgeSupport$3.run(DemandForwardingBridgeSupport.java:191)\n     [java] 12:42:21,840  INFO DemandForwardingBridge:230 - Network connection between vm://CTSClient#728 and tcp:///10.134.0.1:61616(CTSServer) has been established.\n     [java] 12:42:21,851  INFO DemandForwardingBridge:432 - Network connection between vm://CTSClient#728 and tcp:///10.134.0.1:61616 shutdown due to a local error: javax.jms.InvalidClientIDException: Broker: CTSClient - Client: NC_CTSServer_inboundCTSClient already connected\n     [java] 12:42:21,854 DEBUG DemandForwardingBridge:433 - The local Exception was:javax.jms.InvalidClientIDException: Broker: CTSClient - Client: NC_CTSServer_inboundCTSClient already connected\n     [java] javax.jms.InvalidClientIDException: Broker: CTSClient - Client: NC_CTSServer_inboundCTSClient already connected\n     [java]     at org.apache.activemq.broker.region.RegionBroker.addConnection(RegionBroker.java:180)\n     [java]     at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:70)\n     [java]     at org.apache.activemq.advisory.AdvisoryBroker.addConnection(AdvisoryBroker.java:70)\n     [java]     at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:70)\n     [java]     at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:83)\n     [java]     at org.apache.activemq.broker.AbstractConnection.processAddConnection(AbstractConnection.java:633)\n     [java]     at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:120)\n     [java]     at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:237)\n     [java]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:61)\n     [java]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)\n     [java]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)\n     [java]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:77)\n     [java]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:45)\n     [java]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)\n     [java]     at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:225)\n     [java]     at org.apache.activemq.network.DemandForwardingBridgeSupport$3.run(DemandForwardingBridgeSupport.java:191)\n\nThis sequence just repeats continuously until the broker is stopped.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=woode","name":"woode","key":"woode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Wood","active":true,"timeZone":"Etc/UTC"},"created":"2006-10-26T17:20:17.000+0000","updated":"2006-10-26T17:20:17.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12938493","id":"12938493","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=woode","name":"woode","key":"woode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Wood","active":true,"timeZone":"Etc/UTC"},"body":"To add some further clarification.  We verified (via logs) that the receive side broker had timed out the send side broker.  Then, when the send side broker tries to reconnect, the receive side broker says \"invalid client id\" apparently because it did not unregister the client when it timed out?  During this test, we had numerous timeouts and successful recoveries, and then suddenly it broke down.  Looking at the previous posts a little more closely, I am now wondering if this is a different issue?  Should I create a new issue?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=woode","name":"woode","key":"woode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Wood","active":true,"timeZone":"Etc/UTC"},"created":"2006-10-27T20:56:59.000+0000","updated":"2006-10-27T20:56:59.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12938563","id":"12938563","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jef%40tpssys.com","name":"jef@tpssys.com","key":"jef@tpssys.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jef Gearhart","active":true,"timeZone":"Etc/UTC"},"body":"\n   [[ Old comment, sent by email on Fri, 27 Oct 2006 16:09:56 -0500 ]]\n\nHi Eric,\n\nI guess that's up to you.  I believe the problem you and I both posted, \nhowever, are side effects of the overall problem.  The failover \ntransport 'reconnection' works, but restoration of the state of the \nprevious connection is broken in multiple places (e.g. subscriptions, \nclientIds).\n\nI've peeked into the code a little bit, and I think both side effects \ncould be addressed simultaneously, so my opinion is to just leave both \ndescriptions here. \n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jef%40tpssys.com","name":"jef@tpssys.com","key":"jef@tpssys.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jef Gearhart","active":true,"timeZone":"Etc/UTC"},"created":"2006-11-08T23:58:03.000+0000","updated":"2006-11-08T23:58:03.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12938655","id":"12938655","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chirino","name":"chirino","key":"chirino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=chirino&avatarId=12659","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=chirino&avatarId=12659","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=chirino&avatarId=12659","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=chirino&avatarId=12659"},"displayName":"Hiram Chirino","active":true,"timeZone":"America/New_York"},"body":"I've got a feeling that this was related to the timing issues addressed in issue:\nhttps://issues.apache.org/activemq/browse/AMQ-1044\nwhich is now fixed.\n\nCould one you guys retest against a source build from the 4.1 branch and let me know if it resolves this issue?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chirino","name":"chirino","key":"chirino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=chirino&avatarId=12659","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=chirino&avatarId=12659","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=chirino&avatarId=12659","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=chirino&avatarId=12659"},"displayName":"Hiram Chirino","active":true,"timeZone":"America/New_York"},"created":"2006-11-14T17:21:57.000+0000","updated":"2006-11-14T17:21:57.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12938632","id":"12938632","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=woode","name":"woode","key":"woode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Wood","active":true,"timeZone":"Etc/UTC"},"body":"Hiram,\n\nThe issue was intermittent, so the best we can do is run it for long\nperiods of time.  So far we have run with 4.1 for over ten hours total,\nfailed the network connection about 20 times, including both active and\nnatural failures, and it has recovered every time and we had 0 message\nloss.  With 4.0.2 we were successful in reproducing the error nearly\nevery time we caused a failure.  So it seems that the problem is\nresolved, but we still want to do more testing.  We are noticing a large\nnumber of inactivity timeouts.  Our network is fairly low bandwidth/high\nlatency, so we were wondering if there is a way, or one could be added,\nto adjust the inactivity timeout value.  We think we could improve our\nthroughput if we didn't timeout so often.  If you'd like, I'll open a\nseparate JIRA case for this.\n\nRegards,\n\nEric\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=woode","name":"woode","key":"woode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Wood","active":true,"timeZone":"Etc/UTC"},"created":"2006-11-20T18:21:12.000+0000","updated":"2006-11-20T18:21:12.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12938516","id":"12938516","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chirino","name":"chirino","key":"chirino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=chirino&avatarId=12659","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=chirino&avatarId=12659","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=chirino&avatarId=12659","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=chirino&avatarId=12659"},"displayName":"Hiram Chirino","active":true,"timeZone":"America/New_York"},"body":"No separate jira need.  See: http://activemq.com/site/configuring-wire-formats.html","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chirino","name":"chirino","key":"chirino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=chirino&avatarId=12659","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=chirino&avatarId=12659","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=chirino&avatarId=12659","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=chirino&avatarId=12659"},"displayName":"Hiram Chirino","active":true,"timeZone":"America/New_York"},"created":"2006-11-20T18:42:58.000+0000","updated":"2006-11-20T18:42:58.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12938529","id":"12938529","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chrish","name":"chrish","key":"chrish","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Hofstaedter","active":true,"timeZone":"Etc/UTC"},"body":"I've got what I think is a fix for AMQ-734.  However, the fix is possibly heavy-handed in its implementation, so I'd like for someone to review it and provide comments regarding any potential unintended side effects.\n\nI've attached to the issue in JIRA a junit case that is able to reproduce the issue 100% of the time as well as the necessary updates to DiscoveryNetworkConnector and DemandForwardingBridgeSupport.\n\nBasically, the classes were stopping the local broker and bridge whenever any exception was encountered on the transport.  However, some of the exceptions are \"ok\" and should not result in a stop.  These include InvalidClientIDException, BrokerStoppedException, InvalidStateException, and SocketException.  With the fix, for these specific exceptions, the broker/bridge are not stopped and fireServiceFailed is never called.  For all other exceptions, they still are called.\n\nIn addition, the TransportListener.transportResumed implementation in DemandForwardingBridgeSupport never started the local/remote broker and never called triggerRemoteStartBridge.  With this fix, they now do.\n\nI've run the whole suite of tests and all of the tests that passed prior to my modifications continue to pass.  In addition, the test case attached to the JIRA fails without the fixes and passes with the fixes 100% of the time.\n\nComments?  \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chrish","name":"chrish","key":"chrish","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Hofstaedter","active":true,"timeZone":"Etc/UTC"},"created":"2006-11-22T15:38:39.000+0000","updated":"2006-11-22T15:38:39.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12938696","id":"12938696","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=woode","name":"woode","key":"woode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Wood","active":true,"timeZone":"Etc/UTC"},"body":"We ran extensively this week with our encryption hardware because we wanted to confirm that didn't cause an issue.  So far I would say we have run for about 25 hours total, had well over 30 network failures and it has recovered every time.  At this point we believe that our issue is fixed by 4.1.  Thanks for the quick turnaround.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=woode","name":"woode","key":"woode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Wood","active":true,"timeZone":"Etc/UTC"},"created":"2006-11-22T15:51:16.000+0000","updated":"2006-11-22T15:51:16.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12938708","id":"12938708","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chrish","name":"chrish","key":"chrish","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Hofstaedter","active":true,"timeZone":"Etc/UTC"},"body":"Sorry - I forgot to mention that my previous comment applied strictly to 4.0.2 - I did not test against 4.1\n\nNonetheless, if anyone has any comments regarding the proposed fix, I'd be very interested as I'd prefer to use 4.0.2 for a production deployment until 4.1 is released.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chrish","name":"chrish","key":"chrish","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Chris Hofstaedter","active":true,"timeZone":"Etc/UTC"},"created":"2006-11-22T16:38:10.000+0000","updated":"2006-11-22T16:38:10.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481897/comment/12938811","id":"12938811","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chirino","name":"chirino","key":"chirino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=chirino&avatarId=12659","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=chirino&avatarId=12659","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=chirino&avatarId=12659","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=chirino&avatarId=12659"},"displayName":"Hiram Chirino","active":true,"timeZone":"America/New_York"},"body":"the functionality of the failover option is now built into the \"static:\" discovery agent.  The failover option will no longer be supported.\nIn the next version of ActiveMQ, the failover property will be removed.  Change commited in version 515602.\n\nI ran your test case without the failover=true option and it passed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=chirino","name":"chirino","key":"chirino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=chirino&avatarId=12659","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=chirino&avatarId=12659","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=chirino&avatarId=12659","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=chirino&avatarId=12659"},"displayName":"Hiram Chirino","active":true,"timeZone":"America/New_York"},"created":"2007-03-07T15:18:05.879+0000","updated":"2007-03-07T15:18:05.879+0000"}],"maxResults":14,"total":14,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-734/votes","votes":6,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0s01z:"}}