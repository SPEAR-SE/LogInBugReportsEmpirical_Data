{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12483618","self":"https://issues.apache.org/jira/rest/api/2/issue/12483618","key":"AMQ-2286","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12316331","id":"12316331","description":"Next unplanned v5 maintenance release","name":"5.x","archived":false,"released":false}],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2009-06-10T16:18:54.307+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Jul 22 15:57:22 UTC 2009","customfield_12310420":"43781","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-2286/watchers","watchCount":0,"isWatching":false},"created":"2009-06-10T14:52:11.371+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315619","id":"12315619","description":"","name":"5.2.0","archived":false,"released":true,"releaseDate":"2008-11-20"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-04-01T11:21:39.369+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"I have an issue which greatly reduces the quality of service of a network of activemq brokers.\n\nHere is what I have:\n1. 4 brokers( broker1, broker2, broker3,  broker4) in a network by multicast discovery\n\n2. i have 2 consumers of QueueA on broker1, 2 consumers of QueueA on broker2, and consumer queuePrefetch=1, networkConnector prefetchSize=1. Queue is using RoundRobinDispatchPolicy\n\n3. I publish to QueueA on broker3 with 100 msgs, 2 consumers on broker1 are fast and they process fine but 2 consumers on broker2 are stuck. However, with this config, msgs are still 50 goes to broker1, 50 goes to broker2, and when consumers on broker2 get stuck, those 50 msgs are stuck on broker2. It seems the prefetchSize=1 on networkConnector have no effect at all.\n\nwhat I expect in this case will be that 98 msgs shall go to broker1, and only 2 msgs stuck on broker2's consumers. I cannot lose a single msg so ConstantPendingMessageLimit will not help.\n\nPlease help. Thanks\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"59789","customfield_12312823":null,"summary":"NetworkConnector PrefetchSize","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yinghe0101","name":"yinghe0101","key":"yinghe0101","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ying","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yinghe0101","name":"yinghe0101","key":"yinghe0101","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ying","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Sun solaris 10","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483618/comment/12941442","id":"12941442","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"in this scenario the broker(2) needs to go slow, not just the consumers.\n\nI wonder if you enable straight through processing, asyncDispatch=false and optimizeDispatch=true for broker2, will the dispatch block the network consumer.\nAn alternative solution may be to restrict the memory available to broker2 and have it use producer flow control such that it can only have a small number of messages outstanding. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2009-06-10T16:18:54.307+0000","updated":"2009-06-10T16:18:54.307+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483618/comment/12941441","id":"12941441","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yinghe0101","name":"yinghe0101","key":"yinghe0101","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ying","active":true,"timeZone":"Etc/UTC"},"body":"hi, i tried asyncDispatch=false and optimizeDispatch=true and it did not help.\n\nthe real issue we face is when we setup 4 brokers we don't know which broker will be slower. \n\nThe reason the consumer on broker2 got stuck might be because the resource it needs to access is not accessible at the moment. This is a decoupled environment. Applications only know: talk to a broker and get its task. All of this is not predictable beforehand. That is why we think PrefetchSize on a networkConnector shall come to rescue but it does not have any effect at all so far. \n\nWhen we found out broker2's consumers are stuck, it is already late because 5000 msg are already dispatched to the broker.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yinghe0101","name":"yinghe0101","key":"yinghe0101","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ying","active":true,"timeZone":"Etc/UTC"},"created":"2009-06-10T20:40:59.324+0000","updated":"2009-06-10T20:40:59.324+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483618/comment/12941467","id":"12941467","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"ok, I think you need to reduce the memory available to the queues on all brokers and disable producerFlowControl. The prefetch value is applied to network subscriptions but if the remote broker can accept a message it will take it. Even with straight through processing, not having a consumer available to consume is not a problem unless the queue is memory constrained to block a send if there is no space.\n\nSo to ensure that 5000 messages don't build up in a slow broker, constrain the memory allocated to a queue such that it will only accept 10 or twenty messages and disableFlowControll so that a send will block. When that queue is full, because the consumers are slow, this will eventually push back to the network consumer with its small prefetch.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2009-06-12T16:59:32.384+0000","updated":"2009-06-12T16:59:32.384+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483618/comment/12941771","id":"12941771","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"changing priority to major as I don't think this issue should block a 5.3 release. \n\nThe prefetch is in effect for a network consumer but the consumer dispatches immediately to a broker through a message producer that does not block unless the send blocks through a memory utilization limit.  Thus my previous comments. Constraining the queue's memory usage should block message producers for slow brokers.\n\nHave you had any success with memory usage or disk usage constraints that will cause a send to block pending space?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2009-07-22T15:57:22.597+0000","updated":"2009-07-22T15:57:22.597+0000"}],"maxResults":4,"total":4,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-2286/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0alpb:"}}