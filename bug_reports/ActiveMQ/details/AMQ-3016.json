{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12483820","self":"https://issues.apache.org/jira/rest/api/2/issue/12483820","key":"AMQ-3016","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12323282","id":"12323282","description":"Maintenance release with new AMQP support and smaller modules","name":"5.8.0","archived":false,"released":true,"releaseDate":"2013-02-11"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2010-11-05T08:25:53.310+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue Nov 06 21:50:27 UTC 2012","customfield_12310420":"74748","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_63337754537_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2012-11-06T21:50:27.323+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-3016/watchers","watchCount":2,"isWatching":false},"created":"2010-11-04T20:01:12.827+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315624","id":"12315624","description":"Maintenance release for 5.4.0","name":"5.4.1","archived":false,"released":true,"releaseDate":"2010-09-21"}],"issuelinks":[{"id":"12335036","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12335036","type":{"id":"12310050","name":"Regression","inward":"is broken by","outward":"breaks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310050"},"inwardIssue":{"id":"12483857","key":"AMQ-1855","self":"https://issues.apache.org/jira/rest/api/2/issue/12483857","fields":{"summary":"bridge reconnection stops because of race in SimpleDiscoveryAgent","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2012-11-06T21:50:27.361+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313893","id":"12313893","name":"Connector"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12313903","id":"12313903","name":"Transport"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"Symptom\n========\nI set up two Brokers and a network bridge from Broker A to Broker B over HTTP.  When the bridge is established, each Broker has a single transport connection (VM on broker A and HTTP on broker B) as recorded in RegionBroker.connections\n\nI noticed that when Broker A was stopped (normally), periodically the HTTP connection would remain in Broker B's RegionBroker.connections until the InactivityMonitor on the connection timed out.  If the InactivityMonitor was disbled, then the connection would remain indefinitely.  \n\nIf Broker A was restarted, the bridge would be restarted and a second connection would be recorded in Broker B's RegionBroker.connections.  Repeating restarts of Broker A would cause an accumulation of \"dead\" connections, which would eventually lead to an OOM.\n\nCause\n=====\nWhen Broker A is stopped, DemandForwardingBridgeSupport.stop() is called and sends a ShutdownInfo command to the local and remote transports.  When the transports receive the ShutdownInfo, they remove the connection from their associated RegionBroker.connections as part of  TransportConnection.processRemoveConnection(ConnectionId, long):\n\n    public synchronized Response processRemoveConnection(ConnectionId id, long lastDeliveredSequenceId)\n            throws InterruptedException {\n...\n            try {\n                broker.removeConnection(cs.getContext(), cs.getInfo(), null);\n            } catch (Throwable e) {\n                SERVICELOG.warn(\"Failed to remove connection \" + cs.getInfo(), e);\n            }\n\nIn the cases were Broker B would not clean up its connection, I traced the code and discovered that the ShutdownInfo message was not being sent because the remote transport (HttpClientTransport) had already had its \"stopped\" flag set to true as part of HttpClientTransport.oneway(Object command):\n\n    public void oneway(Object command) throws IOException {\n\n        if (isStopped()) {\n            throw new IOException(\"stopped.\");\n        }\n...\n\nDemandForwardingBridgeSupport's stop() method has the following code:\n\n    public void stop() throws Exception {\n...\n                    ASYNC_TASKS.execute(new Runnable() {\n                        public void run() {\n                            try {\n                                localBroker.oneway(new ShutdownInfo());\n                                sendShutdown.countDown();\n                                remoteBroker.oneway(new ShutdownInfo());\n                            } catch (Throwable e) {\n                                LOG.debug(\"Caught exception sending shutdown\", e);\n                            } finally {\n                                sendShutdown.countDown();\n                            }\n                        }\n                    });\n                    if (!sendShutdown.await(10, TimeUnit.SECONDS)) {\n                        LOG.info(\"Network Could not shutdown in a timely manner\");\n                    }\n                } finally {\n                    ServiceStopper ss = new ServiceStopper();\n                    ss.stop(remoteBroker);\n                    ss.stop(localBroker);\n                    // Release the started Latch since another thread could be\n                    // stuck waiting for it to start up.\n                    startedLatch.countDown();\n                    startedLatch.countDown();\n                    localStartedLatch.countDown();\n                    ss.throwFirstException();\n                }\n            }\n\nShutdownInfo is sent asynchronously to the local and remote transports by a slave thread:\n\n                                localBroker.oneway(new ShutdownInfo());\n                                sendShutdown.countDown();\n                                remoteBroker.oneway(new ShutdownInfo());\n\nThe sendShutdown  latch is used by the master thread to prevent running the finally clause until the ShutdownInfo has been sent:\n\n                    if (!sendShutdown.await(10, TimeUnit.SECONDS)) {\n                        LOG.info(\"Network Could not shutdown in a timely manner\");\n                    }\n                } finally {\n                    ServiceStopper ss = new ServiceStopper();\n                    ss.stop(remoteBroker);\n                    ss.stop(localBroker);\n...\n                }\n            }\n\nHowever, because the latch is countdown *before* remoteTransport.oneway(new ShutdownInfo()) there is a race condition and in most cases the main thread calls ss.stop(remoteBroker) before the slave thread has completed its call to remoteTransport.oneway(new ShutdownInfo()).  As a result, the remoteTransport appears already stopped and the ShutdownInfo is discarded.  This leaves the connection dangling on the remote broker until the InactivityMonitor closes it.\n\nSolution\n======\nThe sendShutdown latch should be countdown *after* remoteTransport.oneway(new ShutdownInfo()).\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12461830","id":"12461830","filename":"ConnectionLeakTest.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stirlingc","name":"stirlingc","key":"stirlingc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stirling Chow","active":true,"timeZone":"Etc/UTC"},"created":"2010-11-04T20:03:02.516+0000","size":5012,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12461830/ConnectionLeakTest.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12461840","id":"12461840","filename":"patch.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stirlingc","name":"stirlingc","key":"stirlingc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stirling Chow","active":true,"timeZone":"Etc/UTC"},"created":"2010-11-04T20:08:42.484+0000","size":796,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12461840/patch.txt"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10042","value":"Patch Available","id":"10042"}],"customfield_12310921":null,"customfield_12310920":"81505","customfield_12312823":null,"summary":"Race condition in DemandForwardingBridgeSupport can cause remote connection to be leaked.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stirlingc","name":"stirlingc","key":"stirlingc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stirling Chow","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stirlingc","name":"stirlingc","key":"stirlingc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stirling Chow","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483820/comment/12943175","id":"12943175","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stirlingc","name":"stirlingc","key":"stirlingc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stirling Chow","active":true,"timeZone":"Etc/UTC"},"body":"This unit test exhibits the problem being reported.  In this test, a \"validation\" run is made using TCP as the bridge transport --- the race condition does not cause a leak because the remote end of the TCP connection detects the closing of the socket and cleans up the connection.  The \"failed\" run is made using HTTP as the bridge transport.  On my system, the race condition always occurs and causes the unit test to fail.  With the patch applied, both tests always succeed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stirlingc","name":"stirlingc","key":"stirlingc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stirling Chow","active":true,"timeZone":"Etc/UTC"},"created":"2010-11-04T20:03:03.244+0000","updated":"2010-11-04T20:03:03.244+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483820/comment/12943172","id":"12943172","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stirlingc","name":"stirlingc","key":"stirlingc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stirling Chow","active":true,"timeZone":"Etc/UTC"},"body":"Patch to DemandForwardingBridgeSupport which removes the premature call to sendShutdown.countDown.  countDown is already called by the finally clause.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stirlingc","name":"stirlingc","key":"stirlingc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stirling Chow","active":true,"timeZone":"Etc/UTC"},"created":"2010-11-04T20:08:42.541+0000","updated":"2010-11-04T20:08:42.541+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483820/comment/12943174","id":"12943174","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stirlingc","name":"stirlingc","key":"stirlingc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stirling Chow","active":true,"timeZone":"Etc/UTC"},"body":"Checkin for r808890 added the extra call to sendShutdown.countDown()","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=stirlingc","name":"stirlingc","key":"stirlingc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stirling Chow","active":true,"timeZone":"Etc/UTC"},"created":"2010-11-04T20:13:44.759+0000","updated":"2010-11-04T20:13:44.759+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483820/comment/12943171","id":"12943171","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"Hi\n\nSince duplex connections are very different from non-duplex one, this patch must be carefully test in all conditions. \nDid you launch all ActiveMQ Maven tests and verify that no border effects are discovered ?\n\nRegards\nEric-AWL","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-11-05T08:25:53.310+0000","updated":"2010-11-05T08:26:33.791+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12483820/comment/13491857","id":"13491857","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"Noticed this also while doing some work in the bridging code.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2012-11-06T21:50:27.338+0000","updated":"2012-11-06T21:50:27.338+0000"}],"maxResults":5,"total":5,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-3016/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0earb:"}}