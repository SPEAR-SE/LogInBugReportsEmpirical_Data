{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12829527","self":"https://issues.apache.org/jira/rest/api/2/issue/12829527","key":"AMQ-5773","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2016-03-02T11:22:44.796+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Mar 02 11:22:44 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_27680225187_*|*_6_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2016-03-28T20:27:00.711+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-5773/watchers","watchCount":3,"isWatching":false},"created":"2015-05-13T11:29:55.591+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329382","id":"12329382","name":"5.11.1","archived":false,"released":true,"releaseDate":"2015-02-17"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-03-28T20:27:00.754+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12324803","id":"12324803","name":"JDBC"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"Hello. Recently I've faced with weird problem, actually I'm not sure if it's a bug or misconfiguration or something else. But since my broker has \"almost\" default configuration I think this is bug.\nBrief configuration description(full configuration xml file at the end of issue):\n- Persistent storage: MySQL Db\n- Message type: only persistent Text Messages \n- Subscribers: only durable topic subscribers\n\nSo, when I started broker I monitored its cpu/memory usage and here is what I noticed, memory chart below:(for servers monitoring I'm using New Relic):\n[Heap Memory Chart | http://s4.postimg.org/fjiwg1v0d/amq_memory_leak_chart.png]\nAs you can see usage of memory slowly but constantly growing.\nI decided to find out what exactly stored in activemq's heap, so I dumped heap and analyzed it with Eclipse MAT. Screenshots below:\n[Leak Analysis | http://s4.postimg.org/nqaw7ml31/amq_leak_suspect.png]\nAs we can see almost all of the memory occupied in JournalTopicMessageStore. Going deeper:\n[First heapdump | http://s4.postimg.org/p6r03iddp/amq_problem_suspect_00_00.png]\nWe can see *completions* list in TransactionContext, which has size of 38590 objects. This heap dump I made at 00:00.\nBelow is a heap dump that I made 4 hours later:\n[Second heapdump | http://s4.postimg.org/e8fqlbosd/amq_problem_suspect_04_00.png]\n\nThe picture is the same, but now this list contains 63770 objecs.\nAnalyzed code a little bit, I noticed that this list is never cleared and hence its size always growth. Runnables that are stored in this list have link to Message object and hence this message is never will be GC'ed, even after ActiveMQ puts it to db. Of course I don't know probably this is a regular behavior that objects from this list are never removed, but it's looks really strange that object that contains this list is never recreated for 10 hours.\n\nBelow I paste configuration of my broker:\n{code:title=\"broker configuration\"|collapse}\n<beans\n        xmlns=\"http://www.springframework.org/schema/beans\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd\">\n\n    <!-- Allows us to use system properties as variables in this configuration file -->\n    <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n        <property name=\"locations\">\n            <value>file:${activemq.conf}/credentials.properties</value>\n        </property>\n    </bean>\n\n    <!-- Allows accessing the server log -->\n    <bean id=\"logQuery\" class=\"io.fabric8.insight.log.log4j.Log4jLogQuery\"\n          lazy-init=\"false\" scope=\"singleton\"\n          init-method=\"start\" destroy-method=\"stop\">\n    </bean>\n\n    <!--\n        The <broker> element is used to configure the ActiveMQ broker.\n    -->\n    <broker xmlns=\"http://activemq.apache.org/schema/core\"\n            brokerName=\"broker\"\n            persistent=\"true\"\n            schedulerSupport=\"true\"\n            advisorySupport=\"false\"\n            dataDirectory=\"${activemq.data}\">\n\n        <destinationPolicy>\n            <policyMap>\n                <policyEntries>\n                    <policyEntry topic=\">\" producerFlowControl=\"false\" expireMessagesPeriod=\"0\">\n                        <deadLetterStrategy>\n                            <sharedDeadLetterStrategy processExpired=\"false\" processNonPersistent=\"false\"/>\n                        </deadLetterStrategy>\n                    </policyEntry>\n                    <policyEntry queue=\">\" optimizedDispatch=\"true\" producerFlowControl=\"false\">\n                        <deadLetterStrategy>\n                            <sharedDeadLetterStrategy processExpired=\"false\" processNonPersistent=\"false\"/>\n                        </deadLetterStrategy>\n                    </policyEntry>\n                </policyEntries>\n            </policyMap>\n        </destinationPolicy>\n\n\n        <!--\n            The managementContext is used to configure how ActiveMQ is exposed in\n            JMX. By default, ActiveMQ uses the MBean server that is started by\n            the JVM. For more information, see:\n\n            http://activemq.apache.org/jmx.html\n        -->\n        <managementContext>\n            <managementContext createConnector=\"false\"/>\n        </managementContext>\n\n        <!--\n            Configure message persistence for the broker. The default persistence\n            mechanism is MySQL.\n            For more information, see:\n\n            http://activemq.apache.org/persistence.html\n        -->\n        <persistenceFactory>\n            <journalPersistenceAdapterFactory\n                    journalLogFiles=\"8\"\n                    journalLogFileSize=\"268435456\"\n                    useJournal=\"true\"\n                    useQuickJournal=\"false\"\n                    dataSource=\"#mysql-ds\"\n                    dataDirectory=\"${activemq.data}\"/>\n        </persistenceFactory>\n\n        <!--\n          The systemUsage controls the maximum amount of space the broker will\n          use before disabling caching and/or slowing down producers. For more information, see:\n          http://activemq.apache.org/producer-flow-control.html\n        -->\n        <systemUsage>\n            <systemUsage>\n                <memoryUsage>\n                    <memoryUsage limit=\"64 mb\"/>\n                </memoryUsage>\n                <storeUsage>\n                    <storeUsage limit=\"100 gb\"/>\n                </storeUsage>\n                <tempUsage>\n                    <tempUsage limit=\"50 gb\"/>\n                </tempUsage>\n            </systemUsage>\n        </systemUsage>\n\n        <!--\n            The transport connectors expose ActiveMQ over a given protocol to\n            clients and other brokers. For more information, see:\n\n            http://activemq.apache.org/configuring-transports.html\n        -->\n        <transportConnectors>\n            <!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->\n            <transportConnector name=\"default\" uri=\"nio://activemq.lc:61616?maximumConnections=1000&amp;connectionTimeout=600000&amp;wireFormat.maxFrameSize=104857600\"/>\n        </transportConnectors>\n\n        <!-- redelivery configuration-->\n        <plugins>\n            <loggingBrokerPlugin logAll=\"true\"/>\n            <redeliveryPlugin sendToDlqIfMaxRetriesExceeded=\"true\">\n                <redeliveryPolicyMap>\n                    <redeliveryPolicyMap>\n                        <defaultEntry>\n                            <redeliveryPolicy maximumRedeliveries=\"4\" initialRedeliveryDelay=\"5000\" redeliveryDelay=\"10000\" useExponentialBackOff=\"true\" />\n                        </defaultEntry>\n                    </redeliveryPolicyMap>\n                </redeliveryPolicyMap>\n            </redeliveryPlugin>\n        </plugins>\n\n        <!-- destroy the spring context on shutdown to stop jetty -->\n        <shutdownHooks>\n            <bean xmlns=\"http://www.springframework.org/schema/beans\" class=\"org.apache.activemq.hooks.SpringContextHook\"/>\n        </shutdownHooks>\n\n    </broker>\n\n    <bean id=\"mysql-ds\"\n          class=\"org.apache.commons.dbcp.BasicDataSource\"\n          destroy-method=\"close\">\n        <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\"/>\n        <property name=\"url\" value=\"jdbc:mysql://localhost:3306/activemq?relaxAutoCommit=true&amp;autoReconnect=true\"/>\n        <property name=\"username\" value=\"root\"/>\n        <property name=\"password\" value=\"\"/>\n        <property name=\"poolPreparedStatements\" value=\"true\"/>\n        <property name=\"maxActive\" value=\"40\"/>\n    </bean>\n\n    <!--\n        Enable web consoles, REST and Ajax APIs and demos\n        The web consoles requires by default login, you can disable this in the jetty.xml file\n\n        Take a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details\n    -->\n    <import resource=\"jetty.xml\"/>\n\n</beans>\n{code}\n\nPlease help me fiund out is it configuration problem or it is really a bug, because I suffer with this problem for about 2 weeks.\nThanks!","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Memory leak in JDBC Message Store","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Denary","name":"Denary","key":"denary","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dmitry","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Denary","name":"Denary","key":"denary","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dmitry","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"$ java -version\njava version \"1.8.0_20\"\nJava(TM) SE Runtime Environment (build 1.8.0_40-b26)\nJava HotSpot(TM) 64-Bit Server VM (build 25.20-b23, mixed mode)\n\n$ uname -a\nLinux mint 3.13.0-24-generic #46-Ubuntu SMP Thu Apr 10 19:11:08 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12829527/comment/15175454","id":"15175454","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"I think this is resolved by https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=7c11663\n\nit was introduced via - https://issues.apache.org/jira/browse/AMQ-5266","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T11:22:44.796+0000","updated":"2016-03-02T11:22:44.796+0000"}],"maxResults":1,"total":1,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-5773/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2eocn:"}}