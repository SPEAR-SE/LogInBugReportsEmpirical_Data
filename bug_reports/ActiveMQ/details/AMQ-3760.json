{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12545495","self":"https://issues.apache.org/jira/rest/api/2/issue/12545495","key":"AMQ-3760","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315631","id":"12315631","description":"Issues that are getting ready to be kicked - review 'em once more if you like","name":"AGING_TO_DIE","archived":false,"released":false}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2012-03-07T21:05:33.442+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Mar 12 13:11:35 UTC 2012","customfield_12310420":"230681","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_430783127_*|*_6_*:*_2_*:*_702627_*|*_4_*:*_1_*:*_23097408315","customfield_12312321":null,"resolutiondate":"2012-12-04T21:08:23.782+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-3760/watchers","watchCount":1,"isWatching":false},"created":"2012-03-07T13:20:09.730+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["features"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12318549","id":"12318549","name":"5.5.1","archived":false,"released":true,"releaseDate":"2011-10-16"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2012-12-04T21:08:23.798+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313896","id":"12313896","name":"JMS client"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"Create a class with two synchronized methods synchMethod1 and synchMethod2. \nsyncMethod1 is invoked inside a messageListener object and only prints a message on stdout.\nsyncMethod2 creates a new MessageConsumer with a new instance of MessageListener. All the MessageConsumers created by synchMethod2 share the same session.\nAll the consumers listen on the same Topic named \"myDest\".\n\nCreate an infinite cycle that: \n1) send a message on Topic \"myDest\"\n2) invoke syncMethod2\n3) waits 10ms\n\nIn attach the unit test source.\n\nAs result, a deadlock is created between the \"ActiveMQ Session Task\" thread entering in syncMethod1 having the ActiveMessageConsumer's mutex and my other thread executing the syncMethod2 when the SimplePriorityMessageDispatchChannel.stop() method is invoked.\n\n\nThis means that it's not possible to create or change MessageListeners on a running session, even if the code seems to handle this case stopping and restarting the session.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12517397","id":"12517397","filename":"ActiveMQDeadlock.zip","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"created":"2012-03-07T13:21:54.800+0000","size":2401,"mimeType":"application/zip","content":"https://issues.apache.org/jira/secure/attachment/12517397/ActiveMQDeadlock.zip"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"56998","customfield_12312823":null,"summary":"Deadlock on Java Client when onMessage executes a synchronized method.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"java version \"1.6.0_30\"\nJava(TM) SE Runtime Environment (build 1.6.0_30-b12)\nJava HotSpot(TM) Server VM (build 20.5-b03, mixed mode)\n\nOS: SunOs 10/06","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545495/comment/13224301","id":"13224301","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"body":"Deadlock trace and unit test","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"created":"2012-03-07T13:21:54.897+0000","updated":"2012-03-07T13:21:54.897+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545495/comment/13224707","id":"13224707","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"This sort of use of sessions, producers and consumers is discouraged by the spec:\n\n\"If a client desires to have one thread produce messages while others consume them, the client should use a separate session for its producing thread.\n\nOnce a connection has been started, any session with one or more registered message listeners is dedicated to the thread of control that delivers messages to it. It is erroneous for client code to use this session or any of its constituent objects from another thread of control. The only exception to this rule is the use of the session or connection close method. \"\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2012-03-07T21:05:33.442+0000","updated":"2012-03-07T21:05:33.442+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545495/comment/13225093","id":"13225093","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"body":"In the unit test above I used a dedicated session for the producer. Only the consumers share a session. \n\nSo is it not possible to add a new Consumer to an already running session? Can't I change the messageListener for a running consumer? \n\nIf so, I think that the MessageConsumer.setMessageListener() should throw an Exception, not stopping and restarting the session.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"created":"2012-03-08T08:55:14.800+0000","updated":"2012-03-08T08:55:14.800+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545495/comment/13225139","id":"13225139","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"The spec has this to say about changing the message listener on a consumer:\n\n\"The effect of calling MessageConsumer.setMessageListener while messages are being consumed by an existing listener or the consumer is being used to consume messages synchronously is undefined.\"","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2012-03-08T11:14:41.050+0000","updated":"2012-03-08T11:14:41.050+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545495/comment/13225143","id":"13225143","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"body":"Ok, I understant I cannot change the MessageListener for a running consumer (even if I think that undefined should mean I'm not sure that I will not miss messages in the meanwhile, not that the application runs into deadlock).\n\nIt remains open the point: can I add a new consumer on a running session? The code seems to handle this scenario. Else an exception should be thrown.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"created":"2012-03-08T11:21:30.139+0000","updated":"2012-03-08T11:21:30.139+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545495/comment/13225212","id":"13225212","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"From the spec:\n\n\"Once a connection has been started, any session with one or more registered message listeners is dedicated to the thread of control that delivers messages to it. It is erroneous for client code to use this session or any of its constituent objects from another thread of control. The only exception to this rule is the use of the session or connection close method. \"\n\nIn your test case the first addition of the consumer succeeds which is correct, after that the session has a running consumer and is subject to the rule that its invalid for any other thread to call a session method other than close, which your code does by attempting to create a new consumer from the producer thread.  As per the spec the only Session method that you can safely call from the producer thread is close() after you create the first consumer as its now dedicated to the thread that is delivering messages to the consumer.  \n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2012-03-08T14:00:36.799+0000","updated":"2012-03-08T14:00:36.799+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545495/comment/13225223","id":"13225223","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"body":"Ok, so your answer to the question: \"can I add a consumer on a running session?\" is no.\n\nAt this point, why the ActiveMQMessageConsumer.setMessageListener stops and restarts the session instead of throwing an exception? If the operation is invalid, this behaviour is error prone and inefficient. Please note that in this scenario it's possible to block forever every other consumer linked to the same session, also those created before the session start.\nSince this code works correctly if no lock is involved, I believe we have to resolve the deadlock, not to drop the entire feature.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"created":"2012-03-08T14:28:22.325+0000","updated":"2012-03-08T14:28:22.325+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545495/comment/13226064","id":"13226064","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"Actually, the answer to the question: \"can I add a consumer on a running session?\" is as it is in most cases, it depends.  In many cases you can happily add a new consumer and even set a new message listener to a running consumer without problems, only in the tangled cases of synchronized methods cases you've created does this run into problems and that's why the spec makes these notes about the use of sessions and consumes by threads other than the thread that is delivering to the session with a running consumer.  \n\nThe code is working within the bounds of the spec.  If you have some ideas on how to improve things such that it meets your use case while still obeying all the various rules of the JMS specification we welcome your patches and test cases. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2012-03-09T13:32:02.765+0000","updated":"2012-03-09T13:32:02.765+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545495/comment/13227481","id":"13227481","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"Working as designed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2012-03-12T12:59:52.833+0000","updated":"2012-03-12T12:59:52.833+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12545495/comment/13227490","id":"13227490","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"body":"I disagree with the closure of this issue.\n\nThe spec cannot allow a deadlock and a synchronized method is not an uncommon case. Either a method can be called or it can't, the behaviour cannot be unpredictable.\nIf none Session method can be called (apart from close) when a Session is running, then I could not call the createObjectMessage() method also. I cannot believe that.\n\nI would leave this bug open and explore a solution; closing the bug in this moment is like hiding the issue.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=amonguzz","name":"amonguzz","key":"amonguzz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alessandro Monguzzi","active":true,"timeZone":"Etc/UTC"},"created":"2012-03-12T13:11:35.481+0000","updated":"2012-03-12T13:11:35.481+0000"}],"maxResults":10,"total":10,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-3760/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0a4h3:"}}