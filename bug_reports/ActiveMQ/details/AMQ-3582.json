{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12530867","self":"https://issues.apache.org/jira/rest/api/2/issue/12530867","key":"AMQ-3582","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Nov 09 12:02:23 UTC 2011","customfield_12310420":"216605","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-3582/watchers","watchCount":1,"isWatching":false},"created":"2011-11-09T11:59:52.086+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12318549","id":"12318549","name":"5.5.1","archived":false,"released":true,"releaseDate":"2011-10-16"}],"issuelinks":[{"id":"12345400","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12345400","type":{"id":"10020","name":"Cloners","inward":"is cloned by","outward":"is a clone of","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10020"},"outwardIssue":{"id":"12482544","key":"AMQ-1509","self":"https://issues.apache.org/jira/rest/api/2/issue/12482544","fields":{"summary":"Duplicate topic messages received with network of brokers and selectors","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rajdavies","name":"rajdavies","key":"rajdavies","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rajdavies&avatarId=13942","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rajdavies&avatarId=13942","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rajdavies&avatarId=13942","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rajdavies&avatarId=13942"},"displayName":"Rob Davies","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-11-09T12:02:23.887+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12313903","id":"12313903","name":"Transport"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"If you create a network of two brokers, A and B, one publisher publishing to A, and n (where n is > 1) receivers with selectors, each receiver recieves n messages for every 1 message sent.  The key here is to have a selector.   It would appear that the conduitSubscriptions flag does not work when using selectors.  The conduit does not properly reconcile consumers if they have selectors.  A suggested soltuion would be that ather than process each selector independantly, each selector should be or'ed together and if any selector results in true then a single message should be sent to the other broker.\n\nIn doing research, it would appear that this problem was introduced with bug fix AMQ-810.  Another user reported it via email back to the assignee of AMQ-810 and a short dialog transpired.  See http://www.mail-archive.com/activemq-users@geronimo.apache.org/msg05198.html.  \n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12503061","id":"12503061","filename":"ASF.LICENSE.NOT.GRANTED--ActiveMQActor.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtoff","name":"gtoff","key":"gtoff","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Giovanni Toffetti","active":true,"timeZone":"Etc/UTC"},"created":"2011-11-09T11:59:52.733+0000","size":10715,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12503061/ASF.LICENSE.NOT.GRANTED--ActiveMQActor.java"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"81462","customfield_12312823":null,"summary":"CLONE - Duplicate topic messages received with network of brokers and selectors","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtoff","name":"gtoff","key":"gtoff","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Giovanni Toffetti","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtoff","name":"gtoff","key":"gtoff","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Giovanni Toffetti","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12530867/comment/13146966","id":"13146966","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtoff","name":"gtoff","key":"gtoff","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Giovanni Toffetti","active":true,"timeZone":"Etc/UTC"},"body":"I cloned the original bug as I don't don't think the problem is fixed: as soon as there are more than one ( at least 2 hops ) paths between brokers message duplication occurs.\n\nHere's a little example:\n\n{code:title=FourBrokerTopicNetworkTest}\n\npublic class FourBrokerTopicNetworkTest extends JmsMultipleBrokersTestSupport implements MessageListener {\n\tprotected static final int MESSAGE_COUNT = 5;\n\tpublic boolean dynamicOnly;\n\n\tpublic void initCombosForTestABandBCbrokerNetworkWithSelectors() {\n\t\taddCombinationValues(\"dynamicOnly\", new Object[] { true, false });\n\t}\n\n\t/**\n\t * A simple square topology BrokerA <-> BrokerB BrokerA <-> BrokerC BrokerB\n\t * <-> BrokerD BrokerD <-> BrokerC\n\t * \n\t */\n\tpublic void testSquareConnectedBrokerNetwork2() throws Exception {\n\t\tint networkTTL = 2;\n\t\tboolean conduitSubs = true;\n\t\tboolean dynamicOnly = false;\n\n\t\t// Setup broker networks\n\t\tbridgeBrokers(\"BrokerA\", \"BrokerB\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\t\tbridgeBrokers(\"BrokerB\", \"BrokerA\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\t\tbridgeBrokers(\"BrokerA\", \"BrokerC\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\t\tbridgeBrokers(\"BrokerC\", \"BrokerA\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\n\t\tbridgeBrokers(\"BrokerD\", \"BrokerC\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\t\tbridgeBrokers(\"BrokerC\", \"BrokerD\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\t\tbridgeBrokers(\"BrokerD\", \"BrokerB\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\t\tbridgeBrokers(\"BrokerB\", \"BrokerD\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\n\t\tstartAllBrokers();\n\n\t\t// Setup destination\n\t\tDestination dest = createDestination(\"TEST.FOO\", true);\n\n\t\t// Setup consumers\n\t\tMessageConsumer clientA = createConsumer(\"BrokerA\", dest, \"msgId > 0\");\n\t\tMessageConsumer clientB = createConsumer(\"BrokerB\", dest, \"msgId > 0\");\n\t\tMessageConsumer clientC = createConsumer(\"BrokerC\", dest, \"msgId > 0\");\n\t\tMessageConsumer clientD = createConsumer(\"BrokerD\", dest, \"msgId > 0\");\n\t\t// let consumers propogate around the network\n\t\tThread.sleep(5000);\n\t\t\n\t\tclientD.setMessageListener(this);\n\n\t\t// Send messages\n\t\tString[] brokers = { \"BrokerA\", \"BrokerB\", \"BrokerC\", \"BrokerD\" };\n\t\tHashMap<String, Object> props = new HashMap<String, Object>();\n\t\tfor (String broker : brokers) {\n\t\t\tprops.put(\"sender\", broker);\n\t\t\tfor (int i = 1; i <= MESSAGE_COUNT; i++) {\n\t\t\t\tprops.put(\"msgId\", i);\n\t\t\t\tsendMessages(broker, dest, 1, props);\n\t\t\t}\n\t\t}\n\n\t\t// Get message count\n\t\tMessageIdList msgsA = getConsumerMessages(\"BrokerA\", clientA);\n\t\tMessageIdList msgsB = getConsumerMessages(\"BrokerB\", clientB);\n\t\tMessageIdList msgsC = getConsumerMessages(\"BrokerC\", clientC);\n\t\tMessageIdList msgsD = getConsumerMessages(\"BrokerD\", clientD);\n\n\t\tmsgsA.waitForMessagesToArrive(MESSAGE_COUNT * 4);\n\t\tmsgsB.waitForMessagesToArrive(MESSAGE_COUNT * 4);\n\t\tmsgsC.waitForMessagesToArrive(MESSAGE_COUNT * 4);\n\t\tmsgsD.waitForMessagesToArrive(MESSAGE_COUNT * 4);\n\t\t\n\t\tSystem.out.println(msgsA.toString());\n\n\t\tassertEquals(MESSAGE_COUNT * 4, msgsA.getMessageCount());\n\t\tassertEquals(MESSAGE_COUNT * 4, msgsB.getMessageCount());\n\t\tassertEquals(MESSAGE_COUNT * 4, msgsC.getMessageCount());\n\t\tassertEquals(MESSAGE_COUNT * 4, msgsD.getMessageCount());\n\t}\n\n\t/**\n\t * A simple square topology BrokerA <-> BrokerB BrokerA <-> BrokerC BrokerB\n\t * <-> BrokerD BrokerD <-> BrokerC\n\t * \n\t */\n\tpublic void testSquareConnectedBrokerNetwork() throws Exception {\n\t\tint networkTTL = 2;\n\t\tboolean conduitSubs = true;\n\t\tboolean dynamicOnly = false;\n\n\t\t// Setup broker networks\n\t\tbridgeBrokers(\"BrokerA\", \"BrokerB\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\t\tbridgeBrokers(\"BrokerB\", \"BrokerA\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\t\tbridgeBrokers(\"BrokerA\", \"BrokerC\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\t\tbridgeBrokers(\"BrokerC\", \"BrokerA\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\n\t\tbridgeBrokers(\"BrokerD\", \"BrokerC\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\t\tbridgeBrokers(\"BrokerC\", \"BrokerD\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\t\tbridgeBrokers(\"BrokerD\", \"BrokerB\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\t\tbridgeBrokers(\"BrokerB\", \"BrokerD\", dynamicOnly, networkTTL,\n\t\t\t\tconduitSubs);\n\n\t\tstartAllBrokers();\n\n\t\t// Setup destination\n\t\tDestination dest = createDestination(\"TEST.FOO\", true);\n\n\t\t// Setup consumers\n\t\tMessageConsumer clientA = createConsumer(\"BrokerA\", dest);\n\t\tMessageConsumer clientB = createConsumer(\"BrokerB\", dest);\n\t\tMessageConsumer clientC = createConsumer(\"BrokerC\", dest);\n\t\tMessageConsumer clientD = createConsumer(\"BrokerD\", dest);\n\t\t// let consumers propogate around the network\n\t\tThread.sleep(5000);\n\n\t\t// Send messages\n\t\tsendMessages(\"BrokerA\", dest, MESSAGE_COUNT);\n\t\tsendMessages(\"BrokerB\", dest, MESSAGE_COUNT);\n\t\tsendMessages(\"BrokerC\", dest, MESSAGE_COUNT);\n\t\tsendMessages(\"BrokerD\", dest, MESSAGE_COUNT);\n\n\t\t// Get message count\n\t\tMessageIdList msgsA = getConsumerMessages(\"BrokerA\", clientA);\n\t\tMessageIdList msgsB = getConsumerMessages(\"BrokerB\", clientB);\n\t\tMessageIdList msgsC = getConsumerMessages(\"BrokerC\", clientC);\n\t\tMessageIdList msgsD = getConsumerMessages(\"BrokerD\", clientD);\n\n\t\tmsgsA.waitForMessagesToArrive(MESSAGE_COUNT * 4);\n\t\tmsgsB.waitForMessagesToArrive(MESSAGE_COUNT * 4);\n\t\tmsgsC.waitForMessagesToArrive(MESSAGE_COUNT * 4);\n\t\tmsgsD.waitForMessagesToArrive(MESSAGE_COUNT * 4);\n\n\t\tassertEquals(MESSAGE_COUNT * 4, msgsA.getMessageCount());\n\t\tassertEquals(MESSAGE_COUNT * 4, msgsB.getMessageCount());\n\t\tassertEquals(MESSAGE_COUNT * 4, msgsC.getMessageCount());\n\t\tassertEquals(MESSAGE_COUNT * 4, msgsD.getMessageCount());\n\t}\n\n\tpublic void setUp() throws Exception {\n\t\tsuper.setAutoFail(true);\n\t\tsuper.setUp();\n\t\tString options = new String(\"?persistent=false&useJmx=false\");\n\t\tcreateBroker(new URI(\"broker:(tcp://localhost:61616)/BrokerA\" + options));\n\t\tcreateBroker(new URI(\"broker:(tcp://localhost:61617)/BrokerB\" + options));\n\t\tcreateBroker(new URI(\"broker:(tcp://localhost:61618)/BrokerC\" + options));\n\t\tcreateBroker(new URI(\"broker:(tcp://localhost:61619)/BrokerD\" + options));\n\t}\n\n\tpublic static Test suite() {\n\t\treturn suite(FourBrokerTopicNetworkTest.class);\n\t}\n\n\t@Override\n\tpublic void onMessage(Message message) {\n\t\ttry {\n\t\t\tSystem.err.println(message.getStringProperty(\"sender\") + \" msgID:\" + message.getIntProperty(\"msgId\") );\n\t\t} catch (JMSException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t}\n}\n\n{code}\n\nI don't know if there's anything wrong with this test, or if I should use different configurations of TTL, conduit, and dynamicOnly. I tested it with the latest AMQ I could get (5.5.1).\n\nAs you can see running the test delivered messages are more than 20, they are 25. The reason behind it can be seen in the testSquareConnectedBrokerNetwork2 method: clientD will print all messages coming from BrokerA twice as they are forwarded by both BrokerB and BrokerC on two different paths.\nAnd of course this is a major problem whenever a broker network has multiple paths as message duplication becomes so severe that it basically kills the whole thing.\n\nPlease let me know if the test is correct as I'd like to have some more insight about why this is happening. Also my colleagues and I have some ideas about the correct way to fix it.\n\nRegards,\n\ng","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtoff","name":"gtoff","key":"gtoff","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Giovanni Toffetti","active":true,"timeZone":"Etc/UTC"},"created":"2011-11-09T12:02:23.857+0000","updated":"2011-11-09T12:02:23.857+0000"}],"maxResults":1,"total":1,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-3582/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0eahr:"}}