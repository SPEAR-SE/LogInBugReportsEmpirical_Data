{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13023385","self":"https://issues.apache.org/jira/rest/api/2/issue/13023385","key":"AMQ-6519","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12338124","id":"12338124","name":"5.14.1","archived":false,"released":true,"releaseDate":"2016-09-30"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2016-11-25T16:09:00.641+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Nov 28 09:08:10 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_246508694_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2016-11-28T09:11:48.047+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6519/watchers","watchCount":2,"isWatching":false},"created":"2016-11-25T12:43:19.567+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":["documentation"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12338124","id":"12338124","name":"5.14.1","archived":false,"released":true,"releaseDate":"2016-09-30"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tmielke","name":"tmielke","key":"tmielke","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Torsten Mielke","active":true,"timeZone":"Europe/Berlin"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-11-28T09:11:57.366+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313894","id":"12313894","name":"Documentation"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"The chapter \"Pooled Consumers and Prefetch\" on http://activemq.apache.org/what-is-the-prefetch-limit-for.html is partly incorrect.\n\nI had a few customers getting uncertain about this section that I really think we need to correct this. \n\nWhile the first general part is correct:\n\n{quote}\nConsuming messages from a pool of consumers an be problematic due to prefetch. Unconsumed prefetched messages are only released when a consumer is closed, but with a pooled consumer the close is deferred (for reuse) till the consumer pool closes. This leaves prefetched messages unconsumed till the consumer is reused. This feature can be desirable from a performance perspective. However, it can lead to out-of-order message delivery when there is more than one consumer in the pool. For this reason, the org.apache.activemq.pool.PooledConnectionFactory does not pool consumers.\n{quote}\n\nthe latter part is wrong:\n\n{quote}\nThe problem is visible with the Spring DMLC when the cache level is set to CACHE_CONSUMER and there are multiple concurrent consumers. One solution to this problem is to use a prefetch of 0 for a pooled consumer, in this way, it will poll for messages on each call to receive(timeout). Another option is to enable the AbortSlowAckConsumerStrategy on the broker to disconnect consumers that have not acknowledged a Message after some configurable time period.\n{quote}\n\nSprings DMLC does not pool consumers in the sense that it uses its own pool of JMS consumers for which it grabs an instance when consuming the next message. If it did work that way, then it would fall under the above category and then it would be a problem.\nHowever Spring DMLC caches the consumer, i.e. it re-uses the same JMS consumer object to receive all messages for the life time of the DMLC instance. So it behaves pretty much like properly hand written JMS code, where you create the JMS connection, session, consumer and then use this consumer instance to receive all your messages.\nIf you run Spring DMLC with multiple consumer threads, then each consumer thread creates its own JMS consumer instances and uses that to process messages. These JMS consumer instances are not mixed between threads. \nSo there is no problem with prefetching messages to these consumers, since they are never placed into a pool of some sort.\n\nOn the contrary Springs CachingConnectionFactory allows to pool consumers (although off by default) and that kind of pooling of consumers would cause the problems outlined in the general section. \n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10042","value":"Patch Available","id":"10042"}],"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"[doc] re-work section \"Pooled Consumers and Prefetch\" on prefetch documentation","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tmielke","name":"tmielke","key":"tmielke","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Torsten Mielke","active":true,"timeZone":"Europe/Berlin"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tmielke","name":"tmielke","key":"tmielke","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Torsten Mielke","active":true,"timeZone":"Europe/Berlin"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Documentation","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13023385/comment/15695787","id":"15695787","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tmielke","name":"tmielke","key":"tmielke","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Torsten Mielke","active":true,"timeZone":"Europe/Berlin"},"body":"I forgot to mention, CACHE_CONSUMER is a very much desired configuration in most use cases. It cannot be used with XA transactions but works fine with local JMS transactions and non-transacted consumers. \nThe reason is that without caching the consumer in Spring, it needs to re-create a new consumer for every single message it wants to consume.\nThe call to session.createConsumer() is a synchronous call against the broker, hence slows down your overall processing performance in the client. \n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tmielke","name":"tmielke","key":"tmielke","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Torsten Mielke","active":true,"timeZone":"Europe/Berlin"},"created":"2016-11-25T12:47:42.036+0000","updated":"2016-11-25T12:47:42.036+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13023385/comment/15695827","id":"15695827","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tmielke","name":"tmielke","key":"tmielke","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Torsten Mielke","active":true,"timeZone":"Europe/Berlin"},"body":"Here is my suggestion to fix the docs.\nI would like to leave the first general part as it is atm, since it is correct.\n\n{quote}\nConsuming messages from a pool of consumers can be problematic due to prefetch. Unconsumed prefetched messages are only released when a consumer is closed, but with a pooled consumer the call to close() is deferred (for reuse) till the consumer pool closes. This leaves prefetched messages unconsumed till the consumer is reused. This feature can be desirable from a performance perspective. However, it can lead to out-of-order message delivery when there is more than one consumer in the pool. For this reason, the org.apache.activemq.pool.PooledConnectionFactory does not pool consumers.\n{quote}\n\nThen re-write the second part to \n\n{quote}\nPooling consumers is supported by Springs CachingConnectionFactory (although turned off by default). In case you use the CachingConnectionFactory with multiple consumer threads configured in Springs DefaultMessageListenerContainer (DMLC) you either want to turn off consumer pooling in the  CachingConnectionFactory (its off by default) or you may want to use a prefetch of 0 when pooling consumers. In this way, the consumer will poll for messages on each call to receive(timeout). Its generally recommended to turn off consumer caching in Springs CachingConnectionFactory and any other frameworks that allow to pool JMS consumers.\n\nNote that Springs DefaultMessageListenerContainer (DMLC) and its CACHE_CONSUMER cache level is not affected by this problem! Springs DMLC does not pool consumers in the sense that it does not use an internal pool with multiple consumer instances. Instead it caches the consumer, i.e. it re-uses the same JMS consumer object to receive all messages for the life time of the DMLC instance. So it behaves pretty much like properly hand written JMS code, where you create the JMS connection, session, consumer and then use this consumer instance to receive all your messages.\nHence there is no problem with using CACHE_CONSUMER in Spring DMLC, even with multiple consumer threads, unless you are using XA transactions. XA transactions do not work with CACHE_CONSUMER in Spring DMLC. However local JMS transactions and non-transacted consumers are just fine to use CACHE_CONSUMER in Springs DMLC.\n\nAlso note that Camel's JMS or ActiveMQ components use Springs DMLC internally. So everything said above about Springs DMLC and CACHE_CONSUMER applies to these two Camel components as well. \n{quote}\n\nAny objections / corrections / opinions on this suggested documentation update? \nIf I get some confirmation, I will update the docs accordingly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tmielke","name":"tmielke","key":"tmielke","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Torsten Mielke","active":true,"timeZone":"Europe/Berlin"},"created":"2016-11-25T13:04:38.740+0000","updated":"2016-11-25T13:04:38.740+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13023385/comment/15696198","id":"15696198","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"good update.\n\nCast your eyes over https://github.com/apache/activemq/blob/master/activemq-jms-pool/src/main/java/org/apache/activemq/jms/pool/PooledConnectionFactory.java where there is similar info but I think it is less detailed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2016-11-25T16:09:00.641+0000","updated":"2016-11-25T16:09:00.641+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13023385/comment/15701375","id":"15701375","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tmielke","name":"tmielke","key":"tmielke","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Torsten Mielke","active":true,"timeZone":"Europe/Berlin"},"body":"Thanks for confirming Gary,\n\nI pushed this update to this page in this revision https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=36183.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tmielke","name":"tmielke","key":"tmielke","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Torsten Mielke","active":true,"timeZone":"Europe/Berlin"},"created":"2016-11-28T09:08:10.336+0000","updated":"2016-11-28T09:08:10.336+0000"}],"maxResults":4,"total":4,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6519/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i36s93:"}}