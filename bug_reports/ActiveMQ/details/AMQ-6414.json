{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13002097","self":"https://issues.apache.org/jira/rest/api/2/issue/13002097","key":"AMQ-6414","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12338124","id":"12338124","name":"5.14.1","archived":false,"released":true,"releaseDate":"2016-09-30"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12338054","id":"12338054","name":"5.15.0","archived":false,"released":true,"releaseDate":"2017-07-05"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2016-09-01T15:42:12.278+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue Feb 28 13:12:49 UTC 2017","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_427300155_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2016-09-06T14:19:59.142+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6414/watchers","watchCount":6,"isWatching":false},"created":"2016-09-01T15:38:19.829+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334188","id":"12334188","name":"5.14.0","archived":false,"released":true,"releaseDate":"2016-08-05"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-02-28T13:12:49.947+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12313903","id":"12313903","name":"Transport"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"The nio+ssl transports can hang on initial connection and never read from the socket after the SSL handshake for certain conditions.  This behavior is most evident when using the auto+nio+ssl transport for a network bridge between 2 brokers, however I also saw the issue for the normal nio+ssl transport when running the NetworkAsyncStartTest and even the amqp+nio+ssl transport.\n\nAfter debugging I found that the issue is that the onSelect method of the registered callback, which calls the serviceRead() method, is not always getting triggered.  I believe that the root of the problem is that even though a selector is registered with a SelectionKey.OP_READ, there is no guarantee that the selected set is correct which is what the SelectorWorker uses to detect if the operation is ready. The SelectionKey documentation specifically states that the ready set is a hint but not a guarantee that the channel is ready.  This seems to only effect the SSL transport (not normal NIO), probably because a read selection was already done once to unwrap the SSL transport\n\nMore info: https://docs.oracle.com/javase/8/docs/api/java/nio/channels/SelectionKey.html\n\nThe fix for this is to trigger the selectRead() after the transport finishes starting up.  (needs to be in a new thread specifically for OpenWire to allow the wireformat negotiation to not block on startup).  This will work for the SSL transport specifically since we know the transport is read to read from the the channel after starting up.  We know this because the SSL handshake already took place which means we've already read from the channel.\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"The nio+ssl transports can block and hang on connection in certain situations","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002097/comment/15455803","id":"15455803","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit ed0e786b6002633411037923fb28a075489e442b in activemq's branch refs/heads/master from [~cshannon]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=ed0e786 ]\n\nhttps://issues.apache.org/jira/browse/AMQ-6414\n\nChanging the nio+ssl transports to trigger a serviceRead after start up\nto prevent blocking. The prevents the channels from not reading in\ncertain cases, most notably with the auto+nio+ssl transport when used\nfor a network bridge.  Also added a couple tests and changed a network\nbridge test to test out auto+nio+ssl.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-01T15:42:12.278+0000","updated":"2016-09-01T15:42:12.278+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002097/comment/15455807","id":"15455807","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"body":"I will let CI run and make sure all of the tests are still good and then close this out and backport the fix to 5.14.x.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"created":"2016-09-01T15:43:42.860+0000","updated":"2016-09-01T15:43:42.860+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002097/comment/15467519","id":"15467519","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit 679f0cfd311c362aa7821763067d9c9fa9bdc801 in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=679f0cf ]\n\nhttps://issues.apache.org/jira/browse/AMQ-6414\n\nChanging the nio+ssl transports to trigger a serviceRead after start up\nto prevent blocking. The prevents the channels from not reading in\ncertain cases, most notably with the auto+nio+ssl transport when used\nfor a network bridge.  Also added a couple tests and changed a network\nbridge test to test out auto+nio+ssl.\n\n(cherry picked from commit ed0e786b6002633411037923fb28a075489e442b)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-06T14:19:37.350+0000","updated":"2016-09-06T14:19:37.350+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002097/comment/15549415","id":"15549415","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brudo","name":"brudo","key":"brudo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bruce Dodson","active":true,"timeZone":"America/Vancouver"},"body":"Reviewing the changes in e.g. NIOSSLTransport.java, considering your description of why it occurs, and comparing to the 5.13.4 source code, it appears this bug could affect earlier versions as well - or did it surface only in 5.14.0 due to other changes elsewhere? (In other words, more to the point, if we're using 5.13.4 and nio+ssl, is it advisable to upgrade to 5.14.1?) Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brudo","name":"brudo","key":"brudo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Bruce Dodson","active":true,"timeZone":"America/Vancouver"},"created":"2016-10-05T17:24:43.246+0000","updated":"2016-10-05T17:24:43.246+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002097/comment/15549428","id":"15549428","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"body":"It could happen for earlier versions also so upgrading is probably a good idea.  However, in my testing it seemed to happen pretty rarely and certain things (like using the auto transport) made it more likely so if you haven't seen it happen yet then it may not happen in your environment. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"created":"2016-10-05T17:30:01.406+0000","updated":"2016-10-05T17:30:01.406+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002097/comment/15886083","id":"15886083","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit a1f6261fb248fd2d39b78e7f2245352009394975 in activemq's branch refs/heads/master from [~gtully]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a1f6261 ]\n\n[AMQ-6414] additional test that reproduces and validates\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2017-02-27T16:38:44.933+0000","updated":"2017-02-27T16:38:44.933+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002097/comment/15886106","id":"15886106","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"I was digging into this fix from another angle, hence the additional test.\nThe issue is that doing the ssl handshake reads the first openwire command, so there is some remaining data to read once the handshake completes. wireformat negotiation times out and the brokerInfo never gets sent and it hangs.\n\nThe async read in a different thread can be conditional on:\n{code} if (inputBuffer.position() > 0 && inputBuffer.hasRemaining() && wireFormat instanceof OpenWireFormat) {code} however doing a blocking read is also fine for openwire because of the negotiation that will follow.\nTurns out there is similar logic in mqtt and stomp (without the sync around negotiation): https://github.com/apache/activemq/blob/da9fedead4078cc82efb32e15d8d9cd53c8e82dc/activemq-mqtt/src/main/java/org/apache/activemq/transport/mqtt/MQTTNIOSSLTransport.java#L53\n\nAs an aside, the blocking around openwire negotiation relates to the need to send each sides preferred options with default format so that it will be properly marshalled/unmarshalled *before* options are applied.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2017-02-27T16:52:33.736+0000","updated":"2017-02-27T16:52:33.736+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002097/comment/15886124","id":"15886124","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit b6521e292b20788eef44f3a7810d8e4281b677dc in activemq's branch refs/heads/master from [~gtully]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b6521e2 ]\n\n[AMQ-6414] additional logging that helped identify root cause\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2017-02-27T17:01:26.130+0000","updated":"2017-02-27T17:01:26.130+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002097/comment/15886147","id":"15886147","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"body":"[~gtully], thanks for digging deeper into this to see the root cause.  I had primarily noticed it with the auto+nio+ssl transport but then saw it happen in other cases which is when I discovered the need to trigger an extra read to finish reading the bytes.\n\nI still think the async start is needed when using auto+nio+ssl otherwise it will get stuck.  For example, using NetworkReconnectSslNioTest that you added, If I change the doInit() method in NIOSSLTransport to the following it works fine:\n\n{code:java}\n    protected void doInit() throws Exception {\n        if (inputBuffer.position() > 0 && inputBuffer.hasRemaining() && wireFormat instanceof OpenWireFormat) {\n            taskRunnerFactory.execute(new Runnable() {\n\n                @Override\n                public void run() {\n                    //Need to start in new thread to let startup finish first\n                    //We can trigger a read because we know the channel is ready since the SSL handshake\n                    //already happened\n                    serviceRead();\n                    initialized.countDown();\n                }\n            });\n        } else {\n            initialized.countDown();\n        }\n    }\n{code}\n\nHowever, if I then update your test to use the auto+nio+ssl transport it will no longer work anymore even with the above change at as it needs to be async so the detection doesn't get stuck.\n\nSo, we could either leave things the way they currently are now (with the async always scheduled) or update it so that async is only always scheduled for auto+nio+ssl and conditionally for regular nio+ssl transports.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"created":"2017-02-27T17:24:37.515+0000","updated":"2017-02-27T17:24:37.515+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002097/comment/15887825","id":"15887825","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"[~cshannon] I think it is ok as it is now, so long as we don't get a concurrent read which your initialized latch sorts.\nIf I get a chance to explore the auto scenario we can revisit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2017-02-28T11:20:00.230+0000","updated":"2017-02-28T11:20:00.230+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13002097/comment/15887972","id":"15887972","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"body":"[~gtully], sounds good.  I've been running the patch since September and it has been working well.  No more timeout issues on any of the nio+ssl transports and the countdown latch has prevented a concurrent read.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"created":"2017-02-28T13:12:49.947+0000","updated":"2017-02-28T13:12:49.947+0000"}],"maxResults":11,"total":11,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6414/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i33547:"}}