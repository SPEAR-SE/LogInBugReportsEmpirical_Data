{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13137779","self":"https://issues.apache.org/jira/rest/api/2/issue/13137779","key":"AMQ-6898","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/8","id":"8","description":"The described issue is not actually a problem - it is as designed.","name":"Not A Problem"},"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Feb 12 05:50:16 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_143532628_*|*_6_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2018-02-13T21:34:19.153+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6898/watchers","watchCount":1,"isWatching":false},"created":"2018-02-12T05:42:06.547+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["features"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12341947","id":"12341947","name":"5.15.3","archived":false,"released":true,"releaseDate":"2018-02-01"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-02-13T21:34:19.171+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12321807","id":"12321807","name":"AMQP","description":"AcitveMQ's AMQP Transport"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"Hi, same classes exist in two different JARs: <*org.apache.geronimo.specs:geronimo-jms_1.1_spec:*1.1.1:> and <*org.apache.geronimo.specs:geronimo-jms_2.0_spec*:1.0-alpha-2:>.\r\n\r\nThe same problem also exist in JAR pair <*commons-beanutils:commons-beanutils-core*:1.8.0:> and <*commons-beanutils:commons-beanutils*:1.9.3:>.\r\n\r\n And after further analyzing the source code, we found that these duplicate classes have different implementations, which would leads to the *NoSuchMethodException*! If the classes with the same name on the classpath, then the only the first present one can be loaded. So it affects the program behaviors. The differences between are listed in the attachment. Hope this can help you.  Thanks!\r\n\r\n ","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12910147","id":"12910147","filename":"activemq-amqp—conflicts.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=PandaMonkey","name":"PandaMonkey","key":"pandamonkey","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34049"},"displayName":"PandaMonkey","active":true,"timeZone":"Asia/Hong_Kong"},"created":"2018-02-12T05:47:16.925+0000","size":15276,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12910147/activemq-amqp%E2%80%94conflicts.txt"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Dependency conflict problems in different JARs <org.apache.geronimo.specs:geronimo-jms_1.1_spec:1.1.1:><org.apache.geronimo.specs:geronimo-jms_2.0_spec:1.0-alpha-2:>, which brings high risks of NoSuchMethodException ","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=PandaMonkey","name":"PandaMonkey","key":"pandamonkey","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34049"},"displayName":"PandaMonkey","active":true,"timeZone":"Asia/Hong_Kong"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=PandaMonkey","name":"PandaMonkey","key":"pandamonkey","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34049"},"displayName":"PandaMonkey","active":true,"timeZone":"Asia/Hong_Kong"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13137779/comment/16360327","id":"16360327","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=PandaMonkey","name":"PandaMonkey","key":"pandamonkey","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34049"},"displayName":"PandaMonkey","active":true,"timeZone":"Asia/Hong_Kong"},"body":"===============projectPath->org.apache.activemq:activemq-amqp:5.15.3@D:\\ws\\release\\activemq-activemq-5.15.3\\activemq-amqp\\pom.xml\r\n1. Risk for jar-pair:<org.apache.geronimo.specs:geronimo-jms_1.1_spec:1.1.1:><org.apache.geronimo.specs:geronimo-jms_2.0_spec:1.0-alpha-2:>\r\n methods that only exist in org.apache.geronimo.specs:geronimo-jms_2.0_spec:1.0-alpha-2:: [org.apache.activemq:activemq-amqp:5.15.3:->org.apache.qpid:qpid-jms-client:0.29.0:->org.apache.geronimo.specs:geronimo-jms_2.0_spec:1.0-alpha-2:]\r\n<javax.jms.Connection: javax.jms.ConnectionConsumer createSharedConnectionConsumer(javax.jms.Topic,java.lang.String,java.lang.String,javax.jms.ServerSessionPool,int)>\r\n<javax.jms.Connection: javax.jms.Session createSession()>\r\n<javax.jms.Connection: javax.jms.ConnectionConsumer createSharedDurableConnectionConsumer(javax.jms.Topic,java.lang.String,java.lang.String,javax.jms.ServerSessionPool,int)>\r\n<javax.jms.Connection: javax.jms.Session createSession(int)>\r\n<javax.jms.ConnectionFactory: javax.jms.JMSContext createContext(java.lang.String,java.lang.String)>\r\n<javax.jms.ConnectionFactory: javax.jms.JMSContext createContext()>\r\n<javax.jms.ConnectionFactory: javax.jms.JMSContext createContext(java.lang.String,java.lang.String,int)>\r\n<javax.jms.ConnectionFactory: javax.jms.JMSContext createContext(int)>\r\n<javax.jms.Message: long getJMSDeliveryTime()>\r\n<javax.jms.Message: boolean isBodyAssignableTo(java.lang.Class)>\r\n<javax.jms.Message: java.lang.Object getBody(java.lang.Class)>\r\n<javax.jms.Message: void setJMSDeliveryTime(long)>\r\n<javax.jms.MessageProducer: void send(javax.jms.Message,int,int,long,javax.jms.CompletionListener)>\r\n<javax.jms.MessageProducer: void send(javax.jms.Destination,javax.jms.Message,javax.jms.CompletionListener)>\r\n<javax.jms.MessageProducer: void send(javax.jms.Message,javax.jms.CompletionListener)>\r\n<javax.jms.MessageProducer: void setDeliveryDelay(long)>\r\n<javax.jms.MessageProducer: long getDeliveryDelay()>\r\n<javax.jms.MessageProducer: void send(javax.jms.Destination,javax.jms.Message,int,int,long,javax.jms.CompletionListener)>\r\n<javax.jms.Session: javax.jms.MessageConsumer createDurableConsumer(javax.jms.Topic,java.lang.String,java.lang.String,boolean)>\r\n<javax.jms.Session: javax.jms.MessageConsumer createSharedDurableConsumer(javax.jms.Topic,java.lang.String)>\r\n<javax.jms.Session: javax.jms.MessageConsumer createSharedConsumer(javax.jms.Topic,java.lang.String,java.lang.String)>\r\n<javax.jms.Session: javax.jms.MessageConsumer createSharedDurableConsumer(javax.jms.Topic,java.lang.String,java.lang.String)>\r\n<javax.jms.Session: javax.jms.MessageConsumer createSharedConsumer(javax.jms.Topic,java.lang.String)>\r\n<javax.jms.Session: javax.jms.MessageConsumer createDurableConsumer(javax.jms.Topic,java.lang.String)>\r\n<javax.jms.XAConnectionFactory: javax.jms.XAJMSContext createXAContext(java.lang.String,java.lang.String)>\r\n<javax.jms.XAConnectionFactory: javax.jms.XAJMSContext createXAContext()>\r\n\r\n\r\n2. Risk for jar-pair:<commons-beanutils:commons-beanutils-core:1.8.0:><commons-beanutils:commons-beanutils:1.9.3:>\r\n methods that only exist in commons-beanutils:commons-beanutils-core:1.8.0:: [org.apache.activemq:activemq-amqp:5.15.3:->org.apache.activemq:activemq-leveldb-store:5.15.3:->org.apache.hadoop:hadoop-core:1.0.0:->commons-configuration:commons-configuration:1.6:->commons-beanutils:commons-beanutils-core:1.8.0:]\r\n<org.apache.commons.beanutils.BasicDynaBean: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.BasicDynaClass: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.BeanUtilsBean: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.ConvertUtilsBean: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.ConvertUtilsBean2: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: org.apache.commons.beanutils.DynaProperty[] getDynaProperties()>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: java.lang.String toString(java.lang.Object)>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: boolean containsKey(java.lang.Object)>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: java.util.Set keySet()>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: boolean isEmpty()>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: org.apache.commons.beanutils.DynaBean getDynaBean()>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: int size()>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: void putAll(java.util.Map)>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: java.util.Collection values()>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: void clear()>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: boolean containsValue(java.lang.Object)>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: java.lang.Object get(java.lang.Object)>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: java.util.Set entrySet()>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: java.lang.Object remove(java.lang.Object)>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: java.lang.Object put(java.lang.Object,java.lang.Object)>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: boolean isReadOnly()>\r\n<org.apache.commons.beanutils.DynaProperty: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.JDBCDynaClass: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.LazyDynaBean: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.LazyDynaClass: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.LazyDynaList: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.MappedPropertyDescriptor: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.MethodUtils: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.PropertyUtilsBean: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.WeakFastHashMap$CollectionView: org.apache.commons.beanutils.WeakFastHashMap access$500(org.apache.commons.beanutils.WeakFastHashMap$CollectionView)>\r\n<org.apache.commons.beanutils.WrapDynaClass: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.WrapDynaClass: void <init>(java.lang.Class)>\r\n<org.apache.commons.beanutils.converters.AbstractConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.AbstractConverter: java.lang.Class primitive(java.lang.Class)>\r\n<org.apache.commons.beanutils.converters.ArrayConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.BigDecimalConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.BigIntegerConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.BooleanArrayConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.BooleanConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.ByteConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.CalendarConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.CharacterConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.ClassConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.DateConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.DateTimeConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.DoubleConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.FileConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.FloatConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.IntegerConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.LongConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.NumberConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.NumberConverter: java.lang.Number toNumber(java.lang.Class,java.lang.Class,java.lang.Number)>\r\n<org.apache.commons.beanutils.converters.ShortConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.SqlDateConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.SqlTimeConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.SqlTimestampConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.StringConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.converters.URLConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.locale.BaseLocaleConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.locale.LocaleBeanUtilsBean: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.locale.LocaleConvertUtilsBean: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.locale.converters.DateLocaleConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.locale.converters.DecimalLocaleConverter: java.lang.Class class$(java.lang.String)>\r\n<org.apache.commons.beanutils.locale.converters.StringLocaleConverter: java.lang.Class class$(java.lang.String)>\r\n methods that only exist in commons-beanutils:commons-beanutils:1.9.3:: [commons-beanutils:commons-beanutils:1.9.3:]\r\n<org.apache.commons.beanutils.BeanUtilsBean$1: org.apache.commons.beanutils.BeanUtilsBean initialValue()>\r\n<org.apache.commons.beanutils.BeanUtilsBean: java.lang.Class dynaPropertyType(org.apache.commons.beanutils.DynaProperty,java.lang.Object)>\r\n<org.apache.commons.beanutils.BeanUtilsBean: java.lang.Object convertForCopy(java.lang.Object,java.lang.Class)>\r\n<org.apache.commons.beanutils.ConstructorUtils: java.lang.Object[] toArray(java.lang.Object)>\r\n<org.apache.commons.beanutils.ConvertUtils: java.lang.Class primitiveToWrapper(java.lang.Class)>\r\n<org.apache.commons.beanutils.DynaBeanMapDecorator: java.lang.Object convertKey(java.lang.String)>\r\n<org.apache.commons.beanutils.JDBCDynaClass: void setUseColumnLabel(boolean)>\r\n<org.apache.commons.beanutils.LazyDynaList: org.apache.commons.beanutils.LazyDynaMap createDynaBeanForMapProperty(java.lang.Object)>\r\n<org.apache.commons.beanutils.LazyDynaList: org.apache.commons.beanutils.DynaClass getDynaClass()>\r\n<org.apache.commons.beanutils.MappedPropertyDescriptor$MappedMethodReference: java.lang.Class reLoadClass(java.lang.String)>\r\n<org.apache.commons.beanutils.MethodUtils: java.lang.Object[] toArray(java.lang.Object)>\r\n<org.apache.commons.beanutils.PropertyUtils: void addBeanIntrospector(org.apache.commons.beanutils.BeanIntrospector)>\r\n<org.apache.commons.beanutils.PropertyUtils: boolean removeBeanIntrospector(org.apache.commons.beanutils.BeanIntrospector)>\r\n<org.apache.commons.beanutils.PropertyUtils: void resetBeanIntrospectors()>\r\n<org.apache.commons.beanutils.PropertyUtilsBean: org.apache.commons.beanutils.BeanIntrospectionData fetchIntrospectionData(java.lang.Class)>\r\n<org.apache.commons.beanutils.PropertyUtilsBean: java.util.List toObjectList(java.lang.Object)>\r\n<org.apache.commons.beanutils.PropertyUtilsBean: void addBeanIntrospector(org.apache.commons.beanutils.BeanIntrospector)>\r\n<org.apache.commons.beanutils.PropertyUtilsBean: void resetBeanIntrospectors()>\r\n<org.apache.commons.beanutils.PropertyUtilsBean: java.util.Map toPropertyMap(java.lang.Object)>\r\n<org.apache.commons.beanutils.PropertyUtilsBean: org.apache.commons.beanutils.BeanIntrospectionData getIntrospectionData(java.lang.Class)>\r\n<org.apache.commons.beanutils.PropertyUtilsBean: boolean removeBeanIntrospector(org.apache.commons.beanutils.BeanIntrospector)>\r\n<org.apache.commons.beanutils.ResultSetDynaClass: org.apache.commons.beanutils.DynaProperty[] getDynaProperties()>\r\n<org.apache.commons.beanutils.ResultSetDynaClass: org.apache.commons.beanutils.DynaProperty getDynaProperty(java.lang.String)>\r\n<org.apache.commons.beanutils.ResultSetDynaClass: void <init>(java.sql.ResultSet,boolean,boolean)>\r\n<org.apache.commons.beanutils.ResultSetDynaClass: org.apache.commons.beanutils.DynaBean newInstance()>\r\n<org.apache.commons.beanutils.ResultSetDynaClass: void setUseColumnLabel(boolean)>\r\n<org.apache.commons.beanutils.ResultSetDynaClass: java.lang.String getName()>\r\n<org.apache.commons.beanutils.ResultSetIterator: org.apache.commons.beanutils.DynaBean next()>\r\n<org.apache.commons.beanutils.RowSetDynaClass: void <init>(java.sql.ResultSet,boolean,boolean)>\r\n<org.apache.commons.beanutils.RowSetDynaClass: org.apache.commons.beanutils.DynaProperty getDynaProperty(java.lang.String)>\r\n<org.apache.commons.beanutils.RowSetDynaClass: org.apache.commons.beanutils.DynaProperty[] getDynaProperties()>\r\n<org.apache.commons.beanutils.RowSetDynaClass: void setUseColumnLabel(boolean)>\r\n<org.apache.commons.beanutils.RowSetDynaClass: void <init>(java.sql.ResultSet,boolean,int,boolean)>\r\n<org.apache.commons.beanutils.RowSetDynaClass: org.apache.commons.beanutils.DynaBean newInstance()>\r\n<org.apache.commons.beanutils.RowSetDynaClass: java.lang.String getName()>\r\n<org.apache.commons.beanutils.WeakFastHashMap$EntrySet: java.util.Map$Entry iteratorNext(java.util.Map$Entry)>\r\n<org.apache.commons.beanutils.WrapDynaBean: void <init>(java.lang.Object,org.apache.commons.beanutils.WrapDynaClass)>\r\n<org.apache.commons.beanutils.WrapDynaBean: org.apache.commons.beanutils.PropertyUtilsBean getPropertyUtils()>\r\n<org.apache.commons.beanutils.WrapDynaClass$1: java.util.Map initialValue()>\r\n<org.apache.commons.beanutils.WrapDynaClass: org.apache.commons.beanutils.PropertyUtilsBean getPropertyUtilsBean()>\r\n<org.apache.commons.beanutils.WrapDynaClass: void <init>(java.lang.Class,org.apache.commons.beanutils.PropertyUtilsBean)>\r\n<org.apache.commons.beanutils.WrapDynaClass: java.util.Map getClassesCache()>\r\n<org.apache.commons.beanutils.WrapDynaClass: org.apache.commons.beanutils.WrapDynaClass createDynaClass(java.lang.Class,org.apache.commons.beanutils.PropertyUtilsBean)>\r\n<org.apache.commons.beanutils.WrapDynaClass: java.util.Map access$100()>\r\n<org.apache.commons.beanutils.converters.AbstractConverter: java.lang.Object convertToDefaultType(java.lang.Class,java.lang.Object)>\r\n<org.apache.commons.beanutils.converters.AbstractConverter: org.apache.commons.beanutils.ConversionException conversionException(java.lang.Class,java.lang.Object)>\r\n<org.apache.commons.beanutils.converters.NumberConverter: java.lang.Object toNumber(java.lang.Class,java.lang.Class,java.lang.Number)>\r\n<org.apache.commons.beanutils.locale.BaseLocaleConverter: java.lang.Object getDefaultAs(java.lang.Class)>\r\n<org.apache.commons.beanutils.locale.BaseLocaleConverter: java.lang.Object checkConversionResult(java.lang.Class,java.lang.Object)>\r\n<org.apache.commons.beanutils.locale.LocaleBeanUtilsBean$1: org.apache.commons.beanutils.locale.LocaleBeanUtilsBean initialValue()>\r\n\r\n \r\n\r\n \r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=PandaMonkey","name":"PandaMonkey","key":"pandamonkey","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34049","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34049","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34049","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34049"},"displayName":"PandaMonkey","active":true,"timeZone":"Asia/Hong_Kong"},"created":"2018-02-12T05:50:16.748+0000","updated":"2018-02-12T05:50:16.748+0000"}],"maxResults":1,"total":1,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6898/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3q22f:"}}