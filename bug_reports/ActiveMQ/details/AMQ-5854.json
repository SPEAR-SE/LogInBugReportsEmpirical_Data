{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12839158","self":"https://issues.apache.org/jira/rest/api/2/issue/12839158","key":"AMQ-5854","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329848","id":"12329848","name":"5.13.0","archived":false,"released":true,"releaseDate":"2015-12-03"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2015-08-10T17:07:31.218+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Sun Nov 22 18:37:16 UTC 2015","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_8721397255_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2015-09-28T14:13:10.749+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-5854/watchers","watchCount":8,"isWatching":false},"created":"2015-06-19T15:36:33.530+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326455","id":"12326455","name":"5.9.1","archived":false,"released":true,"releaseDate":"2014-04-04"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12329390","id":"12329390","name":"5.10.2","archived":false,"released":true,"releaseDate":"2015-02-17"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12329382","id":"12329382","name":"5.11.1","archived":false,"released":true,"releaseDate":"2015-02-17"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-11-22T18:37:16.231+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12313896","id":"12313896","name":"JMS client"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"Use case :\n                With Spring DMLC, Read a jms message in a queue, produce a jms message in an output queue and write data in database.\n\nProblem description :\n\n                Due to hight CPU usage, the inactity monitor closes connections between clients and broker while 16 messages were processed.\n\n{noformat}\n2015-06-01 04:39:01,130 | WARN  | Transport Connection to: tcp://*** failed: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too (>30000) long: tcp://*** | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ InactivityMonitor Worker\n{noformat}\n                15 messages are rolled back and redilevered to another consummer.\n\n                In the log we got 15 warnings :\n{noformat}\nActiveMQMessageConsumer   |WARN |jmsContainer-173|rolling back transaction (XID:***) post failover recovery. 1 previously delivered message(s) not replayed to consumer: ***\n{noformat}\n                But one message is not rolled back (the transaction commit) and is also redileverd to another consummer. So it's processed twice by two different consummers (two inserts in database and two output JMS messages generated) and is not deduplicated.\n\n                In the activeMq log we got the message :\n\n{noformat}\nWARN  | Async error occurred:  | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: tcp:///***\n                       javax.jms.JMSException: Unmatched acknowledge: MessageAck {commandId = 6665, responseRequired = false, ackType = 2, consumerId = ID:***, firstMessageId = ID:***-50800-1433109620591-1:2:31356:1:1, lastMessageId = ID:***-50800-1433109620591-1:2:31356:1:1, destination = queue://***, transactionId = XID:[1096044365,globalId=47524f55505f3030303038736572766963657472616974656d656e7431363536373030343133,branchId=47524f55505f3030303038736572766963657472616974656d656e743137343737], messageCount = 1, poisonCause = null}; Could not find Message-ID ID:***-50800-1433109620591-1:2:31356:1:1 in dispatched-list (start of ack)\n{noformat}\n\n                For this duplicated message, the failover occur during prepare phase of commit :\n\n{noformat}\n[{2015/06/01 04:39:50,322 |FailoverTransport         |WARN |jmsContainer-152|Transport (tcp://***) failed, reason:  , attempting to automatically reconnect}]\norg.apache.activemq.transport.InactivityIOException: Cannot send, channel has already failed: ***\n                at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:297)\n                at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:286)\n                at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)\n                at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)\n                at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:658)\n                at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)\n                at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n                at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1321)\n                at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1315)\n                at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1933)\n                at org.apache.activemq.ActiveMQSession.sendAck(ActiveMQSession.java:2099)\n                at org.apache.activemq.ActiveMQSession.sendAck(ActiveMQSession.java:2094)\n                at org.apache.activemq.ActiveMQMessageConsumer.acknowledge(ActiveMQMessageConsumer.java:1083)\n                at org.apache.activemq.ActiveMQMessageConsumer$5.beforeEnd(ActiveMQMessageConsumer.java:1041)\n                at org.apache.activemq.TransactionContext.beforeEnd(TransactionContext.java:202)\n                at org.apache.activemq.TransactionContext.end(TransactionContext.java:409)\n                at com.atomikos.datasource.xa.XAResourceTransaction.suspend(XAResourceTransaction.java:457)\n                at com.atomikos.datasource.xa.XAResourceTransaction.prepare(XAResourceTransaction.java:608)\n                at com.atomikos.icatch.imp.PrepareMessage.send(PrepareMessage.java:61)\n                at com.atomikos.icatch.imp.PropagationMessage.submit(PropagationMessage.java:111)\n                at com.atomikos.icatch.imp.Propagator$PropagatorThread.run(Propagator.java:87)\n                at com.atomikos.icatch.imp.Propagator.submitPropagationMessage(Propagator.java:66)\n                at com.atomikos.icatch.imp.ActiveStateHandler.prepare(ActiveStateHandler.java:173)\n                at com.atomikos.icatch.imp.CoordinatorImp.prepare(CoordinatorImp.java:832)\n                at com.atomikos.icatch.imp.CoordinatorImp.terminate(CoordinatorImp.java:1159)\n                at com.atomikos.icatch.imp.CompositeTerminatorImp.commit(CompositeTerminatorImp.java:92)\n                at com.atomikos.icatch.jta.TransactionImp.commit(TransactionImp.java:236)\n                at com.atomikos.icatch.jta.TransactionManagerImp.commit(TransactionManagerImp.java:498)\n                at com.atomikos.icatch.jta.UserTransactionImp.commit(UserTransactionImp.java:129)\n                at org.springframework.transaction.jta.JtaTransactionManager.doCommit(JtaTransactionManager.java:1011)\n                at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:755)\n                at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:724)\n                at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)\n                at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1101)\n                at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:995)\n                at java.lang.Thread.run(Thread.java:761)\n{noformat}\n\nOur analysis :\n\n                We think that the duplicate message is caused by the failover during the prepare phase of the commit so we modify the source code to reproduce the case.\n\n                Our modifications in config to produce failovers:\n                               broker : transport.useKeepAlive=false\n                               client : wireFormat.maxInactivityDuration=5000\n\n\n                We add Thread.sleep in the source code of org.apache.activemq.ActiveMQMessageConsumer to force failover to be done exactly where we think it causes problems :\n\n{code:title=org.apache.activemq.ActiveMQMessageConsumer#acknowledge()|borderStyle=solid}                \n\n                    public void acknowledge() throws JMSException {\n                               clearDeliveredList();\n                               waitForRedeliveries();\n                               synchronized(deliveredMessages) {\n\n                                   // BEGIN MODIFIED CODE\n                                   LOG.warn(\"start sleeping 20 seconds to test failover\");\n                                   try{\n                                       Thread.sleep(1000 * 20 );\n                                   }catch (InterruptedException e){\n                                       LOG.error(\"Exception :\",e);\n                                   }\n                                   LOG.warn(\"end sleeping 20 seconds to test failover\");\n                                   // END MODIFIED CODE\n\n                                   // Acknowledge all messages so far.\n                                   MessageAck ack = makeAckForAllDeliveredMessages(MessageAck.STANDARD_ACK_TYPE);\n                                   if (ack == null)\n                                       return; // no msgs\n\n                                   if (session.getTransacted()) {\n                                       rollbackOnFailedRecoveryRedelivery();\n                                       session.doStartTransaction();\n                                       ack.setTransactionId(session.getTransactionContext().getTransactionId());\n                                   }\n\n                                   pendingAck = null;\n                                    session.sendAck(ack);\n\n                                   // Adjust the counters\n                                   deliveredCounter = Math.max(0, deliveredCounter - deliveredMessages.size());\n                                   additionalWindowSize = Math.max(0, additionalWindowSize - deliveredMessages.size());\n\n                                   if (!session.getTransacted()) {\n                                       deliveredMessages.clear();\n                                   }\n                               }\n                    }\n{code}                               \n                \n                With these changes on the configuration and the code, the problem is easily reproduced.\n\n                We also try with transactedIndividualAck=true, and we add a Thread.sleep in the code :\n\n{code:title=org.apache.activemq.ActiveMQMessageConsumer#registerSync()|borderStyle=solid}                \n                    private void registerSync() throws JMSException {\n                               session.doStartTransaction();\n                               if (!synchronizationRegistered) {\n                                   synchronizationRegistered = true;\n                                   session.getTransactionContext().addSynchronization(new Synchronization() {\n                                       @Override\n                                       public void beforeEnd() throws Exception {\n                                           if (transactedIndividualAck) {\n                                               clearDeliveredList();\n                                               waitForRedeliveries();\n                                               synchronized(deliveredMessages) {\n                                                   \n                                                   // BEGIN MODIFIED CODE\n                                                   LOG.warn(\"start sleeping 20 seconds to test failover\");\n                                                   try{\n                                                       Thread.sleep(1000 * 20 );\n                                                   }catch (InterruptedException e){\n                                                       LOG.error(\"Exception :\",e);\n                                                   }\n                                                   LOG.warn(\"end sleeping 20 seconds to test failover\");\n                                                   // END MODIFIED CODE                            \n\n                                                   rollbackOnFailedRecoveryRedelivery();\n                                               }\n                                           } else {\n                                               acknowledge();\n                                           }\n                                           synchronizationRegistered = false;\n                                       }\n\n                                       @Override\n                                       public void afterCommit() throws Exception {\n                                           commit();\n                                           synchronizationRegistered = false;\n                                       }\n\n                                       @Override\n                                       public void afterRollback() throws Exception {\n                                           rollback();\n                                           synchronizationRegistered = false;\n                                       }\n                                   });\n                               }\n                    }\n{code}                                               \n                With these modifications, we still get duplicates messages.\n\n                We think that the problem is that the statement synchronized(deliveredMessages) prevents the call of clearDeliveredList() by another ActiveMQConnection thread that clears messages in progress.\n                By adding logs we observe that a thread is waiting deliveredMessages ‘s lock in clearDeliveredList() method.\n\n                \nQuestion :\n                \n                We tried fixes described in https://issues.apache.org/jira/browse/AMQ-5068 and https://issues.apache.org/jira/browse/AMQ-3519 but it doesn’t help to solve our problem.\n                Is there a workaround or a config parameter that can help to prevent this problem ?\n                \n                We are working on our side to find a correction. An option may be to force rolling back transaction if there is a failover during the prepare phase of commit in ConnectionStateTracker.restoreTransactions().\n\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12753991","id":"12753991","filename":"ActiveMQMessageConsumer-5.10.2-ModifyWithThreadSleep.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hakim.acharifi","name":"hakim.acharifi","key":"hakim.acharifi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hakim.acharifi","active":true,"timeZone":"Europe/Paris"},"created":"2015-09-03T14:03:48.525+0000","size":68147,"mimeType":"text/x-java","content":"https://issues.apache.org/jira/secure/attachment/12753991/ActiveMQMessageConsumer-5.10.2-ModifyWithThreadSleep.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12753992","id":"12753992","filename":"ActiveMQMessageConsumer-5.11.1-ModifyWithThreadSleep.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hakim.acharifi","name":"hakim.acharifi","key":"hakim.acharifi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hakim.acharifi","active":true,"timeZone":"Europe/Paris"},"created":"2015-09-03T14:03:48.529+0000","size":68730,"mimeType":"text/x-java","content":"https://issues.apache.org/jira/secure/attachment/12753992/ActiveMQMessageConsumer-5.11.1-ModifyWithThreadSleep.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12753990","id":"12753990","filename":"amq5854.tar.gz","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hakim.acharifi","name":"hakim.acharifi","key":"hakim.acharifi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hakim.acharifi","active":true,"timeZone":"Europe/Paris"},"created":"2015-09-03T14:03:48.517+0000","size":3205982,"mimeType":"application/gzip","content":"https://issues.apache.org/jira/secure/attachment/12753990/amq5854.tar.gz"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Duplicate messages when failover is done during prepare phase of two phase commit.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michael.s","name":"michael.s","key":"michael.s","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michael.s","name":"michael.s","key":"michael.s","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Ubuntu or AIX\nActiveMQ 5.9.1 (problem is reproduced in 5.10.2 and 5.11.1)\nSpring DMLC\nXA transactions with atomikos 3.7.0 (problem is also reproduced with 3.9.15)\nPersistent messages\nMultithreading (this problem occur when there is at least 2 consummers on a queue)\n","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/14605833","id":"14605833","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michael.s","name":"michael.s","key":"michael.s","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael","active":true,"timeZone":"Etc/UTC"},"body":"We think that our issue is related to issue AMQ-2590.\n\nIn the AMQ-2590 issue, only one phase commit transactions are rolled back in case of failover.\n\nWe change the ConnectionStateTracker code (in 5.10.2) to rollback others type of transaction (BEGIN and PREPARE).\n\n\n{code:title=org.apache.activemq.state.ConnectionStateTracker.java|borderStyle=solid}\n    private void restoreTransactions(Transport transport, ConnectionState connectionState) throws IOException {\n        Vector<TransactionInfo> toRollback = new Vector<TransactionInfo>();\n        for (TransactionState transactionState : connectionState.getTransactionStates()) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"tx: \" + transactionState.getId());\n            }\n\n            // rollback any completed transactions - no way to know if commit got there\n            // or if reply went missing\n            //\n            if (!transactionState.getCommands().isEmpty()) {\n                Command lastCommand = transactionState.getCommands().get(transactionState.getCommands().size() - 1);\n                if (lastCommand instanceof TransactionInfo) {\n                    TransactionInfo transactionInfo = (TransactionInfo) lastCommand;\n                    if (transactionInfo.getType() == TransactionInfo.COMMIT_ONE_PHASE\n                            // BEGIN MODIFIED CODE\t\t\t\t\t\n                            || transactionInfo.getType() == TransactionInfo.BEGIN\n                            || transactionInfo.getType() == TransactionInfo.PREPARE\n                            // END MODIFIED CODE\t\t\t\t\t\t\t\n                            ) {\n                        if (LOG.isDebugEnabled()) {\n                            LOG.debug(\"rolling back potentially completed tx: \" + transactionState.getId());\n                        }\n                        toRollback.add(transactionInfo);\n                        continue;\n                    }\n                }\n            }\n{code}\n\nWith this change we can not reproduce our duplicated messages issue.\n\nIs there a specific reason why only one phase transactions are rolled back in AMQ-2590 ?\n\nWe are working on our side to provide a test case to reproduce the duplicated message issue.\n\nThanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michael.s","name":"michael.s","key":"michael.s","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael","active":true,"timeZone":"Etc/UTC"},"created":"2015-06-29T16:19:32.088+0000","updated":"2015-06-29T16:20:01.931+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/14680372","id":"14680372","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nannou9","name":"nannou9","key":"nannou9","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Piotr Klimczak","active":true,"timeZone":"Europe/London"},"body":"Hi Michael!\n\n1st of all thank you for your work you've done so far, it is very helpful.\n\nSo basing on your work, I was able to reproduce the problem with Atomikos 3.9.26 (which include important fix for rollback to fail) but also confirmed this problem to occur with Apache Geronimo transaction manger.\nThis proves that problem is purely ActiveMQ related.\nI've also tested JBoss A-MQ 6.1 (5.9 based) and 6.2 (5.11 based)- all affected with same problem!\n\nWhat is important to say here is that this problem will occur significantly more often on slow envs which prone to freeze/restart (virtual machines especially).\n\nLet's see now what will happen and whether someone will grab that task.\n\nThanks\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nannou9","name":"nannou9","key":"nannou9","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Piotr Klimczak","active":true,"timeZone":"Europe/London"},"created":"2015-08-10T17:07:31.218+0000","updated":"2015-08-10T17:07:31.218+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/14729084","id":"14729084","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hakim.acharifi","name":"hakim.acharifi","key":"hakim.acharifi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hakim.acharifi","active":true,"timeZone":"Europe/Paris"},"body":"In order to reproduce the AMQ5854 issue, we have created a maven project amq5854 (see the attached amq5854.tar.gz).\n\nThe abnormal behavior has been reproduced in 2 versions of AMQ : 5.10.2 and 5.11.1\n\nThe goal is to feign an overloaded CPU by modifying the activemq-client-xxx.jar with a sleep of 20 seconds during the consumption of the message.\n\nPrerequisites to be able to reproduce the abnormal behavior :\n-\tConsumer : failover, wireFormat.maxInactivityDuration=5000 and RedeliveryPolicy with a maximumRedeliveries of 3 times\n-\tBroker : transport.useKeepAlive=false\n-\tactivemq-client-xxx.jar : add Thread.sleep(20*1000) on the org.apache.activemq.ActiveMQMessageConsumer (see the attached sources) \n\n\nUse case :\n \nA producer send a message to the INPUT_QUEUE queue on an embedded broker.\nThen a consumer implemented by a Spring Listener consume this message from the INPUT_QUEUE, transform it and send it to another queue (OUTPUT_QUEUE).\nThe read from INPUT_QUEUE and the write to OUTPUT_QUEUE are included in a same transaction XA.\n\nWith the activemq-client modification, the consumption of the message is superior of 20 seconds and the maxInactivatyDuration for the consumer is 5 seconds.\nHence, we will be always in the case where an InactivityIOException prevent the arrival of the message on the OUTPUT_QUEUE because of the rollback transaction request.\nSo the expected result is to have 1 message in DLQ (Dead Letter Queue) and no message in the OUTPUT_QUEUE.\nBut due to the abnormal behavior, Activemq do not rollback the write on the OUTPUT_QUEUE. \nSo After 3 retries,  we have 1 message on DLQ and  3 duplicate messages on the OUTPUT_QUEUE.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hakim.acharifi","name":"hakim.acharifi","key":"hakim.acharifi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hakim.acharifi","active":true,"timeZone":"Europe/Paris"},"created":"2015-09-03T13:58:05.373+0000","updated":"2015-09-03T13:58:05.373+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/14729092","id":"14729092","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hakim.acharifi","name":"hakim.acharifi","key":"hakim.acharifi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hakim.acharifi","active":true,"timeZone":"Europe/Paris"},"body":"maven project amq5854 and the modified activemq-client-xxx.jar ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hakim.acharifi","name":"hakim.acharifi","key":"hakim.acharifi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hakim.acharifi","active":true,"timeZone":"Europe/Paris"},"created":"2015-09-03T14:03:48.532+0000","updated":"2015-09-03T14:03:48.532+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/14904713","id":"14904713","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"[~michael.s] the intent of the tracker to to maintain the transaction state, and recover it, if it can. If the commit request gets a failure then it is impossible to know if the message got there or if the reply was lost so notifying the client is the only option. Otherwise failover can try and recreate the transaction state and allow it to complete.\nIn hindsight, trying to maintain transaction semantics across failover (especially in the context of multiple consumers) seems too complex.\nI want to investigate the fix for this issue and see if it is better to implement the fix or remove this feature altogether and just rollback any indoubt transaction on failover.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2015-09-23T15:58:15.071+0000","updated":"2015-09-23T15:58:15.071+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/14933301","id":"14933301","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit 8d982479e9a5579fc3f6da04109a1b3ef69431eb in activemq's branch refs/heads/master from [~gtully]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8d98247 ]\n\nhttps://issues.apache.org/jira/browse/AMQ-5854 - fix and test. Ensure transaction rollback if there are pending acks during a failover reconnect. Reliably tracking pending acks to eusure possible redelivery is too complex in the context of acks getting dropped by failover or ignored by the subscription, in addition to being sent async. Couple that with multiple consumers on the same connection and the locking of message delivery; only safe course is to ensure rollback outcome.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2015-09-28T13:41:35.923+0000","updated":"2015-09-28T13:41:35.923+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/14933341","id":"14933341","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"I have implemented a rollback only option on the transaction context that is triggered by a failover, the initial disconnect that will trigger a reconnect.\nIf there are pending acks, so messages that need an ack in the transaction, a rollback is forced. This seems the only sensible option.\nThere is a new unit test that simulates a delayed or slow ack, consumer side, with an additional transaction synchronization and can reliably reproduce the missed ack.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2015-09-28T14:13:10.776+0000","updated":"2015-09-28T14:16:01.315+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/14933384","id":"14933384","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nannou9","name":"nannou9","key":"nannou9","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Piotr Klimczak","active":true,"timeZone":"Europe/London"},"body":"Excellent news!\nThanks Gary!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nannou9","name":"nannou9","key":"nannou9","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Piotr Klimczak","active":true,"timeZone":"Europe/London"},"created":"2015-09-28T14:43:50.891+0000","updated":"2015-09-28T14:43:50.891+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/14935075","id":"14935075","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit 92e1f60d984d0e29eade47dbb6d2d30d838254c2 in activemq's branch refs/heads/master from [~gtully]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=92e1f60 ]\n\nhttps://issues.apache.org/jira/browse/AMQ-5854 - tidy up test\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2015-09-29T12:15:29.516+0000","updated":"2015-09-29T12:15:29.516+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/14936603","id":"14936603","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hakim.acharifi","name":"hakim.acharifi","key":"hakim.acharifi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hakim.acharifi","active":true,"timeZone":"Europe/Paris"},"body":"Thanks Gary for fixing this issue !\n\nLooks okay to us.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hakim.acharifi","name":"hakim.acharifi","key":"hakim.acharifi","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"hakim.acharifi","active":true,"timeZone":"Europe/Paris"},"created":"2015-09-30T09:05:51.483+0000","updated":"2015-09-30T09:05:51.483+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/14936683","id":"14936683","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"good to know. thank for the verification","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2015-09-30T10:25:27.154+0000","updated":"2015-09-30T10:25:27.154+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/14936693","id":"14936693","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit fc25535748fb8dbaea588203086c4802d1ccf091 in activemq's branch refs/heads/master from [~gtully]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fc25535 ]\n\nhttps://issues.apache.org/jira/browse/AMQ-5854 - fix intermittent test failure\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2015-09-30T10:41:49.108+0000","updated":"2015-09-30T10:41:49.108+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12839158/comment/15021120","id":"15021120","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit de5d0d9430838948196f573c5278c75fbee9f25e in activemq's branch refs/heads/master from [~cshannon]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=de5d0d9 ]\n\nhttps://issues.apache.org/jira/browse/AMQ-5854\n\nFix intermittent test failure caused by the test reconnecting before\nthe failure assertion had a chance to assert the expected failure\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2015-11-22T18:37:16.231+0000","updated":"2015-11-22T18:37:16.231+0000"}],"maxResults":13,"total":13,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-5854/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2g9qf:"}}