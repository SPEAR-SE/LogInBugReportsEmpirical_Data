{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12635662","self":"https://issues.apache.org/jira/rest/api/2/issue/12635662","key":"AMQ-4361","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12323932","id":"12323932","name":"5.9.0","archived":false,"released":true,"releaseDate":"2013-10-21"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-03-06T22:43:00.617+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Oct 22 14:51:16 UTC 2015","customfield_12310420":"316155","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_2413307885_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2013-04-03T19:23:58.345+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-4361/watchers","watchCount":6,"isWatching":false},"created":"2013-03-06T21:02:10.507+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12317974","id":"12317974","description":"Next v5 maintenance release","name":"5.6.0","archived":false,"released":true,"releaseDate":"2012-05-07"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12323282","id":"12323282","description":"Maintenance release with new AMQP support and smaller modules","name":"5.8.0","archived":false,"released":true,"releaseDate":"2013-02-11"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-10-22T14:51:16.655+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313896","id":"12313896","name":"JMS client"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"TestCase on github: \n\nhttps://github.com/samhendley/activemq-close-deadlock-bug\n\nThe deadlock occurs when we are using TcpTransport to a flow-controlled queue and we then try to gracefully shutdown the application. The close operation hangs forever because it is trying to send a \"close packet\" to the server. It never gets the chance to send that request because the socket is blocked by the publishing thread. This stops my publisher from shutting down and causes us to orphan threads during shutdown.\n\nI have verified this bug occurs on atleast activemq 5.6.0 and 5.8.0 and on linux and windows using JDK 1.6.\n\nI don't need a fix for the bug necessarily, just a way to gracefully shutdown my publisher if I get into this state.\n\nPartial Stack Trace During failure\n\"ClosingThread\" prio=6 tid=0x045ce000 nid=0xa84 waiting on condition [0x04ddf000]\n   java.lang.Thread.State: WAITING (parking)\n    at sun.misc.Unsafe.park(Native Method)\n    - parking to wait for  <0x23fc52d8> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\n    at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:842)\n    at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)\n    at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)\n    at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)\n    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:66)\n    at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n    at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1304)\n    at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1298)\n    at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1901)\n    at org.apache.activemq.ActiveMQMessageProducer.close(ActiveMQMessageProducer.java:173)\n    at org.activemq.bug.DeadlockDuringCloseTest$2.run(DeadlockDuringCloseTest.java:83)\n    at java.lang.Thread.run(Thread.java:662)\n\n\"PublishingThread\" prio=6 tid=0x045cd800 nid=0xb84 runnable [0x04d8f000]\n   java.lang.Thread.State: RUNNABLE\n    at java.net.SocketOutputStream.socketWrite0(Native Method)\n    at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)\n    at java.net.SocketOutputStream.write(SocketOutputStream.java:136)\n    at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)\n    at java.io.DataOutputStream.flush(DataOutputStream.java:106)\n    at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:176)\n    at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:322)\n    at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:304)\n    at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)\n    at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)\n    at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)\n    at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)\n    at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1304)\n    at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1298)\n    at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1782)\n    - locked <0x23faa7d8> (a java.lang.Object)\n    at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:289)\n    at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:224)\n    at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:300)\n    at org.activemq.bug.DeadlockDuringCloseTest$1.run(DeadlockDuringCloseTest.java:63)\n    at java.lang.Thread.run(Thread.java:662)\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"316498","customfield_12312823":null,"summary":"Deadlock during close while publishing to flow-controlled queue","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Windows, Linux, JDK 1.6","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12635662/comment/13595224","id":"13595224","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ceposta","name":"ceposta","key":"ceposta","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ceposta&avatarId=15051","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ceposta&avatarId=15051","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ceposta&avatarId=15051","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ceposta&avatarId=15051"},"displayName":"Christian Posta","active":true,"timeZone":"America/Phoenix"},"body":"We can definitely check into this bug, but when sending async (or non-persistent) like you are, you may wish to consider using producer windows so you don't run into this type of producer flow control which blocks the entire connection.\n\nSee here:\n\nhttp://activemq.apache.org/producer-flow-control.html","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ceposta","name":"ceposta","key":"ceposta","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=ceposta&avatarId=15051","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ceposta&avatarId=15051","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ceposta&avatarId=15051","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ceposta&avatarId=15051"},"displayName":"Christian Posta","active":true,"timeZone":"America/Phoenix"},"created":"2013-03-06T22:43:00.617+0000","updated":"2013-03-06T22:43:57.016+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12635662/comment/13595234","id":"13595234","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"You should be able to interrupt the Thread that's blocked in the sync send call so that the application can shutdown normally.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2013-03-06T22:53:43.367+0000","updated":"2013-03-06T22:53:43.367+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12635662/comment/13595245","id":"13595245","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"body":"I had tried both of those tricks before without fixing the issue. The key was to do both at the same time. By turning on producer windowing I am not blocking on a socket write which means the Thread.interrupt will work because we blocking on a regular lock. I'll update the example project showing the workaround. That solves my immediate issue, is this otherwise considered a \"wont fix\"?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"created":"2013-03-06T23:01:53.898+0000","updated":"2013-03-06T23:01:53.898+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12635662/comment/13595248","id":"13595248","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"body":"To be clear: Thread.interrupt() while in SocketOutputStream.socketWrite doesn't work. I needed to be in the \"window blocking\" for thread.interrupt to work.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"created":"2013-03-06T23:03:27.614+0000","updated":"2013-03-06T23:03:27.614+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12635662/comment/13595254","id":"13595254","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"You're welcome to figure out a clever fix and submit a patch, not sure there's a whole lot that can be done in this case. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2013-03-06T23:09:44.326+0000","updated":"2013-03-06T23:09:44.326+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12635662/comment/13595953","id":"13595953","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"body":"So it makes sense to me why the non-producer window version blocks; native socket writes don't react to thread.interrupt(). I can't think of a way around that problem. The only thing I would imagine helping is to default to the other strategy and then require people to opt-in to this more dangerous (and less performant?) mode.\n\nHowever I was annoyed by the fact I need a Thread.interrupt even with the other version. This means I need to add an extra level of synchronized bookkeeping to perform a clean shutdown. I dug into the source code of activemq and the issue is there is a tight wait loop in org.apache.activemq.usage.MemoryUsage where it only checks the \"percentUsed\" field. I believe it should also look at the \"started\" field and bail if the usage counter has been stopped. I have to imagine that was what the developers of that class were planning, on the stop method they notify on the same mutex to wake up all the listeners (presumably so they can bail quickly). I looked at all of the implementations of Usage and they all seem to have the same issue. Shouldn't they all check \"started\" and bail if the condition they are trying to reach can never be reached?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"created":"2013-03-07T15:11:43.138+0000","updated":"2013-03-07T15:19:19.916+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12635662/comment/13595957","id":"13595957","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"Create a test case and propose a patch to the issue, we can review it and see if it makes sense / doesn't break anything.  Sounds like something that would be a benefit.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2013-03-07T15:17:59.368+0000","updated":"2013-03-07T15:17:59.368+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12635662/comment/13621235","id":"13621235","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"Fixed the MemoryUsage waitForSpace code throws an InterruptedException so that the windowed producer send will throw an JMSException when the Producer is closed.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2013-04-03T19:23:58.366+0000","updated":"2013-04-03T19:23:58.366+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12635662/comment/14969183","id":"14969183","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"body":"We recently updated to 5.12.0 and a test I had put in place to track the \"higher level\" shutdown started failing occasionally. I still haven't worked out the cause of that but I did try enabling ProducerWindowSize to verify the fix to this bug. So technically it closes quickly but it is throwing an IllegalMonitorStateException. There is a bug in the waitForSpace method where we don't relock the readLock if the waitForSpaceCondition throws.\n\n{code}\njava.lang.IllegalMonitorStateException: attempt to unlock read lock, not locked by current thread\n\tat java.util.concurrent.locks.ReentrantReadWriteLock$Sync.unmatchedUnlockException(ReentrantReadWriteLock.java:447)\n\tat java.util.concurrent.locks.ReentrantReadWriteLock$Sync.tryReleaseShared(ReentrantReadWriteLock.java:431)\n\tat java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared(AbstractQueuedSynchronizer.java:1340)\n\tat java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.unlock(ReentrantReadWriteLock.java:883)\n\tat org.apache.activemq.usage.MemoryUsage.waitForSpace(MemoryUsage.java:87)\n\tat org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:282)\n\tat org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:223)\n\tat org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:269)\n\tat org.springframework.jms.connection.CachedMessageProducer.send(CachedMessageProducer.java:181)\n\tat org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:636)\n\tat org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:607)\n\tat org.springframework.jms.core.JmsTemplate$3.doInJms(JmsTemplate.java:572)\n\tat org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:494)\n\tat org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:569)\n\tat org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:560)\n\tat com.sms.jms.FastInterruptibleSingleDestinationJmsOutClient.send(FastInterruptibleSingleDestinationJmsOutClient.java:77)\n\tat com.sms.jms.FastInterruptibleSingleDestinationJmsOutClient.publishAsBytesMessage(FastInterruptibleSingleDestinationJmsOutClient.java:68)\n\tat com.sms.jms.FastInterruptibleSingleDestinationJmsOutClientTest$2.run(FastInterruptibleSingleDestinationJmsOutClientTest.java:83)\n\tat java.lang.Thread.run(Thread.java:744)}}\n{code}\n\n{code}\npublic boolean waitForSpace(long timeout) throws InterruptedException {\n        if (parent != null) {\n            if (!parent.waitForSpace(timeout)) {\n                return false;\n            }\n        }\n        usageLock.readLock().lock();\n        try {\n            if (percentUsage >= 100) {\n                usageLock.readLock().unlock();\n                usageLock.writeLock().lock();\n                try {\n                    while (percentUsage >= 100 ) {\n                        waitForSpaceCondition.await(timeout, TimeUnit.MILLISECONDS);\n                    }\n                    // I believe this relocking needs to be in the finally block.\n                    usageLock.readLock().lock();\n                } finally {\n                    usageLock.writeLock().unlock();\n                }\n            }\n\n            return percentUsage < 100;\n        } finally {\n            usageLock.readLock().unlock();\n        }\n    }\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shendley","name":"shendley","key":"shendley","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sam hendley","active":true,"timeZone":"Etc/UTC"},"created":"2015-10-22T13:53:41.498+0000","updated":"2015-10-22T13:54:13.793+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12635662/comment/14969252","id":"14969252","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit 9ddd162d2584f39c8e3b303db91dc43143381ecc in activemq's branch refs/heads/master from [~gtully]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9ddd162 ]\n\nhttps://issues.apache.org/jira/browse/AMQ-4361 - implement suggestion from Sam hendley with thanks, avoid the IllegalMonitorStateException\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2015-10-22T14:50:24.759+0000","updated":"2015-10-22T14:50:24.759+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12635662/comment/14969255","id":"14969255","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"[~shendley] thanks, sorted that IllegalMonitorStateException","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2015-10-22T14:51:16.655+0000","updated":"2015-10-22T14:51:16.655+0000"}],"maxResults":11,"total":11,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-4361/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1ijzj:"}}