{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12708790","self":"https://issues.apache.org/jira/rest/api/2/issue/12708790","key":"AMQ-5150","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/8","id":"8","description":"The described issue is not actually a problem - it is as designed.","name":"Not A Problem"},"customfield_12312322":null,"customfield_12310220":"2014-04-17T10:13:42.884+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Apr 28 16:12:46 UTC 2014","customfield_12310420":"387113","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_1039632652_*|*_6_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2014-04-28T16:12:46.586+0000","workratio":0,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-5150/watchers","watchCount":4,"isWatching":false},"created":"2014-04-16T15:25:33.973+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":172800,"aggregatetimeoriginalestimate":172800,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326455","id":"12326455","name":"5.9.1","archived":false,"released":true,"releaseDate":"2014-04-04"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-04-28T16:12:46.620+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313893","id":"12313893","name":"Connector"}],"timeoriginalestimate":172800,"customfield_12310080":null,"description":"I have super simple scenario: one broker and one consumer with durable subscription.\nThis is the code of my consumer app: \n\n    package test;\n    \n    import javax.jms.Connection;\n    import javax.jms.ConnectionFactory;\n    import javax.jms.Destination;\n    import javax.jms.JMSException;\n    import javax.jms.Message;\n    import javax.jms.MessageConsumer;\n    import javax.jms.MessageListener;\n    import javax.jms.Session;\n    import javax.jms.TextMessage;\n    import javax.jms.Topic;\n    \n    import org.apache.activemq.ActiveMQConnectionFactory;\n    \n    import pojo.Event;\n    import pojo.StockUpdate;\n    \n    public class Consumer\n    {\n    \n        private static transient ConnectionFactory factory;\n        private transient Connection connection;\n        private transient Session session;\n        public static int counter = 0;\n    \n        public Consumer(String brokerURL) throws JMSException\n        {\n            factory = new ActiveMQConnectionFactory(brokerURL);\n            connection = factory.createConnection();\n            connection.setClientID(\"CLUSTER_CLIENT_1\");\n            connection.start();\n            session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n        }\n    \n        public void close() throws JMSException\n        {\n            if (connection != null)\n            {\n                connection.close();\n            }\n        }\n    \n        public static void main(String[] args) throws JMSException\n        {\n    \n            try\n            {\n                // extract topics from the rest of arguments\n                String[] topics = new String[2];\n                topics[0] = \"CSCO\";\n                topics[1] = \"ORCL\";\n    \n                // define connection URI\n                Consumer consumer = new Consumer(\"failover:(tcp://localhost:61616)?maxReconnectAttempts=-1&useExponentialBackOff=true\");\n    \n                for (String stock : topics)\n                {\n                    try\n                    {\n                        Destination destination = consumer.getSession().createTopic(\"STOCKS.\" + stock);\n                        // consumer.getSession().\n                        MessageConsumer messageConsumer = consumer.getSession().createDurableSubscriber((Topic) destination, \"STOCKS_DURABLE_CONSUMER_\" + stock);\n                        messageConsumer.setMessageListener(new Listener());\n                    }\n                    catch (JMSException e)\n                    {\n                        e.printStackTrace();\n                    }\n                }\n            }\n            catch (Throwable t)\n            {\n                t.printStackTrace();\n            }\n    \n        }\n    \n        public Session getSession()\n        {\n            return session;\n        }\n    \n    }\n    \n    class Listener implements MessageListener\n    {\n    \n        public void onMessage(Message message)\n        {\n            try\n            {\n                TextMessage textMessage = (TextMessage) message;\n                String json = textMessage.getText();\n                Event event = StockUpdate.fromJSON(json, StockUpdate.class);\n                System.out.println(\"Consumed message #:\" + ++Consumer.counter + \"\\n\" + event);\n            }\n            catch (Exception e)\n            {\n                e.printStackTrace();\n            }\n        }\n    \n    }\n\nHere is my activemq.xml\n\n    <beans\n      xmlns=\"http://www.springframework.org/schema/beans\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n      http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd\">\n    \n        <!-- Allows us to use system properties as variables in this configuration file -->\n        <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n            <property name=\"locations\">\n                <value>file:${activemq.conf}/credentials.properties</value>\n            </property>\n        </bean>\n    \n        <!--\n            The <broker> element is used to configure the ActiveMQ broker.\n        -->\n        <broker xmlns=\"http://activemq.apache.org/schema/core\" brokerName=\"R6_cluster_broker1\" persistent=\"true\">\n        \n    \t\t<networkConnectors>\n    \t\t\t<networkConnector uri=\"static:(failover:(tcp://remote_master:61616,tcp://remote_slave:61617))\"/>\n    \t\t</networkConnectors>\n    \n            <destinationPolicy>\n                <policyMap>\n                  <policyEntries>\n                    <policyEntry topic=\">\" >\n                        <!-- The constantPendingMessageLimitStrategy is used to prevent\n                             slow topic consumers to block producers and affect other consumers\n                             by limiting the number of messages that are retained\n                             For more information, see:\n    \n                             http://activemq.apache.org/slow-consumer-handling.html\n    \n                        -->\n                      <pendingMessageLimitStrategy>\n                        <constantPendingMessageLimitStrategy limit=\"1000\"/>\n                      </pendingMessageLimitStrategy>\n                    </policyEntry>\n                  </policyEntries>\n                </policyMap>\n            </destinationPolicy>\n    \n    \n            <!--\n                The managementContext is used to configure how ActiveMQ is exposed in\n                JMX. By default, ActiveMQ uses the MBean server that is started by\n                the JVM. For more information, see:\n    \n                http://activemq.apache.org/jmx.html\n            -->\n            <managementContext>\n                <managementContext createConnector=\"false\"/>\n            </managementContext>\n    \n            <!--\n                Configure message persistence for the broker. The default persistence\n                mechanism is the KahaDB store (identified by the kahaDB tag).\n                For more information, see:\n    \n                http://activemq.apache.org/persistence.html\n            -->\n            <persistenceAdapter>\n                <kahaDB directory=\"/work/temp/kahadb\"/>\n            </persistenceAdapter>\n    \n    \n              <!--\n                The systemUsage controls the maximum amount of space the broker will\n                use before disabling caching and/or slowing down producers. For more information, see:\n                http://activemq.apache.org/producer-flow-control.html\n              -->\n              <systemUsage>\n                <systemUsage>\n                    <memoryUsage>\n                        <memoryUsage percentOfJvmHeap=\"70\" />\n                    </memoryUsage>\n                    <storeUsage>\n                        <storeUsage limit=\"100 gb\"/>\n                    </storeUsage>\n                    <tempUsage>\n                        <tempUsage limit=\"50 gb\"/>\n                    </tempUsage>\n                </systemUsage>\n            </systemUsage>\n    \n            <!--\n                The transport connectors expose ActiveMQ over a given protocol to\n                clients and other brokers. For more information, see:\n    \n                http://activemq.apache.org/configuring-transports.html\n            -->\n            <transportConnectors>\n                <!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->\n                <transportConnector name=\"openwire\" uri=\"tcp://0.0.0.0:61616?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600\"/>\n                <!-- <transportConnector name=\"amqp\" uri=\"amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600\"/>\n                <transportConnector name=\"stomp\" uri=\"stomp://0.0.0.0:61613?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600\"/>\n                <transportConnector name=\"mqtt\" uri=\"mqtt://0.0.0.0:1883?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600\"/>\n                <transportConnector name=\"ws\" uri=\"ws://0.0.0.0:61614?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600\"/> -->\n            </transportConnectors>\n    \n            <!-- destroy the spring context on shutdown to stop jetty -->\n            <shutdownHooks>\n                <bean xmlns=\"http://www.springframework.org/schema/beans\" class=\"org.apache.activemq.hooks.SpringContextHook\" />\n            </shutdownHooks>\n    \n        </broker>\n    \n        <!--\n            Enable web consoles, REST and Ajax APIs and demos\n            The web consoles requires by default login, you can disable this in the jetty.xml file\n    \n            Take a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details\n        -->\n        <import resource=\"jetty.xml\"/>\n    \n    </beans>\n\n\nWhen I have both broker and consumer running and then stop the broker my consumer exits few moments after. As far I understood it must attempt to reconnect, but it is not the case. What am I doing wrong, please advise.\n\n!NOTE! I launch my consumer in Eclipse, i do not build a standalone jar for this task.   \n\nI have updated my broker to the latest 5.9.1 and did the same to my consumer. Result is the same - after I stop the broker my consumer dies few seconds after. It works fine if broker is up and running. ","customfield_10010":null,"timetracking":{"originalEstimate":"48h","remainingEstimate":"48h","originalEstimateSeconds":172800,"remainingEstimateSeconds":172800},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":172800,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"387376","customfield_12312823":null,"summary":"ActiveMQ failover seems not to work in 5.9.1 on MacOSX","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=i.mochurad","name":"i.mochurad","key":"i.mochurad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ihor Mochurad","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=i.mochurad","name":"i.mochurad","key":"i.mochurad","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ihor Mochurad","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":172800,"percent":0},"customfield_12311024":null,"environment":"MacOSx","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":172800,"percent":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12708790/comment/13972813","id":"13972813","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"what will keep your main from exiting? Ensure your client jvm remains active and failover will kick in, but note that the failover thread is a daemon thread.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2014-04-17T10:13:42.884+0000","updated":"2014-04-17T10:13:42.884+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12708790/comment/13983146","id":"13983146","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"The is expected behaviour with failover.  You need to ensure you application keeps it's main thread open.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2014-04-28T16:12:46.615+0000","updated":"2014-04-28T16:12:46.615+0000"}],"maxResults":2,"total":2,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-5150/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1uoqf:"}}