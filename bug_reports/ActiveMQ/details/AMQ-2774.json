{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12482573","self":"https://issues.apache.org/jira/rest/api/2/issue/12482573","key":"AMQ-2774","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315623","id":"12315623","description":"version 5 feature complete","name":"5.4.0","archived":false,"released":true,"releaseDate":"2010-08-17"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2010-06-11T15:54:57.441+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Jul 28 11:32:17 UTC 2010","customfield_12310420":"14631","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_4043850366_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2010-07-28T10:47:34.825+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-2774/watchers","watchCount":2,"isWatching":false},"created":"2010-06-11T15:30:04.459+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"5.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315619","id":"12315619","description":"","name":"5.2.0","archived":false,"released":true,"releaseDate":"2008-11-20"}],"issuelinks":[{"id":"12337444","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12337444","type":{"id":"12310010","name":"Incorporates","inward":"is part of","outward":"incorporates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310010"},"outwardIssue":{"id":"12495294","key":"AMQ-3129","self":"https://issues.apache.org/jira/rest/api/2/issue/12495294","fields":{"summary":"Can only have one duplex networkConnection per transportConnection","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12337427","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12337427","type":{"id":"12310050","name":"Regression","inward":"is broken by","outward":"breaks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310050"},"outwardIssue":{"id":"12498131","key":"AMQ-3176","self":"https://issues.apache.org/jira/rest/api/2/issue/12498131","fields":{"summary":"Potential deadlock in duplex network connector recreation, resulting in dangling connections","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2011-02-10T10:59:43.268+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"customfield_12310080":null,"description":"Hi everybody\n\nI experiment a big problem with the multicast discovery algorithm, in a network of brokers topology.\nIn some conditions, a broker can't reestablish a distant connection even if the distant broker is restarted.\n\nI have the log traces that would help to identify the origin of the problem.\n\nWhen there is no discovery/connection error, I can see these 2 lines in the activemq log file\n\n#08 Jun 2010 14:31:30,639  INFO  [Multicast Discovery Agent Notifier] org.apache.activemq.network.DiscoveryNetworkConnector\nEstablishing network connection between from vm://ACCLU-tpnocp04v to tcp://tpnocp09v-bus:13100?useLocalHost=false\n\n#08 Jun 2010 14:31:30,692  INFO  [StartLocalBridge: localBroker=vm://ACCLU-tpnocp04v#26] org.apache.activemq.network.DemandForwardingBridge\nNetwork connection between vm://ACCLU-tpnocp04v#26 and tcp://tpnocp09v-bus/10.18.126.28:13100(MOM-tpnocp09v) has been established.\n\n\nWhen the connection is broken, I can see this line in the log.\n\n#11 Jun 2010 12:37:32,585  INFO  [Multicast Discovery Agent Notifier] org.apache.activemq.network.DemandForwardingBridge\nACCLU-tpnocp04v bridge to MOM-tpnocp09v stopped\n\n\nThen the current ACCLU-tpnocp04v broker tries to reestablish the connection :\n\n#11 Jun 2010 12:37:34,475  INFO  [Multicast Discovery Agent Notifier] org.apache.activemq.network.DiscoveryNetworkConnector\nEstablishing network connection between from vm://ACCLU-tpnocp04v to tcp://tpnocp09v-bus:13100?useLocalHost=false\n\nBut, here, the second line of the log (\"has been established\") doesn't appear in the log file !! I don't know exactly if the connection is up or not.\n\nThen the connection is broken again (look at \"Unknown\" instead of \"MOM-tpnocp09v\".\n\n#11 Jun 2010 13:33:58,655  WARN  [ActiveMQ Transport: tcp://tpnocp09v-bus/10.18.126.28:13100] org.apache.activemq.network.DemandForwardingBridge\nNetwork connection between vm://ACCLU-tpnocp04v#58 and tcp://tpnocp09v-bus/10.18.126.28:13100 shutdown due to a remote error: java.net.SocketException: Connection reset\n#11 Jun 2010 13:33:58,657  INFO  [NetworkBridge] org.apache.activemq.network.DemandForwardingBridge^M\nACCLU-tpnocp04v bridge to Unknown stopped\n\nAnd, now, even if I restart the distant broker ( MOM-tpnocp09v ), no line (Establishing/Has been established) appears, and no network connection is reestablished between ACCLU-tpnocp04v and MOM-tpnocp09v. it seems that this ACCLU-tpnocp04v broker can no longer establish a connection with the MOM-tpnocp09v broker !!!\n\nThe production teams tell me that this problem seems not to be resolved in fuse-5.3.0.6 version.\n\nEric-AWL\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12461790","id":"12461790","filename":"activemq-all-5.3.2-eric.jar","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-28T08:42:38.989+0000","size":3469676,"mimeType":"application/octet-stream","content":"https://issues.apache.org/jira/secure/attachment/12461790/activemq-all-5.3.2-eric.jar"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12461788","id":"12461788","filename":"activemq-bug-2774-tcpToSsl.log","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=s1ngle","name":"s1ngle","key":"s1ngle","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Krzysztof Olszewski","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-27T15:25:37.708+0000","size":13971,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12461788/activemq-bug-2774-tcpToSsl.log"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12460748","id":"12460748","filename":"AMQ2774.tar","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-22T13:36:45.203+0000","size":163840,"mimeType":"application/x-tar","content":"https://issues.apache.org/jira/secure/attachment/12460748/AMQ2774.tar"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12461743","id":"12461743","filename":"JMAC-BEA-lastlog.log-20100315","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-17T07:18:07.317+0000","size":42875,"mimeType":"application/octet-stream","content":"https://issues.apache.org/jira/secure/attachment/12461743/JMAC-BEA-lastlog.log-20100315"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12461787","id":"12461787","filename":"SocketTstFactory.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-27T14:48:13.014+0000","size":5535,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12461787/SocketTstFactory.java"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"63682","customfield_12312823":null,"summary":"Network of brokers : Multicast discovery stopped to work","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Linux","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12942681","id":"12942681","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"There is a bunch more trace level logging in 5.3, if you can reproduce with TRACE level logging with 5.3.x and attach the log that may help. Ideally of course, if you can reproduce with a test case that would be great!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-11T15:54:57.441+0000","updated":"2010-06-11T15:55:12.361+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12942689","id":"12942689","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"Hi Gary\n\nI understand that more traces are needed. Unfortunately, this happens sometimes on our production system (30 servers on 2 sites). And you can see there is 3 days between the launch of the MOM-tpnocp09v and its first stop. \nPutting \"Trace\" level traces in these conditions will be very difficult. Because the volume of traces will be very heavy. \n\nBut I will contact the production managers to see what can be done.\n\nI suspect the ConcurrentHashMap<String,RemoteBrokerData> in the class MulticastDiscoveryAgent, is not correctly updated when the bridge is stopped in an \"Unknown\" state.\n\n Eric-AWL","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-12T05:57:01.756+0000","updated":"2010-06-12T05:57:01.756+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12942629","id":"12942629","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"Hi\n\nI looked at MulticastDiscoveryAgent.java source. The \"doRecovery\" method is the only one that tells the connection must be reestablished. The indicator \"failed\" is put to false as soon as the recovery conditions are filled and even if the connection is not really reestablished (that seems to be my case) . As soon as \"failed\" indicator is false, the recovery and the reconnection (fireServiceAddEvent) can't be retried. Only \"serviceFailed\" method can put \"failed\" to true again.\n\nJust by looking to this java source, it seems that a situation where the connection is not re-established, the indicator \"failed\" is false, the multicast heartbeat frames are received, is possible .... Only the call to \"serviceFailed\" can put the failed indicator to true (or delete the object entry in the hashmap). Is it possible that serviceFailed is not called although the connection is down ?\n\n(I think that it should be safer that \"failed\" be an atomic boolean since I believe serviceFailed method could be called by another thread)\n\nEric-AWL","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-13T07:30:47.387+0000","updated":"2010-06-13T07:30:47.387+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12942621","id":"12942621","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"It seems that the \"... has been established\" trace can only be written if the remoteBrokerNameKnownLatch.await() condition is filled.\n\ncontdown is called into DemandForwardingBridge.serviceRemoteBrokerInfo\nserviceRemoteBrokerInfo is called into DemandForwardingBridgeSupport.serviceRemoteCommand (only if disposed.get() is false).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-15T07:38:57.981+0000","updated":"2010-06-15T07:38:57.981+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12942599","id":"12942599","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"A part of a stack trace which shows that \"Multicast Discovery Agent Notifier\" thread is blocked on the remoteBrokerNameKnownLatch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-17T07:18:07.378+0000","updated":"2010-06-17T07:18:07.378+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12942597","id":"12942597","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"We are in a full embedded broker configuration.\n\nI attach a part of an old stack trace (I delete all our own threads and the queueThreads). I think this trace was done (in march) just when one of our embedded broker doesn't succeed to reconnect to another one.\n\nThis trace is not exactly the same as the explanation since processes are not exactly the one. But this stack trace shows that \"Multicast Discovery Agent Notifier\" is blocked on the remoteBrokerNameKnownLatch.await() into the \"bridge.start()\" call (DiscoveryNetworkConnector.onServiceAdd)\n\n            localBroker.start();\n            remoteBroker.start();\n            if (configuration.isDuplex() && duplexInitiatingConnection == null) {\n                // initiator side of duplex network\n                remoteBrokerNameKnownLatch.await();\n            }\n\nCorresponding \"serviceFailed\" call, can not be called (no exception) until this latch is released, which can only be done if serviceRemoteBrokerInfo call is done, what can be impossible if distant embedded broker is failed.\n\n            try {\n                bridge.start();\n            } catch (Exception e) {\n                ServiceSupport.dispose(localTransport);\n                ServiceSupport.dispose(remoteTransport);\n                LOG.warn(\"Could not start network bridge between: \" + localURIName + \" and: \" + uri + \" due to: \" + e);\n                LOG.debug(\"Start failure exception: \" + e, e);\n                try {\n                    discoveryAgent.serviceFailed(event);\n                } catch (IOException e1) {\n                    LOG.debug(\"Discovery agent failure while handling failure event: \" + e1.getMessage(), e1);\n                }\n                return;\n            }\n\nWhile \"serviceFailed\" is not called and multicast frames are received, it seems impossible to try to reconnect to this distant broker even if it is shortly restarted ?\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-06-17T07:33:54.240+0000","updated":"2010-06-17T07:33:54.240+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12942499","id":"12942499","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"I'm sure that I identified a Latch problem in Multicast Network Discovery mechanism on Duplex connection \n\nThe multicast notifier thread is blocked. here the trace (on Fuse-5.3.0.5)\n\n\"Notifier-MulticastDiscoveryAgent-listener:DiscoveryNetworkConnector:NOCSupervisorP5-ADMIN-OUT-IN:BrokerService[SIBBusModule-NOCP5-tpnocp08s-bus]\" daemon prio=10 tid=0x0000000044ff2400 nid=0x1389 waiting on condition [0x0000000044c26000..0x0000000044c26b90] \n   java.lang.Thread.State: WAITING (parking) \n        at sun.misc.Unsafe.park(Native Method) \n        - parking to wait for  <0x00002aaab3dd66f0> (a java.util.concurrent.CountDownLatch$Sync) \n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158) \n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747) \n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:905) \n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1217) \n        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:207) \n        at org.apache.activemq.network.DemandForwardingBridgeSupport.start(DemandForwardingBridgeSupport.java:231) \n        at org.apache.activemq.network.DiscoveryNetworkConnector.onServiceAdd(DiscoveryNetworkConnector.java:114) \n        at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent$2.run(MulticastDiscoveryAgent.java:484) \n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) \n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) \n        at java.lang.Thread.run(Thread.java:619) \n\nThe problem appears when the network is quickly and alternatively on/off between the two components. \nThe bridge is created in one direction, but the answer can not be received. \n\nThe thread is blocked on the CountDownLatch. Even if multicast frames are received, the component can not establish a new network connection. \n\nHere are an corresponding activemq trace \n\nWhen it is OK : \n2010-06-22 22:56:24,500 [-tpnocp08s-bus]] INFO  DiscoveryNetworkConnector      - Establishing network connection from vm://SIBBusModule-NOCP5-tpnocp08s-bus to tcp://tpnocp11v-bus.vdm.priv.amm.noc:14101?useLocalHost=false \n2010-06-22 22:56:26,083 [nocp08s-bus#160] INFO  DemandForwardingBridge         - Network connection between vm://SIBBusModule-NOCP5-tpnocp08s-bus#160 and tcp://tpnocp11v-bus.vdm.priv.amm.noc/10.18.126.30:14101(SIBBusSupervisor-tpnocp11v-bus) has been established. \n\n2010-06-22 22:57:34,807 [-tpnocp08s-bus]] INFO  DemandForwardingBridge         - SIBBusModule-NOCP5-tpnocp08s-bus bridge to SIBBusSupervisor-tpnocp11v-bus stopped \n\n2010-06-22 22:57:34,811 [-tpnocp08s-bus]] INFO  DiscoveryNetworkConnector      - Establishing network connection from vm://SIBBusModule-NOCP5-tpnocp08s-bus to tcp://tpnocp11v-bus.vdm.priv.amm.noc:14101?useLocalHost=false \n2010-06-22 22:57:39,064 [nocp08s-bus#162] INFO  DemandForwardingBridge         - Network connection between vm://SIBBusModule-NOCP5-tpnocp08s-bus#162 and tcp://tpnocp11v-bus.vdm.priv.amm.noc/10.18.126.30:14101(SIBBusSupervisor-tpnocp11v-bus) has been established. \n\n2010-06-22 22:58:42,578 [-tpnocp08s-bus]] INFO  DemandForwardingBridge         - SIBBusModule-NOCP5-tpnocp08s-bus bridge to SIBBusSupervisor-tpnocp11v-bus stopped \n\nWhen it is KO : \"Unknown\" \n\n2010-06-22 22:58:42,648 [-tpnocp08s-bus]] INFO  DiscoveryNetworkConnector      - Establishing network connection from vm://SIBBusModule-NOCP5-tpnocp08s-bus to tcp://tpnocp11v-bus.vdm.priv.amm.noc:14101?useLocalHost=false \n2010-06-22 22:59:18,031 [18.126.30:14101] WARN  DemandForwardingBridge         - Network connection between vm://SIBBusModule-NOCP5-tpnocp08s-bus#164 and tcp://tpnocp11v-bus.vdm.priv.amm.noc/10.18.126.30:14101 shutdown due to a remote error: java.net.SocketException: Connection reset \n2010-06-22 22:59:18,033 [NetworkBridge  ] INFO  DemandForwardingBridge         - SIBBusModule-NOCP5-tpnocp08s-bus bridge to Unknown stopped \n\n\nHere is the other side corresponding activemq trace \n\nactivemq-server.log:2010-06-22 22:55:44,295 [26.190.27:40517] INFO  TransportConnection            - Created Duplex Bridge back to SIBBusModule-NOCP5-tpnocp08s-bus \n\nactivemq-server.log:2010-06-22 22:56:24,438 [26.190.27:40517] INFO  DemandForwardingBridge         - SIBBusSupervisor-tpnocp11v-bus bridge to SIBBusModule-NOCP5-tpnocp08s-bus stopped \n\nactivemq-server.log:2010-06-22 22:56:26,135 [26.190.27:40518] INFO  TransportConnection            - Created Duplex Bridge back to SIBBusModule-NOCP5-tpnocp08s-bus \nactivemq-server.log:2010-06-22 22:56:26,135 [ocp11v-bus#1770] INFO  DemandForwardingBridge         - Network connection between vm://SIBBusSupervisor-tpnocp11v-bus#1770 and tcp:///10.26.190.27:40518(SIBBusModule-NOCP5-tpnocp08s-bus) has been established. \n\nactivemq-server.log:2010-06-22 22:57:34,818 [26.190.27:40518] INFO  DemandForwardingBridge         - SIBBusSupervisor-tpnocp11v-bus bridge to SIBBusModule-NOCP5-tpnocp08s-bus stopped \n\nactivemq-server.log:2010-06-22 22:57:39,153 [26.190.27:40519] INFO  TransportConnection            - Created Duplex Bridge back to SIBBusModule-NOCP5-tpnocp08s-bus \nactivemq-server.log:2010-06-22 22:57:39,153 [ocp11v-bus#1806] INFO  DemandForwardingBridge         - Network connection between vm://SIBBusSupervisor-tpnocp11v-bus#1806 and tcp:///10.26.190.27:40519(SIBBusModule-NOCP5-tpnocp08s-bus) has been established. \n\nactivemq-server.log:2010-06-22 22:58:44,328 [26.190.27:40519] INFO  DemandForwardingBridge         - SIBBusSupervisor-tpnocp11v-bus bridge to SIBBusModule-NOCP5-tpnocp08s-bus stopped \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-06T09:33:59.789+0000","updated":"2010-07-06T09:33:59.789+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12941809","id":"12941809","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"What could happen if we add\n\n         if (configuration.isDuplex() && duplexInitiatingConnection == null) {\n                // initiator side of duplex network\n                remoteBrokerNameKnownLatch.countDown();\n            }\n\ninto the stop() method of DemandForwardingBridgeSupport class ?\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-06T11:10:00.174+0000","updated":"2010-07-06T11:10:00.174+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12942495","id":"12942495","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"We put a no-Duplex Configuration instead of a Duplex Configuration and it seemed to work better.... But\ntoday during a network problem (alternatively on/off) our process doesn't resist ....\n\nWe have \n- a thread dump which shows 85 StartLocalBridge Threads waiting for the same latch into the DemandForwardingBridgeSupport.StartLocalBridge method :\n\n protected void startLocalBridge() throws Exception {\n        if (localBridgeStarted.compareAndSet(false, true)) {\n            synchronized (this) {\n                if (LOG.isTraceEnabled()) {\n                    LOG.trace(configuration.getBrokerName() + \" starting local Bridge, localBroker=\" + localBroker);\n                }\n                remoteBrokerNameKnownLatch.await();\n                ...\n}\n\n- 960 CLOSE_WAIT\n- a file descriptor limit\n\nWill the transport.closeAsync=false flag be helpful here ?\n\nEric-AWL","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-07T16:04:56.979+0000","updated":"2010-07-07T16:04:56.979+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12942472","id":"12942472","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"If I resume my view of the problem\n\nWhen the problem occurs\n- Network links between 2 brokers, are quickly and alternatively on/off. In french, we say that the network is \"bagotting\" :-)\n- The DemandForwardingBridgeSupport.stop() method is called before the start() method  (including sons threads start methods) is fully exectuted\n\nConsequences\n- With NO DUPLEX connection, network of brokers are re-established, but some threads are created and blocked on the RemoteBrokerNameKnownLatch latch. \nIn this case, the latch is awaited in the startLocalBridge() method which is called by a dedicated thread. So, a major problem occured when ressources are consumed if this kind of network faults are frequent, and the number of network connections is important. \n- With DUPLEX connection,  the latch is awaited in the start() method itself.  The main network connector thread is concerned. So the network connector is completely blocked.\n\nI currently try to\n- add a RemoteBrokerNameLatch.countDown at the end of the stop() method\n- test the disposed AtomicBoolean value to correctly break the starting process in start() for DUPLEX, and in startLocalBridge() for NO-DUPLEX.\n\nI think it will be better for DUPLEX since network connector thread will be freed, but I don't know if the son thread will be correctly destroyed.\n\nEric-AWL ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-11T08:25:11.320+0000","updated":"2010-07-11T08:26:58.622+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12941250","id":"12941250","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"Hi\n\nI think I now have programmed a clean correction for this specific latch problem. And I can give you the sources. With these sources, the network connector is not ever blocked even if a network fault comes during the start'() process.\n\nBut, before giving you these sources, I have relative questions, with duplex TCP connections :\n\nImagine a brief network fault\n\nOn the network connector side of the DUPLEX connection, the fault is detected, the TCP bridge is closed. Socket.close() is executed, but the socket is in a CLOSE_WAIT state.\nThe \"transport connector side\" of the DUPLEX connection is not aware that the first connection is down while its InactivityMonitor Thread doesn't signal it.\n\nThen, on the network connector side, the bridge wants to be built again, and the network is now ON. The \"transport connector side\" creates a second active bridge for the same DUPLEX connection.\nSo, the \"transport connector\" side temporarily sees 2 distant broker for the same one, while the InactivityMonitor thread doesn't signal the death of the first TCP connection.\n\nIs this true ?\n\nEric-AWL\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-21T09:33:40.574+0000","updated":"2010-07-21T09:33:40.574+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12940579","id":"12940579","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"Great if you have a fix.\n\nto your question, that sounds true to me, but I would have thought that the second bridge creation attempt is considered distinct because it occurs on a new connection.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-21T11:20:57.404+0000","updated":"2010-07-21T11:20:57.404+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12942408","id":"12942408","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"I propose you this patch in the tar file (for ActiveMQ 5.3.2 version)\n\n2 modifications are brought :\n- the RemoteBrokerNameKnownLatch is countdown at the end of the stop() to free the connector thread even if it doesn't receive the correct remote broker info. That can appear when network is successively and quickly on/off. In the case of a DUPLEX connection, the network connector was then totally blocked. In the case of a not duplex connection, some dead threads were up.\n- the second modification tries to stop an old invalid duplex Transport Connection when a new Duplex Transport Connection is required by the same broker for the same transport Connector\n\nI tried to realize a JUNIT test which simulates a lot of \"close socket\" even during bridge start process. It seems to work, but I didn't succeed in simulating the second modification. \nthe JUNIT test include a \"tcpfaulty\" transport with two socket factories. In the future I will try to put SocketProxy code into the ServerSocketTstFactory.\n\nThis situation where a second duplex connection tried to be established before the first one was clearly dead, appeared in my own (not JUNIT) tests , when a brief networkl fault occured and when only the first modification was implemented.\n\nAll modifications are clearly indicated by \n// Eric-AWL AMW-2774 Beginning\n// Eric-AWL AMW-2774 End\n\nSorry for the poor english. (I'm french)\n\nEric-AWL\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-22T13:36:45.322+0000","updated":"2010-07-22T13:38:10.167+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12940517","id":"12940517","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"I applied just the test component of your patch to trunk, 5.4-SNAPSHOT and ran the test and it worked just fine without any mods to the src in main/java. Is this expected? Or do you only get intermittent failures with the test. I wonder if the issue is resolved already on trunk? Can you validate trunk?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-26T12:31:48.129+0000","updated":"2010-07-26T12:31:48.129+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12942395","id":"12942395","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"Hi Gary\n\nIt's very difficult to simulate quick network faults. With my JUNIT test, I simulate close() immediately or some seconds later (with a random value). When the close() is done immediatly, I succeeded  in  validating DUPLEX network of brokers and that nothing was blocked in this situation with my patch :\n\n2010-07-26 14:09:20,001 [ce[SpokeBroker]] INFO  DiscoveryNetworkConnector      - Establishing network connection from vm://SpokeBroker to tcpfaulty://localhost.localdomain:61617\n2010-07-26 14:09:20,035 [ocalport=32972]] INFO  SocketTstFactory               - Trying to close client socket Socket[addr=localhost.localdomain/127.0.0.1,port=61617,localport=32972] immediatly\n2010-07-26 14:09:20,036 [ocalport=32972]] INFO  SocketTstFactory               - Client socket Socket[addr=localhost.localdomain/127.0.0.1,port=61617,localport=32972] is closed.\n2010-07-26 14:09:20,037 [127.0.0.1:61617] WARN  DemandForwardingBridge         - Network connection between vm://SpokeBroker#8 and tcpfaulty://localhost.localdomain/127.0.0.1:61617 shutdown due to a remote error: java.net.SocketException: Socket closed\n2010-07-26 14:09:20,038 [NetworkBridge  ] INFO  DemandForwardingBridge         - SpokeBroker bridge to Unknown stopped\n\nIn this kind of situation (bridge to Unknown stopped), I experimented on 5.3.0-05 fuse production environment, that the network of connector thread was completely blocked on the latch, with Duplex connections.\n\nI'm not sure that my JUNIT test demonstrates the problem on 5.3.0-05. It helped me to debug my own patch.\n\nI don't try my JUNIT test on 5.3.0-5 fuse version. I'm going to verify that my JUNIT test sometimes shows the problem with the 5.3.0-5 core jar.\n\nI can look at 5.4-snapshot source code to see if something is already changed about this latch on the trunk.\n\nI will tell you my results.\n\nEric-AWL\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-26T12:52:16.864+0000","updated":"2010-07-26T12:52:16.864+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12940605","id":"12940605","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"yea, I understand this is difficult to test but the effort is worth it to protect the changes. One thought that may help is the use of SockeProxy to simulate a network failure or slow network. There is an example usage in http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/BrokerQueueNetworkWithDisconnectTest.java?view=log - see the org.apache.activemq.usecases.BrokerQueueNetworkWithDisconnectTest#onSend use of socketProxy. This gave me a test case for a similar issue some time back so it may be worth a look, it is not unlike what you do in TcpFaulty but is very deterministic which may help.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-26T13:05:49.468+0000","updated":"2010-07-26T13:05:49.468+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12940518","id":"12940518","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"Yes, I saw this JUNIT test, and I will try to adapt SocketProxy into the TCPFaultyServerSocketFactory, to simulate pause in the accept().\n\nI can't imagine that this JUnit test doesn't work with 5.3.0-05-fuse, but we expiremented this latch situation with network faults regularly (stack traces was taken some hours after the frozen state was discovered of the network connector, and these traces always show the \"await\" on this latch with duplex connection).\n\nEric-AWL\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-26T13:42:18.600+0000","updated":"2010-07-26T13:42:18.600+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12940206","id":"12940206","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"At first view, on the 5.4-SNAPSHOT, with the last modification, the remoteBrokerNameKnownLatch is not countdown in the stop() method of the DemandForwardingBridge. I don't think that the network connector freeze in DUPLEX connection, is resolved.\n\nEric-AWL","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-27T09:15:52.325+0000","updated":"2010-07-27T09:15:52.325+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12940614","id":"12940614","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"Hi Gary\n\nYou will find here a new version of the my own org.apache.activemq.transport.tcp.SocketTstFactory.java far more deterministic (no random)\n\nIn fact, in this one, the duplex network connection is forcely closed in my \"bagot thread\", after 0 ms, then 1 ms, then 2 ms, then ...., then 11 ms, then 31 ms, then 51 ms, then 71 ms, .....\n\nWith my patch on the 5.3.2, and my test server, the JUNIT test succeeds (I think always), With the 5.3.2 version, the JUNIT test doesn't succeed (I think never).\n\nOn my test server (a good one with 2 CPUs), it's when the connection is closed between 1 and 3 ms, after the connect() call that the network connector is frozen. If the close connection is done immediately, or after 3 ms, the network connector continues to live.\n\nI can't test on 5.4-trunk since I don't have a SVN with HTTPS support on my test server.\n\nI hope this will help you to test on 5.4 and to validate my patch.\n\nEric-AWL","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-27T14:48:13.083+0000","updated":"2010-07-27T14:48:13.083+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12940041","id":"12940041","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"I didn't receive any mail to signal that I just added a new attachment with a comment on this thread. This comment is just to signal this if necessary !!!\n\nSorry if you receive 2 mails. \nEric-AWL","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-27T14:57:32.425+0000","updated":"2010-07-27T14:57:32.425+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12940537","id":"12940537","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=s1ngle","name":"s1ngle","key":"s1ngle","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Krzysztof Olszewski","active":true,"timeZone":"Etc/UTC"},"body":"I've encountered similar problem though in a different case.\nImho it is far more easily reproducible.\nThe case is when you try to add a DiscoveryNetworkConnector between the brokers with a TCP connection set to the broker that has SSL enabled [not TCP].\n\nThe operation is blocking [on a DemandForwardingBridgeSupport.start() -> remoteBrokerNameKnownLatch.await(); operation] and new threads are being created, all blocked on the same operation :\nDiscoveryNetworkConnector.onServiceAdd()\nDemandForwardingBridgeSupport.start()\nCountDownLatch.await().\n\nHere are the logs that appears during the situation described above:\nhttps://issues.apache.org/activemq/secure/attachment/19504/activemq-bug-2774-tcpToSsl.log","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=s1ngle","name":"s1ngle","key":"s1ngle","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Krzysztof Olszewski","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-27T15:26:08.267+0000","updated":"2010-07-27T15:26:08.267+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12940495","id":"12940495","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"Yes, with DUPLEX connection, the network connector thread is completely frozen into the start() call. With not Duplex connection, son threads are created and are blocked on the same latch, but the connector is not frozen.\n\nThe problem is the same. As we are far more worried by the DUPLEX problem, I choose to demonstrate the bug with DUPLEX connection.\n\nIf you have an environment test with source codes, perhaps you can use my patch (only 3 class to change) and tell us what happens on your configuration ???\n\nI can provide you the activemq-all-5.3.2.jar with my patch.\n\nEric-AWL","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-27T15:37:13.358+0000","updated":"2010-07-27T15:37:13.358+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12939549","id":"12939549","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"The jar with the patch","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-28T08:42:40.125+0000","updated":"2010-07-28T08:42:40.125+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12941663","id":"12941663","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"in the tar file, there are 3 changes for ActiveMQ classes, 6 new test classes and one ressource file (that declares a new transport that simulate network faults)\n\n\nChanges\n\n- activemq-core/src/main/java/org/apache/activemq/broker/TransportConnection.java\n- activemq-core/src/main/java/org/apache/activemq/network/DiscoveryNetworkConnector.java\n- activemq-core/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java\n\ntest classes\n\n- activemq-core/src/test/java/org/apache/activemq/transport/tcp/TcpFaultyTransportFactory.java\n- activemq-core/src/test/java/org/apache/activemq/transport/tcp/TcpFaultyTransport.java\n- activemq-core/src/test/java/org/apache/activemq/transport/tcp/TcpFaultyTransportServer.java\n- activemq-core/src/test/java/org/apache/activemq/transport/tcp/ServerSocketTstFactory.java\n- activemq-core/src/test/java/org/apache/activemq/transport/tcp/SocketTstFactory.java\n- activemq-core/src/test/java/org/apache/activemq/usecases/MulticastDiscoveryOnFaultyNetworkTest.java\n\nTest ressource\n- activemq-core/src/test/resources/META-INF/services/org/apache/activemq/transport/tcpfaulty\n\n\nThen, I send SocketTstFactory.java again to change the network faults generation algorithm.\n\nEric-AWL","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-28T08:49:02.187+0000","updated":"2010-07-28T08:49:02.187+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12940032","id":"12940032","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=s1ngle","name":"s1ngle","key":"s1ngle","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Krzysztof Olszewski","active":true,"timeZone":"Etc/UTC"},"body":"Your solution passed all our JUNIT tests so it seems to get rid of the problem while not interfering current features.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=s1ngle","name":"s1ngle","key":"s1ngle","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Krzysztof Olszewski","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-28T10:19:25.898+0000","updated":"2010-07-28T10:19:25.898+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12940386","id":"12940386","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"patch applied with thanks to r980014\nGreat to have the test case and additional validation, that is a some what messy area of the code base.\n\nJust for future reference, svn diff is a great way to produce a patch as it just captures the differences. Makes it alot eastier to apply a patch to trunk when it was created from a branch.\nCan you cast an eye over the diffs in the commit log just to be sure to be sure it is all there. thanks again. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-28T10:47:34.777+0000","updated":"2010-07-28T10:47:34.777+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482573/comment/12940292","id":"12940292","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"body":"All seems OK. And I think that \"tcpfaulty\" transport can be reused to verify a lot of things...\n\nBe careful, I don't exactly know all consequences of my patch on cluster failover mechanisms (transportInterupted and transportResumed).\n\nAtos Wordline works with ActiveMQ on a VERY VERY HUGE project in France (an \"electricity smart metering\" project). And this patch was very important for us.\n\nI'm not in general development teams but in production teams. That's why I don't have a good SVN development environment.\n\nThank you\nEric-AWL (Atos Worldline).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=eric-awl","name":"eric-awl","key":"eric-awl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric","active":true,"timeZone":"Etc/UTC"},"created":"2010-07-28T11:32:17.427+0000","updated":"2010-07-28T11:32:17.427+0000"}],"maxResults":27,"total":27,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-2774/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0b9ov:"}}