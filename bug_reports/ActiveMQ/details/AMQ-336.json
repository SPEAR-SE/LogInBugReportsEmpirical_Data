{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12481097","self":"https://issues.apache.org/jira/rest/api/2/issue/12481097","key":"AMQ-336","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315602","id":"12315602","name":"3.2","archived":false,"released":true}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2005-09-01T14:45:17.000+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Sep 07 11:15:36 UTC 2005","customfield_12310420":"49043","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_1171731000_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2005-09-06T13:02:51.000+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-336/watchers","watchCount":3,"isWatching":false},"created":"2005-08-23T23:34:00.000+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315601","id":"12315601","name":"3.1","archived":false,"released":true}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2005-09-07T11:15:36.000+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"When setting a message listener, using the ActiveMQMessageConsumer::setMessageListener() method, a deadlock can result, if there are messages being dispatched to that consumer by an ActiveMQSessionExecuter.\n\nINFO   | jvm 1    | 2005/08/17 12:37:54 | Found one Java-level deadlock:\nINFO   | jvm 1    | 2005/08/17 12:37:54 | =============================\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \"JmsSessionDispatcher: 1\":\nINFO   | jvm 1    | 2005/08/17 12:37:54 |   waiting to lock monitor 00284bec (object 61acd670, a java.lang.Object),\nINFO   | jvm 1    | 2005/08/17 12:37:54 |   which is held by \"NetworkChannel Initiator to reliable:tcp://ehrapp2.au.logicacmg.com:16010\"\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \"NetworkChannel Initiator to reliable:tcp://ehrapp2.au.logicacmg.com:16010\":\nINFO   | jvm 1    | 2005/08/17 12:37:54 |   waiting to lock monitor 00284cdc (object 61acd578, a org.activemq.ActiveMQMessageConsumer),\nINFO   | jvm 1    | 2005/08/17 12:37:54 |   which is held by \"JmsSessionDispatcher: 1\"\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \nINFO   | jvm 1    | 2005/08/17 12:37:54 | Java stack information for the threads listed above:\nINFO   | jvm 1    | 2005/08/17 12:37:54 | ===================================================\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \"JmsSessionDispatcher: 1\":\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \tat org.activemq.ActiveMQMessageConsumer.processMessage(ActiveMQMessageConsumer.java:428)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \t- waiting to lock <61acd670> (a java.lang.Object)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \t- locked <61acd578> (a org.activemq.ActiveMQMessageConsumer)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \tat org.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:110)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \tat org.activemq.ActiveMQSessionExecutor.run(ActiveMQSessionExecutor.java:95)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \tat java.lang.Thread.run(Thread.java:534)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \"NetworkChannel Initiator to reliable:tcp://ehrapp2.au.logicacmg.com:16010\":\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \tat org.activemq.ActiveMQMessageConsumer.processMessage(ActiveMQMessageConsumer.java:422)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \t- waiting to lock <61acd578> (a org.activemq.ActiveMQMessageConsumer)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \tat org.activemq.ActiveMQMessageConsumer.setMessageListener(ActiveMQMessageConsumer.java:243)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \t- locked <61acd670> (a java.lang.Object)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \tat org.activemq.advisories.ConnectionAdvisor.start(ConnectionAdvisor.java:82)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \tat org.activemq.transport.NetworkChannel.initializeRemote(NetworkChannel.java:597)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \t- locked <61a3c320> (a org.activemq.transport.NetworkChannel)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \tat org.activemq.transport.NetworkChannel.initialize(NetworkChannel.java:565)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \tat org.activemq.transport.NetworkChannel$1.run(NetworkChannel.java:197)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \tat EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)\nINFO   | jvm 1    | 2005/08/17 12:37:54 | \tat java.lang.Thread.run(Thread.java:534)\n\nA simple fix is to synchronize the setMessageListener() method, although this may be too coarse-grained.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12460532","id":"12460532","filename":"ASF.LICENSE.NOT.GRANTED--_TEST_ActiveMQDeadlock.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=seanf","name":"seanf","key":"seanf","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sean Flanigan","active":true,"timeZone":"Etc/UTC"},"created":"2005-09-05T10:19:38.000+0000","size":2677,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12460532/ASF.LICENSE.NOT.GRANTED--_TEST_ActiveMQDeadlock.java"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"161863","customfield_12312823":null,"summary":"Deadlock in ActiveMQMessageConsumer","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=matthewv","name":"matthewv","key":"matthewv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Matthew Vincent","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=matthewv","name":"matthewv","key":"matthewv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Matthew Vincent","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Windows XP, Java 1.4","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481097/comment/12936971","id":"12936971","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yaussy","name":"yaussy","key":"yaussy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kevin Yaussy","active":true,"timeZone":"Etc/UTC"},"body":"Hi,\n\nI have just seen this issue as well (AMQ 3.1), although the second thread in my case was an already established TcpTransportChannel thread.\n\nFound one Java-level deadlock:\n=============================\n\"JmsSessionDispatcher: 8\":\n  waiting to lock monitor 0x0110d9b0 (object 0xea8a1488, a java.lang.Object),\n  which is held by \"TcpTransportChannel: Socket[addr=/170.137.15.50,port=36873,localport=61616]\"\n\"TcpTransportChannel: Socket[addr=/170.137.15.50,port=36873,localport=61616]\":\n  waiting to lock monitor 0x0110d9f8 (object 0xea8a13a8, a org.activemq.ActiveMQMessageConsumer),\n  which is held by \"JmsSessionDispatcher: 8\"\n\nJava stack information for the threads listed above:\n===================================================\n\"JmsSessionDispatcher: 8\":\n        at org.activemq.ActiveMQMessageConsumer.processMessage(ActiveMQMessageConsumer.java:428)\n        - waiting to lock <0xea8a1488> (a java.lang.Object)\n        - locked <0xea8a13a8> (a org.activemq.ActiveMQMessageConsumer)\n        at org.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:110)\n        at org.activemq.ActiveMQSessionExecutor.run(ActiveMQSessionExecutor.java:95)\n        at java.lang.Thread.run(Thread.java:595)\n\"TcpTransportChannel: Socket[addr=/170.137.15.50,port=36873,localport=61616]\":\n        at org.activemq.ActiveMQMessageConsumer.processMessage(ActiveMQMessageConsumer.java:422)\n        - waiting to lock <0xea8a13a8> (a org.activemq.ActiveMQMessageConsumer)\n        at org.activemq.ActiveMQMessageConsumer.setMessageListener(ActiveMQMessageConsumer.java:243)\n        - locked <0xea8a1488> (a java.lang.Object)\n        at org.activemq.transport.NetworkMessageBridge.createRemoteConsumer(NetworkMessageBridge.java:168)\n        at org.activemq.transport.NetworkMessageBridge.start(NetworkMessageBridge.java:157)\n        at org.activemq.transport.NetworkChannel.createBridge(NetworkChannel.java:479)\n        at org.activemq.transport.NetworkChannel.addConsumerInfo(NetworkChannel.java:443)\n        at org.activemq.transport.NetworkChannel.addConsumerInfo(NetworkChannel.java:436)\n        at org.activemq.transport.NetworkChannel.onConsumerInfo(NetworkChannel.java:239)\n        at org.activemq.broker.impl.DefaultBroker.fireConsumerInfo(DefaultBroker.java:723)\n        at org.activemq.broker.impl.DefaultBroker.addMessageConsumer(DefaultBroker.java:254)\n        at org.activemq.broker.impl.BrokerContainerImpl.registerMessageConsumer(BrokerContainerImpl.java:355)\n        at org.activemq.broker.impl.BrokerConnectorImpl.registerMessageConsumer(BrokerConnectorImpl.java:171)\n        at org.activemq.broker.impl.BrokerClientImpl.consumeConsumerInfo(BrokerClientImpl.java:493)\n        at org.activemq.broker.impl.BrokerClientImpl.consume(BrokerClientImpl.java:345)\n        at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:374)\n        at org.activemq.transport.TransportChannelSupport.doConsumePacket(TransportChannelSupport.java:368)\n        at org.activemq.transport.tcp.TcpTransportChannel.run(TcpTransportChannel.java:311)\n        at java.lang.Thread.run(Thread.java:595)\n\n\nI am using embedded brokers, and the problem showed up about 9 hours after the process had started.  An event driver was feeding messages all that time.  Unfortunately, my full log file got truncated over night, so I am not sure whether there was something that may have happened that lead to this condition.\n\nThis was the first time for the problem, and so I don't know whether it is repeatable or not.  Have you repeated this situation?  If so, under what circumstances?  I can change the setMessageListener method to be synchornized, but as I haven't reproduced the issue, I don't know the full effects of that change.\n\nWe would like some feedback on this from the developers, as we are looking at a very large scale usage of AMQ.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yaussy","name":"yaussy","key":"yaussy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kevin Yaussy","active":true,"timeZone":"Etc/UTC"},"created":"2005-09-01T14:45:17.000+0000","updated":"2005-09-01T14:45:17.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481097/comment/12936627","id":"12936627","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=matthewv","name":"matthewv","key":"matthewv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Matthew Vincent","active":true,"timeZone":"Etc/UTC"},"body":"No I haven't reproduced this issue. Once it was discovered, I fixed my version of ActiveMQ, to ensure it didn't happen again.\n\nWhen I was looking at it, I thought that either the setMessageListener() method could be made synchronized (this was the fix I performed on my build of ActiveMQ), or that the messageListenerGuard could be held only for the actual assignment of the new message listener to the field, and not for the processMessage() call as well. Either of these would prevent the deadlock. But the former would mean that you couldn't guarantee all messages that would be processed via processMessage() would be processed by that specific message listener that you set (Someone else could set the message listener to something else, before the processMessage() call could reacquire the messageListenerGuard).\n\nActiveMQ seems to run fine with the setMessageListener() method synchronized, so I would recommend that this should be the way forward.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=matthewv","name":"matthewv","key":"matthewv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Matthew Vincent","active":true,"timeZone":"Etc/UTC"},"created":"2005-09-01T22:31:20.000+0000","updated":"2005-09-01T22:31:20.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481097/comment/12936651","id":"12936651","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=matthewv","name":"matthewv","key":"matthewv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Matthew Vincent","active":true,"timeZone":"Etc/UTC"},"body":"Oops...this line:\n\nBut the former would mean that you couldn't guarantee all messages \n\nshould have read\n\nBut the latter (reducing the scope of the messageListenerGuard lock being held) would mean that you couldn't guarantee all messages","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=matthewv","name":"matthewv","key":"matthewv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Matthew Vincent","active":true,"timeZone":"Etc/UTC"},"created":"2005-09-01T22:33:22.000+0000","updated":"2005-09-01T22:33:22.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481097/comment/12936719","id":"12936719","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yaussy","name":"yaussy","key":"yaussy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kevin Yaussy","active":true,"timeZone":"Etc/UTC"},"body":"Matt,\n\nThanks for the response.  I will take a look at the code, given the second option you detailed as well.\n\nKevin.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yaussy","name":"yaussy","key":"yaussy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kevin Yaussy","active":true,"timeZone":"Etc/UTC"},"created":"2005-09-02T12:25:48.000+0000","updated":"2005-09-02T12:25:48.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481097/comment/12936778","id":"12936778","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=seanf","name":"seanf","key":"seanf","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sean Flanigan","active":true,"timeZone":"Etc/UTC"},"body":"I have a quick and dirty test case which gets the deadlock /most/ of the time on my dual core machine. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=seanf","name":"seanf","key":"seanf","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sean Flanigan","active":true,"timeZone":"Etc/UTC"},"created":"2005-09-05T10:19:38.000+0000","updated":"2005-09-05T10:19:38.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481097/comment/12936784","id":"12936784","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jstrachan","name":"jstrachan","key":"jstrachan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"james strachan","active":true,"timeZone":"Etc/UTC"},"body":"I've added your test case to SVN as AMQ336Test.java - many thanks!\n\nI've patched the code to fix up the locking around the setting of the MessageListener which I'm pretty sure should fix your issue. I also removed a few unnecessary synchronized methods which should further reduce the possibility of getting any deadlocks with this code.\n\nWhile I'm pretty confident this resolves the issue, if you still see any issues with this issue, please let us know - we can always reopen this issue if you can in any way reproduce this problem again.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jstrachan","name":"jstrachan","key":"jstrachan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"james strachan","active":true,"timeZone":"Etc/UTC"},"created":"2005-09-06T13:02:51.000+0000","updated":"2005-09-06T13:02:51.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12481097/comment/12936731","id":"12936731","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=seanf","name":"seanf","key":"seanf","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sean Flanigan","active":true,"timeZone":"Etc/UTC"},"body":"James,\n\nI think you probably intended to make ActiveMessageConsumer.stop() unsynchronised too, since you changed it to use the SynchronizedBoolean, and it touches no other state.\n\nBTW, that JUnit test was actually from me, not from Matthew.  Not that I'm vain or anything!\n\nSean.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=seanf","name":"seanf","key":"seanf","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sean Flanigan","active":true,"timeZone":"Etc/UTC"},"created":"2005-09-07T11:15:36.000+0000","updated":"2005-09-07T11:15:36.000+0000"}],"maxResults":7,"total":7,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-336/votes","votes":2,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0s2dz:"}}