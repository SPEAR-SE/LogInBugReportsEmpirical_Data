{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13009812","self":"https://issues.apache.org/jira/rest/api/2/issue/13009812","key":"AMQ-6454","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2016-10-05T09:59:48.347+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Oct 07 15:37:23 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6454/watchers","watchCount":5,"isWatching":false},"created":"2016-10-05T09:19:28.701+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12338124","id":"12338124","name":"5.14.1","archived":false,"released":true,"releaseDate":"2016-09-30"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-10-07T15:37:23.939+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[],"timeoriginalestimate":null,"customfield_12310080":null,"description":"JMS message is redelivered after successful call of acknowledge().\n\nThe following methods are invoked:\nThread1 : Message message = consumer.receive();\nThread2 : consumer.close();\nThread1: message.acknowledge();\n\nAll the methods return successfully but the  message is redelivered on the next receive() call. Note that consumer.close() is typically used to force  consumer.receive() to return. \n\nAccording to JMS specification the scope of message acknowledge() call is session (not message consumer):\nhttps://docs.oracle.com/javaee/7/api/javax/jms/Message.html#acknowledge--\n\nA simple program to reproduce the bug is attached.\n\nObserved behavior: \nMessage is redelivered.\nProgram output:\n============\nMessage sent. Id=ID:comp-63860-1475602285903-1:1:1:1:1\nMessage received. Id=ID:comp-63860-1475602285903-1:1:1:1:1. Text=Welcome!\nMessage succesfully acknowledged\nMessage received. Id=ID:comp-63860-1475602285903-1:1:1:1:1. Text=Welcome!\nMessage succesfully acknowledged\n\nExpected behavior:\nMessage should be delivered only once.\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12831714","id":"12831714","filename":"activemq-bug.zip","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yuriyc","name":"yuriyc","key":"yuriyc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuriy","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-05T09:22:03.245+0000","size":4672,"mimeType":"application/zip","content":"https://issues.apache.org/jira/secure/attachment/12831714/activemq-bug.zip"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Message is redelivered after succesfull acknowledge()","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yuriyc","name":"yuriyc","key":"yuriyc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuriy","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yuriyc","name":"yuriyc","key":"yuriyc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuriy","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13009812/comment/15548175","id":"15548175","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yuriyc","name":"yuriyc","key":"yuriyc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuriy","active":true,"timeZone":"Etc/UTC"},"body":"Program to reproduce the issue","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yuriyc","name":"yuriyc","key":"yuriyc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuriy","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-05T09:22:03.719+0000","updated":"2016-10-05T09:22:03.719+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13009812/comment/15548264","id":"15548264","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"What you describe does look like the correct behaviour w.r.t the java doc. \nFor reference, broker side, messages are retained in the subscription that matches the consumer. On close, any unacked messages are replayed back to the queue for delivery to another consumer.\nIt looks like the close needs to be deferred till the session closes in this client ack case. That is the behaviour in a transaction. However we would need a new callback on the session to track this. Not a trivial fix but doable.\nFor your use case, is a transacted session an option?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-05T09:59:48.347+0000","updated":"2016-10-05T09:59:48.347+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13009812/comment/15549130","id":"15549130","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yuriyc","name":"yuriyc","key":"yuriyc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuriy","active":true,"timeZone":"Etc/UTC"},"body":"Gary, thank you for the quick response.\nI know that transacted session will work and it does, but in our case there is an explicit requirement to use a non-transacted JMS session.\nBy the way this sequence works for other JMS providers like IBM WebSphere MQ, OpenMQ and WebLogic.\nAnother issue here is acknowledge() returns successfully, which in general means that message was acknowledged on JMS server side.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yuriyc","name":"yuriyc","key":"yuriyc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuriy","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-05T15:52:14.350+0000","updated":"2016-10-05T15:52:14.350+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13009812/comment/15549300","id":"15549300","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"actually the fix may be a simple as deferring the close in this case, the session close will cleanup in any event. Will give the unit tests a whirl to see if this change breaks any existing use case.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-05T16:52:07.395+0000","updated":"2016-10-05T16:52:07.395+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13009812/comment/15551708","id":"15551708","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"This essentially comes down to being able to do the following:\n{code}\n        consumer.close();\n        message.acknowledge();\n{code}\nDeferring the close till the session closes makes this work but there are many tests that demo uses cases where close is expected to release un-acked messages. I think we can't break this expectation so it would need to be configurable (yet another option).\nAs an alternative, we can make message.acknowledge(); fail if the consumer is closed. This will ensure that the is no false positive from the acknowledge call.\nWould that be sufficient for your use case?\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-06T11:44:11.957+0000","updated":"2016-10-06T11:44:11.957+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13009812/comment/15551722","id":"15551722","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"body":"[~gtully], I've been watching this thread and my first thoughts were what you discovered, that things would break if this behavior changed.  I know I have written code that relies on this behavior (ie closing the consumer will cause redelivery without closing the session)\n\nTo me this use case seems a bit odd as a JMS session should not be shared across threads.  The spec is clear in that a session should be single threaded.  So having two different threads receive a message and then try to call acknowledge should be considered invalid anyways in my opinion based on the spec.\n\nThat seems to be the fundamental issue in this use case is the timing with the two threads.  If it was a single thread receiving and acknowledge then it could be written in such a way to always call acknowledge before closing.\n\nSo based on that, I would think having message.acknowledge() fail if a consumer was already closed being the best solution.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"created":"2016-10-06T11:53:47.389+0000","updated":"2016-10-06T12:00:00.683+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13009812/comment/15551871","id":"15551871","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yuriyc","name":"yuriyc","key":"yuriyc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuriy","active":true,"timeZone":"Etc/UTC"},"body":"Gary, I think having message.acknowledge() fail if a consumer was already closed can be considered as workaround, which prevents unexpected redelivery (in other words duplication of messages).\n\nBut this type of fix will not make behavior compliant to JMS specification.\nYou are right: JMS session should not be shared across threads.\nBut JMS specification explicitly states that method close() is the only method of message consumer and session, which can be called concurrently:\nhttps://docs.oracle.com/javaee/7/api/javax/jms/MessageConsumer.html#close--\nhttps://docs.oracle.com/javaee/7/api/javax/jms/Session.html#close--\nThat's why consumer.close() is frequently used from another thread to make consumer.receive() return. \n\nIn the described use case both receive() and acknowledge() methods are invoked from the same thread. Method close() is invoked from another thread.\nTherefore it is absolutely valid use case.\n\nThread1 : Message message = consumer.receive();\nThread2 : consumer.close();\nThread1: message.acknowledge();\n\nI think that till the next major release of ActiveMQ some configuration option that will allow to switch to legacy behavior (or otherwise to the new behavior) would be acceptable solution for all ActiveMQ users.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yuriyc","name":"yuriyc","key":"yuriyc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuriy","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-06T12:59:02.904+0000","updated":"2016-10-06T12:59:02.904+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13009812/comment/15551904","id":"15551904","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"body":"Yep, you are right about the close() call being allowed and I suppose now that I think about it that makes sense to be able to close a message listener or consumer. So based on the spec allowing the close() method to be called from another thread I do agree that this is in fact a valid use case.\n\nI think the default behavior should just be message.acknowledge() will fail if the consumer was closed.  Then, depending on how much work it is to implement, a flag could also be added to allow the close to be deferred to the session close to change the behavior.  I'll let Gary comment on this as he has looked into it and knows better about the level of effort required to make these changes.\n\nWhatever fix is done I can back port it to 5.14.x so that it will go into a 5.14.2 release.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cshannon","name":"cshannon","key":"christopher.l.shannon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=christopher.l.shannon&avatarId=24614","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=christopher.l.shannon&avatarId=24614","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=christopher.l.shannon&avatarId=24614","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=christopher.l.shannon&avatarId=24614"},"displayName":"Christopher L. Shannon","active":true,"timeZone":"America/New_York"},"created":"2016-10-06T13:18:21.332+0000","updated":"2016-10-06T13:18:21.332+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13009812/comment/15554576","id":"15554576","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit e91f5c8062f81a76e6983c489bfd092ce4071480 in activemq's branch refs/heads/master from [~gtully]\n[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e91f5c8 ]\n\nAMQ-6454 - ensure message.acknowledge throws if consumer has closed and message has been released broker side\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-07T08:57:56.457+0000","updated":"2016-10-07T08:57:56.457+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13009812/comment/15554594","id":"15554594","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"What would be a good name for the connection factory config option that ignores consumer.close for client or invdvidual ack mode such that session close is required to release the consumer and unacked messages? \n\nHere is one candidate:\n - ignoreConsumerCloseOnClientAck=true\n\nI think it would default to false to preserve typical usage.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-07T09:05:05.634+0000","updated":"2016-10-07T09:05:05.634+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13009812/comment/15555322","id":"15555322","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yuriyc","name":"yuriyc","key":"yuriyc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuriy","active":true,"timeZone":"Etc/UTC"},"body":"Gary, will it be possible to specify this configuration option in \"java.naming.provider.url\" like \"tcp://localhost:61616?option=value\" when instantiation of JNDI initial context and connection factory is done in JMS provider independent way?\n\nWill enabling of this option (deferred close) make consumer.receive() to return after consumer.close()?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yuriyc","name":"yuriyc","key":"yuriyc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuriy","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-07T15:04:26.717+0000","updated":"2016-10-07T15:04:26.717+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13009812/comment/15555409","id":"15555409","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"yes, that would be in the intent. When the broker url is: host:port?jms ignoreConsumerCloseOnClientAck=true \nthe close would be ignored, session close will call close on all consumers. Then the close check in the message.acknowledge would pass and the ack would work.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-07T15:37:23.939+0000","updated":"2016-10-07T15:37:23.939+0000"}],"maxResults":12,"total":12,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6454/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i34gnb:"}}