{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12701319","self":"https://issues.apache.org/jira/rest/api/2/issue/12701319","key":"AMQ-5100","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/10003","id":"10003","description":"Resolved","name":"Resolved"},"customfield_12312322":null,"customfield_12310220":"2016-01-25T13:17:21.253+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed May 04 22:09:16 UTC 2016","customfield_12310420":"379665","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_67661032582_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2016-05-04T21:57:41.807+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-5100/watchers","watchCount":4,"isWatching":false},"created":"2014-03-13T19:13:49.322+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-05-04T22:09:16.175+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"I have attempted to configure PKCS11/NSS support in ActiveMQ, however, I am receiving the following exception:\n\nCaused by: java.io.FileNotFoundException: class path resource [NONE] cannot be opened because it does not exist\n        at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:157)\n        at org.apache.activemq.spring.SpringSslContext.createKeyManagerKeyStore(SpringSslContext.java:119)\n        at org.apache.activemq.spring.SpringSslContext.createKeyManagers(SpringSslContext.java:88)\n        at org.apache.activemq.spring.SpringSslContext.afterPropertiesSet(SpringSslContext.java:65)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:622)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1581)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1522)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1452)\n        ... 40 more\n\nMy configured sslContext for the broker looks like this:\n\n        <sslContext>\n                <sslContext\n                        keyStore=\"NONE\" keyStoreType=\"PKCS11\" keyStorePassword=\"password\"\n                        trustStore=\"/etc/activemqssl/truststore.jks\" trustStorePassword=\"password\"\n                />\n        </sslContext>\n\nAFAIK, setting keyStore to \"NONE\" is the generally accepted way to do with with PKCS11. The code should generate a warning at most for this, but instead I receive the above exception and a failure to load the keystore.\n\nThe activemq code looks like this (in org.apache.activemq.spring.SpringSslContext):\n    private KeyStore createKeyManagerKeyStore() throws Exception {\n        if( keyStore ==null ) {\n            return null;\n        }\n\n        KeyStore ks = KeyStore.getInstance(keyStoreType);\n        InputStream is=Utils.resourceFromString(keyStore).getInputStream();\n        try {\n            ks.load(is, keyStorePassword==null? null : keyStorePassword.toCharArray());\n        } finally {\n            is.close();\n        }\n        return ks;\n    }\n\nIt looks like this should just be setting \"is\" to null, generating a warning, and then calling ks.load with the null inputstream (the nss library will load the nss files based upon the nss.cfg file).\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"379950","customfield_12312823":null,"summary":"PKCS11 (NSS-FIPS) support in A-MQ/ActiveMQ","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jsight","name":"jsight","key":"jsight","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jesse Sightler","active":true,"timeZone":"America/Havana"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jsight","name":"jsight","key":"jsight","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jesse Sightler","active":true,"timeZone":"America/Havana"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12701319/comment/15115177","id":"15115177","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Leaski","name":"Leaski","key":"leaski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tristan Leask","active":true,"timeZone":"Europe/London"},"body":"Ok, I am trying to do this as well, and came across the same error.  I got passed this error by editing the SSLContext definition like so...\n\n{code}\n<sslContext keyStore=\"c:/nss/cert/key3.db\" keyStoreType=\"PKCS11\" keyStorePassword=\"password\" trustStore=\"c:/nss/cert/cert8.db\" trustStoreType=\"PKCS11\" trustStorePassword=\"password\"/>\n{code}\n\nNote, my wrapper.conf file had all the trust and key store entries commented out (running on Windows).\n\nEven though you get past this error, you then come across a \"Transport Connector could not be registered in JMX\" due to the random number generator and FIPS Mode...\n\n{code}\nINFO   | jvm 1    | 2016/01/25 12:57:11 | org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [activemq.xml]: Invocation of init method failed; nested exception is java.io.IOException: Transport Connector could not be registered in JMX: FIPS mode: SecureRandom must be from provider SunPKCS11-NSSfips\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1420)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:293)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:290)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:192)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:585)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:108)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:108)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:72)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:148)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:90)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat java.lang.reflect.Method.invoke(Unknown Source)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.console.Main.runTaskClass(Main.java:257)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.apache.activemq.console.Main.main(Main.java:111)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat java.lang.reflect.Method.invoke(Unknown Source)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)\nINFO   | jvm 1    | 2016/01/25 12:57:11 | \tat java.lang.Thread.run(Unknown Source)\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Leaski","name":"Leaski","key":"leaski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tristan Leask","active":true,"timeZone":"Europe/London"},"created":"2016-01-25T13:17:21.253+0000","updated":"2016-01-25T17:10:07.694+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12701319/comment/15115562","id":"15115562","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Leaski","name":"Leaski","key":"leaski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tristan Leask","active":true,"timeZone":"Europe/London"},"body":"Resolved!!!!\n\nManaged to get past that previous error and now the ActiveMQ is starting under Java running in FIPS Mode, and thus hopefully, ActiveMQ is running ok with FIPS.  Had to edit the SSLContext to the following...\n\n{code}\n<sslContext keyStore=\"c:/nss/cert/key3.db\" keyStoreType=\"PKCS11\" keyStorePassword=\"password\" secureRandomAlgorithm=\"PKCS11\" trustStore=\"c:/nss/cert/cert8.db\" trustStoreType=\"PKCS11\" trustStorePassword=\"password\"/>\n{code}\n\nBasically, the stores should be pointing to the NSS certificate DB, and the Store Types and Secure Random Number Generator Algorithms should be set to PKCS11.\n\nNote, I have disabled JMX on my broker as I don't need it, not sure if this has any affect.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Leaski","name":"Leaski","key":"leaski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tristan Leask","active":true,"timeZone":"Europe/London"},"created":"2016-01-25T17:09:47.599+0000","updated":"2016-01-25T17:09:47.599+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12701319/comment/15116284","id":"15116284","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=artnaseef","name":"artnaseef","key":"artnaseef","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Arthur Naseef","active":true,"timeZone":"America/Phoenix"},"body":"This seems like a reasonable scenario and fix.  Anytime the SSL context needs to be customized, this is how it must be done.\n\nCan we close this ticket?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=artnaseef","name":"artnaseef","key":"artnaseef","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Arthur Naseef","active":true,"timeZone":"America/Phoenix"},"created":"2016-01-25T23:35:24.295+0000","updated":"2016-01-25T23:35:24.295+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12701319/comment/15116986","id":"15116986","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Leaski","name":"Leaski","key":"leaski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tristan Leask","active":true,"timeZone":"Europe/London"},"body":"From my perspective, yes, though it would be good to get a comment from the OP ([~jsight])","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Leaski","name":"Leaski","key":"leaski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Tristan Leask","active":true,"timeZone":"Europe/London"},"created":"2016-01-26T09:32:36.413+0000","updated":"2016-01-26T09:32:47.426+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12701319/comment/15271525","id":"15271525","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"for the record - I think \"suppressMBean\" would allow just the transportConnector mbean to be dropped so that the rest of jmx could work. see: http://activemq.apache.org/jmx.html","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-04T22:09:16.175+0000","updated":"2016-05-04T22:09:16.175+0000"}],"maxResults":5,"total":5,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-5100/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1tf1j:"}}