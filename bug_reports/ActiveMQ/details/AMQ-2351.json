{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12482360","self":"https://issues.apache.org/jira/rest/api/2/issue/12482360","key":"AMQ-2351","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315620","id":"12315620","description":"","name":"5.3.0","archived":false,"released":true,"releaseDate":"2009-10-13"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Aug 28 09:44:02 UTC 2009","customfield_12310420":"74972","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_1793303396_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2009-08-28T09:44:03.464+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-2351/watchers","watchCount":1,"isWatching":false},"created":"2009-08-07T15:35:40.068+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12315620","id":"12315620","description":"","name":"5.3.0","archived":false,"released":true,"releaseDate":"2009-10-13"}],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2009-08-28T09:44:03.448+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313903","id":"12313903","name":"Transport"}],"timeoriginalestimate":null,"customfield_12310080":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10092","value":"Unit Test Broken","id":"10092"}],"description":"{code}\nThread dumps of activemq trunk :: Nightly Solaris #329\nLoading...\nProcess tree:\nClick on an item in the tree to view thread dump.\nPID: 6726 /opt/tools/pfm/jdk/bin/java\nPID: 7579 /bin/sh\nPID: 7580 /opt/tools/pfm/jdk/jre/bin/java\nProcess ID (PID): 6726\n\nProcess command line\n/opt/tools/pfm/jdk/bin/java -XX:MaxPermSize=192m -Xmx768M -DmavenOneRepository=\n\nThread t@988: (state = IN_NATIVE)\n - java.io.FileInputStream.readBytes(byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.io.FileInputStream.read(byte[], int, int) @bci=4, line=194 (Compiled frame)\n - sun.nio.cs.StreamDecoder$CharsetSD.readBytes() @bci=135, line=411 (Compiled frame)\n - sun.nio.cs.StreamDecoder$CharsetSD.implRead(char[], int, int) @bci=112, line=453 (Compiled frame)\n - sun.nio.cs.StreamDecoder.read(char[], int, int) @bci=180, line=183 (Compiled frame)\n - java.io.InputStreamReader.read(char[], int, int) @bci=7, line=167 (Interpreted frame)\n - java.io.BufferedReader.fill() @bci=145, line=136 (Interpreted frame)\n - java.io.BufferedReader.readLine(boolean) @bci=44, line=299 (Compiled frame)\n - java.io.BufferedReader.readLine() @bci=2, line=362 (Compiled frame)\n\n\nThread t@987: (state = IN_NATIVE)\n - java.io.FileInputStream.readBytes(byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.io.FileInputStream.read(byte[], int, int) @bci=4, line=194 (Compiled frame)\n - java.io.BufferedInputStream.read1(byte[], int, int) @bci=39, line=254 (Compiled frame)\n - java.io.BufferedInputStream.read(byte[], int, int) @bci=49, line=313 (Compiled frame)\n - sun.nio.cs.StreamDecoder$CharsetSD.readBytes() @bci=135, line=411 (Compiled frame)\n - sun.nio.cs.StreamDecoder$CharsetSD.implRead(char[], int, int) @bci=112, line=453 (Compiled frame)\n - sun.nio.cs.StreamDecoder.read(char[], int, int) @bci=180, line=183 (Compiled frame)\n - java.io.InputStreamReader.read(char[], int, int) @bci=7, line=167 (Interpreted frame)\n - java.io.BufferedReader.fill() @bci=145, line=136 (Interpreted frame)\n - java.io.BufferedReader.readLine(boolean) @bci=44, line=299 (Compiled frame)\n - java.io.BufferedReader.readLine() @bci=2, line=362 (Compiled frame)\n\n\nThread t@986: (state = IN_NATIVE)\n - java.lang.UNIXProcess.waitForProcessExit(int) @bci=0 (Interpreted frame)\n - java.lang.UNIXProcess.waitForProcessExit(int) @bci=0 (Interpreted frame)\n - java.lang.UNIXProcess.access$900(java.lang.UNIXProcess, int) @bci=2, line=17 (Interpreted frame)\n - java.lang.UNIXProcess$2$1.run() @bci=17, line=86 (Interpreted frame)\n\n\nThread t@64: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)\n - java.util.TimerThread.mainLoop() @bci=28, line=483 (Interpreted frame)\n - java.util.TimerThread.run() @bci=1, line=462 (Interpreted frame)\n\n\nThread t@27: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue.take() @bci=20, line=316 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask() @bci=156, line=994 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker) @bci=17, line=1054 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=575 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@26: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue.take() @bci=20, line=316 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask() @bci=156, line=994 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker) @bci=17, line=1054 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=575 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@25: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue.take() @bci=20, line=316 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask() @bci=156, line=994 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker) @bci=17, line=1054 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=575 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@24: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue.take() @bci=20, line=316 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask() @bci=156, line=994 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker) @bci=17, line=1054 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=575 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@23: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.LinkedBlockingQueue.take() @bci=20, line=316 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask() @bci=156, line=994 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.runWorker(hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker) @bci=17, line=1054 (Interpreted frame)\n - hidden.edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=575 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@15: (state = BLOCKED)\n\n\nThread t@14: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.ref.ReferenceQueue.remove(long) @bci=44, line=116 (Interpreted frame)\n - java.lang.ref.ReferenceQueue.remove() @bci=2, line=132 (Interpreted frame)\n - java.lang.ref.Finalizer$FinalizerThread.run() @bci=3, line=159 (Interpreted frame)\n\n\nThread t@13: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)\n - java.lang.ref.Reference$ReferenceHandler.run() @bci=46, line=116 (Interpreted frame)\n\n\nThread t@1: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)\n - java.lang.UNIXProcess.waitFor() @bci=8, line=115 (Interpreted frame)\n - org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.CommandLineUtils.executeCommandLine(org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.Commandline, java.io.InputStream, org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.StreamConsumer, org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.StreamConsumer, int) @bci=121, line=146 (Interpreted frame)\n - org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.CommandLineUtils.executeCommandLine(org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.Commandline, org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.StreamConsumer, org.apache.maven.surefire.booter.shade.org.codehaus.plexus.util.cli.StreamConsumer, int) @bci=5, line=98 (Interpreted frame)\n - org.apache.maven.surefire.booter.SurefireBooter.fork(java.util.Properties, boolean, boolean) @bci=241, line=673 (Interpreted frame)\n - org.apache.maven.surefire.booter.SurefireBooter.forkSuite(java.lang.Object[], java.lang.Object, boolean, boolean, java.util.Properties) @bci=35, line=493 (Interpreted frame)\n - org.apache.maven.surefire.booter.SurefireBooter.runSuitesForkPerTestSet() @bci=168, line=412 (Interpreted frame)\n - org.apache.maven.surefire.booter.SurefireBooter.run() @bci=62, line=249 (Interpreted frame)\n - org.apache.maven.plugin.surefire.SurefirePlugin.execute() @bci=44, line=537 (Interpreted frame)\n - org.apache.maven.plugin.DefaultPluginManager.executeMojo(org.apache.maven.project.MavenProject, org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession) @bci=412, line=483 (Interpreted frame)\n - org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(java.util.List, java.util.Stack, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject) @bci=503, line=678 (Interpreted frame)\n - org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(java.lang.String, java.util.Stack, org.apache.maven.execution.MavenSession, java.util.Map, org.apache.maven.project.MavenProject, org.apache.maven.lifecycle.Lifecycle) @bci=28, line=540 (Interpreted frame)\n - org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(java.lang.String, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject) @bci=50, line=519 (Interpreted frame)\n - org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(java.lang.String, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, org.apache.maven.monitor.event.EventDispatcher, java.lang.String, org.apache.maven.execution.ReactorManager, long, java.lang.String) @bci=4, line=371 (Interpreted frame)\n - org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(java.util.List, org.apache.maven.execution.ReactorManager, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, org.apache.maven.monitor.event.EventDispatcher) @bci=584, line=332 (Interpreted frame)\n - org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(org.apache.maven.execution.MavenSession, org.apache.maven.execution.ReactorManager, org.apache.maven.monitor.event.EventDispatcher) @bci=241, line=181 (Interpreted frame)\n - org.apache.maven.DefaultMaven.doExecute(org.apache.maven.execution.MavenExecutionRequest, org.apache.maven.monitor.event.EventDispatcher) @bci=474, line=356 (Interpreted frame)\n - org.apache.maven.DefaultMaven.execute(org.apache.maven.execution.MavenExecutionRequest) @bci=26, line=137 (Interpreted frame)\n - org.apache.maven.cli.MavenCli.main(java.lang.String[], org.codehaus.classworlds.ClassWorld) @bci=880, line=356 (Interpreted frame)\n - sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) @bci=0 (Interpreted frame)\n - sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=87, line=39 (Interpreted frame)\n - sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=6, line=25 (Interpreted frame)\n - java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) @bci=111, line=585 (Interpreted frame)\n - org.codehaus.classworlds.Launcher.launchEnhanced(java.lang.String[]) @bci=50, line=315 (Interpreted frame)\n - org.codehaus.classworlds.Launcher.launch(java.lang.String[]) @bci=2, line=255 (Interpreted frame)\n - org.codehaus.classworlds.Launcher.mainWithExitCode(java.lang.String[]) @bci=99, line=430 (Interpreted frame)\n - org.codehaus.classworlds.Launcher.main(java.lang.String[]) @bci=1, line=375 (Interpreted frame)\n\n\n\nProcess ID (PID): 7579\n\nProcess command line\n/bin/sh -c cd /x1/TeamCity/buildAgent/work/754220c26babe87e/activemq-fuse-trunk\n\nFailed to get thread dump for non-java process\n\nProcess ID (PID): 7580\n\nProcess command line\n/opt/tools/pfm/jdk/jre/bin/java -Xmx512M -jar /x1/TeamCity/buildAgent/temp/buil\n\nThread t@3341: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long) @bci=25, line=1122 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=77, line=475 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@3340: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long) @bci=25, line=1122 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=77, line=475 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@3339: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long) @bci=25, line=1122 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=77, line=475 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@3338: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long) @bci=25, line=1122 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=77, line=475 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@3337: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long) @bci=25, line=1122 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=77, line=475 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@384: (state = IN_NATIVE)\n - java.net.SocketOutputStream.socketWrite0(java.io.FileDescriptor, byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketOutputStream.socketWrite(byte[], int, int) @bci=44, line=92 (Compiled frame)\n - java.io.DataOutputStream.flush() @bci=4, line=106 (Compiled frame)\n - org.apache.activemq.transport.InactivityMonitor$3.run() @bci=31, line=139 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.runTask(java.lang.Runnable) @bci=44, line=650 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=28, line=675 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@343: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)\n - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@342: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)\n - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@326: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)\n - java.util.concurrent.ArrayBlockingQueue.take() @bci=20, line=341 (Compiled frame)\n - org.apache.activemq.transport.FutureResponse.getResult() @bci=4, line=40 (Compiled frame)\n - org.apache.activemq.ActiveMQConnection.syncSendPacket(org.apache.activemq.command.Command) @bci=20, line=1244 (Compiled frame)\n - org.apache.activemq.TransactionContext.commit() @bci=124, line=282 (Compiled frame)\n - org.apache.activemq.ActiveMQSession.commit() @bci=76, line=510 (Compiled frame)\n - org.apache.activemq.bugs.AMQ2102Test$Producer$1.onMessage(javax.jms.Message) @bci=132, line=358 (Compiled frame)\n - org.apache.activemq.ActiveMQMessageConsumer.dispatch(org.apache.activemq.command.MessageDispatch) @bci=245, line=1080 (Compiled frame)\n - org.apache.activemq.ActiveMQSessionExecutor.dispatch(org.apache.activemq.command.MessageDispatch) @bci=50, line=127 (Compiled frame)\n - org.apache.activemq.thread.PooledTaskRunner.runTask() @bci=65, line=122 (Compiled frame)\n - org.apache.activemq.thread.PooledTaskRunner$1.run() @bci=15, line=43 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.runTask(java.lang.Runnable) @bci=44, line=650 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=28, line=675 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@313: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)\n - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@312: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)\n - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@311: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)\n - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@308: (state = BLOCKED)\n - org.apache.activemq.transport.InactivityMonitor.oneway(java.lang.Object) @bci=6, line=224 (Compiled frame; information may be imprecise)\n - org.apache.activemq.transport.TransportFilter.oneway(java.lang.Object) @bci=5, line=83 (Compiled frame)\n - org.apache.activemq.transport.MutexTransport.oneway(java.lang.Object) @bci=12, line=40 (Compiled frame)\n - org.apache.activemq.broker.TransportConnection.dispatchSync(org.apache.activemq.command.Command) @bci=2, line=759 (Compiled frame)\n - org.apache.activemq.transport.TransportFilter.onCommand(java.lang.Object) @bci=5, line=68 (Compiled frame)\n - org.apache.activemq.transport.InactivityMonitor.onCommand(java.lang.Object) @bci=129, line=210 (Compiled frame)\n - org.apache.activemq.transport.TransportSupport.doConsume(java.lang.Object) @bci=16, line=84 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.doRun() @bci=7, line=203 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@307: (state = IN_NATIVE)\n - java.net.SocketOutputStream.socketWrite0(java.io.FileDescriptor, byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketOutputStream.socketWrite(byte[], int, int) @bci=44, line=92 (Compiled frame)\n - java.io.DataOutputStream.flush() @bci=4, line=106 (Compiled frame)\n - org.apache.activemq.transport.InactivityMonitor.onCommand(java.lang.Object) @bci=45, line=189 (Compiled frame)\n - org.apache.activemq.transport.TransportSupport.doConsume(java.lang.Object) @bci=16, line=84 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.doRun() @bci=7, line=203 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@295: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)\n - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@294: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@293: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@291: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@289: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@287: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@284: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@282: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@280: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@278: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@275: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@272: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@271: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@270: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@269: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@268: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@267: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@266: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@265: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@264: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@263: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@252: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)\n - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@251: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)\n - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@250: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)\n - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@249: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)\n - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@248: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)\n - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@247: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)\n - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer, javax.jms.MessageProducer) @bci=69, line=203 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@246: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)\n - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@245: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)\n - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@244: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)\n - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@243: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - org.apache.activemq.MessageDispatchChannel.dequeue(long) @bci=60, line=77 (Compiled frame)\n - org.apache.activemq.ActiveMQMessageConsumer.receive(long) @bci=53, line=546 (Compiled frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session, javax.jms.MessageConsumer) @bci=21, line=184 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Session) @bci=23, line=170 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages(javax.jms.Connection) @bci=35, line=157 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.processMessages() @bci=71, line=141 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Consumer.run() @bci=13, line=222 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@242: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.TimerThread.mainLoop() @bci=201, line=509 (Compiled frame)\n - java.util.TimerThread.run() @bci=1, line=462 (Interpreted frame)\n\n\nThread t@241: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.TimerThread.mainLoop() @bci=201, line=509 (Compiled frame)\n - java.util.TimerThread.run() @bci=1, line=462 (Interpreted frame)\n\n\nThread t@239: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@237: (state = IN_NATIVE)\n - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpBufferedInputStream.read() @bci=12, line=58 (Compiled frame)\n - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@233: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - java.lang.Object.wait() @bci=2, line=474 (Compiled frame)\n - org.apache.activemq.kaha.impl.async.DataFileAppender$2.run() @bci=4, line=227 (Interpreted frame)\n\n\nThread t@230: (state = IN_NATIVE)\n - java.net.PlainSocketImpl.socketAccept(java.net.SocketImpl) @bci=0 (Interpreted frame)\n - java.net.PlainSocketImpl.socketAccept(java.net.SocketImpl) @bci=0 (Interpreted frame)\n - java.net.PlainSocketImpl.accept(java.net.SocketImpl) @bci=7, line=384 (Interpreted frame)\n - java.net.ServerSocket.implAccept(java.net.Socket) @bci=50, line=450 (Interpreted frame)\n - java.net.ServerSocket.accept() @bci=48, line=421 (Interpreted frame)\n - org.apache.activemq.transport.tcp.TcpTransportServer.run() @bci=13, line=280 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@229: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Compiled frame)\n - org.apache.activemq.transport.tcp.TcpTransportServer$1.run() @bci=31, line=352 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@227: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.ref.ReferenceQueue.remove(long) @bci=44, line=116 (Interpreted frame)\n - java.lang.ref.ReferenceQueue.remove() @bci=2, line=132 (Interpreted frame)\n - sun.rmi.transport.ObjectTable$Reaper.run() @bci=3, line=336 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@225: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - java.lang.Object.wait() @bci=2, line=474 (Compiled frame)\n - org.apache.activemq.kaha.impl.async.DataFileAppender$2.run() @bci=4, line=227 (Interpreted frame)\n\n\nThread t@44: (state = BLOCKED)\n - java.lang.Thread.sleep(long) @bci=0 (Interpreted frame)\n - java.lang.Thread.sleep(long) @bci=0 (Interpreted frame)\n - sun.rmi.transport.DGCImpl$LeaseChecker.run() @bci=3, line=310 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@39: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.ref.ReferenceQueue.remove(long) @bci=44, line=116 (Interpreted frame)\n - sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run() @bci=95, line=501 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@32: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - sun.misc.GC$Daemon.run() @bci=51, line=100 (Interpreted frame)\n\n\nThread t@30: (state = IN_NATIVE)\n - java.net.PlainSocketImpl.socketAccept(java.net.SocketImpl) @bci=0 (Interpreted frame)\n - java.net.PlainSocketImpl.socketAccept(java.net.SocketImpl) @bci=0 (Interpreted frame)\n - java.net.PlainSocketImpl.accept(java.net.SocketImpl) @bci=7, line=384 (Interpreted frame)\n - java.net.ServerSocket.implAccept(java.net.Socket) @bci=50, line=450 (Interpreted frame)\n - java.net.ServerSocket.accept() @bci=48, line=421 (Interpreted frame)\n - sun.rmi.transport.tcp.TCPTransport.run() @bci=59, line=340 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)\n\n\nThread t@27: (state = IN_NATIVE)\nError occurred during stack walking:\n\n\nThread t@26: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)\n - java.util.TimerThread.mainLoop() @bci=28, line=483 (Interpreted frame)\n - java.util.TimerThread.run() @bci=1, line=462 (Interpreted frame)\n\n\nThread t@21: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.TimerThread.mainLoop() @bci=201, line=509 (Compiled frame)\n - java.util.TimerThread.run() @bci=1, line=462 (Interpreted frame)\n\n\nThread t@15: (state = BLOCKED)\n\n\nThread t@14: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.Object.wait(long) @bci=0 (Interpreted frame)\n - java.lang.ref.ReferenceQueue.remove(long) @bci=44, line=116 (Interpreted frame)\n - java.lang.ref.ReferenceQueue.remove() @bci=2, line=132 (Interpreted frame)\n - java.lang.ref.Finalizer$FinalizerThread.run() @bci=3, line=159 (Interpreted frame)\n\n\nThread t@13: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - java.lang.Object.wait() @bci=2, line=474 (Compiled frame)\n - java.lang.ref.Reference$ReferenceHandler.run() @bci=46, line=116 (Interpreted frame)\n\n\nThread t@1: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Compiled frame)\n - java.util.concurrent.ArrayBlockingQueue.take() @bci=20, line=341 (Compiled frame)\n - org.apache.activemq.transport.FutureResponse.getResult() @bci=4, line=40 (Compiled frame)\n - org.apache.activemq.ActiveMQConnection.syncSendPacket(org.apache.activemq.command.Command) @bci=20, line=1244 (Compiled frame)\n - org.apache.activemq.TransactionContext.commit() @bci=124, line=282 (Compiled frame)\n - org.apache.activemq.ActiveMQSession.commit() @bci=76, line=510 (Compiled frame)\n - org.apache.activemq.bugs.AMQ2102Test$Producer.sendMessages(javax.jms.Session, javax.jms.Destination, javax.jms.MessageConsumer) @bci=41, line=372 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Producer.sendMessages(javax.jms.Session, javax.jms.Destination) @bci=14, line=313 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Producer.sendMessages(javax.jms.Session) @bci=12, line=300 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Producer.sendMessages(org.apache.activemq.ActiveMQConnection) @bci=11, line=280 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Producer.sendMessages() @bci=24, line=262 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test$Producer.execute(java.lang.String[]) @bci=1, line=248 (Interpreted frame)\n - org.apache.activemq.bugs.AMQ2102Test.testMasterSlaveBug() @bci=70, line=487 (Interpreted frame)\n - sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) @bci=0 (Interpreted frame)\n - sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=87, line=39 (Interpreted frame)\n - sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=6, line=25 (Interpreted frame)\n - java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) @bci=111, line=585 (Interpreted frame)\n - junit.framework.TestCase.runTest() @bci=107, line=168 (Interpreted frame)\n - junit.framework.TestCase.runBare() @bci=7, line=134 (Interpreted frame)\n - org.apache.activemq.CombinationTestSupport.runBare() @bci=8, line=90 (Interpreted frame)\n - org.apache.activemq.CombinationTestSupport.runBare() @bci=53, line=96 (Interpreted frame)\n - junit.framework.TestResult$1.protect() @bci=4, line=110 (Interpreted frame)\n - junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable) @bci=1, line=128 (Interpreted frame)\n - junit.framework.TestResult.run(junit.framework.TestCase) @bci=18, line=113 (Interpreted frame)\n - junit.framework.TestCase.run(junit.framework.TestResult) @bci=2, line=124 (Interpreted frame)\n - junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult) @bci=2, line=232 (Interpreted frame)\n - junit.framework.TestSuite.run(junit.framework.TestResult) @bci=40, line=227 (Interpreted frame)\n - org.junit.internal.runners.JUnit38ClassRunner.run(org.junit.runner.notification.RunNotifier) @bci=21, line=81 (Interpreted frame)\n - org.apache.maven.surefire.junit4.JUnit4TestSet.execute(org.apache.maven.surefire.report.ReporterManager, java.lang.ClassLoader) @bci=30, line=62 (Interpreted frame)\n - org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(org.apache.maven.surefire.testset.SurefireTestSet, org.apache.maven.surefire.report.ReporterManager, java.lang.ClassLoader) @bci=43, line=140 (Interpreted frame)\n - org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(java.lang.String, org.apache.maven.surefire.report.ReporterManager, java.lang.ClassLoader) @bci=74, line=165 (Interpreted frame)\n - org.apache.maven.surefire.Surefire.run(java.util.List, java.lang.Object[], java.lang.String, java.lang.ClassLoader, java.lang.ClassLoader, java.util.Properties, java.lang.Boolean) @bci=92, line=107 (Interpreted frame)\n - sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) @bci=0 (Interpreted frame)\n - sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=87, line=39 (Interpreted frame)\n - sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=6, line=25 (Interpreted frame)\n - java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) @bci=111, line=585 (Interpreted frame)\n - org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(java.lang.String, java.util.Properties) @bci=361, line=289 (Interpreted frame)\n - org.apache.maven.surefire.booter.SurefireBooter.main(java.lang.String[]) @bci=717, line=1005 (Interpreted frame)\n{code}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"161763","customfield_12312823":null,"summary":"hung connection - blocked on InactivityMonitor flush and socket write AMQ2012Test","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482360/comment/12941050","id":"12941050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"looks like InactivityMonitor has two threads active on its underlying transport - one sending a keepalive and the other responding to a keep alive (both threads with flush() in the stack trace). These events need to be synchronized. Why exactly this can cause write to hang needs some more investigation.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2009-08-07T15:37:31.990+0000","updated":"2009-08-07T15:37:31.990+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482360/comment/12941060","id":"12941060","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"seems odd that we reply to a keepalive, was introduced a good while back: http://svn.apache.org/viewvc?view=rev&revision=631965 \nrational seems to be with very low inactivity durations, a reply would keep traffic running though the connection at very regular intervals - as fast as possible that is so to reduce inactivity timeouts.\n\nit may make sense to make this capability optional as the norm is not to use very short inactivity durations.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2009-08-07T16:27:03.117+0000","updated":"2009-08-07T16:27:03.117+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12482360/comment/12941644","id":"12941644","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"made keepAliveResponseRequired optional and defaulted to false. The use case for requiring a response is extremely low inactivity timeouts, of the order of 100 miliseconds. If that requirement becomes a necessity again this can be revisited with some more state management or via some alternative solution.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2009-08-28T09:44:02.802+0000","updated":"2009-08-28T09:44:02.802+0000"}],"maxResults":3,"total":3,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-2351/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0s1rr:"}}