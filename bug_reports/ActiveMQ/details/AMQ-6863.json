{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13118576","self":"https://issues.apache.org/jira/rest/api/2/issue/13118576","key":"AMQ-6863","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2017-11-16T14:10:58.619+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Nov 27 12:10:56 UTC 2017","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6863/watchers","watchCount":2,"isWatching":false},"created":"2017-11-15T15:48:56.731+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12341669","id":"12341669","name":"5.15.2","archived":false,"released":true,"releaseDate":"2017-10-21"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-11-27T12:10:56.159+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12313892","id":"12313892","name":"Broker"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"I am using a file based cursor with durable topic subscriptions because in my\r\ntests the broker would run out of memory when dealing with large numbers of\r\nmessages without an active consumer.\r\nI have run into a NullPointerException when the messages meant for the topic\r\nwith an active durable subscription expire. Here is part of the stack trace:\r\n\r\njava.lang.NullPointerException: null\r\n        at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:586)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at org.apache.activemq.broker.region.Topic.messageExpired(Topic.java:810)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.region.cursors.FilePendingMessageCursor.discardExpiredMessage(FilePendingMessageCursor.java:489)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:247)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.region.cursors.AbstractPendingMessageCursor.addMessageLast(AbstractPendingMessageCursor.java:93)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:157)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:279)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at org.apache.activemq.broker.region.Topic$2.recoverMessage(Topic.java:314)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore$6.execute(KahaDBStore.java:1012)\r\n[activemq-kahadb-store-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)\r\n[activemq-kahadb-store-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.recoverSubscription(KahaDBStore.java:999)\r\n[activemq-kahadb-store-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.store.ProxyTopicMessageStore.recoverSubscription(ProxyTopicMessageStore.java:108)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at org.apache.activemq.broker.region.Topic.activate(Topic.java:307)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:123)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at org.apache.activemq.broker.region.Topic.addSubscription(Topic.java:164)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.region.TopicRegion.addSubscriptionsForDestination(TopicRegion.java:287)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:162)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:339)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:239)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:174)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:104)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:200)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:189)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:189)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:119)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.BrokerService$6.start(BrokerService.java:2370)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.BrokerService.doStartBroker(BrokerService.java:747)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at\r\norg.apache.activemq.broker.BrokerService.startBroker(BrokerService.java:733)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:636)\r\n[activemq-broker-5.15.2.jar:5.15.2]\r\n\r\nI looked at the code and it seems to me that this is caused by the method\r\norg.apache.activemq.broker.region.cursors.FilePendingMessageCursor#discardExpiredMessage:\r\n\r\n   private void discardExpiredMessage(MessageReference reference) {\r\n        LOG.debug(\"Discarding expired message {}\", reference);\r\n        if (reference.isExpired() && broker.isExpired(reference)) {\r\n            ConnectionContext context = new ConnectionContext(new\r\nNonCachedMessageEvaluationContext());\r\n            context.setBroker(broker);\r\n           \r\n((Destination)reference.getRegionDestination()).messageExpired(context,\r\nnull, new IndirectMessageReference(reference.getMessage()));\r\n        }\r\n    }\r\n\r\nThere the subscription passed to Destination#messageExpired is set to null.\r\nIf the destination is a topic, then later in\r\norg.apache.activemq.broker.region.Topic#acknowledge:\r\n\r\n    @Override\r\n    public void acknowledge(ConnectionContext context, Subscription sub,\r\nfinal MessageAck ack,\r\n            final MessageReference node) throws IOException {\r\n        if (topicStore != null && node.isPersistent()) {\r\n            DurableTopicSubscription dsub = (DurableTopicSubscription) sub;\r\n            SubscriptionKey key = dsub.getSubscriptionKey();\r\n            topicStore.acknowledge(context, key.getClientId(),\r\nkey.getSubscriptionName(), node.getMessageId(),\r\n                    convertToNonRangedAck(ack, node));\r\n        }\r\n        messageConsumed(context, node);\r\n    }\r\n\r\nThe code dsub.getSubscriptionKey() throws an NPE. \r\n\r\nI suspect that this problem also applies to the default org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor which uses org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor internally but so far I was not able to reproduce it. ","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12899382","id":"12899382","filename":"TestActiveSubscriptions.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tpavelka","name":"tpavelka","key":"tpavelka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10445","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"},"displayName":"Tomas Pavelka","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-27T12:06:43.360+0000","size":6437,"mimeType":"text/x-java-source","content":"https://issues.apache.org/jira/secure/attachment/12899382/TestActiveSubscriptions.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12897775","id":"12897775","filename":"TestCursors.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tpavelka","name":"tpavelka","key":"tpavelka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10445","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"},"displayName":"Tomas Pavelka","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-15T15:50:59.149+0000","size":4317,"mimeType":"text/x-java-source","content":"https://issues.apache.org/jira/secure/attachment/12897775/TestCursors.java"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12899381","id":"12899381","filename":"TestHighMemoryWaterMark.java","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tpavelka","name":"tpavelka","key":"tpavelka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10445","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"},"displayName":"Tomas Pavelka","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-27T12:06:43.507+0000","size":11435,"mimeType":"text/x-java-source","content":"https://issues.apache.org/jira/secure/attachment/12899381/TestHighMemoryWaterMark.java"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"NPE when expiring messages with FilePendingMessageCursor and durable topic subscriptions","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tpavelka","name":"tpavelka","key":"tpavelka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10445","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"},"displayName":"Tomas Pavelka","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tpavelka","name":"tpavelka","key":"tpavelka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10445","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"},"displayName":"Tomas Pavelka","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13118576/comment/16253669","id":"16253669","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tpavelka","name":"tpavelka","key":"tpavelka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10445","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"},"displayName":"Tomas Pavelka","active":true,"timeZone":"Etc/UTC"},"body":"The attached test (TestCursors.java) reproduces the problem.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tpavelka","name":"tpavelka","key":"tpavelka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10445","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"},"displayName":"Tomas Pavelka","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-15T15:51:19.608+0000","updated":"2017-11-15T15:52:02.948+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13118576/comment/16255373","id":"16255373","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"As a workaround, with the default cursor,  it will respect the global memory limit for the broker.  broker.systemUsage.memoryUsage.limit and will stop caching messages in memory when it reaches 70% of that limit.\r\n\r\nTypically the file cursor is only useful for non persistent messages. For durable subs, the message are already on disk, so there is little point in accepting them and writing them to disk again.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-16T14:10:58.619+0000","updated":"2017-11-16T14:15:25.356+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13118576/comment/16264227","id":"16264227","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tpavelka","name":"tpavelka","key":"tpavelka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10445","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"},"displayName":"Tomas Pavelka","active":true,"timeZone":"Etc/UTC"},"body":"Here is why we can only achieve what we want with a file cursor, despite the file cursor saving to disk twice:\r\nWe have a group of topics (let's call them LIMITED.TOPIC) with durable subscribers that we want to limit by policies. For example, we set a policy that these topics can only use 70% of storage so that other destinations can still use the broker even if LIMITED.TOPIC fills up storage up to the limit allowed by policy.\r\nWe can run into a situation, where a durable consumer disconnect. We are using a hub and spoke topology, so eventually when the consumer is disconnected for long enough the storage for both hub and the sending broker fills up, here is a picture:\r\n\r\nspoke_broker(LIMITED.TOPIC:full) -> hub_broker(LIMITED.TOPIC:full)\r\n\r\nIn this situation, hub_broker has an inactive durable subscription from the disconnected consumer, but spoke_broker has an active subscription from hub_broker. Now spoke_broker will put messages from LIMITED.TOPIC into memory *up to the global limit* (as opposed to policy set high watermark). \r\nThis results in a situation where spoke_broker cannot process any other messages because its memory is full.\r\nThe only way we were able to solve this is by using a file cursor which (I guess) respects policy watermarks. But the file cursor has the bug with message expiration.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tpavelka","name":"tpavelka","key":"tpavelka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10445","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"},"displayName":"Tomas Pavelka","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-23T11:47:38.785+0000","updated":"2017-11-23T11:48:47.886+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13118576/comment/16264262","id":"16264262","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"body":"hmm, there is a broker attribute to disable retaining durable subs in memory... that may help.\r\nbroker.keepDurableSubsActive=false\r\n\r\nalso a durable sub has cursorMemoryHighWaterMark=70% by default, that can be reduced. That should limit what memory the durable subscriber uses for cached messages, make it 10% so even if it was the shared limit it would be 10% of that.\r\n\r\nAttach your activemq.xml so the policy entries in play are visible.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gtully","name":"gtully","key":"gtully","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Gary Tully","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-23T12:23:00.006+0000","updated":"2017-11-23T12:23:00.006+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13118576/comment/16266712","id":"16266712","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tpavelka","name":"tpavelka","key":"tpavelka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10445","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"},"displayName":"Tomas Pavelka","active":true,"timeZone":"Etc/UTC"},"body":"I have attached two tests:\r\n*TestActiveSubscriptions* shows that if we set org.apache.activemq.broker.BrokerService#setKeepDurableSubsActive to false, then messages do not flow on durable topics. The test passes if the setting is back at the default \"true\".\r\n*TestHighMemoryWatermark* shows how we would expect the highWatermark settings to work, i.e. when one topic hits its own watermark we can still send messages on another topic.\r\n\r\nLet me know if there is something we are not setting correctly.\r\n\r\nThanks,\r\nTomas ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tpavelka","name":"tpavelka","key":"tpavelka","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10445","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"},"displayName":"Tomas Pavelka","active":true,"timeZone":"Etc/UTC"},"created":"2017-11-27T12:10:56.139+0000","updated":"2017-11-27T12:10:56.139+0000"}],"maxResults":5,"total":5,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-6863/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3mtef:"}}