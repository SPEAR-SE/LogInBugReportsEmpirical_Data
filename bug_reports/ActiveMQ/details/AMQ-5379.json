{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12745452","self":"https://issues.apache.org/jira/rest/api/2/issue/12745452","key":"AMQ-5379","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311210","id":"12311210","key":"AMQ","name":"ActiveMQ","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/11160","id":"11160","description":"ActiveMQ","name":"ActiveMQ"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324951","id":"12324951","name":"5.11.0","archived":false,"released":true,"releaseDate":"2015-02-04"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2014-10-14T16:35:20.875+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Dec 04 11:46:45 UTC 2014","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_4854963115_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2014-11-27T14:08:07.347+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-5379/watchers","watchCount":3,"isWatching":false},"created":"2014-10-02T09:32:04.306+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324950","id":"12324950","name":"5.10.0","archived":false,"released":true,"releaseDate":"2014-06-10"}],"issuelinks":[{"id":"12400398","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12400398","type":{"id":"12310051","name":"Supercedes","inward":"is superceded by","outward":"supercedes","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310051"},"outwardIssue":{"id":"12720531","key":"AMQ-5221","self":"https://issues.apache.org/jira/rest/api/2/issue/12720531","fields":{"summary":"AMQP support has a hardcoded prefetch value of 100 on the server side","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-12-04T11:46:45.791+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12321807","id":"12321807","name":"AMQP","description":"AcitveMQ's AMQP Transport"}],"timeoriginalestimate":null,"customfield_12310080":null,"description":"Currently the prefetch size is hardcoded to the value of 100","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12684628","id":"12684628","filename":"0001-AMQ-5379-inspect-the-actual-total-credit-rather-than.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gemmellr","name":"gemmellr","key":"gemmellr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10441","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10441","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10441","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10441"},"displayName":"Robbie Gemmell","active":true,"timeZone":"Europe/London"},"created":"2014-12-02T12:09:31.596+0000","size":1306,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12684628/0001-AMQ-5379-inspect-the-actual-total-credit-rather-than.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310041":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"AMQP - allow setting prefetch size","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12745452/comment/14156273","id":"14156273","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"body":"Fixed with http://git-wip-us.apache.org/repos/asf/activemq/commit/838bbebe\n\nThe value can be set on the transport like\n\n{code}<transportConnector name=\"amqp\" uri=\"amqp://0.0.0.0:5672?maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600&amp;transport.prefetch=10\"/>{code}\n\nAlso, the value of the remote link credit will be respected if set.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"created":"2014-10-02T09:36:50.504+0000","updated":"2014-10-02T09:36:50.504+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12745452/comment/14171186","id":"14171186","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gemmellr","name":"gemmellr","key":"gemmellr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10441","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10441","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10441","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10441"},"displayName":"Robbie Gemmell","active":true,"timeZone":"Europe/London"},"body":"I just came across the update on http://activemq.apache.org/amqp.html which notes regarding the prefetch config toggle \"that the same value will be used for broker-side amqp receiver link that handles incoming messages\". This is probably going to lead to people accidently reducing the producer credit window to smaller values, which will then hammer producer performance, since even the default value of 100 is likely to be limiting in certain cases already. I would suggest adding a seperate config toggle to alter the credit window for producers independently from the vaue used for consumers.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gemmellr","name":"gemmellr","key":"gemmellr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10441","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10441","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10441","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10441"},"displayName":"Robbie Gemmell","active":true,"timeZone":"Europe/London"},"created":"2014-10-14T16:35:20.875+0000","updated":"2014-10-14T16:35:20.875+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12745452/comment/14171203","id":"14171203","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gemmellr","name":"gemmellr","key":"gemmellr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10441","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10441","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10441","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10441"},"displayName":"Robbie Gemmell","active":true,"timeZone":"Europe/London"},"body":"Separately, the consumer prefetching has some issues from an AMQP perspective, possibly due to a bit of a mismatch between how the internal consumer prefetch handling of the broker works (being set to a particular size window initially), and how the explicit handling of credit in AMQP 1.0 works (consumers explicitly grant/retract credit for the server to use to send messages, as and when appropriate to satisfy the consumer clients needs).\n\nFrom an AMQP perspective, a consumer can attach without any credit initiall, then grant it later when it is deemed appropriate to receive messages, and also retract it to ensure it doesnt get any messages during a period when it doesnt want any. These behaviours could be combined to implement 0-prefetch synchronous recieve for example. Currently it would seem that due to the default prefetch value the broker may send messages to the client in cases where it hasnt yet 'asked' (provided any credit) for them, or in cases where it has asked not to get any more until further notice, which could cause problems. It is possible that Proton will handlethis, by buffering all the messages that there is not credit to send, which in itself could cause problems later or lead to some interesting memory usage.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gemmellr","name":"gemmellr","key":"gemmellr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10441","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10441","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10441","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10441"},"displayName":"Robbie Gemmell","active":true,"timeZone":"Europe/London"},"created":"2014-10-14T16:47:54.332+0000","updated":"2014-10-14T16:50:01.780+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12745452/comment/14178382","id":"14178382","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"body":"Hi [~gemmellr]], thanks for these comments. It totally makes sense to do these changes. I pushed a commit that now configures producer side with the producerCredit property. On the other hand, the size of activemq consumer prefetch is dynamically set using the credit supplied in the link flow.\n\nhttps://github.com/apache/activemq/commit/ab3de0c4c2b8af83090558ebbea4ef91ce04024b\n\nCan you take a look at it and see if does what I mean it does. As link flow is sent for every message, I change the prefetch only after credit  reaches 0 and if it's different value than the one we have at the moment.\n\nAll tests work with this change, but as there are no way to customise the prefetch with current proton jms client, I couldn't test more advanced scenarios.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"created":"2014-10-21T13:30:44.291+0000","updated":"2014-10-21T13:30:44.291+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12745452/comment/14179862","id":"14179862","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gemmellr","name":"gemmellr","key":"gemmellr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10441","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10441","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10441","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10441"},"displayName":"Robbie Gemmell","active":true,"timeZone":"Europe/London"},"body":"Given his familiarity with the broker as a whole, [~tabish121] is possibly in a better position to comment overall on how the changes will work with the broker generally. That said, in terms of the AMQP related code change:\n\nThe new 'producerCredit' field in AmqpProtocolConverter is only being used during the initial opening of the producer (i.e proton receiver object). The existing 'prefetch' field value is still being used to replenish the producers credit when it gets used up later by incoming messages, which may mean the wrong amount of credit will be granted if the config values differ, so that process also needs update to use the producerCredit field.\n\nThe 'client preference' check here should probably be removed. The producer doesn't really get a say in the credit they are given from the server/receiver, any link credit value they set in a Flow frame is a reflection of the last value they know based on Flows sent to them from the server. AmqpProtocolConverter, Line 824:\n{noformat}\n        // Client is producing to this receiver object\n        org.apache.qpid.proton.amqp.transport.Target remoteTarget = receiver.getRemoteTarget();\n        int flow = producerCredit;\n        // use client's preference if set\n        if (receiver.getRemoteCredit() != 0) {\n            flow = receiver.getRemoteCredit();\n        }\n{noformat}\n\n\nSlight aside: Flow frames dont need to be sent after processing every message. Some clients may do that currently but when attention turns to efficiency and performance, adjusting the credit in batches and only sending the Flows more sparingly is what most will lkely do.\n\nI think the updated consumer prefetch handling should work in a more AMQP-like fashion in more cases, though I'm not sure if it yet fully handles the desire of a consumer to completely stop message delivery by moving the link credit back down to 0 (e.g using the flow drain flag, or by simply not replenishing credit as it is used for earlier consumed messages), and it may lead to some weirdness around configuring the ActiveMQ consumer prefetch repeatedly to a different values which are lower than the currently outstanding number of already prefetched messages. The main thing I wonder around that is, how would the broker as a whole react to reducing the ActiveMQ consumer prefetch setting below the number of messages that are already prefetched?\n\n(also, the null on the context is redundant since instanceof check handles that)\n{noformat}\n+    protected void processLinkFlow(Link link) throws Exception {\n+        Object context = link.getContext();\n+        int credit = link.getRemoteCredit();\n+        if (context != null && context instanceof ConsumerContext) {\n+            ConsumerContext consumerContext = (ConsumerContext)context;\n+            // change ActiveMQ consumer prefetch if needed\n+            if (consumerContext.credit == 0 && consumerContext.consumerPrefetch != credit && credit > 0) {\n+                ConsumerControl control = new ConsumerControl();\n+                control.setConsumerId(consumerContext.consumerId);\n+                control.setDestination(consumerContext.destination);\n+                control.setPrefetch(credit);\n+                consumerContext.consumerPrefetch = credit;\n+                sendToActiveMQ(control, null);\n+            }\n+            consumerContext.credit = credit;\n+        }\n+        ((AmqpDeliveryListener) link.getContext()).drainCheck();\n+    }\n{noformat}\n\nPerhaps confusingly, the link Flow event is raised by Proton for reasons other than simply receiving a Flow frame for the link, and incoming flow frames may not actually change the credit (but could effectively add or remote some), so this method may execute for a sending link even without a credit change. Using link.getRemoteCredit() doesnt return the amount of credit previously given by the remote receiver, but rather calculates the currently unused amount by doing '<remaining unused credit> - <messages still queued to send by procesing the transport>' (which I'm not certain of, but seems like it could even be negative if more messages have already attempted to be sent than there is now actually remaining credit for, which I believe makes proton buffer them). As a result, if all of the originally existing link credit had been used by prefetching at this point, only some of that amount of credit has been replenished so far by the remote receiver, link.getRemoteCredit() will presumably yeild a smaller number than the original credit window was, which could make it set the ActiveMQ consumer prefetch to this lower-than-previous value if consumerContext.credit has previously been recorded as 0 while the credit was all used. At this point <up to original credit window> messages may already be prefetched and still awaiting actual consumption, though the ActiveMQ prefetch may now set to a smaller value, only the as-yet-unused remaining AMQP credit. How would the broker react to that? Further, if that credit is then also used, and 'remote credit' hits 0 again, and the client subsequently Flows new credit as it consumes earlier messages, that could lead to 'remote credit' changing again to a different non-zero value than previously, possibly being used to update the ActiveMQ consumer prefetch again to match. This is to say, it could lead to the ActiveMQ consumer prefetch continuously being configured to new values whenever the available AMQP credit changes after previously being all used for a time.\n\nIn terms of testing, later releases of the 'old' Qpid AMQP 1.0 JMS client do let you configure the consumer prefetch, though the way of configuring SSL seems to have changed so other tests might need updated to update to using such a release. It would probably even be useful to test the prefetch related behaviour of the broker at a lower level, perhaps suing the proton engine directly, in order to get more fine grained control over the protocol interactions, though that is probably a task for later :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gemmellr","name":"gemmellr","key":"gemmellr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10441","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10441","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10441","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10441"},"displayName":"Robbie Gemmell","active":true,"timeZone":"Europe/London"},"created":"2014-10-22T12:46:21.722+0000","updated":"2014-10-22T12:46:21.722+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12745452/comment/14227680","id":"14227680","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"body":"Thanks for the comments Robbie. \n\nThe latest commit have the following changes:\n\n- now using producerCredit instead of prefetch in all places related to the producer\n- I bumped the default prefetch (and producer credit value) to 1000\n- We decided to simplify things in terms of prefetch and credit, as currently we can't control it fully. The user can set the value for the prefetch on the transport connector and if it does it will be used and not changed. If the value is not set, the consumer will use default value until we get the first flow and initial client preference. We will use that value afterwards and not change it. I think this is good enough for the most current use cases. We can refine logic later with the real use cases.\n- The problem with redelivery flag on the messages being set is fixed, as we now track the last delivered sequence id and inform the broker on consumer close","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"created":"2014-11-27T14:08:07.383+0000","updated":"2014-11-27T14:08:07.383+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12745452/comment/14231394","id":"14231394","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gemmellr","name":"gemmellr","key":"gemmellr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10441","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10441","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10441","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10441"},"displayName":"Robbie Gemmell","active":true,"timeZone":"Europe/London"},"body":"Hi Dejan,\n\nI think we need to change how the credit is observed after the initial flow, patch attached. As AMQPProtocolConverter could create the 'ActiveMQ consumer' with a 1000 msg prefetch (if we havent already also had a Flow before the Attach actually gets processed), it is likely it could buffer up to that many messages sends before we ever get a Flow, at which point the way the credit is currently observed (via getRemoteCredit()) wont actually give the amount of credit we received but rather what is currently believed to be left unused after accounting for buffered messages, leading us to underestimate the actual prefetch (it could even be negative if it already buffered sends for more messages than the actual received credit). I think getCredit() seems to be what to use instead.\n\nHaving said all that, I am now also thinking that a better way to go for now might be creating the 'ActiveMQ consumer' with 0 prefetch until the first flow arrives, and then giving it that much prefetch, since the AMQP consumer cant/wont actually be sent any messages over the wire until it gives the broker/proton credit anyway. This would help with multiple consumers etc by avoiding the 'ActiveMQ consumers' prefetching lots of messages they cant actually transmit to the AMQP consumer yet.\n\nThe above may possibly make the general issue underlying AMQ-5453 a little worse, since the 'ActiveMQ consumer' wouldnt have any 'advance credit' to use to get messages buffered ready to send before a 'drain' flow occurs. As it is currently almost entirely broken anyway, I'm not sure this would really be much more of an issue than already exists, which will still need a general fix either way. A possible saving grace in this specific case though is that I see that client is sending two flows, one with drain false then one with it true, which might still appear to work occasionally if messages get sent inbetween them.\n\nI think the changes here mean that anyone using ClientAcknowledge with the JMS clients will find it isnt able to recieve more messages than the consumers configured prefetch size within a single ack window, since the desire for more messages is communicated by granting more credit, which would now have no effect. That in itself isnt necessarily worse than it was in ActiveMQ 5.10, which had an internal fixed window of 100 messages, the only difference is that if AMQP clients set their prefetch down below the old fixed 100 (e.g, to 1) they then wont be able to exceed that, whereas previously they would have apparently been able to since up to 99 messages would have actually been buffered awaiting the new credit. I guess that by using the new 'transport.prefetch' config to set a value will essentially force it to behave as it did previously, which may be a workaround in some cases.\n\nWhen looking an issue relating to transactions, I came across the 'prefetch extension' concept in PrefetchSubscription. It currently looks to mainly use acknowlegement of specific messages to operate, but perhaps it could be modified to use credit (since we cant tell which specific messages, if any, that incoming credit may have been previously associated with) and help toward enabling things to work more along the lines of expectation for AMQP.\n\nSorry for writing another book size comment, I really dont mean to when I start :P\n\nRobbie","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gemmellr","name":"gemmellr","key":"gemmellr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10441","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10441","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10441","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10441"},"displayName":"Robbie Gemmell","active":true,"timeZone":"Europe/London"},"created":"2014-12-02T12:08:27.982+0000","updated":"2014-12-02T12:08:27.982+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12745452/comment/14231504","id":"14231504","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"I'd agree with Robbie's analysis here.  I think we should investigate whether we really need to be jumping the gun on granting prefetch instead of waiting for the client to tell us what it wants.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2014-12-02T14:06:01.142+0000","updated":"2014-12-02T14:06:01.142+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12745452/comment/14231618","id":"14231618","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"body":"Yeah, I also agree with it. The thing is that when I was trying to do that against 0.26 clients, I never got any flow from the client until I send something to it first. Also, setting the prefetch using transport.prefetch option is only for this legacy client as well. We have users that want to use 0.26 clients and control the prefetch, so that's the only way I managed to make it work.\n\nLet me try to write some test that demonstrates this initial prefetch 0 problem with 0.26 client, and maybe we can give it a more thought on how to make it work.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"created":"2014-12-02T15:26:31.885+0000","updated":"2014-12-02T15:26:31.885+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12745452/comment/14231656","id":"14231656","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"body":"Can we just encourage them to move onto a later QPid client release as I think that problem is addressed along with other fixes and improvements in later releases.  I've been testing out 0.30+ and been having good luck with a minor problem with QueueBrowsers that I'm trying to track down.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tabish121","name":"tabish121","key":"tabish121","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tabish121&avatarId=25249","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tabish121&avatarId=25249","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tabish121&avatarId=25249","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tabish121&avatarId=25249"},"displayName":"Timothy Bish","active":true,"timeZone":"America/Havana"},"created":"2014-12-02T15:43:28.876+0000","updated":"2014-12-02T15:43:28.876+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12745452/comment/14234150","id":"14234150","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"body":"I pushed the change that sets zero prefetch when nothing else is specified, and then use the first flow packet to adjust it. After upgrade to qpid 0.30 [AMQ-5405], all tests looks good. The commit also contains Robbie's patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dejanb","name":"dejanb","key":"dejanb","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dejan Bosanac","active":true,"timeZone":"Europe/Berlin"},"created":"2014-12-04T11:46:45.791+0000","updated":"2014-12-04T11:46:45.791+0000"}],"maxResults":11,"total":11,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/AMQ-5379/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i20pxz:"}}