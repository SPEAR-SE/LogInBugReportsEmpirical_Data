{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "id": "12313892",
            "name": "Broker",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12313892"
        }],
        "created": "2006-05-31T05:08:27.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Maxim Fateev",
            "key": "mfateev",
            "name": "mfateev",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mfateev",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310041": null,
        "customfield_12310080": null,
        "customfield_12310220": "2006-06-05T22:32:13.000+0000",
        "customfield_12310222": "1_*:*_1_*:*_1027584000_*|*_5_*:*_3_*:*_676001000_*|*_4_*:*_2_*:*_57093653719",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "2.0",
        "customfield_12310420": "84345",
        "customfield_12310920": "161558",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0s0i7:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 11 21:49:40 UTC 2006",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "The simplest way to reproduce the problem:\n1. Remove storage directory. \n2. Start broker using the following code:\n\n\n public static void main(String[] args)  throws Exception {\n           BrokerService broker = new BrokerService();\n           broker.setPersistent(true);\n           DefaultPersistenceAdapterFactory pFactory = new DefaultPersistenceAdapterFactory();\n           pFactory.setJournalLogFiles(1);\n           pFactory.setJournalLogFileSize(2048);\n           broker.setPersistenceFactory(pFactory);\n           broker.setUseJmx(false);\n           broker.addConnector(\"tcp://localhost:61616\");\n           broker.start();\n           Thread.sleep(1000000000000l);\n   }\n3. Shutdown the broker.\n4. Start broker.\nIt enters infinite loop\n\n[                          main] BrokerService                  INFO  ActiveMQ null JMS Message Broker (localhost) is starting\n[                          main] BrokerService                  INFO  For help or more information please see: http://incubator.apache.org/activemq/\n[                          main] JDBCPersistenceAdapter         INFO  Database driver recognized: [apache_derby_embedded_jdbc_driver]\n[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE TABLE ACTIVEMQ_MSGS(ID INTEGER NOT NULL, CONTAINER VARCHAR(250), MSGID_PROD VARCHAR(250), MSGID_SEQ INTEGER, EXPIRATION BIGINT, MSG BLOB, PRIMARY KEY ( ID ) )\n[                          main] DefaultJDBCAdapter             DEBUG Could not create JDBC tables; The message table already existed. Failure was: CREATE TABLE ACTIVEMQ_MSGS(ID INTEGER NOT NULL, CONTAINER VARCHAR(250), MSGID_PROD VARCHAR(250), MSGID_SEQ INTEGER, EXPIRATION BIGINT, MSG BLOB, PRIMARY KEY ( ID ) ) Message: Table/View 'ACTIVEMQ_MSGS' already exists in Schema 'APP'. SQLState: X0Y32 Vendor code: 20000\n[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE INDEX ACTIVEMQ_MSGS_MIDX ON ACTIVEMQ_MSGS (MSGID_PROD,MSGID_SEQ)\n[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE INDEX ACTIVEMQ_MSGS_CIDX ON ACTIVEMQ_MSGS (CONTAINER)\n[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE INDEX ACTIVEMQ_MSGS_EIDX ON ACTIVEMQ_MSGS (EXPIRATION)\n[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: CREATE TABLE ACTIVEMQ_ACKS(CONTAINER VARCHAR(250) NOT NULL, CLIENT_ID VARCHAR(250) NOT NULL, SUB_NAME VARCHAR(250) NOT NULL, SELECTOR VARCHAR(250), LAST_ACKED_ID INTEGER, PRIMARY KEY ( CONTAINER, CLIENT_ID, SUB_NAME))\n[                          main] DefaultJDBCAdapter             DEBUG Could not create JDBC tables; The message table already existed. Failure was: CREATE TABLE ACTIVEMQ_ACKS(CONTAINER VARCHAR(250) NOT NULL, CLIENT_ID VARCHAR(250) NOT NULL, SUB_NAME VARCHAR(250) NOT NULL, SELECTOR VARCHAR(250), LAST_ACKED_ID INTEGER, PRIMARY KEY ( CONTAINER, CLIENT_ID, SUB_NAME)) Message: Table/View 'ACTIVEMQ_ACKS' already exists in Schema 'APP'. SQLState: X0Y32 Vendor code: 20000\n[                          main] JDBCPersistenceAdapter         DEBUG Cleaning up old messages.\n[                          main] DefaultJDBCAdapter             DEBUG Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?) OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)\n[                          main] DefaultJDBCAdapter             DEBUG Deleted 0 old message(s).\n[                          main] JDBCPersistenceAdapter         DEBUG Cleanup done.\n[                          main] JournalPersistenceAdapter      INFO  Journal Recovery Started from: Active Journal: using 1 x 0.001953125 Megs at: /workplace/fateev/install/activemq-4.0-SNAPSHOT/activemq-core/activemq-data/journal\n[                          main] JournalPersistenceAdapter      DEBUG TRACE Entry: RECOVERED\n[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=53\n[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=97\n[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=0\n[                          main] JournalPersistenceAdapter      DEBUG TRACE Entry: RECOVERED\n[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=53\n[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=97\n[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=0\n[                          main] JournalPersistenceAdapter      DEBUG TRACE Entry: RECOVERED\n[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=53\n[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation offset=97\n[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=0\n\nThe log entry from getNextDataRecordLocation is coming from log statement I've added to LogFileManager.getNextDataRecordLocation:\n\n   public Location getNextDataRecordLocation(Location lastLocation) throws IOException, InvalidRecordLocationException {\n        RecordInfo ri = readRecordInfo(lastLocation);\n        while (true) {\n\n            int logFileId = ri.getLocation().getLogFileId();\n            int offset = ri.getNextLocation();\n            log.debug(\"getNextDataRecordLocation offset=\" + offset);\n            // Are we overflowing into next logFile?\n            if (offset >= ri.getLogFileState().getAppendOffset()) {\n                LogFileNode nextActive = ri.getLogFileState().getNextActive();\n                log.debug(\"getNextDataRecordLocation overflowing into next logFile=\" + (nextActive == null ? \"null\"  : String.valueOf(nextActive.getId())));\n                if (nextActive == null) {\n                    return null;\n                }\n                logFileId = nextActive.getId();\n                offset = 0;\n            }\n\n            try {\n                ri = readRecordInfo(new Location(logFileId, offset));\n            } catch (InvalidRecordLocationException e) {\n                return null;\n            }\n\n            // Is the next record the right record type?\n            if (ri.getHeader().getRecordType() == DATA_RECORD_TYPE) {\n                return ri.getLocation();\n            }\n            // No? go onto the next record.\n        }\n    }\n\nIt looks like recovery doesn't take into account that journaling storage file should have some end at some point. \n\nSimilar problem happens if multiple files of bigger size are used. It happens every time one of the log files grows bigger then size specified in pFactory.setJournalLogFileSize(...) call.\n\n",
        "duedate": null,
        "environment": "Linux RHEL 3",
        "fixVersions": [
            {
                "archived": false,
                "description": "",
                "id": "12315618",
                "name": "5.1.0",
                "releaseDate": "2008-05-06",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12315618"
            },
            {
                "archived": true,
                "description": "",
                "id": "12315629",
                "name": "4.0.3",
                "released": false,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12315629"
            }
        ],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Maxim Fateev",
            "key": "mfateev",
            "name": "mfateev",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mfateev",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2008-04-10T17:42:25.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Infinite recovery loop.",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2008-04-10T17:42:25.000+0000",
        "versions": [{
            "archived": false,
            "id": "12315610",
            "name": "4.0",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315610"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-732/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-732/watchers",
            "watchCount": 0
        },
        "workratio": -1
    },
    "id": "12481606",
    "key": "AMQ-732",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12481606"
}