[Would be helpful if you could create a unit test that reproduces this error, take a look at the StompTest.java for some sample to work from., I just updated our server from 5.3.2 to 5.4.0 and I get the same error with Stomp:
2010-08-30 12:43:11,681 | INFO  | Transport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ NIO Worker
java.io.EOFException
        at org.apache.activemq.transport.stomp.StompNIOTransport.serviceRead(StompNIOTransport.java:106)
        at org.apache.activemq.transport.stomp.StompNIOTransport.access$000(StompNIOTransport.java:51)
        at org.apache.activemq.transport.stomp.StompNIOTransport$1.onSelect(StompNIOTransport.java:80)
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)

We had to switch back to 5.3.2 because we have alot stomp clients. :(

It doesnt work without NIO either:
2010-08-30 12:55:15,536 | INFO  | Transport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///192.168.2.89:37025
java.io.EOFException
        at java.io.DataInputStream.readByte(DataInputStream.java:250)
        at org.apache.activemq.transport.stomp.StompWireFormat.readLine(StompWireFormat.java:146)
        at org.apache.activemq.transport.stomp.StompWireFormat.parseAction(StompWireFormat.java:162)
        at org.apache.activemq.transport.stomp.StompWireFormat.unmarshal(StompWireFormat.java:92)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:226)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:218)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
        at java.lang.Thread.run(Thread.java:619)
, Fixed in trunk.  , Daniel,
We had the same problem and because we have lots of Stomp Clients (a couple of hundred), we implemented a workaround with StompConnect.

Since ActiveMQ 5.4.0 solves a lot of issues (and brings camel 2.4) in 5.3.2 that had impact in our applications we have upgraded our instances use StompConnect instead of somp(+nio) transport connector.
To implement this solution, you just need the StompConnect jar (available at Codehaus) in your class path, and use the following Spring configuration outside of your broker context:

<bean id="myFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
      <property name="brokerURL" value="tcp://localhost:61616"/
      <property name="userName" value="username"/>
      <property name="password" value="password"/>
</bean>

    
<bean id="stompConnector" class="org.codehaus.stomp.jms.StompConnect" init-method="start"> 
      <property name="connectionFactory" ref="myFactory"/> 
      <property name="uri"               value="tcp://localhost:61612"/>
</bean>

This way you comment your stomp+nio transport connector and leave the forward to your desired ip/port. (this example assumes a user named "user" and password "password". Also assumes that your Stomp messages are heading to localhost:61612 and that the openwire transport connector listens in localhost:61616)

Hope this helps. 
Best regards,
Nuno Valente., @Timothy:
Thanks for the fast fix! Could you maybe backport this fix to a 5.4 branch? I think alot users that rely on Stomp would appriciate it .

@Nuno:
good idea too, thanks!]