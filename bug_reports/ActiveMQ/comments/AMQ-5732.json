[Can you try and provide a unit test that shows your use-case and the problem you are having?, The message receive function is like this (ignoring creating connection part):

{code}

	public BlobMessage getMedia(String fileName) throws JMSException{
		try {
			ActiveMQSession fileSession = (ActiveMQSession) connection.createSession(true, ActiveMQSession.CLIENT_ACKNOWLEDGE);
			Destination destinationMedia = fileSession.createQueue("MediaQueue");
			MessageConsumer consumerFile = fileSession.createConsumer(destinationMedia,"FileName='"+ fileName + "'");
			Message bmsg = consumerFile.receive(60000);
			BlobMessage blobMessage = (BlobMessage) bmsg;
			if (null != blobMessage) {
				bmsg.acknowledge();
				fileSession.commit();
				fileSession.close();				
				fileSession = (ActiveMQSession) connection.createSession(true, ActiveMQSession.CLIENT_ACKNOWLEDGE);
				destinationMedia = fileSession.createQueue("MediaQueue");
				MessageProducer produceFile = fileSession.createProducer(destinationMedia);
				produceFile.send(bmsg);
				produceFile.close();
			}
			consumerFile.close();
			fileSession.rollback();
			fileSession.close();
			return blobMessage;			
		} catch (JMSException e) {
			throw e;
		}		
	}

{code}

and in the main function :

BlobMessage bmsg = client.getMedia("scriptset123.zip");  

the code works fine, but then if I change the filename to "script456.zip" (which is exist in the queue),and run the code again. the consumer is blocked 60s. 
If I restart the activeMQ, and run the code with  "script456.zip", it works. but if I change to "scriptset123.zip" and rerun the code, the consumer is blocked again.
, How deep is the Queue when you do this?  You could be seeing a case where the depth is larger than the maxPageSize setting which would prevent those older messages from paging in which could cause the stall you see.  , [~Cadmean] it looks like you are using the messaging provider as a database where you are storing and retrieving data.. (storing file=X, Y and Z.. and later reading for the file you want). This is the kind of thing a database is a better fit than a message system IMHO.


If you were always having a consumer active for your entire dataset you shouldn't have an issue with paging...


This has been the case for any messaging system I have worked with.


This issue should be closed unless you provide a working testcase that shows this as an issue.. you start an empty server. Send a few messages and consume them accordingly showing the message blocked without paging., Actually there were only 2 or 3 messages in the queue., It is indeed what I want to achieve using ActiveMQ as a small database. The reason is that all the clients (consumer) are always active. In this case, I use activemq broker to save the file location (blobmessage) in a fileserver I build. If a client needs any file, they just need to create a session and receive the blobmessage. 

Since I am not sure if the problem is caused by xml configuration, I am going to setup a new broker and see if this problem exists., The issue is gone after I use a complete new broker. So there might be some problems with my configuration or system. Thank you for your advice.]