[I just tried deleting line 165 and it still doesn't work.  It may be a problem with looking up the consumer by the connection, but that's a guess.  

Appreciate any help with this!, Try with a recent 5.9-SNAPSHOT, there's lots of fixes in there and this might already be covered.  , Thanks, Tim.  I just tried the latest apache-activemq-5.9-20131010.203434-114-bin snapshot and it still exhibits the same behavior.

FYI, I have downloaded all the sources and removed what I thought was the offending line 165 in MessageListenerServlet.js but it still fails.  So much for my first foray into the guts of ActiveMQ.

Bill, The ability to have multiple listeners is important if you want to use multiple selectors.

Imagine you have a system with a single Topic, to which multiple different message types are published. In order to reduce the messaging traffic to the AMQ servlet from the AMQ server, you set up selectors in the JS code. This has the effect of restricting the messages you need to react to and allows you to have separate handlers for each message type in which you are interested. This pattern currently works very well in Java, but not in the AJAX implementation due to this bug.

i.e. this pattern does not work.

this.amq.addListener( id1, topic, handler1, selector1 );
this.amq.addListener( id2, topic, handler2, selector2 );
this.amq.addListener( id3, topic, handler3, selector3 );

The bug causes only the last listener (handler3) to be registered as a listener., Ian,

Yes, everything you wrote is sadly correct.

I have a very fragile workaround which is to load 5 separate copies of the amq.js module, and reference each through a private member variable.  It's a terrible way to accomplish this, wastes memory, and occasionally fails (I haven't figured out why).

I am hoping someone can track down the bug.  I took a stab at it as you can see in my previous posts.  What is happening is that in MessageListenerServlet.js, function doPost, line 165 is dropping any previous consumer to the same destination, but deleting that statement did not fix the problem.
]