[Fixed by SVN revision 663680 and 663691, There is another timing issue because the reconnect task is triggered via the {{FailoverTransport.add(URI u[])}} method before the connection is configured (see {{ActiveMConnectionFactory.createActiveMQConnection(...)}}) and therefore the transport listener is not set.

The attached patch (amq-failover-reconnect.patch) checks if the transport is started and does not call {{reconnect()}} because the {{start()}} will do it later after the connection is configured., Fixed by revision 666893, Hi Rob,

A jetty hightide user has posted me the following problem description, which I think may be fixed by the patches above, but I'm not entirely sure - could you confirm for me if that's the case?

Here's the problem as it was reported:

"ActiveMQConnection
—————————
The Main thread is stuck waiting for ActiveMQConnection.brokerInfoReceived CountDownLatch in the ActiveMQConnection.waitForBrokerInfo() method. The brokerInfoReceived latch is released when the ActiveMQConnection.onCommand().processBrokerInfo() Listner event is received.

FailoverTransport
————————-
When the FailoverTransport is instantiated it immediately attempts to connect to the brokers. On successful connection to the broker it calls the Listener, if one is attached.
The processBrokerInfo command from the broker is sent to the listener, in this case the ActiveMQConnection which releases the latch.

The sequence of wiring the connection to the transport is as follows...
- ActiveMQConnectionFactory.createActiveMQConnection() creates the transport, then creates the ActiveMQConnection(transport)
- The ActiveMQConnection constructor calls transport.setTransportListener(this) which attaches the connection listener to the transport
- Finally the factory calls start() on the transport

The problem is the FailoverTransport starts to connect doReconnect() at construction time using its own thread. On successful connection to the broker it notifies using the listener but only if the listener is set. The race condition occurs on the main thread to attach the listener to the FailoverTransport before the FailoverTransport connects. If the FailoverTransport connects and the listener is not connected, notification messages are lost.."

ta muchly,
Jan

]