[To corrobate the description above with some numbers, I ran a test that did the following:
* A producer sends 10,000 messages to a topic. This takes 7 seconds.
* A consumer registers as a durable subscriber and receives those 10,000 messages. This takes 6 seconds.
* Now 100 consumers register with the topic instead of just one. Each consumer receives each message. How long should this take?
** Well, first I'd expect a factor of 100, because each message will be read 100 times from the topic.
** Then we will have some administrative overhead, so lets be very pessimistic and add a factor of 2.
** Or, no, lets use 3 instead of 2, because we might have been exceptionally lucky with the 6 seconds it took to receive the messages with one consumer.

Following this calculation, I'd expect a runtime of at most '''6s * 100 * 3 = 1,800s''' (30 minutes).

However, instead of half an hour the test program ran '''5 hours and 18 minutes'''!

With ActiveMQ revision 629726 the situation has improved considerably. Instead of 5 hours and 18 minutes the test took '''1 hour and 58 minutes'''. This a considerable gain by a factor of 2,7! However, it still seems slow compared with the worst-case expection of 30 minutes., Hello,

Could you post the code you used? I'd like to see how ActiveMQ compares to OpenMQ (formerly known as SunMQ) on this test.

Regards,

Albert, As requested, here's my testcase., Oops, wrong file! Here's the correct one., In 5.1 - async dispatch is enabled by default for consumers - so consumption will not be limited by the slowest consumer. ]