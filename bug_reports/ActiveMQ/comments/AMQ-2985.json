[resolved in r1023704 , TODO: A jdbc variant of the test would be a nice addition., jdbc variant of test complete. (showed up issue with cleanup task not respecting priority) resolved in r1025939, found another variant of the test that fails, Issue sorted in r1033581 new test now enabled. detail in svn record, I just tried on Nov 12th SNAPSHOT build. It now will receive the same message more than once. For example, I have some durable message sent out every 20 minutes. A client may receive accumulated durable message 3-7 when it first reconnects. Then the client disconnected. After more than 20 minutes, it reconnected second time and received message 8. It then disconnected again. After another 20 more minutes, it reconnected the third time, but this time, it received message 3-9. So message 3-8 were delivered with duplicate.

I have the following configuration for AMQ broker:
<destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic=">" producerFlowControl="false" memoryLimit="1mb">
                  <pendingSubscriberPolicy>
                    <fileCursor />
                  </pendingSubscriberPolicy>
                </policyEntry>
                <policyEntry queue=">" producerFlowControl="false" memoryLimit="1mb">
                </policyEntry>
              </policyEntries>
            </policyMap>
        </destinationPolicy> 
 ...
        <systemUsage>
            <systemUsage sendFailIfNoSpaceAfterTimeout="3000">
                <memoryUsage>
                    <memoryUsage limit="20 mb"/>
                </memoryUsage>
            </systemUsage>
        </systemUsage>


, thanks for the feedback. Do you think you could reproduce your scenario with some variation of http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/DurableSubscriptionOfflineTest.java?view=markup - a test case would be a great help., Gary:

Please see some broker configuration in my previous post. In our test case, each client did a durable subscription with selector using sql like criteria, for example: (bs LIKE '%!10!%') OR (bs LIKE '%!20!%') .... OR (bs LIKE '%!100!%') The TopicConnection is nonTransactioned and with Session.AUTO_ACKNOWLEDGE. The message is sent with a possible string property of 'bs'. Its value could be something like !20!30!40!. The message was sent every 20 minutes. Then the client connects and reconnects from time to time.

 
, It is possible to receive duplicates when the messageOrdercursor reverts back to the start when there are no new messages. 
With priority in the mix, the last ack location needs to include priority such that it can reset just the correct cursors., r1038276 - ackLocations are created on message send, such that subs can ack at their will, due to unmatched or out of order due to priority. subscription acks hold priority along with the last ack, such that the order cursors can be correctly chosen after a restart or reset. This ensures that duplicates are not dispatched as the current position is now ack aware rather than shared across priority.
This brings kahaDb more in line with JDBC w.r.t priority and durable subs. Tests now work with both stores.]