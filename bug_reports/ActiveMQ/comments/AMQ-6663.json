[If the index gets corrupted then the broker will replay the journal and rebuild the index.  Nothing will get lost, it just takes longer to start up while it rebuilds the index.  It's hard to say exactly why the index got corrupted in your situation but 5.11.0 is very old now and there have been many KahaDB related bug fixes since then.  5.14.5 is the latest version so you should upgrade to a newer version which might prevent the issue from happening again., Hi Christopher,
Thanks for your comments. 
We got to know about index corruption only after application restart. Before that, during runtime, activemq changed the Kahadb location to the default location instead of using the configured one after EOFException. Why did this happen? There were no enough information for any possible errors in the logs for this behavior of activemq. Also, what happens if there is index corruption in the KahaDB store and system does not restart? We want to know the root cause for index corruption and kahaDB directory path change., I'm not sure why the default location would have changed as I don't think I've seen that behavior   reported before by other people.  It's possible it's an undiscovered bug caused by your situation but it would need to be investigated more.

If the system does not restart because of index corruption you can always delete the index files (starts with db.* such as db.data) and restart again.  However KahaDB is designed to detect a corruption and rebuild automatically so that shouldn't be necessary.  Index corruptions would generally be caused by issues on the file system but as I said earlier it's impossible to tell you a reason just by a stack trace as every system is different.  But KahaDB is designed so that it can recover from an index corruption in the rare event it happens.

Is this a one time event or something that happens regularly?  If this is happening more than one time you should definitely upgrade to a new version as there are probably close to 50 KahaDB fixes since version 5.11.0 and some of those have addressed stability issues .  I'm not guaranteeing that an upgrade will solve the problem but it's always best to try the latest to see if the issue still is around., Hi Christopher,
Thanks for the comments. 
As of now this issue has been observed in production couple of times. But the root cause of index corruption is still unknown to us. 
After the occurrence of this IO Exception, ActiveMQ DefaultIOExceptionHanlder tried to stop and restart the broker service. During this restart of broker service, it did not pick the configured data directory path from the spring configuration for broker service / kahadb persistence adapter that we have defined. 
From the BrokerService code we can see the below snippet:
 public File getDataDirectoryFile() {
        if (dataDirectoryFile == null) {
            dataDirectoryFile = new File(IOHelper.getDefaultDataDirectory());
        }
        return dataDirectoryFile;
    }
In our case, this dataDirectoryFile value becomes null during restarting the broker service during runtime(even if the configured path exists). Please let us know why did this happen., No feedback on newer releases so unconfirmed if this is still an issue or not and no reproducer.  ]