[Fixed rev 640636., This fix is missing in 5.+, I'm no expert in how this is supposed to work, but the comment in the trunk code makes me wonder if the patch is correct.

Without the patch, a URI with ?discoveryURI=foo will result in setting the discoveryURI and other URIs will use the default.

With the patch, IIUC, the default will never be used., After further thought I've reverted the patch as I think it can't possibly be correct to always overwrite the default multicast info.  I don't understand how this is supposed to work well enough to fix it without help.

It looks to me as if it is possible to specify the discoveryURI with the current code by using configurations like

{code}
<transportConnector uri="..." discoveryUri="multicast://239.3.7.0:37000?discoveryURI=multicast://239.3.7.0:37000" />
{code}
and
{code}
<networkConnector name="..." uri="multicast://239.3.7.0:37000?discoveryURI=multicast://239.3.7.0:37000">
{code}

i.e. specifying the discoveryURI as a uri query parameter even when directly specifying the discoveryURI.  If this is the expected usage then perhaps a documentation update is what is required, although the first example looks weird to me.  Perhaps a flag as to whether the uri is intended to be the discovery URI would be more appropriate or perhaps the code processing the first case could add the discoveryURI as a parameter itself., Did not get fixed in 4.1.2, Submitted the patch for review. With this patch, you don't have to use a query parameter to specify a host:port. You can simply specify it  as follows: multicast://<host>:<port>. However, the patch doesn't preclude you from specifying the discoveryURI via a query paramter; doing so will override <host>:<port> provided via the URI.  

Also, the default group value, which is "default", can only be overriden via a query parameter; as I think it should. For example, with the URI below, the agent will end up using the default IP and port number, but is given a group name of "foo".  

multicast://default?group=foo , Patch applied in SVN revision 692340, bunch of unit test failures (14) with this fix, needs some investigation. eg BrokerServiceTest
java.net.UnknownHostException: group-1220646703756: group-1220646703756
	at java.net.InetAddress.getAllByName0(InetAddress.java:1145)
	at java.net.InetAddress.getAllByName(InetAddress.java:1072)
	at java.net.InetAddress.getAllByName(InetAddress.java:1008)
	at java.net.InetAddress.getByName(InetAddress.java:958)
	at org.apache.activemq.transport.discovery.multicast.MulticastDiscoveryAgent.start(MulticastDiscoveryAgent.java:300)
	at org.apache.activemq.network.DiscoveryNetworkConnector.handleStart(DiscoveryNetworkConnector.java:164)
	at org.apache.activemq.network.NetworkConnector$1.doStart(NetworkConnector.java:56)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
	at org.apache.activemq.network.NetworkConnector.start(NetworkConnector.java:197)
	at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1873)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:480)
	at org.apache.activemq.broker.BrokerServiceTest.testAddRemoveNetworkWithJMX(BrokerServiceTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)

, a bunch of unit tests made use of the group being taken from the unused host portion of the url. changing them to default?group="" resolved the failures. FWIR the group was added to help test isolation on the same subnet.]