[NIOSSLTransport.java with 2 modifications:
- run (first) delegated task synchronously
- add some wait cycles for channel reads (to prevent too frequent reads)

debug log statements could be removed, of course, Hi Oliver, can you by any chance provide a test case that reproduces this problem? It would help verify the fix and protect it in the future., I implemented a different fix (with using a selector to wait for the socket data in case of buffer underflow). It have the same effect on the handshake performance and resource usage.

https://git1-us-west.apache.org/repos/asf?p=activemq.git;a=commit;h=52e45271

There's a new "test" NIOSSLLoadTest.testConnectionHandshakeLoad() which could be used to monitor and profile broker behaviour in this scenario. It's ignored by default, as it will be problematic to run in CI., I've noticed that since this fix went in there are intermittent test failures in the STOMP module in Jenkins around NIO tests and handshake timeouts, might be worth a look. , Thanks Tim, I had an unrealistic selector read timeout during handshake. This fix

https://git1-us-west.apache.org/repos/asf?p=activemq.git;a=commit;h=ad8879d2 

uses soTimeout value or blocks forever if that value is not set. This should help with the test in slow environments.
]