[Also seeing this problem with java 1.8.0_25, if that data is at all useful.
{code}
2014-11-07 13:26:40,653 | WARN  | /admin/message.jsp | org.eclipse.jetty.servlet.ServletHandler | qtp2059572982-49
org.apache.jasper.JasperException: PWC6033: Unable to compile class for JSP

PWC6197: An error occurred at line: 20 in the jsp file: /WEB-INF/tags/form/forEachMapEntry.tag
PWC6199: Generated servlet error:
The type java.util.Map$Entry cannot be resolved. It is indirectly referenced from required .class files
{code}, I confirm this issue with ActiveMQ 5.11.1 and jdk 1.8.0_31, I can confirm the issue seems to be shown only when using jdk 1.8.0, I have tried the same activemq configuration using jdk 1.7 and it works fine., Here's a quick work-around that works on Java 8.  It uses an array rather than the map entries., Implemented the fix you attached by hand and works perfectly with jdk1.8.0_25.
Thanks Man!, hello, I am curious why this is marked Minor, since on MAC 10.9.

If so, this is disappointing since I have been running java8 for a long time now with all sorts of dev tools.  It's not easy/supported to run Java7 and 8 side by side.

I guess I will learn the CLI tool for this feature?

thx, Irene - Nasa Ames Unmanned flight aeronautics
, Have you tested this using a 5.12-SNAPSHOT to see if it is actually still an issue?, [~tabish121] it still happens with 5.12-SNAPSHOT. I've patched on top of it and it works fine now with 1.8.0_45-b14. +1 vote to be included on the next build., It does appear that the core problem here is with Jetty.  I believe Jetty needs to be upgraded to version 9.x to play nicely with JDK 8.

There would need to be some code modifications done to do the migration though.

Edit:  There has already been some work done for migration: https://issues.apache.org/jira/browse/AMQ-5517

, Since support for Jetty 9 was added in ActiveMQ 5.11.0, can someone who's having problems with this test out running with Jetty 9.2.x and see if that solves the issue?, I'd be willing to try this but it's not clear how to go about doing this (we treat activemq as a black box except for setting the *xml configuration files). Is there a link to documentation on how to change the jetty used?, Thanks for your email.
I am on annual leave until the 3rd of August with no access to email
I will deal with your query upon my return.

Regards,
Marco Crivellaro
, I believe all you should need to do is replace all the Jetty 8 jars with Jetty 9 jars at runtime and it should work.  ActiveMQ uses reflection to determine which version is used at runtime. , Actual release of ActiveMQ 5.11 can't start with 9.1 and 9.3 jetty., It's not true, I try 9.1 and 9.3 and get errors like this:
2015-07-28 10:14:05,701 | ERROR | Failed to load: class path resource [activemq.xml], reason: Error creating bean with name 'securityHandler' defined in class path resource [jetty.xml]: Cannot create inner bean 'sec' of type [org.eclipse.jetty.server.handler.HandlerCollection] while setting bean property 'handler'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sec' defined in class path resource [jetty.xml]: Cannot create inner bean 'org.eclipse.jetty.webapp.WebAppContext#534df152' of type [org.eclipse.jetty.webapp.WebAppContext] while setting bean property 'handlers' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.eclipse.jetty.webapp.WebAppContext#534df152' defined in class path resource [jetty.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.eclipse.jetty.webapp.WebAppContext]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: javax/servlet/http/HttpSessionIdListener | org.apache.activemq.xbean.XBeanBrokerFactory | main
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'securityHandler' defined in class path resource [jetty.xml]: Cannot create inner bean 'sec' of type [org.eclipse.jetty.server.handler.HandlerCollection] while setting bean property 'handler'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sec' defined in class path resource [jetty.xml]: Cannot create inner bean 'org.eclipse.jetty.webapp.WebAppContext#534df152' of type [org.eclipse.jetty.webapp.WebAppContext] while setting bean property 'handlers' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.eclipse.jetty.webapp.WebAppContext#534df152' defined in class path resource [jetty.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.eclipse.jetty.webapp.WebAppContext]: Constructor threw exception; nested exception is java.lang.NoClassDefFoundError: javax/servlet/http/HttpSessionIdListener, Hmm, I looked and the Websocket support does support Jetty 9 but it might be the case that some work needs to be done to the configuration in the jetty.xml file for the web ui.  I know that in Jetty 9.x some classes were changed so the configuration would need to change as well.

[~tabish121],  Is there any reason we can't migrate everything to the latest 9.x and make that the default? (I was thinking of targeting this work for the 5.13 release) , Yes, we should look at moving to the latest release post 5.12, I set up a test with JDK8 and Jetty 9.2.13 and verified that this error is fixed with the newer version of Jetty.

[~tabish121], Do you see any reason we need to keep Jetty 8 around or can we just remove it and only support Jetty 9.x?  , Thanks for your email.
I am currently out of office with no access to email, I will be back in the afternoon of 17th of August.

Regards,
Marco Crivellaro

, Given the Jetty 8 is EOL there shouldn't be any issue moving 5.13.0 on to v9.  We could I suppose keep the code that detect the jetty version and uses the correct bits if we really wanted to keep support for 8 as an option. , I think we should just drop Jetty 8 altogether because the issue is that there are several API changes in v9.  Several classes in the web demo need would need to be rewritten to detect different versions of jetty plus jetty.xml configuration changes, etc beyond what we already detect for websockets and I'm not sure we'd really be gaining anything considering Jetty 8 is EOL.

I'm working on a patch now for Jetty 9.x, Pay extra attention to the unit tests in activemq-http which make use of the Java based WebSocket client in jetty 8 as I think that has all changed in v9 to require the JSR 356 methodology , Thanks for the tip.  I figure it might take a little bit of time to convert everything over but I at least wanted to get started on it., [~tabish121],

I've made some good progress with this.  I've ripped out Jetty 8 and updated to the latest Jetty 9.2 and I updated all of the tests in activemq-http.  I'm working on updating the spring config now for the web console and testing that out.  A couple things though:

- Do we need to use the gernomio spec jars?  Jetty 9.2 needs the servlet 3.1 spec jar and I only see a 3.0 geronimo version.
- Is anyone using the Krb5AndCertsSslSocketConnector? That would need to be re-written completely to work with Jetty 9 but I don't see any tests for it or anything so I'm not sure if it's being used., 1. The Geronimo spec jars use an Apache license, others may be GPL which we cannot use, it may be necessary to contact the Geronimo project to request a 3.1 release similar to what the was needed for Artemis with the JMS 2.0 spec jar.  

2. I don't know if anyone is using that or not, given there is not tests we don't even know if it works now.  I'd guess it's not broadly used but I couldn't say for sure.  It could be removed as broken in a 5.13 release and anyone who really needs that could contribute something that works with Jetty 9 if they really wanted to update their broker and relied on that feature., Ok, thanks I figured it was an Apache license issue.  I think I will need to request both new Servlet and a new JSP spec jar so I will contact the project and send them a note tomorrow.

I'll look at the Kerberos stuff in more detail to see if it's reasonable to migrate for Jetty 9.x support.  If it's going to be difficult then it could be removed and a new Jira could be opened to address it if someone needs it.  I don't want to hold up the Jetty upgrade for that one class as the web console is broken for anyone using JDK8 right now., This is done except for the OSGi piece.  It looks like Karaf will need to be upgraded to support a newer version of Jetty., Commit f44c3d20ed2a9f74746a02418a4381909936a000 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f44c3d2 ]

https://issues.apache.org/jira/browse/AMQ-5356

Upgraded to Jetty 9.2.x to solve JDK 8 compatibility issues.
This required migrating to the new WebSocket API.
, Commit 0f492f3b4bc2665fd38ea66813381e4bd9ca3b64 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0f492f3 ]

https://issues.apache.org/jira/browse/AMQ-5356

Migrated to Karaf 4.  This was required to support Jetty 9.2.x.
Fixed all OSGi unit tests.
, I have upgraded Jetty to the latest 9.2.x and fixed the web console and all websocket support.  I also migrated to Karaf 4 for our OSGi tests since Jetty 9.2 wasn't compatible with Karaf 2.x.  I'll keep an eye on our CI builds and revisit this if there are any test failures., Is it possible to port this fix to 5.12.x?, Thanks for your mail.

I'm travelling on business until the 14th of October having only limited access to my email.

Kind regards
Marco
, I don't think it would be a good idea to put this into 5.12.x.  The changes required here were fairly major as the Jetty upgrade was a large API change to the Websocket API so it required making major modifications to the web layer and all of the configuration associated with it.  It also required dependency changes such as updating the Servlet API, etc.  Lastly, I had to upgrade to a new major version of Karaf for OSGI support (from 2.x to 4.x) so applying this as a minor release doesn't seem appropriate.  , Ok, no problem if the fix requires so complex changes. We will wait for 5.13.x. Thanks for the clarification. , For information, under ServiceMix 5.x/Karaf 2.x, this problem can be solved by upgrading bundle "org.ops4j.pax.web.pax-web-jsp" to version "3.2.8" (see https://ops4j1.jira.com/browse/PAXWEB-916).]