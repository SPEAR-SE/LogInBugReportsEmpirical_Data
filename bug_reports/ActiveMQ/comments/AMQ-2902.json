[I have been told that this is harmless and have been fixed on trunk., Also with 5.4.1 release (on JBoss 4.2.3.GA) this issue is present:

2010-09-22 11:29:31,458 INFO  [org.apache.activemq.broker.TransportConnection.Transport] Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#37) disposed.
org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#37) disposed.
        at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)
        at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
        at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
        at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
        at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)
        at org.apache.activemq.ra.ActiveMQManagedConnection.destroy(ActiveMQManagedConnection.java:207)
        at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.doDestroy(InternalManagedConnectionPool.java:650)
        at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.removeTimedOut(InternalManagedConnectionPool.java:481)
        at org.jboss.resource.connectionmanager.IdleRemover$IdleRemoverRunnable.run(IdleRemover.java:164)
        at java.lang.Thread.run(Thread.java:619)

But this affects the broker? This could bring to errors or broker faults?, I too see that issue in the current 5.4.1  release. This has nothing to do with JBoss. It is reproducible in an ordinary Java application (see below). Claus, who told you that is fixed in the trunk? From looking at the sources in the trunk I have the impression that the related code has not changed (but I'm guessing a bit here and could be wrong). The small test below reproduces the problem. Note that the exception gets logged less frequently if you start and stop the connection before closing it (enable the two commented lines). But it still occurs. It occurs every time if you do not start and stop the connection.


{code:title=AMQ2902.java|borderStyle=solid}
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.JMSException;

import org.apache.activemq.ActiveMQConnectionFactory;

public class AMQ2902
{
  public static void main(String[] arguments) throws JMSException
  {
    ConnectionFactory connectionFactory = new ActiveMQConnectionFactory(
        "vm://localhost?broker.persistent=false");
    Connection connection = connectionFactory.createConnection();
    // connection.start();
    // connection.stop();
    connection.close();
  }
}
{code} 

Kind regards,

  Bastian, The obvious workaround is to configure log4j to not show INFO level messages from the logger in question.


{noformat} 
  <logger name="org.apache.activemq.broker.TransportConnection.Transport">
    <level value="warn" />
  </logger>
{noformat} 


However, a possible (very simplistic) fix would be to change {{TRANSPORTLOG.info("Transport failed: " + e, e);}} into {{TRANSPORTLOG.info("Transport failed: " + e);}}  in {{org.apache.activemq.broker.TransportConnection}}. Since it is only a logging on info, the stack trace is probably not of interest anyway, right?

Patch:

{noformat} 
### Eclipse Workspace Patch 1.0
#P activemq-core
Index: src/main/java/org/apache/activemq/broker/TransportConnection.java
===================================================================
--- src/main/java/org/apache/activemq/broker/TransportConnection.java	(revision 1003422)
+++ src/main/java/org/apache/activemq/broker/TransportConnection.java	(working copy)
@@ -233,7 +233,7 @@
         if (!stopping.get()) {
             transportException.set(e);
             if (TRANSPORTLOG.isInfoEnabled()) {
-                TRANSPORTLOG.info("Transport failed: " + e, e);
+                TRANSPORTLOG.info("Transport failed: " + e);
             }
             stopAsync();
         }
{noformat} 
, resolved in r1005094]