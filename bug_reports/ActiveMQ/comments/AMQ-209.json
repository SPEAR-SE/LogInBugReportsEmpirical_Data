[Hello,

It seems that I have narrowed down the pb. If you replace, in my code, the standard jms ConnectionFactory gotten through a jndi lookup by an ActiveMQConnectionFactory I don't loose any message. 

JNDI bug on the ConnectionFactory ?

Regards., BTW some answers to your questions...

1) we recommend the journal and JDBC for persistence - its the fastest and most reliable

2) the BDB jars

3) clientID is optional - though if you are using durable topic subscriptions it really is mandatory, though most JMS providers will auto-create one for you - but its fairly pointless to use durable topics if you don't specify a clientID as there's no way to uniquely identify the messages for your client.

I've still no idea why using the JNDI breaks your test case - under the covers its the same JMS provider., Thanks for replying.

Does the status open means that you have reproduced the pb ? , Hello,

Could you give me some more infos about how to set journal and jdbc for persistence ?

Best regards., The out of the box binary distribution from 2.1 onwards of ActiveMQ includes a journal & JDBC configuration file which could be used as a template. e.g. try starting ActiveMQ using the command line script & it will use the journal & JDBC, Hello,

What is the difference if we use only jdbc and not journal ?

During my test with journal and jdbc, I got a NullPointerException (known issue):

23:05:26 ERROR Failed to checkpoint a message store: java.lang.NullPointerException
java.lang.NullPointerException
        at org.codehaus.activemq.store.jdbc.JDBCTopicMessageStore.setLastAcknowledgedMessageIdentity(JDBCTopicMessageStore.java:52)
        at org.codehaus.activemq.store.ProxyTopicMessageStore.setLastAcknowledgedMessageIdentity(ProxyTopicMessageStore.java:87)
        at org.codehaus.activemq.store.journal.JournalTopicMessageStore$1.execute(JournalTopicMessageStore.java:115)
        at org.codehaus.activemq.util.TransactionTemplate.run(TransactionTemplate.java:41)
        at org.codehaus.activemq.store.journal.JournalTopicMessageStore.checkpoint(JournalTopicMessageStore.java:107)
        at org.codehaus.activemq.store.journal.JournalPersistenceAdapter$3.run(JournalPersistenceAdapter.java:374)
        at EDU.oswego.cs.dl.util.concurrent.QueuedExecutor$RunLoop.run(Unknown Source)
        at java.lang.Thread.run(Thread.java:534)



Best Regards.
, The only real difference of using the journal with JDBC is it adds a performance boost - the journal is there to provide a high performance transaction log - though you can absolutely just use JDBC only, Hello,

OK but I have performed some benchmarks with HSQL only and it gives much much better  performance (magnitude order) than using journal + HSQL !!!

Any comments ?

What do you think of the NullPointerException I am experiencing ?

Best regards., Hello,

Just another info. I have ran my test against HSQL jdbc persistence and haven't loose any message.

May be it's a BerkeleyDb issue ?

Comments ?

Regards., Going forward we're focussing purely on the JDBC persistence option - with the journal as an optional performance boost. So I'm assuming this issue is purely related to the BDB persistence option.

From 3.0 onwards this issue should be resolved.

BTW I can't see how to reproduce your null pointer exception- I wonder can you try reproduce it with the latest code?

Incidentally, if you use just HSQL as your message store, it might seem really fast - but it could be that its not actually persisting to disk at all - HSQL is often used in RAM only mode. When testing JDBC persistence, please make sure you choose a JDBC driver which does write to disk - such as Apache Derby
]