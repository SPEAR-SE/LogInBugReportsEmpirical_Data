[The attachment are scripts, classes and library needed to duplicated the problem., Run instructions:

The goal is to run three clients on a cluster of two networked brokers.

Prequirements:

Two stand-alone brokers with network connections to each other.  The client scripts assume that both brokers on localhost using ports 61616 and 62626.

ACTIVEMQ_HOME environment variable has been defined.

Using SVN HEAD (built as 3.2-SNAPSHOT)


Steps to reproduce problems.

1) start script replier1.cmd (connects using port 62626)
2) start script replier2.cmd (connects using port 62626)
3) start script requestor.cmd (connects using port 61616)

The requestor uses a single instance of a TopicRequestor to make three requests in sequence.  All request are sent on the same Topic and expect the reply to use the same temporary Topic.

Both repliers will receive a copy of each request, but  only one reply will respond (base on the content of the request). The replys should be generated in the following order:

Replier1,Replier2,Replier1

However, the when Replier2 attempts to send its reply, it receives a message indicating the destination has been destroyed. The requestor will eventually time out and make the third request to which Replier1 has no problem using the temporary destination that was reported as destroyed to Replier2.

Note, that if the script for the requestor is changed to use the same broker as the repliers, then Replier2 the test passes without problem.

It seems that if a temporary destination on a remote broker is used once by one connection, it will not be available for use by any other connection on that same broker.
, We've tried to reproduce this on 4.x...

- Added org.apache.activemq.assembly.usecases.TwoBrokerQueueClientsReconnectTest.java 
- Setup is a two broker network, destination is a queue, each broker has a consumer, one producer sends messages to one broker, consumer attempts to receive the messages.

And everything seems to work fine on 4.x. If you can think of a way to tweak the test case to fail let us know & we can reopen this issue]