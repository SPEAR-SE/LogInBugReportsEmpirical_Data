[JDBCLockTablePrefixTest attached, WORKAROUND
============
A simple workaround to this is to reorder the configured elements within  "jdbcPersistenceAdapter" element so "locker" is after the "statement" element.

{code}

<persistenceAdapter>
    <jdbcPersistenceAdapter dataDirectory="${activemq.data}" dataSource="#mysql-ds" lockKeepAlivePeriod="5000">
	<statements>
	  <statements tablePrefix="TTT_" messageTableName="AMQ_MSGS" durableSubAcksTableName="AMQ_ACKS" lockTableName="AMQ_LOCK"/>
	</statements>
        <adapter>
	  <mysql-jdbc-adapter/>
	</adapter>
	<locker>
	  <lease-database-locker lockAcquireSleepInterval="10000"/>
	</locker>
  </jdbcPersistenceAdapter>
</persistenceAdapter>

{code}

The above config results in the locker using the prefix table name in the UPDATE statement

{code}
...
2013-10-30 14:36:01,041 | DEBUG | jdbcBroker, lease keepAlive Query is UPDATE TTT_AMQ_LOCK SET BROKER_NAME=?, TIME=? WHERE BROKER_NAME=? AND ID = 1 | org.apache.activemq.store.jdbc.LeaseDatabaseLocker | ActiveMQ JDBC PA Scheduled Task
...
{code}
, Yeah its an ordering issue, the locker gets the "default" statements. And no the later configured., Thanks Pat for reporting the issue, the workaround, and the test case.]