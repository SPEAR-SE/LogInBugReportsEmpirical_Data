[In my opinion I think it's better if the broker stops itself following a no space exception.  That is not a normal condition so I think the broker should stop to prevent data corruption.  [~gtully] since you worked on the Jira referenced here, what do you think?

To avoid this issue you can configure your broker to limit the amount of disk space it can use.  There are configuration options to set a fixed disk space size and also a percentage of the partition it can use.  If you do this then you won't ever run out of disk space and the broker won't shut down.  

Also, if for some reason you have other processes writing to the data partition you can also set the broker to periodically re-check available disk space so it will adjust the settings: [http://activemq.apache.org/periodically-checking-disk-limits.html|http://activemq.apache.org/periodically-checking-disk-limits.html.]  However, the best thing to do would be to assign KahaDB to its own partition so that's not an issue, I agree. It is best to stop. The latest update to this feature introduced "systemExitOnShutdown" to force a quick termination.

It turns out that is is not safe to continue to write on a "no space" error, some smaller write may succeed and async writes will succeed and lead to invalid locations in the index. It gets messy quickly.

The intent is that the appender stops, the IOExceptionHandler can suspend connections till a checkpoint succeeds, then enable the appender again; that is reasonably safe.

But simply ignoring all errors is no longer a flyer.

The safest approach from a consistency point of view is to shutdown and let recovery deal with any partial writes.

From a client perspective, shutdown is not unlike stopStartClientConnections, but it does require something to restart the broker.

 

 

This does point to the need to update the documentation to reflect how this has evolved., updated the documentation for the ignoreNoSpaceErrors attribute with: 

From 5.15.0 ignoreAllErrors needs to be used because the appender stops on the first error leading to secondary exceptions from concurrent operations.

 , [~gtully], [~cshannon], thanks for the clarification. Since then we moved KahaDB on a dedicated partition, so it should indeed be preferable to shutdown the broker on error since it is clearly not an expected situation.]