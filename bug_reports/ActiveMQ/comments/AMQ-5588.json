[To have the client return from the start call if no server can be reached at start you can set startupMaxReconnectAttempts to control how many tries before the client gives up.  , If I use startupMaxReconnectAttempts, failover will fail after those many attempts. 

Yes, I would like failover transport to try reconnecting until the broker becomes available, BUT I would like it not to block! The failover transport does NOT block on later calls even if there is no connection to the broker, so why should it block on startup if the broker is down? I do not want to configure startupmaxReconnectAttempts since I want the transport to keep trying, forever.

I would expect the failover transport to start, and keep trying to connect to the remote broker.

Btw, what is the fix given for AMQ-2114?, There was not fix applied for AMQ-2114 because like the this one the result is that it is working as designed. , Thanks for reply. But, it works fine if AMQ goes down later after the Applications are started and deployed. Applications reconnect to AMQ later once it is up. How is it handled here?

 Then, why is it blocking on startup? Applications cannot start and fail if AMQ is down on startup. Is there a workaround for this?, Hi,

If I use startupMaxReconnectAttempts it throws exception and never again reconnects or attempts to connect once AMQ is up again.
Can you fix this defect to work like "If AMQ is down once the application is started running, applications successfully reconnect and keep sending messages".
However, if AMQ is down, before the application could be started, it throws the following exception and dies. 
Exception in thread "main" javax.jms.JMSException: Connection refused: connect
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:72)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1423)
	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1510)
	at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:325)
	at test.tutorial.QueueProducer.main(QueueProducer.java:16)
Caused by: java.net.ConnectException: Connection refused: connect

, This is how it works, if startMaxReconnectAttempts is set then it will try that many times on start and fail if no broker can be connected to.  If a connection is made then goes down the behavior is controlled by maxReconnectAttempts which defaults to unlimited attempts.  The client hangs on start if no initial connection, if it didn't hang there it would have to hang on createSession or any other method as there is no connection so no local resources can be created. , This is working as intended. ]