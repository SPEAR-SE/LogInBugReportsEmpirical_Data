[Patch applied, many thanks!, I just encountered the same issue in 4.1.1.  Looking at the patched version above, I think it subtly changes the behavior of the newInstance() method.  The old version would first try to load the class with the thread context classloader, then if that failed to load it, it would try the FindFactory class' own classloader.  As patched above, it will only ever try the first classloaders it finds.  I don't know what is the intended behavior, just want to make sure that the change is what is actually wanted.

I've patched this myself like this instead:

        Class clazz = null;
        try {
			ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
			if (contextClassLoader != null) {
	            clazz = contextClassLoader.loadClass(className);
			}
        } catch (ClassNotFoundException e) {
            ; // Ignore this here, try this class' class loader first.
        }
        if (clazz == null) {
			clazz = FactoryFinder.class.getClassLoader().loadClass(className);
		}

This means that if the thread context class loader is set, but doesn't find the class, it will try the next classloader as well.

, Sorry I was looking at CAMEL-1301 that had a link to this one.]