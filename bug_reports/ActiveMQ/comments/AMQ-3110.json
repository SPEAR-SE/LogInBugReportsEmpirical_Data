[Output from the test when executed....

Two queues: 
1. test.queue (message redelivery policy is indefinite, i.e., -1)
2. test.exception.queue

Both has a message each. 

test.queue has an asynchronous consumer which throws exception causing rollback. 

Message is moved from test.queue to test.exception.queue. The new message count is 
test.queue has zero messages
test.exception.queue has 2 message (1 from earlier, 1 that was just moved)

Bug:
The consumer on test.queue continues to receive the message that was moved out to test.exception.queue!!

----------------------------------------------


2010-12-30 14:00:51,674 INFO  (BrokerService) - Using Persistence Adapter: MemoryPersistenceAdapter
2010-12-30 14:00:51,674 INFO  (BrokerService) - ActiveMQ 5.3.0 JMS Message Broker (localhost) is starting
2010-12-30 14:00:51,674 INFO  (BrokerService) - For help or more information please see: http://activemq.apache.org/
16 [JMX connector] INFO org.mortbay.log - Logging to org.slf4j.impl.SimpleLogger(org.mortbay.log) via org.mortbay.log.Slf4jLog
2010-12-30 14:00:52,096 INFO  (BrokerService) - ActiveMQ JMS Message Broker (localhost, ID:akuntamukkala-4986-1293739251721-0:0) started
2010-12-30 14:00:52,127 INFO  (ManagementContext) - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
2010-12-30 14:00:52,143 INFO  (TransportConnector) - Connector vm://localhost Started
Thu Dec 30 14:00:52 CST 2010 : Number of messages in test.exception.queue =  1
Thu Dec 30 14:00:52 CST 2010 : Number of messages in test.queue = 1
Thu Dec 30 14:00:52 CST 2010 - Message received by consumer = ID:akuntamukkala-4986-1293739251721-2:0:1:2:1
Thu Dec 30 14:00:52 CST 2010 : Number of messages in test.queue after MOVE = 0
Thu Dec 30 14:00:52 CST 2010 : Number of messages in test.exception.queue after MOVE =  2
Thu Dec 30 14:00:52 CST 2010 - Message received by consumer = ID:akuntamukkala-4986-1293739251721-2:0:1:2:1
Thu Dec 30 14:00:53 CST 2010 - Message received by consumer = ID:akuntamukkala-4986-1293739251721-2:0:1:2:1
Thu Dec 30 14:00:54 CST 2010 - Message received by consumer = ID:akuntamukkala-4986-1293739251721-2:0:1:2:1
Thu Dec 30 14:00:55 CST 2010 - Message received by consumer = ID:akuntamukkala-4986-1293739251721-2:0:1:2:1
Thu Dec 30 14:00:56 CST 2010 - Message received by consumer = ID:akuntamukkala-4986-1293739251721-2:0:1:2:1
Thu Dec 30 14:00:57 CST 2010 - Message received by consumer = ID:akuntamukkala-4986-1293739251721-2:0:1:2:1
Thu Dec 30 14:00:58 CST 2010 - Message received by consumer = ID:akuntamukkala-4986-1293739251721-2:0:1:2:1
Thu Dec 30 14:00:59 CST 2010 - Message received by consumer = ID:akuntamukkala-4986-1293739251721-2:0:1:2:1
Thu Dec 30 14:01:00 CST 2010 - Message received by consumer = ID:akuntamukkala-4986-1293739251721-2:0:1:2:1
Thu Dec 30 14:01:01 CST 2010 - Message received by consumer = ID:akuntamukkala-4986-1293739251721-2:0:1:2:1
2010-12-30 14:01:02,486 INFO  (BrokerService) - ActiveMQ Message Broker (localhost, ID:akuntamukkala-4986-1293739251721-0:0) is shutting down
2010-12-30 14:01:02,486 INFO  (TransportConnector) - Connector vm://localhost Stopped
2010-12-30 14:01:02,502 INFO  (BrokerService) - ActiveMQ JMS Message Broker (localhost, ID:akuntamukkala-4986-1293739251721-0:0) stopped
, This is a junit test that shows how an asynchronous consumer continues to receive the message that was moved out to a different queue manually because it was failing constantly thus blocking the queue, I see this also, running v5.4.1.

-First i moved the message to another queue; message still redelivered on original queue
-Then I tried to restart the consumer; still redelivered
-Stopped the consumer, deleted the queue, started the consumer again; message finally not redelivered.

Using persistent delivery. Message was attempted redelivered maybe 10 times before I acted. Also -1 as maxRetries in the redeliverypolicy., Arne:

Look at my unit test on AMQ-3111. I use JMX to get around this problem by verifying if a message is being redelivered,   {using JMX MBean Server}, if the message really exists on the queue or not {Phantom message redelivered even though it is deleted or moved to another queue}. This lead to bad counts but at least the subsequent messages from the queue got processed. 

Let me know if you found any other work around. 
Thanks,


, note that redelivery in activemq is implemented on the client side, by the message consumer. It is only when the redelivery count is exceeded that a posion ack is sent to the broker.
If during redelivery, the consumer dies or the broker is restarted, the message will get redispatched by the broker as it has not been acknowledged.
If the message has been removed, then it should not get redelivered in the above cases.
I think there is a bug in the queue.removeSubscription where it deals with inflight messages. There it needs to check to ensure the message is not acknowledged such that it won't be dispatched if it was inflight when the subscription goes away. A remove, done as part of a move, will mark the message as acknowledged., The test case provided sets redelivery on the client as unlimited so the fact that the messages is being redelivered is expected as re-deliveries are done locally so a JMX move would not affect the client.  Modifying the test case such that the message is prefetched but the transaction is not committed and then a new consumer is attached to the same queue result in no redelivery of the moved message.]