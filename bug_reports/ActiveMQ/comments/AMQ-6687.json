[AMQ-4467 needed a revisit b/c that change prevented pfc from kicking in in this scenario in error., Commit 25f112c5c9a843f162296ad38eb79be47183e0be in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=25f112c ]

[AMQ-6687] ensure transacted sends blocked on pfc do not resume after tx completion. AMQ-4467 refine the fix such that PFC kicks in such that the cache will accept messsages that push it over it's limit while it is still under the limit
, With transactions or concurrentStoreAndDispatch - memory is accounted for before it reaches the cache which typically means that the cursor cache stops accepting messages early. If we want the cache and PFC we have to let the cache consume >100% of memory. To achieve this we must set the cursorHighWaterMark>100% something like 120% such that it will still allow a message to be cached while is is <100 that will put it over the 100% (full) limit.
Ie: we check is full and we are at 99%, we accept another message that pushes us to 101%, without a cursorHighWaterMark > 101 the cursor won't cache and will stick at 99% and producer flow control (PFC) won't kick in.]