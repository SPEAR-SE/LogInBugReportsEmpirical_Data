[A unit test that expose the issue., Fixed on trunk., the fix breaks serializability and as a result reading the producer audit from the store. I guess we need to declare incompatibility and use a new serialVersionUID or maybe implement a custom read that can deal with migration.
I came across this exception{code}2014-08-05 15:24:07,992 [main           ] - WARN  MessageDatabase                - Cannot recover message audit
java.io.InvalidClassException: org.apache.activemq.util.BitArrayBin; incompatible types for field firstIndex
	at java.io.ObjectStreamClass.matchFields(ObjectStreamClass.java:2254)
	at java.io.ObjectStreamClass.getReflector(ObjectStreamClass.java:2149)
	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:657)
	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1622)
	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1517)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1771)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)
	at java.util.HashMap.readObject(HashMap.java:1180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:1017)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1893)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1798)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350)
	at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1990)
	at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1915)
	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1798)
	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350)
	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)
	at org.apache.activemq.store.kahadb.MessageDatabase.recoverProducerAudit(MessageDatabase.java:692)
	at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:595)
	at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:400)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:418)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:262)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:204)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.doStart(KahaDBPersistenceAdapter.java:223)
	at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55)
	at org.apache.activemq.broker.BrokerService.doStartPersistenceAdapter(BrokerService.java:642)
	at org.apache.activemq.broker.BrokerService.startPersistenceAdapter(BrokerService.java:631)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:596)
	at org.apache.activemq.broker.Main.main(Main.java:50)
2014-08-05 15:24:08,000 [main           ] - INFO  MessageDatabase                - Recovering from the journal ...
2014-08-05 15:24:09,639 [main           ] - INFO  MessageDatabase                - @8:3797562, 100000 entries recovered ..
{code} which is fairly ugly., add long field so that existing serialized records can be read.
http://git-wip-us.apache.org/repos/asf/activemq/commit/58ae402b, I downloaded activemq 5.11.0 source.jar, i found the only change is that firstIndex is declared as long type. Then  I run the example :
 {code}   
public static void main(String[] args) {
       BitArrayBin toTest = new BitArrayBin(1024);
       //I  commented out the following code
       //toTest.setBit(1, true);       
       long largeNum = Integer.MAX_VALUE*2L +100L;
       toTest.setBit(largeNum, true);
       System.out.println(toTest.getBit(largeNum));   
	  
   }
    {code}
the result  of running the above code is "false".  I expect the results to be true,but I got a false]