[I'll provide a test and a pull request, GitHub user pdudits opened a pull request:

    https://github.com/apache/activemq/pull/174

    https://issues.apache.org/jira/browse/AMQ-6209

    SubQueueSelectorCacheBroker should ignore selectors of network subscriptions and queue browsers, as these shouldn't permanently extend the number of matching messages of a consumer queue.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/pdudits/activemq amq-6209

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/174.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #174
    
----
commit 4617e0cd891ff57e2bdaf454f7fcdbfab5599fac
Author: Patrik Dudits <patrik@dudits.net>
Date:   2016-03-14T09:01:17Z

    https://issues.apache.org/jira/browse/AMQ-6209
    
    SubQueueSelectorCacheBroker should ignore selectors of network subscriptions and queue browsers, as these shouldn't permanently extend the number of matching
    messages of a consumer queue.

----
, Can you rebase your PR against master?, Yes, I just pushed updated PR., I gave the patch a quick spin and the test fails with the below:

{noformat}
java.lang.reflect.UndeclaredThrowableException
	at com.sun.proxy.$Proxy4.selectorsForDestination(Unknown Source)
	at org.apache.activemq.usecases.TwoBrokerVirtualTopicSelectorFailoverTest.testLeaksAtFailover(TwoBrokerVirtualTopicSelectorFailoverTest.java:137)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:107)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:113)
	at junit.framework.TestResult$1.protect(TestResult.java:122)
	at junit.framework.TestResult.runProtected(TestResult.java:142)
	at junit.framework.TestResult.run(TestResult.java:125)
	at junit.framework.TestCase.run(TestCase.java:129)
	at junit.framework.TestSuite.runTest(TestSuite.java:252)
	at junit.framework.TestSuite.run(TestSuite.java:247)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:86)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
Caused by: javax.management.InstanceNotFoundException: org.apache.activemq:type=Broker,brokerName=BrokerA,service=plugin,virtualDestinationSelectoCache=virtualDestinationCache
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1095)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:816)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:801)
	at javax.management.MBeanServerInvocationHandler.invoke(MBeanServerInvocationHandler.java:292)
	... 23 more

{noformat}

So you might need to do some more work on the test to ensure it's sound.  There are also some warnings in the test for simple things that can be fixed like missing types to an ArrayList create etc.  , I will gladly comply, however I need to know what code did you run and in what environment, as [{{TwoBrokerVirtualTopicSelectorFailoverTest.java:137}}|https://github.com/apache/activemq/pull/174/files#diff-8a4e7ffbae789929bba4db6912813a58R137] is start of multiline comment in the PR and the test passes for me on Windows, JDK 1.8.0_45 and Maven 3.3.9.

Since that method is only used once, it might correspond to line 124. And it could fail only if broker A failed to restart - a situation that is not explicitly checked in the test ({{broker.waitUntilStarted}} returning {{false}}). Is there more information in your test output why that happened?, I cleaned up the test a bit, however the functionality remains the same until I will have a hint what might go wrong during restart - it doesn't seem to be different from other such test cases., Test fails using the latest patch, I don't have time to debug it so here is the console output from the test.  

PS. You should squash the commits in you PR otherwise we won't be able to apply it when the time comes.  , Ok, so from the input, RMI registry port was already taken. I switched off creation of JMX connector.

And for the actual cause of failure on JDK7, items in {{broker}} map were returned in different order than on JDK 8, leading to incorrect failover URL to be used in the test.

I updated the PR, please let me know if it works for you, I'll squash it right after that., I ran your updated test and it does indeed pass, however it also passes without the fix applied which is a problem as it doesn't validate the problem and protect the fix into the future. , That is surprising, as I was starting with a failing test. I'll have to check in different environments again. It may take few days to get back to this.]