[Could you provide a more complete unit test, there's a lot of things not defined or a bit unclear here.  The name "stream" implies something other than a BytesMessage so it would be good to have a complete test.  , Sorry, that was not very useful code to provide. Here it is in full.

{code}
import org.apache.activemq.ActiveMQConnectionFactory;
import org.junit.Test;

import javax.jms.*;

import static com.google.common.truth.Truth.assertThat;

public class EmptyBufferInputTest {
    @Test
    public void testEmptyBufferInput() throws JMSException {
        ConnectionFactory connectionFactory = new ActiveMQConnectionFactory("tcp://127.0.0.1:61616");
        Connection connection = connectionFactory.createConnection();
        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
        final byte[] BYTE_LIST = {1, 2, 4};
        StreamMessage stream = session.createStreamMessage();
        stream.clearBody();
        byte[] readList = new byte[BYTE_LIST.length - 1];
        byte[] emptyList = {};
        stream.writeBytes(emptyList);
        stream.reset();
        final int IS_EMPTY = 0;
        assertThat(stream.readBytes(readList)).isEqualTo(IS_EMPTY);
    }
}
{code}

{noformat}
java.lang.AssertionError: Not true that <-1> is equal to <0>

	at com.redhat.mqe.jms.main.EmptyBufferInputTest.testEmptyBufferInput(EmptyBufferInputTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
{noformat}, Now, let me check what is valid for StreamMessage and why I linked BytesMessage.

edit: done checking, I think the Jira still stands. StreamMessage and BytesMessage should behave the same in this aspect., Ok, that helps, I am trying to figure out which we are talking about as that has implications on what the expected behavior is :), Commit 61d3231d3647fc136b12fd88a9165b783e36585b in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=61d3231 ]

AMQ-6809 Fix issue where stream message getBytes returned wrong value

StreamMessage implementation should return zero when the full value of a
written byte array has been consumed before then returning -1 on the
next read.  Ands fix and additional testing of ActiveMQStreamMessage, Commit 592b31343e62d909be52be79845a55833813c2ce in activemq's branch refs/heads/activemq-5.15.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=592b313 ]

AMQ-6809 Fix issue where stream message getBytes returned wrong value

StreamMessage implementation should return zero when the full value of a
written byte array has been consumed before then returning -1 on the
next read.  Ands fix and additional testing of ActiveMQStreamMessage
(cherry picked from commit 61d3231d3647fc136b12fd88a9165b783e36585b)
]