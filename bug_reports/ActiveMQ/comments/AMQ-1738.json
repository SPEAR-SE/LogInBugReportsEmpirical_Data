[fixed in rev 658370, Hiram,
Just a thought, this looks similar to AMQ-1714 where I though the dispatchLock held the key to subscriptions. I guess the fix for AMQ-1714 may have made the  window smaller but it is still there :-(

If you get a moment, would you cast your eye over the fix for AMQ-1714 in this context, there may be a more complete locking strategy that will close the window such that AMQ-1738 does not occur. That is, it may be possible to negate the check in add() that you just added if the dispatch locking logic is improved a bit.
, We are still experiencing this issue.
Our customer reports that this issue still occurs.
======================================
The problem is the locking of Messages in the queue. 
The class "IndirectMessagereference" uses the methods "lock()" and "unlock()". 
While adding Messages to the queue, messages are locked and unlocked continiously. 
When a consumer is removed, the messages locked by the consumer are unlocked. 

At this point, the race condition appears to prevent locked messges from ever being unlocked again. 
Locked Messages cannot be retrieved from the queue by any other consumer, so they stay there forever.


, We are willing to compensate anyon ewho could help us resolve this issue.

Please contact me directly at jason.theune@openlogic.com to inquire how...!

This is a great opportunity to earn CA$H for your open source contribution., this is fully nailed in 5.2, dispatch is now very tight.]