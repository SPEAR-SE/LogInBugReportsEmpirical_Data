[Just verified this problem with the broker running on Java(TM) SE Runtime Environment 1.6.0_06 (Sun) on SuSE Enterprise Linux., Can I do anything to help this issue along...I am experiencing the same problem and I would be happy to dig in and do some fixin'..., Any reason why this issue can't get resolved in version 5.3?  Virtual Topics are a documented feature of ActiveMQ.

http://activemq.apache.org/virtual-destinations.html 

The broker receives the same error with a transactional session on commit.  Here's a thread further discussing the problem:

http://www.nabble.com/uses-virtual-topic---and-ClientAcknowledge-to-submit-the-message-occured-probem-ts22486742.html#a24260251, There is an existing test case on trunk VirtualTopicPubSubTest  - http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/broker/virtual/VirtualTopicPubSubTest.java?view=annotate

I modified it to use client ack but it does not show the behavior above. 

If that test (or one like) could be extended or replicated to show the problem it would speed up the process of getting a resolution., patch to apply to test class to try and replicate message redelivery problem with virtual topics., Thanks for you effort and quick response to this Gary.

The reason the above test may be passing is because you are using the same connection when instantiating the consumers.

The issue is when a subsequent connection is made (or consumer is disposed) the messages get redelivered.  They do not get redelivered on the same connection.  The broker just spits out the error as mentioned in the original post of the reporter.  The next connection the broker redelivers the same messages.  The pattern repeats.

As you suggested, I've attached a patch (testPatch.patch) to extend this test and ConsumerBean to try and replicate the issue.  

I'm a .NET programmer so I have replicated the problem with ActiveMQ NMS similar to how the patch does.  So forgive me if there are any syntactical errors in the java code.  :(  The logic should be correct though and hopefully we can trigger the error.

If we can trigger it, fix it, and bump this issue to 5.3 that would be great!  :)

Please keep me informed on how it goes.

PS Also note the reporter attached the broker configuration and the test classes he used to trigger this error.

, mark, i applied ur changes and refactored a bit more to use separate connections for each consumer, but to no avail. the test still works. Cannot do much with this till we get a failing test case. I cannot see any real difference between the test classes from the original reporter and the current test case on trunk.
latest test is in r792220
, I am out of the office until Thursday, July 9th. Please call the reference line at 414-566-6740 if you need immediate assistance.
, Your auto-reply somehow got added as a comment to this JIRA issue.

https://issues.apache.org/activemq/browse/AMQ-1763?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId=52743#action_52743 

Weird...



, Hey Gary.

Thanks for helping out on this issue.  I looked at your code and it looks like it should be replicating the problem and failing.

Since it isn't, do you think you could try running the code the reporter attached.  I'm thinking if you run the producer once and then the consumer messages will come through as expected.  Then if you stop and run the consumer a second time the same messages will be redelivered.  This forsurely replicates the problem when using the ActiveMQ NMS framework.

If you could do this that would be great because maybe we are missing something in the unit test.

I think if you run the reporters producer/consumer and everything works correctly then it's safe to assume this is an issue with the ActiveMQ NMS framework.

-Regards

PS Sorry about the previous comments.  Looks like auto-reply can be a nuisance.  Especially if you aren't aware of it.]