[Same scenario with disconnecting of NC happened after NegativeArraySizeException. Mine message loss happened also.

Here is stack trace:
{code}
09:48:26,116 DEBUG [Transport           ] Transport failed: java.io.IOException: Unexpected error occured
java.io.IOException: Unexpected error occured
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:192)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NegativeArraySizeException
        at org.apache.activemq.openwire.v5.MessageMarshaller.tightUnmarshal(MessageMarshaller.java:81)
        at org.apache.activemq.openwire.v5.ActiveMQMessageMarshaller.tightUnmarshal(ActiveMQMessageMarshaller.java:66)
        at org.apache.activemq.openwire.v5.ActiveMQObjectMessageMarshaller.tightUnmarshal(ActiveMQObjectMessageMarshaller.java:66)
        at org.apache.activemq.openwire.OpenWireFormat.doUnmarshal(OpenWireFormat.java:366)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:279)
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:210)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:202)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
        ... 1 more
{code}, Working as designed, exceptions on loss of connection due to incomplete openwire commands being read are acceptable.  The static connection will reconnect once the connection is dropped.]