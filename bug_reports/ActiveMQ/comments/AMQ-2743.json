[Attaching the three config files needed to reproduce the problem. , We have seen this same thing. Everything was fine in 5.3.0, but unable to failover to slave in 5.4.2. This is a serious issue - we cannot rollback to 5.3.0 due to other bugs, fixed in later versions - and we can not deploy a fault-tolerant configuration on a newer version, because of this bug., NetworkConnectors and the failover transport can work against each other as they both do retries to reconnect on failure.
When failover is used with a network connector, the failover transport needs to propagate a failure such that the network bridge can be recreated. To achieve this you need to provide maxReconnectAttempts=1. In this way, failover is used to choose the uri to connect to, but when it fails it lets the network connector know such that it can retry creating the bridge.

To determine if this is the problem, replace the use of network connector with failover (uri1, uri2) with two network connectors, one to uri1 and the other to uri2., Interesting, and very useful information, thank you!, For what it's worth we carefully retested our failover scenarios after carefully checking configurations in 5.4.2 and can not reproduce the issue any longer. Our current configuration has two bridged AMQ networks. The configuration that seems to work for us is primary/backup with shared disk in each network. Our bridges use a static: connector with both uplink AMQ servers listed (note *not* failover: as that does not work properly). Since only the primary or the backup server is alive at any given time, this works. Our clients all use a failover: connector with ?updateURIsSupported=false to make sure they only talk to their proper network. We didn't do anything with maxReconnectAttempts..., The updates in AMQ-3542 identify the only supported use case where failover: and static: discovery work together.]