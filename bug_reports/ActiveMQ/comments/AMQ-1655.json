[I can only reproduce this problem by trying to connect/disconnect durable subscriber very fast, like in the following test
    
{code}
public void testMultipleConnect() throws Exception {
    	for (int i = 0; i < 100; i++) {
    		StompConnection stompConnection = new StompConnection();
                URI connectUri = new URI(bindAddress);
                stompConnection.open(createSocket(connectUri));
    		stompConnection.connect("system", "manager", "test");
    		stompConnection.disconnect();
    		//Thread.sleep(1);
    	}
    }
{code}

the problem is that sometimes CONNECT command arrives before previous DISCONNECT and than the broker fails to create a connection.

I don't think we can do much about it and this use case is a bit of a misuse of Stomp. A simple workaround is to add a small (even 1ms works) pause just to get commands in order. But generally you should think of reusing your connections better.

I'll resolve this issue for now, but if this is not your use case or you can help to reproduce the problem with another example, please reopen it.]