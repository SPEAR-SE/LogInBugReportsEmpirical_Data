[Thanks for your fast reply, Rob. 

I tried activeMQ 5.1. 
The connection alive time is longer than 5.0 version that I used before. 
But it still closes the connection after some while. 

I attach the exception logs below. 
Is there any configuration value for idle timeout? 
----- 
18:34:04,249 DEBUG [InactivityMonitor] No message sent since last write check, sending a KeepAliveInfo 
18:34:14,249 DEBUG [InactivityMonitor] 30000 ms elapsed since last read check. 
18:34:14,249 DEBUG [InactivityMonitor] No message received since last read check for tcp://some.domain.com/127.0.0.1:61616! Throwing InactivityIOException. 
18:34:14,249 WARN  [ActiveMQConnection] Async exception with no exception listener: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: some.domain.com/127.0.0.1:61616 
org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: some.domain.com/127.0.0.1:61616 
        at org.apache.activemq.transport.InactivityMonitor$4.run(InactivityMonitor.java:142) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source) 
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) 
        at java.lang.Thread.run(Unknown Source) 
18:34:14,249 DEBUG [TcpTransport] Stopping transport tcp://some.domain.com/127.0.0.1:61616 
18:34:14,265 WARN  [ActiveMQConnection] Async exception with no exception listener: java.net.SocketException: socket closed 
java.net.SocketException: socket closed 
        at java.net.SocketInputStream.socketRead0(Native Method) 
        at java.net.SocketInputStream.read(Unknown Source) 
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:50) 
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:58) 
        at java.io.DataInputStream.readInt(Unknown Source) 
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:267) 
        at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:203) 
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:195) 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183) 
        at java.lang.Thread.run(Unknown Source) 



, I am using activemq-all-5.1-SNAPSHOT.jar and still get this error: 

2008-02-19 11:44:25,768 (ActiveMQConnection.java:1453) WARN  org.apache.activemq.ActiveMQConnection - Async exception with no exception listener: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long. 
org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long. 
        at org.apache.activemq.transport.InactivityMonitor.readCheck(InactivityMonitor.java:101) 
        at org.apache.activemq.transport.InactivityMonitor.access$000(InactivityMonitor.java:35) 
        at org.apache.activemq.transport.InactivityMonitor$1.run(InactivityMonitor.java:51) 
        at edu.emory.mathcs.backport.java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:431) 
        at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.runAndReset(FutureTask.java:198) 
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:189) 
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:213) 
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650) 
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675) 
        at java.lang.Thread.run(Thread.java:595) 


, Try such a connector URL.

tcp://jmshost:61616?wireFormat.maxInactivityDuration=0, Already tried "tcp://jmshost:61616?wireFormat.maxInactivityDuration=0". What happens in this case is that the client is still dropped but there is no exception. The client just stops receiving messages - so isn't much better :-)

Thanks for the advice, Please ignore., Can we get a solution to this made available in 4.1.1?]