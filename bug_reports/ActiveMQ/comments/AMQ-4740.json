[Have you tested with the latest 5.9-SNAPSHOT?  Can you create a unit test to reproduce?  , This was failing because StompSocket did not have an InactivityMonitor defined, so I have added an instance of StompInactivityMonitor.

I tested this manually.  We now return the correct heartbeat, and the server will terminate the connection properly.  I did not add an automated test.  We have some old tests which use Selenium that could be extended to test this, but they are currently deactivated.
, Patch applied, thanks., I have applied this patch to version 5.9.0 and have also installed a 5.10.0 snapshot. With each version I receive the following error after establishing a connection and heartbeat through stomp.js. This seems to occur after the 'PING' is sent.

---------- stomp.js output
<<< CONNECTED
heart-beat:10000,10000
session:ID:localhost.localdomain-45596-1396530920609-2:2
server:ActiveMQ/5.10-SNAPSHOT
version:1.1

send PING every 10000ms 
check PONG every 10000ms 
<<< PONG 
>>> PING 
did not receive server activity for the last 20005ms 
Whoops! Lost connection to ws://172.16.99.73:61614/stomp 

--------------------- activemq console ---------------
WARN | Transport Connection to: StompSocket_19548821 failed: java.io.IOException
Exception in thread "ActiveMQ InactivityMonitor Worker" java.lang.NullPointerException
	at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
	at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)


WARN | Transport Connection to: StompSocket_19548821 failed: java.io.IOException
Exception in thread "ActiveMQ InactivityMonitor Worker" java.lang.NullPointerException
	at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
	at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
, I'm using version 5.9.1.  I still see this issue when I connect to the broker using STOMP over websocket. Output from the console:

WARN | Transport Connection to: StompSocket_5104867 failed: java.io.IOException
Exception in thread "ActiveMQ InactivityMonitor Worker" java.lang.NullPointerException
        at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
        at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        at java.lang.Thread.run(Thread.java:722)
, Seeing the same exception as Paddy.

I'm using the 5.9.1 homebrew version locally, but seeing the same thing on our staging environment.

If I set the heartbeat to 0,0, the browser receives messages, even though it disconnects every 5 minutes and has to reconnect. 

With the heartbeat set to 10000,10000, the browser never receives messages., Same as Paddy here too with 5.9.1.

Please reopen, Please reopen this ticket. The bug described above is still present in 5.9.1. I tried both cases, heartbeat set to  0,0 and 10000,10000. Slightly different buggy behaviors, but it still does not work. Please:
1) download 5.9.1
2) bin/activemq console xbean:examples/conf/activemq-demo.xml
3) open two browsers (firefox/chrome) to http://localhost:8161/demo/websocket/index.html
4) type a few messages over a 5 minute period

 WARN | Transport Connection to: StompSocket_1998606381 failed: java.io.IOException
 WARN | Transport Connection to: StompSocket_178709817 failed: java.io.IOException
Exception in thread "ActiveMQ InactivityMonitor Worker" java.lang.NullPointerException
        at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
        at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
Exception in thread "ActiveMQ InactivityMonitor Worker" java.lang.NullPointerException
        at org.apache.activemq.transport.AbstractInactivityMonitor.onException(AbstractInactivityMonitor.java:314)
        at org.apache.activemq.transport.AbstractInactivityMonitor$4.run(AbstractInactivityMonitor.java:215)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
, I also already opened a ticket for the above heartbeat bug: AMQ-5155
, Issue is still happening with ActiveMQ 5.10.0.

In the log:

2014-06-11 15:27:59,776 | WARN  | Transport Connection to: StompSocket_1430955985 failed: java.io.IOException | org.apache.activemq.broker.TransportConnection.Transport | qtp542980314-29

The corresponding STOMP frames were:

CONNECT
accept-version:1.1,1.0
heart-beat:20000,60000

CONNECTED
server:ActiveMQ/5.10.0
heart-beat:60000,20000
session:ID:jeff.local-51540-1402496252734-2:1
version:1.1

And the Web Socket client was sending PING frames every 20 seconds.

, The StompSocket IOException seems to still be an issue with ActiveMQ 5.11.1 (and jetty-8.1.17).

I did some further investigations, and it seems like the java.io.IOException is caused by a java.io.EOFException that in its turn is caused by an InputStream being closed (since there is no more data to be read) and this is not handled gracefully. Quickly added a try-catch block for EOFException and it now seems to work. Should probably be handled in a better way though than what is in the attached AMQ-4740-EOF.diff.

This patch does not solve the heart-beat issue though, but by applying the suggested code from Claudio in AMQ-5155 this seems to work fine, at least when testing with stomp.js:
{noformat}
Opening Web Socket...
Web Socket Opened...
>>> CONNECT
login:
passcode:password
accept-version:1.1,1.0
heart-beat:10000,10000

<<< CONNECTED
heart-beat:10000,10000
session:ID:server01-55719-1425899064567-4:58
server:ActiveMQ/5.11.1
version:1.1

connected to server ActiveMQ/5.11.1
send PING every 10000ms
check PONG every 10000ms
connected to Stomp
>>> SUBSCRIBE
id:sub-0
destination:/topic/chat.general

<<< PONG
>>> PING
<<< PONG
>>> PING
<<< PONG
>>> PING
<<< PONG
>>> PING
<<< PONG
>>> PING
<<< PONG
{noformat}, Fixed by AMQ-5155]