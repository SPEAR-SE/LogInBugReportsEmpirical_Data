[Attached patch that fixes problem for us, do you have any unit test that can easily demo the problem?, Sorry, we have no unit test. The problem was discovered, troubleshooted and fixed thanks to the load test for the application. It should be possible, however, to reproduce it with JMSTemplate or code like in it., this may provide a test case - seems to be the same issue, We have checked ConnectionPerMessageTest and it shows the soft deadlock described in this bug. Although the use-case is bad in AMQ-4964, the deadlock is in the transport connection and it can affect performance in other usecases.
The debugger reveals that, one of the transports in VM transports pair needs the other one to stop. If the second thread is busy and the first thread manages to receive a write lock before the second one, then the second tread cannot shutdown, because it cannot acquire the lock. They both wait for each other until the specified timeout period elapses ( 1 second in runable.wait(timeout)). This problem is resolved when session gets closed. ]