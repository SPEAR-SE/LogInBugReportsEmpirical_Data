[The issues was brought to my attention from this forum thread, which we got notified about on the Camel @dev list
http://forum.springsource.org/showthread.php?128152-Spring-Integration-2-1-request-reply-benchmark-tests-showed-very-poor-performance

Running the sample code, will cause the memory issue. However switching to use a Spring based Cached connection factory, causes no problem, and has no memory leaks. But using the AMQ pool instead causes the leak.

, This is the AMQ pooled configuration I am using in that test from the link above, the code from the github project
{code:xml}

	<bean id="connectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
		<property name="maxConnections" value="1" />
		<property name="maximumActive" value="10"/>
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL" value="tcp://localhost:61616" />
			</bean>
		</property>
	</bean>
{code}, bad.png is is a screenshot before the fix, good.png is a screenshot with the fix. , patch with fix, Patch applied with thanks in http://svn.apache.org/viewvc?rev=1378098&view=rev]