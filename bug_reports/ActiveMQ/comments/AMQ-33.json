[I don't think you're meant to call Message.setJMSExpiration() as the JMS provider is meant to do that.

If you want to send a message with a time to live (TTL), I think you're meant to call MessageProducer.send(...., timeToLive);

http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageProducer.html#send(javax.jms.Destination,%20javax.jms.Message,%20int,%20int,%20long)

Or specify a default time to live on the MessageProducer...

http://java.sun.com/j2ee/1.4/docs/api/javax/jms/MessageProducer.html#setTimeToLive(long)


AFAIK the time to live code is working. Maybe if you specify the TTL properly it might fix your issue? Incidentally the value of Message.getJMSExpiration() is GMT + the TTL, rather than just the TTL. This might explain why things are not sent?, From the spec....

3.4.11 How Message Header Values Are Set

Header Fields Set By
JMSDestination Send Method
JMSDeliveryMode Send Method
JMSExpiration Send Method
JMSPriority Send Method
JMSMessageID Send Method
JMSTimestamp Send Method
JMSCorrelationID Client
JMSReplyTo Client
JMSType Client
JMSRedelivered Provider, We now explicitly overwrite the value of jmsExpiration() in the JMS client's send() method now to avoid any further confusion. See the above comments for how to specify a timeToLive when sending messages]