[Patch the shows the regression in 5.4.1
Applying to 5.3.2, shows it succeeds.

Using ASF License as this is a direct copy of ActiveMQ code and config with 3 lines added., Adding some more side-effects of Spring 3 schema validation

{quote}
- in activemq.xml file I define the following configuration
<managementContext>
<managementContext createConnector="true" connectorPort="${activemq.jmx.port}" />
</managementContext>

- then I add some system properties on the command line of the JVM:
Java Runtime: Sun Microsystems Inc. 1.6.0_20 /usr/lib/jvm/java-6-sun-1.6.0.20/jre
 Heap sizes: current=253440k  free=250641k  max=506816k
   JVM args: -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Xms256M -Xmx512M -Dactivemq.instance=testrbr -Dactivemq.jmx.port=1099 -Dactivemq.jetty.port=8161 -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote -Dactivemq.classpath=/mnt/export/activemq/testrbr/conf;/usr/share/activemq/conf; -Dactivemq.home=/usr/share/activemq -Dactivemq.base=/mnt/export/activemq/testrbr

Unfortunately this fails because of XML validation:
   Caused by: org.xml.sax.SAXParseException: cvc-datatype-valid.1.2.1: '${activemq.jmx.port}' is not a valid value for 'integer'.
{quote}
, The root cause of all these problems is schema validation introduced in Spring 3. The solution would be to make this validation at least optional. I had a quick look a while ago, but didn't find a way to do it, so it requires additional research., For the ManagementContext, in r1028278 I have made the schema use a string value for the port attributes such that they can use property values even with validation.
Validation should still be optional though., According to https://jira.springframework.org/browse/SPR-5014?focusedCommentId=48116&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_48116 there seems to be a way to programatically disable XML validation when creating the application context. I was not able the correct piece of code to change in ActiveMQ to test this unfortunately., @Reynald 
You probably need to introduce a subclass of the Xbean ResourceXmlApplicationContext to disable the validation.

The entry point is: org.apache.activemq.xbean.XBeanBrokerFactory#createApplicationContext in activemq-core, r1034032

add validate query parameter support to the xbean broker factory so that schema validation can be disabled.{code}./bin/activemq xbean:conf/activemq.xml?validate=false{code}
, @Gary Tully : 
i was using apache-activemq-5.3.2 with configured plugins and everything is working fine. i upgraded to apache-activemq-5.4.1 and i faced the following exception :
org.xml.sax.SAXParseException: cvc-complex-type.3.2.2: Attribute 'plugins' is not allowed to appear in element 'broker'.

i am using embedded broker :
 BrokerService broker = BrokerFactory.createBroker("xbean:activemq.xml");

i don't know how to configure validate = false for spring 3.0.
i see it will fixed in 5.5.0 , but i don't have time waiting it. is there any workaround for it ??, You can use the <plugins> element instead.

I ended up doing this:

<bean id="myPlugin" class="com.yahoo.MyPlugin">
<property name="disabled">
<value>false</value>
</property>
</bean>


	<broker brokerName="broker" dataDirectory="${activemq.base}/data">
		<plugins xmlns:spring="http://www.springframework.org/schema/beans">
			<spring:ref local="myPlugin" />
 		</plugins>
	</broker>

Instead of:
<bean id="myPlugin" class="com.yahoo.MyPlugin">
<property name="disabled">
<value>false</value>
</property>
</bean>


	<broker brokerName="broker" dataDirectory="${activemq.base}/data" plugins="#myPlugin">
	</broker>

, embedded xbean url in vm transport does not work with the validation=false query parameter. The parameter is gobbled up by over eater query parsing. Example of uri that won't work:
{code}"vm://localhost?brokerConfig=xbean:appendium-esb-server-activemq-broker-config.xml?validate=false"{code}

Points to a problem in URISupport, the diff below will fix. 
There are some tests(FailoverUriTest) that are dependent on the broken behavour so this needs some care to maintain backward compatibility if possible.
{code}Index: src/main/java/org/apache/activemq/util/URISupport.java
===================================================================
--- src/main/java/org/apache/activemq/util/URISupport.java	(revision 1044145)
+++ src/main/java/org/apache/activemq/util/URISupport.java	(working copy)
@@ -101,9 +101,18 @@
         }
     }
 
+    /**
+     * any leading '?' should already be stripped off
+     */
     public static Map<String, String> parseQuery(String uri) throws URISyntaxException {
         try {
-            uri = uri.substring(uri.lastIndexOf("?") + 1); // get only the relevant part of the query
+            // get only the relevant part of this query string
+            if (uri.indexOf(')') != -1) {
+                uri = uri.substring(0, uri.indexOf(')'));
+            }
+            if (uri.indexOf('?') != -1) {
+                uri = uri.substring(0, uri.indexOf('?')); 
+            }
             Map<String, String> rc = new HashMap<String, String>();
             if (uri != null) {
                 String[] parameters = uri.split("&");{code}, Patch with fix that needs validation of usage pending unit test investigations., The changes in https://issues.apache.org/jira/browse/AMQ-3570 to remove the ordering constraint  via xbean 3.9 will sort this.]