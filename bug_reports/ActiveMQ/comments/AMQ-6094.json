[Test Case, Running the same test code with 5.12.1 works correctly and the described issue does not appear., Also tried it now with 5.12.2 (built with code from GitHub) and this version seems to be affected by the above described problem as well (I've added it to the affected versions), Thanks for reporting this.  I was able to use your test and verify that there is in fact an issue. I modified your test case slightly so that it runs with an embedded broker and JUnit.  I am able to see it print out an increasing memory usage.

I did some debugging with git-bisect and the problem is coming from this commit: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=1ad0117932ae73603b963860c92c0980a3572b9e

The commit was all cherry-picked to 5.12.x https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=e54c9ccfa0a2bbc419fc10c39825610bf078c3db

So, for now I am going to go ahead and cancel the 5.12.2 vote because I think this issue should be resolved before releasing 5.12.2, Modified test case that runs with JUnit and is standalone that demonstrates the problem., [~gtully], When you get a chance can you take a look at this and see what you think?  I've narrowed down the issue to the changes that were made to PrefetchSubscription in commit https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=1ad0117932ae73603b963860c92c0980a3572b9e .  If you undo the changes then the test case runs without memory usage continuing to increase., Hi,
do I understand that this problem only occurs for durable subscribers ?
Thanks,
Felix, Commit e3df09b9db09d6cf2834b0beb901c253be9b6120 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e3df09b ]

https://issues.apache.org/jira/browse/AMQ-6094 - regression via https://issues.apache.org/jira/browse/AMQ-6014 - incorrect ref count on message expiry event during cursor move for dispatch. Fix and test - thanks for the test
, [~felixehm] - fraid not. It related to the expiry check, so any message with a setTimeToLive could trigger it., [~cshannon] thanks for the unit test and commit identification. The expiry case was missing a decrement which lead to the leak. The test now verifies the usage after draining the queue, it finishes in a minute of so. , Thanks [~gtully], I will get the fix back-ported and re-run the 5.12.2 vote., Commit 26665fa1b98a9004fc90a6eeea26ca06eb53d118 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=26665fa ]

https://issues.apache.org/jira/browse/AMQ-6094 - regression via https://issues.apache.org/jira/browse/AMQ-6014 - incorrect ref count on message expiry event during cursor move for dispatch. Fix and test - thanks for the test

(cherry picked from commit e3df09b9db09d6cf2834b0beb901c253be9b6120)
, Commit 6f8942387e98f3dd41612dc331fa72f3fa718613 in activemq's branch refs/heads/activemq-5.12.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=6f89423 ]

https://issues.apache.org/jira/browse/AMQ-6094 - regression via https://issues.apache.org/jira/browse/AMQ-6014 - incorrect ref count on message expiry event during cursor move for dispatch. Fix and test - thanks for the test

(cherry picked from commit e3df09b9db09d6cf2834b0beb901c253be9b6120)
]