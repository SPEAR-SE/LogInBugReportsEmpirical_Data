[From AMQ 5.9 onwards hawtio is the preferred web console. You should try using that instead., Re-opening this issue as the ActiveMQ console remains an active, important part of the solution., Removing the "fix-in" version as this is still open., The problem still exists (tested with Karaf 2.3.4, Camel 2.13.1 and ActiveMQ 5.10.0). Adding the import of {{javax.management.remote.rmi}} into web console bundle doesn't solve this problem. I think, this is not caused by missing import (not in web console), Similar problem was submitted in AMQ-3633, Let me take a look on that., Make sure that you are not already running another Java RMI registry on port 1099. I ran into similar classloader errors when another JVM was running on the same machine as Karaf., (same comment added to 3633)
Based on some experiments I'm doing with the activemq web console installed as an esa in WAS Liberty (which runs on equinox) I very much doubt this is a problem that can be solved in activemq.  The problem appears to be that the jdk code is attempting to use a bundle classloader to load it's own classes.  I find that adding the relevant package to the boot delegation allows this to work.  For me this is done by adding the framework property

org.osgi.framework.bootdelegation=javax.management.remote.rmi

You might need other boot delegation packages as well, so this particular setting might not be appropriate everywhere.

Equinox can also have implicit boot delegation, although this seems to have a fairly large performance penalty.  I'm not sure which versions of equinox have this on or off by default; this might explain the difference in behavior between equinox 3.6 and 3.8.  To turn it on (unless otherwise disabled by launch code):

osgi.context.bootdelegation=true
]