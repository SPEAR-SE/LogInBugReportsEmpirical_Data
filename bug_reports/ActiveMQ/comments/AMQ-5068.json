[The persisting on rollback is fine when the broker stays alive or dies after a rollback or shuts down gracefully.
But if there is no transaction, or the broker aborts (and does not get a chance to write any more) we have a problem.

This new solution requires writing 'before' we dispatch, so if we reread the store we know it 'may be' a duplicate dispatch.

It is about duplicate dispatch rather than duplicate delivery., Fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/266d23ef

enabled via destination policy{code}<policyEntry ... persistJMSRedelivered="true" />{code}

This ensures that the JMSRedelivered header will always be set on a restart.
Note: this is only done once, to preserve the redelivered flag. the redelivery count is not preserved., implemented for kahadb, leveldb and jdbc message stores., Commit c78eddce7ed3045b5508dd6713252dca8766436c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=c78eddc ]

revert sync ack send for https://issues.apache.org/jira/browse/AMQ-3519 due to rework in https://issues.apache.org/jira/browse/AMQ-5068 - sync send no longer needed because redelivered flag is persisted before dispatch. This avoids a roundtrip overhead on individual ack, ie priority or nonBlockingRedelivery options in the mix
, Commit f8488916c2cc04c402e437fdbc2f61f118189d08 in activemq's branch refs/heads/activemq-5.13.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f848891 ]

revert sync ack send for https://issues.apache.org/jira/browse/AMQ-3519 due to rework in https://issues.apache.org/jira/browse/AMQ-5068 - sync send no longer needed because redelivered flag is persisted before dispatch. This avoids a roundtrip overhead on individual ack, ie priority or nonBlockingRedelivery options in the mix

(cherry picked from commit c78eddce7ed3045b5508dd6713252dca8766436c)
]