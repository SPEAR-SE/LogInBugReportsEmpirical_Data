[Broker config and log files from my test. , I ran the test again changing step 6 to restart broker2 immediately.  In this case it looks like broker1 was able to re-establish the network channel.  However when the producer is started, broker2 log shows a null pointer exception for every message forwarded to broker1., I have track the second part of this problem down to the fact that the writeValueCache in the DefaultWireFormat is not cleared when the network channel connection is broken.  However, I am not not sure the proper place to perform the clear. Can someone step in and provide some guidance., The information in attached file amq173info-3.zip is an extract from the log files generated by the networked brokers.  I added log statements in the DefaultWireFormat methods that read and write to the readValueCache map.  After confirming that I am currently working against the code in CVS HEAD, I reran my test and extracted the cache accessing log messages.  The log clearly show that the something is wrong with the cache as it is returning null values for the key that should represent the destination value.  I had assumed that this was cause by the sender assuming that the receiver had cached the needed values, but looking at the extracts closer, I think that wrong instance being accessed might be the cause., The NullPointerException problem has been repaired now, however the first problem still remains.  Thinking about it though I realized that not be a bug, but instead a limitation of the configuration used for the reliable transport.  Unless this tranport is configured in such a way as to perform a perpetual check for its defined peers, the Netword channel will eventually timeout and stop.  Once this NetworkChannel stops the only way to start it again is to restart the broker.

With this understanding I consider this issue close.  Thank Stewie for helping find the problem with NullPointerException., Hi everyone,

I need your input related to this problem. I am using the latest ActiveMQ 2.1 with JDK 1.5. I have two brokers clusters with network channels, let's say A, B. If I shutdown broker B, the network channel on both ends re-connected. But i noticed that the topic publisher in B is no longer able to publish message to A. On the other hand, topic subscriber is able to receive the message published by A. If I shutdown A, the situation is reversed.

I like to confirm whether this finding is valid. I appreciate you input.

Thanks

Hong]