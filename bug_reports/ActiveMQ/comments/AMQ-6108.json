[Updated patch, It's a good idea to include a test if possible to demonstrate the issue (in this case to show that the shutdown hangs) and also to show that your patch fixes the problem.  It also helps to make sure that any future changes won't cause the problem to show up again., Since the SelectorManager instance is shared amongst every Transport instance created when using the NIOTransport types it doesn't make any sense to shutdown the executor when any one instance is stopped, or when any one TransportConnector instance is stopped as that defeats the purpose of the NIO bits sharing resources.  The Threads in the executor should be set deamon though in order to prevent them keeping a JVM running.  , Commit 5adbafef3b9ec05de7186caa9112f3639c7a6253 in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5adbafe ]

https://issues.apache.org/jira/browse/AMQ-6108

Ensure that executor threads are created as daemon threads, fix a
try/finaly block, clean up some warnings.  , Commit 1d9fdbcbeaacf2d5673bb5435b1caae0b1cfc7a7 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=1d9fdbc ]

https://issues.apache.org/jira/browse/AMQ-6108

Ensure that executor threads are created as daemon threads, fix a
try/finaly block, clean up some warnings.
(cherry picked from commit 5adbafef3b9ec05de7186caa9112f3639c7a6253)
, Updated thread creation to be daemon threads and fixed some warnings in the code.  Shutdown of the SelectorManager doesn't make sense on Transport stop given that all other active NIO Transport based instances still need to use the SelectorManager , Actually these check-ins by [~tabish121] call setDaemon(false), i.e. they create the ActiveMQ IO Worker thread as user thread, not as daemon. This is exactly the wrong way around, so this issue remains unfixed, or rather the fix here really broke things!

This is a major problem, as it prevents proper shutdown and restart of JVMs running AMQ. In all previous releases these threads actually were daemon threads, as can easily be verified in thread dumps, but the newly added explicit setDaemon(false) call broke that in 5.13.1., Commit e2b4ca2c59a316be91cf391c758a10e518dd3a1f in activemq's branch refs/heads/master from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e2b4ca2 ]

https://issues.apache.org/jira/browse/AMQ-6108

Update the threads created by the SelectorManager to be daemon threads. , Commit e0081014bfd95140b0545ffc20e1d25558044a02 in activemq's branch refs/heads/activemq-5.13.x from [~tabish121]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e008101 ]

https://issues.apache.org/jira/browse/AMQ-6108

Update the threads created by the SelectorManager to be daemon threads. 
(cherry picked from commit e2b4ca2c59a316be91cf391c758a10e518dd3a1f)

Conflicts:
	activemq-client/src/main/java/org/apache/activemq/transport/nio/SelectorManager.java
, Thanks for the quick fix!]