[Rob,

This issue is a bit more complex than I've noted above.  I've been out for a week, but prior to leaving I got a version (based upon 4.0.1) working.  I will submit comments and patches sometime today, hopefully.
, Rob,

The fixes I have for the 4.0.1 release for this issue rely upon the fix I made to DemandForwardingBridgeSupport for issue [ https://issues.apache.org/activemq/browse/AMQ-776?page=all ].

So, for 4.0.2, as I reported in AMQ-776, the 4.0.1 fix did not fix 4.0.2.  I will have to try and track down what is wrong there and get 4.0.2 fixed for AMQ-776.

At any rate, I should describe this issue better:

Not only is there an issue with TransportConnection::stop, wherein it attempts to send something on the socket before closing, there are problems in general with the fact that FailoverTransport is decorated by MutexTransport.  When publishing to a consumer between two brokers, and the consumer-side broker is frozen, and the socket fills up, then the FailoverTransport (InactivityMonitor) attempts to close down the connection.  This will fail, as everything is blocked around the MutexTransport.  See the scenario list below for how to recreate the problem.  

The changes I made are rather surgical, in order to make it work.  I wasn't particularly happy with them, but maybe they are acceptable.  I will attach patches as soon as I get AMQ-776 working.  But, the changed source files include:
org.apache.activemq.transport.MutexTransport
org.apache.activemq.transport.failover.FailoverTransport
org.apache.activemq.transport.tcp.TcpTransport
org.apache.activemq.broker.TransportConnection

The changes were not tested against all unit tests, so there may be similar changes required to other files (i.e. some other transport than TcpTransport).


Scenario (using ConsumerTool and ProducerTool from examples):
-Start broker A
-Start broker B
-Start consumer, on FOO, attaching to broker B (failover transport, only broker B)
-Start publisher, on FOO, publishing large messages, such as 10K bytes, attaching to broker A (failover transport, only broker A)
-On Solaris, pstop broker B

Wait for the socket to fill up, and then when broker A reports the dead connection, notice that it does not close off the connection properly.  Do a kill-3 on broker A and note that it is waiting on MutexTransport lock and FailoverTransport can't close off the connection.
, this should be resolved now]