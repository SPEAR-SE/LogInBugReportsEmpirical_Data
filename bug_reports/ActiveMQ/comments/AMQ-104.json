[I've just created a test case to try reproduce your problem...

http://cvs.activemq.codehaus.org/viewrep/activemq/src/test/org/codehaus/activemq/usecases/CreateTemporaryQueueBeforeStartTest.java?r=HEAD

I've tried various things but couldn't get a NullPointerException. Can you think of anything different I can try to reproduce you're issue?

If not, I'll mark this issue as closed. Maybe its just been fixed in CVS since you experienced this?, Here's a sample program that causes the NullPointerException:

import javax.jms.*;
import org.codehaus.activemq.ActiveMQConnectionFactory;

/**
 * Example to reproduce jira AMQ104.
 * If the connection.start() call is moved above the createTemporaryQueue()
 * call then everything works, but like this it gives a NullPointerException.
 * (Basically because the session doesn't have a clientID yet).
 */
public class AMQ104
        {
        public static void main(String[] args) throws Exception
                {
                String url = "tcp://localhost:61616";
                ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(url);
                QueueConnection connection = factory.createQueueConnection();
                QueueSession session = connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE);
                QueueSender sender = session.createSender(null); //Unidentified
                Queue receiverQueue = session.createTemporaryQueue();
                QueueReceiver receiver = session.createReceiver(receiverQueue);
                connection.start();

                //...
                }
        }, Many thanks Peter - I've added your test case to CVS and fixed the issue also.]