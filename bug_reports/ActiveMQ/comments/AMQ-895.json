[I've tried adding a fix to SVN trunk. I wonder could you try it out for me to see if it fixes your issue? Basically I've patched the code to try reconnecting (by default a maximum of 10 times per message) if the send() fails before stopping the bridge.

Grab the latest code here...
http://incubator.apache.org/activemq/source.html

then build it...
http://incubator.apache.org/activemq/building.html, Thanks a lot, James. 

I'm not familiar with maven usage and I'm getting an error I don't know the cause of:

Downloading: http://ibiblio.org/maven2//directory-shared/ldap-common/0.9.1/ldap-
common-0.9.1.pom
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: directory-shared:ldap-common

Reason: Error getting POM for 'directory-shared:ldap-common' from the repository
: Error transferring file
  directory-shared:ldap-common:pom:0.9.1


Thanks.
, I've updated my local svn copy this morning, and have seen that the ldap-common version have been bumped up to 0.9.2. But now, I'm running into a different problem:

...
Downloading: http://people.apache.org/repo/m2-snapshot-repository/org/codehaus/p
lexus/plexus-archiver/1.0-alpha-7-SNAPSHOT/plexus-archiver-1.0-alpha-7-SNAPSHOT.
jar
[WARNING] Unable to get resource from repository apache.snapshots (http://people
.apache.org/repo/m2-snapshot-repository)
Downloading: http://people.apache.org/repo/m2-snapshot-repository/org/apache/mav
en/maven-archiver/2.2-SNAPSHOT/maven-archiver-2.2-20060826.152218-3.jar
11K downloaded
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to resolve artifact.

Missing:
----------
1) org.codehaus.plexus:plexus-archiver:jar:1.0-alpha-7-SNAPSHOT

  Try downloading the file manually from the project website.

  Then, install it using the command:
      mvn install:install-file -DgroupId=org.codehaus.plexus -DartifactId=plexus
-archiver \
          -Dversion=1.0-alpha-7-SNAPSHOT -Dpackaging=jar -Dfile=/path/to/file

  Path to dependency:
        1) org.apache.maven.plugins:maven-jar-plugin:maven-plugin:2.1-20060826.1
62339-6
        2) org.apache.maven:maven-archiver:jar:2.2-SNAPSHOT
        3) org.codehaus.plexus:plexus-archiver:jar:1.0-alpha-7-SNAPSHOT

----------
1 required artifact is missing.

for artifact:
  org.apache.maven.plugins:maven-jar-plugin:maven-plugin:2.1-20060826.162339-6

from the specified remote repositories:
  central (http://repo1.maven.org/maven2),
  apache.snapshots (http://people.apache.org/repo/m2-snapshot-repository),
  apache-snapshots (http://people.apache.org/maven-snapshot-repository)


I tried to follow the intructions into the error, downloaded a version of plexus-archiver and got this new error:

C:\src\activemq\trunk>mvn install:install-file -DgroupId=org.codehaus.plexus -Da
rtifactId=plexus-archiver -Dversion=1.0-alpha-7-SNAPSHOT -Dpackaging=jar -Dfile=
"C:\Documents and Settings\Administrador\Escritorio\plexus-archiver-1.0-alpha-7-
20060827.121315-6.jar"
[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Error building POM (may not be this project's POM).


Project ID: org.apache.activemq:activemq-core
POM Location: C:\src\activemq\trunk\activemq-core\pom.xml
Validation Messages:

    [0]  'dependencies.dependency.version' is missing for org.apache.activemq:activemq-jaas


Reason: Failed to validate POM


[INFO] ------------------------------------------------------------------------
[INFO] Trace
org.apache.maven.reactor.MavenExecutionException: Failed to validate POM
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:365)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:278)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)

        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.project.InvalidProjectModelException: Failed to vali
date POM
        at org.apache.maven.project.DefaultMavenProjectBuilder.processProjectLog
ic(DefaultMavenProjectBuilder.java:926)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildInternal(Def
aultMavenProjectBuilder.java:737)
        at org.apache.maven.project.DefaultMavenProjectBuilder.buildFromSourceFi
leInternal(DefaultMavenProjectBuilder.java:416)
        at org.apache.maven.project.DefaultMavenProjectBuilder.build(DefaultMave
nProjectBuilder.java:192)
        at org.apache.maven.DefaultMaven.getProject(DefaultMaven.java:515)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:447)
        at org.apache.maven.DefaultMaven.collectProjects(DefaultMaven.java:491)
        at org.apache.maven.DefaultMaven.getProjects(DefaultMaven.java:351)
        ... 11 more
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1 second
[INFO] Finished at: Mon Aug 28 09:17:31 CEST 2006
[INFO] Final Memory: 1M/3M
[INFO] ------------------------------------------------------------------------


At this stage, I don't know if this error is produced by a wrong setup of maven (I just followed the instructions in the ActiveMQ website (running maven 2.0.4)) or is something related with activemq itself. 

Any hint? 

Thanks., I've avoided the previous problem launching 'mvn install:install-file ...' outside of the activemq directory. This way I reached compiling activemq-core, but it failed with this error:

Downloading: http://repo1.maven.org/maven2/ant/ant/1.6.2/ant-1.6.2.jar
976K downloaded
[INFO] [xbean:mapping {execution: default}]
[INFO] ------------------------------------------------------------------------
[ERROR] FATAL ERROR
[INFO] ------------------------------------------------------------------------
[INFO] com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in fil
e:/C:/src/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/network
/jms/JmsConnector.java
[INFO] ------------------------------------------------------------------------
[INFO] Trace
com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/C:/s
rc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/Jm
sConnector.java
        at org.apache.xbean.maven.XBeanMojo.execute(XBeanMojo.java:185)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPlugi
nManager.java:412)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defa
ultLifecycleExecutor.java:534)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLi
fecycle(DefaultLifecycleExecutor.java:475)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Defau
ltLifecycleExecutor.java:454)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHan
dleFailures(DefaultLifecycleExecutor.java:306)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegmen
ts(DefaultLifecycleExecutor.java:273)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLi
fecycleExecutor.java:140)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)

        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in
 file:/C:/src/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/net
work/jms/JmsConnector.java
        at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:611)
        at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:719)
        at com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:592)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:30
0)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:31
6)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:31
2)
        at org.apache.xbean.spring.generator.QdoxMappingLoader.loadNamespaces(Qd
oxMappingLoader.java:96)
        at org.apache.xbean.maven.XBeanMojo.execute(XBeanMojo.java:153)
        ... 18 more
--- Nested Exception ---
com.thoughtworks.qdox.parser.ParseException: syntax error @[90,25] in file:/C:/s
rc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/network/jms/Jm
sConnector.java
        at com.thoughtworks.qdox.parser.impl.Parser.yyerror(Parser.java:611)
        at com.thoughtworks.qdox.parser.impl.Parser.yyparse(Parser.java:719)
        at com.thoughtworks.qdox.parser.impl.Parser.parse(Parser.java:592)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:30
0)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:31
6)
        at com.thoughtworks.qdox.JavaDocBuilder.addSource(JavaDocBuilder.java:31
2)
        at org.apache.xbean.spring.generator.QdoxMappingLoader.loadNamespaces(Qd
oxMappingLoader.java:96)
        at org.apache.xbean.maven.XBeanMojo.execute(XBeanMojo.java:153)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPlugi
nManager.java:412)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(Defa
ultLifecycleExecutor.java:534)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLi
fecycle(DefaultLifecycleExecutor.java:475)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(Defau
ltLifecycleExecutor.java:454)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHan
dleFailures(DefaultLifecycleExecutor.java:306)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegmen
ts(DefaultLifecycleExecutor.java:273)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLi
fecycleExecutor.java:140)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:322)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:115)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:256)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)

        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 5 minutes 10 seconds
[INFO] Finished at: Mon Aug 28 09:35:45 CEST 2006
[INFO] Final Memory: 15M/28M
[INFO] ------------------------------------------------------------------------

It seems that JmsConnector.java is one of the modified files for the fix we're on. Anyway, I don't know what that qdox.parser is expecting to find, the java code looks fine to me, and making a diff against the previous svn version of the file at that point is only finding some cosmetic changes.

Waiting for help. :-)
, Previous error was produced by bug: https://issues.apache.org/activemq/browse/AMQ-901

Checking todays svn trunk version finished with a successful compilation. However, reconnection seems not to work. 

The scenario is as follows:

===Scenario #1===
ActiveMQ broker with a bridged Sun MQ Broker.
* Start ActiveMQ
* Send a message to a bridged queue.
** The message gets into the queue, the jmx console shows:
     EnqueueCount: 1
     DequeueCount: 0
     QueueSize: 1
* Start SunMQ
* Send a new message to the bridged queue.
** Messages are not delivered to the SunMQ broker.

===Scenario #2===
ActiveMQ broker with a bridged SunMQ Broker.
* Start SunMQ
* Start ActiveMQ
* Send a message to a bridged queue.
** The message is bridged to SunMQ Broker queue. The jmx console shows:
    ConsumerCount: 1
     EnqueueCount: 1
     DequeueCount: 1
     QueueSize: 0
* Stop SunMQ
* Send a new message to the bridged queue.
** Message is not delivered to the SunMQ broker.
** The jmx console shows, for the queue:
    ConsumerCount: 1
    EnqueueCount: 2
    DequeueCount: 2
    QueueSize: 1
**The log shows:
[DEBUG][2006/08/30.12:40:57.849][ActiveMQ Transport Server: tcp://localhost:61635]Sending: WireFormatInfo { version=2, properties={TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
[DEBUG][2006/08/30.12:40:57.849][ActiveMQ Transport Server: tcp://localhost:61635]Sending: WireFormatInfo { version=2, properties={TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
[DEBUG][2006/08/30.12:40:57.887][ActiveMQ Transport: tcp:///127.0.0.1:47305]Received WireFormat: WireFormatInfo { version=2, properties={StackTraceEnabled=true, TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
[DEBUG][2006/08/30.12:40:57.888][ActiveMQ Transport: tcp:///127.0.0.1:47305]tcp:///127.0.0.1:47305 before negotiation: OpenWireFormat{version=1, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
[DEBUG][2006/08/30.12:40:57.889][ActiveMQ Transport: tcp:///127.0.0.1:47305]tcp:///127.0.0.1:47305 after negotiation: OpenWireFormat{version=2, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
[DEBUG][2006/08/30.12:40:57.887][ActiveMQ Transport: tcp:///127.0.0.1:47305]Received WireFormat: WireFormatInfo { version=2, properties={StackTraceEnabled=true, TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
[DEBUG][2006/08/30.12:40:57.888][ActiveMQ Transport: tcp:///127.0.0.1:47305]tcp:///127.0.0.1:47305 before negotiation: OpenWireFormat{version=1, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
[DEBUG][2006/08/30.12:40:57.889][ActiveMQ Transport: tcp:///127.0.0.1:47305]tcp:///127.0.0.1:47305 after negotiation: OpenWireFormat{version=2, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
[DEBUG][2006/08/30.12:40:58.479][ActiveMQ Transport: tcp:///127.0.0.1:47305]Adding consumer: ID:trabucco-47304-1156934456973-1:0:-1:1
[DEBUG][2006/08/30.12:40:58.479][ActiveMQ Transport: tcp:///127.0.0.1:47305]Adding consumer: ID:trabucco-47304-1156934456973-1:0:-1:1
[DEBUG][2006/08/30.12:40:58.976][ActiveMQ Transport: tcp:///127.0.0.1:47305]Removing consumer: ID:trabucco-47304-1156934456973-1:0:-1:1
[ERROR][2006/08/30.12:40:59.266][ActiveMQ Session Task]failed to forward message on attempt: 1 reason: javax.jms.IllegalStateException: [C4064]: Cannot perform operation, producer is closed. message: ActiveMQBytesMessage {commandId = 5, responseRequired = true, messageId = ID:trabucco-47304-1156934456973-1:0:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:trabucco-47304-1156934456973-1:0:1:1, destination = queue://SUNRECV, transactionId = null, expiration = 0, timestamp = 1156934458928, arrival = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activeio.packet.ByteSequence@1a5e68a, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 529, properties = null, readOnlyProperties = true, readOnlyBody = true} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = null }([C4064]: Cannot perform operation, producer is closed.)
[DEBUG][2006/08/30.12:40:58.976][ActiveMQ Transport: tcp:///127.0.0.1:47305]Removing consumer: ID:trabucco-47304-1156934456973-1:0:-1:1
[ERROR][2006/08/30.12:40:59.266][ActiveMQ Session Task]failed to forward message on attempt: 1 reason: javax.jms.IllegalStateException: [C4064]: Cannot perform operation, producer is closed. message: ActiveMQBytesMessage {commandId = 5, responseRequired = true, messageId = ID:trabucco-47304-1156934456973-1:0:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:trabucco-47304-1156934456973-1:0:1:1, destination = queue://SUNRECV, transactionId = null, expiration = 0, timestamp = 1156934458928, arrival = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activeio.packet.ByteSequence@1a5e68a, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 529, properties = null, readOnlyProperties = true, readOnlyBody = true} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = null }([C4064]: Cannot perform operation, producer is closed.)
*Start SunMQ again
** Nothing happens in activemq (as expected)
*Send a new message to the bridged queue.
** Message is not delivered to the SunMQ Broker.
**The jmx console shows, for the queue:
   ConsumerCount: 1
   EnqueueCount: 3
   DequeueCount: 3
   QueueSize: 2
**The log shows this:
[DEBUG][2006/08/30.12:43:19.803][ActiveMQ Transport Server: tcp://localhost:61635]Sending: WireFormatInfo { version=2, properties={TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
[DEBUG][2006/08/30.12:43:19.805][ActiveMQ Transport: tcp:///127.0.0.1:47315]Received WireFormat: WireFormatInfo { version=2, properties={StackTraceEnabled=true, TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
[DEBUG][2006/08/30.12:43:19.806][ActiveMQ Transport: tcp:///127.0.0.1:47315]tcp:///127.0.0.1:47315 before negotiation: OpenWireFormat{version=1, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
[DEBUG][2006/08/30.12:43:19.807][ActiveMQ Transport: tcp:///127.0.0.1:47315]tcp:///127.0.0.1:47315 after negotiation: OpenWireFormat{version=2, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
[DEBUG][2006/08/30.12:43:19.803][ActiveMQ Transport Server: tcp://localhost:61635]Sending: WireFormatInfo { version=2, properties={TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, StackTraceEnabled=true, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
[DEBUG][2006/08/30.12:43:19.805][ActiveMQ Transport: tcp:///127.0.0.1:47315]Received WireFormat: WireFormatInfo { version=2, properties={StackTraceEnabled=true, TightEncodingEnabled=true, TcpNoDelayEnabled=true, SizePrefixDisabled=false, MaxInactivityDuration=30000, CacheEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
[DEBUG][2006/08/30.12:43:19.806][ActiveMQ Transport: tcp:///127.0.0.1:47315]tcp:///127.0.0.1:47315 before negotiation: OpenWireFormat{version=1, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
[DEBUG][2006/08/30.12:43:19.807][ActiveMQ Transport: tcp:///127.0.0.1:47315]tcp:///127.0.0.1:47315 after negotiation: OpenWireFormat{version=2, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=true, sizePrefixDisabled=false}
[DEBUG][2006/08/30.12:43:20.433][ActiveMQ Transport: tcp:///127.0.0.1:47315]Adding consumer: ID:trabucco-47314-1156934598004-1:0:-1:1
[DEBUG][2006/08/30.12:43:20.433][ActiveMQ Transport: tcp:///127.0.0.1:47315]Adding consumer: ID:trabucco-47314-1156934598004-1:0:-1:1
[ERROR][2006/08/30.12:43:20.921][ActiveMQ Session Task]failed to forward message on attempt: 1 reason: javax.jms.IllegalStateException: [C4064]: Cannot perform operation, producer is closed. message: ActiveMQBytesMessage {commandId = 5, responseRequired = true, messageId = ID:trabucco-47314-1156934598004-1:0:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:trabucco-47314-1156934598004-1:0:1:1, destination = queue://SUNRECV, transactionId = null, expiration = 0, timestamp = 1156934600848, arrival = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activeio.packet.ByteSequence@1e29b99, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 529, properties = null, readOnlyProperties = true, readOnlyBody = true} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = null }([C4064]: Cannot perform operation, producer is closed.)
[DEBUG][2006/08/30.12:43:20.933][ActiveMQ Transport: tcp:///127.0.0.1:47315]Removing consumer: ID:trabucco-47314-1156934598004-1:0:-1:1
[ERROR][2006/08/30.12:43:20.921][ActiveMQ Session Task]failed to forward message on attempt: 1 reason: javax.jms.IllegalStateException: [C4064]: Cannot perform operation, producer is closed. message: ActiveMQBytesMessage {commandId = 5, responseRequired = true, messageId = ID:trabucco-47314-1156934598004-1:0:1:1:1, originalDestination = null, originalTransactionId = null, producerId = ID:trabucco-47314-1156934598004-1:0:1:1, destination = queue://SUNRECV, transactionId = null, expiration = 0, timestamp = 1156934600848, arrival = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activeio.packet.ByteSequence@1e29b99, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 529, properties = null, readOnlyProperties = true, readOnlyBody = true} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = null }([C4064]: Cannot perform operation, producer is closed.)
[DEBUG][2006/08/30.12:43:20.933][ActiveMQ Transport: tcp:///127.0.0.1:47315]Removing consumer: ID:trabucco-47314-1156934598004-1:0:-1:1

Furthermore, after restarting the activeMQ broker with non delivered messages in the bridged queue, can lead to lose those messages.

Regards, This patch fixes what appears to be a bug in the origional fix. I have not yet been able to test it, as I have not yet setup a system to reproduce the problem, but can someone try it out?

Thanks., I have come across this issue in an attempt to use the JMS to JMS bridge in version 4.1.1.

I am trying to bridge ActiveMQ to Websphere MQ and I am running the bridge in its own process and everything connects and works properly.

The remote Websphere MQ broker is being shutdown every night for backups and when this occurs the bridge does not see the disconnect of the remote broker.

I performed a netstat of the socket connections to see if the bridge was still attempting a connection and found that the socket connections to the remote broker are in a CLOSE_WAIT state.

If you have any ideas or wish to try a test I am willing to do what every is needed to resolve this issue.

Thanks,

William, I'm currently trying out a similar issue bridging ActiveMQ to Sun CAPS, but is struggling.

Could you share some light and tell me how you hav configured the "#REMOTE" element in the XML-file. 
Might just be helpful!

br
-Alf, It was a little tricked, perhaps caused by my ignorance, but I didn't find a suitable way to directly create a bean for the sunmq broker, as broker hostname and port are configured using a common method: setProperty. 
So, I had to write a simple wrapper to adapt it to have standard setters. like this:

package es.tid.planb.spci.sunmq;

import com.sun.messaging.ConnectionFactory;
import com.sun.messaging.ConnectionConfiguration;
import javax.jms.JMSException;

public class ConnectionFactoryBean extends com.sun.messaging.QueueConnectionFactory
{
    public ConnectionFactoryBean()
    {
        super();
    }

    public void setBrokerHostName( String hostname )
        throws JMSException
    {
        super.setProperty( ConnectionConfiguration.imqBrokerHostName,
                           hostname );
    }

    public void setBrokerHostPort( String port )
        throws JMSException
    {
        super.setProperty( ConnectionConfiguration.imqBrokerHostPort,
                           port );
    }


    public String getBrokerHostName()
        throws JMSException
    {
        return super.getProperty( ConnectionConfiguration.imqBrokerHostName );
    }

    public String getBrokerHostPort()
        throws JMSException
    {
        return super.getProperty( ConnectionConfiguration.imqBrokerHostPort );
    }
}



And then, use it in a bean like this:

  <bean id="REMOTE"
        class="es.tid.planb.spci.sunmq.ConnectionFactoryBean">
    <property name="brokerHostName" value="localhost"/>
    <property name="brokerHostPort" value="7676"/>
  </bean>


Regards.

, Alf,

Here is the bridge settings that I am using for Websphere MQ.

        <jmsQueueConnector name="bridge-test-request"                                               
                                   outboundQueueConnectionFactory="#remoteFactory"                                                  
                                                   localPassword="test2"
                                   localQueueConnectionFactory="#localFactory"
                                                   localUsername="test2">
                <inboundQueueBridges>
                        <inboundQueueBridge
                                  localQueueName="test.request"
                          inboundQueueName="queue:///SIT.TEST.REQ" />
                </inboundQueueBridges>
        </jmsQueueConnector>

        <jmsQueueConnector name="bridge-test-response"
                                   outboundQueueConnectionFactory="#remoteFactory"
                                                   localPassword="test4"
                                   localQueueConnectionFactory="#localFactory"
                                                   localUsername="test4">
                <outboundQueueBridges>
                        <outboundQueueBridge
                                  localQueueName="test.response"
                          outboundQueueName="queue:///SIT.TEST.RSP" />
                </outboundQueueBridges>
        </jmsQueueConnector>


<bean id="remoteFactory"
  class="com.ibm.mq.jms.MQQueueConnectionFactory">
  <property name="transportType" value="1" />
  <property name="hostName" value="127.0.0.1" />
  <property name="port" value="9876" />
  <property name="queueManager" value="QMUAT" />
  <property name="channel" value="SIT.UAT.SVR" />
</bean>

I hope this helps.

Thx,
William, Thanks, that really helped me a lot!

I was now able to create a simple wrapper similar to yours and managed finally to make i all work.
Am wrapping around the class com.stc.jms.client.STCQueueConnectionFactory (from JCAPS), and this must have hostname & port number in the constructor. Handled this by hard-coding these values in the wrapper so far, but would like to fetch these from properties as well, but don't  know how...?
Like this:

public class connectionFactoryWrapper extends com.stc.jms.client.STCQueueConnectionFactory {

    public connectionFactoryWrapper() throws JMSException
    { 
        super("localhost", 18007); 
    }
....
    


Then the bridging works only one way, namely from AMQ to JCAPS. 
The other way AMQ gets a ClassCastException upon receiving the message from the JCAPS queue:

ERROR DestinationBridge              - failed to forward message on attempt: 1 reason: java.lang.ClassCastException: org.apache.activemq.command.ActiveMQQueue message: com.stc.jms.message.STCTextMessage@1e22632 
java.lang.ClassCastException: org.apache.activemq.command.ActiveMQQueue
        at com.stc.jms.message.STCMessage.setJMSDestination(STCMessage.java:611)
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1505)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:465)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:415)
        at org.apache.activemq.ActiveMQQueueSender.send(ActiveMQQueueSender.java:116)
        at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:87)
        at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:134)
        at com.stc.jms.client.SessionImpl.processAsyncDataAvailable(SessionImpl.java:1659)
        at com.stc.jms.client.SessionImpl.processAsync(SessionImpl.java:1748)
        at com.stc.jms.client.SessionImpl.asyncEnter(SessionImpl.java:1776)
        at com.stc.jms.client.SessionImpl.access$500(SessionImpl.java:56)
        at com.stc.jms.client.SessionImpl$3.run(SessionImpl.java:1899)
        at com.stc.jms.client.SessionImpl$2.run(SessionImpl.java:1807)
        at java.lang.Thread.run(Thread.java:595)


The problem seems to be the STCTextMessage class, is it possible to handle this in some way?


Regards
-Alf, I think you don't need to wrap  STCQueueConnectionFactory, as it provides a constructor with the required arguments, and spring is able to handle that directly. That is not the case for imq, that doesn't have such a constructor neither the required setters. It should be enough for you to use:

<bean id="REMOTE"
class="com.stc.jms.client.STCQueueConnectionFactory">
  <constructor-arg><value>localhost</value></constructor-arg>
  <constructor-arg><value>18007</value></constructor-arg>
</bean>

About the error you get, it seems you're trying to handle directly a STC message implementation using AMQ. That's not the right way. The bridge should automatically convert incoming messages to the AMQ native types. You shouldn't need to use directly the STC nor AMQ Message classes, just ask for java.jmx.Message or javax.jms.TextMessage to your consumers. The AMQ broker will redirect incoming messages from the bridged foreign broker to your program, and they will internally be AMQ* types, but you shouln't need to be aware of that.
, Thanks Manuel!

I now got rid of the wrapper, the <constructor-arg> stuff worked out just fine!

So to the ClassCastException, it really comes from the ActiveMQ program itself, the moment I try to send a message into the queue on the JCAPS broker queue that is defined to be inboundQueueName, and the bridge tries to fetch it into AMQ.
The other way around messages (sendt to the outboundQueueName on AMQ) are bridged correctly over to JCAPS.

The consumer/provider programs are using javax.jms.TextMessage as contents. 
I have also tried to use the JMXConsole connected to AMQ for sending simple test messages.

You says that the bridge should automatically convert incoming messages to native AMQ - seems to me that that's where the error occurs ?

Br
Alf (with steep learning curve regarding ActiveMQ...)
, Be careful with your jndi properties. Perhaps you're trying to connect directly to the JCAPS broker, and that's a mistake. AMQ should make that job for you: you only need to send the message to the local AMQ queue you're mapping to the remote bridge (and hence, use the proper jndi.properties to do so), and the broker will automatically forward the message to the foreign broker.

You can even try it using the AMQ JMX console, and try to send a message to the mapped queue, if you want to test it easily.

Hope it works.



, Thanks Manuel for your patient replies!

I think I've been a bit unclear about this and how the problems I discover occurs. I'll try to clearify:
I'm trying to bridge from AMQ to JCAPS, one queue as outbound, and one queue to be bridged the opposite direction, from JCAPS to AMQ (setting it up as AMQ inbound queue). Here is a snippet from the activemq.xml-file:

<jmsBridgeConnectors>
    <jmsQueueConnector
      outboundQueueConnectionFactory="#remoteFactory">
      <inboundQueueBridges>
        <inboundQueueBridge
          inboundQueueName="quBridgeFromJCAPS" />
      </inboundQueueBridges>
      <outboundQueueBridges>
        <outboundQueueBridge
          outboundQueueName="quBridgeToJCAPS" />
      </outboundQueueBridges>
    </jmsQueueConnector>
  </jmsBridgeConnectors>
...
  <bean id="remoteFactory"
     class="com.stc.jms.client.STCQueueConnectionFactory">
    <constructor-arg value="localhost"/>
    <constructor-arg value="18007"/>
  </bean>
 

Now for tesing both the AMQ broker and the JCAPS broker is running on localhost.

I've made simple "clients" to send messages to the local brokers, one for AMQ and one for JCAPS. They both send jmx.jms.TextMessages. Here is a snippet of the clients:

    /**
     * Put a message on a STC queue
     * @author alfeh Mar 9, 2007
     */
    private void sendMsg() throws Exception {
        QueueConnectionFactory qcf = new STCQueueConnectionFactory("localhost", 18007);
        conn = qcf.createQueueConnection();
        conn.start();
        QueueSession sess = conn.createQueueSession(true, Session.AUTO_ACKNOWLEDGE);
        Queue q = sess.createQueue("quTest1");
        QueueSender sender = sess.createSender(q);
        TextMessage msg = sess.createTextMessage("Hello to the world!!!");
        msg.getText();
        sender.send(msg);
        sess.commit();
        System.out.println("Sendt message '" + msg.getText() + "'");
        sess.close();
        conn.close();
    }


    /**
     * Put a message on a AMQ queue
     * @author alfeh Mar 9, 2007
     */
    private void sendMsg() throws Exception {
        conn = ActiveMQConnection.makeConnection("tcp://localhost:62616");
        conn.start();
        QueueSession sess = conn.createQueueSession(true, Session.AUTO_ACKNOWLEDGE);
        Queue q = sess.createQueue("quBridgeToJCAPS");
        QueueSender sender = sess.createSender(q);
        TextMessage msg = sess.createTextMessage("Hello to the world!!!");
        msg.getText();
        sender.send(msg);
        sess.commit();
        System.out.println("Sendt message '" + msg.getText() + "'");
        sess.close();
        conn.close();
    }


Pretty simple and stright-forward I think, and seems to be working OK regarding posting the messages to the "local" brokers.
In addittion, I can send messages to the AMQ broker via the JMXConsole, and the JCAPS broker has its own WEB GUI (Enterprise Manager), and it can be used for sending and reading messages on that broker.

When I fire it all up (first the JCAPS broker then the AMQ broker) it all seems OK.
The AMQ's inbound bridge queue (quBridgeFromJCAPS) is created inside the JCAPS broker upon first startup of AMQ.

The problem occurs after successfully posting a message onto that queue on the JCAPS broker.
AMQ seems to try to bridge it into the AMQ's quBridgeFromJCAPS, causing the exception to be thrown from inside the AMQ code. No message arrives to the AMQ queue, but seems to be thrown back to the JCAPS queue (which ends up with two copies of that same message). The exception is shown in a previous post, and is thrown from line 1505 in class ActiveMQSession.
Here is a snippet of that code:

    /**
     * Sends the message for dispatch by the broker.
     * 
     * @param producer -
     *            message producer.
     * @param destination -
     *            message destination.
     * @param message -
     *            message to be sent.
     * @param deliveryMode -
     *            JMS messsage delivery mode.
     * @param priority -
     *            message priority.
     * @param timeToLive -
     *            message expiration.
     * @throws JMSException
     */
    protected void send(ActiveMQMessageProducer producer, ActiveMQDestination destination, Message message, int deliveryMode,
            int priority, long timeToLive) throws JMSException {
        checkClosed();

        if( destination.isTemporary() && connection.isDeleted(destination) ) {
            throw new JMSException("Cannot publish to a deleted Destination: "+destination);
        }

        // tell the Broker we are about to start a new transaction
        doStartTransaction();
        TransactionId txid = transactionContext.getTransactionId();
        
        message.setJMSDestination(destination); // (###### This is line 1505, here is the exception thrown! ###)
        message.setJMSDeliveryMode(deliveryMode);        
        long expiration = 0L;

        if (!producer.getDisableMessageTimestamp()) {
            long timeStamp = System.currentTimeMillis();
            message.setJMSTimestamp(timeStamp);
            if (timeToLive > 0) {
                expiration = timeToLive + timeStamp;
            }
        }
.....




If I on the other hand try to send a message into the AMQ broker's outbound queue (quBridgeToJCAPS) (e.g with the JMXConsole) it imidiately shows up in the JCAPS broker (queue with the same name) and the contents seems OK.

See ? 50% success... would like to reach 100%...!

Any ideas?

Br
-Alf
, It looks correct to me, both the code and the experiment.

I'm afraid I don't know the reason, but I'm not activemq skilled. 

Looking at the exception stack, it seems that what activemq has is a JCAPS client running, listening for messages on that queue. When one of those messages arrive, it is redelivered to the activemq queue, and it seems that when it tries to do so, the message (of type com.stc.jms.message.STCTextMessage) does not accept to be set a destination of type org.apache.activemq.command.ActiveMQQueue in message.setJMSDestination(destination);

I don't know if this should work, (i.e: a message should accept any  javax.jms.Destination regardless of its implementation) or perhaps the problem is that the JCAPS code is not aware of org.apache.activemq.command.ActiveMQQueue as a javax.jms.Destination implementation (some classpath issue?)

Perhaps asking in the mail list ?

Best regards
, Seems that you're all right Manuel.

It is not possible to read a message from JCAPS (type com.stc.jms.message.STCTextMessage) and send it to a AMQ queue. 
The opposite direction is no problem.

I've tried to do the same outside the AMQ bridge (in a simple Java application) (reading from an JCAPS queue and posting the same message to a AMQ queue), and the same exception occurs.

Might be some non-JMS-standard behaviour of the JCAPS messages?

I've been able to kind of "go around" the problem in my Java app, by creating a new (native AMQ) message and copy all the values & settings from the JCAPS message. 
But that is not the preferred way to go...

Thanks again for help & advices!



BR
-Alf, I have just tested this patch on my ActiveMQ-5.0-SNAPSHOT, rev 554694 broker bridged to SonicMQ 7.5 and it does NOT work.

It does try to reconnect 10 times, but they all fail.

I am working on it a bit more., the attached patch has a slight error

while (maximumRetries > 0 && attempt >= maximumRetries);

should be

while (maximumRetries > 0 && attempt <= maximumRetries);

correct?  

Even with this change, you can see the number of retries increment, but the producer does not begin sending.  I have also tried the patch in the comments of AMQ-1220 and this actually does reconnect the bridge (no more connection failures) but the producer fails to send the messages which are enqueued during the time the foreign connection is down.  

The exception in 4.1.1 is:

javax.jms.IllegalStateException: The producer is closed
        at org.apache.activemq.ActiveMQMessageProducer.checkClosed(ActiveMQMessa
geProducer.java:333)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProdu
cer.java:445)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProdu
cer.java:415)
        at org.apache.activemq.ActiveMQQueueSender.send(ActiveMQQueueSender.java
:116)
        at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.j
ava:87)
        at org.apache.activemq.network.jms.DestinationBridge.onMessage(Destinati
onBridge.java:134)
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageC
onsumer.java:854)
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionE
xecutor.java:99)
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionEx
ecutor.java:166)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskR
unner.java:101)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTa
skRunner.java:25)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRun
ner.java:39)

My foreign queue is using https if that makes a difference., This problem was solved without code changes by using the failover transport on the remote queue factory in 4.1.1, if anyone is looking for a workaround., See Patch at:
https://issues.apache.org/activemq/browse/AMQ-2455

I can reconnect to a Oracle AQ Session now., https://issues.apache.org/activemq/browse/AMQ-2455]