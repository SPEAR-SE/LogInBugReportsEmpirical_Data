[Reason for recovery working with ActiveMQ pool might be a different usage than implemented in Aries TX JMS



e.g.
<bean id="internalConnectionFactory" 
        class="org.apache.activemq.ActiveMQXAConnectionFactory">
           <argument value="tcp://localhost:61616" />
           <property name="userName" value="admin" />
           <property name="password" value="admin" />
</bean>

<bean id="connectionFactory" 
        class="org.apache.activemq.jms.pool.JcaPooledConnectionFactory"
                 init-method="start" destroy-method="stop">
           <property name="connectionFactory" ref="internalConnectionFactory"/>
           <property name="transactionManager" ref="transactionManager"/>
           <property name="name" value="activemq" />
</bean>

<bean id="resourceManager" class="org.apache.activemq.jms.pool.GenericResourceManager" 
                 init-method="recoverResource">
           <property name="connectionFactory" ref="internalConnectionFactory"/>
           <property name="transactionManager" ref="transactionManager"/>
           <property name="resourceName" value="activemq" />
           <property name="userName" value="admin" />
           <property name="password" value="admin" />
</bean>, You're right.
Though the problem is that XAConnectionFactory does not inherit from ConnectionFactory, so for JMS implementations that have separate implementations for both, the code is unusable., A few improvements to activemq-jms-pool at
  https://github.com/gnodet/activemq/commits/fix-jms-pool, I've applied those updates to trunk along with some updates to some tests in activemq-pool that broker as a result. , Marking this as resolved since no further feedback received since the patches were applied. , This change breaks backward compatibility by changing the signature of the public method.  Here is one example impact:

{noformat}
Error during dispatch. (java.lang.NoSuchMethodError: org.apache.activemq.jms.pool.PooledConnectionFactory.setConnectionFactory(Ljavax/jms/ConnectionFactory;)V)
java.lang.NoSuchMethodError: org.apache.activemq.jms.pool.PooledConnectionFactory.setConnectionFactory(Ljavax/jms/ConnectionFactory;)V
{noformat}

It seems to me that rather than changing the appropriate method signature taking a {{ConnectionFactory}} to accepting any {{Object}} because some XAConnectionFactory implementations do not properly implement {{ConnectionFactory}} is a bad way to go - introducing complexity where it is unneeded.  It would be far simpler to wrap those XAConnectionFactory with thin ConnectionFactory implementations.

Anyway, the damage is done here - if we change the signature back, another non-backward-compatible change will be introduced.

Please consider all the impacts of these changes, especially since we do not have plans to bump the ActiveMQ major version number.]