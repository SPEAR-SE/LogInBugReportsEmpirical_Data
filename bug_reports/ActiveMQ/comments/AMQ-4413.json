[Compilation only requires activemq-core-5.7.0.jar or any corresponding dependency of upper versions (e.g. activemq-all-5.9-20130327.044852-30.jar from apache-activemq-5.9-SNAPSHOT.zip)., Won't have time to get into this one right now, but updated the test case to be a unit test and ran it to make sure it failed (and it does). , In the supplied test case the message loss is expect since persistence is not enabled and the option to keep durable subs active is not enabled.  If you enable keepDurableSubsActive it would work as expected.  What's the real configuration you use when you encounter this problem.  , keepDurableSubsActive is enabled by default and it didn't changed in the test case.  Where/how do you see it's disabled?  Anyway, you'll see it won't help even with an explicit enablement of that option with the following line of code:

brokerService.setKeepDurableSubsActive(true);, You're right my bad, so many broker options to remember.  , Further refined the test case so it actually fails if the expectations aren't met.  Also removed hard coded port 61616, Updated test to make message seq numbers make the MessageId sequence for easier debug.  Turned off advisory messages to make logs less verbose., I think you can work around this by setting a lower prefetch limit, seems to be related and test passes always for me with a value of one. , Have you ever reproduced this with persistence enabled using this test case?, >> Have you ever reproduced this with persistence enabled using this test case?
Yes. I observed the bug with persistence enabled first, then tried & reproduced with persistence disabled (which uses memory-based persistent adapter) which means the trouble is unrelated to any specific message store implementation., If you can provide a test that reproduces with a store it would be more useful., Unfortunately it's not possible because the persistence adapter/store I tested with is a custom one outside the AMQ code base. FYI, it's Apache BookKeeper-based and can't be shared outside my company, yet.  The reason I tested with persistence option disabled is because of this reason: I needed to verify it's persistence-store independent problem., Ok.  I know why its happening and we are trying out a fix.  Have to ensure we don't break any other use cases though. , Fixed on trunk, to workaround the issue you can set keepDurableSubsActive to false and you shouldn't see this.  , Thanks for the fix.  Any impact to the persistence message consumption of durable subscribers by turning keepDurableSubsActive option off?, @Jaewoong - a reconnect does a little bit more work when keepDurableSubsActive=false but durability of messages is not effected. The messages were not actually lost, they were not dispatched. , Can anyone ensure whether the issue also affects 5.5.0?]