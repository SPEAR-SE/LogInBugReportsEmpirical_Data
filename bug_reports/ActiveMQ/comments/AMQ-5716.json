[Some work in this area already for related issue., This seems valid to me after review.  It'd be nice to have [~gtully] take a look as there could be unforeseen consequences.  , Hi Timothy, thanks for the related issue, after brief review it seems to me that related issue AMQ-3314 might have not been fixed correctly.
I have another proposal to fix this issue which would be also a valid fix for AMQ-3314:
{noformat}
    @Override
    public synchronized boolean isFull() {
        return super.isFull() && systemUsage != null && systemUsage.getTempUsage().isFull();  // removed checking "!isDiskListEmpty()"
    }
{noformat}
The condition would express that memory and temp storage are both full, so there is no space to add the message.
The additional "!isDiskListEmpty()" seems to me as redundant check which breaks the things in case that we don't have space in memory or temp storage and disk list has not been initialized for the current FilePendingMessageCursor., I was thinking more along the lines of this:

{noformat}
    @Override
    public synchronized boolean isFull() {
        return super.isFull() && (systemUsage == null || systemUsage.getTempUsage().isFull();
    }

{noformat}

Given that if there is no systemUsage then super.isFull() should decide.  , I agree with your proposal, it is better for sure.

Is there any progress with review or resolving the issue?
I would appreciate it very much. Fix would be motivation to upgrade to newer version.]