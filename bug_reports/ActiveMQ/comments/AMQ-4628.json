[svn commit 1502206 contains the improvement related to XID column. The column was blob and not indexed, and most of the queries for non-xa case uses "AND XID IS NULL" in the queries, which kills the performance on large tables.

The change was introduced to treat XID as String, and put it into indexed varchar column.

In my tests it made the broker work properly with close to 2 million messages.

The testing scenario:

* Download the latest snapshot with the fix (or build locally) 

* I introduced a bit optimized configuration that turns off every non-essential feature, like expiry processing, database cleanup and priority messages. So start a broker with

{code}bin/activemq console xbean:conf/activemq-jdbc-performance.xml{code}

* Send large number of messages with

{code}ant producer -Durl=tcp://localhost:61616 -DparallelThreads=10 -Dtransacted=true -Dsubject=BenchmarkQueue -Dmax=200000 -Ddurable=true -Dbatch=1000{code}

Note that I added batch to work with producer tool, so we can send faster

* Restart the broker to check broker startup time

* Consumer messages with something like

{code}ant consumer -Durl=tcp://localhost:61616 -DparallelThreads=10 -Dtransacted=true -Dsubject=BenchmarkQueue -Dmax=80000{code}

I tested with local MySQL and it seems to work fine. It'd be good if people could test it with other RDBMS they use (Oracle, Postgres, etc.), to check if there's any other bottlenecks., One thing though is that this schema is not compatible with the previous version if you're using XA transactions. You'll need to:

* Make sure you don't have an inflight transactions
* Stop the broker
* Alter the tables, by executing something like

{code}ALTER TABLE ACTIVEMQ_MSGS ALTER COLUMN XID VARCHAR(250)
CREATE INDEX ACTIVEMQ_MSGS_XIDX ON ACTIVEMQ_MSGS (XID)
ALTER TABLE ACTIVEMQ_ACKS ALTER COLUMN XID VARCHAR(250)
CREATE INDEX ACTIVEMQ_ACKS_XIDX ON ACTIVEMQ_ACKS (XID){code}

* Start the broker

This isn't needed if XA transactions are not used.
We need to put this into migration guide for 5.9, Dejan, any more work to do? Or can we move this to 5.10 or should it be included in 5.9?, That's it for now. We should just add those schema upgrade to the release notes]