[Attached test case to reproduce the problem. It can be reproduced with KahaDB or LevelDB., Attached new version, where the local consumer is disconnected and reconnected to exclude prefetch issues., Duplicates where not being checked in duplex connections.
There is an additional property on NetworkConnector that needs to be enabled - checkDuplicateMessagesOnDuplex (default is false).

Thank you Ron for investigating this!, It also seems to help to enable "supportFailOver" in the broker.

I don't know about the individual advantages or disadvantages for each solution. Can you elaborate? Is there a reason not to activate supportFailOver or checkDuplicateMessagesOnDuplex permanently/by default?
, This also seemst to be a duplicate of https://issues.apache.org/jira/browse/AMQ-3473.
Unfortunately setting auditNetworkProducers = true does not suppress the extra message in the store., After looking at your change, I wondered if the problem also occurs without a duplex bridge and reran my test. It does happen without duplex. I also may have misunderstood your code, but I was wondering how the remote side could know which messages need to be resent, as sometimes messages could get lost and other times just the response/ack gets lost (like in my case)., @Ron supportFailOver is really old code that has no tests and I am not aware of any user of it. It duplicates work done elsewhere. So don't go down that road. see: https://issues.apache.org/jira/browse/AMQ-4929, There's another variable to set on the TransportConnector - auditNetworkProducers (disabled by default) - for regular networks. Messages are always available to be resent unless they've been acknowledged as being consumed, so its really only duplicate messages that we need to worry about., So if I have no duplex connection I need to activate auditNetworkProducer on the receiving TransportConnector (in my case "LOCAL") and if I have a duplex connection I need to activate checkDuplicateMessagesOnDuplex on the sending NetworkConnector (in my case "REMOTE").
But when messages are sent from REMOTE to LOCAL the DemandForwardingBridge on the LOCAL side will actually check for the duplicate, even if it is configured only on the REMOTE side.
As soon as 5.10 is released I will change my setup accordingly. For now I can use supportFailOver as a workaround.

Thank you very much!

Other people with this problem may appreciate a hint to use auditNetworkProducers or checkDuplicateMessagesOnDuplex whenever they encounter the situation that there is a duplicate detected by the cursor.
]