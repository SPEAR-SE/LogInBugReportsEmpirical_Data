[[~tabish121] and [~gtully],

My first thought here is to simply update the getDestinations() method in KahaDBStore to include empty topics in the returned set.  The other PersistenceAdapter implementations don't seem to filter out empty topics so that would keep things consistent.  Do you think there would be any unintended side effects of doing that?, [~christopher.l.shannon] - I don't think so. that seems like a sensible fix. your additional test and the existing tests will confirm., Ok, thanks Gary.  I will create a patch and test and upload the PR later today if the tests all seem to pass., GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/130

    https://issues.apache.org/jira/browse/AMQ-5875

    Resolves an issue when using mKahaDB that caused a MessageStore
    being used by more than one destination to be deleted even though
    there was still at least 1 other destination using the store.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5875

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/130.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #130
    
----
commit 73d1bcd7ac4fe7bd94da9fe178f6f17d30bc41f2
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-07-08T13:02:43Z

    https://issues.apache.org/jira/browse/AMQ-5875
    
    Resolves an issue when using mKahaDB that caused a MessageStore
    being used by more than one destination to be deleted even though
    there was still at least 1 other destination using the store.

----
, Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/130
, Patch applied, thanks!, there is logic in a network bridge to recreate durable demand eagerly. It uses the getDestinations list to figure of there was demand in the past. So a topic with some durable subscribers.
It appears that it is now re-creating demand for topics that have no durables. Something needs to gate that, or the other use case needs a different fix.

Test that shows the problem in a not so obvious way:
org.apache.activemq.usecases.ThreeBrokerVirtualTopicNetworkTest#testNetworkVirtualTopic


This needs a little revisit - but it turns out there were some negative consequences :-), [~gtully],

How do you feel about returning the getDestinations() method behavior to how it was previously but adding another method to the PersistenceAdapter called something like getAllDestinations() that would return empty destinations as well?  Or do the opposite and add a method called getDestinations(Filter) and then a filter could be used for the case of a network bridge to filter out empty topics., I did a more thorough search and in AbstractRegion, getInactiveDestinations relies on destinationFactory.getDestinations().  So I guess that could be affected by this too., I think I have a good way to fix this, I'm working on a PR now and I will push it up shortly., GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/131

    https://issues.apache.org/jira/browse/AMQ-5875

    Fixing a regression that caused a network bridge to recreate durable
    demand improperly.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5875-regression

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/131.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #131
    
----
commit 3b704209ee391d0505889d35831108650035d660
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-07-10T13:55:19Z

    https://issues.apache.org/jira/browse/AMQ-5875
    
    Fixing a regression that caused a network bridge to recreate durable
    demand improperly.

----
, thanks for the fast patch.
I am not sure we need another method because I think there should be enough there with org.apache.activemq.broker.Broker#getDurableDestinations
org.apache.activemq.broker.Broker#getDestinations
and:
org.apache.activemq.broker.region.DestinationFactory#getAllDurableSubscriptions

The difficult bit is tying down the usage to the correct method and ensuring consistency with the impls across the stores.

the network bridge only wants to create demand when org.apache.activemq.broker.region.DestinationFactory#getAllDurableSubscriptions is non empty, I think maybe it needs to use that method and maybe then the isEmpty check is negated and that method in kahadb can be more in line with others.
I need to research where that isEmpty check came from.
, I think the root cause maybe is https://issues.apache.org/jira/browse/AMQ-2720 changing the impl of getDestinations, I think org.apache.activemq.network.DurableConduitBridge#setupStaticDestinations needs to be reworked to query the topic region, I think it should be using its clientid and subname also in the match. , So how do you feel about this fix:

We could pass the destinationFactory to the NetworkConnector object and then change the configureBridge method to check durableSubscriptions.

Then the loop iterating over the durableDestinations in configureBridge around line 140 or so could be changed from:
 {{if(d.isTopic())}} to {{if(d.isTopic() && destinationFactory.getAllDurableSubscriptions((ActiveMQTopic)d).length > 0)}}, [~gtully],

I think your proposed fix of changing DurableConduitBridge makes more sense than mine.  I will create a new PR with the fix and submit it shortly.  I will include the expanded unit tests that I had in my other PR., Github user cshannon closed the pull request at:

    https://github.com/apache/activemq/pull/131
, GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/132

    https://issues.apache.org/jira/browse/AMQ-5875

    Fixing a regression that caused a network bridge to recreate durable
    demand improperly.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5875-regression-2

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/132.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #132
    
----
commit 6635f32f095cd5b367a5e1176b0cc8b2c8b3b346
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-07-10T16:43:26Z

    https://issues.apache.org/jira/browse/AMQ-5875
    
    Fixing a regression that caused a network bridge to recreate durable
    demand improperly.

----
, [~gtully],

See what you think of my PR.  org.apache.activemq.usecases.ThreeBrokerVirtualTopicNetworkTest#testNetworkVirtualTopic is now fixed and the PR smoke tests all pass.  A full run through CI would confirm that nothing else broke., Hmm, locally the smoke test profile ran and passed but on CI it failed.  I just ran it again and it is passing for me.

Failed tests: 
  MDBTest.testMessageExceptionReDelivery:631 Delivery policy delay not working

Is that test unreliable?, That one seems to pass in CI but I noticed locally that it tends to fail about 50% of the time., Commit 2117768e0a6c7bab0225f5ba4e960bfb443188c7 in activemq's branch refs/heads/master from [~christopher.l.shannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2117768 ]

https://issues.apache.org/jira/browse/AMQ-5875

Fixing a regression that caused a network bridge to recreate durable
demand improperly.
, Commit a439a0c6bf693e3fd68dcb190d22187c53ec8e9f in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=a439a0c ]

AMQ-5875 - rework the patch a bit to only call createDemandSubscription when we have a match to avoid trcking state in error via the bridge subscriptionMap* from configureDemandSubscription
, merged the patch with a little tweak.
thankyou :-), Thanks for applying that Gary., Noticed that after these changes the following test fails across all the Jenkins test runs:

{quote}
org.apache.activemq.usecases.DurableSubscriberWithNetworkRestartTest.testSendOnAReceiveOnBWithTransportDisconnect
{quote}, GitHub user cshannon opened a pull request:

    https://github.com/apache/activemq/pull/136

    https://issues.apache.org/jira/browse/AMQ-5875

    Reworking DurableConduitBridge to look up subscriptions from the
    msesage store instead of the RegionBroker since inactive subscriptions
    need to be looked at as well when dynamicOnly is false for a
    network bridge.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cshannon/activemq AMQ-5875-regression3

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/136.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #136
    
----
commit 15f390130bfc8645b067544572d80a75a242a9f9
Author: Christopher L. Shannon (cshannon) <christopher.l.shannon@gmail.com>
Date:   2015-07-27T18:38:58Z

    https://issues.apache.org/jira/browse/AMQ-5875
    
    Reworking DurableConduitBridge to look up subscriptions from the
    msesage store instead of the RegionBroker since inactive subscriptions
    need to be looked at as well when dynamicOnly is false for a
    network bridge.

----
, So the issue with org.apache.activemq.usecases.DurableSubscriberWithNetworkRestartTest.testSendOnAReceiveOnBWithTransportDisconnect seems to be that the message store needs to be queried instead of the region broker for destinations since inactive destinations need to be checked as well.  I created a pull request with a fix for this.

[~gtully], can you take a look at my fix and see if it makes sense?  I verified that it fixes org.apache.activemq.usecases.DurableSubscriberWithNetworkRestartTest.testSendOnAReceiveOnBWithTransportDisconnect and org.apache.activemq.usecases.ThreeBrokerVirtualTopicNetworkTest#testNetworkVirtualTopic is still fixed as well.  However, I could have broke something else :), Test failing in CI, TopicRegion keeps around a mapping of all durable subscriptions including inactive one's I think which might allow you to get at the info you need without dipping into the store. , I just updated the PR to use that durable subscriptions mapping instead of the store.  I re-ran both tests and they pass., Commit 5684d093c0fe643c9967b03dbf4d0661f2e0227a in activemq's branch refs/heads/master from [~christopher.l.shannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=5684d09 ]

https://issues.apache.org/jira/browse/AMQ-5875

Reworking DurableConduitBridge to look up subscriptions from the
TopicRegion  instead of the RegionBroker since inactive subscriptions
need to be looked at as well when dynamicOnly is false for a
network bridge.
, Github user cshannon closed the pull request at:

    https://github.com/apache/activemq/pull/132
, Thanks for the update. I applied your fix. Having peeked at that test for a bit yesterday I am not convinced it is verifying what it should with the asserts, the mbeans are for the bridge rather than for durable sub that are active etc.
However, I think the dynamicOnly=false use case is of dubious value so keeping the status quo for now is sufficient., Github user cshannon closed the pull request at:

    https://github.com/apache/activemq/pull/136
, [~gtully],

Thanks for looking at that.  Hopefully there are no more failures after this :), Commit fd760888147b1db69a330c32a3630ddd87c2a53c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=fd76088 ]

https://issues.apache.org/jira/browse/AMQ-5875 - additional test that shows durable sub registration does not error out with this fix
, Commit dc68ad89678eba9d18184f1a5342eb7ecf774596 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dc68ad8 ]

[AMQ-5875] add queue test variant to validate shared mkahaDb remains when one dest is deleted
, Commit 4c972d97b95ea521493db5def6869eab663e5f64 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=4c972d9 ]

AMQ-5875 - fix test regression in MultiKahaDBQueueDeletionTest
, w.r.t the test regression - it is most likely the fix from AMQ-6901 that precipitated the test failure. ]