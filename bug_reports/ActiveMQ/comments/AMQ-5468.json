[You can configure max connections on a transport connector to limit max open connections.

            <transportConnector name="mqtt" uri="mqtt://0.0.0.0:5673?maximumConnections=1000/>, Configuration can fix this.  For questions on configuration please post on the users list., Hi @Timothy Bish, thanks for your quick reply,

I have been configured max connections on a transport connector and real number of clients  (wireless devices) is 2000, but connections count when invoke operator in JMX and losf (command linux) more than 65000 TCP opened.

The fact that, at a time only one a socket is opened. But connection not release when client disconnect not properly, client MQTT is removed on broker, but TCP socket don't. 
You can use telnet client to double check:
Example: Please try three simple steps:
1/ telnet <broker ip>:port
2/ view on Jconsole for JMX connector: image bellow
Socket tcp appear in folder remoteAddress

!http://s3.postimg.org/xbplh535f/amq.png!

3/ Close telnet client, waiting a long time (could be 1 hour, 1 day,...), socket tcp not release, so a humman could be attack by open many sockets :(

In real-production, my clients could be disconnect not properly and many tcp not release and cause max-openfiles error.

Sorry my English!, You can add the keepAlive option to your transport connector and configure the OS to check on a more regular interval than the default two hour value.  When you close the telnet session you leave a half open socket and the broker needs the TCP stack to signal that it has gone so keepAlive would be a good solution.  , Given that many MQTT clients will run on potentially unreliable connections it's probably not a bad idea to add in connection negotiation timeout detection simillar to that of the OpenWire transport.  Unlike STOMP MQTT is binary and would not be usable in telnet which is why the STOMP transport doesn't implement this.  , Fixed on trunk, you can use the 'transport.connectAttemptTimeout' option to configure how long before the opened connection is kept around without receiving a CONNECT frame from the client.  Default value is set to 30 seconds., Thanks Timothy Bish, 

Great :)

I have problem with amq version 5.9.1. Since amq version 5.11 it OK, after 60000 ms, zoombie of socket session (telnet etc..) auto destroy properly :)

But i have another problem with version 5.10 and above. Comsumer JMS (Resource adapter + Glassfish) working not properly, i created a problem here: https://issues.apache.org/jira/browse/AMQ-5570

Many thanks Timothy!
]