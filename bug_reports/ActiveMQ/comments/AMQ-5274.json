[test case and readme, debug log file, see attached log - this seems to be due to the "sync with message expiry processing" if clause in queuesubscription.acknowledge()

it seems that if the message is expired it is not removed - but that the expiry doesn't remove it either, See if you can work out a JUnit test case that shows the issue, then when it's fixed the test will ensure that it remains fixed into the future. , Attempted to create test to reproduce could not find any problems with this or the provided test against 5.11-SNAPSHOT., Hi Tim,

I just ran my test against apache-activemq-5.11-20140715.223633-34 on win64 , and I got exactly the same issue.

The test script prints that it rejects messages 1->10 (the others have already expired), and after it closes, when you go to:

http://localhost:8161/admin/queues.jsp

you see:

ActiveMQ.DLQ	20	0	20	0	Browse Active Consumers
Active Producers
  	Send To Purge Delete
queue.test	1	0	20	19	Browse Active Consumers
Active Producers
  	Send To Purge Delete

There is one "ghost" message stuck in queue.test

I will try integrating your junit and running that to see if I can reproduce with that, it will make things easier indeed, OK, I found some time to integrate the junit test. It seems something in the config is wrong, because if I change the dlq statisfaction method to the following:

      @Override
      public boolean isSatisified() throws Exception {
        long size = dlqView.getQueueSize();
        LOG.info("DLQ Size: {}", size);
        if (size == 20) {
          for (Object O : dlqView.browseMessages()) {
            LOG.info(((ActiveMQTextMessage) O).toString());
          }
          return true;
        }
        return false;
      }

I notice that all the messages have dlqDeliveryFailureCause=expired , which should only be the case for the untreated messages. The others should have session rollback/abort as the fail reason.

I will try to see what we are missing, Also reproduced with jboss-a-mq-6.1.0.redhat-379 , the only difference to the maven test case is adding the configured user/pass in the connection factory defined in context-jms.xml, Uploading a modified version AMQ-5274v2.zip that runs a JUnit test. Simply run mvn test to reproduce the issue., fix in https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=26807cd4

inflight messages are not expired by the broker side background periodic check. In this way, acks do not compete with expiry., Validated the fix on last night's snapshot! Thanks Gary]