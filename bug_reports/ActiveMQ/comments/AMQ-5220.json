[Try creating a new unit test in activemq-stomp that demonstrates your issue.  , I'm sorry, but now I haven't enough time to make unit test in java.. because I'm not java programmist. Can anybody make this test? 
May be I will make it later when I learn java basics and unit test creation. 

For my task I replaced usage of STOMP request by reading information from xml information page of Active MQ., I have quickly written some messy unit test for this scenario.

Same stats message consumed from topic by TCP connector is ok while the one received by STOMP is 0- length.

So I can confirm that it is some stomp related problem.

Will try to look core of this issue., Thank you Piotr! May be you create task with unit test in activemeq-stomp as Timothy suggested?, Yes, sure.
But just was curious what was the reason.
So the problem is combination of 2 reasons:
1. Stomp ProtocolConverter expects the stomp client to directly subscribe advisory addresses. So it will work when subscribing topic is prefixed with "ActiveMQ.Advisory."
2. Statistics plugin is kind of unique advisory system, as instead if directly subscribing advisory topic, you need to send a message with reply-to header. So when reply-to header and your reply topic has a name without "ActiveMQ.Advisory." prefix, then it fails as translator finder is assuming that destination (or rather source) is not and advisory one. It simply ueses wrong frame translator. It thinks that it is a byte or string message while it is map message.

So this method is source of this issue:
{code}
    protected FrameTranslator findTranslator(String header, ActiveMQDestination destination) {
        FrameTranslator translator = frameTranslator;
        try {
            if (header != null) {
                translator = (FrameTranslator) FRAME_TRANSLATOR_FINDER
                        .newInstance(header);
            } else {
                if (destination != null && AdvisorySupport.isAdvisoryTopic(destination)) {
                    translator = new JmsFrameTranslator();
                }
            }
        } catch (Exception ignore) {
            // if anything goes wrong use the default translator
        }

        if (translator instanceof BrokerContextAware) {
            ((BrokerContextAware)translator).setBrokerContext(brokerContext);
        }

        return translator;
    }

{code}

So I will try to prepare both: unit test and fix for this problem.

Greetings
Piotr Klimczak, Problem fixed, Test written.
All working.
Regression test passed for STOMP.
Also fixed some NPE hell in JmsFrameTranslator.

Code submitted to my forked repo: https://github.com/PiotrKlimczak/activemq/commit/d294ba0c095d8f3116e4b2c03bc35bf8251e381a

All we need now is to push it to trunk.

Patch submitted on behalf of WM Promus by Piotr Klimczak
, GitHub user PiotrKlimczak opened a pull request:

    https://github.com/apache/activemq/pull/41

    https://issues.apache.org/jira/browse/AMQ-5220 Empty body for Statistics

    Advisory Messages when using STOMP protocol

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/PiotrKlimczak/activemq trunk-5220

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/41.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #41
    
----
commit 5a616e1b581c3a2942d63424b10891a7c5066137
Author: PiotrKlimczak <nannou9@gmail.com>
Date:   2014-08-06T16:30:26Z

    https://issues.apache.org/jira/browse/AMQ-5220 Empty body for Statistics
    Advisory Messages when using STOMP protocol

----
, Thanks for the patch, applied it with some additional cleanups and tweaks. , Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/41
]