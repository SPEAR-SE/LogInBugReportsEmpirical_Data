[Not test case provided which would be needed to reproduce the issue in question., Still a bug, tested against 5.5.0. Making a test case, Attached a test case showing that continously requesting a connection (and a a session) from a ConnectionFactory that happens to be a PooledConnectionFactory and only closing the connection, not the session, eventually exhausts the session pool. This seems to break the contract of Connection.close since the official documentation for it states that "There is no need to close the sessions, producers, and consumers of a closed connection.", Create a usable JUnit test based on the initial test case.  This one will throw an exception if sessions are exhausted and creates its own BrokerService.  , Fix applied in trunk.]