[StompConnection is primarily a testing tool and its only use in the ActiveMQ project is in the STOMP unit tests.  We welcome contributions though so if you have use for it and find that it has problems we'd be glad to accept patches for it., Tim, I ran into this code because I was looking at the examples shipped with ActiveMQ ({{assembly/src/release/examples/openwire/swissarmy/src/StompExample.java}}).

Outside of ActiveMQ, STOMP support in Java is quite weak. Looking at https://stomp.github.io/implementations.html#STOMP_Clients, there are only two Java libraries listed and both seem to be dead, with no updates in the last two years.

ActiveMQ has good STOMP support internally but does not directly support STOMP for client connections. As a proof, the {{activemq-client.jar}} does not contain the STOMP transport.

Is it something that could change?

If indeed STOMP is fully supported in {{activemq-client.jar}} then I would be happy to contribute and improve the classes under {{org/apache/activemq/transport/stomp}}., The Stomp Java support is pretty weak because the vast majority of users would just use JMS if they were using Java.  Stomp support is primarily available for non-java clients, either through websockets or through languages like Python or Ruby.  Like Tim said, that's something that could be worked on though, and contributions are welcome.

In regards to Stomp not being included in activemq-client.jar...that's for JMS support and OpenWire. If you want to use Stomp in Java, you could include the activemq-stomp.jar on your classpath and then you would have access to the STOMP transport and StompConnection classes.]