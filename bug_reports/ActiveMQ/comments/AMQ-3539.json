[Creating a unit test that demonstrates your issue would be helpful here., I have confirmed this bug exists in 5.6 trunk.  I will be able to work on a unit test soon hopefully., Patch I'm using for the moment (this is the "easy" fix I mention above)

{code:java}
Index: ActiveMQMessageConsumer.java
===================================================================
--- ActiveMQMessageConsumer.java	(revision 50578)
+++ ActiveMQMessageConsumer.java	(working copy)
@@ -1353,7 +1353,9 @@
                                 if (transactedIndividualAck) {
                                     immediateIndividualTransactedAck(md);
                                 } else {
-                                    ackLater(md, MessageAck.DELIVERED_ACK_TYPE);
+                                  // ATTIVIO, fix for AMQ-3539
+                                  MessageAck ack = new MessageAck(md, MessageAck.DELIVERED_ACK_TYPE, 1);
+                                  session.sendAck(ack);
                                 }
                             }
                         }
{code}, Martin, thanks for reporting and with the details you do.
Have you been running with your "patch" in production for a while? And did that fix it for you?

, Lets see if we can revisit and find a good solution for this after the 5.7 release., We have been using this patch successfully since reporting the issue.  It definitely fixes the issue.  Unfortunately I have not had the time to reproduce this in a simple unit test outside of our environment.  It is easy to reproduce in our environment -- we have several failover stress tests with heavy message traffic that we run in a loop., fix looks good (there is no harm in premature extension of prefetch as it is capped by the broker) and no regression in org.apache.activemq.transport.failover.FailoverRedeliveryTransactionTest

applied with thanks in http://svn.apache.org/viewvc?rev=1440366&view=rev]