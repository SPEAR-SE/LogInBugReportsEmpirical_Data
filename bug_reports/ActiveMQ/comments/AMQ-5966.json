[Using the git bisect command, it looks like this issue was introduced with this commit: https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=c9a3202b
, I can not reproduce a hang from the Test class. 
This looks a bit weird though:
                public void onMessage(Message message) {
                        if (rolledBack) {
                            throw new RuntimeException("Session rolled back.");
                        }
Why does the code assume a session that experienced a rollback can not receive any more messages?
, I think the test case code throws that exception just to demonstrate that the same listener was called twice.  I was able to show the RuntimeException when running the code which is how I found the commit where the behavior changed.  That being said, I haven't looked into it enough yet to figure out if there is an actual issue with the same listener being called again or if a new one is necessary., This is actually caused by the changes for https://issues.apache.org/jira/browse/AMQ-5400

, If you add:
{code:java}
            factory.setNonBlockingRedelivery(true);
{code}
to the ActiveMQConnectionFactory, then the test would pass as it wouldn't block during the delivery and would head new a new session.  Thus, there is a workaround.  (although I don't know what other behavior changes that would introduce), What about the problem the issue above solved. [~andreasmattes] do you need to maintain the order?, I'm probably going to close this as "not a bug" as I believe the new behavior is the desired behavior.   Without the change, the redeliveries would be out of order which can cause serious issues.   There's nothing that says the redelivery cannot be on the same session (as long as the session is "running" which it definitely should still be) so the new behavior is valid.   That said, it should be release-noted. , +1, I don't think this is a bug either., So, is there anything preventing this from being closed out as not a bug?, I think we've agreed this is not a problem and can be closed. ]