[The close should be deferred till the transaction completes. 
Same for session.close, it is ok to close the session while XA is still looking after the transaction but a local transaction will be automatically rolled back., see svn commit details, To work in managed environments the "delay session close" code has to be in Session, not XASession.  Also I think it needs to check for the sync already having been added so you don't get more than one :-), fixed in rev 732489., BTW the problem in the managed environment showed up running the tck in geronimo., moving the close to session breaks a few unit tests, The TopicTransacted tests. I get 6 failures & 3 errors on a activemq-core test run.
eg: JmsTopicTransactionTest.testSendSessionClose() verifies that session.close rollbacks the un committed local transaction, but with the change, the transaction is never committed.
Only registering the sync on close if the transaction is XA resolved the issue. As in, the transaction is externally controlled so the transaction completion is out of the control of the session.
It is correct unmanaged JMS behavior so I think the unit tests are correct.
Will this break the tck? 

, r734393. Modified the code a little to only use the synchronization if in an XA tx, possibly this could be if not in localTx such that this will allow the managed case to work,
we need a test case that shows the managed usage from the tck if this change breaks the tck.
]