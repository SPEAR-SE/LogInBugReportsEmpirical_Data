[Most likely you need to configure your transport to want or need a client certificate otherwise it won't be available. For example:

{{wss://localhost:61623?transport.needClientAuth=true}}

or 

{{wss://localhost:61623?transport.wantClientAuth=true}}, The configuration of the broker
{code:java}
<transportConnector name="mqttssl" uri="mqtt+nio+ssl://0.0.0.0:7002?needClientAuth=true/>
 <transportConnector name="mqttws" uri="wss://0.0.0.0:7003?needClientAuth=true"/> {code}
 

Connection code
{code:java}
String caCrt = new ClassPathResource("ca.crt").getFile().getAbsolutePath(); 
String clientCrt = new ClassPathResource("client.crt").getFile().getAbsolutePath(); 
String clientKey = new ClassPathResource("client.key").getFile().getAbsolutePath(); 
MqttClient client = new MqttClient("wss://localhost:7003", "clientId"); 
client.setCallback(this); 
MqttConnectOptions opts = new MqttConnectOptions(); 
opts.setAutomaticReconnect(false); 
SSLSocketFactory socketFactory = SslUtil.getSocketFactory(caCrt, clientCrt, clientKey, "password"); opts.setSocketFactory(socketFactory);
{code}
 

If i connect to mqtts://localhost:7002 transportContext contains the certificate

If i connect to wss://localhost7003 using the same client code, transportContext is null

 

Is a bug or is my fault ?

 

 

 , It was my fault i was using

needClientAuth=true

instead of 

transport.needClientAuth=true]