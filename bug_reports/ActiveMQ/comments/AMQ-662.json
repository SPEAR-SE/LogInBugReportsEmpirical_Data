[I've been looking into this further and it appears to be a synchronization issue in or related to ServerSessionImpl.java. If I individually send messages which are then forced to resend, everything works fine. This infinite loop only occurs when I send several messages in a row. , 
I found what seems to be the source of the infinite loop - in MessageDispatchChannel.java, in the method dequeueNoWait (line 91):

    public MessageDispatch dequeueNoWait() {
        synchronized (mutex) {
            if (closed || !running || list.isEmpty()) {
                return null;
            }
            return (MessageDispatch) list.removeFirst();
        }
    }

The thread that keeps on spinning has values of closed=false, running=false, and a nonEmpty list. With those values, a null is returned up to the run() method of ActiveMqSession.java (line 640), causing it do do nothing and then finally up to ServerSessionImpl.java's run() method (line 156) where in the finally block the following code that is responsible for breaking out of the while loop (line 170):

            finally {
                InboundContextSupport.unregister(this);                
                log.debug("run loop end");            
                synchronized (runControlMutex) {
                    // This endpoint may have gone stale due to error
                    if( stale) {
                        runningFlag = false;
                        pool.removeFromPool(this);
                        break;
                    }
                    if( !session.hasUncomsumedMessages() ) {
                        runningFlag = false;
                        pool.returnToPool(this);
                        break;
                    }                
                }

Neither break statement is hit since the endpoint is not stale and it has unconsumed messages - and the infinite loop begins. , fixed.]