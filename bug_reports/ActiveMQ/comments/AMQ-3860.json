[I encounter the same issue with informix with activemq-5.6.0 :

{code}
2012-08-14/09:10:00.440/CEST [WARN ] <org.apache.activemq.store.jdbc.JDBCPersistenceAdapter> - JDBC Failure: IN parameter has not been set.  index = 7
java.sql.SQLException: IN parameter has not been set.  index = 7
	at com.informix.util.IfxErrMsg.getSQLException(IfxErrMsg.java:488)
	at com.informix.jdbc.IfxSqli.d(IfxSqli.java:1599)
	at com.informix.jdbc.IfxSqli.a(IfxSqli.java:1051)
	at com.informix.jdbc.IfxSqli.executeCommand(IfxSqli.java:918)
	at com.informix.jdbc.IfxResultSet.b(IfxResultSet.java:303)
	at com.informix.jdbc.IfxStatement.c(IfxStatement.java:1276)
	at com.informix.jdbc.IfxPreparedStatement.executeUpdate(IfxPreparedStatement.java:421)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
	at org.apache.activemq.store.jdbc.adapter.BlobJDBCAdapter.doAddMessage(BlobJDBCAdapter.java:71)
	at org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:123)
	at org.apache.activemq.store.memory.MemoryTransactionStore$3.run(MemoryTransactionStore.java:302)
	at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:98)
	at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:248)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:415)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:150)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:231)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
2012-08-14/09:10:00.445/CEST [WARN ] <org.apache.activemq.transaction.LocalTransaction> - Store COMMIT FAILED: 
{code}, For those having the same issue:

You can use the DefaultJDBCAdapter by defining its data types for strings/long/sequences/binary/..:

{code}
<persistenceAdapter>
	<jdbcPersistenceAdapter dataDirectory="${activemq.base}/data"
		dataSource="#informix-ds" createTablesOnStartup="false" >
		<amq:adapter>
			<amq:defaultJDBCAdapter>
				<amq:statements>
					<amq:statements 
						containerNameDataType="VARCHAR(150)" 
						stringIdDataType="VARCHAR(150)"
						longDataType="INT8"
						sequenceDataType="INT8"
						binaryDataType="BYTE" />
				</amq:statements>
			</amq:defaultJDBCAdapter>
		</amq:adapter>
	</jdbcPersistenceAdapter>
</persistenceAdapter>
{code}

Good luck!
, There is a org.apache.activemq.store.jdbc.adapter.InformixJDBCAdapter which should be in the xml as a "informixJDBCAdapter" type you can use, or do as Benoit shows above to set the data types that suits Informix.
]