[You don't appear to be calling connection.start() in your consumer code., I just missed that from the code.. Updating..., Is this the maxPageSize limit issue? That was ignored in 5.3. Set it to 2000 via a destination policy., I'll test the 2000 maxPageSize. But can anyone please explain what the PageSize mean? is it the number of queue or a page where it can contain number of queues? Thanks,, it is documented at http://activemq.apache.org/per-destination-policies.html
Essentially it is the limit on the number of messages that will be held in memory for dispatch, so it becomes the effective window for selector matching., Gary,
Thanks for your help.

Ok, I've tested with 2000 maxPageSize, and I see some issues with selector.It appears that a certain threshold where the selectors fail to apply its rules is at 30 messages and above. 

Just to be accurate, queues for the test below are 0. They don't contain any messages at all when I start the app. So when I run #2) the messages shows me 25 and then running #3) I get 50 total messages. Then I purge them so its clean and run the second set below with 30 messages.

If I run my test app in this sequence
1) Run consumer selector [test > 50] 
2) Run producer property [test, 20], insert 25 messages
3) Run producer property [test, 60], insert 25 messages

The selector works fine! Messages gets consumed.

Using same sequence as above but send 30 or more messages, nothing gets consumed.
1) Run consumer selector [test > 50] 
2) Run producer property [test, 20], insert 30 messages
3) Run producer property [test, 60], insert 30 messages

Is there other ways to get around this? This could particularly happen, a consumer for #2 get disconnected/crashed for some reason, and we are above the 30 threshold then nothing gets consumed at all.

Please advice.

Melvin
, Ok, making the maxPageSize to 5000, passes the 30 message threshold. So there is a correlation on the limit threshold and maxPageSize., Hi,

I just tried to reproduce this and didn't manage.

I see the normal behavior until the number of messages in the queue reaches the page size, which was explained by Gary.

I noticed that in your code you use client ack and don't ack messages anywhere. Maybe this can explain what you see.

Can you create a test case that reproduces this and which includes your configuration as well., Hello Dejan,

I've copied small chunks of my code, although I have the message.acknowledge() on my onMessage(Message message) method, however, this code is not called at all when the threshold is been reached. So it really doesn't matter. Anyway, I will attach my test class and broker configuration, and provide you the test/sequence that I did.

Melvin, Sample code, broker config and test case., Hello Dejan,

I've attached my sample code and test case I did. If there is problem with our broker config, kindly let us know.

Regards,
Melvin, Hi,

your problem isn't related to page size but the small memory limit on the queue. Because of this small limit only portion of messages (22 to be precise) can be cached in the queue and while those messages aren't consumed others can't get in from the store.

So use some higher value for memory limit and you'd be fine., Hi Dejan,

Ok, that made sense. We are not finding this information elsewhere, at least this is helpful understanding what is going on. From architecture point of view will haven an idea where we need to allocate memory and how to make activemq more reliable.

I would close this as fixed as the solution that Dejan mentioned works.

Thanks again everyone.

Melvin, Adding memory limits for queue solved the problem. This document will at least be the information on how selectors work with regards to destination policies.]