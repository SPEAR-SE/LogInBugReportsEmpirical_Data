[The mailing list discussion related to this issue can be found at: http://www.nabble.com/NullPointerException-with-RA-on-Glassfish-t1814940.html#a4959128, The same thing happens on oracle (oc4j) 10.1.3, except that I am using ActiveMQTopicConnectionFactory, instead of the managed connection factory.
Same error, same line.

Details:
-I deploy the resource adapter exactly as it comes packaged in v4.0.1
-I'm using an external broker, running on the same machine.
-I create one topic connection factory
-I create one topic

In the code, the context lookups for the topics go through just fine (the objects are found), but upon calling factory.createTopicConnection(), I get the NPE.  Setting UseInboundSession to true lets this go through just fine, but I'm not writing a message driven bean, so this doesn't help me out very much.
, Does anyone know if this is still an issue with 4.1.1 or 5.0.0?, It is still an issue in 4.1.1. , The exception log I get on ActiveMQ 4.1.1  with
Sun Java System Application Server 9.1 (build b58g-fcs), After further investigation :

In version 4.1.1 the manager is not transient and not null, but I think I am getting the same error with the transient managed connection factory. 

Everything starts here:

        @Resource(mappedName = "jms/UserUpdateConnectionFactory")
	private ConnectionFactory jmsConnectionFactory;

	@PostConstruct
	public void jmsConfigure()
	{
                        {....}
			jmsConnection = jmsConnectionFactory.createConnection(); //at this point the jmsConnectionFactory is of class ActiveMQConnectionFactory but it's managed connection factory is null
                         {....}
        }

Iam not sure if this because I didnt configure something or because of the fact that managed connection factory is transient.

after calling ActiveMQConnectionFactory.createConnection the null mcf is passed to ConnectionManagerImpl.allocateConnection.
(http://fisheye5.cenqua.com/browse/glassfish/appserv-core/src/java/com/sun/enterprise/connectors/ConnectionManagerImpl.java?r=1.6#l231)

in this method there is a check:

if(_logger.isLoggable(Level.INFO)){
            if (! freshMCF.equals(mcf)) {
                _logger.info("conmgr.mcf_not_equal");
            }
        }

the fresh mcf retrieved from pool meta data PoolMetaData pmd = registry.getPoolMetaData( poolName );   ManagedConnectionFactory freshMCF = pmd.getMCF(); is a proper activemq mcf but the value is used only for logging purposes: 

this conmgr.mcf_not_equal translates to The mcf being used to allocate the connection and the MCF in the pool are not equal. in the attached log-finest.txt log file.

Finally when ConnectorAllocator.createResource method is called the mcf is null :
http://fisheye5.cenqua.com/browse/glassfish/appserv-core/src/java/com/sun/enterprise/resource/ConnectorAllocator.java?r=1.6#l136





, I have tried to work around the problem described by Michal by simply declaring the factory property of ActiveMQConnectionFactory to not be transient. However, after running my test driver for accessing a ConnectionFactory managed by the ActiveMQ RA, I ran into the following problem:

Caused by: java.lang.RuntimeException: Cant copy Serializable object:
        at com.sun.enterprise.naming.NamingUtils.makeCopyOfObject(NamingUtils.java:82)
        at com.sun.enterprise.naming.NamingManagerImpl.lookup(NamingManagerImpl.java:842)
        at com.sun.enterprise.naming.java.javaURLContext.lookup(javaURLContext.java:173)
        ... 66 more
Caused by: java.io.NotSerializableException: com.sun.enterprise.connectors.BootstrapContextImpl
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1156)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1509)
        at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1474)
        at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1392)
        at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)
        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:326)
        at com.sun.enterprise.naming.NamingUtils.makeCopyOfObject(NamingUtils.java:64)
        ... 68 more


After having spent some time looking at the RA source code of version 5.0.0 my feeling is that the ActiveMQManagedConnectionFactory violates the javax.resource.spi.ManagedConnectionFactory contract because it is not Serializable.

 ActiveMQManagedConnectionFactory has a property of type org.apache.activemq.ra.MessageResourceAdapter which extends the javax.resource.spi.ResourceAdapter interface which itself does NOT extend Serializable, i.e. implementors are not required to be serializable. The ActiveMQResourceAdapter implementing the MessageResourceAdapter interface, however, claims to be serializable but does have a property of type javax.resource.spi.BootstrapContext. But BootstrapContext implementations are not required to be Serializable. In case of glassfish the passed in com.sun.enterprise.connectors.BootstrapContextImpl class is NOT serializable.

Therefore, declaring the factory property to NOT be transient is not working because ActiveMQManagedConnectionFactory is not serializable as mandated by the JCA spec.

Any thoughts?

Kai, Hi,

I have spent some time fixing the Resource Adapter's serialization issue in order to make it work in glassfish v2. Therefore I made some changes to ActiveMQConnectionFactory, ActiveMQManagedConnectionFactory and ActiveMQResourceAdapter. I have also created additional test cases and updated the existing ones to reflect my changes. I have successfully tested it in my local environment using glassfish v2 and v2 UR1 on JDK 1.5.0_14. I have also attached a patch for the 5.1 SNAPSHOT code in SVN. Could someone test it against Geronimo in order to see if it's still working there?

Regards,
Kai, Patch to fix serialization issue on glassfish., Already fixed in 5.1 instead of 5.2, Resource Adapter has been fixed to support serialization of RA components as performed by glasfish., Is this problem really fixed on the latest 5.1 snapshots?  I tried the 03/29/08 5.1-SNAPSHOT but I'm still running into the following error

---------------------- CUT -------------------
javax.jms.JMSException: Error in allocating a connection. Cause: null
	at org.apache.activemq.ra.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:98)
	at org.apache.activemq.ra.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:64)
---------------------- CUT -------------------

when trying to use outbound connections, Applied patch to trunk - in SVN Committed revision 648727]