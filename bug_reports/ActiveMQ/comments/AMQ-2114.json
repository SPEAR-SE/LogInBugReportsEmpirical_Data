[Can you post an URL you are using and turn on debugging on FailoverTransport to catch the exception thrown by transport?, Will do.
, I am using ActiveMQConnection.DEFAULT_BROKER_URL

Here is the debug output:

0 [main] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Reconnect was triggered but transport is not started yet. Wait for start to connect the transport.
12 [main] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Started.
13 [main] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Waking up reconnect task
18 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Attempting connect to: tcp://localhost:61616
DEBUG ConnectionProcessor: connection OK
149 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Connect fail to: tcp://localhost:61616, reason: java.net.ConnectException: Connection refused
149 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Waiting 10 ms before attempting connection. 
159 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Attempting connect to: tcp://localhost:61616
160 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Connect fail to: tcp://localhost:61616, reason: java.net.ConnectException: Connection refused
160 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Waiting 20 ms before attempting connection. 
183 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Attempting connect to: tcp://localhost:61616
184 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Connect fail to: tcp://localhost:61616, reason: java.net.ConnectException: Connection refused
184 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Waiting 40 ms before attempting connection. 
225 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Attempting connect to: tcp://localhost:61616
241 [ActiveMQ Task] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Connect fail to: tcp://localhost:61616, reason: java.net.ConnectException: Connection refused
, Hi Uwe,

this is exactly what failover transport should do (try reconnecting until broker becomes available). If you want to limit the number of retries try using the maxReconnectAttempts option, such as

failover:(tcp://localhost:61616)?maxReconnectAttempts=3

, Yes, I would like failover transport to try reconnecting until the broker becomes available, BUT I would like it not to block!  The failover transport does NOT block on later calls even if there is no connection to the broker, so why should it block on startup if the broker is down?  I do not want to configure maxReconnectAttempts since I want the transport to keep trying, forever.

An example is when you configure jmsBridgeConnectors with a jmsQueueConnector using a connection factory with a failover transport.  If the remote broker is not available, the local ActiveMQ instance will never finish starting up!  This cannot be what you intend?!

I would expect the failover transport to start, and keep trying to connect to the remote broker., Hi,

I just investigated this a bit further. The problem is that connection.start() tries to send a ConnectionInfo packet to the broker to establish the connection. When the connection is established successfully, the succeeding start() calls will not do this, so it may appear that it behaves differently in that case.  

Anyhow, this is crucial step in establishing a connection, so it has to be done synchronously, because all later operations (creating a sessions, consumers, etc.) assumes the valid connection. Perhaps the issue you described with jmsQueueConnector and failover transport should be tackled somewhere else (not the connection.start() procedure)., The resolution of this issue has been set to fixed. If that's really true, what's the fix version then?, Same as above. Is it really fixed? In which revision/version?, I am also having this problem on 5.3.0. I think this sould be re-opened...., same problem here on 5.3.0... 
A manual workaround is pretty ugly., This is working as designed - i.e. it has to block on starting a connection. If you are publishing a message and a failure occurs - the connection would block too. To get the behaviour were the connection doesn't block - you need to use an embedded broker with a network connection to do store and forward. So instead of creating a connection factory with a URL of:

failover://(tcp://remotebroker:61616)

you could use a broker URI - e.g.

vm:(broker:(tcp://localhost:61616,network:static:tcp://remotehost:61616))

see http://activemq.apache.org/broker-uri.html for more details, As I see it. 

If you use vm:(broker:(tcp://localhost:61616,network:static:tcp://remotehost:61616)) then you're explicitly not using the failoverprotocol. IMHO, this should be re-opened and properly fixed.


, I too have this issue. Please FIx this or suggest a workaround. ]