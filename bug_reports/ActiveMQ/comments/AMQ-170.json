[Shouldn't we use UnavailableException instead of InvalidMessageEndpointException? Just thinking we should use a standard exception if possible, rather than a custom ActiveMQ one.

BTW do you mean we shouild have a new EndpointFactory which creates a new MessageListener POJO whenever the exception occurs? Right now we tend to reuse the same POJO for each connector, Fixed - which means we now have to change the XML configuration slightly in Spring...

Previously we'd create a new connector like this...

  <bean id="messageConnector" factory-method="addConnector" factory-bean="activeMQContainer">

    <!-- subscription details -->
    <property name="activationSpec">
      <bean class="org.activemq.ra.ActiveMQActivationSpec">
        <property name="destination">
          <value>myTopic</value>
        </property>
        <property name="destinationType">
          <value>javax.jms.Topic</value>
        </property>
      </bean>
    </property>

    <!-- the bean used to process the message -->
    <property name="messageListener">
      <ref bean="consumerBean"/>
    </property>
  </bean>

We now need to use this mechanism instead...

  <bean id="messageConnector" factory-method="addConnector" factory-bean="activeMQContainer">

    <!-- subscription details -->
    <property name="activationSpec">
      <bean class="org.activemq.ra.ActiveMQActivationSpec">
        <property name="destination">
          <value>myTopic</value>
        </property>
        <property name="destinationType">
          <value>javax.jms.Topic</value>
        </property>
      </bean>
    </property>

    <!-- the bean used to process the message -->
    <property name="ref" value="consumerBean"/>
  </bean>
]