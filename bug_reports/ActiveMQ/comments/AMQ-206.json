[See also AMQ-220

Another (hackish) solution: what about simply listing the names of the connectors associated with this container?

<bean id="activeMQContainer" ...>
  <property name="connectorBeanList">
    <list>
      <idref local="connectorA"/>
      <idref local="connectorB"/>
    </list>
  </property>
  ...
</bean>

The container could then perform an explicit getBean(String) on each value in the list., Posted this on AMQ-220 as well:

This is wrecking havoc with our setup as well. ActiveMQ should be much smarter about how it interacts with the bean factory. Abstract beans are very useful for defining common attributes that other beans use as a "parent".

I'm still trying to understand the need to initialize all the beans in the factory? What's the purpose?, I don't think Mike's suggestion is too much of a hack. It's how I would configure most beans to work. It's better, at least to me, to see it all wired up in one place.

I think I'm going to checkout from SVN and take a look at creating a patch to create this behavior. , A patch to implement Andrew's idea of how to fix this. 

It allows my Spring Context to deploy just fine and the ActiveMQ stuff works as well. , Many thanks for the patch Patrick - applied now!]