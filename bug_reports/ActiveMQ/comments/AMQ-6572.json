[After analyzing the two potential areas I found there is only an issue with the first case (where the journal file shrinks) in that the reported journal length will be wrong.

In the first case, as suggested, the last data file length needs to be used or the totalLength reported by the Journal will be wrong as the wrong value is used when computing the unused space.  In the second case (where the journal file grows) it is ok because if the detected length is less than the offset value the journal will reset the cursor to the next file and the correct starting value here: https://fisheye.apache.org/browse/~tag=activemq-5.14.3/activemq-6/activemq-kahadb-store/src/main/java/org/apache/activemq/store/kahadb/disk/journal/Journal.java?hb=true#to843

Overall I would consider the issue minor because there is no message loss and the journal still works except for reported length being slightly wrong.  I will push up a patch shortly., Commit 0ad62f722fef6c2123ef7acb116a80574a43c250 in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0ad62f7 ]

https://issues.apache.org/jira/browse/AMQ-6572

On journal start use lastFileLength instead of maxFileLength when
checking for unused space in the last journal file as it is possible the
length of the last journal file is not the same length as maxFileLength
, Commit f947a74f4acd1a60d6a2bac94b8515a50a82564b in activemq's branch refs/heads/activemq-5.14.x from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=f947a74 ]

https://issues.apache.org/jira/browse/AMQ-6572

On journal start use lastFileLength instead of maxFileLength when
checking for unused space in the last journal file as it is possible the
length of the last journal file is not the same length as maxFileLength

(cherry picked from commit 0ad62f722fef6c2123ef7acb116a80574a43c250)
, Thanks for checking these out!]