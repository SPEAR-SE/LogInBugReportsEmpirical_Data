[Broker config and the stack traces of the participating threads., With this deadlock problem the new feature announced for 5.7.0 about per-destination redelivery configuration is actually unusable. I see no workaround besides fallback to use ConnectionFactory to configure the redelivery., I think the processing of expired messages in error is the root cause or the deadlock.
The correct expiry check is in http://svn.apache.org/viewvc?rev=1407640&view=rev
There is only one valid path to scheduled redelivery and this is through the receipt of a poison ack with just a subscription dispatch lock held.
If optimizedDispatch is used, such that the scheduler send thread does a dispatch, there is a deadlock possibility.
The fix is either to split schedule and execute in the scheduler or let the redelivery plugin do the schedule async. The simplest solution is to schedule async i think.
@Sergiy, from your config, you don't use optimizedDispatch so you should be set.
Would it be possible to validate using a 5.8-SNAPSHOT.
, @Sergiy, btw - thanks for the stack traces :-), I will try 5.8-SNAPSHOT the next days and write the feedback., Just tried our application with ActiveMQ 5.8-SNAPSHOT. No deadlocks detected. Looks good. optimizedDispatch was set to true.

One question: would it be enough to take 1407640 revision to get the bug patched in 5.7.0? It looks that message expiry is not the only problem causing the deadlock. You wrote something about "split schedule and execute in the scheduler or let the redelivery plugin do the schedule async"., Just a few notes: when I tried the resource adapter of 5.8-SNAPSHOT the following problems occured:
1. activemq-core.jar was not inside the rar. This resulted in XBeanBrokerFactory ClassNotFoundException.
2. activemq-spring.jar was missing in the rar as well. This resulted in the missing namespace exception (http://activemq.apache.org/schema/core) since activemq.xsd in inside activemq-spring.jar

I had to add the missing jars manually in order to get the RAR deployed., @Sergiy - 1407640 revision is sufficient provide u use the default optimizedDispatch="false". With it true, there is a chance of deadlock given specific circumstances., opened https://issues.apache.org/jira/browse/AMQ-4172 to track RAR issues with snapshot, Multiple fixes and refactorings in this area since this was opened.  Not test case to confirm all paths are correct but reported that it was working in a 5.8-SNAPSHOT]