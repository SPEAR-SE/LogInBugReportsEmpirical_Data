[Attaching test case, Two options for fixes.

#1 explicitly shuts down the ThreadPoolExecutor when AciveMQConnection#onException is called (after the transport is disposed) 
#2 the second reduces the core thread pool from 1 to 0 and the thread will be clean up after the cleanup time (5s). 

Thoughts? Any other suggestions?

When using failover, we don't see this case come up. 
, Not entirely sure but I think that there's a single thread maintained in order to have at least one non-daemon thread at all times, so if you go with option two it could break the tests where we check for that.  , Part of the trouble here is that the getConnection method doesn't do anything if the conn.start() fails so the connection is never closed.

I'm not sure if there's any async exceptions that are recoverable or not, if so then closing the down the executor would be bad.  , Yep, you're right. Updated test case passes every time without the patches.

Thanks for your eyes on this.., Solution: either use failover, or make sure to catch all exceptions and clean up properly. ]