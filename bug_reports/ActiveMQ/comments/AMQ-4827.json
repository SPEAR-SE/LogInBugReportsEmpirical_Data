[Have you tried setting prefetch to zero to prevent cached consumers from holding a message in its prefetch buffer, that's the most common cause when people report stuck messages.  , Hi Timothy - thanks for your response.  I am a colleague of Yung's so I'll jump in.  

We have tried setting prefetch size to 0 as you suggest, and yes that does solve the issue.  However, performance degrades to an unacceptable degree when we reduce prefetch size to 0 (from 1).  A few more facts, in case they are useful:
* We use transacted routes
* We are using durable queues
* We use caching consumers for performance reasons
* We use prefetch = 1 for performance reasons...we found no significant improvement for values greater than 1, but when set to 0, performance is much worse.

We did read in the ActiveMQ documentation (http://activemq.apache.org/what-is-the-prefetch-limit-for.html) that pooled / cached consumers should not use prefetch greater than 0 for exactly the reason we are reporting here.  

So to clarify this purpose of this bug report, we aren't really asking why this is happening, but whether there is some additional setting we can use to prevent messages from being stuck, while preserving the high performance we get from cached consumers + prefetch.

For example, ActiveMQ 5.9 introduces AbortSlowAckConsumerStrategy (http://java.dzone.com/articles/coming-activemq-59-new-way).  I believe this is probably the solution to this "bug" report.  Does that seem right to you?   If so, we'd like to humbly suggest updating the documentation about prefetch with pooled consumers (http://activemq.apache.org/what-is-the-prefetch-limit-for.html) to note that this can be used to prevent stuck messages.  If it won't work, can you please help us understand why not? 

Thanks in advance for your help!, Yes, if you must use prefetch then you would need to configure the abort strategy to kill off those Idle consumers after some period of time (the correct amount depends on your needs so its up to you to determine that).  , Awesome. Thanks for the fast response!  

In that case, we may want to convert this bug report to a request to improve the documentation at http://activemq.apache.org/what-is-the-prefetch-limit-for.html to include the information at http://java.dzone.com/articles/coming-activemq-59-new-way. 

Thanks again.
-Ben, Issue can be resolved with the AbortSlowAckConsumerStrategy or by setting prefetch to zero.  Update page adding a link to the API docs for the strategy.  ]