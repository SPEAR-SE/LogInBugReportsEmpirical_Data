[That error message would only happen during an ack compaction (which is a new feature) so I guess the question is what happened that the location couldn't be read from the journal file during ack compaction. It is a bit annoying that the message form the exception is null so we don't have any idea what is up.  I think it would be fine to log the stack trace at the warning level here in case it happens again to try and track down the issue., Agree with your thinking. A few reoccurences since:
{noformat}
2016-09-19 15:11:30,270 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2016-09-19 15:36:32,156 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2016-09-19 16:01:33,572 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2016-09-19 17:08:07,707 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
{noformat}
Something's fishy with the system time on this machine. Could it be a result of the time being re-set? Eg. going back in time., Time shouldn't have anything to do with it because a Location in the journal is essentially just 2 pieces of information, the file and the offset and time isn't involved.  Since this issue has happened a few more times can you enable debug logging for the MessageDatabase class to try and capture the stack trace?, Could capture it:
{noformat}
2016-09-21 09:50:37,188 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1710 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint started.
2016-09-21 09:50:37,190 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1943 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint done.
2016-09-21 09:50:40,269 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1710 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint started.
2016-09-21 09:50:40,273 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1943 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint done.
2016-09-21 09:50:40,800 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2016-09-21 09:50:40,801 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2106 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location
java.io.EOFException
        at java.io.RandomAccessFile.readInt(RandomAccessFile.java:803)[:1.8.0_92]
        at org.apache.activemq.util.RecoverableRandomAccessFile.readInt(RecoverableRandomAccessFile.java:165)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at org.apache.activemq.store.kahadb.disk.journal.DataFileAccessor.readLocationDetails(DataFileAccessor.java:113)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at org.apache.activemq.store.kahadb.disk.journal.Journal.getNextLocation(Journal.java:853)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.getNextLocationForAckForward(MessageDatabase.java:2102)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.forwardAllAcks(MessageDatabase.java:2066)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at org.apache.activemq.store.kahadb.MessageDatabase.access$600(MessageDatabase.java:121)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at org.apache.activemq.store.kahadb.MessageDatabase$AckCompactionRunner.run(MessageDatabase.java:2005)[102:org.apache.activemq.activemq-osgi:5.14.0]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)[:1.8.0_92]
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)[:1.8.0_92]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)[:1.8.0_92]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)[:1.8.0_92]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)[:1.8.0_92]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)[:1.8.0_92]
        at java.lang.Thread.run(Thread.java:745)[:1.8.0_92]
2016-09-21 09:50:40,835 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1710 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint started.
2016-09-21 09:50:40,835 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1943 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint done.
2016-09-21 09:50:42,192 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1710 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint started.
2016-09-21 09:50:42,193 | DEBUG | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 1943 | 102 - org.apache.activemq.activemq-osgi - 5.14.0 | Checkpoint done.
{noformat}, Essentially the ack compaction works by just sequentially scanning the journal file commands and rewriting any acknowledgements to a new journal file.  The fact that trying to find the next location is giving an EOFException would seem to indicate some kind of journal file corruption.

Are you seeing errors during any other times or just during the compaction task? I would think you'd see errors other times as well if the file was truly corrupted.  Also, do you have enableJournalDiskSyncs set to true?, Not seeing the errors all day long, likely just during compaction. We run with the default for enableJournalDiskSyncs (true).
One observation, it could be that the issue appears when we purge (via the MBean) and reset stats for all destinations., Another pattern seen, it happened 6 times, every 20mins:

{noformat}
2017-01-27 14:29:48,147 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 98 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2017-01-27 14:49:57,956 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 98 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2017-01-27 15:10:07,635 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 98 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2017-01-27 15:30:41,002 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 98 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2017-01-27 15:50:50,964 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 98 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
2017-01-27 16:16:07,428 | WARN  | ournal Checkpoint Worker | MessageDatabase                  | emq.store.kahadb.MessageDatabase 2104 | 98 - org.apache.activemq.activemq-osgi - 5.14.0 | Failed to load next journal location: null
{noformat}, Commit e3b529129a490d760d21692736e7c0dda7e615e2 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e3b5291 ]

[AMQ-6432] improve the logging to see the current offset
, I think this should only occur if there is no disk sync, and thinking more if sync is not disabled via enableJournalDiskSync=false then any non sync journal write could lead to this. However, the gc should never try an read the current journal file so it may have to coincide with a journal flip.
Having ack compaction force a sync before trying to scan may help here.
Getting better info out of the logging will be a first step, as would having a reproducer., if the trigger is a purge, it may be that the acks are not synced, and doing a sync write after a purge could sort this., Commit 9b64e188b59a395300a2f5d6022df9dbbae2f426 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=9b64e18 ]

[AMQ-6432] issue was journal scan on newly created ack file. I left the relevant braces from AMQ-6288 in place. Fix and test
, issue was not related to syncs but doing a scan for acks that could venture into the newly created data file for the acks. 
Adding a limit to the getNextLocation scan provides the necessary restriction and avoids the EOF and warn., Hi Gary, may I ask,  by setting enableAckCompaction=false, would I avoid this error in 5.14.x release?  We're considering going live with 5.14.3.  Thank you., Yes, turning off ack compaction will ensure you don't see this warning in you logs. , Commit 3a848971ff80540ae9af2b1008f90b7e4f3014ef in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=3a84897 ]

[AMQ-6432] improve the logging to see the current offset

(cherry picked from commit e3b529129a490d760d21692736e7c0dda7e615e2)
, Commit 93715d1bd605bc61149505d4df2ebc223ae371af in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=93715d1 ]

[AMQ-6432] issue was journal scan on newly created ack file. I left the relevant braces from AMQ-6288 in place. Fix and test

(cherry picked from commit 9b64e188b59a395300a2f5d6022df9dbbae2f426)
]