[Commit 25de20c77ec0bf6cdc699cac2ad50e34ec707453 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=25de20c ]

AMQ-7129 - Properly recover messages from KahaDB for a durable when there are
messages to recover before the stored lastAck value

With individual ack mode we need to check the durable ackPosition
sequence set in the KahaDB index on subsription load to see if there are
earlier messages before the lastAck value that still haven't been acked.
While this normally wouldn't happen it is possible in individual ack
mode
, [~gtully] - Can you take a look at this to make sure it looks good to you? If there is an issue we can fix it but I went ahead and pushed it against master so Jenkins could run the tests, Commit 703b8cbda39f4a1263e7ecfbb1eb1ec247f91162 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=703b8cb ]

AMQ-7129 - minor junit test fix
, [~cshannon] I never got a handle on the need for individual ack on a durable sub b/c it is not shared in jms 1.0, for a long time it was only the last ack id that was tracked which meant that this use case did not work historically. With priority support and individual message tracking in the index it is possible now.
There is some redelivery count logic in: org.apache.activemq.broker.region.DurableTopicSubscription#deactivate that will probably break with individual ack if the messages are acked out of order and keepDurableSubsActive is true. In other words, there may be more issues related to this use case b/c it has not been common in the past.
this is forward progress though :-)

Actually - I think in the jdbc store it is just the last ack sequence id per priority that is tracked, so it may be that individual ack on the jdbc store with durable subs won't fly at all b/c there is no separate index., [~gtully] - thanks for the feedback.  I agree that this is not perfect but is a bit of progress that should at least help.  I don't recommend using individual ack mode with durables at all but there are a couple cases where I manage some brokers where a user had done this and messages got stuck like this.  I told them to quit doing that which solved the issue but figured I would at least try and help the recovery case...at least for KahaDB.  

I will also merge the fix into the 5.15.x branch and close this as completed as the CI tests seem to have passed., Commit 24b5944ecbf315866ce227862fb2d264f5b1654f in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=24b5944 ]

AMQ-7129 - Properly recover messages from KahaDB for a durable when there are
messages to recover before the stored lastAck value

With individual ack mode we need to check the durable ackPosition
sequence set in the KahaDB index on subsription load to see if there are
earlier messages before the lastAck value that still haven't been acked.
While this normally wouldn't happen it is possible in individual ack
mode

(cherry picked from commit 25de20c77ec0bf6cdc699cac2ad50e34ec707453)
, Commit 602e382f1deb52002986ba7e308111088cc249a8 in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=602e382 ]

AMQ-7129 - minor junit test fix

(cherry picked from commit 703b8cbda39f4a1263e7ecfbb1eb1ec247f91162)
, Commit fa2daa25e9acd3f37bb1ee0d37717d2383e67a85 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=fa2daa2 ]

AMQ-7129 - fix durable message size statistics with individual ack

Make sure that the pending message size for a durable sub only includes
messages part of the ack range
, Commit 0b88dabb40c7c29a1b86d9413a701cf31cc2ceda in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=0b88dab ]

AMQ-7129 - fix durable message size statistics with individual ack

Make sure that the pending message size for a durable sub only includes
messages part of the ack range

(cherry picked from commit fa2daa25e9acd3f37bb1ee0d37717d2383e67a85)
, The submission of AMQ-7132 made me realize I forgot to make sure the pending size metrics for durables also work properly with individual ack which my latest commit fixes, Commit a16b227808bec2977f1d3323bf29257b3c8ca9f6 in activemq's branch refs/heads/master from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=a16b227 ]

AMQ-7129 - code cleanup
, Commit 5acd9303a53cd11f5109bfa96591d8d6dbf853bc in activemq's branch refs/heads/activemq-5.15.x from Christopher L. Shannon (cshannon)
[ https://gitbox.apache.org/repos/asf?p=activemq.git;h=5acd930 ]

AMQ-7129 - code cleanup

(cherry picked from commit a16b227808bec2977f1d3323bf29257b3c8ca9f6)
]