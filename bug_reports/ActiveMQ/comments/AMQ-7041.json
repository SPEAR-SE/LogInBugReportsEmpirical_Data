[I have seen this happen and it seems it is the gluster
performance.read-ahead
translator that is at fault.  When the cache is disabled, dispatch can quickly read from a recently updated journal location and get caught with invalid data due to read-ahead. Try running with that gluster option disabled and see if it is the same issue.

 , [~gtully], thank you for your answer. I tried to disable that option and cleaning the journal before running the test several times. It still fails. The first errors:



 
{noformat}
2018-08-24 14:58:36,860 | ERROR | Failed to load message at: 1:7227364 | org.apache.activemq.store.kahadb.KahaDBStore | ActiveMQ BrokerService[AMQ01] Task-25
java.io.IOException: Unexpected error on journal read at: 1:7227364{noformat}
{noformat}
2018-08-24 15:09:54,614 | ERROR | Failed to load message at: 1:7303848 | org.apache.activemq.store.kahadb.KahaDBStore | {noformat}
Here is gluster volume info:
{noformat}
Volume Name: vol1
Type: Replicate
Volume ID: f0e16ed4-010c-400e-be68-27f3a59128db
Status: Started
Snapshot Count: 0
Number of Bricks: 1 x 2 = 2
Transport-type: tcp
Bricks:
Brick1: host1:/gluster/bricks/vol1
Brick2: host2:/gluster/bricks/vol1
Options Reconfigured:
performance.read-ahead: off
performance.client-io-threads: off
nfs.disable: on
transport.address-family: inet{noformat}
 , Maybe check what are the default performance options. the store expects a sync write to be visible to another thread doing a read on the same location, through a different file descriptor.

any write behind options would get in the way. In my case, a subsequent read would work ok, which pointed to a caching issue.

using strace of file io may help diagnose.]