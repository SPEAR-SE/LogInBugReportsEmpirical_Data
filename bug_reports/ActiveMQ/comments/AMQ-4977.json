[Could you work up a JUnit test case against the ConnectionStateTracker to prove the problem exists?  , I have one. The dump is from it. But it is coupled to tons of classes from our project which I cannot easily extract. I believe I have described the scenario in good detail for anybody who is intimate with the class to understand. I understand test would be much more comfortable for whoever wants to fix it, however I need to get some sleep so I have to stop here.

As for proving - I have heapdumps from our production servers showing both the negative sizecounter and the map containing gazillions of pullCommands, I have our custom test, I have spent 6 hours today debugging to nail it down. It is there, and I am confident about the scenario I have described., I've committed a small test and fix for the cache size value growing when nothing is actually added into the map.  Since there was no test provided to confirm this fixes the underlying issue you'll need to test and report back at some point if there is still more going on.  , Here is a test which shows this memory leak., Make sure you test on trunk now as the conditions of negative current cache size and continuous addition to the current size are now fixed.  , Test shows that cache size now stable, does not grow with time as before:
{noformat:title=Now}
2014-01-20 11:05:26  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 131200, 328 elements, memory: 21556KB
2014-01-20 11:05:31  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 131200, 328 elements, memory: 15535KB
2014-01-20 11:05:36  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 131200, 328 elements, memory: 17671KB
2014-01-20 11:05:41  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 131200, 328 elements, memory: 33767KB
2014-01-20 11:05:46  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 131200, 328 elements, memory: 43187KB
{noformat}
{noformat:title=Before}
2014-01-20 11:08:28  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 6398000, 31 elements, memory: 10546KB
2014-01-20 11:08:33  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 21079200, 31 elements, memory: 16294KB
2014-01-20 11:08:38  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 40870000, 31 elements, memory: 15740KB
2014-01-20 11:08:43  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 60265200, 31 elements, memory: 27111KB
2014-01-20 11:08:48  WARN ConnectionStateTrackerMemoryLeakTest - Cache size: 79071200, 31 elements, memory: 8817KB
{noformat}, Thanks for the prompt reaction!
Can you give us basic estimation of two things:
* when will release 5.10 go out
* do we need to also upgrade our AMQ server to be on same version as the client?, I desperately need update when is any of the 5.9.1 or 5.10 releases going out.
We will be upgrading from 5.6 and I want to avoid patching the client jar again, v5.9.1 was released quite some time ago. , thanks. found it ]