[Patch for HttpTunnelServlet.java, A unit test (requires slightly modified BlockingQueueTransport) that demonstrates the leak.  The unit test fails with unpatched HttpTunnelServlet., Committed with svn revision 1032539. Thanks for the patch!, Dejan, the addition of the CountdownLatch to BlockingQueueTransport should not be checked in --- it was only there to demonstrate the issue through the unit test.  In its present state, a NullPointerException is likely to occur at runtime because the finalize() method will be triggered, but finalizeLatch will not have been initialized.

If you want to include the unit test, the existing code will need to be changed to use a different technique for determining the leaking BlockingQueueTransport.  Somehow you'll need access to the instance of HttpTunnelServlet, publically expose the clients hashmap, and then assert against the number of elements in the hashmap.

Unfortunately, the HttpTunnelServlet/BlockingQueueTransport class structure was not set up to support this kind of unit test, so unless you know a way to determine the number of instances of a class that are loaded in the heap, you'll have to add some testing specific code, which seems rather invasive.

======

To summarize, the patch that I submitted should be applied, and it should only affect HttpTunnelServlet.  BlockingQueueTransport should be left as-is and the unit test should not be checked in., Removed unnecessary stuff. Thanks. Would be good to have a test to protect this in the future though!]