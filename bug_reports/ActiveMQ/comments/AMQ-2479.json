[you need to provide some more info here, like the route descriptions on #1 and #2.
In any event, #1 that does a dequeue and enqueue needs to use a dequeue transaction that spans the enqueue  such that there is no inflight message loss.
Also, in the event of B failure, the failover transport on the jms connection will do an auto reconnect.

How are the activemq components configured to access brokers, are the brokers persistent?
Again, attaching a test case or some variant of your routes would help., Brokers are using kahaDB. They allow JMX.

==========================
Server A (applicationContext.xml)
==========================
<route>
	<from uri="activemq:queue:X.REQUEST.FOO.PRD"/>
	<to uri="serverB:queue:Y.REQUEST.FOO.PRD"/>
</route>
	
<!-- ActiveMQ on serverB.foo.com -->
<bean id="serverB" class="org.apache.activemq.camel.component.ActiveMQComponent">                                                
	<property name="brokerURL" value="tcp://serverB.foo.com:61616"/>
</bean>
		
==========================
Server B (applicationContext.xml)
==========================
<route>
	<from uri="activemq:queue:Y.REPLY.FOO.PRD"/>
	<to uri="serverA:queue:X.REPLY.FOO.PRD"/>
</route>

<!-- ActiveMQ on serverA.foo.com -->
<bean id="serverA" class="org.apache.activemq.camel.component.ActiveMQComponent">
	<property name="brokerURL" value="tcp://serverA.foo.com:61616"/>
</bean>
, This issue appeared at random and it could not be successfully reproduced.]