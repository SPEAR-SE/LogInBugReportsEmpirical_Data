[This test case is very similar to testPriorityBackup. The only difference is that when the transport connectors are created, the cluster flag is set to true which basically creates the connector with updateClusterClients="true" rebalanceClusterClients="true" updateClusterClientsOnRemove="true"., I see one issue so far in Failover transport at least in relation to his test case.  The client uses a string compare of the connected transport URI against the first in the connect list, which can be different if for instance the client is configured with "tcp://localhost:61616" and the broker sends the resolved "tcp://127.0.0.1:61616".  In that case the client incorrectly reconnects thinking it needs to make a change when in fact its already on the right one., Fixed on trunk.  In practice its fine to have the clients updated with new brokers but you really don't want to combine priority backup and cluster rebalance as the clients that are on the priority backup will ignore any rebalance requests. ]