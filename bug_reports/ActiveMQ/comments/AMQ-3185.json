[Patch that prevents VMTransportServer/VMTransport from mistakenly decrementing connectionCount more than once per VMTransport., Unit test that demonstrates the premature closure of VMTransport.  The test is timing dependent, but on our systems it fails nearly always within 10 iterations of the loop.

After the patch is applied, the test passes 100% of the time., It should be noted that we originally encountered this error on AMQ 5.3.1.  While the bug was in VMTransport/VMTransportServer, it was exposed by the existence of broker-to-broker bridges that frequently failed (i.e., in our network of brokers, several brokers are for failover and are not started during normal operations).  A number of changes in AMQ 5.4.2, specifically the modification of VMTransport's stop() method to send a ShutdownInfo to the peer rather than triggering its exception handler, prevented the bug from appearing in our runtime environments.  However, further analysis of the AMQ trunk source revealed that the root cause, even though no longer triggered in our runtime environment, was still present --- specifically the ability of VMTransportServer to mistakenly decrement connectionCount multiple times.

Given the reported deadlock with bridge creation, this turned out to be a significant issue with the stability of our system.  We would like the root cause addressed to prevent possible reintroduction in subsequent versions., When combined with AMQ-3127, AMQ-3185 created a major problem with the stability of our systems., Applied patch, thanks for the great test case.]