[You should enable debug logging on the broker and post the logs after starting a clean broker and connecting a client, this should log what values are being used to configure the inactivity monitor., Due to work priorities, it may take me a while to get back with the requested information., Attaching an activemq.log excerpt of a clean run of ActiveMQ followed by a STOMP client connection., You can further debug the inactivity monitor by setting these values for the AMQ logging which will show you the monitor checking the client. 

{noformat}
log4j.logger.org.apache.activemq.transport=TRACE
{noformat}

You should see something along these lines.

{noformat}
2013-06-04 18:02:09,204 [0.1:33780@51836] - DEBUG StompInactivityMonitor         - Stomp Inactivity Monitor read check: 5000, write check: 0
2013-06-04 18:02:09,205 [0.1:33780@51836] - DEBUG ProtocolConverter              - Stomp Connect heartbeat conf RW[5000,0]
2013-06-04 18:02:09,205 [ ReadCheckTimer] - TRACE AbstractInactivityMonitor      - A receive is in progress
2013-06-04 18:02:14,206 [ ReadCheckTimer] - DEBUG AbstractInactivityMonitor      - 5001 ms elapsed since last read check.
2013-06-04 18:02:14,206 [ ReadCheckTimer] - TRACE AbstractInactivityMonitor      - A receive is in progress
2013-06-04 18:02:19,206 [ ReadCheckTimer] - DEBUG AbstractInactivityMonitor      - 5000 ms elapsed since last read check.
2013-06-04 18:02:19,206 [ ReadCheckTimer] - TRACE AbstractInactivityMonitor      - Message received since last read check, resetting flag: 
2013-06-04 18:02:24,206 [ ReadCheckTimer] - DEBUG AbstractInactivityMonitor      - 5000 ms elapsed since last read check.
2013-06-04 18:02:24,206 [ ReadCheckTimer] - DEBUG AbstractInactivityMonitor      - No message received since last read check for tcp:///127.0.0.1:33780@51836. Throwing InactivityIOException.
2013-06-04 18:02:24,210 [yMonitor Worker] - DEBUG AbstractInactivityMonitor      - Running ReadCheck[tcp://127.0.0.1:33780]
{noformat}, Attaching a newer log excerpt with TRACE turned on. Couldn't find the place in the log where AMQ started, so I began the excerpt where AMQ was stopped., Things seem to be working fine, stomp client will remain connected since the broker is reporting:

{noformat}
2013-06-04 16:11:56,011 | TRACE | A receive is in progress | org.apache.activemq.transport.AbstractInactivityMonitor | ActiveMQ InactivityMonitor ReadCheckTimer
{noformat}
, Except that my test client, which connects and subscribes but then sleeps didn't disconnect until after 15 minutes. I'll grab the rest of the log and attach it., I forgot to turn off some other processing that touches that AMQ instance. I'll run it again with just the test client., Attaching another activemq.log excerpt. This one should cover startup of AMQ thru connection of a client that does not do any subsequent reading thru the disconnection of that client after 15 minutes instead of 5 minutes of inactivity., Things are working as designed.  The read checks are meant to be lenient in order to prevent breaking off a client to quickly in case of large message sends.  If you want more controlled inactivity checks you need a STOMP v1.1+ client with write checks which will detect broken sockets on write. , Is 3 times the heartbeat period the upper bound for when an inactive client connection will be cleared by the broker? If not, what is the upper bound?

If there was a statement I could measure my observations against, such as that connection clearing would happen no sooner than 1 heartbeat and no later than X heartbeats (or one heartbeat + X seconds/minutes/hours), we could probably settle this hear and prevent this issue from popping up again., In general it will take two read check cycles before the client gets booted, however in your case since the client simply connects and then does nothing the inactivity monitor has settled and it ends up taking a third cycle normally if you client connected, and did some other interaction with the broker this wouldn't happen.  , This issue was based on a misunderstanding of the heartbeat. In normal operation it will take two heartbeats for an idle connection to be cleared. In some cases, such as a client that connects but does not read at all, it will take three heartbeats before the connection is cleared. Consequently, I am resolving this issue as "not a problem."]