[Added transport options "?transport.hbGracePeriodMultiplier" which is used to add a user defined grace period to the read check interval indicated by the connecting STOMP client.   By default this value is set at 1.0 in order to keep backwards compat with clients that don't expect a grace period.  Can be set to values greater than 1.0f and the read check interval will be multiplied by this value.  , I think something has gone awry here. This implementation of a 'grace period' doesn't really help. 

What I am observing, after configuring the grace period with a value of 1.5, is that when a client connects (simplified):

CONNECT
heart-beat:5000,0

the broker responds with:

CONNECTED
heart-beat:0,7500

which is incorrect. The grace period multiplier should NOT affect the broker's response. The broker should have responded with 5000. 

The client therefore honors the broker's inflated interval (per the STOMP spec) and sends a read check every 7500ms. 

The broker, meanwhile, applies the grace period multiplier, a second time, to its inflated read check interval. In this case, it now performs a read check every 11250ms (as shown in the DEBUG logging of the AbstractInactivityMonitor).

With the client idle the broker's activemq.log contains TRACE log entries that read "A receive is in progress" every 11250ms. I presume this is the ReadCheckTimer handling the read check sent from the client? If so, the log output could be a little more descriptive.



, submit some unit tests. , I have no idea how to write unit tests for ActiveMQ and this section of code in particular. 

Unfortunately I could not find any unit tests for this feature which is surprising given that it was added just the other day. How was it tested? It's a tad galling to be asked for some tests now.

I don't mind modifying existing tests though. However, my personal experience with the unit test codebase is that they're rather flaky; they almost never pass whenever I've tried to run them which doesn't exactly entice me into wanting to try now.

Nonetheless, from a quick analysis of the code it would appear that the offending code is in activemq-stomp/src/main/java/org/apache/activemq/transport/stomp/ProtocolConverter.java at line 929:
\\
{code:java|borderStyle=solid}
    hbReadInterval = (long) (Long.parseLong(keepAliveOpts[0]) * hbGracePeriodMultiplier); // Wrong!
{code}

should be:
\\
{code:java|borderStyle=solid}
    hbReadInterval = (long) Long.parseLong(keepAliveOpts[0]); //  Honor the client's read interval
{code}

where keepAliveOpts[0] is the client specified heartbeat read-interval.

When the inactivity monitor's read check time is calculated it's done correctly:
\\
{code:java|borderStyle=solid}
StompInactivityMonitor monitor = this.stompTransport.getInactivityMonitor();
monitor.setReadCheckTime((long) (hbReadInterval * hbGracePeriodMultiplier));  // Correct
monitor.setInitialDelayTime(Math.min(hbReadInterval, hbWriteInterval));
monitor.setWriteCheckTime(hbWriteInterval);
monitor.startMonitoring();
{code}

{noformat}
Setup:    keepAliveOpts[0] = 5000, hbGracePeriodMultiplier = 1.5

Expected: hbReadInterval == 5000, monitor.getReadCheckTime() == 7500
Actual:   hbReadInterval == 7500, monitor.getReadCheckTime() == 11250
{noformat}
, Already fixed earlier, should be in the latest nightly. ]