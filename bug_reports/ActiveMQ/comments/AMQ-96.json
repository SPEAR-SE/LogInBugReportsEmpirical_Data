[Fancy taking a stab at this? Maybe we need a ping protocol?, Sure, I'll take a look. :), The problem isn't the timeout per say - it's the fact the exception is dispatched to the BrokerClient which then assumes it's a genuine transport error - and closes , I realise that comment probably was for Stewie, but I have some thoughts on this matter too. :)

1. Is a ping protocol necessary?
I think so. If something in the receive thread breaks and leaves the socket open or if something goes wrong on one end of a NATted / port forwarded connection it won't be detected - at least not while there's no other activity. Pinging will proactively ensure that the application level is working.

2. Which component's concern is pinging?
The concept of "pinging" is probably not a common concern for all transport channels (e.g mutlicast and jgroups?) and even if it seems logical to let ReliableTransportChannel take care of managing the keep-alive, I think it will be much easier to implement this on the TcpTransportChannel level. It will just be a matter of sending a ping packet the first time the socket read times out and fail if the second read also times out. 

Receiving a ping response packet over a WireFormat will require changes in the current WireFormat implementations and the Packet class as a new Packet type will be required. Perhaps adding a simple WIRE_SPECIFIC_PACKET type with unparsed binary content could future proof other link specific needs?]