[BTW could you describe exactly how you are deploying ActiveMQ in spring please - as there are a few optoins. Are you using the BrokerFactoryBean?, I am indeed using the BrokerFactoryBean. My spring config looks something like this:

	<!-- JMS CONFIGURATION -->	
	<bean id="brokerContainer" class="org.apache.activemq.xbean.BrokerFactoryBean" depends-on="activeMQConfigurer">
		<property name="config" value="classpath:activemq.xml"/>
	</bean>
	
	<bean id="jmsFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616"/>
	</bean>
	  
	<!-- Spring JMS Template -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<!-- lets wrap in a pool to avoid creating a connection per send -->
			<bean class="org.springframework.jms.connection.SingleConnectionFactory">
				<property name="targetConnectionFactory" ref="jmsFactory"/>
			</bean>
		</property>
		<property name="pubSubDomain" value="false"/>
	</bean>

The broker is then configured in activemq.xml like so:

  <broker useJmx="false">

	<persistenceAdapter>
      <journaledJDBC journalLogFiles="5" dataDirectory="#activeMQConfigurer.dataDirectory" dataSource="#activeMQConfigurer.dataSource"/>
    </persistenceAdapter>
  
    <transportConnectors>
       <transportConnector uri="tcp://localhost:61616"/>
    </transportConnectors>
    
    <networkConnectors>
      <networkConnector uri="static://(tcp://localhost:61616)" />
    </networkConnectors>
    
  </broker>

Let me know if there is any other information you need..., I've just added the test case ReconnectWithJMXEnabledTest to ensure that all of our MBeans are properly unregistered if you call BrokerService.stop() (which should happen by default if you use the BrokerFactoryBean so AFAIK this issue is now resolved.

If you still have an issue, let us know more details on how you are using tomcat, spring and activemq and we can always reopen this issue
, Incidentally if this still is an issye - is your Spring application context being closed? Do you see any logging when you undeploy the WAR? Which mechanism are you using in web.xml to load spring, Hi!
I use ActiveMq 5.2.0.
In web.xml spring context get by org.springframework.web.context.ContextLoaderListener
Persistent = false

And I have exception:
javax.jms.JMSException: Could not create Transport. Reason: javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=localhost,Type=Broker
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35) [org.apache.activemq-5.2.0.jar:5.2.0]
        at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:239) [org.apache.activemq-5.2.0.jar:5.2.0]
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:252) [org.apache.activemq-5.2.0.jar:5.2.0]
        at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:224) [org.apache.activemq-5.2.0.jar:5.2.0]
        at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:172) [org.apache.activemq-5.2.0.jar:5.2.0]

Could you please help me with my problem.

Thx!
, Hello there.

Sorry to bring this up again, but I am probably experiencing the same issue here 6 years later.

System setup:
 - Linux Mint 17.3 x64
 - Tomcat 7 with activemq-all.jar (v5.10.0) in tomcat7/lib
{code:title=Tomcat context.xml}
<Resource name="jms/myConnectionFactory" auth="Container"
              type="org.apache.activemq.ActiveMQConnectionFactory"
              description="JMS Connection Factory"
              factory="org.apache.activemq.jndi.JNDIReferenceFactory"
              brokerURL="vm://localhost"
              brokerName="LocalActiveMQBroker"
              userName="activemq" password="activemq"
              useEmbeddedBroker="false" />
{code}

Using JMS with Spring 4.2.5 (Spring Integration JMS & Java DSL config). When invoking JMS outbound adapter I get the above-mentioned {{InstanceAlreadyExistsException}}.
If I add {{useJmx="false"}}, the exception disappears.

To answer the questions for [~jstrachan]:
 - Spring context is closed. I tried clean deploy and tomcat restart as well. 
 - I don't see any logging related to AMQ other than a clash of bindings (not related I suppose):
{code}
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/usr/share/tomcat7/lib/activemq-all.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/var/lib/tomcat7/webapps/ROOT/WEB-INF/lib/logback-classic-1.0.13.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [ch.qos.logback.classic.util.ContextSelectorStaticBinder]
{code}
 - I load multiple xml classpath files including spring-context.xml in my web.xml. I also import some JavaConfig beans and use aop proxy. 

Any ideas?]