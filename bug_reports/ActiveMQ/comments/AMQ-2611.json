[Example test case, Looking into the code, it looks like by default org.apache.activemq.camel.component.ActiveMQConfiguration.usePooledConnection = true, so ActiveMQConfiguration.createConnectionFactory creates an org.apache.activemq.pool.PooledConnectionFactory.  PooledConnectionFactory needs to have stop() called on it to close underlying connections.  Nothing in camel is doing this when the context is closed.

One possible workaround is to manually create a PooledConnectionFactory and pass it to ActiveMQComponent.setConnectionFactory.  Then you have to call stop() yourself on the PooledConnectionFactory to close connections when the camel context is stopped.

This seems to be a bad default.  If by default camel is going to create a PooledConnectionFactory for the user, shouldn't it clean it up when the context is closed?, Aaron good findings.

You could probably try to see if you can patch the AMQ component to be able to stop the connection factory when its stopped.
, Here is a patch against activemq trunk.

This fixes my test case and passes all unit tests for activemq-camel., Aaron thanks for the patch. I have moved the ticket to AMQ as its a bug/issue with AMQ., Fixed with svn revision 910984. I modified your test and converted it to test case. Thanks for the patch]