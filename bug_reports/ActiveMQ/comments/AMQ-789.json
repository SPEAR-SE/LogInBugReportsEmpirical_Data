[Fix in trunk revision 418497

We now wait up to 15 seconds before timeing out the wireformat negociation phase., This should also be backported to 4.0 branch, A hang could also happen if the transport is stop()ed while a send is being concurrently done., commited in 4.0 branch in rev 423792, I think I might be seeing this in 4.1.1.  
2007-12-13 01:08:16,917 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - Thread-3 - Waking up reconnect task
2007-12-13 01:08:16,965 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - ActiveMQ Task - Attempting connect to: tcp://***.***.***.***:***?wireFormat.maxInactivityDuration=600000&soTi
meout=10000
2007-12-13 01:08:17,232 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] - ActiveMQ Task - Sending: WireFormatInfo { version=2, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDi
sabled=false, TcpNoDelayEnabled=true, MaxInactivityDuration=600000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-12-13 01:08:17,236 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - ActiveMQ Task - Connection established
2007-12-13 01:08:17,237 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - Thread-3 - Started.
2007-12-13 01:08:17,240 INFO [com.highergear.lead.jms.JMSFactoryConnectionUtil] - Thread-3 - Created Connection
... That's all it says for hours.

Upon restarting both broker and client:

2007-12-13 08:46:40,633 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - Thread-3 - Waking up reconnect task
2007-12-13 08:46:40,680 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - ActiveMQ Task - Attempting connect to: tcp://***.***.***.***:***?wireFormat.maxInactivityDuration=600000&soTi
meout=10000
2007-12-13 08:46:40,955 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] - ActiveMQ Task - Sending: WireFormatInfo { version=2, properties={CacheSize=1024, CacheEnabled=true, SizePrefixDi
sabled=false, TcpNoDelayEnabled=true, MaxInactivityDuration=600000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-12-13 08:46:40,959 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - ActiveMQ Task - Connection established
2007-12-13 08:46:40,961 DEBUG [org.apache.activemq.transport.failover.FailoverTransport] - Thread-3 - Started.
2007-12-13 08:46:40,963 INFO [com.highergear.lead.jms.JMSFactoryConnectionUtil] - Thread-3 - Created Connection
2007-12-13 08:46:40,999 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] - ActiveMQ Transport: tcp:///***.***.***.***:*** - Received WireFormat: WireFormatInfo { version=2, properties={Cache
Size=1024, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=false, MaxInactivityDuration=600000, TightEncodingEnabled=false, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
2007-12-13 08:46:41,001 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] - ActiveMQ Transport: tcp:///***.***.***.***:*** - tcp:///***.***.***.***:*** before negotiation: OpenWireFormat{version
=2, cacheEnabled=false, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}
2007-12-13 08:46:41,001 DEBUG [org.apache.activemq.transport.WireFormatNegotiator] - ActiveMQ Transport: tcp:///***.***.***.***:*** - tcp:///***.***.***.***:*** after negotiation: OpenWireFormat{version=
2, cacheEnabled=true, stackTraceEnabled=true, tightEncodingEnabled=false, sizePrefixDisabled=false}
2007-12-13 08:46:41,158 INFO [com.highergear.lead.jms.JMSFactoryConnectionUtil] - Thread-3 - Started Connection

The WireFormatNegotiation is not completing and no timeout occurs that allows the client to recognize the connection is bad.
, I'm seeing this issue in 4.1.1 as well. Looking at the code I don't see the 15 sec. timeout mentioned in the JIRA., What is the status of this issue? Has the fix been rolled into a release yet? --Rob, OK, the first comment answered my question. Fixed in  418497.

, Already fixed]