[It turns out this was a signature change by Spring and therefore this ticket can be closed out.  They've reverted back to the original method signature which will be available again in 2.0M3.

http://opensource2.atlassian.com/projects/spring/browse/SPR-1677
, Great - thanks for the heads up Ben!, Unfortunately it looks like we've got another binary incompatibilty

http://forums.activemq.org/posts/list/0/453.page

java.lang.NoSuchMethodError: org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser.registerBeanDefinitions(Lorg/springframework/beans/factory/support/BeanDefinitionReader;Lorg/w3c/dom/Document;Lorg/springframework/core/io/ResourceI
at org.apache.xbean.spring.context.impl.XBeanXmlBeanDefinitionReader.registerBeanDefinitions(XBeanXmlBeanDefinitionReader.java:7 

we might have to do reflection or some wierdness to figure out which version of spring is on the classpath. , Looks like we can close this one out., Still looks to be an issue with 2.0-M3 - Spring changed their binary protocol, so unless they provide us a similar hook, the only thing I can see is we'll have to have a special "2.0-M3 or later" version of XBean, If Spring are not going to maintain binary compatibility with XBean then maybe we should just ship a jar-jar'd version of Spring 1.2.x which is switched into the org.apache.xbean.spring namespace so that folks can still use spring 2.x or later in their own config files, then XBean will use an older version of spring
, While the jarjar would resolve the binary compatability issues, it would break folks who make use of spring objects in the spring.xml, This also affects AMQ 4.0 release and Spring 2.0 M4 with this exception:

java.lang.NoSuchMethodError: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.setValidating(Z)V
        at org.apache.xbean.spring.context.impl.XBeanXmlBeanDefinitionReader.<init>(XBeanXmlBeanDefinitionReader.java:56)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.loadBeanDefinitions(ResourceXmlApplicationContext.java:87)
        at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicati
onContext.java:89)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:279)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.BrokerFactoryBean.afterPropertiesSet(BrokerFactoryBean.java:76)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBea
nFactory.java:877), This is now fixed in SVN HEAD - we are using 2.0-m5 of Spring which works with 2.4 or later of xbean-spring]