[See attached unit test, In my application, I'd prefer a message marked as redelivered if it wasn't to a re-delivered message that wasn't marked as such.

So a quick fix, I modified org.apache.activemq.broker.region.queue to increment the message count prior to persistent storage, then decremented immediately after on the version in memory:
message.incrementRedeliveryCounter();
store.addMessage(context, message);
message.setRedeliveryCounter(message.getRedeliveryCounter()-1);

Aside from marking all messages as redelivered upon recovery or a page in, any possible issues with this?  Any better solutions out there?, that seems like a reasonable (and smart) solution but it may make sense as part of a broker plugin and/or destination filter so that it can be easily enabled or disabled. If redelivery semantics are vital then it can be enabled through config etc.
From what I can see, any other solution will require storing the message twice which would kill performance., This issue is fixed by AMQ-3519]