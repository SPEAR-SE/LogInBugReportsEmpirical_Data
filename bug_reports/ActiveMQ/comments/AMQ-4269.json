[Configuration:

<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:amq="http://activemq.apache.org/schema/core"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd">

    <!-- Allows us to use system properties as variables in this configuration file -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>

    <broker xmlns="http://activemq.apache.org/schema/core" brokerName="pprddaamq304.ie.i.net" persistent="true" dataDirectory="${activemq.data}">

        <!-- Destination specific policies using destination names or wildcards -->
        <destinationPolicy>
            <policyMap>
                <policyEntries>
                    <policyEntry queue=">" producerFlowControl="true" memoryLimit="500mb">
                        <deadLetterStrategy>
                          <individualDeadLetterStrategy queuePrefix="DLQ." useQueueForQueueMessages="true" />
                        </deadLetterStrategy>
                    </policyEntry>
                    <policyEntry topic=">" producerFlowControl="true" memoryLimit="500mb">
                    </policyEntry>
                </policyEntries>
            </policyMap>
        </destinationPolicy>

        <!-- Use the following to configure how ActiveMQ is exposed in JMX -->
        <managementContext>
            <managementContext createConnector="true"/>
        </managementContext>

        <!--
            The store and forward broker networks ActiveMQ will listen to.
            We'll leave it empty as duplex network will be configured by another broker
            Take a look at activemq-static_network-broker2.xml for example
        -->
        <networkConnectors>
            <networkConnector uri="static:(tcp://ppdaamq300.ie.intuit.net:61616,tcp://ppdaamq305.ie.i.net:61616,tcp://ppdaamq306.ie.i.net:61616)"/>
        </networkConnectors>

        <persistenceAdapter>
            <kahaDB directory="${activemq.data}/pprddaamq304.ie.intuit.net/kahadb" enableJournalDiskSyncs="false" indexWriteBatchSize="10000" indexCacheSize="1000" journalMaxFileLength="200 gb"/>
        </persistenceAdapter>

        <!--  The maximum amount of space the broker will use before slowing down producers -->
        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage limit="500 mb"/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit="240 gb" name="foo"/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit="1000 mb"/>
                </tempUsage>
            </systemUsage>
        </systemUsage>

        <!-- The transport connectors ActiveMQ will listen to -->
        <transportConnectors>
            <transportConnector name="openwire" uri="tcp://0.0.0.0:61616"/>
        </transportConnectors>

    </broker>

    <!--
        Enable web consoles, REST and Ajax APIs and demos

        Take a look at ${ACTIVEMQ_HOME}/conf/jetty.xml for more details
    -->
    <import resource="jetty.xml"/>

</beans>
, There are some posts complaining of messages stuck when brokers are networked from version 5.6+.
You may take a look at http://activemq.2283324.n4.nabble.com/5-7-doesn-t-consume-on-queue-tt4658025.html., I looked at it but not sure what I need to do and why it gets stuck. All network of brokers are of same binary version., Yeah use the mailing list / user forum for getting help.]