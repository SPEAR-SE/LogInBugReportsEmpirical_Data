[I think it is likely that you can't really detect this - the code is blocked on the socket.write.  I don't think that can be distinguished from the socket being in a hung
state, or the target broker being hung.  You might have to bump up the maxInactivity value to a higher value than the default to allow for large messages 
and your WAN., Let me think loud: if you use socket.write you usually write chunk by chunk so you can actually detect this somehow - you're probably use socket.write to send chunk by chunk, right? So each call to socket.write will return after some time, so you can set flag "I'm still alive" to true and continue sending, if connection fails flag will not be set and application will know that something's wrong.

Am I thinking right?, It would be good if the TCP transport implementation kept the transport alive while its still reading chunks of a single message. So even if one huge Command is being read over a slow network, it still kept the activity monitor alive.

BTW another work around is to use out of band messaging for large messages over 1Mb

http://activemq.apache.org/blob-messages.html, This issue is duplicate of [https://issues.apache.org/activemq/browse/AMQ-2088], which just has been fixed]