[One of the dispatch servers is now queueing messages again without dequeueing to the hub. A grep of the debug logs on the hub shows that bridging information for the hub's account_events consumer is going to two of the production machines but not to the one where messages are spooling. This is confirmed by switching off the consumer: on the "working" production servers the consumer count for account_events drops from one to zero, but on the third production server the consumer count remains at one (now incorrect).

Log on the incorrect production server shows (zorin is the faulty server, billing is an alias for our hub):

2012-10-29 16:09:22,611 | WARN  | Caught an exception processing local command | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[zorin] Task-9560
java.net.SocketException: Connection reset
        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:113)
        at java.net.SocketOutputStream.write(SocketOutputStream.java:153)
        at sun.security.ssl.OutputRecord.writeBuffer(OutputRecord.java:314)
        at sun.security.ssl.OutputRecord.write(OutputRecord.java:303)
        at sun.security.ssl.SSLSocketImpl.writeRecordInternal(SSLSocketImpl.java:763)
        at sun.security.ssl.SSLSocketImpl.writeRecord(SSLSocketImpl.java:751)
        at sun.security.ssl.AppOutputStream.write(AppOutputStream.java:78)
        at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
        at java.io.DataOutputStream.flush(DataOutputStream.java:123)
        at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:184)
        at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:289)
        at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:271)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:726)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:167)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:138)
        at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:127)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:104)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1312)
        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:838)
        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:873)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        at java.lang.Thread.run(Thread.java:636)
2012-10-29 16:09:22,611 | INFO  | Network connection between vm://zorin#132 and ssl://hub/x.x.x.x:61617 shutdown due to a local error: java.net.SocketException: Connection reset | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[zorin] Task-9560

Then eventually:
2012-10-29 16:10:23,764 | INFO  | Establishing network connection from vm://zorin?async=false&network=true to ssl://hub:61617 | org.apache.activemq.network.DiscoveryNetworkConnector | ActiveMQ Task-31
2012-10-29 16:10:23,765 | INFO  | Connector vm://zorin Started | org.apache.activemq.broker.TransportConnector | ActiveMQ Task-31
2012-10-29 16:10:24,002 | INFO  | Network connection between vm://zorin#146 and ssl://hub/x.x.x.x:61617(hub) has been established. | org.apache.activemq.network.DemandForwardingBridgeSupport | StartLocalBridge: localBroker=vm://zorin#146

Then, further down:
2012-10-29 16:15:18,417 | WARN  | Transport Connection to: tcp://127.0.0.1:44832 failed: java.net.SocketException: Broken pipe | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///127.0.0.1:44832@61612
2012-10-29 16:15:33,982 | INFO  | Network connection between vm://zorin#146 and ssl://hub/x.x.x.x:61617 shutdown due to a local error: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too (>30000) long: tcp://x.x.x.x:61617 | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ InactivityMonitor Worker
2012-10-29 16:15:33,983 | WARN  | failed to deliver remove command for local subscription, for remote ID:billing-52716-1351526992068-2:12:-1:1 | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[zorin] Task-9720
org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://zorin#147) disposed.
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:89)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$8.run(DemandForwardingBridgeSupport.java:666)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        at java.lang.Thread.run(Thread.java:636)
2012-10-29 16:15:33,983 | INFO  | Establishing network connection from vm://zorin?async=false&network=true to ssl://hub:61617 | org.apache.activemq.network.DiscoveryNetworkConnector | ActiveMQ Task-33
2012-10-29 16:15:34,213 | INFO  | Network connection between vm://zorin#148 and ssl://hub/x.x.x.x:61617(hub) has been established. | org.apache.activemq.network.DemandForwardingBridgeSupport | StartLocalBridge: localBroker=vm://zorin#148
2012-10-29 16:15:35,983 | INFO  | zorin bridge to hub stopped | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[zorin] Task-9739
2012-10-29 16:18:44,191 | WARN  | Network connection between vm://zorin#148 and ssl://hub/x.x.x.x:61617 shutdown due to a remote error: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too (>30000) long: tcp://x.x.x.x:61617 | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ InactivityMonitor Worker
2012-10-29 16:18:44,191 | INFO  | Establishing network connection from vm://zorin?async=false&network=true to ssl://hub:61617 | org.apache.activemq.network.DiscoveryNetworkConnector | ActiveMQ Task-34
2012-10-29 16:18:46,192 | INFO  | zorin bridge to hub stopped | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ BrokerService[zorin] Task-9720
2012-10-29 16:18:46,487 | INFO  | Network connection between vm://zorin#150 and ssl://hub/x.x.x.x:61617(hub) has been established. | org.apache.activemq.network.DemandForwardingBridgeSupport | StartLocalBridge: localBroker=vm://zorin#150

Then this appears:
2012-10-29 16:21:26,338 | WARN  | TopicSubscription: consumer=ID:quarrel-40451-1351260922652-79:2:1:1, destinations=707, dispatched=1000, delivered=19, matched=1001, discarded=0: has twice its prefetch limit pending, without an ack; it appears to be slow | org.apache.activemq.broker.region.TopicSubscription | ActiveMQ Transport: tcp:///127.0.0.1:41331@61612

Following this repeated socket reset errors can be seen intermixed with other normal operations.
, Marking this resolved. We did two things to resolve our case:

1. We increased the memory of the broker in the production network after learning that some messages could be large and translated across broker components

2. We moved our hub from the end of a shared ADSL connection into the production network after noticing that transmission from hub to spokes maxed out the upload bandwidth for hours at a time upon the sending of a 10M message to a topic with three spokes listening.

Other than better documentation and better exception messages I'm unsure what can prevent another incident of this nature in the future.]