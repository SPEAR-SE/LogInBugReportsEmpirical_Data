[This is expected behavior.  You can work around it a bit by increasing the maxPageSize value to hold more messages in memory but if you continue to produce to the Queue and only consume a small number it will occur again.  One the memory cache fills dispatch will stop until you start consuming those messages or you set a TTL and they start expiring.  , This is working as currently designed.  , I'm sorry -- this is expected state of operation?  Really?

I know selectors tend to be problematic, but until we put a big notice on the front ActiveMQ page that states this limitation exists and will not be fixed, this is not an acceptable response.

The JMS specification does not state that selectors only work with small limits on numbers of pending messages.  Therefore, ActiveMQ stating it supports the JMS specification is misleading., I see no indication whatsoever that activemq isn't following the specs - it's following the specs rather well and "using" the spec to even support additional things that are not possible (or difficult) with the spec.

The "issue" will with messages in a queue and using a message selector exists in every messaging system I know.
I however see a possible feature request related to the virtual topic concept.
As ActiveMQ implements this by a topic that directly forwards its messages to queue's, it's logically that these messages stay on the queue's but what if we make it possible to e.g. define a selector for the forwarding from the topic to the queue in the ActiveMQ config - or even better take the given selector from the client and use that one to filter the messages coming from the topic onto the queue (assuming that the selector will be the same for all clients)]