[test case AMQ1866.java has been added to trunk.  Currently failing it show a test case the works for the default prefetch but which fails for small prefetches. , Seems it's not limited to small prefetch sizes.  Test case has been updated and shows that the slow down will happen even with the default prefetch size., The issue revolves around how ActiveMQ 5.x pages and dispatches messages to consumers. Every queue keeps list of paged in messages which defaults to 100 max entires. It round robins dispatching messages between consumers, even the slow consumers. Once the slow consumer gets 100 dispatched messages which it has not yet acked due to it being slow, then no further messages are paged in since the page in list is full.

I am evaluating different ways to implement this but, any change to this code could have repercussions which need to get evaluated.
, Attaching patch which fixes the test case.  Submitting for review to make sure there are no other performance/memory implications., Using pendingQueueSize to determine least loaded subscription seems the best way to go
Fixed by SVN revision 680161, The fix doesn't work if the consumer is slightly slow ..., Just curious does this bug occur if lazy dispatch is enabled?  Really the best way of solving this is to not deliver messages to consumers that aren't waiting for a message.  I would hope if lazy-dispatch is enabled, this doesn't happen..
, Hi David - we intend  change the dispatch model so that it works this way - if you get a chance - would be very happy if you could give it a run ?, Fixed by SVN revision 685806, No worries - I'll try and set aside some time next week to check it out.
, additional mods to fix remaining test case,, if ye get a moment please cast your eyes over revision 687677 - fix for AMQ-1902]