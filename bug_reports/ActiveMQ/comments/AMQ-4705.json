[currently keepAlive is a no op for the shared file locker. It does not delegate to channel fileLock isValid so it does not see any failure of even the acquisition by the slave.
having it check validity will help in this case and cause the master to die., fix in http://git-wip-us.apache.org/repos/asf/activemq/commit/0525f886, use error for log message and check for file.exists

https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=74b35bc5dd75edb9d9e3250a4362b85d78023d76, Kind of follow up problem: AMQ-5568, The check for file existence is not bullet proof, b/c a slave can recreate the file if it is deleted and the master can still think it is valid.
This needs some more thought., Checking of the file exists and comparing the lastModified date  (time since epoch) of the lock file should take care of the following cases. 

1. Single broker configuration -The lock file is deleted - The file.exists() returns false and the broker stops
2. A master slave broker configuration - The master starts up, creates the lock file and locks it. The slave broker is constantly polling to see if it can obtain a lock. Now, the lock file is deleted, the slave starts up as the master (polling times specified by the lockKeepAlivePeriod and lockAcquireSleepInterval) and the master compares the date modified on the lock file and then shuts down.

Please see attachment .
, patch applied with thanks in http://git-wip-us.apache.org/repos/asf/activemq/commit/ccbbecb4, Commit b285d1018803ceb4fdf7ea14c178de1e0abc9c8a in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=b285d10 ]

https://issues.apache.org/jira/browse/AMQ-4705 - ensure jvm lock system property is cleared in the event of lock release throwing exception.
]