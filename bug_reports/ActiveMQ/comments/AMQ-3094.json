[Test file which publishes 5 messages to topic://CHAT.DEMO., Attached test case does the following:
 * publishes 3 messages to queue://test
 * subscribes to queue://test using an http POST to the AjaxServlet
 * polls for messages

The results of the test are inconsistent.  Sometimes the client receives all messages, sometimes the client receives 0 messages.  (See attached test output in AjaxTest-output.txt.)  These results are not consistent with what I'm seeing in JavaScript testing, where I always seem to receive at least one message, but still provide some documentation for the issue., In AjaxTest-output.txt, also note that for the test runs where no messages are received also show 2 GET requests being made.  The test run where all messages are received shows only a single GET request.  I'm not sure what that means, given that the test has only a single GET., I added 1 debugging statement to MessageListenerServlet.writeMessageResponse.  (See attached patch & sample output.)  The output shows that several individual messages sent from another web client are contained in properties of this single ActiveMQTextMessage.  This seems very likely to be the root cause of the problem.

Is this normal behavior, and we need to search all properties of a TextMessage when writing a response to a client?  Or is it that we need to send messages differently so each 'send' POST actually creates a distinct TextMessage?, Fixed with svn revision 1052259.

The problem was that messages received between POST and GET calls were ignored. That should be fixed now. I modified a provided test a bit to demonstrate this issue every time.

Thanks for the great work!, Dejan: Take a look at the message properties in https://issues.apache.org/jira/secure/attachment/12466851/write_message_response_debugging_output.txt.  There are four messages here, but only 1 of them gets delivered.

The interesting bits are these:
  message=<message type="chat" from="test-user">message two</message>
  text = <message type="chat" from="test-user">message five</message>
  destination = topic://CHAT.DEMO
  m1=<message type="chat" from="test-user">message three</message>
  m2=<message type="chat" from="test-user">message four</message>
  m3=<message type="chat" from="test-user">message five</message>
  t1=send
  t3=send
  t2=send
  d1=topic://CHAT.DEMO
  d2=topic://CHAT.DEMO
  d3=topic://CHAT.DEMO

When an ajax client sends many messages in a short amount of time, they are then delivered to other clients in a single ActiveMQTextMessage.  writeMessageResponse() doesn't handle this properly, and only delivers one of the messages to a subscriber.

I'm not sure if this is a problem on the sending or receiving side.  (Is it legitimate to have multiple messages piled into a single ActiveMQTextMessage like this?)  I agree the junit test now passes, but I don't think the issue is resolved yet.  I'll work on getting some more tests created which reproduce this issue.  For now, you should be able to reproduce it using the chat-send.html script I've already attached to the ticket., Attached test shows that an ajax client will miss messages which arrive while an ajax poll request is in progress.

This test uses org.eclipse.jetty.client.HttpClient rather than org.apache.commons.httpclient.HttpClient.  I was able to get session handling working with the Jetty HttpClient, and it's much better at async requests than the commons HttpClient.

I sometimes see an org.eclipse.jetty.io.EofException in the poll request.  The cause is unclear.  Sometimes the error disappears simply by re-running the test.  Sometimes doing a recompile of activemq-trunk/activemq-web and then re-running the test causes the error to disappear., Sample test output showing the presence/absence of the EofException I noted., Patch will allow an ajax client to receive all messages.  Several other tests are included for previously-untested ajax code.

The following tests fail w/o the patch:
  testAjaxClientReceivesMessagesWhichAreSentToQueueWhileClientIsPolling
  testAjaxClientReceivesMessagesWhichAreSentToTopicWhileClientIsPolling
  testStompMessagesAreReceivedByAjaxClient, Updated my svn working copy & re-generated patch due to request from Jeff Rose.  Now based on trunk r1057227., Updated my svn working copy & re-generated patch due to request from Jeff Rose. Now based on trunk r1057227.  Previous version of this patch (w/ identical file name) was missing 1 test which should not have been omitted., Resolved in svn revision 1064725.]