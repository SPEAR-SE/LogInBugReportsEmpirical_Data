[I was able to reproduce problem with default journal configuration. 
1. Remove content of storage directory.
2. Start broker. 
3. Enqueue 30000 messages.
4. Stop broker.
5. Start broker.
6. Dequeue 30000 messages.
7. Stop broker.
8. Start broker.
9. Enqueue 30000 messages.
10. Stop broker.
11. Recovery never ends looping through log files:

fateev@fateev:/workplace/fateev/install/activemq-4.0-SNAPSHOT/activemq-core/activemq-data> grep overflowing server.log
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=4
57352 [Journal Writer] DEBUG org.apache.activeio.journal.active.LogFileManager  - getNextDataRecordLocation overflowing into next logFile=4
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=3
73287 [Journal Writer] DEBUG org.apache.activeio.journal.active.LogFileManager  - getNextDataRecordLocation overflowing into next logFile=3
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=4
118821 [Journal Writer] DEBUG org.apache.activeio.journal.active.LogFileManager  - getNextDataRecordLocation overflowing into next logFile=4
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=3
122112 [Journal Writer] DEBUG org.apache.activeio.journal.active.LogFileManager  - getNextDataRecordLocation overflowing into next logFile=3
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=4
164157 [Journal Writer] DEBUG org.apache.activeio.journal.active.LogFileManager  - getNextDataRecordLocation overflowing into next logFile=4
[                Journal Writer] LogFileManager                 DEBUG getNextDataRecordLocation overflowing into next logFile=3
166746 [Journal Writer] DEBUG org.apache.activeio.journal.active.LogFileManager  - getNextDataRecordLocation overflowing into next logFile=3
, How big were the messages?  Can the shiped example producer and consumer in the examples directory reproduce the issue?, I don't know message size as I use shipped producer and consumer. Here are commands used to enqueue and dequeue messages:

activemq/assembly/target/activemq-4.0-SNAPSHOT/bin/activemq-4.0-SNAPSHOT/example> ant producer -Ddurable=true -Dmax=10000
activemq/assembly/target/activemq-4.0-SNAPSHOT/bin/activemq-4.0-SNAPSHOT/example> ant consumer -Ddurable=true -Dmax=10000
, Also note that my first entry shows how to reproduce the problem without ANY consumers and producers., One possible clue is that I'm running broker from eclipse. And eclipse kills processes without running their shutdown handlers. So it might be that to reproduce you'll need to kill broker with kill -9., After more testing it looks like the root cause is not executing usual shutdown sequence of a broker. When I stop broker in normal way I cannot reproduce the problem. When I stop it through "kill -9" or through eclipse it fails in the way described in contact. 

For me it looks like Journal design issue. It has to tolerate catastrofic shutdown but by design shutdown code has to be executed to leave journal in consistent state. Is any way to force journal into consistent state after every modification?, Great investigation Maxim; sounds like you are on to something.

In an ideal world we'd have an automated system test which did a kill -9 on a running broker and tested it recovers fine and so forth.

In the meantime, I wonder if you could give us a tarball of the journal files created after a kill -9 and we can use recovery of those files as an automated test case., BTW you should be able to attach a zipped up tarball of the activemq-data directory for a broker which can't recover and we can get it working, storage of first failure case when single log file is used an no messages where published., Storage that reproduces infinite recovery loop with two files configured through the following code:

            DefaultPersistenceAdapterFactory pFactory = new DefaultPersistenceAdapterFactory();
            pFactory.setJournalLogFiles(2);
            pFactory.setJournalLogFileSize(10240);
            broker.setPersistenceFactory(pFactory);, I've attached storatge files. , Thanks Maxim,

Those journal files helped me reproduce and fix the problem!  I've committed the fix against the 4.1 and 4.0 branch.  A subsequent nighly snapshot should include the fix., Thanks for quick fix. 
Could you provide more info on the root cause? It would be nice to include such information as well as check in number every time you close an issue., Here's the diff:

http://svn.apache.org/viewvc/incubator/activemq/trunk/activeio/activeio-core/src/main/java/org/apache/activeio/journal/active/LogFileManager.java?view=diff&r1=413520&r2=413521&pathrev=413521

We were iterating though all the records in the journal, when we got to the last record, and ask for the subsequent record, instead of getting null, we would get the first record in the journal again.  This only happened when all the files in the journal were 'active', they held records that were recorded after the mark.  Fixed the logic so that we don't go past the last record., ah.. just noticed that 4.0.1 did not build a new activeio and ship with the new version.  I guess this will make it into 4.0.2 then., We need to build activeio beta-4 and ship with that.]