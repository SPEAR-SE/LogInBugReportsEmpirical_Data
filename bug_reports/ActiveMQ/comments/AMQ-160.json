[How about...

* we use reliable to connect the client...

* first connection fails with duplicate client ID, but it reconnects again in the future

* the keep-alive mechanism should close the old connection at some point

* the new client will eventually reconnect

i.e. so long as we are using keep-alive pinging and we use reliable connections, the new client should reconnect succcessfully - its just there's a window in between reinserting the network connection and the keep-alive timeout failing where a connecion will fail due to a duplicate client ID.


Another option could be, that if we have a duplicate client ID, we wait until the keep-alive ping time has expired to know if this is a new connection or a reconnection of a stale connection. Though the nice thing about the former is it just works already :)., Well, there are a couple of problems with this:

1. The problem is that keep-alive is only done from the client side (you cannot specify reliable on the broker side). So the second option won't work.

2. Even if we did keep-alive from the broker, the client side would log a InvalidClientIdException as an error which could make an undramatic situation look more dramatic than it should.

I any case, the connections should be terminated after the InvalidClientIDException is thrown (should this be done by the broker or the client?). Right now, the client will never try to reconnect since the connection is kept open.

Doing a syncrhonous send when a seemingly duplicate client connects will have no performance impact and resolve the problem immediately, so I still think this is the best solution..., Agreed. Please do try to implement this if you fancy having a stab at it. 

Though a work around for now could be to allow the client to use reliable to retry on InvalidClientIDException. Note its the client doing the connections & it can use reliable to reconnect N times etc- we don't need reliable on the broker side. So long as the broker is capable of detecting dead connections on the server is all we really need - though I agree that it'd be nice if we just did the right thing & checked the other connection is still alive first before returning an InvalidClientIDException]