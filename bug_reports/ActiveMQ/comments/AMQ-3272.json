[just at thought, this might effect the send order, in that the last task gets executed ahead of pending tasks.
Would it be better if that send blocked pending the execution of the tasks ahead of it.
so use a fixed size blocking task pool and have the number of workers configurable., Should be fixed with svn revision 1090186.

The problem that exception occurred in the first place was the semaphore lock releasing at the end of the task, leaving the small window when executor could accept new tasks while there's no space available. With this fixed, the exception shouldn't happen even under high load., The rejected execution exception still occurs, problem seems to be early release of locks in the cancel case., fix is in http://svn.apache.org/viewvc?rev=1102014&view=rev

when an async task was canceled the semaphore bounding the task queue was signaled in error. That should only be signaled when the task has completed, due to the preceding cancel it will have nothing to do, but it consumes space in the task queue., aborting the task is really a bug as a semaphore is engaged to gate the task queue.]