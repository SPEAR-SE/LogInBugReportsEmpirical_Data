[You should try enabling compression - by setting the useCompression property on your ActiveMQConnectionFactory
, While this test uses a Java client, we're also using STOMP clients for other languages in production, so "useCompression" would not help there.
Apart from that, it's just the test that uses text messages. In production we transfer binary structures, which will benefit less from gzip compression.

I *do* appreciate the suggestion of using "useCompression" as a *workaround*, but I think there's a structural issue in the broker core here.
The broker should not hit an OOM while attempting to service a consumer queue read request., if you have really large messages, they the destination pageSize can be reduced and there is also lazyDispatch that with a prefetch of 1 would ensure that there are only as many messages as concurrent consumers in memory at a time.
, Gary, could you specific in a bit more details which elements/attributes I need to add to make it work like you suggest?
I'd be happy to perform a batch of stress tests in our environment based on your suggestions., the details of how to configure are in http://activemq.apache.org/per-destination-policies.html
The attributes in question are maxPageSize (reduce from the 200 default value) or queuePrefetch and lazyDispatch.
, This is a configuration issue.]