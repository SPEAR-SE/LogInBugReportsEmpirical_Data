[Recommend you create a JUnit test case to demonstrate your issue., I have absolutely no idea how to do that. I am not a java guy, sorry, StompTest.java in our unit tests has plenty of examples, barring that please create a test case using the client you are currently using.  , You'll need to provide a test case, can't reproduce this so far., I'm seeing the same problem.  We're using a modified first.php from the fuse php client.  I'll clean it up and attach it., modified first.php from fuse stomp php client.  the result on 5.5.1 comes back as:

Notice the destination has a /queue on it in 5.6.0  We checked the STOMP frame and its not coming from the client.

In 5.5.1 we get this result:

Received headers
s_scale => 0.001
message-id => ID:tony-desktop-53600-1338396365864-2:12:-1:1:1
d_serviceName => ModelUpload
destination => /topic/testtopic
timestamp => 1338399414341
s_modelID => 123456
expires => 0
priority => 4

In 5.6.0 we get this result:

Received headers
s_scale =>  0.001
message-id => ID:maker-55961-1338400788753-2:2:-1:1:1
d_serviceName =>  ModelUpload
destination => /queue//topic/testtopic
timestamp => 1338401617112
s_modelID =>  123456
expires => 0
priority => 4



Here is the frame that was sent:

SEND
d_serviceName: ModelUpload
s_modelID: 123456
s_scale: 0.001
destination: /topic/testtopic

test


---
I suspect its something in the FrameTranslator, digging in there.  , Why not try and reproduce it with a JUnit test?  There's already a large number of them in StompTest.java to work from., I will.  Just getting my head around the problem, so far we're learning stomp from the php client.  , The issue is with STOMP clients that put spaces after values as in destination: /topic/test

The convert destination method in LegacyFrameTranslator does a startsWith("/topic") to detect topics.  

The fuse stomp php client puts a space on items.  My read of the stomp spec shows examples without it.  But it doesn't really make it clear.  We're looking around at a few other clients to see what they do.

If its common of clients then it might make sense to deal with it on the server.  The other php stomp client does not put spaces in its values.  

I can easily make a junit test for this case if you want it, but I kinda expect this will be labeled under "client error" or maybe incomplete spec language(my pet peeve).  , I found this language in the STOMP specification under Value Encoding:

The STOMP 1.0 specification included many example frames with padding in the headers and many servers and clients were implemented to trim or pad header values. This causes problems if applications want to send headers that SHOULD not get trimmed. In STOMP 1.1, clients and servers MUST never trim or pad headers with spaces.


So I believe we should not do any space removal.  I think this ticket can be closed., Agreed the spec was a bit vague in this regard.  In 5.6 we removed the header trimming in order to not discard spaces that a client had intentionally placed there.  It might be good to at least do a test on a trimmed destination value before assuming its a queue and getting into this scenario., Fixed to attempt to find the right destination with spaces padding trimmed before falling back to the configured fallback handler.  Also updated the Stomp PHP client to not pad headers.  ]