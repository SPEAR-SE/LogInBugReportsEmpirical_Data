[I recall there are a few places where url params are applied to a bunch of components in a chain, the ones that match are removed and there is an assertion that all are consumed. So in that case, some are expected to be invalid. In that case, using info in place of error may be better.

A sanity check woud be to run the unit tests in activemq-unit-tests module (mvn test) and peek at the resulting target/activemq-test.log to see how often the error shows up., (I've found that a couple of those assertions are missing, but I've filed another issue for that (AMQ-4433). I believe there is a problem even assuming all assertions are in place.)

In the context of setProperty, properties/parameters can be invalid in two ways:

1. The property is missing on the target object. This situation happens a lot during normal initialization and works fine as is.

2. The property does exist but calling the setter throws an exception. This is the situation I believe is exceptional and should be logged. With working assertions the property/parameter will be flagged as invalid, but the exception—which contains information about why the property value is invalid—is hidden from the user, making troubleshooting harder.

For reference: https://github.com/apache/activemq/blob/trunk/activemq-client/src/main/java/org/apache/activemq/util/IntrospectionSupport.java#L160

I'll do some more research with the unit tests and get back to you.

Thanks for your time!, An example of where this swallowed Throwable produced considerable headache.

An embedded Broker's timeout options were not being set as expected. The first suspect was documentation wiki/code mismatch (FailoverTransport backoffMultiplier vs. reconnectDelayExponent), but this wasn't the real culprit: IntrospectionSupport has a static init of a third-party library, which had been missed by us while minimizing libraries for the embed. The IntrospectionSupport.setProperty() catch silently swallows the informative exception.

I would second #2, above. 
Further, I would suggest catching qualified exceptions rather than Throwable, which risks silencing possible fatal errors (OOM). 

, > Further, I would suggest catching qualified exceptions rather than Throwable [...]

I agree. Here's a {{s/Throwable/Exception/}} patch:
https://github.com/qerub/activemq/commit/0e09f1649a4cecb38476262a61f51acf578f64e3.patch

And here's an updated version of the original patch:
https://github.com/qerub/activemq/commit/2442b3311e7f069b93a619dd3a8821571d1d67b6.patch

(Remove .patch from URL for a prettier view.)

I have run the full ActiveMQ test suite with these changes and they generate no spurious log messages., patch applied with thanks in http://svn.apache.org/r1479852]