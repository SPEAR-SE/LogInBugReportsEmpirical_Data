[Added a maven project with junit tests showing the problem., I have spent a bit of time on this issue. 
The problem seems to be in org.apache.activemq.filter.DestinationMapNode.appendMatchingValues()

{code:title=DestinationMapNode.java}
public void appendMatchingValues(Set answer, String[] paths, int startIndex) {
  DestinationNode node = this;
  boolean couldMatchAny = true;
  int size = paths.length;
  for (int i = startIndex; i < size && node != null; i++) {
    String path = paths[i];
    if (path.equals(ANY_DESCENDENT)) {
      answer.addAll(node.getDesendentValues());
      couldMatchAny = false;
      break;
    }
    ...
{code}

This method iterates through the nodes and if it hits '>' descendant, it simply adds all privileges of all child nodes. 

So if the authorization config reads:
{code:xml}
<authorizationEntry topic="messages.>"
  read="admins"
  write="admins"
  admin="admins"/>
<authorizationEntry topic="messages.cat1"
  read="admins, users"
  write="admins, users"
  admin="admins, users"/>
{code} 

then this code will add the privileges of messages.cat2 to messages.>, as in its internal representation "messages.cat2" is a subnode of "messages.>".
This privilege inheritance does not look correct to me. 

Should it instead not only grant the priviliges defined explicitly for "messages.>"? , Attaching a possible patch including JUnit tests that are based on the tests uploaded by Thorsten Parnitz.

With this patch privileges of subnodes are not added.  , Ran the included tests against a 5.12-SNAPSHOT build and all works as expected.  There has been some work in this area for other MQTT and related issues.  ]