[Solution is to update the producerbrokerexchange sequence on each successful send so that it is aware of duplicates at any point in the message stream., resolution in http://svn.apache.org/viewvc?view=rev&rev=1196804, The network connector case needs some special treatment. In a network connector, a single producer resends messages from multiple original producers so a single audit does not make sense as it will depends on sequence order across producers, which is not probable.
The solution for network connector producers requires querying the persistence adapter before each send. This will place additional synchronization contention on the store so if duplicates are not a problem it can be disabled. There is a new boolean {{auditNetworkProducers}} attribute on a TransportConnector that toggles the behavior. It defaults to -true- false.

Update in: http://svn.apache.org/viewvc?rev=1197203&view=rev, The default true for auditNetworkProducers needs more consideration. networkConnector audit is problematic for composite destinations and virtual topics and when conduit=false b/c the source broker generates the duplicates, independent of a producer.
When none of the above features are enabled, a vanilla network, the audit is valuable to catch the case where a reply is lost to a successful send., http://svn.apache.org/viewvc?rev=1205930&view=rev

default value for auditNetworkProducers=false such that networks with virtual topics and/or composite destinations do not regress.
Relevant test:
{code}mvn test -Dtest=SimpleNetworkTest,BrowseOverNetworkTest,TwoBrokerNetworkConnectorWildcardStaticallyIncludedDestinationTest,TwoBrokerVirtualDestDinamicallyIncludedDestTest,TwoBrokerQueueClientsReconnectTest{code}]