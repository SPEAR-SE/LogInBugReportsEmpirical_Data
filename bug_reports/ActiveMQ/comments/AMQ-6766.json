[Please provide the simplest possible unit test demonstrating the issue, Quick and dirty test. 

The first will fail because the Scheme constructor being called with -1 as port from HttpsClientTransport.

{code:java}
package org.apache.activemq.bugs;

import static org.junit.Assert.fail;

import javax.jms.Connection;
import javax.jms.JMSException;

import org.apache.activemq.ActiveMQConnectionFactory;
import org.junit.Test;

public class AMQ6766Test {

	@Test
	public void https_broker_url_without_port_number() throws JMSException {
		ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("https://localhost");
		try {
			Connection connection = connectionFactory.createConnection();
		} catch (JMSException e) {
			if (e.getCause() instanceof IllegalStateException && "Failure trying to create scheme registry"
					.equals(e.getCause().getMessage()) && "Port is invalid".equals(e.getCause().getCause().getMessage())) {
				fail();
			}
		}
	}

	@Test
	public void https_broker_url_with_port_number() throws JMSException {
		ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory("https://localhost:123");
		try {
			Connection connection = connectionFactory.createConnection();
		} catch (JMSException e) {
			if (e.getCause() instanceof IllegalStateException && "Failure trying to create scheme registry"
					.equals(e.getCause().getMessage()) && "Port is invalid".equals(e.getCause().getCause().getMessage())) {
				fail();
			}
		}
	}

}
{code}
, All the transport types require and explicit port definition, this is by design as the user should be aware of what they are connecting to, none of the transport types assume a default port.  It's rather unlikely that an ActiveMQ broker will be sitting on the default HTTP port on most systems in any case.  ]