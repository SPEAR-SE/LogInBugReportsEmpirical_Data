[Hi Frik

I don't think this is actually a problem with ActiveMQ -its more an effect of a different threading/scheduler implementation on Linux versus Windows. i.e. you have a thread which is attempting to send a message on a connection that another thread has closed. It doesn't look like any kind of bug in ActiveMQ - if its really an issue we can reopen this  - but its looking like a multi-threaded programming bug in the application code I think?, 
The problem is that I am not closing the connection.  This is the problem:

> INFO: ActiveMQ Message Broker (ID:os4.gatherplace.com-32773-1121729492019-0:0) is shutting down
> Jul 19, 2005 7:41:34 AM org.activemq.broker.impl.BrokerContainerImpl deregisterConnection
> INFO: Removing client: gwjmsproducer on transport: TcpTransportChannel: Socket[addr=/127.0.0.1,port=60733,localport=61616]
> Jul 19, 2005 7:41:35 AM org.activemq.transport.tcp.TcpTransportChannel doClose

Because ActiveMQ decides to shut down the broker for some unknown reason, all subsequent sends fail.

From the time stamps this connection is not closed until the first message is ready to be sent.  So this connection has been open for a few minutes without a problem.  Then mysteriously just before the first message is to be sent, ActiveMQ decides it is time to shut down the broker and close the connnection.

I am not saying that there is not a bug in my code :) but I am not closing the JMS connections - they are opened and kept open.  The code is also pretty simple and works fine on Windows.

It is interesting that the logs shows an IP address of 127.0.0.1 for the connection to be closed.  Could that be a problem?
, caused by reconnect workaround bug.  Use this instead:
reliable:tcp://host:port

see http://activemq.org/Configuring+Transports]