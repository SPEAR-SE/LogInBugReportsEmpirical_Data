[Test case reproducing the problem, This is a case of amq treating delivery as delivery to the consumer session rather than to the actual consumer implementation. In the test case, all of the 10 messages get redelivered to each consumer and they very quickly reach the default max redelivery count of 6 and get sent to the DLQ!

one solution is to configure the redelivery policy:
{code}ConnectionFactory connectionFactory =
     new ActiveMQConnectionFactory("vm://localhost?jms.redeliveryPolicy.maximumRedeliveries=100");
 {code}

An alternative is to use prefetch=0 so that each consumer will only get what it can use.

There are a bunch of related open issues on this behavior, with the wire format change in 6.0 it will be possible to address this. A subscription remove command needs to indicate to the broker the last delivered ack that it has produced. An alternative is that the subscription trys to keep track of this information (which may be simpler).

Is it ok to close this as there are so many open related issues: see: https://issues.apache.org/activemq/secure/IssueNavigator.jspa?reset=true&&query=redelivery&summary=true&description=true&body=true&type=1&pid=10520&status=1 , ps: I committed your test with a few variants. thanks,, going to bite the bullit on this and augment the close command (RemoveInfo) with a deliveredSequenceId so that the broker can determine which of the prefetched messages were actually delivered to the end consumer.
This will require some api changes in the destination which will break DestinationFilters but something has got to give. , resolved in r739008
new long attribute to RemoveInfo where the last delivered broker sequence id is passed back to the broker, prefetched messages with ids greater than this value now don't get their redelivery count incremented, requires wireformat version increment to 5 and Destination api change. Any existing DestinationFilters will need to be modified. ]