[GitHub user hzbarcea opened a pull request:

    https://github.com/apache/activemq/pull/208

    AMQ-6494 Process SHUTDOWN_INFO and REMOVE_INFO to avoid timeouts

    More details regarding this bug in jira.
    
    https://issues.apache.org/jira/browse/AMQ-6494

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/hzbarcea/activemq amq-6494

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/208.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #208
    
----
commit 197495c7fc954f187740fe59ffbc2c5a374d9b96
Author: Hadrian Zbarcea <hadrian@apache.org>
Date:   2016-11-02T14:56:37Z

    AMQ-6494 Process SHUTDOWN_INFO and REMOVE_INFO to avoid timeouts

----
, This issue is visible in tests such as DestinationBridgeAccessorsTest.

During shutdown, in BrokerService around line 2208 where JmsConnectors are stopped a few SHUTDOWN_INFO and REMOVE_INFO messages are sent. However, the transport listener in TransportConnection, checks for !brokerService.isStopping() (around line 192) and ignores and skips processing of those messages during shutdown. This causes the exceptions and 15 sec timeouts.

The PR above solves the problem. I didn't commit it just yet giving it a bit of time for review, if anybody could think of any edge case that could cause problems.

, Commit dce2b61f870245a0c12b634d12cd0fa3a8a60daa in activemq's branch refs/heads/master from [~hadrian]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dce2b61 ]

AMQ-6494 Return ExceptionResponse during broker service shutdown
, Github user asfgit closed the pull request at:

    https://github.com/apache/activemq/pull/208
, Thanks [~tabish121] for the feedback., Commit dca066287ebd7ffe465544f647e213e1c4d5744a in activemq's branch refs/heads/master from [~cshannon]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=dca0662 ]

https://issues.apache.org/jira/browse/AMQ-6494

Ignoring test that currently fails. The parent test is already ignored
in the build so I'm adding this one to be ignored as well.  It
currently fails on exceptions that are expected and needs to be fixed.
, I ignored a test failure that seemed to be caused by this patch.  The test itself is the issue and needs to be fixed as it is failing on errors that are now expected so I went ahead and ignored the test for now.  It's just failing for level db as the parent test that runs on KahaDB has already been ignored., There are a few tests in the activemq.all set that fail (65+ runs) with this change. 
I peeked at one, org.apache.activemq.bugs.AMQ2149Test and the failure results in a brokerstopped jms exception bubbling up to the client with the changes. Without the changes the IOException from a disconnect is being handled under the covers by failover: which does a resend.

The fix is to have the app handle that JMS exception which is really a behaviour change. I wonder if there is some middle ground here that will solve the original problem but not change the behaviour and keep those existing failover tests working?
Fixing the test is accepting this new behaviour which may come as a surprise to existing users.

https://builds.apache.org/job/ActiveMQ-Java8-All-UnitTests/org.apache.activemq$activemq-unit-tests/633/testReport/, I agree with [~gtully] that this should probably be revisited so I'm reopening the issue., reverted https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=0f7561e85ab18912ce65120dde465aef5acda12a and added a fix to the vm transport such that it won't ignore exceptions. I think that is the root cause of the original test delay on stop via the shutdown hook.

https://git-wip-us.apache.org/repos/asf?p=activemq.git;a=commit;h=729766e4925ec05ec05410887df146dd27adbbf4
, Commit 63b2e5c4eabfbdc54ff6ebb155092f7033e7bf22 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=63b2e5c ]

[AMQ-6494] fix check order of close state for  onException handler
, Resolving based off of Gary's commit]