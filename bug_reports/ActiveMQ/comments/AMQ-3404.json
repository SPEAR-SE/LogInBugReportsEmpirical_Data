[The correct fix is to use a QueryViewMbean:

//                        List messages = JmxMBeansUtil.createMessageQueryFilter(createJmxConnection(), queueName).query(queryAddObjects);
//                        purgeMessages(queueName, messages);
						QueueViewMBean proxy = (QueueViewMBean) MBeanServerInvocationHandler
								.newProxyInstance(createJmxConnection(),
										queueName, QueueViewMBean.class, true);
						int removed = 0;
						for (String remove : queryAddObjects) {
							removed = proxy.removeMatchingMessages(remove);
							context.printInfo("Removed: " + removed
									+ " messages for msgsel" + remove);
						}
                    }
A patch and test is forthcoming, but -xmsgsel will not work with this patch, Patch to fix this issue, with a test cases that fails before and passes afterwards.

License on test code comes from copying other test code, specifically org.apache.activemq.network.jms.QueueBridgeTest, Patch applied with svn revision 1149095. Thanks!, This works for me, and is complete., reopen to set fix version to 5.6, closing again with correct fix version, I need to reopen this bug.

The proposed fix has a problem. When multiple message selector criteria are specified using a comma separated list, as in 
{code}
--msgsel "JMSMessageID='*:10',JMSPriority>5"
{code}

then the current fix maps the criteria using an OR logical operator as this code shows:

{code:title=PurgeCommand.java}
protected void runTask(List<String> tokens) throws Exception {
  ...
  for (String remove : queryAddObjects) {
	removed = proxy.removeMatchingMessages(remove);
	context.printInfo("Removed: " + removed
		+ " messages for msgsel" + remove);
  }
  ...
}
{code}
This code iterates through each message selector criteria and removes the messages that matches each criteria individually.

Instead comma separated selector criteria should be treated as an AND operator. The usage output for activem-admin purge -help and activemq-admin browse -help suggests this and its also the way how activemq-admin browse behaves. 


Proposing a new fix including an updated TestPurgeCommand.java test.

This fix works with the ActiveMQ specific message selector syntax, e.g. 
{code}
   --msgsel "JMSMessageID='*:10',JMSPriority>5"
{code}
but also with an SQL92 syntax specified on command line, e.g. 
{code} 
   --msgsel "(JMSMessageID='*:10') AND (JMSPriority>5)"
{code}, Attaching a possible fix in AMQ-3404.patch and would like to get some confirmation that this solution is good before I commit this fix.

Any feedback appreciated.
, This patch looks OK to me, Looks good to me.  I missed the sql92, and the , operator when I first did this., Fixed in revision 1215056.]