[I don't really understand the problem. Message Groups are designed so that a single thread processes all messages of the same group. If you don't want that, don't use message groups.

If you want to allow concurrent processing (multiple threads processing the same message group) then you need to use something else.

A fix for your problem would be to just use a separate background thread to do the long operation so that the caller can cancel the operation.

e.g.

foo.startLongOperation();

// the above returns without blocking

foo.cancelLongOperation();

That way you can use message groups, Closed for now as this bug is an effect of the design of Message Groups - they are meant to implement single-threaded processing of a single message group., Makes sense. I'll use the pooled executor from the concurrent library.]