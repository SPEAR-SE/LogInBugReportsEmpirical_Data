[Note: two classes in the file, BTW it seems the problem is with transacted and CLIENT_ACK. With non-transacted session, it gets to 500 msg/s. But I don't understand why.
, OK, I found out the direct cause. The default amqPersistence store somehow slows to a hell.

After I change the persistence adaptor to

        <persistenceAdapter>
	    <kahaPersistenceAdapter directory="activemq-data" maxDataFileLength="33554432"/>
            <!--amqPersistenceAdapter syncOnWrite="false" directory="${activemq.base}/data" maxFileLength="20 mb"/-->
        </persistenceAdapter>

The performance number goes up to the roof -- 1000 msg/s.

cleaning out the old data/ directory content wouldn't help the poor amq persistence store either., use of a transaction has an impact because a transaction boundary needs to be accompanied with a disk write and disk sync. 5.1 did not honor the need to do a disk sync on a transaction boundary and hence it is faster in this regard. 5.2 does the right thing.
Transactions will help if you do batch updates, but the overhead of transaction demarcation is noticeable when there is a a small amount of activity (like one message send or consume) in the transaction., Transaction is needed if several messages are sent together. 

But why does the Kaha store (w/ 5.2) work much faster? In any case, 23 msg/s in transact mode seems too slow.  A database can beat it easily.


, Any comment and feedback on this bug?, I have a similar performance problem using ActiveMQ via Spring 2.5.6.
Due to performance issues, I created a load-test for evaluation of the messaging performance:

The test basically sends 1000 messages which are later retrieved by 100 simultaneous consumers.
Each consumer waits 1 sec before returning the acknowledgement - every 10th consumer waits 10 secs.

Theoretically, all messges should be successfully handled in ~20secs.
With ActiveMQ 5.1, it takes ~50secs, but with 5.2 it's even slower (90secs).

This is strange because the server and consumer configuration has not changed.
Switching from AmqPersistance to KahaPersistance has no effect either.
BTW, currently there is no TransactionManager used.

Any ideas where to start looking? - Thx.
, Ran test case against 5.3 - got throughput of 615.38464msg/s]