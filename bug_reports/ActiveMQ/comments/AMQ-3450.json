[Do you have a sample that can demonstrate the issue?  Do you send a receipt request in the ack message and wait for that to arrive before closing your connection?  , I will try to get a sample ready asap.

Right now we only do acknowledge like this : 
$stomp_obj->ack({frame => $last_msg_frame});
$stomp_obj->disconnect();

How exactly do I send a receipt request in the ack message? I will try this as well., Give the Stomp 1.0 spec a read through, specifically the section called Standard Headers.  
http://stomp.github.com/stomp-specification-1.0.html, Client listener file., Thanks Tim. That was very helpful.

Waiting for ack receipt before disconnecting solved the issue.

However, even after sending the ack, the dequeue count never changes. Is this is a known issue?
I have attached my client code for your reference.

Once again thanks for helping me solve the problem., Your client Id doesn't match your subscription name.  
https://activemq.apache.org/stomp.html
, Yup had tried that too, even that did not work. Dispatch count changes but dequeue count still down at 0.
Attaching the modified client script., Client listener script., This is correct, the dequeue count should be zero for topic destinations., But Tim, when enqueue count gives the number messages that were sent to the destination, then  shouldn't the dequeue count give the number of messages that have been removed from the destination? 

If I understood the count's right, then this is the only count which would reflect the messages that have been ackd by the client(s) and removed by the broker, isn't it?
If not, can you please let me know if there is any other way I can find the equivalent of dequeue count using admin query?, This is the expected behavior at present.  There's an open issue related to that AMQ-3158 which you can vote on, or better yet, dive in and see if you can come up with a patch to fix the issue.  , Fixed by adding a wait for receipt on the last message sent so that all messages get processed before the socket is broken.  ]