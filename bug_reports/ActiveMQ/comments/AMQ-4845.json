[Spring framework 3.2.4 used., This is not a bug, its working as designed.  You cannot rely on the timed receive calls to always return a message, especially with such a short delay.  These care are no polling, if a message is available on the client side or the broker sends one down before the timeout then you'd get it.  When using timed receive calls you must code defensively as you have no guarantee that you will get a message.  , working as designed. , Is this the expected behavior also when there are messages pending in the queue?
I have the same issue when calling ActiveMQMessageConsumer.receiveNoWait() .
The only way I found to fetch a preexisting message (or fail with null if there is none) is by calling receive with param timeout >> 1. i.e. receive(100L)

, The timed and no wait variants of the receive call provide zero guarantee that a message is returned no matter how many are pending on the queue at the Broker, there must be a message already waiting on the client side prefetch fir these methods to return anything.  ]