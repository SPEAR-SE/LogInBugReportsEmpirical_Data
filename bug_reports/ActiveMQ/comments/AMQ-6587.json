[There is some locking in RegionBroker using inactiveDestinationsPurgeLock. This does not cover addDestination which is probably intentional b/c it uses the shared destination map which allows for concurrent access. However new destinations are added to the map before matching subs are added. Which causes a race between gc and the addition of wildcard subscriptions. Adding subs before adding to the destination map looks like the simplest fix.
, The fix for AMQ-6188  which resets lastActiveTime on publish/send helps mitigate the problem but does not fully resolve it., Commit e415d2921ec7eabeccdf7db4d1850caa68486de3 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e415d29 ]

[AMQ-6587] ensure subs added to new destination before destination is exposed in the destination map. sort gc contention with wildcard subs and anonymous publish. fix and test
, Commit 64b3203713161ee0dd5d8d1dbd74f4c4602f546c in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=64b3203 ]

[AMQ-6587] - fix typo in test that needs 1.7 final
, Commit 95dc0eba2b93232c60a1f4aa7ed319eff69d6a1d in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=95dc0eb ]

[AMQ-6587] ensure subs added to new destination before destination is exposed in the destination map. sort gc contention with wildcard subs and anonymous publish. fix and test

(cherry picked from commit e415d2921ec7eabeccdf7db4d1850caa68486de3)
, Commit 8af72c2157dd570172acb744c56602b8b0a786ef in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=8af72c2 ]

[AMQ-6587] - fix typo in test that needs 1.7 final

(cherry picked from commit 64b3203713161ee0dd5d8d1dbd74f4c4602f546c)
, This warn/error can also appear when a wildcard sub arrives during the gc process, Commit 0ee4f5b84302daf8901363556d038e274c2defd5 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0ee4f5b ]

[AMQ-6587] additional contention window with new sub while gc is in progress - need to verify new sub is actually subscribed to the candidate for deletion. Fix and test
, [~cshannon] note the additional fix for a second variant of this problem, Commit 2d4fb4cbabb27f7fbb9ef5a86fa310d9741393c3 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=2d4fb4c ]

[AMQ-6587] additional contention window with new sub while gc is in progress - need to verify new sub is actually subscribed to the candidate for deletion. Fix and test

(cherry picked from commit 0ee4f5b84302daf8901363556d038e274c2defd5)
, [~gtully], got it, thanks for the heads up., Commit d86c98a68772aaa879e6a573fed1ab8382568c9e in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=d86c98a ]

[AMQ-6587] - fix root cause of deletion candidate seeing sub. contention between adding sub to dests and adding dests to sub, also removing sub from dests twice could leave dest stat negative allowing invalid candidate for gc
, Commit 727000f112b81aa3ca34087ee44a641b1d5088f6 in activemq's branch refs/heads/activemq-5.14.x from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=727000f ]

[AMQ-6587] - fix root cause of deletion candidate seeing sub. contention between adding sub to dests and adding dests to sub, also removing sub from dests twice could leave dest stat negative allowing invalid candidate for gc

(cherry picked from commit d86c98a68772aaa879e6a573fed1ab8382568c9e)
, note: the root cause could result in a wildcard sub missing a newly created destination, one created by an *anonymous* publish that coincides with the subscription creation. the check in destination gc exposed this window.]