[Lets get this fixed for the next release., We're seeing a similiar problem, and wanted to see if this is the same issue.   

We have two web apps in Tomcat 2.2.9 that use JMS connections on Linux Red Hat 4.  We were using ActiveMQ3.0, things were fine, and now we're testing with ActiveMQ 4.0 where I changed the package names (and I tried 4.0.1 with the same results) and the results are:   

the first web app starting a JMS connection works fine.  When the second web app 
tries to start a JMS connection (after successfully getting a ConnectionFactory as 
the first web app did also), it hangs.  We shut down Tomcat, leave the broker 
running, and turn on Tomcat and the first web app hangs when it tries to start a 
JMS connection and same with the second web app.  Here's the stack trace:

Thread [Thread-2] (Suspended) 

            Object.wait(long) line: not available [native method] 

            CountDownLatch(Object).wait() line: not available 

            CountDownLatch.await() line: 179 

            WireFormatNegotiator.oneway(Command) line: 73 

            MutexTransport.oneway(Command) line: 44 

            ResponseCorrelator.asyncRequest(Command, ResponseCallback) line: 68 

            ResponseCorrelator.request(Command) line: 73 

            ActiveMQConnection.syncSendPacket(Command) line: 1112 

            ActiveMQConnection.ensureConnectionInfoSent() line: 1200 

            ActiveMQConnection.start() line: 434 

            JMSUtil.getConnection(String) line: 170 

            JMSUtil.getSession(boolean, String) line: 225 

            JMSUtil.getSession(boolean) line: 193 

            SourceListener.registerForSourceTopic() line: 46 



, This issue was resolved in issue AMQ-789]