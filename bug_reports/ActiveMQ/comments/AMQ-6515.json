[GitHub user cschneider opened a pull request:

    https://github.com/apache/activemq/pull/215

    [AMQ-6515] Adding javax.inject bundle to fix the issue on feature ins…

    …tall

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/cschneider/activemq AMQ-6515

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/activemq/pull/215.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #215
    
----
commit dbdaa40967a2ccbe15112299eaf3b0169ae8a0e3
Author: Christian Schneider <chris@die-schneider.net>
Date:   2016-11-22T09:57:20Z

    [AMQ-6515] Adding javax.inject bundle to fix the issue on feature install

----
, Commit 00129837dedd010843fe19150adfbfb64e97ced8 in activemq's branch refs/heads/master from [~chris@die-schneider.net]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=0012983 ]

[AMQ-6515] Adding javax.inject bundle to fix the issue on feature install
, Thanks for the PR, Btw. this issue will not be visible in pax exam tests as pax exam installs javax.inject itself. So there this always works, Just tested with 5.14.1. The issue does not happen there. So no backport needed., Github user cschneider closed the pull request at:

    https://github.com/apache/activemq/pull/215
, the root cause of this issue was a leaked export-package of inject from guava 14. With guava 18 the export is not present and the bnd plugin does not pull it in from the transitive dependencies and it no longer exists in the imports.
activemq-osgi has no need for the dependency., Commit 59bfffd2b45db4d85b278e6b9a6d1cd13e0f0902 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=59bfffd ]

Revert "[AMQ-6515] Adding javax.inject bundle to fix the issue on feature install"
guava 14 was the culprit - activemq-osgi does not need to import javax.inject

This reverts commit 00129837dedd010843fe19150adfbfb64e97ced8.
, with guava 18, activemq-osig gets another spurious import in error.

A workaround to avoid adding to the imports:{code}
+      !com.google.thirdparty.publicsuffix,
{code}

but I need to determine the root cause, b/c I don't see what exports com.google.thirdparty.publicsuffix or why bnd figures it is necessary., Commit e3d698b9d9c5cf97f5d462ee93f7027b97868da6 in activemq's branch refs/heads/master from [~gtully]
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=e3d698b ]

[AMQ-6515] add explicit no import for ..thirdparty.publicsuffix which leaks from guava via bnd into the activemq-osgi module
, the analysis via bnd pulls in the import from the dependent jar references unless there is some -noimport or negation or other explicit direction]