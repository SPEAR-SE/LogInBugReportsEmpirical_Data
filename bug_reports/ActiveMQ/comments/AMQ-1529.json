[The error 500 occours due to the fact that is an lock on the file.
I think this happens on jetty becaus the server holds the connection for a time. And so when the message is consumed and a GET is invoked for this file the lock ois set until the connection will be closed., I have checked the error 500 in the activemq-fileserver. 
The problem is that streams are not closed when the file is uploaded on the server.

this would fix the problem
{code:title=org.apache.activemq.util.RestFilter.java}
    protected void doPut(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

        // some code missing here...

        FileOutputStream out = new FileOutputStream(file);
        try {
            IO.copy(request.getInputStream(), out);
        } catch (IOException e) {
            Log.warn(Log.EXCEPTION, e); // is this obsolete?
            throw e;
        }finally{
            out.close();
        }

        response.setStatus(HttpURLConnection.HTTP_NO_CONTENT); // we return no
                                                                // content
    }
{code}

Also in KahaMessageStore.java should be added removing the blob files when the message is removed.
, AMQ-2430 fixed this., This issue is not fixed in 5.7.0.
org.apache.activemq.command.ActiveMQBlobMessage.deleteFile() method is the only (and I suppose that advisable) way to delete the actual BLOB but it is never called from ActiveMQ classes (not even for messages marked as "deletedByBroker").
For acknowledged messages you can use simple workaround and define custom acknowledge callback that calls the delete method. But for expired messages I see no elegant way to force ActiveMQ to delete the BLOB. Marco's patch could work but it is not used in 5.7.0 release.
Is there some other way that broker deletes BLOB messages or am I right that this feature doesn't work?]