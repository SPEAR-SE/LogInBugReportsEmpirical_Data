[Actually when debug level set for broker, logs show destinations in fact are being established on both sides of the bridge.  So begs to question why responding client is informed that destination is deleted., Attachment contains 4 log files: 

Two broker logs from interconnected brokers
Log from the requestor
Log from the responder

Requestor, responder and on broker all run on host roadrash so timestamps are exact.  Timestamps for host harly broker within one second., I had this problem with 3.0 and submitted the following to the mailing list.  I was getting the same "cannot write to a deleted destination..." error. 

I think this is a bug in the way Network Message Bridges for TemporaryDestinations are named.
In my debugger, I see that the physical name of a TemporaryTopic is (for example):

> TemporaryTopic-{TD{ID:kmurphynb.alleanzasalute.it-32917-1134582426027-1:0}TD}ID:kmurphynb.alleanzasalute.it-32917-1134582426027-6:0


In a network of brokers, a network message bridge is opened from the connection which spawned this TemporaryTopic to all others in the network -- apparently sometimes using this physical name:

> 11:48:19 INFO  started NetworkMessageBridge for destination: TemporaryTopic-{TD{ID:kmurphynb.alleanzasalute.it-32917-1134582426027-1:0}TD}ID:kmurphynb.alleanzasalute.it-32917-1134582426027-6:0 -- NetworkChannel: NetworkChannel{ , uri = 'reliable:tcp://localhost:61617' , remoteBrokerName = 'node2'  }


and other times prefaced with the class name:

> 11:49:37 INFO  started NetworkMessageBridge for destination: ActiveMQ.Advisory.TempDestinations.temp-topic.TemporaryTopic-{TD{ID:kmurphynb.alleanzasalute.it-32924-1134582576664-1:0}TD}ID:kmurphynb.alleanzasalute.it-32924-1134582576664-6:0 -- NetworkChannel: NetworkChannel{ , uri = 'reliable:tcp://localhost:61617' , remoteBrokerName = 'node2'  }
>
The problem is that in either case, the physical name of the TemporaryTopic is used to "validate" it.  So when I try to reply to the second TemporaryTopic shown above, I get:

> ERROR - Thread-67 cosm.cee.component.messaging.impl.jms.JMSMessagingChannel send
> javax.jms.JMSException: Cannot publish to a deleted Destination: TemporaryTopic-{TD{ID:kmurphynb.alleanzasalute.it-32924-1134582576664-1:0}TD}ID:kmurphynb.alleanzasalute.it-32924-1134582576664-6:0


Note difference in the names.

I got around this by creating a new, permanent Topic (or Queue -- I found the same problem adn solution with both TemporaryTopics and TemporaryQueues) with a random (guaranteed random in my application's scope) String for a name.  It appears that for a non-temporary Destination, the name of the destination is always used for the message bridge:

> 12:57:37 INFO  started NetworkMessageBridge for destination: 7E3829D1-6CD3-11DA-B666-CA9B35A911B1 -- NetworkChannel: NetworkChannel{ , uri = 'reliable:tcp://localhost:61617' , remoteBrokerName = 'node2'  }


In this way I get the same effect -- a unique destination, whose presence is only known to recipients of a particular message, and whose lifespan is that of it's connection.  I would prefer to use TemporaryTopics and TemporaryQueues, though.

Any thoughts? , Resolved]