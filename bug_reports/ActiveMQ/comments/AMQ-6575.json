[Mosquitto MQTT-broker provides a configuration option ('retained_persistence') to handle this., A couple of sections from the MQTT 3.1.1-spec talking about *retained* message handling.

bq. Retained messages do not form part of the Session state in the Server, they MUST NOT be deleted when the Session ends [MQTT-3.1.2.7].

bq. If the RETAIN flag is set to 1, in a PUBLISH Packet sent by a Client to a Server, the Server MUST store the Application Message and its QoS, so that it can be delivered to future subscribers whose subscriptions match its topic name [MQTT-3.3.1-5]. When a new subscription is established, the last retained message, if any, on each matching topic name MUST be sent to the subscriber [MQTT-3.3.1-6]., There was a [post|http://activemq.2283324.n4.nabble.com/Publish-Retained-MQTT-Message-issue-tt4686326.html#none] on mailing list that could help:
{quote}
We did some performance test based on ActiveMQ 5.10, found publish mqtt message with retain enabled is much faster than disable retain.

And I also tested the retained message will be lost after restart activemq node.

Checked the source code,the line#621 in class "org.apache.activemq.transport.mqtt.MQTTProtocolConverter" is confusing,
 msg.setPersistent(command.qos() != QoS.AT_MOST_ONCE && !command.retain());

Should it be following logic?
msg.setPersistent(command.qos() != QoS.AT_MOST_ONCE || command.retain());

Based on MQTT Spec : http://public.dhe.ibm.com/software/dw/webservices/ws-mqtt/mqtt-v3r1.html
Retained messages should be kept over restarts of the server. 
{quote}

The issue seems to be critical to me. You can't rely on the whole retain-feature unless your broker is never down or you need a workaround like peridic republishing of messages by the clients., [~meth] I was in that area of the code today and came to the same conclusion but then thinking more I think the durability of the message, whether it is persistent or not, needs to come from the publish QoS.

I am thinking the code should be:
{code:java}
msg.setPersistent(command.qos() != QoS.AT_MOST_ONCE);{code}
ie: the retain flag does not effect the durability of the message, just that it gets retained for that topic.

 

with this change, retain messages with qos > 0 will survive a restart for existing durable subscribers or virtual topic queues. retain with qos == 0 will not.

 , Commit 919ca96cee67d7ceed06a5cc542628ddc21841e2 in activemq's branch refs/heads/master from gtully
[ https://git-wip-us.apache.org/repos/asf?p=activemq.git;h=919ca96 ]

AMQ-6575 - take message durability from publish qos for retained messages, fix and test
]