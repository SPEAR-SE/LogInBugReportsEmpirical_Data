[Here is our configuration:

<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>file:${activemq.conf}/credentials.properties</value>
        </property>
    </bean>
    <bean id="logQuery" class="io.fabric8.insight.log.log4j.Log4jLogQuery"
      lazy-init="false" scope="singleton"
      init-method="start" destroy-method="stop">
    </bean>
    <broker xmlns="http://activemq.apache.org/schema/core" brokerName="prd1-activemq-1b-2" dataDirectory="${activemq.data}" persistent="false">
        <networkConnectors>
                <networkConnector name="linkToprd1-activemq-1b-1-1"
                        uri="static:(tcp://10.35.96.181:61616)"
                        networkTTL="3" >
                        <dynamicallyIncludedDestinations>
                            <queue physicalName="Consumer.*.VirtualTopic.>"/>
                            <queue physicalName="Consumer.*.cloud.xirrus.com.VirtualTopic.>"/>
                            <queue physicalName="ReportGeneratorService"/>
                            <queue physicalName="ReportGeneratorService.>"/>
                            <topic physicalName=">"/>
                        </dynamicallyIncludedDestinations>
                    </networkConnector>
      </networkConnectors>
        <destinationPolicy>
            <policyMap>
              <policyEntries>
                <policyEntry topic=">" >
                  <pendingMessageLimitStrategy>
                    <constantPendingMessageLimitStrategy limit="1000"/>
                  </pendingMessageLimitStrategy>
                </policyEntry>

    <policyEntry queue="ServerDeviceDataService" memoryLimit="700mb" producerFlowControl="false" />
    <policyEntry queue=">" memoryLimit="100mb" queuePrefetch="500" producerFlowControl="false" />
              </policyEntries>
            </policyMap>
        </destinationPolicy>
        <managementContext>
            <managementContext createConnector="false"/>
        </managementContext>
 <persistenceAdapter>
  <mKahaDB directory="${activemq.base}/data/kahadb">
    <filteredPersistenceAdapters>
      <filteredKahaDB queue="Server.>">
        <persistenceAdapter>
          <kahaDB enableJournalDiskSyncs="false"/>
        </persistenceAdapter>
      </filteredKahaDB>
      <filteredKahaDB queue=">">
        <persistenceAdapter>
          <kahaDB journalMaxFileLength="64mb"/>
        </persistenceAdapter>
      </filteredKahaDB>
      <filteredKahaDB topic="ActiveMQ.Advisory.>">
        <persistenceAdapter>
          <kahaDB  enableJournalDiskSyncs="false" enableIndexWriteAsync="true"/>
        </persistenceAdapter>
      </filteredKahaDB>

      <filteredKahaDB>
        <persistenceAdapter>
          <kahaDB />
        </persistenceAdapter>
      </filteredKahaDB>
    </filteredPersistenceAdapters>
  </mKahaDB>
 </persistenceAdapter>
          <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage percentOfJvmHeap="80" />
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit="60 gb"/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit="25 gb"/>
                </tempUsage>
            </systemUsage>
        </systemUsage>
        <transportConnectors>
            <transportConnector name="openwire" uri="nio://0.0.0.0:61616?wireformat.maxFrameSize=1703936"/>
        </transportConnectors>
        <shutdownHooks>
            <bean xmlns="http://www.springframework.org/schema/beans" class="org.apache.activemq.hooks.SpringContextHook" />
        </shutdownHooks>

        <plugins>
                <discardingDLQBrokerPlugin dropAll="true" dropTemporaryTopics="true" dropTemporaryQueues="true" />
        </plugins>
    </broker>
    <import resource="jetty.xml"/>
</beans>
, Latest release in 5.14.4 which you should try, if you still see the issue then we'd need a reproducer to investigate ]