[BTW, I am in production right now with this system and it would be hard to change to another version (like 5.1.0 or more)... but if there is no other choice, I will do it., can you post the broker logs from about this time. It looks like the jboss (activenq client) side it getting an abortive close. Hopefully the broker logs will have some more context., I did not get any error on ActiveMQ server..., I am seeing this on a master-slave setup.
slave will have this exception after the setup is running for a while and it will cause master to shutdown if shutdownOnSlaveFailure=true.

org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: /ip:port
        at org.apache.activemq.transport.InactivityMonitor$5.run(InactivityMonitor.java:164)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        at java.lang.Thread.run(Thread.java:619)
, Hi,

i also got this error however I am using activemq 5.2 with camel 1.6. My application was running for about a day and a half

2009-03-22 05:51:30,582 [                      Thread-0] AdvisoryConsumer               INFO  Failed to send remove command: javax.jms.JMSException: Channel was inactive for too long: berin
t/192.168.222.34:61616
javax.jms.JMSException: Channel was inactive for too long: berint/192.168.222.34:61616
        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
        at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1216)
        at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1208)
        at org.apache.activemq.AdvisoryConsumer.dispose(AdvisoryConsumer.java:56)
        at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:599)
        at org.apache.activemq.pool.ConnectionPool.close(ConnectionPool.java:126)
        at org.apache.activemq.pool.ConnectionPool.expiredCheck(ConnectionPool.java:164)
        at org.apache.activemq.pool.ConnectionPool.decrementReferenceCount(ConnectionPool.java:144)
        at org.apache.activemq.pool.PooledConnection.close(PooledConnection.java:71)
        at org.springframework.jms.connection.ConnectionFactoryUtils.releaseConnection(ConnectionFactoryUtils.java:81)
        at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:478)
        at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:548)
        at org.apache.camel.component.jms.JmsProducer.process(JmsProducer.java:227)
        at org.apache.camel.impl.converter.AsyncProcessorTypeConverter$ProcessorToAsyncProcessorBridge.process(AsyncProcessorTypeConverter.java:43)
        at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:75)
        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:63)
        at org.apache.camel.processor.DeadLetterChannel.process(DeadLetterChannel.java:172)
        at org.apache.camel.processor.DeadLetterChannel.process(DeadLetterChannel.java:93)
        at org.apache.camel.processor.Pipeline.process(Pipeline.java:115)
        at org.apache.camel.processor.Pipeline.process(Pipeline.java:89)
        at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:63)
        at org.apache.camel.processor.UnitOfWorkProcessor.process(UnitOfWorkProcessor.java:47)
        at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:41)
        at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:66)
        at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:47)
        at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:151)
        at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:88)
        at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:85)
        at org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:102)
        at org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:108)
        at com.ee.eventgenerator.FlightManager.processArtificialEvents(FlightManager.java:586)
        at com.ee.eventgenerator.FlightsScanner.run(FlightsScanner.java:213)
        at java.lang.Thread.run(Thread.java:619)
Caused by: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: berint/192.168.222.34:61616
        at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:225)
        at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:83)
        at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:100)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1214)
        ... 31 more

The application does not recover and a restart is required, scanned this issue again pre 5.4 and it looks like the exception thrown from the ActiveMQ RA cleanup method should be handled by the RA contract and the connection should be removed from the pool. It does not appear as if activemq is doing anything wrong in this case short of reporting an exception that says it cannot cleanup an already closed or shutdown connection.]