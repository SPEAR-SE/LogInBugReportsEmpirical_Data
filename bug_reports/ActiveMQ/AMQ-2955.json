{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Dejan Bosanac",
            "key": "dejanb",
            "name": "dejanb",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dejanb",
            "timeZone": "Europe/Berlin"
        },
        "components": [{
            "id": "12313895",
            "name": "Message Store",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12313895"
        }],
        "created": "2010-10-01T16:46:53.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Peter Blackburn",
            "key": "pblackburn",
            "name": "pblackburn",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pblackburn",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310041": null,
        "customfield_12310080": null,
        "customfield_12310220": "2010-10-12T10:41:17.854+0000",
        "customfield_12310222": "1_*:*_1_*:*_17265735608_*|*_5_*:*_1_*:*_0",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "3.0",
        "customfield_12310420": "14832",
        "customfield_12310920": "59571",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0akcv:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Apr 19 12:49:08 UTC 2011",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "Using the following test client, we see a single message getting stuck on the queue. This then prevents the KahaDB files from being cleaned up. Once this message gets stuck, we need to restart the broker before it can be consumed. This is a total show stopper for us, as when this occurs in our system the large number of messages that we produce and consume each second causes the disk to run out of space within the space of an hour. We also see the same behaviour using synchronous sending and without failover.\n\nThis doesn't happen every time with the test client - the most reliable way I have found to reproduce it is to start the broker and wait for the first MessageDatabase checkpoint to finish before starting the test client. \n\n{code:title=Test Client}\nimport java.io.BufferedWriter;\nimport java.io.FileWriter;\nimport java.util.Random;\n\nimport javax.jms.Connection;\nimport javax.jms.Message;\nimport javax.jms.MessageConsumer;\nimport javax.jms.MessageListener;\nimport javax.jms.MessageProducer;\nimport javax.jms.Queue;\nimport javax.jms.Session;\nimport javax.jms.ConnectionFactory;\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\n\npublic class Test {\n        public static final void main(String[] args) throws Exception {\n                ConnectionFactory cf = new ActiveMQConnectionFactory(\"failover:(tcp://localhost:61616)?jms.useAsyncSend=true&trackMessages=true\");\n                final Connection producerConn = cf.createConnection();\n                final Connection consumerConn = cf.createConnection();\n\n                final BufferedWriter producerLog = new BufferedWriter(new FileWriter(\"produced.log\"));\n                final BufferedWriter consumerLog = new BufferedWriter(new FileWriter(\"consumed.log\"));\n\n                new Thread(new Runnable() {\n                        public void run() {\n                                try {\n                                        producerConn.start();\n                                        Session session = producerConn.createSession(false, Session.CLIENT_ACKNOWLEDGE);\n                                        Queue queue = session.createQueue(\"TEST_QUEUE\");\n                                        MessageProducer producer = session.createProducer(queue);\n                                        Random random = new Random();\n                                        byte[] messageBytes = new byte[1024];\n\n                                        for (int i = 0; i < 100000; i++) {\n                                        //while (true) {\n                                                random.nextBytes(messageBytes);\n                                                Message message = session.createObjectMessage(messageBytes);\n                                                producer.send(message);\n                                                producerLog.write(message.getJMSMessageID());\n                                                producerLog.newLine();\n                                                producerLog.flush();\n                                        }\n                                        System.out.println(\"Produced 100000 messages...\");\n                                        producerLog.close();\n                                }\n                                catch (Exception e) {\n                                        e.printStackTrace();\n                                }\n                        }\n                }).start();\n\n                System.out.println(\"Started producer...\");\n\n                new Thread(new Runnable() {\n                        public void run() {\n                                try {\n                                        consumerConn.start();\n                                        Session session = consumerConn.createSession(false, Session.CLIENT_ACKNOWLEDGE);\n                                        Queue queue = session.createQueue(\"TEST_QUEUE\");\n                                        MessageConsumer consumer = session.createConsumer(queue);\n                                        consumer.setMessageListener(new MessageListener() {\n                                                public void onMessage(Message message) {\n                                                        try {\n                                                                message.acknowledge();\n                                                                consumerLog.write(message.getJMSMessageID());\n                                                                consumerLog.newLine();\n                                                                consumerLog.flush();\n                                                        }\n                                                        catch (Exception e) {\n                                                                e.printStackTrace();\n                                                        }\n                                                }\n                                        });\n                                }\n                                catch (Exception e) {\n                                        e.printStackTrace();\n                                }\n                        }\n                }).start();\n\n                System.out.println(\"Started consumer...\");\n        }\n}\n{code}\n\nAfter the 100,000 messages have been produced, we can see the following difference in the log files:\n\n{noformat}\n[pblackburn@xxxx test]$ diff produced.log consumed.log\n10394d10393\n< ID:xxxx-35451-1285948546531-0:0:1:1:10394\n[pblackburn@xxxx test]$\n{noformat}\n\nLooking in the activemq log file, at around this point we see:\n\n{noformat}\n2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 205, pagedInMessages.size 349, enqueueSize: 10390\n2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 205, pagedInMessages.size 350, enqueueSize: 10391\n2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 205, pagedInMessages.size 351, enqueueSize: 10392\n2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 205, pagedInMessages.size 352, enqueueSize: 10393\n2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 69% of available memory, to: 70% of available memory\n2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 70% of available memory, to: 69% of available memory\n2010-10-01 15:55:51 AbstractStoreCursor [DEBUG] TEST_QUEUE disabling cache on size:0, lastCachedIdSeq: 10398 current node seqId: 10399\n2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 69% of available memory, to: 70% of available memory\n2010-10-01 15:55:51 Queue [DEBUG] TEST_QUEUE toPageIn: 2, Inflight: 353, pagedInMessages.size 353, enqueueSize: 10395\n2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 70% of available memory, to: 69% of available memory\n2010-10-01 15:55:51 Usage [DEBUG] Main:memory:queue://TEST_QUEUE:memory: usage change from: 69% of available memory, to: 70% of available memory\n{noformat}\n\nAt the end of the log file, where we have a single message stuck on the queue, we see:\n\n{noformat}\n2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000\n2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000\n2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000\n2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000\n2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000\n2010-10-01 15:56:10 Queue [DEBUG] TEST_QUEUE toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueSize: 100000\n{noformat}\n\nWe can see the checkpoint failing to clean up the log files:\n\n{noformat}\n2010-10-01 15:56:36 MessageDatabase [DEBUG] Checkpoint started.\n2010-10-01 15:56:36 MessageDatabase [DEBUG] not removing data file: 2 as contained ack(s) refer to referenced file: [1, 2]\n2010-10-01 15:56:36 MessageDatabase [DEBUG] not removing data file: 3 as contained ack(s) refer to referenced file: [2, 3]\n2010-10-01 15:56:36 MessageDatabase [DEBUG] not removing data file: 4 as contained ack(s) refer to referenced file: [3, 4]\n2010-10-01 15:56:36 MessageDatabase [DEBUG] not removing data file: 5 as contained ack(s) refer to referenced file: [4, 5]\n2010-10-01 15:56:36 MessageDatabase [DEBUG] Checkpoint done.\n{noformat}\n\nAt this point our consumer had consumed all of the messages except the single stuck message.\n\nWe are using a clean out of the box set up - we have made no changes to the default activemq.xml file,\n\n",
        "duedate": null,
        "environment": "Red Hat Enterprise Linux 5",
        "fixVersions": [{
            "archived": false,
            "description": "",
            "id": "12315626",
            "name": "5.5.0",
            "releaseDate": "2011-04-01",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315626"
        }],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "id": "2",
            "name": "Critical",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Peter Blackburn",
            "key": "pblackburn",
            "name": "pblackburn",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pblackburn",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2011-04-19T12:49:08.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Message getting stuck on queue, leading to KahaDB log files not being deleted and disk running out of space",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2011-04-19T12:49:08.000+0000",
        "versions": [{
            "archived": false,
            "description": "Maintenance release for 5.4.0",
            "id": "12315624",
            "name": "5.4.1",
            "releaseDate": "2010-09-21",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315624"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2955/votes",
            "votes": 3
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2955/watchers",
            "watchCount": 7
        },
        "workratio": -1
    },
    "id": "12483849",
    "key": "AMQ-2955",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12483849"
}