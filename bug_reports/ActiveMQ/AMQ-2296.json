{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "percent": 0,
            "progress": 0,
            "total": 600
        },
        "aggregatetimeestimate": 600,
        "aggregatetimeoriginalestimate": 600,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "id": "12313892",
            "name": "Broker",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12313892"
        }],
        "created": "2009-06-18T10:28:29.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "RaphaÃ«l Ramirez",
            "key": "raphr",
            "name": "raphr",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=raphr",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310041": [{
            "id": "10042",
            "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10042",
            "value": "Patch Available"
        }],
        "customfield_12310080": null,
        "customfield_12310220": null,
        "customfield_12310222": "1_*:*_1_*:*_12788792248_*|*_6_*:*_1_*:*_0",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "96059",
        "customfield_12310920": "172193",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0tu5b:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Nov 13 10:55:01 UTC 2009",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "When the slave broker fails to acquire the database lock, which is the normal behavior, we have this (this exception is normal and may be caught by a ExceptionHandler to avoid filling the logs):\n\n09/06/2009 17:41:05 INFO  org.apache.activemq.broker.BrokerService  [http-8081-1] | Using Persistence Adapter: JDBCPersistenceAdaptor(app.db.ConfigurableDbcpDataSource@77baf4)\n09/06/2009 17:41:06 INFO  org.apache.activemq.store.jdbc.JDBCPersistenceAdapter  [http-8081-1] | Database driver recognized: [mysql-ab_jdbc_driver]\n12/06/2009 18:07:18 INFO  org.apache.activemq.store.jdbc.DefaultDatabaseLocker  [http-8081-1] | Attempting to acquire the exclusive lock to become the Master broker\n12/06/2009 18:09:19 ERROR org.apache.activemq.store.jdbc.DefaultDatabaseLocker  [http-8081-1] | Failed to acquire lock: java.sql.SQLException: Lock wait timeout exceeded; try restarting transaction\njava.sql.SQLException: Lock wait timeout exceeded; try restarting transaction\n...\n\nBut after 200 (=size of my DBCP connection pool) attempts, I get the following stacktrace :\n\n13/06/2009 03:56:42 ERROR org.apache.activemq.store.jdbc.DefaultDatabaseLocker  [http-8081-1] | Failed to acquire lock: org.apache.commons.dbcp.SQLNestedException: Cannot get a connection, pool error Timeout waiting for idle object\norg.apache.commons.dbcp.SQLNestedException: Cannot get a connection, pool error Timeout waiting for idle object\n\tat org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:104)\n\tat org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:880)\n\tat org.apache.activemq.store.jdbc.DefaultDatabaseLocker.start(DefaultDatabaseLocker.java:63)\n\tat org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:179)\n\tat org.apache.activemq.broker.BrokerService.start(BrokerService.java:458)\n\tat org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:52)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1369)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)\n\tat org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:255)\n\tat org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:199)\n\tat org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:45)\n\tat org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:3934)\n\tat org.apache.catalina.core.StandardContext.start(StandardContext.java:4429)\n\tat org.apache.catalina.manager.ManagerServlet.start(ManagerServlet.java:1249)\n\tat org.apache.catalina.manager.HTMLManagerServlet.start(HTMLManagerServlet.java:612)\n\tat org.apache.catalina.manager.HTMLManagerServlet.doGet(HTMLManagerServlet.java:136)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:617)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:525)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:849)\n\tat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)\n\tat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454)\n\tat java.lang.Thread.run(Thread.java:619)\nCaused by: java.util.NoSuchElementException: Timeout waiting for idle object\n\tat org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:825)\n\tat org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:96)\n\t... 42 more\n\nHere are my JDBC connection parameters :\npersistenceDatabase.url -> jdbc:mysql://xxxxxx/msgbroker?relaxAutoCommit=true\npersistenceDatabase.connectionPool.maxActive -> 200\npersistenceDatabase.connectionPool.maxWait -> 1000\npersistenceDatabase.connectionPool.maxIdle -> 10\npersistenceDatabase.connectionPool.validationQuery -> select 1\npersistenceDatabase.connectionPool.testOnBorrow -> false\npersistenceDatabase.connectionPool.testOnReturn -> false\n\nWhat happens is that a new connection is borrowed from the pool each time the slave is trying to acquire the exclusive lock, instead of using the existing connection.\nThis leads to a connection pool leak. See org.apache.activemq.store.jdbc.DefaultDatabaseLocker (line 63) :\n\nconnection = dataSource.getConnection();\n\nChanging it to the following code solved the issue :\n\n            \tif (connection==null || connection.isClosed()) {\n            \t\tconnection = dataSource.getConnection();\n                \tconnection.setAutoCommit(false);\n            \t}\n\nNow, an existing connection is used if it is available.",
        "duedate": null,
        "environment": "Windows XP or Linux (Debian 4.1) / Java 1.6  / MySQL 5.0.67 / Spring 2.5.6 / Apache Commons DBCP 1.2.2 + Commons Pool 1.3 / MySQL connector Java 5.1.7",
        "fixVersions": [{
            "archived": false,
            "description": "",
            "id": "12315620",
            "name": "5.3.0",
            "releaseDate": "2009-10-13",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315620"
        }],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "percent": 0,
            "progress": 0,
            "total": 600
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "RaphaÃ«l Ramirez",
            "key": "raphr",
            "name": "raphr",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=raphr",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "The problem is a duplicate of an existing issue.",
            "id": "3",
            "name": "Duplicate",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/3"
        },
        "resolutiondate": "2009-11-13T10:55:01.000+0000",
        "status": {
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "id": "6",
            "name": "Closed",
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Connection pool exhausted in JDBC master-slave when slave tries to acquire lock",
        "timeestimate": 600,
        "timeoriginalestimate": 600,
        "timespent": null,
        "updated": "2009-11-13T10:55:41.000+0000",
        "versions": [{
            "archived": false,
            "description": "",
            "id": "12315619",
            "name": "5.2.0",
            "releaseDate": "2008-11-20",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315619"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2296/votes",
            "votes": 1
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2296/watchers",
            "watchCount": 1
        },
        "workratio": 0
    },
    "id": "12483009",
    "key": "AMQ-2296",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12483009"
}