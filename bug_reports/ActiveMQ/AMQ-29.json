{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "id": "12313903",
            "name": "Transport",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12313903"
        }],
        "created": "2004-06-05T01:20:20.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Brian Guan",
            "key": "bguan",
            "name": "bguan",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bguan",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310041": null,
        "customfield_12310080": null,
        "customfield_12310220": "2004-06-19T00:15:26.000+0000",
        "customfield_12310222": "1_*:*_1_*:*_1205706000_*|*_6_*:*_1_*:*_0",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "48777",
        "customfield_12310920": "171965",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0tsqn:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Jun 19 00:15:26 UTC 2004",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "I am trying to get a serverless setup using multicast or JRMP as transport.\n\nI verified that Multicast works in my environment using this util: http://www.mikkle.dk/multicasttest/index.html\n\nBut I am unable to get ActiveMQ to work between 2 JVM on the same box or on different boxes.  Both producer and consumer runs without any error except that Consumer is not getting any message at all.  Furthermore, no multicast traffic can be detected on the network.\n\nI have tried activemq-1.0-M1.jar and activemq-1.0-SNAPSHOT.jar as listed on http://dist.codehaus.org/activemq/jars and also several interim builds.\n\nAttached are my 2 simple test program.  Note that I am able to get tcp protocol to work with these 2 program if I start a server.\n\n::::::::::::::::::::::::::::::::::::\n    Producer tester\n::::::::::::::::::::::::::::::::::::\n\nimport java.util.Properties;\n\nimport javax.jms.Connection;\nimport javax.jms.ConnectionFactory;\nimport javax.jms.Destination;\nimport javax.jms.Message;\nimport javax.jms.MessageProducer;\nimport javax.jms.Session;\nimport javax.naming.Context;\nimport javax.naming.InitialContext;\nimport javax.naming.Reference;\n\nimport org.codehaus.activemq.ActiveMQConnectionFactory;\nimport org.codehaus.activemq.jndi.JNDIReferenceFactory;\n\n\n/**\n * Class to test ActiveMQ Publisher\n *\n * @author $author$\n * @version $Revision$\n */\npublic class TestActiveMQProducer\n{\n    protected ConnectionFactory connFactory;\n    protected Connection sndConn;\n    protected Session sndSess;\n    protected MessageProducer producer;\n    protected Destination dest;\n\n    /**\n     * main logic\n     *\n     * @param args .\n     *\n     * @throws Exception !\n     */\n    public static void main(String[] args) throws Exception\n    {\n        TestActiveMQProducer tester = new TestActiveMQProducer();\n\n        tester.setUp();\n\n        for (int i = 0; i < 100; i++) {\n            Message msg = tester.sndSess.createTextMessage(\"Hello World!\");\n            tester.producer.send(tester.dest, msg);\n            System.out.println(\"Sent msg: \" + msg);\n            Thread.sleep(1000);\n        }\n        \n        tester.tearDown();\n    }\n\n    protected void setUp() throws Exception\n    {\n        connFactory = new ActiveMQConnectionFactory(\"multicast://224.0.0.1:8000\");     \n        //connFactory = new ActiveMQConnectionFactory(\"tcp://127.0.0.1:61616\");       \n        System.out.println(\"Created conn factory: \" + connFactory);\n        \n        sndConn = connFactory.createConnection();\n        System.out.println(\"Created conn: \" + sndConn);\n        \n        sndSess = sndConn.createSession(false, Session.AUTO_ACKNOWLEDGE);\n        System.out.println(\"Created receiveSession: \" + sndSess);\n        \n        dest = sndSess.createTopic(\"FOO\");\n        System.out.println( \"Created destination: \" + dest + \" of type: \" + dest.getClass() );\n\n        producer = sndSess.createProducer(dest);\n        sndConn.start();\n        \n        System.out.println(\"Started connections\");\n    }\n\n    protected void tearDown() throws Exception\n    {\n        sndSess.close();\n        sndConn.close();\n    }\n}\n\n\n::::::::::::::::::::::::::::::::::::\n    Consumer tester\n::::::::::::::::::::::::::::::::::::\n\nimport java.util.Properties;\n\nimport javax.jms.Connection;\nimport javax.jms.ConnectionFactory;\nimport javax.jms.Destination;\nimport javax.jms.Message;\nimport javax.jms.MessageConsumer;\nimport javax.jms.MessageListener;\nimport javax.jms.Session;\nimport javax.naming.Context;\nimport javax.naming.InitialContext;\nimport javax.naming.Reference;\n\nimport org.codehaus.activemq.ActiveMQConnectionFactory;\nimport org.codehaus.activemq.jndi.JNDIReferenceFactory;\n\n\n/**\n * Class to test ActiveMQ Subscriber\n *\n * @author $author$\n * @version $Revision$\n */\npublic class TestActiveMQConsumer implements MessageListener\n{\n    protected ConnectionFactory connFactory;\n    protected Connection rcvConn;\n    protected Session rcvSess;\n    protected MessageConsumer consumer;\n    protected Destination dest;\n\n    /**\n     * main logic\n     *\n     * @param args .\n     *\n     * @throws Exception !\n     */\n    public static void main(String[] args) throws Exception\n    {\n        TestActiveMQConsumer tester = new TestActiveMQConsumer();\n\n        tester.setUp();\n\n        // tester.tearDown();\n    }\n\n    protected void setUp() throws Exception\n    {\n        connFactory = new ActiveMQConnectionFactory(\"multicast://224.0.0.1:8000\");     \n        //connFactory = new ActiveMQConnectionFactory(\"tcp://127.0.0.1:61616\");     \n        System.out.println(\"Created conn factory: \" + connFactory);\n   \n        rcvConn = connFactory.createConnection();\n        System.out.println(\"Created conn: \" + rcvConn);\n        \n        rcvSess = rcvConn.createSession(false, Session.AUTO_ACKNOWLEDGE);\n        System.out.println(\"Created receiveSession: \" + rcvSess);\n        \n        dest = rcvSess.createTopic(\"FOO\");\n        System.out.println( \"Created destination: \" + dest + \" of type: \" + dest.getClass() );\n            \n        consumer = rcvSess.createConsumer(dest);\n        consumer.setMessageListener(this);\n        rcvConn.start();\n        \n        System.out.println(\"Started connections\");\n    }\n\n    protected void tearDown() throws Exception\n    {\n        rcvSess.close();\n        rcvConn.close();\n    }\n\n    /**\n     * Got a message!\n     *\n     * @param message .\n     */\n    public void onMessage(Message message)\n    {\n        System.out.println(\"Received message: \" + message);\n    }\n}",
        "duedate": null,
        "environment": "Tested on both W2K/JDK1.4.2_04 and Linux/JDK1.4.2",
        "fixVersions": [{
            "archived": false,
            "id": "12315598",
            "name": "2.0",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315598"
        }],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Brian Guan",
            "key": "bguan",
            "name": "bguan",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bguan",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2004-06-19T00:15:26.000+0000",
        "status": {
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "id": "6",
            "name": "Closed",
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Unable to get multicast to work in severless environment",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2005-02-03T10:45:49.000+0000",
        "versions": [{
            "archived": false,
            "id": "12315592",
            "name": "1.0",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315592"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-29/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-29/watchers",
            "watchCount": 1
        },
        "workratio": -1
    },
    "id": "12481344",
    "key": "AMQ-29",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12481344"
}