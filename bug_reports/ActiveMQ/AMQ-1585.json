{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Gary Tully",
            "key": "gtully",
            "name": "gtully",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=gtully",
            "timeZone": "Etc/UTC"
        },
        "components": [{
            "id": "12313892",
            "name": "Broker",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12313892"
        }],
        "created": "2008-02-17T23:25:58.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Thomas Buckel",
            "key": "tbuckel",
            "name": "tbuckel",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tbuckel",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310041": [{
            "id": "10042",
            "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10042",
            "value": "Patch Available"
        }],
        "customfield_12310080": null,
        "customfield_12310220": "2008-03-21T15:52:45.986+0000",
        "customfield_12310222": "1_*:*_1_*:*_11644481759_*|*_5_*:*_3_*:*_4999351485_*|*_4_*:*_2_*:*_958970867",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "2.0",
        "customfield_12310420": "84520",
        "customfield_12310920": "114345",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0jxfb:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Sep 08 17:06:02 UTC 2008",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "As posted in the AMQ user forum:\nhttp://www.nabble.com/Problems-with-Pure-Master-Slave-in-AMQ-5.0.0-to15471491s2354.html#a15474769\n-------------------\nHi all,\n\nI am having trouble setting up a *stable* ActiveMQ Pure Master/Slave topology.\n\nInitially I have tried v4.1.1 which failed with an exception. I found an AMQ JIRA ticket which said that Pure/Master slave didn't work in v4.1.1.\nOk, so I switched to AMQ 5.0.0, created 2 configs (master/slave, see end of message) and ran two AMQ instances (on the same box) and most of the times my test (see below) worked, but more often I get various error messages like:\n\n- On the slave:\n\nERROR Service                        - Async error occurred: javax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:tbuckel-desktop-41814-1202886136210-0:0:565:1:1) was not in the pending list\njavax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:tbuckel-desktop-41814-1202886136210-0:0:565:1:1) was not in the pending list\n        at org.apache.activemq.broker.region.PrefetchSubscription.processMessageDispatchNotification(PrefetchSubscription.java:160)\n        at org.apache.activemq.broker.region.AbstractRegion.processDispatchNotification(AbstractRegion.java:381)\n        at org.apache.activemq.broker.region.RegionBroker.processDispatchNotification(RegionBroker.java:550)\n        at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:201)\n        at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:201)\n        at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:201)\n        at org.apache.activemq.broker.MutableBrokerFilter.processDispatchNotification(MutableBrokerFilter.java:211)\n        at org.apache.activemq.broker.TransportConnection.processMessageDispatchNotification(TransportConnection.java:450)\n        at org.apache.activemq.command.MessageDispatchNotification.visit(MessageDispatchNotification.java:77)\n        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)\n        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)\n        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:100)\n        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)\n        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:202)\n        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)\n        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)\n\n\n- After having killed the master, stopped the slave, copied the slave's data into the master's data directory various error message came up (as described in the Master/Slave recovery section), e.g. (internal) ActiveMQ topics were not available, the admin webApp showed exceptions and errors on the client.\n\nThe test I've created uses Spring 2.0.x and pumps 1000 MapMessages in a queue through Spring's JmsTempate, each message is created within its own transaction, using JmsTransactionManager and TransactionTemplate.\nThe created messages are consumed by an initially instantiated transactional DefaultMessageListenerContainer. The AMQ JARs in the test's classpath are activemq-core-5.0.0.jar, geronimo-jms_1.1_spec-1.0.jar, geronimo-jta_1.0.1B_spec-1.0.jar as I've noticed a really bad performance when only using the activemq-all-5.0.0.jar (maybe this is the problem?).\nThe test code work's without problems with OpenMQ, but I'd prefer using the nice Pure Master/Active ActiveMQ if I can get it running in a *stable* config ;)\n\nI would highly appreciate any help or suggestions. Maybe my config is wrong or I miss something essential. I've also tried a recent AMQ 5.1 SNAPSHOT which wasn't better...\n\nSee below for the small program i used to test (no unit test, behaviour appeared to be non deterministic to me and it's not so nice as i've changed it quite often)\n\nThanks in advance,\nThomas\n\n<!-- MASTER config -->\n<beans\n  xmlns=\"http://www.springframework.org/schema/beans\"\n  xmlns:amq=\"http://activemq.org/config/1.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\n  http://activemq.org/config/1.0 http://activemq.apache.org/schema/activemq-core.xsd\n  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd\">\n\n  <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\"/>\n  <broker xmlns=\"http://activemq.org/config/1.0\" brokerName=\"master\" dataDirectory=\"${activemq.base}/data\">\n    <destinationPolicy>\n      <policyMap>\n        <policyEntries>\n          <policyEntry topic=\"FOO.>\" producerFlowControl=\"false\" memoryLimit=\"1mb\">\n            <dispatchPolicy>\n              <strictOrderDispatchPolicy/>\n            <\/dispatchPolicy>\n            <subscriptionRecoveryPolicy>\n              <lastImageSubscriptionRecoveryPolicy/>\n            <\/subscriptionRecoveryPolicy>\n          <\/policyEntry>\n        <\/policyEntries>\n      <\/policyMap> \n    <\/destinationPolicy>\n\n    <transportConnectors>\n       <transportConnector name=\"openwire\" uri=\"tcp://tbuckel-desktop:7778\" />\n    <\/transportConnectors>\n\n    <networkConnectors/>\n\n    <managementContext>\n       <managementContext connectorPort=\"1100\" jmxDomainName=\"org.apache.activemq\"/>\n    <\/managementContext>\n\n  <\/broker>\n\n  <commandAgent xmlns=\"http://activemq.org/config/1.0\"/>\n\n  <jetty xmlns=\"http://mortbay.com/schemas/jetty/1.0\">\n    <connectors>\n      <nioConnector port=\"8161\" />\n    <\/connectors>\n\n    <handlers>\n      <webAppContext contextPath=\"/admin\" resourceBase=\"${activemq.base}/webapps/admin\" logUrlOnStart=\"true\" />\n    <\/handlers>\n  <\/jetty>\n<\/beans>\n\n\n<!-- SLAVE config -->\n<beans\n  xmlns=\"http://www.springframework.org/schema/beans\"\n  xmlns:amq=\"http://activemq.org/config/1.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\n  http://activemq.org/config/1.0 http://activemq.apache.org/schema/activemq-core.xsd\n  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd\">\n\n  <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\"/>\n  \n  <broker xmlns=\"http://activemq.org/config/1.0\" brokerName=\"slave\" dataDirectory=\"${activemq.base}/data-slave\"\n          masterConnectorURI=\"tcp://tbuckel-desktop:7778\">\n  \n    <destinationPolicy>\n      <policyMap>\n        <policyEntries>\n          <policyEntry topic=\"FOO.>\" producerFlowControl=\"false\" memoryLimit=\"1mb\">\n            <dispatchPolicy>\n              <strictOrderDispatchPolicy/>\n            <\/dispatchPolicy>\n            <subscriptionRecoveryPolicy>\n              <lastImageSubscriptionRecoveryPolicy/>\n            <\/subscriptionRecoveryPolicy>\n          <\/policyEntry>\n        <\/policyEntries>\n      <\/policyMap>\n    <\/destinationPolicy>\n\n    <transportConnectors>\n       <transportConnector name=\"openwire\" uri=\"tcp://localhost:7779\"/>\n    <\/transportConnectors>\n\n    <networkConnectors/>\n\n    <managementContext>\n       <managementContext connectorPort=\"1101\" jmxDomainName=\"org.apache.activemq\"/>\n    <\/managementContext>\n\n  <\/broker>\n\n  <commandAgent xmlns=\"http://activemq.org/config/1.0\"/>\n\n  <jetty xmlns=\"http://mortbay.com/schemas/jetty/1.0\">\n    <connectors>\n      <nioConnector port=\"8162\" />\n    <\/connectors>\n\n    <handlers>\n      <webAppContext contextPath=\"/admin\" resourceBase=\"${activemq.base}/webapps/admin\" logUrlOnStart=\"true\" />\n    <\/handlers>\n  <\/jetty>\n\n<\/beans>\n\n------------\nTest code:\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\nimport org.springframework.jms.connection.JmsTransactionManager;\nimport org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy;\nimport org.springframework.jms.core.JmsTemplate;\nimport org.springframework.jms.core.MessageCreator;\nimport org.springframework.jms.listener.DefaultMessageListenerContainer;\nimport org.springframework.transaction.TransactionStatus;\nimport org.springframework.transaction.support.TransactionCallbackWithoutResult;\nimport org.springframework.transaction.support.TransactionTemplate;\nimport javax.jms.*;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.concurrent.TimeUnit;\n\npublic class AnotherFailoverTest {\n\n    public static final int MESSAGES = 1000;\n\n    private final static List<BigInteger> notConsumedMessages = new ArrayList<BigInteger>(MESSAGES);\n\n    private static ConnectionFactory createCF() throws Exception {\n        ActiveMQConnectionFactory cf = new ActiveMQConnectionFactory();\n        cf.setBrokerURL(\"failover://(tcp://localhost:7778,tcp://localhost:7779)?randomize=false\");\n        return new TransactionAwareConnectionFactoryProxy(cf);\n    }\n\n    private static void send() throws Exception {\n        JmsTransactionManager transactionManager = new JmsTransactionManager();\n        transactionManager.setConnectionFactory(createCF());\n        transactionManager.afterPropertiesSet();\n\n        int i=0;\n        do {\n            i++;\n            final int number = i;\n            try {\n                final BigInteger v = new BigInteger(Integer.toString(number));\n                TransactionTemplate tt = new TransactionTemplate(transactionManager);\n                tt.execute(new TransactionCallbackWithoutResult() {\n                    protected void doInTransactionWithoutResult(TransactionStatus status) {\n                        final JmsTemplate template = new JmsTemplate(pcf);\n                        template.setSessionTransacted(true);\n                        template.afterPropertiesSet();\n                        template.send(\"testqueue\", new MessageCreator() {\n                            public Message createMessage(Session session) throws JMSException {\n                                ObjectMessage dummyMessage = session.createObjectMessage();\n                                dummyMessage.setObject(v);\n                                synchronized (notConsumedMessages) {\n                                    notConsumedMessages.add(v);\n                                }\n//                                System.out.println(\"Created message \" + number + \"(\" + notConsumedMessages.size() + \")\");\n                                return dummyMessage;\n                            }\n                        });\n                    }\n                });\n            } catch (Exception e) {\n                e.printStackTrace();\n                System.out.println(\"Error creating message \" + number);\n            }\n        } while (i < MESSAGES);\n    }\n\n    private static void setupReceiver() throws Exception {\n        JmsTransactionManager transactionManager = new JmsTransactionManager();\n        transactionManager.setConnectionFactory(createCF());\n        transactionManager.afterPropertiesSet();\n\n        final DefaultMessageListenerContainer container = new DefaultMessageListenerContainer();\n        container.setConnectionFactory(pcf);\n        container.setTransactionManager(transactionManager);\n        container.setMessageListener(new MessageListener() {\n            public void onMessage(Message message) {\n                try {\n                    ObjectMessage msg = (ObjectMessage) message;\n                    BigInteger number = (BigInteger) msg.getObject();\n                    synchronized (notConsumedMessages) {\n                        if (!notConsumedMessages.remove(number)) {\n                           System.err.println(\"Message \" + number + \" not found in list!\");\n                        } else {\n   //                        System.out.println(\"Consumed message \" + number);\n                       }\n                   }\n                } catch (JMSException e) {\n//                    e.printStackTrace();\n                    System.out.println(\"Error consuming message!\");\n                }\n            }\n        });\n        container.setSessionTransacted(true);\n        container.setDestinationName(\"testqueue\");\n        container.setExceptionListener(new ExceptionListener() {\n            public void onException(JMSException jmsException) {\n                System.err.println(jmsException);\n            }\n        });\n        container.afterPropertiesSet();\n        container.initialize();\n        TimeUnit.SECONDS.sleep(1);\n    }\n\n    public static void main(String[] args) throws Exception {\n        long start = System.currentTimeMillis();\n        setupReceiver();\n        send();\n\n        int remainingSize = 0;\n        do {\n            Thread.sleep(500);\n            synchronized (notConsumedMessages) {\n                remainingSize = notConsumedMessages.size();\n            }\n            System.out.println(\"Unconsumed \" + remainingSize + \": \" + sb);\n        } while (remainingSize > 0);\n\n        System.out.println(\"All messages consumed.\");\n        long end = System.currentTimeMillis();\n        System.out.println((end-start));\n        System.exit(0);\n    }\n\n}\n\n",
        "duedate": null,
        "environment": "Ubuntu 6.04, JDK 1.5.0_011, Spring 2.0.x",
        "fixVersions": [{
            "archived": false,
            "description": "",
            "id": "12315619",
            "name": "5.2.0",
            "releaseDate": "2008-11-20",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315619"
        }],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Thomas Buckel",
            "key": "tbuckel",
            "name": "tbuckel",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tbuckel",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2008-09-08T17:06:02.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Problems with pure master/slave configuration",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2008-09-08T17:06:02.000+0000",
        "versions": [
            {
                "archived": false,
                "description": "",
                "id": "12315614",
                "name": "4.1.1",
                "releaseDate": "2007-06-08",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12315614"
            },
            {
                "archived": false,
                "description": "",
                "id": "12315617",
                "name": "5.0.0",
                "releaseDate": "2007-12-17",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12315617"
            },
            {
                "archived": false,
                "description": "",
                "id": "12315618",
                "name": "5.1.0",
                "releaseDate": "2008-05-06",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12315618"
            }
        ],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-1585/votes",
            "votes": 4
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-1585/watchers",
            "watchCount": 4
        },
        "workratio": -1
    },
    "id": "12482653",
    "key": "AMQ-1585",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12482653"
}