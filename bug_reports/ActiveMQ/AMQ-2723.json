{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Dejan Bosanac",
            "key": "dejanb",
            "name": "dejanb",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dejanb",
            "timeZone": "Europe/Berlin"
        },
        "components": [{
            "id": "12313903",
            "name": "Transport",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12313903"
        }],
        "created": "2010-05-05T22:11:01.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Stirling Chow",
            "key": "stirlingc",
            "name": "stirlingc",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=stirlingc",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310041": [{
            "id": "10042",
            "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10042",
            "value": "Patch Available"
        }],
        "customfield_12310080": null,
        "customfield_12310220": "2010-05-06T06:46:03.822+0000",
        "customfield_12310222": "1_*:*_1_*:*_378013448_*|*_5_*:*_1_*:*_0",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "3.0",
        "customfield_12310420": "96165",
        "customfield_12310920": "159940",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0rqin:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon May 10 07:11:14 UTC 2010",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "Symptom\n========\nWe deployed ActiveMQ in a network of brokers using HTTP as the broker-to-broker transport and VM as the inter-broker transport.  Each broker uses a SimpleDiscoveryAgent with a list of HTTP URLs to potential peer brokers -- in many cases this list contains URLs for brokers that are inactive for long periods of time.  We performed a week-long test with three active brokers and 5 inactive brokers.  After one week, the active brokers began reporting OutOfMemory exceptions related to exhaused heap space (384MB max) and they stopped functioning.\n\nThe generated heap dump revealed 100K+ instances of DurableConduitBridge and related anonymous classes in DemandForwardingBridgeSupport.  Our expectation was that since there are only three active brokers, there should have been at most three instances of DurableConduitBridge.  It appeared that each attempt to create a bridge to a non-existent broker was resulting in leaking instances of DurableConduitBridge et al.\n\nUnit Test\n=======\nA JUnit test is included with this ticket to demonstrate the issue.\n\nCause\n=====\nThe leaking references to DirectConduitBridge et al. were due to the accumulation of VMTransport connections in TransportConnector#connections.  It seemed that each failed attempt to create a network bridge was resulting in an instance being added to TransportConnector#connections that was never being removed.  Here's the reason...\n\nEach time a broker attempts to create a network bridge to another broker, a call is made to DiscoveryNetworkConnector::onServiceAdd(DiscoveryEvent) by SimpleDiscoveryAgent.  The broker initiating the connection creates a local and remote transport and then attempts to create a bridge between them:\n\n   remoteTransport = TransportFactory.connect(connectUri);\n...\n   localTransport = createLocalTransport();\n...\n   try {\n      bridge.start();\n      ...\n    } catch (Exception e) {\n      ServiceSupport.dispose(localTransport);\n      ServiceSupport.dispose(remoteTransport);\n      ...\n   }\n\nIf the remote broker does not exist (as is the case with our environment), bridge.start() throws an exception which triggers the disposal of the local and remote transports.\n\nThe localTransport is an instance of VMTransport, and its disposal will eventually call VMTransport#stop():\n\n    public void stop() throws Exception {\n...\n                enqueueValve.turnOff();\n                if (!disposed) {\n                    started = false;\n                    disposed = true;\n...\n                }\n            } finally {\n                stopping.set(false);\n                enqueueValve.turnOn();\n            }\n...\n            // let the peer know that we are disconnecting..\n            try {\n                oneway(DISCONNECT);\n            } catch (Exception ignore) {\n            }\n        }\n    }\n\nThe DISCONNECT should get processed by the VMTransport#iterate() on the peer side:\n\n    public boolean iterate() {\n...\n            if( command == DISCONNECT ) {\n                tl.onException(new TransportDisposedIOException(\"Peer (\" + peer.toString() + \") disposed.\"));\n            } else {\n...\n\ntl is a reference to the TransportListener implemented by TransportConnection  and should result in a call to TransportConnection#doStop():\n\n    protected void doStop() throws Exception, InterruptedException {\n...\n        connector.onStopped(this);\n\nThe call to connector.onStopped(this) is implemented by TransportConnector#onStopped(TransportConnection):\n\n    public void onStopped(TransportConnection connection) {\n        connections.remove(connection);\n    }\n\nThis removes the connection represented by the local side of the bridge from the connections array.\n\n*** HOWEVER *** in VMTransport#stop(), the disposed flag is set to true before the call to oneway(DISCONNECT); this causes the oneway(DISCONNECT) to fail  because of this code in VMTransport#oneway(Object):\n\n    public void oneway(Object command) throws IOException {\n        if (disposed) {\n            throw new TransportDisposedIOException(\"Transport disposed.\");\n        }\n...\n\nIn other words, the DISCONNECT never makes it to the peer and so is never processed by TransportConnection (as TransportListener).\n\nSolution\n=======\nThe solution is to send the DISCONNECT before setting the disposed flag to true.  However, care must be taken to prevent deadlock since VMTransport#stop() acquires a lock on enqueueValve and VMTransport#oneway(Object) acquires locks on the peer.enqueueValve --- if both peers try to stop concurrently, they may deadlock on the acquisition of VMTransport#enqueueValve.  To prevent this deadlock, it is necessary to send the DISCONNECT before the \"local\" enqueueValve is acquired --- this may mean sending the DISCONNECT unnecessarily (i.e., even if the client is already disposed), but this is not a problem since the resulting exception is ignored.\n\n",
        "duedate": null,
        "environment": "ActiveMQ 5.3.1, Windows XP",
        "fixVersions": [{
            "archived": false,
            "description": "version 5 feature complete",
            "id": "12315623",
            "name": "5.4.0",
            "releaseDate": "2010-08-17",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315623"
        }],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Stirling Chow",
            "key": "stirlingc",
            "name": "stirlingc",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=stirlingc",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "The problem is a duplicate of an existing issue.",
            "id": "3",
            "name": "Duplicate",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/3"
        },
        "resolutiondate": "2010-05-10T07:11:14.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "VM connection leaks during each attempt to create a network bridge to a non-existent broker.",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2010-05-10T07:11:14.000+0000",
        "versions": [{
            "archived": false,
            "description": "",
            "id": "12315621",
            "name": "5.3.1",
            "releaseDate": "2010-03-23",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315621"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2723/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2723/watchers",
            "watchCount": 0
        },
        "workratio": -1
    },
    "id": "12483297",
    "key": "AMQ-2723",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12483297"
}