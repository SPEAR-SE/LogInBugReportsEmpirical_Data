{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [],
        "created": "2011-11-14T19:04:56.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Luca Zenti",
            "key": "zenluca",
            "name": "zenluca",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zenluca",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310041": null,
        "customfield_12310080": null,
        "customfield_12310220": "2011-11-16T21:50:08.032+0000",
        "customfield_12310222": "1_*:*_1_*:*_59272391473_*|*_6_*:*_1_*:*_0",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "2.0",
        "customfield_12310420": "217095",
        "customfield_12310920": "81457",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0eagn:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Sep 30 19:38:08 UTC 2013",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "Sometimes messages arrive on the client with an empty \"marshalledProperties\" field. This causes an exception trying to unmarshall them.\nThis happens very rarely, but we've got at least 2-3 cases a day per subscriber in our production environment.\nWe use a broker embedded with a server component that publishes messages on topics. The subscribers are remote.\nI was unable to replicate the problem on my Windows workstation, nor to reproduce it precisely.\n\nAttached you can find a simple pair of programs (the publisher and the subscriber) that can reproduce the issue within 5 minutes at most on my environment. This happens only if at least one of the subscribers runs on a remote machine and it seems to happen quickly with more clients connected.\nThe publishing program has a command line arguments that allows to adjust the publishing rate, in my case with 10,000 messages per second and 2 clients the problem happens within a couple of minutes.\n\nI also found a workaround for this problem: as far as I can understand, my original message is copied as a Java object to the broker (the broker is embedded, so there is no need to serialize it), then it is copied using its copy method to one or more new ActiveMQMessage instances and these are pushed into the consumer queues and then serialized to be sent over tcp.\nI think that under some particular conditions the properties are not serialized into the marshalledProperties field or this happens after the message has been actually sent.\nMy workaround is to force the marshalling of properties into the marshalledProperties field when the message is copied using the copy method.\nThis is not very clean, but still acceptable. The problem is that, in order for this to work, I need to create messages of a subclass of ActiveMqBytesMessage using an explicit constructor call rather that session.createBytesMessage() and I need to set the connection into them.\nHere is the code of my redefined class (this is the BytesMessage version, but the same is applicable to other kinds of messages):\n\n{noformat}\nimport java.io.DataOutputStream;\nimport java.io.IOException;\n\nimport javax.jms.Session;\n\nimport org.apache.activemq.ActiveMQSession;\nimport org.apache.activemq.command.ActiveMQBytesMessage;\nimport org.apache.activemq.command.Message;\nimport org.apache.activemq.util.ByteArrayOutputStream;\nimport org.apache.activemq.util.MarshallingSupport;\n\npublic class EarlySerializingBytesMessage extends ActiveMQBytesMessage\n{\n    private static final org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(EarlySerializingBytesMessage.class);\n    \n    public EarlySerializingBytesMessage(Session session)\n    {\n        ActiveMQSession activeMqSession = (ActiveMQSession)session;\n        setConnection(activeMqSession.getConnection());\n    }\n    \n    /*\n     * We redefine <code>copy<\/code> to force the marshalling of properties here and avoid a problem we've found with serialized properties \n     * arriving empty on the client side.\n     * This is a workaround to make sure the properties are already serialized when ActiveMQ actually sends the message to\n     * the client.\n     * This happens very rarely and it is very difficult to spot this error in a \"normal\" testing session.\n     * To have reasonable changes to reproduce it, we use a stress test tool that sends 5000 messages a second and at that rate\n     * the error happens usually within 10 minutes, so we can say that one message every million is typically affected.\n     * The actual problem is probably due to a bug in the ActiveMQ broker. Basically, it serializes every message just before\n     * sending it and it happens that the marshalled properties are missing the resulting message, so we get an error on the client\n     * as soon as we try to read them.\n     * Since we use an embedded broker, our original message is never serialized, it is passed into the publishing queue as a Java object,\n     * then it is copied into a new message of the same base type (ActiveMQBytesMessage, in this case) and pushed into the subscribers' \n     * queues (a topic is actually implemented as a series of queues, one for each subscriber). In order to do this, the <code>copy<\/code>\n     * method is invoked, we redefine it to early serialize the properties and make sure that this step is not skipped.\n     */\n    @Override\n    public Message copy()\n    {\n        try\n        {\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n            DataOutputStream os = new DataOutputStream(baos);\n            MarshallingSupport.marshalPrimitiveMap(properties, os);\n            os.close();\n            marshalledProperties = baos.toByteSequence();\n        }\n        catch(IOException exc)\n        {\n            logger.error(\"Error marhalling message properties, message was \" + this, exc);\n        }\n        \n        return super.copy();\n    }\n}\n{noformat}\n\n\nThe problem happens both on Java and C# clients, with the following stacktraces:\n\nJava:\n{noformat}\njavax.jms.JMSException: java.io.EOFException\n        at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)\n        at org.apache.activemq.filter.PropertyExpression.evaluate(PropertyExpression.java:199)\n        at org.apache.activemq.command.ActiveMQMessage.getObjectProperty(ActiveMQMessage.java:509)\n        at org.apache.activemq.command.ActiveMQMessage.getStringProperty(ActiveMQMessage.java:604)\n        at activemq.emptypropertiestest.Subscriber$1.onMessage(Subscriber.java:65)\n        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1230)\n        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)\n        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)\n        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:127)\n        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:619)\nCaused by: java.io.EOFException\n        at java.io.DataInputStream.readInt(DataInputStream.java:375)\n        at org.apache.activemq.util.MarshallingSupport.unmarshalPrimitiveMap(MarshallingSupport.java:83)\n        at org.apache.activemq.util.MarshallingSupport.unmarshalPrimitiveMap(MarshallingSupport.java:73)\n        at org.apache.activemq.command.Message.unmarsallProperties(Message.java:202)\n        at org.apache.activemq.command.Message.getProperty(Message.java:159)\n        at org.apache.activemq.filter.PropertyExpression.evaluate(PropertyExpression.java:197)\n        ... 11 more\n{noformat}\n\nC#:\n\n{noformat}\nSystem.IO.EndOfStreamException: Unable to read beyond the end of the stream.\n   at System.IO.MemoryStream.InternalReadInt32()\n   at System.IO.BinaryReader.ReadInt32()\n   at Apache.NMS.Util.EndianBinaryReader.ReadInt32()\n   at Apache.NMS.Util.PrimitiveMap.UnmarshalPrimitiveMap(BinaryReader dataIn)\n   at Apache.NMS.Util.PrimitiveMap.UnmarshalPrimitiveMap(Byte[] data)\n   at Apache.NMS.Util.PrimitiveMap.Unmarshal(Byte[] data)\n   at Apache.NMS.ActiveMQ.Commands.ActiveMQMessage.get_Properties()\n...\n{noformat}",
        "duedate": null,
        "environment": "* OS: Linux version 2.6.9-67.0.4.ELlargesmp (brewbuilder@hs20-bc1-6.build.redhat.com) (gcc version 3.4.6 20060404 (Red Hat 3.4.6-9)) #1 SMP Fri Jan 18 05:10:01 EST 2008\n\n* JVM (-server option in use): Java(TM) SE Runtime Environment (build 1.6.0_24-b07) Java HotSpot(TM) Server VM (build 19.1-b02, mixed mode)\n\n",
        "fixVersions": [],
        "issuelinks": [{
            "id": "12345487",
            "outwardIssue": {
                "fields": {
                    "issuetype": {
                        "avatarId": 21133,
                        "description": "A problem which impairs or prevents the functions of the product.",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                        "id": "1",
                        "name": "Bug",
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                        "subtask": false
                    },
                    "priority": {
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "id": "3",
                        "name": "Major",
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                    },
                    "status": {
                        "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                        "id": "6",
                        "name": "Closed",
                        "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                        "statusCategory": {
                            "colorName": "green",
                            "id": 3,
                            "key": "done",
                            "name": "Done",
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                        }
                    },
                    "summary": "EOFException and ActiveMQMapMessage with null properties"
                },
                "id": "12483816",
                "key": "AMQ-2860",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/12483816"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12345487",
            "type": {
                "id": "12310000",
                "inward": "is duplicated by",
                "name": "Duplicate",
                "outward": "duplicates",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
            }
        }],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Luca Zenti",
            "key": "zenluca",
            "name": "zenluca",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zenluca",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "All attempts at reproducing this issue failed, or not enough information was available to reproduce the issue. Reading the code produces no clues as to why this behavior would occur. If more information appears later, please reopen the issue.",
            "id": "5",
            "name": "Cannot Reproduce",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/5"
        },
        "resolutiondate": "2013-09-30T19:38:08.000+0000",
        "status": {
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "id": "6",
            "name": "Closed",
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Messages with empty marshalledProperties",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2013-09-30T19:38:08.000+0000",
        "versions": [
            {
                "archived": false,
                "description": "",
                "id": "12315625",
                "name": "5.4.2",
                "releaseDate": "2010-12-02",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12315625"
            },
            {
                "archived": false,
                "id": "12318549",
                "name": "5.5.1",
                "releaseDate": "2011-10-16",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12318549"
            }
        ],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-3593/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-3593/watchers",
            "watchCount": 2
        },
        "workratio": -1
    },
    "id": "12531359",
    "key": "AMQ-3593",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12531359"
}