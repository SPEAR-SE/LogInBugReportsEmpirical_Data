{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "id": "12313892",
            "name": "Broker",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12313892"
        }],
        "created": "2010-02-24T18:59:16.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Josh Carlson",
            "key": "jcarlson",
            "name": "jcarlson",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jcarlson",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310041": null,
        "customfield_12310080": null,
        "customfield_12310220": "2010-02-24T20:15:57.551+0000",
        "customfield_12310222": "1_*:*_1_*:*_46410744927_*|*_6_*:*_1_*:*_0",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "3.0",
        "customfield_12310420": "43772",
        "customfield_12310920": "172416",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0tviv:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Aug 15 22:51:40 UTC 2011",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "When using a shared file system master/server activemq configuration and client acknoledgements we run into a problem when\nour clients fail over to a new server. The problem is that the new server does not appear to have any knowledge of pending\nmessages that the old server had dispatched to clients. Consequently all of these pending messages get dispatched a second\ntime even though the clients had acknowledged them.\n\nPlease confirm my suspicion that this is a server side bug and if there are any suggestions for working around this issue so that it might work. I have put this at Priority 'Blocker' because it blocks our progress towards deploying an ActiveMQ solution to our infrastructure. \n\nIf you look at the log file from the new broker you can see that the ack for those messages do not get matched:\n\n   2010-02-24 12:46:49,759 | WARN  | Async error occurred: javax.jms.JMSException: Unmatched acknowledege:\n\nI do not know whether this gets bubbled up to the client or not. If it does it must be under the hood in activemq-cpp\nbecause from the application layer I do not see any errors. In our in house Perl Stomp client we wind up getting an ERROR\nframe which it did not know what to do with. This is where I intially ran into this problem. Today is my first day using\nCMS to attempt to verify if the bug is independent of the client and to provide a reproducer using a client everyone\nshould have ready access to.\n\nThe attached tar file will contain the following details for reproducing this problem.\n\nContents:\n\n   README.txt                   - This File\n   activemq_1.xml               - ActiveMQ config for the server that was master at the time I started the consumer\n   activemq_2.xml               - ActiveMQ config for the broker which became the master after the original master failed\n   activemq_1.log               - Log file from the first server\n   activemq_2.log               - Log for the second server\n   producers/SimpleProducer.cpp - Modified version of program shipped in activemq-cpp-library-3.1.0 to\n                                  send only 2 messages and provide two broker hosts on the command line.\n   consumers/SimpleConsumer.cpp - New file ... but really just a modified version of SimpleAsyncConsumer shipped with\n                                  activemq-cpp-library-3.1.0. Modified as follows:\n                                     - Retrieves messages synchronously and in one thread (so we can see what is going on)\n                                     - Takes two command line options to name broker hosts to use in broker URI\n                                     - Uses Client Acknoledgements.\n                                     - After retrieving a message it blocks waiting for standard input (so one has time to go kill the server)\n    Makefile.am                 - Modified version of the makefile to build the new SimpleConsumer program.\n    \n    \nNote that the build for these files require that they be built from inside a activemq-cpp build tree. So the first step to reproduce this problem would be to copy producers/SimpleProducer.cpp consumers/SimpleConsumer.cpp and Makefile.am to your src/examples directory. Then run a top level, configure and make. I ran this using activemq-cpp-library version 3.1.0\n    \nThis reproducer expects that you only have 2 activemq brokers and that they be configured using a shared file system master/slave configuration. It also expects an openwire transport connector listening on port 61616 on those two machines. (Note: you'll see my activemq configs using the transport uri: uri=\"tcp://q1masterhost:61616\", q1masterhost goes to the ethernet 0 interface on each of the hosts.)\n\nOnce you have those two brokers set up and running. Go ahead and run the simple_producer code passing the hostnames of your two brokers on the command line:\n\n        [jcarlson@rocky examples]$ ./simple_producer mmq1 mmq2\n        =====================================================\n        Starting the example:\n        -----------------------------------------------------\n        Sent message #1 from thread 139817389041504\n        Sent message #2 from thread 139817389041504\n        -----------------------------------------------------\n        Finished with the example.\n        =====================================================\n\nNow do the same for the simple_consumer:\n\n        [jcarlson@rocky examples]$ ./simple_consumer mmq1 mmq2\n        =====================================================\n        Starting the example:\n        -----------------------------------------------------\n        Message #1 Received: Hello world! from thread 139817389041504\n        Waiting for stdin to acknoledge\n\nThe app has retrieved one message but has not ack'ed it yet. Now go identify\nwhich host has the master broker and kill the process. The master broker will\nbe the one which is *not* printing 'Database [lockfile] is locked' messages.\n\nIn my case the broker was on mmq1 so I did this in another terminal:\n\n        ssh -t mmq1 sudo pkill java\n\nImmediatly I see this in the console I started the consumer in:\n\n  The Connection's Transport has been Interrupted.\n\nand then a few seconds later I see:\n\n  The Connection's Transport has been Restored.\n\nAt this point I hit enter in the terminal so that the message I recieved on\nthe other broker gets acknoledged and the consumer trys to get another message\n\n  Message #2 Received: Hello world! from thread 139817389041504\n  Waiting for stdin to acknoledge\n\nOk at this point, since I have only put two messages on the queue I don't\nexpect any more so when I hit enter and go back to get another message I\nexpect it to just sit and wait for another message to come in. This is not\nwhat happens. A third message is retrieved:\n\n  Message #3 Received: Hello world! from thread 139817389041504\n  Waiting for stdin to acknoledge\n\nAt this point when I hit enter again the app blocks and I kill it with Cntrl\nC.\n",
        "duedate": null,
        "environment": "Server: 2 RHEL 5.3 x86-64 machines. Kernel version 2.6.18-128.0.0.0.2.el5.\nClient: Same as above. Also tested with same results on Fedora Core 11",
        "fixVersions": [],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Josh Carlson",
            "key": "jcarlson",
            "name": "jcarlson",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jcarlson",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "The described issue is not actually a problem - it is as designed.",
            "id": "8",
            "name": "Not A Problem",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/8"
        },
        "resolutiondate": "2011-08-15T22:51:40.000+0000",
        "status": {
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "id": "6",
            "name": "Closed",
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Failover causes duplicate messages",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2011-08-15T22:51:40.000+0000",
        "versions": [{
            "archived": false,
            "description": "",
            "id": "12315620",
            "name": "5.3.0",
            "releaseDate": "2009-10-13",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315620"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2627/votes",
            "votes": 5
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2627/watchers",
            "watchCount": 1
        },
        "workratio": -1
    },
    "id": "12483780",
    "key": "AMQ-2627",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12483780"
}