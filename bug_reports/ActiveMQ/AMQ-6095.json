{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [],
        "created": "2015-12-18T14:21:48.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Stephen Schaeffer",
            "key": "stephenschaeffer",
            "name": "stephenschaeffer",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=stephenschaeffer",
            "timeZone": "America/New_York"
        },
        "customfield_10010": null,
        "customfield_12310041": null,
        "customfield_12310080": null,
        "customfield_12310220": "2017-02-06T14:33:50.726+0000",
        "customfield_12310222": "1_*:*_1_*:*_35943122090_*|*_6_*:*_1_*:*_0",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i2q39z:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Feb 06 14:33:50 UTC 2017",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "Hi all, \n\nWe have an environment as follows: \n  ActiveMQ 5.12.0 on 3 nodes using Zookeeper \n  Zookeeper 3.4.6 on the same 3 nodes. \n  Java 1.8 \n  RHEL Server 7.1 \n\nWe can start up and verify that ActiveMQ failover is working by sending and consuming messages from different machines while taking ActiveMQ nodes up and down, and everything looks fine. \n\nThen, after some indeterminate amount of time, things stop working and jstack turns up this: \n\nFound one Java-level deadlock: \n============================= \n\"ActiveMQ BrokerService[activeMqBroker] Task-26\": \n  waiting to lock monitor 0x00007f4520004e68 (object 0x00000000d5cbfe80, a org.apache.activemq.leveldb.replicated.groups.ZooKeeperGroup), \n  which is held by \"ZooKeeper state change dispatcher thread\" \n\"ZooKeeper state change dispatcher thread\": \n  waiting to lock monitor 0x00007f451c00ee38 (object 0x00000000d5cf1e80, a org.apache.activemq.leveldb.replicated.MasterElector), \n  which is held by \"ActiveMQ BrokerService[activeMqBroker] Task-25\" \n\"ActiveMQ BrokerService[activeMqBroker] Task-25\": \n  waiting to lock monitor 0x00007f4520004e68 (object 0x00000000d5cbfe80, a org.apache.activemq.leveldb.replicated.groups.ZooKeeperGroup), \n  which is held by \"ZooKeeper state change dispatcher thread\" \n\nJava stack information for the threads listed above: \n=================================================== \n\"ActiveMQ BrokerService[activeMqBroker] Task-26\": \n        at org.apache.activemq.leveldb.replicated.groups.ZooKeeperGroup.close(ZooKeeperGroup.scala:100) \n        - waiting to lock <0x00000000d5cbfe80> (a org.apache.activemq.leveldb.replicated.groups.ZooKeeperGroup) \n        at org.apache.activemq.leveldb.replicated.ElectingLevelDBStore.doStop(ElectingLevelDBStore.scala:282) \n        at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:71) \n        at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41) \n        at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:806) \n        at org.apache.activemq.xbean.XBeanBrokerService.stop(XBeanBrokerService.java:122) \n        at org.apache.activemq.leveldb.replicated.ElectingLevelDBStore$$anonfun$stop_master$2.apply$mcV$sp(ElectingLevelDBStore.scala:259) \n        at org.fusesource.hawtdispatch.package$$anon$4.run(hawtdispatch.scala:330) \n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) \n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) \n        at java.lang.Thread.run(Thread.java:745) \n\"ZooKeeper state change dispatcher thread\": \n        at org.apache.activemq.leveldb.replicated.groups.ClusteredSingletonWatcher.changed_decoded(ClusteredSingleton.scala:155) \n        - waiting to lock <0x00000000d5cf1e80> (a org.apache.activemq.leveldb.replicated.MasterElector) \n        at org.apache.activemq.leveldb.replicated.groups.ClusteredSingletonWatcher$$anon$2.changed(ClusteredSingleton.scala:108) \n        at org.apache.activemq.leveldb.replicated.groups.ChangeListenerSupport$$anonfun$fireChanged$1$$anonfun$apply$mcV$sp$3.apply(ChangeListener.scala:89) \n        at org.apache.activemq.leveldb.replicated.groups.ChangeListenerSupport$$anonfun$fireChanged$1$$anonfun$apply$mcV$sp$3.apply(ChangeListener.scala:88) \n        at scala.collection.immutable.List.foreach(List.scala:383) \n        at org.apache.activemq.leveldb.replicated.groups.ChangeListenerSupport$$anonfun$fireChanged$1.apply$mcV$sp(ChangeListener.scala:88) \n        at org.apache.activemq.leveldb.replicated.groups.ChangeListenerSupport$$anonfun$fireChanged$1.apply(ChangeListener.scala:88) \n        at org.apache.activemq.leveldb.replicated.groups.ChangeListenerSupport$$anonfun$fireChanged$1.apply(ChangeListener.scala:88) \n        at org.apache.activemq.leveldb.replicated.groups.ChangeListenerSupport$class.check_elapsed_time(ChangeListener.scala:97) \n        at org.apache.activemq.leveldb.replicated.groups.ZooKeeperGroup.check_elapsed_time(ZooKeeperGroup.scala:73) \n        at org.apache.activemq.leveldb.replicated.groups.ChangeListenerSupport$class.fireChanged(ChangeListener.scala:87) \n        at org.apache.activemq.leveldb.replicated.groups.ZooKeeperGroup.fireChanged(ZooKeeperGroup.scala:73) \n        at org.apache.activemq.leveldb.replicated.groups.ZooKeeperGroup.org$apache$activemq$leveldb$replicated$groups$ZooKeeperGroup$$fire_cluster_change(ZooKeeperGroup.scala:182) \n        at org.apache.activemq.leveldb.replicated.groups.ZooKeeperGroup$$anon$1.onEvents(ZooKeeperGroup.scala:90) \n        at org.linkedin.zookeeper.tracker.ZooKeeperTreeTracker.raiseEvents(ZooKeeperTreeTracker.java:402) \n        at org.linkedin.zookeeper.tracker.ZooKeeperTreeTracker.track(ZooKeeperTreeTracker.java:240) \n        at org.linkedin.zookeeper.tracker.ZooKeeperTreeTracker.track(ZooKeeperTreeTracker.java:228) \n        at org.apache.activemq.leveldb.replicated.groups.ZooKeeperGroup.onConnected(ZooKeeperGroup.scala:124) \n        - locked <0x00000000d5cbfe80> (a org.apache.activemq.leveldb.replicated.groups.ZooKeeperGroup) \n        at org.apache.activemq.leveldb.replicated.groups.ZKClient.callListeners(ZKClient.java:385) \n        at org.apache.activemq.leveldb.replicated.groups.ZKClient$StateChangeDispatcher.run(ZKClient.java:354) \n\"ActiveMQ BrokerService[activeMqBroker] Task-25\": \n        at org.apache.activemq.leveldb.replicated.groups.ZooKeeperGroup.update(ZooKeeperGroup.scala:143) \n        - waiting to lock <0x00000000d5cbfe80> (a org.apache.activemq.leveldb.replicated.groups.ZooKeeperGroup) \n        at org.apache.activemq.leveldb.replicated.groups.ClusteredSingleton.join(ClusteredSingleton.scala:212) \n        - locked <0x00000000d5cf1e80> (a org.apache.activemq.leveldb.replicated.MasterElector) \n        at org.apache.activemq.leveldb.replicated.MasterElector.update(MasterElector.scala:90) \n        - locked <0x00000000d5cf1e80> (a org.apache.activemq.leveldb.replicated.MasterElector) \n        at org.apache.activemq.leveldb.replicated.MasterElector$change_listener$.changed(MasterElector.scala:243) \n        - locked <0x00000000d5cf1e80> (a org.apache.activemq.leveldb.replicated.MasterElector) \n        at org.apache.activemq.leveldb.replicated.MasterElector$change_listener$$anonfun$changed$1.apply$mcV$sp(MasterElector.scala:191) \n        - locked <0x00000000d5cf1e80> (a org.apache.activemq.leveldb.replicated.MasterElector) \n        at org.apache.activemq.leveldb.replicated.ElectingLevelDBStore$$anonfun$stop_master$1.apply$mcV$sp(ElectingLevelDBStore.scala:252) \n        at org.fusesource.hawtdispatch.package$$anon$4.run(hawtdispatch.scala:330) \n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) \n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) \n        at java.lang.Thread.run(Thread.java:745) \n\nFound 1 deadlock. \n\nFor what it's worth, we're not sending a huge amount of data around. Also, once the 03 node was bounced, traffic resumed as normal.",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Stephen Schaeffer",
            "key": "stephenschaeffer",
            "name": "stephenschaeffer",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=stephenschaeffer",
            "timeZone": "America/New_York"
        },
        "resolution": {
            "description": "The problem described is an issue which will never be fixed.",
            "id": "2",
            "name": "Won't Fix",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/2"
        },
        "resolutiondate": "2017-02-06T14:33:50.000+0000",
        "status": {
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "id": "6",
            "name": "Closed",
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Deadlock in failover environment.",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2017-02-06T14:33:50.000+0000",
        "versions": [{
            "archived": false,
            "id": "12329258",
            "name": "5.12.0",
            "releaseDate": "2015-08-13",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12329258"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-6095/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-6095/watchers",
            "watchCount": 4
        },
        "workratio": -1
    },
    "id": "12923026",
    "key": "AMQ-6095",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12923026"
}