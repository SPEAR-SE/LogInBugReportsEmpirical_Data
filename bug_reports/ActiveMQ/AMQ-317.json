{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [
            {
                "id": "12313892",
                "name": "Broker",
                "self": "https://issues.apache.org/jira/rest/api/2/component/12313892"
            },
            {
                "id": "12313903",
                "name": "Transport",
                "self": "https://issues.apache.org/jira/rest/api/2/component/12313903"
            }
        ],
        "created": "2005-07-27T12:29:04.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Jason Anderson",
            "key": "xd@maxexp.com",
            "name": "xd@maxexp.com",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=xd%40maxexp.com",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310041": null,
        "customfield_12310080": null,
        "customfield_12310220": "2005-08-26T06:28:44.000+0000",
        "customfield_12310222": "1_*:*_1_*:*_3544124000_*|*_5_*:*_1_*:*_0",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "49029",
        "customfield_12310920": "161857",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0s2cn:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Sep 06 12:57:48 UTC 2005",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "I've been writing some quick test benchmarks and ran across a race condition that causes the DurableQueueBoundedMessageManager.add/removeMessageConsumer to deadlock.  relavent parts of the stack trace:\n\n\n\"Thread-15\" daemon prio=5 tid=0x0053ff80 nid=0x19dfc00 waiting for monitor entry [f1010000..f1010ac0]\n        at org.activemq.service.boundedvm.DurableQueueBoundedMessageContainer.removeConsumer(DurableQueueBoundedMessageContainer.java:152)\n        - waiting to lock <0x4c9a7048> (a java.lang.Object)\n        at org.activemq.service.boundedvm.DurableQueueBoundedMessageManager.removeMessageConsumer(DurableQueueBoundedMessageManager.java:265)\n        - locked <0x4c999048> (a org.activemq.service.boundedvm.DurableQueueBoundedMessageManager)\n        at org.activemq.broker.impl.DefaultBroker.removeMessageConsumer(DefaultBroker.java:265)\n        at org.activemq.broker.impl.BrokerContainerImpl.deregisterMessageConsumer(BrokerContainerImpl.java:367)\n        at org.activemq.broker.impl.BrokerConnectorImpl.deregisterMessageConsumer(BrokerConnectorImpl.java:182)\n        at org.activemq.broker.impl.BrokerClientImpl.cleanUp(BrokerClientImpl.java:619)\n        - locked <0x4caa47a8> (a org.activemq.broker.impl.BrokerClientImpl)\n        at org.activemq.broker.impl.BrokerConnectorImpl.removeClient(BrokerConnectorImpl.java:327)\n        at org.activemq.transport.TransportChannelSupport.stop(TransportChannelSupport.java:119)\n        at org.activemq.transport.tcp.TcpTransportChannel.stop(TcpTransportChannel.java:215)\n        at org.activemq.broker.impl.BrokerClientImpl.close(BrokerClientImpl.java:710)\n        at org.activemq.broker.impl.BrokerClientImpl.onException(BrokerClientImpl.java:146)\n        at org.activemq.transport.TransportChannelSupport.onAsyncException(TransportChannelSupport.java:445)\n        at org.activemq.transport.tcp.TcpTransportChannel.doAsyncSend(TcpTransportChannel.java:480)\n        at org.activemq.transport.tcp.TcpTransportChannel$1.run(TcpTransportChannel.java:258)\n        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)\n        at java.lang.Thread.run(Thread.java:552)\n\n\"Durable Queue Worker\" daemon prio=6 tid=0x00526320 nid=0x19c8a00 in Object.wait() [f0f0e000..f0f0eac0]\n        at java.lang.Object.wait(Native Method)\n        at java.lang.Object.wait(Object.java:429)\n        at EDU.oswego.cs.dl.util.concurrent.BoundedBuffer.put(Unknown Source)\n        - locked <0x4caa46f8> (a java.lang.Object)\n        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$WaitWhenBlocked.blockedAction(Unknown Source)\n        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor.execute(Unknown Source)\n        at org.activemq.transport.tcp.TcpTransportChannel.asyncSend(TcpTransportChannel.java:254)\n        at org.activemq.broker.impl.BrokerClientImpl.send(BrokerClientImpl.java:676)\n        at org.activemq.broker.impl.BrokerClientImpl.dispatchToClient(BrokerClientImpl.java:221)\n        at org.activemq.broker.impl.BrokerClientImpl.dispatch(BrokerClientImpl.java:166)\n        at org.activemq.service.boundedvm.DurableQueueSubscription.doDispatch(DurableQueueSubscription.java:93)\n        at org.activemq.service.boundedvm.DurableQueueBoundedMessageContainer.run(DurableQueueBoundedMessageContainer.java:326)\n        - locked <0x4c9a7048> (a java.lang.Object)\n        - locked <0x4c9a7050> (a java.lang.Object)\n        at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(Unknown Source)\n        at java.lang.Thread.run(Thread.java:552)\n\n\nsubsequent attempts to addConsumers will also hang until the server broker is killed and restarted\n\nthe code that causes this to happen is as follows:\n\n          final long[] received = new long[1];\n\n        Connection connection = connectionFactory.createConnection();\n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n        Destination destination = new ActiveMQQueue(\"testQueue\");\n        MessageConsumer consumer = session.createConsumer(destination);\n        consumer.setMessageListener(new MessageListener() {\n            public void onMessage(Message message) {\n                synchronized(received) {\n                    received[0]++;\n                }\n            }\n        });\n        connection.start();\n\n        final int total = 1000000;\n\n\n        new Thread(new Runnable() {\n            public void run() {\n                for(int i=0;i<total;i++) {\n                    template.convertAndSend(\"testQueue\", \"test message\");\n                }\n            }\n        }).start();\n\n        long last = 0;\n        long cur = 0;\n\n        do {\n            synchronized(received) {\n                cur = received[0];\n            }\n            System.out.println(\"received = \" + cur + \" diff = \" + (cur - last));\n            last = cur;\n            Thread.sleep(1000);\n        } while(cur < total);\n\n\n(the template object is just a normal spring JmsTemplate configured in the app context in the test client)\n\nIf I run the above code and stop/kill/interupt the process while its still sending messages the server broker will go into this deadlock about 1 out of every 3 tries in my test setup, otherwise it just spits out an IOException and removes the messageConsumer just fine\n\n",
        "duedate": null,
        "environment": "activemq-core-3.1-M6.jar util.concurrent 1.3.4, jdk 1.4.2 on osx 10.4\ntest client connecting to standalone broker configured for tcp transport and vm persistance\n",
        "fixVersions": [{
            "archived": false,
            "id": "12315602",
            "name": "3.2",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315602"
        }],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "parent": {
            "fields": {
                "issuetype": {
                    "avatarId": 21133,
                    "description": "A problem which impairs or prevents the functions of the product.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                    "id": "1",
                    "name": "Bug",
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                    "subtask": false
                },
                "priority": {
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "id": "3",
                    "name": "Major",
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                },
                "status": {
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "id": "5",
                    "name": "Resolved",
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "statusCategory": {
                        "colorName": "green",
                        "id": 3,
                        "key": "done",
                        "name": "Done",
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                    }
                },
                "summary": "Big message queue causes deadlock on server restart"
            },
            "id": "12481060",
            "key": "AMQ-324",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/12481060"
        },
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Jason Anderson",
            "key": "xd@maxexp.com",
            "name": "xd@maxexp.com",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=xd%40maxexp.com",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2005-09-06T12:57:48.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "deadlock in DurableQueue add/remove messageConsumer w/ tcp transport",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2005-09-06T12:57:48.000+0000",
        "versions": [{
            "archived": false,
            "id": "12315601",
            "name": "3.1",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315601"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-317/votes",
            "votes": 1
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-317/watchers",
            "watchCount": 2
        },
        "workratio": -1
    },
    "id": "12481040",
    "key": "AMQ-317",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12481040"
}