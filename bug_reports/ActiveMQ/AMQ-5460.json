{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "id": "12313903",
            "name": "Transport",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12313903"
        }],
        "created": "2014-11-27T07:01:54.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Arpan Rajani",
            "key": "arpanr",
            "name": "arpanr",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=arpanr",
            "timeZone": "Europe/London"
        },
        "customfield_10010": null,
        "customfield_12310041": null,
        "customfield_12310080": null,
        "customfield_12310220": null,
        "customfield_12310222": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i22u7r:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "2014-11-27 07:01:54.0",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "We have two ActiveMQ(version 5.10.0) instances running and I am using the shared storage to achieve HA. However I am unable to see failover happening for the producer and consumer(s).\n\nActiveMQ broker-1 runs on IP1 and broker-2 on IP2 And under the activemq.xml of configuration I have modified persistence adapter to use a shared directory which is present on IP1.\n\n{quote}\n<persistenceAdapter>\n  <kahaDB directory=\"\\\\IP1\\shared-directory\\for activemq\\data\"/>\n<\/persistenceAdapter>\nBoth in producer and consumer sides I am using following JNDI configurations to get the connections and build sessions,etc.\n{quote}\n\njndi.properties\n{quote}\njava.naming.factory.initial = ..........ActiveMQInitialContextFactory\njava.naming.provider.url = failover:(tcp://IP1:61616,tcp://IP2:61616)?randomize=false\nconnectionFactoryNames = myConnectionFactory\nqueue.requestQ = my.RequestQ\n{quote}\n\nInteresting part is :\n\nWhen I start this broker pair, I see that one of the brokers becomes master. When I start the producer, which puts the message on the Q (say producer has put 100 messages on the Q). While my producer is still running; I shutdown master broker, hence slave broker acquires the file-lock and becomes master.When I open the webconsole I see that 100 messages are still there on the Q. Even though producer is running it no longer puts any messages on this Q.\n\nSimilar to this for the consumers also. Consumer was picking messages from the Q, this Q has say 100 messages unconsumed when master failed, now master goes down, slave becomes master, I see 100 messages are still unconsumed, but the consumer does not pick any message from the Q.\n\nI waited them to failover for a long time.(>10 mins.) Can any one please suggest what configuration am I missing ?\n\nI am copy pasting producer and consumer as is (I've copied this from ActiveMQ in action book with minor modifications).\n\n{quote}\nProducer\n\npublic class Producer {\n\n    private static String brokerURL = \"failover:(tcp://IP1:3389,tcp://IP2:3389)\";\n    private static transient ConnectionFactory factory;\n    private transient Connection connection;\n    private transient Session session;\n    private transient MessageProducer producer;\n\n    private static int count = 10;\n    private static int total;\n    private static int id = 1000000;\n    private String jobs[] = new String[] { \"suspend\", \"delete\" };\n\n    public Producer() throws JMSException {\n        factory = new ActiveMQConnectionFactory(brokerURL);\n        connection = factory.createConnection();\n        connection.start();\n        session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n        producer = session.createProducer(null);\n    }\n\n    public void close() throws JMSException {\n        if (connection != null) {\n            connection.close();\n        }\n    }\n\n    public static void main(String[] args) throws JMSException {\n        Producer producer = new Producer();\n        while (total < 1000) {\n            for (int i = 0; i < count; i++) {\n                producer.sendMessage();\n            }\n            total += count;\n            System.out.println(\"Sent '\" + count + \"' of '\" + total\n                    + \"' job messages\");\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException x) {\n            }\n        }\n        producer.close();\n\n    }\n\n    public void sendMessage() throws JMSException {\n        int idx = 0;\n        while (true) {\n            idx = (int) Math.round(jobs.length * Math.random());\n            if (idx < jobs.length) {\n                break;\n            }\n        }\n        String job = jobs[idx];\n        Destination destination = session.createQueue(\"JOBS.\" + job);\n        Message message = session.createObjectMessage(id++);\n        System.out.println(\"Sending: id: \"\n                + ((ObjectMessage) message).getObject() + \" on queue: \"\n                + destination);\n        producer.send(destination, message);\n    }\n}\n{quote}\n\nConsumer\n{quote}\npublic class Consumer {\n\n    private static String brokerURL = \"failover:(tcp://IP1:3389,tcp://IP2:3389)\";\n    private static transient ConnectionFactory factory;\n    private transient Connection connection;\n    private transient Session session;\n\n    private String jobs[] = new String[] { \"suspend\", \"delete\" };\n\n    public Consumer() throws JMSException {\n        factory = new ActiveMQConnectionFactory(brokerURL);\n        connection = factory.createConnection();\n        connection.start();\n        session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n    }\n\n    public void close() throws JMSException {\n        if (connection != null) {\n            connection.close();\n        }\n    }\n\n    public static void main(String[] args) throws JMSException {\n        Consumer consumer = new Consumer();\n        for (String job : consumer.jobs) {\n            Destination destination = consumer.getSession().createQueue(\n                    \"JOBS.\" + job);\n            MessageConsumer messageConsumer = consumer.getSession()\n                    .createConsumer(destination);\n            messageConsumer.setMessageListener(new Listener(job));\n        }\n    }\n\n    public Session getSession() {\n        return session;\n    }\n\n}\n{quote}\n\n\n*What I've observed is :*\nOne AMQ is running on 32 bit, another on 64 bit. \nIf the producer/consumer is running on 64 bit machine, it fails over to 32 bit AMQ.\nIf the producer or consumer is running on 32 bit machine it does not failover to 64 bit AMQ.\n",
        "duedate": null,
        "environment": "RHEL 6.5, Oracle JDK 1.7, (64 bit)\nRHEL 6.x , Oracle JDK 1.7 (32 bit)",
        "fixVersions": [],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [
            "failover",
            "high-availability"
        ],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "id": "2",
            "name": "Critical",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Arpan Rajani",
            "key": "arpanr",
            "name": "arpanr",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=arpanr",
            "timeZone": "Europe/London"
        },
        "resolution": null,
        "resolutiondate": null,
        "status": {
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "id": "1",
            "name": "Open",
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "statusCategory": {
                "colorName": "blue-gray",
                "id": 2,
                "key": "new",
                "name": "To Do",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
            }
        },
        "subtasks": [],
        "summary": "HA : Failover does not happen with 2 AMQ instances when one runs on 32 bit another on 64 bit",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2014-11-27T07:01:54.000+0000",
        "versions": [{
            "archived": false,
            "id": "12324950",
            "name": "5.10.0",
            "releaseDate": "2014-06-10",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12324950"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-5460/votes",
            "votes": 1
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-5460/watchers",
            "watchCount": 1
        },
        "workratio": -1
    },
    "id": "12758148",
    "key": "AMQ-5460",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12758148"
}