{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "id": "12313892",
            "name": "Broker",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12313892"
        }],
        "created": "2010-03-02T14:30:01.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Marc Sch√∂chlin",
            "key": "scoopex",
            "name": "scoopex",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=scoopex",
            "timeZone": "Europe/Berlin"
        },
        "customfield_10010": null,
        "customfield_12310041": null,
        "customfield_12310080": null,
        "customfield_12310220": "2010-03-02T15:50:28.491+0000",
        "customfield_12310222": "1_*:*_1_*:*_4827003_*|*_6_*:*_1_*:*_0",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "74863",
        "customfield_12310920": "171889",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0ts9r:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Mar 02 17:21:55 UTC 2010",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "I added the follwing configuration to my broker:\n---\n<systemUsage>\n <systemUsage sendFailIfNoSpaceAfterTimeout=\"3000\">\n   <memoryUsage>\n     <memoryUsage limit=\"20 mb\"/>\n   <\/memoryUsage>\n <\/systemUsage>\n<\/systemUsage>\n---\n\nI get the following exceptions:\n(after removing sendFailIfNoSpaceAfterTimeout the broker start properly)\n---\n# /etc/init.d/activemq fgstart                                                                                                                                                                                                        \nINFO: loading '/etc/default/activemq'                                                                                                                                                                                                 \nINFO: useing java '/usr/bin/java'                                                                                                                                                                                                     \nINFO: starting in foreground, this is just for debugging purposes (stop process by pressing CTRL+c)                                                                                                                                   \nINFO: changing to user 'activemq' to invoke java                                                                                                                                                                                      \nJava Runtime: IBM Corporation 1.6.0 /usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre                                                                                                                                                           \n  Heap sizes: current=131072k  free=126099k  max=1048576k                                                                                                                                                                             \n    JVM args: -Xjcl:jclscar_24 -Dcom.ibm.oti.vm.bootstrap.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Dsun.boot.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64 -Djava.library.path=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64/default:/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/amd64:/usr/lib -Djava.home=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre -Djava.ext.dirs=/usr/lib64/jvm/java-1_6_0-ibm-1.6.0/jre/lib/ext -Duser.dir=/srv/activemq/conf _j2se_j9=1119744 -Xdump -Djava.class.path=. -Xms128M -Xmx1024M -Dorg.apache.activemq.UseDedicatedTaskRunner=true -Djava.util.logging.config.file=logging.properties -Dcom.sun.management.jmxremote.port=11099 -Dcom.sun.management.jmxremote.password.file=/srv/activemq/conf/jmx.password -Dcom.sun.management.jmxremote.access.file=/srv/activemq/conf/jmx.access -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=10.130.18.244 -Dcom.sun.management.jmxremote -Dcom.sun.management.snmp.port=30000 -Dcom.sun.management.snmp.interface=0.0.0.0 -Dcom.sun.management.snmp.acl.file=/srv/activemq/conf/snmp.acl -Dactivemq.classpath=/srv/activemq/conf/; -Dactivemq.home=/srv/activemq/install/apache-activemq -Dactivemq.base=/srv/activemq/install/apache-activemq -Djava.class.path=/srv/activemq/install/apache-activemq/bin/run.jar -Dsun.java.command=/srv/activemq/install/apache-activemq/bin/run.jar start -Dsun.java.launcher=SUN_STANDARD -Dsun.java.launcher.pid=25854 _port_library _org.apache.harmony.vmi.portlib  \nACTIVEMQ_HOME: /srv/activemq/install/apache-activemq                                                                                                                                                                                  \nACTIVEMQ_BASE: /srv/activemq/install/apache-activemq                                                                                                                                                                                  \nLoading message broker from: xbean:activemq.xml                                                                                                                                                                                       \nERROR: java.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                                                                                                              \njava.lang.RuntimeException: Failed to execute start task. Reason: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                                                                                                                     \n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:98)                                                                                                                                             \n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)                                                                                                                                       \n        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)                                                                                                                                            \n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)                                                                                                                                       \n        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)                                                                                                                                                \n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)                                                                                                                                                                \n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)                                                                                                                                              \n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)                                                                                                                                      \n        at java.lang.reflect.Method.invoke(Method.java:599)                                                                                                                                                                           \n        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)                                                                                                                                                               \n        at org.apache.activemq.console.Main.main(Main.java:107)                                                                                                                                                                       \nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                      \n        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:230)                                                                                               \n        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)                                                                                        \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)                                                                             \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)                                                                                    \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)                                                                                     \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)                                                                                            \n        at java.security.AccessController.doPrivileged(AccessController.java:224)                                                                                                                                                     \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)                                                                                       \n        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)                                                                                                                    \n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)                                                                                                 \n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)                                                                                                                      \n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)                                                                                                                        \n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)                                                                                                                        \n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)                                                                                         \n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)                                                                                        \n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)                                                                                                                \n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)                                                                                                                \n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)                                                                                                                \n        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)                                                                                                                          \n        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)                                                                                                                                      \n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)                                                                                                                                               \n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)                                                                                                                                               \n        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)                                                                                                                                        \n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)                                                                                                                                             \n        ... 10 more                                                                                                                                                                                                                   \nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                                                  \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)                                                                             \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)                                                                                    \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)                                                                                     \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)                                                                                            \n        at java.security.AccessController.doPrivileged(AccessController.java:224)                                                                                                                                                     \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)                                                                                       \n        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:219)                                                                                               \n        ... 33 more                                                                                                                                                                                                                   \nCaused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?                                                                                                                        \n        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:801)                                                                                                                                       \n        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:651)                                                                                                                                       \n        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:78)                                                                                                                     \n        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:59)                                                                                                                     \n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)\n        ... 39 more\nERROR: java.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\njava.lang.Exception: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:99)\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:129)\n        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)\n        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:79)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)\n        at java.lang.reflect.Method.invoke(Method.java:599)\n        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)\n        at org.apache.activemq.console.Main.main(Main.java:107)\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [/srv/activemq/conf/activemq.xml]: Cannot create inner bean '(inner bean)' of type [org.apache.activemq.usage.SystemUsage] while setting bean property 'systemUsage'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:230)\n        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:122)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1245)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)\n        at java.security.AccessController.doPrivileged(AccessController.java:224)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)\n        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)\n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)\n        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)\n        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)\n        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)\n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)\n        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)\n        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)\n        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)\n        ... 10 more\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name '(inner bean)' defined in file [/srv/activemq/conf/activemq.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1279)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1010)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:472)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)\n        at java.security.AccessController.doPrivileged(AccessController.java:224)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)\n        at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:219)\n        ... 33 more\nCaused by: org.springframework.beans.NotWritablePropertyException: Invalid property 'sendFailIfNoSpaceAfterTimeout' of bean class [org.apache.activemq.usage.SystemUsage]: Bean property 'sendFailIfNoSpaceAfterTimeout' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?\n        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:801)\n        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:651)\n        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:78)\n        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:59)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1276)\n        ... 39 more\n---\n\nMy activemq.xml:\n---                                                                \n<!--                                                                                      \n    Licensed to the Apache Software Foundation (ASF) under one or more                    \n    contributor license agreements.  See the NOTICE file distributed with                 \n    this work for additional information regarding copyright ownership.                   \n    The ASF licenses this file to You under the Apache License, Version 2.0               \n    (the \"License\"); you may not use this file except in compliance with                  \n    the License.  You may obtain a copy of the License at                                 \n                                                                                          \n    http://www.apache.org/licenses/LICENSE-2.0                                            \n                                                                                          \n    Unless required by applicable law or agreed to in writing, software                   \n    distributed under the License is distributed on an \"AS IS\" BASIS,                     \n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.              \n    See the License for the specific language governing permissions and                   \n    limitations under the License.                                                        \n-->                                                                                       \n<beans                                                                                    \n  xmlns=\"http://www.springframework.org/schema/beans\"                                     \n  xmlns:amq=\"http://activemq.apache.org/schema/core\"                                      \n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"                                   \n  xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd\n  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd\">                               \n\n    <!-- Allows us to use system properties as variables in this configuration file -->\n    <bean class=\"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer\">\n        <property name=\"locations\">                                                      \n            <value>file:${activemq.base}/conf/credentials.properties<\/value>             \n        <\/property>                                                                      \n    <\/bean>                                                                              \n\n    <!-- \n        The <broker> element is used to configure the ActiveMQ broker. \n    -->                                                                \n    <broker xmlns=\"http://activemq.apache.org/schema/core\" brokerName=\"localhost\" dataDirectory=\"${activemq.base}/data\" >\n                                                                                                                         \n<!--                                                                                                                     \n         <systemUsage>                                                                                                   \n           <systemUsage sendFailIfNoSpaceAfterTimeout=\"3000\">                                                            \n             <memoryUsage>                                                                                               \n               <memoryUsage limit=\"700 mb\"/>                                                                             \n             <\/memoryUsage>                                                                                              \n             <storeUsage>                                                                                                \n               <storeUsage limit=\"1 gb\" name=\"foo\"/>                                                                     \n             <\/storeUsage>                                                                                               \n             <tempUsage>                                                                                                 \n               <tempUsage limit=\"1 gb\"/>                                                                                 \n             <\/tempUsage>                                                                                                \n           <\/systemUsage>                                                                                                \n         <\/systemUsage>                                                                                                  \n-->                                                                                                                      \n\n<systemUsage>\n <systemUsage sendFailIfNoSpaceAfterTimeout=\"3000\"> \n   <memoryUsage>                                    \n     <memoryUsage limit=\"20 mb\"/>                   \n   <\/memoryUsage>                                   \n <\/systemUsage>                                     \n<\/systemUsage>                                      \n\n        <!-- \n            The managementContext is used to configure how ActiveMQ is exposed in \n            JMX. By default, ActiveMQ uses the MBean server that is started by    \n            the JVM. For more information, see:                                   \n                                                                                  \n            http://activemq.apache.org/jmx.html                                   \n        -->                                                                       \n        <managementContext>                                                       \n            <managementContext createConnector=\"false\"/>                          \n        <\/managementContext>                                                      \n\n        <!-- \n            Configure message persistence for the broker. The default persistence\n            mechanism is the KahaDB store (identified by the kahaDB tag).        \n            For more information, see:                                           \n                                                                                 \n            http://activemq.apache.org/persistence.html                          \n        -->                                                                      \n        <persistenceAdapter>                                                     \n            <kahaDB directory=\"${activemq.base}/data/kahadb\"/>                   \n        <\/persistenceAdapter>                                                    \n                                                                                 \n                                                                                 \n        <!--                                                                     \n                        For better performances use VM cursor and small memory limit.\n                        For more information, see:                                   \n                                                                                     \n            http://activemq.apache.org/message-cursors.html                          \n                                                                                     \n            Also, if your producer is \"hanging\", it's probably due to producer flow control.\n            For more information, see:                                                      \n            http://activemq.apache.org/producer-flow-control.html                           \n        -->                                                                                 \n                                                                                            \n        <destinationPolicy>                                                                 \n            <policyMap>                                                                     \n              <policyEntries>                                                               \n\n\n                <policyEntry topic=\">\" producerFlowControl=\"false\" memoryLimit=\"1mb\">\n\n                  <deadLetterStrategy>\n                    <!--              \n                      Use the prefix 'DLQ.' for the destination name, and make\n                      the DLQ a queue rather than a topic                     \n                    -->                                                       \n                    <individualDeadLetterStrategy                             \n                      queuePrefix=\"DLQ.\" useQueueForQueueMessages=\"true\" />   \n                  <\/deadLetterStrategy>\n\n                  <pendingSubscriberPolicy>\n                    <vmCursor />\n                  <\/pendingSubscriberPolicy>\n                <\/policyEntry>\n                <policyEntry queue=\">\" producerFlowControl=\"false\" memoryLimit=\"1mb\">\n                  <!-- Use VM cursor for better latency\n                       For more information, see:\n\n                       http://activemq.apache.org/message-cursors.html\n\n                  <pendingQueuePolicy>\n                    <vmQueueCursor/>\n                  <\/pendingQueuePolicy>\n                  -->\n                <\/policyEntry>\n              <\/policyEntries>\n            <\/policyMap>\n        <\/destinationPolicy>\n\n         <!--\n            The systemUsage controls the maximum amount of space the broker will\n            use before slowing down producers. For more information, see:\n\n            nfigur\n            http://activemq.apache.org/producer-flow-control.html\n\n        <systemUsage>\n            <systemUsage>\n                <memoryUsage>\n                    <memoryUsage limit=\"20 mb\"/>\n                <\/memoryUsage>\n                <storeUsage>\n                    <storeUsage limit=\"1 gb\" name=\"foo\"/>\n                <\/storeUsage>\n                <tempUsage>\n                    <tempUsage limit=\"100 mb\"/>\n                <\/tempUsage>\n            <\/systemUsage>\n        <\/systemUsage>\n                -->\n\n        <!--\n            The transport connectors expose ActiveMQ over a given protocol to\n            clients and other brokers. For more information, see:\n\n            http://activemq.apache.org/configuring-transports.html\n        -->\n        <transportConnectors>\n            <transportConnector name=\"openwire\" uri=\"tcp://0.0.0.0:61616\"/>\n        <\/transportConnectors>\n\n    <\/broker>\n\n    <!--\n        Uncomment to enable Camel\n        Take a look at activemq-camel.xml for more details\n\n    <import resource=\"camel.xml\"/>\n    -->\n\n    <!--\n        Enable web consoles, REST and Ajax APIs and demos\n        Take a look at activemq-jetty.xml for more details\n    -->\n    <import resource=\"jetty.xml\"/>\n\n<\/beans>\n---\n",
        "duedate": null,
        "environment": null,
        "fixVersions": [{
            "archived": false,
            "description": "",
            "id": "12315621",
            "name": "5.3.1",
            "releaseDate": "2010-03-23",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315621"
        }],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "id": "2",
            "name": "Critical",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Marc Sch√∂chlin",
            "key": "scoopex",
            "name": "scoopex",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=scoopex",
            "timeZone": "Europe/Berlin"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2010-03-02T15:50:28.000+0000",
        "status": {
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "id": "6",
            "name": "Closed",
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Exception on setting \"sendFailIfNoSpaceAfterTimeout\"",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2010-03-02T17:21:55.000+0000",
        "versions": [{
            "archived": false,
            "description": "",
            "id": "12315620",
            "name": "5.3.0",
            "releaseDate": "2009-10-13",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315620"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2634/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2634/watchers",
            "watchCount": 0
        },
        "workratio": -1
    },
    "id": "12482988",
    "key": "AMQ-2634",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12482988"
}