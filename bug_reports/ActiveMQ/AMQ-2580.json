{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Gary Tully",
            "key": "gtully",
            "name": "gtully",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=gtully",
            "timeZone": "Etc/UTC"
        },
        "components": [{
            "id": "12313891",
            "name": "Selector",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12313891"
        }],
        "created": "2010-01-22T14:46:09.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Phillip Henry",
            "key": "philliph",
            "name": "philliph",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=philliph",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310041": [{
            "id": "10042",
            "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10042",
            "value": "Patch Available"
        }],
        "customfield_12310080": null,
        "customfield_12310220": "2010-01-25T16:09:16.542+0000",
        "customfield_12310222": "3_*:*_1_*:*_104629814_*|*_1_*:*_1_*:*_15623367422_*|*_5_*:*_1_*:*_0",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "1.0",
        "customfield_12310420": "74885",
        "customfield_12310920": "159871",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0rq3b:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jul 23 15:39:27 UTC 2010",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "1. Create a connection factory with a message prefetch size of PREFETCH_SIZE.\n2. Create a durable subscriber to a Topic with a message selector of \"a=X\". \n3. Disconnect.\n4. More than PREFETCH_SIZE messages are then put onto the Topic with a string property \"a=Y\".\n5. Just one message is put onto the Topic with string property \"a=X\".\n6. The durable subscriber connects again but it does not get the message with string property \"a=X\". In fact, it gets nothing.\n\nIt appears that upon reconnecting, the message selector is not respected when retrieving the message from storage.\n\nI've got a unit test to demonstrate this plus a proposed fix.\n\n{code}\n### Eclipse Workspace Patch 1.0\n#P activemq\nIndex: activemq-core/src/main/java/org/apache/activemq/store/kahadaptor/KahaTopicReferenceStore.java\n===================================================================\n--- activemq-core/src/main/java/org/apache/activemq/store/kahadaptor/KahaTopicReferenceStore.java       (revision 900353)\n+++ activemq-core/src/main/java/org/apache/activemq/store/kahadaptor/KahaTopicReferenceStore.java       (working copy)\n@@ -306,7 +306,7 @@\n                                 count++;\n                                 container.setBatchEntry(msg.getMessageId(), entry);\n                             } else {\n-                                break;\n+                                //break;\n                             }\n                         } else {\n                             container.reset();\nIndex: activemq-core/src/main/java/org/apache/activemq/store/amq/RecoveryListenerAdapter.java\n===================================================================\n--- activemq-core/src/main/java/org/apache/activemq/store/amq/RecoveryListenerAdapter.java      (revision 900353)\n+++ activemq-core/src/main/java/org/apache/activemq/store/amq/RecoveryListenerAdapter.java      (working copy)\n@@ -46,10 +46,11 @@\n     \n     public boolean recoverMessage(Message message) throws Exception {\n         if (listener.hasSpace()) {\n-            listener.recoverMessage(message);\n-            lastRecovered = message.getMessageId();\n-            count++;\n-            return true;\n+            if (listener.recoverMessage(message)) {\n+                lastRecovered = message.getMessageId();\n+                count++;\n+                return true;\n+            }\n         }\n         return false;\n     }\nIndex: activemq-pool/src/test/java/org/apache/activemq/pool/PrefetchTest.java\n===================================================================\n--- activemq-pool/src/test/java/org/apache/activemq/pool/PrefetchTest.java      (revision 0)\n+++ activemq-pool/src/test/java/org/apache/activemq/pool/PrefetchTest.java      (revision 0)\n@@ -0,0 +1,174 @@\n+package org.apache.activemq.pool;\n+\n+import java.io.File;\n+\n+import javax.jms.JMSException;\n+import javax.jms.MessageConsumer;\n+import javax.jms.MessageProducer;\n+import javax.jms.Session;\n+import javax.jms.TextMessage;\n+import javax.jms.Topic;\n+import javax.jms.TopicConnection;\n+import javax.jms.TopicSession;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.activemq.ActiveMQConnectionFactory;\n+import org.apache.activemq.ActiveMQPrefetchPolicy;\n+import org.apache.activemq.broker.BrokerService;\n+import org.apache.activemq.store.PersistenceAdapter;\n+\n+public class PrefetchTest extends TestCase {\n+\n+       private static final String TOPIC_NAME = \"topicName\";\n+       private static final String CLIENT_ID = \"client_id\";\n+       private static final String textOfSelectedMsg = \"good_message\";\n+\n+       protected TopicConnection connection;\n+\n+       private Topic topic;\n+       private Session session;\n+       private MessageProducer producer;\n+       private PooledConnectionFactory connectionFactory;\n+       private TopicConnection topicConnection;\n+       private String bindAddress;\n+       private BrokerService service;\n+\n+       protected void setUp() throws Exception {\n+               bindAddress = \"tcp://localhost:61616\";\n+               super.setUp();\n+               initDurableBroker();\n+               initConnectionFactory();\n+               initTopic();\n+\n+       }\n+\n+       protected void tearDown() throws Exception {\n+           shutdownClient();\n+               connectionFactory.stop();\n+               service.stop();\n+               super.tearDown();\n+       }\n+\n+       private void initConnection() throws JMSException {\n+           System.out.println(\"Initializing connection\");\n+               connection = (TopicConnection) connectionFactory.createConnection(); \n+               connection.start();\n+       }\n+\n+    public void testTopicIsDurableSmokeTest() throws Exception {\n+        \n+       initClient();\n+       MessageConsumer consumer = createMessageConsumer();\n+       System.out.println(\"Consuming message\");\n+       assertNull(consumer.receive(1));\n+       shutdownClient();\n+       consumer.close();\n+    \n+       sendMessages();\n+       shutdownClient();\n+    \n+       initClient();\n+       consumer = createMessageConsumer();\n+    \n+       System.out.println(\"Consuming message\");\n+       TextMessage answer1 = (TextMessage)consumer.receive(1000);\n+       assertNotNull(answer1);\n+    \n+       consumer.close();\n+    }\n+    \n+    private MessageConsumer createMessageConsumer() throws JMSException {\n+        System.out.println(\"creating durable subscriber\");\n+       return session.createDurableSubscriber(topic, \n+               TOPIC_NAME, \n+               \"name='value'\", \n+               false);\n+    }\n+\n+       private void initClient() throws JMSException {\n+           System.out.println(\"Initializing client\");\n+           \n+               initConnection();\n+       initSession();\n+       }\n+\n+       private void shutdownClient()\n+                       throws JMSException {\n+           System.out.println(\"Closing session and connection\");\n+        session.close();\n+        connection.close();\n+        session = null;\n+        connection = null;\n+       }\n+\n+       private void sendMessages()\n+                       throws JMSException {\n+           initConnection();\n+\n+               initSession();\n+\n+               System.out.println(\"Creating producer\");\n+               producer = session.createProducer(topic);\n+\n+               sendMessageThatFailsSelection();\n+        \n+               sendMessage(textOfSelectedMsg, \"value\");\n+       }\n+\n+       private void initSession() throws JMSException {\n+           System.out.println(\"Initializing session\");\n+               session = connection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);\n+       }\n+\n+       private void sendMessageThatFailsSelection() throws JMSException {\n+               for (int i = 0 ; i < 5 ; i++) {\n+                       String textOfNotSelectedMsg = \"Msg_\" + i;\n+                       sendMessage(textOfNotSelectedMsg, \"not_value\");\n+                       System.out.println(\"#\");\n+               }\n+       }\n+\n+       private void sendMessage(\n+                       String msgText,\n+                       String propertyValue) throws JMSException {\n+           System.out.println(\"Creating message: \" + msgText);\n+               TextMessage messageToSelect = session.createTextMessage(msgText);\n+        messageToSelect.setStringProperty(\"name\", propertyValue);\n+        System.out.println(\"Sending message\");\n+               producer.send(messageToSelect);\n+       }\n+\n+       protected void initConnectionFactory() {\n+               ActiveMQConnectionFactory activeMqConnectionFactory = createActiveMqConnectionFactory();\n+               connectionFactory = new PooledConnectionFactory(activeMqConnectionFactory);\n+       }\n+\n+\n+       private ActiveMQConnectionFactory createActiveMqConnectionFactory() {\n+               ActiveMQConnectionFactory activeMqConnectionFactory = new ActiveMQConnectionFactory();\n+        ActiveMQPrefetchPolicy prefetchPolicy = new ActiveMQPrefetchPolicy();\n+        prefetchPolicy.setDurableTopicPrefetch(2);\n+               activeMqConnectionFactory.setPrefetchPolicy(prefetchPolicy );\n+        activeMqConnectionFactory.setClientID(CLIENT_ID);\n+               return activeMqConnectionFactory;\n+       }\n+\n+       private void initDurableBroker() throws Exception {\n+               service = new BrokerService();\n+               PersistenceAdapter persistenceAdaptor = service.getPersistenceAdapter();\n+               File file = new File(\"phills_durable_dir\");\n+               persistenceAdaptor.setDirectory(file);\n+               service.setTransportConnectorURIs(new String[] { bindAddress } );\n+               service.setPersistent(true);\n+               service.setUseJmx(true);\n+               service.start();\n+\n+       }\n+\n+       private void initTopic() throws JMSException {\n+               topicConnection = (TopicConnection) connectionFactory.createConnection();\n+               TopicSession topicSession = topicConnection.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);\n+               topic = topicSession.createTopic(TOPIC_NAME);\n+       }\n+}\n{code}",
        "duedate": null,
        "environment": "phillip:~ henryp$ uname -a\nDarwin phillip.fritz.box 9.8.0 Darwin Kernel Version 9.8.0: Wed Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386 i386\nphillip:~ henryp$ java -version\njava version \"1.5.0_20\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_20-b02-315)\nJava HotSpot(TM) Client VM (build 1.5.0_20-141, mixed mode, sharing)",
        "fixVersions": [{
            "archived": false,
            "description": "version 5 feature complete",
            "id": "12315623",
            "name": "5.4.0",
            "releaseDate": "2010-08-17",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315623"
        }],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Phillip Henry",
            "key": "philliph",
            "name": "philliph",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=philliph",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2010-07-23T15:39:27.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Durable subscribers receives nothing when reconnecting with a prefetch size less than the number of messages that don't match a message selector",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2010-07-23T15:39:27.000+0000",
        "versions": [{
            "archived": false,
            "description": "",
            "id": "12315620",
            "name": "5.3.0",
            "releaseDate": "2009-10-13",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315620"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2580/votes",
            "votes": 3
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-2580/watchers",
            "watchCount": 4
        },
        "workratio": -1
    },
    "id": "12482587",
    "key": "AMQ-2580",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12482587"
}