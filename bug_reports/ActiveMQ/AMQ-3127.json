{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "id": "12313892",
            "name": "Broker",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12313892"
        }],
        "created": "2011-01-10T21:46:32.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Stirling Chow",
            "key": "stirlingc",
            "name": "stirlingc",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=stirlingc",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310041": [{
            "id": "10042",
            "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10042",
            "value": "Patch Available"
        }],
        "customfield_12310080": null,
        "customfield_12310220": "2011-01-11T14:20:11.159+0000",
        "customfield_12310222": "1_*:*_1_*:*_34110496031_*|*_6_*:*_1_*:*_22314769020_*|*_5_*:*_1_*:*_0_*|*_4_*:*_1_*:*_53983997836",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "3.0",
        "customfield_12310420": "74730",
        "customfield_12310920": "62503",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0b2ev:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jul 11 19:00:55 UTC 2014",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "Symptom\n=======\nWe have an AMQ 5.3.1 production environment with 7 brokers networked over HTTP using the DiscoveryNetworkConnector and SimpleDiscoveryAgent.  The brokers share a number of topics and queues.  Periodically, we have a catastrophic (cause still uknown) network outage that only affects the outbound bridges from one of the 7 brokers.  The affected broker detects the outage, stops the existing 6 outbound bridges, and starts 6 new outbound bridges.  Frequently, we find that the outbound bridges appear to be recreated properly, but messages produced by the affected broker to *some* of its shared queues/topics are no longer dispatched to the remote brokers.\n\nWe have verified that the cause of this issue exists in AMQ 5.4.2.\n\nCause\n=====\nAnalysis of the affected broker's threads revealed a deadlock between one of the BrokerService threads, which was dispatching a message across an outbound bridge, and a transport thread (e.g., VMTransport or HTTP Reader) that was receiving a new subscriptions from the outbound bridge:\n\nDaemon Thread [BrokerService[broker1] Task] (Suspended)\t\n\towns: Object  (id=104)\t\n\towns: Object  (id=105)\t\n\towns: Object  (id=106)\t\n\towns: Queue$3  (id=107)\t\n\twaiting for: Object  (id=108)\t\n\t\towned by: Daemon Thread [VMTransport] (Running)\t\n\tMutexTransport.oneway(Object) line: 40\t\n\tResponseCorrelator.oneway(Object) line: 60\t\n\tDemandForwardingBridge(DemandForwardingBridgeSupport).serviceLocalCommand(Command) line: 738\t\n\tDemandForwardingBridgeSupport$2.onCommand(Object) line: 161\t\n\tResponseCorrelator.onCommand(Object) line: 116\t\n\tMutexTransport(TransportFilter).onCommand(Object) line: 69\t\n\tVMTransport.dispatch(VMTransport, TransportListener, Object) line: 122\t\n\tVMTransport.oneway(Object) line: 113\t\n\tMutexTransport.oneway(Object) line: 40\t\n\tResponseCorrelator.oneway(Object) line: 60\t\n\tManagedTransportConnection(TransportConnection).dispatch(Command) line: 1249\t\n\tManagedTransportConnection(TransportConnection).processDispatch(Command) line: 810\t\n\tManagedTransportConnection(TransportConnection).dispatchSync(Command) line: 770\t\n\tQueueSubscription(PrefetchSubscription).dispatch(MessageReference) line: 649\t\n\tQueueSubscription(PrefetchSubscription).dispatchPending() line: 599\t\n\tQueueSubscription(PrefetchSubscription).add(MessageReference) line: 156\t\n\tQueue.doActualDispatch(List<QueueMessageReference>) line: 1798\t\n\tQueue.doDispatch(List<QueueMessageReference>) line: 1745\t\n\tQueue.pageInMessages(boolean) line: 1898\t\n\tQueue.iterate() line: 1425\t\n\tPooledTaskRunner.runTask() line: 122\t\n\tPooledTaskRunner$1.run() line: 43\t\n\tThreadPoolExecutor$Worker.runTask(Runnable) line: 886\t\n\tThreadPoolExecutor$Worker.run() line: 908\t\n\tThread.run() line: 662\t\n\nDaemon Thread [VMTransport] (Suspended)\t\n\towns: Object  (id=499)\t\n\towns: RegionBroker$1  (id=205)\t\n\t\twaited by: Daemon Thread [VMTransport] (Running)\t\n\t\twaited by: Daemon Thread [ActiveMQ Broker[broker1] Scheduler] (Running)\t\n\towns: Object  (id=108)\t\n\t\twaited by: Daemon Thread [BrokerService[broker1] Task] (Suspended)\t\n\towns: URI  (id=500)\t\n\tUnsafe.park(boolean, long) line: not available [native method]\t\n\tLockSupport.park(Object) line: 158\t\n\tReentrantReadWriteLock$NonfairSync(AbstractQueuedSynchronizer).parkAndCheckInterrupt() line: 811\t\n\tReentrantReadWriteLock$NonfairSync(AbstractQueuedSynchronizer).acquireQueued(AbstractQueuedSynchronizer$Node, int) line: 842\t\n\tReentrantReadWriteLock$NonfairSync(AbstractQueuedSynchronizer).acquire(int) line: 1178\t\n\tReentrantReadWriteLock$WriteLock.lock() line: 807\t\n\tQueue.addSubscription(ConnectionContext, Subscription) line: 360\t\n\tManagedQueueRegion(AbstractRegion).addConsumer(ConnectionContext, ConsumerInfo) line: 290\t\n\tManagedRegionBroker(RegionBroker).addConsumer(ConnectionContext, ConsumerInfo) line: 444\t\n\tManagedRegionBroker.addConsumer(ConnectionContext, ConsumerInfo) line: 240\t\n\tAdvisoryBroker(BrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 89\t\n\tAdvisoryBroker.addConsumer(ConnectionContext, ConsumerInfo) line: 91\t\n\tCompositeDestinationBroker(BrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 89\t\n\tTransactionBroker(BrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 89\t\n\tBrokerService$3(MutableBrokerFilter).addConsumer(ConnectionContext, ConsumerInfo) line: 95\t\n\tManagedTransportConnection(TransportConnection).processAddConsumer(ConsumerInfo) line: 550\t\n\tConsumerInfo.visit(CommandVisitor) line: 349\t\n\t\nSpecifically, a message had been produced to one of the shared queues and was being dispatched to a remote consumer by the BrokerService thread.  In so doing, BrokerService had acquired the pagedInPendingDispatchLock lock from Queue.java:\n\n    private void doDispatch(List<QueueMessageReference> list) throws Exception {\n        boolean doWakeUp = false;\n\n        pagedInPendingDispatchLock.writeLock().lock();\n\t\nBrokerService had sent the message to the remote broker was then acknowledging the local transport in DemandForwardingBridgeSupport.java:\n\n    protected void serviceLocalCommand(Command command) {\n    ...\n                        if (!message.isResponseRequired()) {\n                            \n                            // If the message was originally sent using async\n                            // send, we will preserve that QOS\n                            // by bridging it using an async send (small chance\n                            // of message loss).\n                            try {\n                                remoteBroker.oneway(message);\n                                localBroker.oneway(new MessageAck(md, MessageAck.INDIVIDUAL_ACK_TYPE, 1));\n\nSince localBroker was a synchronous VMTransport, BrokerService had to then acquire the write mutex in MutexTransport.java:\n\n    public void oneway(Object command) throws IOException {\n        synchronized (writeMutex) {\n            next.oneway(command);\n        }\n    }\n\nSo the dispatching thread (BrokerService) had acquired Queue.pagedInPendingDispatchLock was trying to acquire MutexTransport.writeMutex.\n\nAt the same time, a new remote consumer was being registered through the same outbound bridge through which the aforementioned dispatch was ocurring.  The bridge's remote transport listener thread (in this example, VMTransport) was adding the subscription through DemandForwardingBridgeSupport.java:\n\n    protected void addSubscription(DemandSubscription sub) throws IOException {\n        if (sub != null) {\n            localBroker.oneway(sub.getLocalInfo());\n        }\n    }\n\nAgain, localBroker is synchronous, so the VMTransport thread acquired MutexTransport.writeMutex.  Registration of consumers to a queue is synchronized with the dispatching of messages, as shown in Queue.java:\n\n    public void addSubscription(ConnectionContext context, Subscription sub) throws Exception {\n        super.addSubscription(context, sub);\n        // synchronize with dispatch method so that no new messages are sent\n        // while setting up a subscription. avoid out of order messages,\n        // duplicates, etc.\n        pagedInPendingDispatchLock.writeLock().lock();\n\nSo the remote transport listening thread (VMTransport) had acquired MutexTransport.writeMutex and was trying to acquire Queue.pagedInPendingDispatchLock, thus creating a deadlock with BrokerService.\n\nSolution\n======\nDeadlock can be avoided by making the local transport asynchronous, which would allow the remote transport listener thread to acquire the MutexTransport.writeMutex, but then offload the acquisition of Queue.pagedInPendingDispatchLock to its peer listening thread.  We've included a unit test that passes with this change.\n\nThere is no clear reason why the local transport is asynchronous.  This is enforced by BrokerService.java when it starts the network connectors:\n\n    protected void startAllConnectors() throws Exception {\n....\n            URI uri = getVmConnectorURI();\n            Map<String, String> map = new HashMap<String, String>(URISupport.parseParameters(uri));\n            map.put(\"network\", \"true\");\n            map.put(\"async\", \"false\");\n\nThis change was made by the following checkin, but no rational was given:\n\nRevision: 553094\nAuthor: rajdavies\nDate: 11:33:48 PM, July 3, 2007\nMessage:\nset async=false for network connectors\n----\nModified : /activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/BrokerService.java\n\nAddendum\n=========\nWe've included a unit test that demonstrates the deadlock 100% of the time on our systems.  Since this is a timing issue, you may need to run the unit test several times to create the deadlock.  Also note that three specific configurations must exist to create the deadlock:\n\n1) The bridge must have conduit subscriptions disabled; this is so that there can be an existing subscription across the bridge to which messages are being dispatched while at the same time another subscription is being added.\n2) The bridge must be configured to dispatch synchronously; this is so that message subscriptions are are dispatched by the same thread that accesses the queue.\n3) The message producers must be transactionalized; this is so that the message dispatches require a response by the dispatch thread (i.e., BrokerService).\n\nIf any of these conditions is not present, deadlock (at least through this recreation) does not occur.\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\n\n\n\nThrough further testing ",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [
            {
                "id": "12337598",
                "inwardIssue": {
                    "fields": {
                        "issuetype": {
                            "avatarId": 21133,
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "id": "1",
                            "name": "Bug",
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "subtask": false
                        },
                        "priority": {
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
                            "id": "2",
                            "name": "Critical",
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/2"
                        },
                        "status": {
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "id": "5",
                            "name": "Resolved",
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "statusCategory": {
                                "colorName": "green",
                                "id": 3,
                                "key": "done",
                                "name": "Done",
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                            }
                        },
                        "summary": "Closing a VMTransport can cause all other VMTransports to be prematurely closed"
                    },
                    "id": "12499175",
                    "key": "AMQ-3185",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12499175"
                },
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12337598",
                "type": {
                    "id": "10030",
                    "inward": "is related to",
                    "name": "Reference",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                }
            },
            {
                "id": "12372026",
                "inwardIssue": {
                    "fields": {
                        "issuetype": {
                            "avatarId": 21133,
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "id": "1",
                            "name": "Bug",
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "subtask": false
                        },
                        "priority": {
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "id": "3",
                            "name": "Major",
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                        },
                        "status": {
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "id": "6",
                            "name": "Closed",
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "statusCategory": {
                                "colorName": "green",
                                "id": 3,
                                "key": "done",
                                "name": "Done",
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                            }
                        },
                        "summary": "Fix of AMQ-4328 causes deadlocks during set up of the bridge"
                    },
                    "id": "12657712",
                    "key": "AMQ-4632",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12657712"
                },
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12372026",
                "type": {
                    "id": "10030",
                    "inward": "is related to",
                    "name": "Reference",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                }
            }
        ],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "id": "2",
            "name": "Critical",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Stirling Chow",
            "key": "stirlingc",
            "name": "stirlingc",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=stirlingc",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2014-07-11T19:00:55.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Network bridge causes deadlock on queue/topic when message dispatch and consumer registration overlap.",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2014-07-11T19:00:55.000+0000",
        "versions": [{
            "archived": false,
            "description": "",
            "id": "12315625",
            "name": "5.4.2",
            "releaseDate": "2010-12-02",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12315625"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-3127/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-3127/watchers",
            "watchCount": 2
        },
        "workratio": -1
    },
    "id": "12495173",
    "key": "AMQ-3127",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12495173"
}