{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [],
        "created": "2015-03-04T00:11:37.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Endre Stølsvik",
            "key": "stolsvik",
            "name": "stolsvik",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=stolsvik",
            "timeZone": "Europe/Oslo"
        },
        "customfield_10010": null,
        "customfield_12310041": null,
        "customfield_12310080": null,
        "customfield_12310220": "2015-03-04T14:30:06.754+0000",
        "customfield_12310222": "1_*:*_1_*:*_51509431_*|*_6_*:*_1_*:*_0",
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i26blb:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 04 14:30:06 UTC 2015",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "Compared to the other property getters (except for String and Object, which are clearly documented in spec as should return null), the getBoolanProperty just returns false if the value is not present.\n\nMapMessage, line ~583:\n{code}\n    public boolean getBooleanProperty(String name) throws JMSException {\n        Object value = getObjectProperty(name);\n        if (value == null) {\n            return false;\n        }\n        Boolean rc = (Boolean) TypeConversionSupport.convert(value, Boolean.class);\n        if (rc == null) {\n            throw new MessageFormatException(\"Property \" + name + \" was a \" + value.getClass().getName() + \" and cannot be read as a boolean\");\n        }\n        return rc.booleanValue();\n    }\n{code}\n\nCompared to e.g. getByteProperty right below:\n{code}\n    public byte getByteProperty(String name) throws JMSException {\n        Object value = getObjectProperty(name);\n        if (value == null) {\n            throw new NumberFormatException(\"property \" + name + \" was null\");\n        }\n        Byte rc = (Byte) TypeConversionSupport.convert(value, Byte.class);\n        if (rc == null) {\n            throw new MessageFormatException(\"Property \" + name + \" was a \" + value.getClass().getName() + \" and cannot be read as a byte\");\n        }\n        return rc.byteValue();\n    }\n{code}\n\nor getFloatProperty some methods below:\n{code}\n    public float getFloatProperty(String name) throws JMSException {\n        Object value = getObjectProperty(name);\n        if (value == null) {\n            throw new NullPointerException(\"property \" + name + \" was null\");\n        }\n        Float rc = (Float) TypeConversionSupport.convert(value, Float.class);\n        if (rc == null) {\n            throw new MessageFormatException(\"Property \" + name + \" was a \" + value.getClass().getName() + \" and cannot be read as a float\");\n        }\n        return rc.floatValue();\n    }\n{code}",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311210&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311210&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311210&avatarId=10011",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12311210&avatarId=10011"
            },
            "id": "12311210",
            "key": "AMQ",
            "name": "ActiveMQ",
            "projectCategory": {
                "description": "ActiveMQ",
                "id": "11160",
                "name": "ActiveMQ",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/11160"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12311210"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Endre Stølsvik",
            "key": "stolsvik",
            "name": "stolsvik",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=stolsvik",
            "timeZone": "Europe/Oslo"
        },
        "resolution": {
            "description": "The described issue is not actually a problem - it is as designed.",
            "id": "8",
            "name": "Not A Problem",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/8"
        },
        "resolutiondate": "2015-03-04T14:30:06.000+0000",
        "status": {
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "id": "6",
            "name": "Closed",
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "MapMessage.getBooleanProperty should probably throw if value not present",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2015-03-04T14:30:06.000+0000",
        "versions": [],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-5633/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/AMQ-5633/watchers",
            "watchCount": 2
        },
        "workratio": -1
    },
    "id": "12779243",
    "key": "AMQ-5633",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12779243"
}