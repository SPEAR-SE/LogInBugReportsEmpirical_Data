{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "percent": 100,
            "progress": 3000,
            "total": 3000
        },
        "aggregatetimeestimate": 0,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": 3000,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Stig Rohde Døssing",
            "key": "srdo",
            "name": "Srdo",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Srdo",
            "timeZone": "Europe/Copenhagen"
        },
        "components": [
            {
                "id": "12331080",
                "name": "storm-kafka-client",
                "self": "https://issues.apache.org/jira/rest/api/2/component/12331080"
            },
            {
                "id": "12328904",
                "name": "trident",
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328904"
            }
        ],
        "created": "2018-04-27T07:32:30.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055"
            },
            "displayName": "Kush Khandelwal",
            "key": "kush.kh",
            "name": "kush.kh",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kush.kh",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310220": "2018-04-27T19:20:51.949+0000",
        "customfield_12310222": "1_*:*_1_*:*_356010185_*|*_3_*:*_1_*:*_5956502853_*|*_5_*:*_1_*:*_0",
        "customfield_12310250": [{
            "id": "10431",
            "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10431",
            "value": "Important"
        }],
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "1.0",
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i3t3h3:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jul 13 02:15:14 UTC 2018",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "I am using storm-core and storm-kafka-client version 1.2.1 and kafka clients version 1.1.0.\r\n\r\nWe have an external kafka from where we get the messages.\r\n Whenever I try to run the topology, I get a NPE, which leads to the worker getting died.\r\nIf I set poll strategy to earliest and the topic already contains some messages, it works fine.\r\n I have used a custom record translator which is working fine.\r\n\r\n Can someone please help me fix the issue?\r\n\r\nThanks.\r\n\r\n \r\n\r\nError - \r\n\r\n10665 [Thread-58-spout-handle-rule-local-kafka-spout-executor[26 26]] ERROR o.a.s.util - Async loop died!\r\n java.lang.RuntimeException: java.lang.NullPointerException\r\n at org.apache.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:522) ~[storm-core-1.2.1.jar:1.2.1]\r\n at org.apache.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(DisruptorQueue.java:487) ~[storm-core-1.2.1.jar:1.2.1]\r\n at org.apache.storm.disruptor$consume_batch_when_available.invoke(disruptor.clj:74) ~[storm-core-1.2.1.jar:1.2.1]\r\n at org.apache.storm.daemon.executor$fn__5043$fn__5056$fn__5109.invoke(executor.clj:861) ~[storm-core-1.2.1.jar:1.2.1]\r\n at org.apache.storm.util$async_loop$fn__557.invoke(util.clj:484) [storm-core-1.2.1.jar:1.2.1]\r\n at clojure.lang.AFn.run(AFn.java:22) [clojure-1.7.0.jar:?]\r\n at java.lang.Thread.run(Thread.java:748) [?:1.8.0_131]\r\n Caused by: java.lang.NullPointerException\r\n at org.apache.storm.kafka.spout.trident.KafkaTridentSpoutEmitter.seek(KafkaTridentSpoutEmitter.java:193) ~[storm-kafka-client-1.2.1.jar:1.2.1]\r\n at org.apache.storm.kafka.spout.trident.KafkaTridentSpoutEmitter.emitPartitionBatch(KafkaTridentSpoutEmitter.java:127) ~[storm-kafka-client-1.2.1.jar:1.2.1]\r\n at org.apache.storm.kafka.spout.trident.KafkaTridentSpoutEmitter.emitPartitionBatch(KafkaTridentSpoutEmitter.java:51) ~[storm-kafka-client-1.2.1.jar:1.2.1]\r\n at org.apache.storm.trident.spout.OpaquePartitionedTridentSpoutExecutor$Emitter.emitBatch(OpaquePartitionedTridentSpoutExecutor.java:141) ~[storm-core-1.2.1.jar:1.2.1]\r\n at org.apache.storm.trident.spout.TridentSpoutExecutor.execute(TridentSpoutExecutor.java:82) ~[storm-core-1.2.1.jar:1.2.1]\r\n at org.apache.storm.trident.topology.TridentBoltExecutor.execute(TridentBoltExecutor.java:383) ~[storm-core-1.2.1.jar:1.2.1]\r\n at org.apache.storm.daemon.executor$fn__5043$tuple_action_fn__5045.invoke(executor.clj:739) ~[storm-core-1.2.1.jar:1.2.1]\r\n at org.apache.storm.daemon.executor$mk_task_receiver$fn__4964.invoke(executor.clj:468) ~[storm-core-1.2.1.jar:1.2.1]\r\n at org.apache.storm.disruptor$clojure_handler$reify__4475.onEvent(disruptor.clj:41) ~[storm-core-1.2.1.jar:1.2.1]\r\n at org.apache.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:509) ~[storm-core-1.2.1.jar:1.2.1]\r\n ... 6 more\r\n\r\n \r\n\r\n \r\n\r\nTopology class - \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nimport org.apache.storm.Config;\r\nimport org.apache.storm.LocalCluster;\r\nimport org.apache.storm.StormSubmitter;\r\nimport org.apache.storm.generated.*;\r\nimport org.apache.storm.kafka.spout.KafkaSpoutConfig;\r\nimport org.apache.storm.kafka.spout.trident.KafkaTridentSpoutOpaque;\r\nimport org.apache.storm.trident.Stream;\r\nimport org.apache.storm.trident.TridentState;\r\nimport org.apache.storm.trident.TridentTopology;\r\nimport org.apache.storm.tuple.Fields;\r\n\r\nimport java.util.Properties;\r\n\r\n \r\n\r\n\r\npublic class TestTopology {\r\n\r\n \r\n\r\nprivate static StormTopology buildTopology(Properties stormProperties) {\r\n \r\n\r\nProperties kafkaProperties = getProperties(\"/kafka.properties\");\r\n TridentTopology topology = new TridentTopology();\r\n\r\n\r\n\r\nFields stageArguments = new Fields(\"test\", \"issue\");\r\n\r\n\r\n\r\n\r\nKafkaSpoutConfig<String, String> kafkaSpoutConfig = KafkaSpoutConfig.builder(kafkaProperties.getProperty(\"bootstrap.servers\"), \"test\")\r\n .setFirstPollOffsetStrategy(KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST)\r\n .setProcessingGuarantee(KafkaSpoutConfig.ProcessingGuarantee.AT_MOST_ONCE)\r\n .setRecordTranslator(new RecordTranslator(), stageArguments)\r\n .build();\r\n\r\n\r\n\r\n\r\n\r\n\r\nKafkaTridentSpoutOpaque kafkaTridentSpoutOpaque = new KafkaTridentSpoutOpaque(kafkaSpoutConfig);\r\n\r\n\r\nGrouping partitionGroup = getPartitionGroup(\"test\");\r\n\r\nlog.info(\"Creating Opaque-Trident-Kafka-Spout\");\r\n\r\n\r\n\r\nfinal Stream kafkaSpout = topology.newStream(stormProperties.getProperty(\"SPOUT_NAME\"), kafkaTridentSpoutOpaque).name(\"kafkaSpout\").parallelismHint(1);\r\n \r\nTridentState testUpdate = kafkaSpout.partition(partitionGroup).name(\"testUpdate\").partitionPersist(new MainMemoryStateFactory(), stageArguments, new \r\nMainMemoryStateUpdater(), stageArguments).parallelismHint(1);\r\n \r\n\r\nStream viewUpdate = ruleUpdate.newValuesStream().name(\"viewUpdate\").partition(partitionGroup).each(stageArguments, new UpdateView(), new Fields()).parallelismHint(2);\r\n\r\nreturn topology.build();\r\n }\r\n\r\npublic static void main(String[] args) {\r\n Config conf = new Config();\r\n log.info(\"Topology config: \" + conf);\r\n Properties properties = getProperties(\"/storm-cluster.properties\");\r\n\r\nconf.setMessageTimeoutSecs(600);\r\n\r\nlog.info(\"Building Topology\");\r\n StormTopology topology = buildTopology(properties);\r\n log.info(topology.toString());\r\n\r\nlog.info(\"Submitting handle-rule Topology\");\r\n try {\r\n LocalCluster cluster = new LocalCluster();\r\n cluster.submitTopology(\"handle-rule\", conf, topology);\r\n } catch (Exception e) {\r\n e.printStackTrace();\r\n }\r\n }\r\n\r\n\r\n}",
        "duedate": null,
        "environment": null,
        "fixVersions": [
            {
                "archived": false,
                "id": "12334657",
                "name": "2.0.0",
                "released": false,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12334657"
            },
            {
                "archived": false,
                "id": "12343340",
                "name": "1.2.3",
                "released": false,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343340"
            }
        ],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [
            "kafka",
            "pull-request-available",
            "storm-kafka-client",
            "trident"
        ],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
            "id": "1",
            "name": "Blocker",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/1"
        },
        "progress": {
            "percent": 100,
            "progress": 3000,
            "total": 3000
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667"
            },
            "id": "12314820",
            "key": "STORM",
            "name": "Apache Storm",
            "projectCategory": {
                "description": "Apache Storm Related",
                "id": "13260",
                "name": "Storm",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13260"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12314820"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055"
            },
            "displayName": "Kush Khandelwal",
            "key": "kush.kh",
            "name": "kush.kh",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kush.kh",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2018-07-09T09:01:03.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Getting a NPE leading worker to die when starting a topology.",
        "timeestimate": 0,
        "timeoriginalestimate": null,
        "timespent": 3000,
        "updated": "2018-07-13T02:15:14.000+0000",
        "versions": [{
            "archived": false,
            "id": "12342766",
            "name": "1.2.1",
            "releaseDate": "2018-02-15",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12342766"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/STORM-3046/votes",
            "votes": 1
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/STORM-3046/watchers",
            "watchCount": 5
        },
        "workratio": -1
    },
    "id": "13155646",
    "key": "STORM-3046",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13155646"
}