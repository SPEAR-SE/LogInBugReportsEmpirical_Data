[Seems like asfgit doesn't add comment about PR automatically.

I implemented a patch, and requested for pull.
https://github.com/apache/storm/pull/279, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-57679459
  
    @HeartSaVioR Thanks for the patch. how are users/devs going to configure the TEST-TIMEOUT?
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-57683073
  
    @harshach 
    1. tracked-wait function's usage is equivalent to previous. It's just a bug fix.
    2. We can just add an additional parameter 'timeout-ms' while calling Testing.trackedWait()
    
    Previous usage is below
    ```
    (tracked-wait tracked 1)
    (Testing/trackedWait tracked (int 1))
    ```
    
    We can just add a parameter (3rd parameter) to specify timeout-ms.
    
    Please let me know if you feel I misunderstood your question. Thanks!
, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-57692133
  
    @HeartSaVioR thanks for the details. It would be good if we can expose the test-timeout as a system env variable. so that we can export STORM_TEST_TIMEOUT_MS=30000 if there is none we can use the default value 5000 or 10000 ms.
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-57729584
  
    @harshach 
    Yes. I've rethought about it and it could be good to expose TEST-TIMEOUT-MS because there're various development environments which may take more time to process.
    In addition, developer can present 3rd parameter from tracked-wait to multiple of TEST-TIMEOUT-MS, which can be flexible than current.
    I cannot think system env. before you mentioned. Great approach!
, +1 for making this a lookup to an environment variable, with a default if that variable doesn't exist.

Something like:

{code}
(def TEST-TIMEOUT-MS
  (let [timeout (System/getenv "STORM_TEST_TIMEOUT_MS")]
  (read-string (if timeout timeout "5000"))))
{code}, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-57733079
  
    @harshach I've applied your suggestion.
, [~ptgoetz] I'm completely newbie to Clojure, and I didn't see your comment before applying [~harshach]'s suggestion.
(https://github.com/HeartSaVioR/storm/commit/00d905103c73e485e4c898163bd9a9a1755ff6be)

Your code snippet is clearer and should be faster than my implementation!
I'll change it to yours. Thanks!, Github user harshach commented on a diff in the pull request:

    https://github.com/apache/storm/pull/279#discussion_r18430077
  
    --- Diff: storm-core/src/clj/backtype/storm/testing.clj ---
    @@ -187,7 +187,9 @@
           ;; on windows, the host process still holds lock on the logfile
           (catch Exception e (log-message (.getMessage e)))) ))
     
    -(def TEST-TIMEOUT-MS 5000)
    +(def TEST-TIMEOUT-MS
    +  (let [timeout (System/getenv "STORM_TEST_TIMEOUT_MS")]
    +    (read-string (if timeout timeout "5000"))))
    --- End diff --
    
    @HeartSaVioR  can you change this to parse-int
, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-57910263
  
    @HeartSaVioR overall this looks good to me and works as expected.  Please add a note to DEVELOPER.md  under "Build the code and run the tests"  on setting the test-timeout-ms. I am +1 after the above fixes. Thanks.
, Github user HeartSaVioR commented on a diff in the pull request:

    https://github.com/apache/storm/pull/279#discussion_r18430254
  
    --- Diff: storm-core/src/clj/backtype/storm/testing.clj ---
    @@ -187,7 +187,9 @@
           ;; on windows, the host process still holds lock on the logfile
           (catch Exception e (log-message (.getMessage e)))) ))
     
    -(def TEST-TIMEOUT-MS 5000)
    +(def TEST-TIMEOUT-MS
    +  (let [timeout (System/getenv "STORM_TEST_TIMEOUT_MS")]
    +    (read-string (if timeout timeout "5000"))))
    --- End diff --
    
    @harshach Actually it's @ptgoetz suggestion, but parse-int is clearer that it should be number. I'll change it.
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-57912017
  
    @harshach I've reflected your suggestion. Thanks for reviewing!
, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-57913104
  
    @HeartSaVioR Thanks for the quick turn around. +1
, Github user ptgoetz commented on a diff in the pull request:

    https://github.com/apache/storm/pull/279#discussion_r18547500
  
    --- Diff: DEVELOPER.md ---
    @@ -229,6 +229,9 @@ The following commands must be run from the top-level directory.
         # Build the code and run the tests (requires nodejs, python and ruby installed) 
         $ mvn clean install
     
    +    # Build the code and run the tests, with specifying default test timeout (in millisecond)
    +    $ mvn clean install -DSTORM_TEST_TIMEOUT_MS=10000
    --- End diff --
    
    The code uses an environment variable, but here you are setting a java system property. I think what you want is:
    
    ```
    $ export STORM_TEST_TIMEOUT_MS=10000
    $ mvn clean install
    ```
, Github user HeartSaVioR commented on a diff in the pull request:

    https://github.com/apache/storm/pull/279#discussion_r18551206
  
    --- Diff: DEVELOPER.md ---
    @@ -229,6 +229,9 @@ The following commands must be run from the top-level directory.
         # Build the code and run the tests (requires nodejs, python and ruby installed) 
         $ mvn clean install
     
    +    # Build the code and run the tests, with specifying default test timeout (in millisecond)
    +    $ mvn clean install -DSTORM_TEST_TIMEOUT_MS=10000
    --- End diff --
    
    @ptgoetz Oh, actually I'm about to use environment variable.
    Btw, @harshach @ptgoetz Which is more preferred way from Storm Developers?
    I'm actually fine with both env. variable and system property but I prefer env. variable.
, Github user HeartSaVioR commented on a diff in the pull request:

    https://github.com/apache/storm/pull/279#discussion_r18803151
  
    --- Diff: DEVELOPER.md ---
    @@ -229,6 +229,9 @@ The following commands must be run from the top-level directory.
         # Build the code and run the tests (requires nodejs, python and ruby installed) 
         $ mvn clean install
     
    +    # Build the code and run the tests, with specifying default test timeout (in millisecond)
    +    $ mvn clean install -DSTORM_TEST_TIMEOUT_MS=10000
    --- End diff --
    
    @harshach @ptgoetz Could you advice me which is preferred way in Storm Project?
, Github user curtisallen commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-59975061
  
    Any chance this can make it into v0.9.3-rc2? 
, Github user ptgoetz commented on a diff in the pull request:

    https://github.com/apache/storm/pull/279#discussion_r19171864
  
    --- Diff: DEVELOPER.md ---
    @@ -229,6 +229,9 @@ The following commands must be run from the top-level directory.
         # Build the code and run the tests (requires nodejs, python and ruby installed) 
         $ mvn clean install
     
    +    # Build the code and run the tests, with specifying default test timeout (in millisecond)
    +    $ mvn clean install -DSTORM_TEST_TIMEOUT_MS=10000
    --- End diff --
    
    @HeartSaVioR Let's go with an environment variable. In my testing I found that the way the clojure maven plugin launches java, it clobbers and `-D` arguments passed in.
, Github user HeartSaVioR commented on a diff in the pull request:

    https://github.com/apache/storm/pull/279#discussion_r19186824
  
    --- Diff: DEVELOPER.md ---
    @@ -229,6 +229,9 @@ The following commands must be run from the top-level directory.
         # Build the code and run the tests (requires nodejs, python and ruby installed) 
         $ mvn clean install
     
    +    # Build the code and run the tests, with specifying default test timeout (in millisecond)
    +    $ mvn clean install -DSTORM_TEST_TIMEOUT_MS=10000
    --- End diff --
    
    @ptgoetz OK. I applied it. Please take a look again. Thanks!
, Github user clockfly commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-61641290
  
    +1
, committed.

Thanks, Jungtaek., Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/279
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-61642901
  
    @harshach @ptgoetz @clockfly Thanks for reviewing and merging!
, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-61831975
  
    @clockfly  this patch doesn't work. running this mvn clean install -DSTORM_TEST_TIMEOUT_MS=30000
      (let [timeout (System/getProperty "STORM_TEST_TIMEOUT_MS")]
    the above code in testing.clj won't pick up the -D variable because STORM_TEST_TIMEOUT_MS is not a pom variable.
    As per the above reviews we asked for a change to System/getenv where users can export STORM_TEST_TIMEOUT_MS=10000 and the getenv will pick up but looks like this got merged in without those changes . Can you please revert this patch.
    @HeartSaVioR  Please update the PR with @ptgoetz suggestions. 
, Github user ptgoetz commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-61857050
  
    -1
    
    Per my previous comment, this needs to be an environment variable, not a system property. The problem is that the way that the clojure unit tests are run, system properties specified with the `-D` flag will not get propagated across JVMs. Environment variables will.
    
    @clockfly can you revert the merge?
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-61885540
  
    @ptgoetz @harshach @clockfly 
    I did confused about it at that time. Sorry about my mistake. ;( I'll update it and post new PR.
    Regarding revert plan, actually only last commit makes problem. There was a bug in document, not a code so it may not required to revert all things.
    So we can go with reverting last commit and correcting README.md. Maybe I can take care of it with new PR.
    Let me know your opinions. Thanks.

, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/279#issuecomment-61893230
  
    I re-read my comments, and I found I've mistaken with talking to @ptgoetz . 
    Actually I prefer JVM property, not system environment. Maybe I was confusing about it.
    But it seems be a harder way to support it (regarding propagation of property across JVM), and we're already OK to go with system environment, so I'll update it with system environment.
, GitHub user HeartSaVioR opened a pull request:

    https://github.com/apache/storm/pull/308

    STORM-492 with reverting previous merge

    First of all, I'm sorry for mistake.
    It's for reverting broken #279 and reapply correct patch (using System Environment, not JVM Property).
    So you can find further information from #279.
    
    If Storm project has a rule about reverting and this PR doesn't fit, I'll wait @clockfly to revert, and re-create PR.
    
    @ptgoetz @clockfly @harshach Please take a look and comment. Thanks in advance.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/HeartSaVioR/storm STORM-492-with-revert-merge-and-renew

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/308.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #308
    
----
commit f880d619972bbbb0a1c3519298efbce260112ea6
Author: Jungtaek Lim <kabhwan@gmail.com>
Date:   2014-11-05T22:07:22Z

    Revert "Merge branch 'STORM-492' of https://github.com/HeartSaVioR/storm into STORM-492"
    
    This reverts commit 1b8a32e2c3e8e624fc1ca1863898c3a10834151e, reversing
    changes made to a1e1c1e206bcc22d0721226531fb1328c2d8cd53.

commit 356f9f8b6e986d5e9113ade5a80a228d15b7bc86
Author: Jungtaek Lim <kabhwan@gmail.com>
Date:   2014-11-05T22:20:24Z

    Let users override default test timeout
    
    * Fixed (bug) / Added time-ms from tracked-wait (trackedWait)
    * Provide a method to override default test timeout
    * Add a way to specify default test timeout in ms to DEVELOPER.md

----
, Github user ptgoetz commented on the pull request:

    https://github.com/apache/storm/pull/308#issuecomment-61897392
  
    Thanks @HeartSaVioR. No need to apologize, we all make mistakes. The important part is that we have a community to review and catch them. When we do. :)
    
    I'm fine with not reverting the other commit and just merging this one. It a small change.
    
    +1
    
    -Taylor
, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/308#issuecomment-61898945
  
    Thanks for the quick fix. This looks good to me +1 on merging.
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/308#issuecomment-61931618
  
    Thank you for your kind words!
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/308
, Since it's re-merged, we can close this issue. :), Sorry for the mistake., No, not at all. It's just a reminder. Thanks for reviewing! :), Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/316#issuecomment-63486189
  
    Hello.
    To understand the reason, please reference STORM-492.
    Actually test time is affected to user machine rather than test complexity,
    so fixed timeout value is unusable.
    On 2014년 11월 18일 (화) at 오후 11:24 Ahmet DAL <notifications@github.com> wrote:
    
    > Custom test timeout with variable TEST-TIMEOUT-MS was being defined with
    > System Environment Variable. This cause a problem to define it on every
    > test simply. System property is now being used to define custom
    > TEST-TIMEOUT-MS variable value. This can be simply set before every test as
    >
    > System.setProperty("STORM_TEST_TIMEOUT_MS", "20000");
    > ------------------------------
    > You can merge this Pull Request by running
    >
    >   git pull https://github.com/javrasya/storm master
    >
    > Or view, comment on, or merge it at:
    >
    >   https://github.com/apache/storm/pull/316
    > Commit Summary
    >
    >    - Custom TEST-TIMEOUT-MS Definition Method Changed
    >
    > File Changes
    >
    >    - *M* storm-core/src/clj/backtype/storm/testing.clj
    >    <https://github.com/apache/storm/pull/316/files#diff-0> (2)
    >
    > Patch Links:
    >
    >    - https://github.com/apache/storm/pull/316.patch
    >    - https://github.com/apache/storm/pull/316.diff
    >
    > —
    > Reply to this email directly or view it on GitHub
    > <https://github.com/apache/storm/pull/316>.
    >
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/316#issuecomment-63993272
  
    @javrasya OK. I think it would be better than current.
    Btw, PR seems to need to change, to reflect modified objective.
, Github user javrasya commented on the pull request:

    https://github.com/apache/storm/pull/316#issuecomment-64126434
  
    Changes is done.
, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/316#issuecomment-64132928
  
    @javrasya  @HeartSaVioR I don't understand this change. We already discussed this in another JIRA that having systemProperty doesn't pass in the variable to testing.clj. I tested this PR with following command
     "mvn clean install -DstormTestTimeoutMs=20000"
    and my test timeout still 5000.
    If the intention of this patch is for other tests to increase the timeout they can pass it as parameter to 
    (defn wait-until-cluster-waiting
      "Wait until the cluster is idle. Should be used with time simulation."
      ([cluster-map] (wait-until-cluster-waiting cluster-map TEST-TIMEOUT-MS))
      ([cluster-map timeout-ms]

, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/316#issuecomment-64136784
  
    @harshach Yes, you're right. I didn't intend it. 
    Btw, how about using higher value between system environment and each unit test's custom timeout?
    @javrasha I thought you saw STORM-492 carefully, but you didn't.
    To achieve setting up each test's timeout, it shouldn't rely on system property, it should be done with wait-until-cluster-waiting's parameter, and pick higher value.
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/316#issuecomment-64136825
  
    @javrasya mistakes on mentioning.
, Github user javrasya commented on the pull request:

    https://github.com/apache/storm/pull/316#issuecomment-64173340
  
    @harshach , change is actually because of setting that timeout value in code simply. Environment variable can not be set in code. But property can be set.
    ```
    System.setProperty("stormTestTimeoutMs","5001")
    ```
    It was not for customising  that value on console which is passing `-DstormTestTimeoutMs=5001` parameter.
    
    Are you sure, you tested it well. Cause I tried it and I saw the timeout is changed to 5001. Here is my test;
    ```
    $ mvn -Dtest=net.egemsoft.lol.engine.storm.MainFlowTest#testMainFlow test
    .....
    Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 14.044 sec <<< FAILURE! - in net.egemsoft.lol.engine.storm.MainFlowTest
    testMainFlow(net.egemsoft.lol.engine.storm.MainFlowTest)  Time elapsed: 13.934 sec  <<< FAILURE!
    java.lang.AssertionError: Test timed out (5001ms) (not (every? exhausted? (spout-objects spouts)))
    	at backtype.storm.testing$complete_topology.doInvoke(testing.clj:501)
    	at clojure.lang.RestFn.invoke(RestFn.java:826)
    	at backtype.storm.testing4j$_completeTopology.invoke(testing4j.clj:61)
    	at backtype.storm.Testing.completeTopology(Unknown Source)
    	at net.egemsoft.lol.engine.storm.MainFlowTest$1.run(MainFlowTest.java:147)
    	at backtype.storm.testing4j$_withSimulatedTimeLocalCluster$fn__9107.invoke(testing4j.clj:93)
    	at backtype.storm.testing4j$_withSimulatedTimeLocalCluster.invoke(testing4j.clj:93)
    	at backtype.storm.Testing.withSimulatedTimeLocalCluster(Unknown Source)
    	at net.egemsoft.lol.engine.storm.MainFlowTest.testMainFlow(MainFlowTest.java:77)
    
    
    Results :
    
    Failed tests:
      MainFlowTest.testMainFlow:77 Test timed out (5001ms) (not (every? exhausted? (spout-objects spouts)))
    
    Tests run: 1, Failures: 1, Errors: 0, Skipped: 0
    ```
    
    @HeartSaVioR, my project is in Java. I could not access `wait-until-cluster-waiting` function. Because it is in `testing.clj` and my project is probably using `testing4j.clj`. I looked to all code in `testing4j.clj` there is no access to `wait-until-cluster-waiting`. I think there is no need to access that function neihter. 
    
    I invoke `complete-topology`. I see the function takes `timeout-ms` parameter. It can be given as parameter. But as I mentioned above, I am using testing4j.clj result and the `complete-topology` function in `testing4j.clj`, does not accept `timeout-ms` parameter. Please check it in `testing4j.clj`. 
    
    So there is only way left I can see, `TEST_TIMEOUT_MS` variable should also be fed by system property. 

, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/316#issuecomment-64175854
  
    @javrasya I added trackedWait to have timeout-ms as parameter, but not completeTopology.
    Then we should add a parameter to completeTopology & complete-topology to make it work.
    In JVM we can pass a parameter. If it doesn't have parameter, I think it's better to let them have it.
, Github user javrasya commented on the pull request:

    https://github.com/apache/storm/pull/316#issuecomment-64191337
  
    @HeartSaVioR you are right. This is better solution to add that parameter to `complete-topology` in testing4j.clj. I added this capability to the function but not committed yet. I couldn't find any task and I opened one in JIRA. I'll make new PR. 
, Github user javrasya closed the pull request at:

    https://github.com/apache/storm/pull/316
]