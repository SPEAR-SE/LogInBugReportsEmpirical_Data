[GitHub user zhuoliu opened a pull request:

    https://github.com/apache/storm/pull/1280

    [STORM-1667] Log the IO exception when deleting worker pid dir

    We find a race condition in supervisor which can sometimes crash supervisor.
    This race condition exists because: shutdown-worker is called by both sync-processes and synchronize-supervisor. One pid directory might have already been deleted when rmr-as-user tries to delete it. 
    To avoid crashing the supervisor, we should log the exception rather than throw it.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/zhuoliu/storm Storm-1667-1.x-branch

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1280.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1280
    
----
commit c54162418a4a46d99ac360661f78cc5e10cb654a
Author: zhuol <zhuol@yahoo-inc.com>
Date:   2016-03-30T22:21:41Z

    [STORM-1667] Log the IO exception when deleting worker pid dir

----
, Github user zhuoliu commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1280#discussion_r57974731
  
    --- Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj ---
    @@ -269,10 +269,7 @@
       (catch IOException e
         (log-warn-error e "Failed to cleanup worker " id ". Will retry later"))
       (catch RuntimeException e
    -    (log-warn-error e "Failed to cleanup worker " id ". Will retry later")
    -    )
    -  (catch java.io.FileNotFoundException e (log-message (.getMessage e)))
    --- End diff --
    
    Delete redundant catch of FileNotFoundException since it has already been caught as IOException
, Github user hustfxj commented on the pull request:

    https://github.com/apache/storm/pull/1280#issuecomment-203765818
  
    Thank you. I will merge it [1257] (https://github.com/apache/storm/pull/1257)
, Github user satishd commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1280#discussion_r58006818
  
    --- Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj ---
    @@ -296,11 +293,15 @@
             (worker-launcher-and-wait conf user ["signal" pid "9"] :log-prefix (str "kill -9 " pid))
             (force-kill-process pid))
           (if as-user
    -        (rmr-as-user conf id (worker-pid-path conf id pid))
             (try
    +          (rmr-as-user conf id (worker-pid-path conf id pid))
               (rmpath (worker-pid-path conf id pid))
               (rmpath (worker-tmp-root conf id pid))
    -          (catch Exception e)))) ;; on windows, the supervisor may still holds the lock on the worker directory
    +          (catch IOException e
    +            (log-warn-error e "Failed to cleanup pid dir: " pid " for worker " id". Will retry later"))
    +          (catch RuntimeException e
    +            (log-warn-error e "Failed to cleanup pid dir: " pid " for worker " id". Will retry later")))))
    +          ;; on windows, the supervisor may still holds the lock on the worker directory
    --- End diff --
    
    Above code catches `IOException` and `RuntimeException` only. You may still want to catch any `Exception` and ignore it like earlier.
, Github user zhuoliu commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1280#discussion_r58066223
  
    --- Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj ---
    @@ -296,11 +293,15 @@
             (worker-launcher-and-wait conf user ["signal" pid "9"] :log-prefix (str "kill -9 " pid))
             (force-kill-process pid))
           (if as-user
    -        (rmr-as-user conf id (worker-pid-path conf id pid))
             (try
    +          (rmr-as-user conf id (worker-pid-path conf id pid))
               (rmpath (worker-pid-path conf id pid))
               (rmpath (worker-tmp-root conf id pid))
    -          (catch Exception e)))) ;; on windows, the supervisor may still holds the lock on the worker directory
    +          (catch IOException e
    +            (log-warn-error e "Failed to cleanup pid dir: " pid " for worker " id". Will retry later"))
    +          (catch RuntimeException e
    +            (log-warn-error e "Failed to cleanup pid dir: " pid " for worker " id". Will retry later")))))
    +          ;; on windows, the supervisor may still holds the lock on the worker directory
    --- End diff --
    
    Hi @satishd , your concern makes good sense, however, I do not find any other type of exception that might be thrown by the try block (the worker-launcher-and-wait in rmr-as-user throws InterruptedException and catches it already). It this is case, catching specific exceptions should be preferable to catching Exception.
, Github user satishd commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1280#discussion_r58077961
  
    --- Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj ---
    @@ -296,11 +293,15 @@
             (worker-launcher-and-wait conf user ["signal" pid "9"] :log-prefix (str "kill -9 " pid))
             (force-kill-process pid))
           (if as-user
    -        (rmr-as-user conf id (worker-pid-path conf id pid))
             (try
    +          (rmr-as-user conf id (worker-pid-path conf id pid))
               (rmpath (worker-pid-path conf id pid))
               (rmpath (worker-tmp-root conf id pid))
    -          (catch Exception e)))) ;; on windows, the supervisor may still holds the lock on the worker directory
    +          (catch IOException e
    +            (log-warn-error e "Failed to cleanup pid dir: " pid " for worker " id". Will retry later"))
    +          (catch RuntimeException e
    +            (log-warn-error e "Failed to cleanup pid dir: " pid " for worker " id". Will retry later")))))
    +          ;; on windows, the supervisor may still holds the lock on the worker directory
    --- End diff --
    
    @zhuoliu IMHO,  `Exception` should be caught and logged and we should not really constrain with catching only `IOException` and `RuntimeException`. When any of those methods is changed to throw some other `Exception` then this code should also be changed to handle that, otherwise this code would throw that Exception and get into unexpected scenarios. That may be the reason why `Exception` is caught in earlier code.
    
     
, Github user zhuoliu commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1280#discussion_r58081089
  
    --- Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj ---
    @@ -296,11 +293,15 @@
             (worker-launcher-and-wait conf user ["signal" pid "9"] :log-prefix (str "kill -9 " pid))
             (force-kill-process pid))
           (if as-user
    -        (rmr-as-user conf id (worker-pid-path conf id pid))
             (try
    +          (rmr-as-user conf id (worker-pid-path conf id pid))
               (rmpath (worker-pid-path conf id pid))
               (rmpath (worker-tmp-root conf id pid))
    -          (catch Exception e)))) ;; on windows, the supervisor may still holds the lock on the worker directory
    +          (catch IOException e
    +            (log-warn-error e "Failed to cleanup pid dir: " pid " for worker " id". Will retry later"))
    +          (catch RuntimeException e
    +            (log-warn-error e "Failed to cleanup pid dir: " pid " for worker " id". Will retry later")))))
    +          ;; on windows, the supervisor may still holds the lock on the worker directory
    --- End diff --
    
    @satishd, got your point. It would be the responsibility of the one who added new code to catch other possible exception, or they may prefer to not catch and let it fail fast upon specific scenario. 
    But for now, since there is any non-deterministic exception might be thrown in Windows environment, we may still ignore all types of exception, which might also be why the previous code did this way ("catch Exception").
, Github user satishd commented on the pull request:

    https://github.com/apache/storm/pull/1280#issuecomment-204034110
  
    +1 LGTM
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/1280#issuecomment-204181100
  
    +1 Great finding.
, Add Epic cause it's a bug and target version is 1.0.0., Github user knusbaum commented on the pull request:

    https://github.com/apache/storm/pull/1280#issuecomment-204220497
  
    +1. Will merge tomorrow after 24hr period has passed.
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/1280
]