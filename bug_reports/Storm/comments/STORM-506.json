[GitHub user d2r opened a pull request:

    https://github.com/apache/storm/pull/267

    STORM-506: Do not count bolt acks & fails in total stats

    Reverts part of [7f058e19](https://github.com/apache/storm/commit/7f058e19425ff712d9f8034b3641c06af885535e#diff-ef5b8078af20ef7de78826105625b4c9R287) and adds a comment explaining better what the stats are trying to do here.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/d2r/storm STORM-506

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/267.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #267
    
----
commit 985fb1f531de086a9b1d75df6fb05945a1517230
Author: Derek Dagit <derekd@yahoo-inc.com>
Date:   2014-09-24T05:50:30Z

    Do not count bolt acks & fails in total stats

----
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/267#issuecomment-56670324
  
    +1 looks good to me.
, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/267#issuecomment-57397765
  
    @d2r @revans2  I ran a test with this PR the topology stats missing complete latency and ack, fail numbers and also spout. Here is the screen shot http://grab.by/APka.
    I remember trying todo something similar for UI api. I think summing (merge-with) of acks and fails expects all these keys to be present from both the agg-bolt-stats an agg-spout-stats otherwise it won't take in :acked, :failed, :complete-latencies form agg-spout-stats.  
, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/267#issuecomment-57398372
  
    @d2r @revans2 Here is the screenshot one with current trunk
    http://grab.by/APkO with the same topology as before. Its missing "Acked" number in the previous one in this case as part of Topology Stats.
, Github user d2r commented on the pull request:

    https://github.com/apache/storm/pull/267#issuecomment-57460124
  
    > @d2r @revans2 I ran a test with this PR the topology stats missing complete latency and ack, fail numbers and also spout.
    
    Does the topology have acking enabled?  If not, all three stats should be 0.  When testing, I modified storm.starter.clj.word_count to include an id when emitting from the spouts, so that acking was enabled.  It looked fine to me.
    
    The second screenshot shows the error case when the acks for bolts are summed and displayed in "Topology stats," and we do not want to count these stats from the Bolts when we render "Topology stats."  We want to count these stats to track tuples that make it all the way through the tuple "tree," and that means we must include only the spouts' stats.
, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/267#issuecomment-57742811
  
    @d2r sorry for the late reply. I haven't enabled the acking but my understanding of the topology stats is aggregation  of all the spouts and bolts stats. If I don't enable acking it doesn't  show me any stats. 
, Github user d2r commented on the pull request:

    https://github.com/apache/storm/pull/267#issuecomment-57811363
  
    > I haven't enabled the acking but my understanding of the topology stats is
    > aggregation of all the spouts and bolts stats.
    
    This is not how it worked before the client-side rendering/RESTful UI feature
    was merged in.
    
    Prior to the UI feature, showing only spout stats for acks and fails was the
    way the UI operated when showing the aggregated topology stats.  This
    functionality was unintentionally changed at the place I linked to in the
    description, and the result was that all the acks and fails including the bolts
    were summed as part of the topology stats.
    
    This is not what our users were expecting, and I do not think it is desirable
    anyway.  So this PR is to revert the functionality back to what it was before
    the client-side rendering feature in the UI.
    
    
    
    > If I don't enable acking it doesn't show me any stats.
    
    Yeah, the spouts need to give an ID when they emit, or else they will not
    expect any ack when that ID completes processing.  This ID sticks with all
    downstream tuples thoughout the tuple "tree."
    
    If you take storm.starter.clj.word_count, for example, unmodified, you will see
    exactly what you are describing, because the code has two spouts and neither of
    them give an ID when they emit a tuple.  Individual bolts can still ack, but
    you will not see them turn up in the spout stats.
    
    Adding the `:id` keyword parameter fixes this.

, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/267#issuecomment-57832285
  
    @d2r thanks for the details . I looked into the older version of  the code there wasn't acks, failed as part of topology stats so my understanding is wrong. I am +1.
, Github user d2r commented on the pull request:

    https://github.com/apache/storm/pull/267#issuecomment-57833874
  
    Yeah, I didn't notice the change either until it was pointed out to me.
, Github user ptgoetz commented on the pull request:

    https://github.com/apache/storm/pull/267#issuecomment-58242517
  
    +1
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/267
]