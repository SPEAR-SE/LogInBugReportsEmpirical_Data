[Please stop opening JIRAs and take these questions to email lists instead., can you please provide me the link where to post my question., You can post your question to user@storm.apache.org see this for more details on how to subscribe https://storm.apache.org/community.html.

If I understand correctly you want to write a storm topology where one of the components write to PostegresDB. WE have a jdbc connector that you can try out https://github.com/apache/storm/tree/master/external/storm-jdbc. For an example topology see https://github.com/apache/storm/blob/master/external/storm-jdbc/src/test/java/org/apache/storm/jdbc/topology/UserPersistanceTopology.java, hai 
    I am using those git-hub links.But i am not able to insert data into PostgreSQL.please provide me if any other source code  is available., Sorry JIRA ate my comment somehow.

It looks like you are probably providing your own ConnectionProvider that is establishing a connection to the DB before the prepare method is called.  If you are not doing this and can provide a stack trace or reproducible code then please reopen, otherwise as the question on the user mailing list as indicated above., hai
     I wrote psql bolt and topology also submitting but in bolt there is an error as:
java.lang.NullPointerException at Demo.PsqlBolt.execute(PsqlBolt.java:88) at backtype.storm.daemon.executor$fn__6647$tuple_action_fn__6649.invoke(executor.clj:633) at backtype.storm.daemon.executor$mk_task_receiver$fn__6570.invoke(executor.clj:401) at backtype.storm.disruptor$clojure_handler$reify__1605.onEvent(disruptor.clj:58) at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:125) at backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(DisruptorQueue.java:99) at backtype.storm.disruptor$consume_batch_when_available.invoke(disruptor.clj:80) at backtype.storm.daemon.executor$fn__6647$fn__6659$fn__6706.invoke(executor.clj:748) at backtype.storm.util$async_loop$fn__459.invoke(util.clj:463) at clojure.lang.AFn.run(AFn.java:24) at java.lang.Thread.run(Thread.java:745) 

My spout is:

public static final List<Values> rows = Lists.newArrayList(
            new Values(1,"peter",System.currentTimeMillis()),
            new Values(2,"bob",System.currentTimeMillis()),
            new Values(3,"alice",System.currentTimeMillis()));

    public UserSpout() {
        this(true);
    }

public void nextTuple() {
        final Random rand = new Random();
        final Values row = rows.get(rand.nextInt(rows.size() - 1));
        this.collector.emit(row);
        Thread.yield();
    }
public void declareOutputFields(OutputFieldsDeclarer declarer) {
        declarer.declare(new Fields("user_id","user_name","create_date"));
    }

My bolt is:
public PsqlBolt withInsertQuery(String insertQuery) {
        this.insertQuery = insertQuery;
        return this;
    }
public void execute(Tuple tuple) {
        try {

            List<Column> columns = jdbcMapper.getColumns(tuple);
            List<List<Column>> columnLists = new ArrayList<List<Column>>();
            columnLists.add(columns);
            if(!StringUtils.isBlank(tableName)) {
                this.jdbcClient.insert(this.tableName, columnLists);
            } else {
                this.jdbcClient.executeInsertQuery(this.insertQuery, columnLists);   //It is Showing issue here........
            }
            this.collector.ack(tuple);
        } catch (Exception e) {
            this.collector.reportError(e);
            this.collector.fail(tuple);
        }
    }

My topology is:
ConnectionProvider cp = new MyConnectionProvider(map);

		jdbcMapper = new SimpleJdbcMapper(TABLE_NAME, cp);

		List<Column> schemaColumns = Lists.newArrayList(new Column("user_id", Types.INTEGER), new Column("user_name",Types.VARCHAR),new Column("create_date", Types.TIMESTAMP));
        
		JdbcMapper mapper = new SimpleJdbcMapper(schemaColumns);

        	PsqlBolt userPersistanceBolt = new PsqlBolt(cp, mapper)
                .withInsertQuery("insert into user_details (user_id, user_name, create_date) values (?,?,?)");

		builder.setSpout("myspout", new UserSpout(), 1);
		
		builder.setBolt("Psql_Bolt", userPersistanceBolt,1).shuffleGrouping("myspout");


Can any one help me...
, If line 88 is {code}this.jdbcClient.executeInsertQuery(this.insertQuery, columnLists);{code} there really is only one option for what caused the NPE, this.jdbcClient has to be null.

I assume PsqlBolt extends AbstractJdbcBolt your example code does not show this. If so the JdbcClient is created in the prepare method. If you are overriding the prepare method in your bolt and don't call {code}super.prepare(...){code} the parent one will not be called and the jdbcClient will not be created. That is the only thing I can think of that would cause this to happen.

This analysis is something that you should be able to do yourself., thank u for ur support.i overcome the error., hai.. 
        Using storm bolts I want to insert the data into the PostgreSQL tables which have parent and child relationships. Up to my knowledge storm bolts execute parallelly so in the child table data is not inserting because of constraints. Is there is any way to execute bolts one after another i.e., after execution of one bolt only next bolt have to execute. can anyone please help me.., hai.. 
Using storm bolts I want to insert the data into the PostgreSQL tables which have parent and child relationships. Up to my knowledge storm bolts execute parallelly so in the child table data is not inserting because of constraints. Is there is any way to execute bolts one after another i.e., after execution of one bolt only next bolt have to execute. can anyone please help me.., Can anyone please respond to my issue,it help me a lot..]