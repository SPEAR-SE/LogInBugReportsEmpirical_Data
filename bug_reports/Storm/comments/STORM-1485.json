[GitHub user kishorvpatil opened a pull request:

    https://github.com/apache/storm/pull/1027

    [STORM-1485] DRPC Connectivity Issues

    - ZK-Login-From-AutoTGT thread should not die if TGT in `AutoTGT` has expired. ( It gives grace 10 minutes before killing worker.) This required copying and modified `org.apache.zookeeper.Login` class. 
    - `DRPCClient` should not give up connecting to DRPC after n-retries.
    - `ReturnResults` Bolt should retry connection on failure to send results to DRPC.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/kishorvpatil/incubator-storm STORM-1485

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1027.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1027
    
----
commit 1325b8d85e95dc81a826d53e7da3094747e2586b
Author: Kishor Patil <kpatil@yahoo-inc.com>
Date:   2016-01-19T17:13:38Z

    Original Zookeeper Login Class

commit d3657e27ca82c02c46dd1e89dd6cd80d786711e8
Author: Kishor Patil <kpatil@yahoo-inc.com>
Date:   2016-01-19T17:39:52Z

    ZK Login Thread should not stop on TGT expiry, instead it should shutdown JVM after grace period.

commit c9916d37357c5bdc2795249a7ad8aee3d05e46d4
Author: Kishor Patil <kpatil@yahoo-inc.com>
Date:   2016-01-19T17:58:43Z

    DRPCClient should keep trying to connect to DRPC server forever

commit 49c4ef6d274fc7ca17b623edf1ea53001c8eeaa2
Author: Kishor Patil <kpatil@yahoo-inc.com>
Date:   2016-01-19T18:34:14Z

    ReturnResults should make 3 attempts to send results to DRPC server, in case of thrift exceptions.

----
, GitHub user kishorvpatil opened a pull request:

    https://github.com/apache/storm/pull/1028

    [STORM-1485] DRPC Connectivity Issues for 1.-x-branch

    - ZK-Login-From-AutoTGT thread should not die if TGT in `AutoTGT` has expired. ( It gives grace 10 minutes before killing worker.) This required copying and modified `org.apache.zookeeper.Login` class. 
    - `DRPCClient` should not give up connecting to DRPC after n-retries.
    - `ReturnResults` Bolt should retry connection on failure to send results to DRPC.


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/kishorvpatil/incubator-storm storm1485-for1.x

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1028.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1028
    
----
commit 38c6720bf10bb7f8ff13556781916fa8d384df5e
Author: Kishor Patil <kpatil@yahoo-inc.com>
Date:   2016-01-19T17:13:38Z

    Original Zookeeper Login Class

commit 5b7959f1a4613bd3d8e8c0cd1f9d70d6c37487cc
Author: Kishor Patil <kpatil@yahoo-inc.com>
Date:   2016-01-19T17:39:52Z

    ZK Login Thread should not stop on TGT expiry, instead it should shutdown JVM after grace period.

commit 61970fa18beff315a64ab57a8c91f756e6d90b0b
Author: Kishor Patil <kpatil@yahoo-inc.com>
Date:   2016-01-19T17:58:43Z

    DRPCClient should keep trying to connect to DRPC server forever

commit c21b5008bebc9f28ef0a147f6f7a1f169ada88f0
Author: Kishor Patil <kpatil@yahoo-inc.com>
Date:   2016-01-19T18:34:14Z

    ReturnResults should make 3 attempts to send results to DRPC server, in case of thrift exceptions.

----
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1027#discussion_r50189054
  
    --- Diff: storm-core/src/jvm/org/apache/storm/messaging/netty/KerberosSaslNettyClient.java ---
    @@ -84,7 +83,7 @@ public KerberosSaslNettyClient(Map storm_conf, String jaas_section) {
                 Configuration.setConfiguration(login_conf);
                 //now login
                 LOG.debug("Trying to login.");
    -            Login login = new Login(jaas_section, ch);
    +            ZookeeperSaslLogin login = new ZookeeperSaslLogin(jaas_section, ch);
    --- End diff --
    
    I don't really like Zookeeper being a part of this classes name.  I also don't really like Sasl in there, because even though we use it for Sasl, there is nothing Sasl specific in it.
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/1027#issuecomment-173014223
  
    I just have the one minor comment about the name of the class that we pulled over from Zookeeper.
    
    +1 even with the name being a bit confusing to me.
, Github user kishorvpatil commented on the pull request:

    https://github.com/apache/storm/pull/1027#issuecomment-173018694
  
    @revans2 I reverted the name to `Login`.
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/1027#issuecomment-173263339
  
    +1
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/1028#issuecomment-173263458
  
    +1
, Github user ptgoetz commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1027#discussion_r50310048
  
    --- Diff: storm-core/src/jvm/org/apache/storm/messaging/netty/Login.java ---
    @@ -0,0 +1,411 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +
    +package org.apache.storm.messaging.netty;
    +
    +/**
    + * This class is responsible for refreshing Kerberos credentials for
    + * logins for both Zookeeper client and server.
    + * See ZooKeeperSaslServer for server-side usage.
    + * See ZooKeeperSaslClient for client-side usage.
    + * This class is a copied from https://github.com/apache/zookeeper/blob/branch-3.4/src/java/main/org/apache/zookeeper/Login.java
    + * with the difference that refresh thread does not die.
    + */
    +
    +import javax.security.auth.kerberos.KerberosPrincipal;
    +import javax.security.auth.login.AppConfigurationEntry;
    +import javax.security.auth.login.Configuration;
    +import javax.security.auth.login.LoginContext;
    +import javax.security.auth.login.LoginException;
    +import javax.security.auth.callback.CallbackHandler;
    +
    +import org.apache.log4j.Logger;
    +import org.apache.zookeeper.Shell;
    +import org.apache.zookeeper.client.ZooKeeperSaslClient;
    +import javax.security.auth.kerberos.KerberosTicket;
    +import javax.security.auth.Subject;
    +import java.util.Date;
    +import java.util.Random;
    +import java.util.Set;
    +
    +public class Login {
    +    Logger LOG = Logger.getLogger(Login.class);
    +    public CallbackHandler callbackHandler;
    +
    +    // LoginThread will sleep until 80% of time from last refresh to
    +    // ticket's expiry has been reached, at which time it will wake
    +    // and try to renew the ticket.
    +    private static final float TICKET_RENEW_WINDOW = 0.80f;
    +
    +    /**
    +     * Percentage of random jitter added to the renewal time
    +     */
    +    private static final float TICKET_RENEW_JITTER = 0.05f;
    +
    +    // Regardless of TICKET_RENEW_WINDOW setting above and the ticket expiry time,
    +    // thread will not sleep between refresh attempts any less than 1 minute (60*1000 milliseconds = 1 minute).
    +    // Change the '1' to e.g. 5, to change this to 5 minutes.
    +    private static final long MIN_TIME_BEFORE_RELOGIN = 1 * 60 * 1000L;
    +
    +    private Subject subject = null;
    +    private Thread t = null;
    +    private boolean isKrbTicket = false;
    +    private boolean isUsingTicketCache = false;
    +    private boolean isUsingKeytab = false;
    +
    +    /** Random number generator */
    +    private static Random rng = new Random();
    +
    +    private LoginContext login = null;
    +    private String loginContextName = null;
    +    private String keytabFile = null;
    +    private String principal = null;
    +
    +    private long lastLogin = 0;
    +
    +    /**
    +     * LoginThread constructor. The constructor starts the thread used
    --- End diff --
    
    Minor nit: `LoginThread` --> `Login`
, Github user ptgoetz commented on the pull request:

    https://github.com/apache/storm/pull/1027#issuecomment-173344407
  
    One very minor nit.
    
    +1
, Github user kishorvpatil commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1027#discussion_r50314307
  
    --- Diff: storm-core/src/jvm/org/apache/storm/messaging/netty/Login.java ---
    @@ -0,0 +1,411 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +
    +package org.apache.storm.messaging.netty;
    +
    +/**
    + * This class is responsible for refreshing Kerberos credentials for
    + * logins for both Zookeeper client and server.
    + * See ZooKeeperSaslServer for server-side usage.
    + * See ZooKeeperSaslClient for client-side usage.
    + * This class is a copied from https://github.com/apache/zookeeper/blob/branch-3.4/src/java/main/org/apache/zookeeper/Login.java
    + * with the difference that refresh thread does not die.
    + */
    +
    +import javax.security.auth.kerberos.KerberosPrincipal;
    +import javax.security.auth.login.AppConfigurationEntry;
    +import javax.security.auth.login.Configuration;
    +import javax.security.auth.login.LoginContext;
    +import javax.security.auth.login.LoginException;
    +import javax.security.auth.callback.CallbackHandler;
    +
    +import org.apache.log4j.Logger;
    +import org.apache.zookeeper.Shell;
    +import org.apache.zookeeper.client.ZooKeeperSaslClient;
    +import javax.security.auth.kerberos.KerberosTicket;
    +import javax.security.auth.Subject;
    +import java.util.Date;
    +import java.util.Random;
    +import java.util.Set;
    +
    +public class Login {
    +    Logger LOG = Logger.getLogger(Login.class);
    +    public CallbackHandler callbackHandler;
    +
    +    // LoginThread will sleep until 80% of time from last refresh to
    +    // ticket's expiry has been reached, at which time it will wake
    +    // and try to renew the ticket.
    +    private static final float TICKET_RENEW_WINDOW = 0.80f;
    +
    +    /**
    +     * Percentage of random jitter added to the renewal time
    +     */
    +    private static final float TICKET_RENEW_JITTER = 0.05f;
    +
    +    // Regardless of TICKET_RENEW_WINDOW setting above and the ticket expiry time,
    +    // thread will not sleep between refresh attempts any less than 1 minute (60*1000 milliseconds = 1 minute).
    +    // Change the '1' to e.g. 5, to change this to 5 minutes.
    +    private static final long MIN_TIME_BEFORE_RELOGIN = 1 * 60 * 1000L;
    +
    +    private Subject subject = null;
    +    private Thread t = null;
    +    private boolean isKrbTicket = false;
    +    private boolean isUsingTicketCache = false;
    +    private boolean isUsingKeytab = false;
    +
    +    /** Random number generator */
    +    private static Random rng = new Random();
    +
    +    private LoginContext login = null;
    +    private String loginContextName = null;
    +    private String keytabFile = null;
    +    private String principal = null;
    +
    +    private long lastLogin = 0;
    +
    +    /**
    +     * LoginThread constructor. The constructor starts the thread used
    --- End diff --
    
    @ptgoetz  I trying not to deviate a lot from org.apache.zookeeer.Login code. If I can not push the changes to zookeeper and this becomes Storm only code then, we may get ride of unwanted comments etc... 
    If you still prefer, I am more than willing to make these minor changes in code comments..
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1027#discussion_r50314937
  
    --- Diff: storm-core/src/jvm/org/apache/storm/messaging/netty/Login.java ---
    @@ -0,0 +1,411 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +
    +package org.apache.storm.messaging.netty;
    +
    +/**
    + * This class is responsible for refreshing Kerberos credentials for
    + * logins for both Zookeeper client and server.
    + * See ZooKeeperSaslServer for server-side usage.
    + * See ZooKeeperSaslClient for client-side usage.
    + * This class is a copied from https://github.com/apache/zookeeper/blob/branch-3.4/src/java/main/org/apache/zookeeper/Login.java
    + * with the difference that refresh thread does not die.
    + */
    +
    +import javax.security.auth.kerberos.KerberosPrincipal;
    +import javax.security.auth.login.AppConfigurationEntry;
    +import javax.security.auth.login.Configuration;
    +import javax.security.auth.login.LoginContext;
    +import javax.security.auth.login.LoginException;
    +import javax.security.auth.callback.CallbackHandler;
    +
    +import org.apache.log4j.Logger;
    +import org.apache.zookeeper.Shell;
    +import org.apache.zookeeper.client.ZooKeeperSaslClient;
    +import javax.security.auth.kerberos.KerberosTicket;
    +import javax.security.auth.Subject;
    +import java.util.Date;
    +import java.util.Random;
    +import java.util.Set;
    +
    +public class Login {
    +    Logger LOG = Logger.getLogger(Login.class);
    +    public CallbackHandler callbackHandler;
    +
    +    // LoginThread will sleep until 80% of time from last refresh to
    +    // ticket's expiry has been reached, at which time it will wake
    +    // and try to renew the ticket.
    +    private static final float TICKET_RENEW_WINDOW = 0.80f;
    +
    +    /**
    +     * Percentage of random jitter added to the renewal time
    +     */
    +    private static final float TICKET_RENEW_JITTER = 0.05f;
    +
    +    // Regardless of TICKET_RENEW_WINDOW setting above and the ticket expiry time,
    +    // thread will not sleep between refresh attempts any less than 1 minute (60*1000 milliseconds = 1 minute).
    +    // Change the '1' to e.g. 5, to change this to 5 minutes.
    +    private static final long MIN_TIME_BEFORE_RELOGIN = 1 * 60 * 1000L;
    +
    +    private Subject subject = null;
    +    private Thread t = null;
    +    private boolean isKrbTicket = false;
    +    private boolean isUsingTicketCache = false;
    +    private boolean isUsingKeytab = false;
    +
    +    /** Random number generator */
    +    private static Random rng = new Random();
    +
    +    private LoginContext login = null;
    +    private String loginContextName = null;
    +    private String keytabFile = null;
    +    private String principal = null;
    +
    +    private long lastLogin = 0;
    +
    +    /**
    +     * LoginThread constructor. The constructor starts the thread used
    --- End diff --
    
    I'm not sure we want to push this back to zookeeper.  Login feels like it was an internal class not meant for others to use.  We probably never should have used it, and forking it is the right thing to do long term.  Even if we do push a fix back to zookeeper.
, Github user kishorvpatil commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1027#discussion_r50315408
  
    --- Diff: storm-core/src/jvm/org/apache/storm/messaging/netty/Login.java ---
    @@ -0,0 +1,411 @@
    +/**
    + * Licensed to the Apache Software Foundation (ASF) under one
    + * or more contributor license agreements.  See the NOTICE file
    + * distributed with this work for additional information
    + * regarding copyright ownership.  The ASF licenses this file
    + * to you under the Apache License, Version 2.0 (the
    + * "License"); you may not use this file except in compliance
    + * with the License.  You may obtain a copy of the License at
    + *
    + *     http://www.apache.org/licenses/LICENSE-2.0
    + *
    + * Unless required by applicable law or agreed to in writing, software
    + * distributed under the License is distributed on an "AS IS" BASIS,
    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    + * See the License for the specific language governing permissions and
    + * limitations under the License.
    + */
    +
    +package org.apache.storm.messaging.netty;
    +
    +/**
    + * This class is responsible for refreshing Kerberos credentials for
    + * logins for both Zookeeper client and server.
    + * See ZooKeeperSaslServer for server-side usage.
    + * See ZooKeeperSaslClient for client-side usage.
    + * This class is a copied from https://github.com/apache/zookeeper/blob/branch-3.4/src/java/main/org/apache/zookeeper/Login.java
    + * with the difference that refresh thread does not die.
    + */
    +
    +import javax.security.auth.kerberos.KerberosPrincipal;
    +import javax.security.auth.login.AppConfigurationEntry;
    +import javax.security.auth.login.Configuration;
    +import javax.security.auth.login.LoginContext;
    +import javax.security.auth.login.LoginException;
    +import javax.security.auth.callback.CallbackHandler;
    +
    +import org.apache.log4j.Logger;
    +import org.apache.zookeeper.Shell;
    +import org.apache.zookeeper.client.ZooKeeperSaslClient;
    +import javax.security.auth.kerberos.KerberosTicket;
    +import javax.security.auth.Subject;
    +import java.util.Date;
    +import java.util.Random;
    +import java.util.Set;
    +
    +public class Login {
    +    Logger LOG = Logger.getLogger(Login.class);
    +    public CallbackHandler callbackHandler;
    +
    +    // LoginThread will sleep until 80% of time from last refresh to
    +    // ticket's expiry has been reached, at which time it will wake
    +    // and try to renew the ticket.
    +    private static final float TICKET_RENEW_WINDOW = 0.80f;
    +
    +    /**
    +     * Percentage of random jitter added to the renewal time
    +     */
    +    private static final float TICKET_RENEW_JITTER = 0.05f;
    +
    +    // Regardless of TICKET_RENEW_WINDOW setting above and the ticket expiry time,
    +    // thread will not sleep between refresh attempts any less than 1 minute (60*1000 milliseconds = 1 minute).
    +    // Change the '1' to e.g. 5, to change this to 5 minutes.
    +    private static final long MIN_TIME_BEFORE_RELOGIN = 1 * 60 * 1000L;
    +
    +    private Subject subject = null;
    +    private Thread t = null;
    +    private boolean isKrbTicket = false;
    +    private boolean isUsingTicketCache = false;
    +    private boolean isUsingKeytab = false;
    +
    +    /** Random number generator */
    +    private static Random rng = new Random();
    +
    +    private LoginContext login = null;
    +    private String loginContextName = null;
    +    private String keytabFile = null;
    +    private String principal = null;
    +
    +    private long lastLogin = 0;
    +
    +    /**
    +     * LoginThread constructor. The constructor starts the thread used
    --- End diff --
    
    Ok will change it.
, Github user ptgoetz commented on the pull request:

    https://github.com/apache/storm/pull/1027#issuecomment-173359428
  
    Still +1
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/1027#issuecomment-173362346
  
    Still +1
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/1027
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/1028#issuecomment-174077171
  
    @kishorvpatil I cherry-picked #1027 to the 1.x-branch and it was clean/trivial so I think you can just close this pull request. 
, Thanks [~kishorvpatil],

I merged this into master and 1.x-branch, Github user kishorvpatil commented on the pull request:

    https://github.com/apache/storm/pull/1028#issuecomment-175899060
  
    Closing this PR as  changes are backported to 1.x-branch from master.
, Github user kishorvpatil closed the pull request at:

    https://github.com/apache/storm/pull/1028
]