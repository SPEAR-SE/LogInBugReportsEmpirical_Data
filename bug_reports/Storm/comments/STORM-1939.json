[Not sure why that thread get interrupted, but we can just cover this by catching and re-calling poll.
What do you think?, [~dan.blanchard] I also would like to know there're other error messages on that worker/topology. That would be possible that the thread got interrupted due to stopping worker for other issues., As I look into it further, it's only one of our six topologies that gets this error, and it's only in the bolts.  There are a couple exceptions happening on the Python side, and annoyingly the MessagePackSerializer we're using sometimes chokes when trying to serialize an exception, so I think this is just an exception that happens sometimes when a ShellBolt dies and takes the worker down with it., Yeah than I think it's natural to see it raised, and we don't need to catch it. (Or we can catch it and ignore.)
What do you think?, I think catching it and ignoring it would be better, because otherwise it makes you think there's something wrong with Storm itself, when it's really just your topology., OK. That makes sense. Do you have a plan to submit a pull request? Or would you like someone to have it resolved? Either is fine., Never mind. I just worked on it and submitted a patch., GitHub user HeartSaVioR opened a pull request:

    https://github.com/apache/storm/pull/1543

    STORM-1939 Ignore InterruptedException on ShellBoltMessageQueue

    InterruptedException makes false alarm for ShellBolt shutting down.
    Since it's likely throwing InterruptedException when ShellBolt is shutting down, so we're ok to just consume that and continue.
    
    Please see https://issues.apache.org/jira/browse/STORM-1939 for more details.
    
    It should be applied to master, 1.x, 1.0.x branches.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/HeartSaVioR/storm STORM-1939

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1543.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1543
    
----
commit 675e45547c2a27bcab4fcd1ce95ab51bc68cfbbe
Author: Jungtaek Lim <kabhwan@gmail.com>
Date:   2016-07-07T03:58:37Z

    STORM-1939 Ignore InterruptedException on ShellBoltMessageQueue
    
    * Since it's likely throwing InterruptedException when ShellBolt is shutting down
      * so we're ok to just consume that and continue

----
, Github user abhishekagarwal87 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1543#discussion_r69857393
  
    --- Diff: storm-core/src/jvm/org/apache/storm/task/ShellBolt.java ---
    @@ -158,8 +158,8 @@ public void execute(Tuple input) {
     
                 _pendingWrites.putBoltMsg(boltMsg);
             } catch(InterruptedException e) {
    -            String processInfo = _process.getProcessInfoString() + _process.getProcessTerminationInfoString();
    -            throw new RuntimeException("Error during multilang processing " + processInfo, e);
    +            // It's likely that Bolt is shutting down so no need to throw RuntimeException
    --- End diff --
    
    It will be good to have a jvm wide flag to indicate whether jvm shutdown is in progress. There is also a java hack for the same. I can add that flag in a separate PR. Do you mind holding onto this PR till I come up with that? 
, Github user HeartSaVioR commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1543#discussion_r69858030
  
    --- Diff: storm-core/src/jvm/org/apache/storm/task/ShellBolt.java ---
    @@ -158,8 +158,8 @@ public void execute(Tuple input) {
     
                 _pendingWrites.putBoltMsg(boltMsg);
             } catch(InterruptedException e) {
    -            String processInfo = _process.getProcessInfoString() + _process.getProcessTerminationInfoString();
    -            throw new RuntimeException("Error during multilang processing " + processInfo, e);
    +            // It's likely that Bolt is shutting down so no need to throw RuntimeException
    --- End diff --
    
    Yes sure. Please ping me once it's done.
, Github user HeartSaVioR commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1543#discussion_r70780928
  
    --- Diff: storm-core/src/jvm/org/apache/storm/task/ShellBolt.java ---
    @@ -158,8 +158,8 @@ public void execute(Tuple input) {
     
                 _pendingWrites.putBoltMsg(boltMsg);
             } catch(InterruptedException e) {
    -            String processInfo = _process.getProcessInfoString() + _process.getProcessTerminationInfoString();
    -            throw new RuntimeException("Error during multilang processing " + processInfo, e);
    +            // It's likely that Bolt is shutting down so no need to throw RuntimeException
    --- End diff --
    
    @abhishekagarwal87 Do you have update on this? If your work is expected to take longer, please review this first and we could handle your improvement by separate issue.
, Github user abhishekagarwal87 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1543#discussion_r70785048
  
    --- Diff: storm-core/src/jvm/org/apache/storm/task/ShellBolt.java ---
    @@ -158,8 +158,8 @@ public void execute(Tuple input) {
     
                 _pendingWrites.putBoltMsg(boltMsg);
             } catch(InterruptedException e) {
    -            String processInfo = _process.getProcessInfoString() + _process.getProcessTerminationInfoString();
    -            throw new RuntimeException("Error during multilang processing " + processInfo, e);
    +            // It's likely that Bolt is shutting down so no need to throw RuntimeException
    --- End diff --
    
    My bad @HeartSaVioR. You can merge this for now. I have captured the improvement in 
    https://issues.apache.org/jira/browse/STORM-1600
, Github user abhishekagarwal87 commented on the issue:

    https://github.com/apache/storm/pull/1543
  
    +1
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/1543
, Merged into master, 1.x, 1.0.x branches.]