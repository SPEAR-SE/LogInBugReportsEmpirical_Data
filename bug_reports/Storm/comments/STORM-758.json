[With design constraints I can think only one approach regarding scenario.

- Let subprocess send 'sync' when each N tuples are being processed
-- If N is smaller, its overhead grows, but we can ensure more stable

Currently I don't want to let N configurable cause it should be passed to subprocess.
Seems like N = 100 is fine. 
(I'm also thinking about 1000. How about this?)
Default value of topology.message.timeout.secs is 30 sec, so it can be safe that subprocess can handle each tuple with 300 ms., If you have other approaches, please let me know to solve this issue together. :), Current ShellBolt implementations force subprocess to send "ack" or "fail" to ShellBolt regardless of acking mode.
(ShellBolt._inputs will fill up if subprocess doesn't send "ack" or "fail".)

With assumption, STORM-742 could be also applied to non-ACK mode., Thinking it once more, I think forcing subprocess to send ack / fail is a matter (bug) of current ShellBolt implementation, which should be fixed.
(Filed issue to STORM-1224)

In that case, we couldn't resolve this issue. Reopening.]