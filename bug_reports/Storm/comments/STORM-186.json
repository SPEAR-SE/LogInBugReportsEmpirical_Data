[GitHub user xiaokang opened a pull request:

    https://github.com/apache/incubator-storm/pull/37

    STORM-186 fix float secs to millis long convertion

    for https://issues.apache.org/jira/browse/STORM-186.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/xiaokang/incubator-storm STORM-186

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/incubator-storm/pull/37.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #37
    
----
commit 15c489018c0cc7a32cc8e5c157232da4d1e26f2d
Author: Kang Xiao <kxiao.tiger@gmail.com>
Date:   2014-02-18T16:22:01Z

    STORM-186 fix float secs to millis long convertion

----
, Github user nathanmarz commented on the pull request:

    https://github.com/apache/incubator-storm/pull/37#issuecomment-35433465
  
    I don't see why this fixes the issue. Converting to a long first was done to prevent integer overflow during the conversion. Otherwise the code seems semantically equivalent. Could you explain the root cause and how this addresses it?
, Github user xiaokang commented on the pull request:

    https://github.com/apache/incubator-storm/pull/37#issuecomment-35516672
  
    hi @nathan,  the root cause is that the original code "(* 1000 (long delay-secs))" will lost decimal part of delay-secs if it is a float or double value instead of an integer. For example if delay-secs is 1.5 we expect the result is 1500 ms but the result will be 1000 * 1 = 1000.
, Github user nathanmarz commented on the pull request:

    https://github.com/apache/incubator-storm/pull/37#issuecomment-35559150
  
    Ah yes you're right. The only change I'd like to see is (long (* 1000 secs)) to (long (* (long 1000) secs)). I know that in Clojure the 1000 is already a long, so it should be fine, but it's good to be explicit (after all in a prior version of Clojure it would have been an int). After that change I'm +1.
, Github user xiaokang commented on the pull request:

    https://github.com/apache/incubator-storm/pull/37#issuecomment-35603069
  
    Thanks for your careful review. It's worth to do that to avoid overflow. I just made the change as you suggested.
, Github user nathanmarz commented on the pull request:

    https://github.com/apache/incubator-storm/pull/37#issuecomment-35647401
  
    +1
, Github user revans2 commented on the pull request:

    https://github.com/apache/incubator-storm/pull/37#issuecomment-36027770
  
    I am +1 too
, Github user ptgoetz commented on the pull request:

    https://github.com/apache/incubator-storm/pull/37#issuecomment-36784149
  
    +1
, Github user asfgit closed the pull request at:

    https://github.com/apache/incubator-storm/pull/37
]