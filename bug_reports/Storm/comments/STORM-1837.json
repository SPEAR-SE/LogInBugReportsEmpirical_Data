[Github user kishorvpatil commented on the pull request:

    https://github.com/apache/storm/pull/1417#issuecomment-219545865
  
    The code changes look good. 
    I ran unit test and had `netty_unit_test` timeout once. I think we need to change the timeout for https://github.com/apache/storm/blob/master/storm-core/test/clj/org/apache/storm/messaging/netty_unit_test.clj#L115
    
    ```
    <error message="Uncaught exception, not in assertion.">Uncaught exception, not in assertion.
    expected: nil
      actual: java.lang.AssertionError: Test timed out (5000ms) (empty? (.getLoad client [(int 1) (int 2)]))
     at org.apache.storm.messaging.netty_unit_test$test_load_fn.invoke (netty_unit_test.clj:115)
        org.apache.storm.messaging.netty_unit_test/fn (netty_unit_test.clj:143)
        clojure.test$test_var$fn__7670.invoke (test.clj:704)
        clojure.test$test_var.invoke (test.clj:704)
        clojure.test$test_vars$fn__7692$fn__7697.invoke (test.clj:722)
        clojure.test$default_fixture.invoke (test.clj:674)
        clojure.test$test_vars$fn__7692.invoke (test.clj:722)
        clojure.test$default_fixture.invoke (test.clj:674)
        clojure.test$test_vars.invoke (test.clj:718)
        clojure.test$test_all_vars.invoke (test.clj:728)
        clojure.test$test_ns.invoke (test.clj:747)
        clojure.core$map$fn__4553.invoke (core.clj:2624)
        clojure.lang.LazySeq.sval (LazySeq.java:40)
        clojure.lang.LazySeq.seq (LazySeq.java:49)
        clojure.lang.Cons.next (Cons.java:39)
        clojure.lang.RT.boundedLength (RT.java:1735)
        clojure.lang.RestFn.applyTo (RestFn.java:130)
        clojure.core$apply.invoke (core.clj:632)
        clojure.test$run_tests.doInvoke (test.clj:762)
        clojure.lang.RestFn.invoke (RestFn.java:408)
        org.apache.storm.testrunner$eval8790$iter__8791__8795$fn__8796$fn__8797$fn__8798.invoke (test_runner.clj:107)
        org.apache.storm.testrunner$eval8790$iter__8791__8795$fn__8796$fn__8797.invoke (test_runner.clj:53)
        org.apache.storm.testrunner$eval8790$iter__8791__8795$fn__8796.invoke (test_runner.clj:52)
        clojure.lang.LazySeq.sval (LazySeq.java:40)
        clojure.lang.LazySeq.seq (LazySeq.java:49)
        clojure.lang.RT.seq (RT.java:507)
        clojure.core/seq (core.clj:137)
        clojure.core$dorun.invoke (core.clj:3009)
        org.apache.storm.testrunner$eval8790.invoke (test_runner.clj:52)
        clojure.lang.Compiler.eval (Compiler.java:6782)
        clojure.lang.Compiler.load (Compiler.java:7227)
        clojure.lang.Compiler.loadFile (Compiler.java:7165)
        clojure.main$load_script.invoke (main.clj:275)
        clojure.main$script_opt.invoke (main.clj:337)
        clojure.main$main.doInvoke (main.clj:421)
        clojure.lang.RestFn.invoke (RestFn.java:421)
        clojure.lang.Var.invoke (Var.java:383)
        clojure.lang.AFn.applyToHelper (AFn.java:156)
        clojure.lang.Var.applyTo (Var.java:700)
        clojure.main.main (main.java:37)
    
          at: test_runner.clj:105</error>
            </testcase>
    ```

, Github user srdo commented on the pull request:

    https://github.com/apache/storm/pull/1417#issuecomment-219549248
  
    I'd be happy to bump it. I don't think test-load-fn actually hits any of the changed code though, since it uses the netty.Context rather than local.Context. What do you think is a reasonable timeout? 15-20 seconds?
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/1417#issuecomment-219600127
  
    @kishorvpatil 
    Nice finding. I think it should reflect STORM_TEST_TIMEOUT_MS, but it can be done with another JIRA issue since it seems not related on this PR.
    
    Btw, other test failure is observed from Travis CI, which I think is also not related to this PR.
    
    ```
    Running org.apache.storm.utils.DisruptorQueueTest
    Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 4.352 sec <<< FAILURE! - in org.apache.storm.utils.DisruptorQueueTest
    testInOrderBatch(org.apache.storm.utils.DisruptorQueueTest)  Time elapsed: 0.405 sec  <<< FAILURE!
    junit.framework.AssertionFailedError: producer 0 is still alive
    	at junit.framework.Assert.fail(Assert.java:57)
    	at junit.framework.Assert.assertTrue(Assert.java:22)
    	at junit.framework.Assert.assertFalse(Assert.java:39)
    	at junit.framework.TestCase.assertFalse(TestCase.java:210)
    	at org.apache.storm.utils.DisruptorQueueTest.run(DisruptorQueueTest.java:135)
    	at org.apache.storm.utils.DisruptorQueueTest.testInOrderBatch(DisruptorQueueTest.java:106)
    ```
    
    @srdo 
    I guess what @kishorvpatil reported is a kind of intermittent failure, since one of storm-core build is passed on Travis CI.
, Github user srdo commented on the pull request:

    https://github.com/apache/storm/pull/1417#issuecomment-219674715
  
    Something like this? https://github.com/apache/storm/pull/1421
, Github user kishorvpatil commented on the pull request:

    https://github.com/apache/storm/pull/1417#issuecomment-219741531
  
    @HeartSaVioR, you are right, I did not notice the `DisruptorQueueTest` failure.
    @srdo, Thank you for putting up #1421. It's ironic to see `LocalNimbusTest` fail for that PR. :) I am bumping this on up.
    +1
, Thanks [~Srdo],

I merged this into master and branch-1.x]