[Recently I met this issue. Though supervisor crashed and the message "Should not have multiple topologies assigned to one port" was logged, the assignments of topologies logged by ninbus was consistent as a whole. The cause seems to be reading assigments while updating them as commented above. 
How about retrying synchronize-supervisor some times before throwing RuntimeException? Restarting supervisor is possible workaround but it causes some loss.
, GitHub user iwasakims opened a pull request:

    https://github.com/apache/incubator-storm/pull/194

    STORM-155: Storm rebalancing code causes multiple topologies assigned to a single port

    Retrying synchronize-supervisor if assignments read was inconsistent before throwing RuntimeException in order to avoid supervisor crash as possible.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/iwasakims/incubator-storm STORM-155

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/incubator-storm/pull/194.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #194
    
----
commit 14bcc9b2155ab5be71ccffa43689ef6f51b153f4
Author: iwasakims <iwasakims@example.com>
Date:   2014-07-14T17:12:24Z

    made read-assignment retry on reading inconsistent assignments.

----
, Github user revans2 commented on the pull request:

    https://github.com/apache/incubator-storm/pull/194#issuecomment-49171218
  
    The retry seems OK to me. I only have two concerns.
    
    The first one is that we are retrying for all RuntimeExceptions.  I would prefer to have us restrict the retry to just the case of the conflict.  Curator is already doing a lot of retries and in my experience if curator returns with an error a retry is not going to help.
    
    My second concern is with how quickly we are retrying.  I suppose in the common case we just got unlucky and downloaded the assignments in the middle of nimbus updating.  But retrying in a tight loop also does not feel correct.  For this one I am more interested in your and others opinions.  I don't consider it something that would block this from going in.
, Github user iwasakims commented on the pull request:

    https://github.com/apache/incubator-storm/pull/194#issuecomment-49387876
  
    The retry of this patch happens only if the assignments read by supervisor were inconsistent in supervisor's perspective (i.e. multiple topologies have the same node+port).
    
    In retrying case, supervisor does not launch/shutdown workers because read-assignments returns unmodified existing-assignment. Because synchronize-supervisor is called every 10 seconds, the retry interval is 10 seconds as a result. I think it is not too quick.

, Github user revans2 commented on the pull request:

    https://github.com/apache/incubator-storm/pull/194#issuecomment-49447151
  
    You are right, I did not look at the code as closely as I should have, there is no loop in the method, just setting an atom for next time around.  I am +1. I'll give some more time for others to comment and try to check this in on Monday assuming everyone else is OK with it.
, Github user d2r commented on the pull request:

    https://github.com/apache/incubator-storm/pull/194#issuecomment-49633625
  
    I am seeing two test failures in new test code that was added:
    
    >         <testcase name="test-retry-read-assignments" classname="backtype.storm.supervisor-test">
    ...
    expected: (= launched-supervisor-&gt;ports supervisor-&gt;ports)
    >  actual: (not (= {&quot;sup1&quot; (3 4 2 1)} {&quot;sup1&quot; [1 2]}))
    >      at: run-test4560008170147641657.clj:75</failure>
    ...
    expected: (= launched-supervisor-&gt;ports supervisor-&gt;ports)
    >  actual: (not (= {&quot;sup1&quot; (3 4 2 1)} {&quot;sup1&quot; [3 4]}))
    >      at: run-test4560008170147641657.clj:75</failure>

, Github user iwasakims commented on the pull request:

    https://github.com/apache/incubator-storm/pull/194#issuecomment-49672593
  
    The cause seems to be the bug in validate-launched-once. I filed [STORM-415](https://issues.apache.org/jira/browse/STORM-415) and sent pull request.
, Github user d2r commented on a diff in the pull request:

    https://github.com/apache/incubator-storm/pull/194#discussion_r15228640
  
    --- Diff: storm-core/src/clj/backtype/storm/daemon/supervisor.clj ---
    @@ -67,12 +67,19 @@
                    [(Integer. port) (LocalAssignment. storm-id (doall executors))]
                    ))))
     
    -
     (defn- read-assignments
       "Returns map from port to struct containing :storm-id and :executors"
    -  [assignments-snapshot assignment-id]
    -  (->> (dofor [sid (keys assignments-snapshot)] (read-my-executors assignments-snapshot sid assignment-id))
    -       (apply merge-with (fn [& ignored] (throw-runtime "Should not have multiple topologies assigned to one port")))))
    +  ([assignments-snapshot assignment-id]
    +     (->> (dofor [sid (keys assignments-snapshot)] (read-my-executors assignments-snapshot sid assignment-id))
    +          (apply merge-with (fn [& ignored] (throw-runtime "Should not have multiple topologies assigned to one port")))))
    +  ([assignments-snapshot assignment-id existing-assignment retries]
    +     (try (let [assignments (read-assignments assignments-snapshot assignment-id)]
    +            (reset! retries 0)
    +            assignments)
    +          (catch RuntimeException e
    +            (if (> @retries 2) (throw e) (swap! retries inc))
    +            (log-warn (.getMessage e))
    --- End diff --
    
    It would be nice to include some text to the effect that we are retrying "1 of 3" times in addition to this stack trace, just to avoid confusing this with a more serious error.  But this is very, very minor.
, Github user d2r commented on the pull request:

    https://github.com/apache/incubator-storm/pull/194#issuecomment-49742005
  
    > The cause seems to be the bug in validate-launched-once. I filed STORM-415 and sent pull request.
    
    Yes, that fixes it for me.
    
    +1 so long as STORM-415 also gets merged in.  I had one very minor comment about the new log message, but I am fine with this as-is.
, Github user iwasakims commented on a diff in the pull request:

    https://github.com/apache/incubator-storm/pull/194#discussion_r15271391
  
    --- Diff: storm-core/src/clj/backtype/storm/daemon/supervisor.clj ---
    @@ -67,12 +67,19 @@
                    [(Integer. port) (LocalAssignment. storm-id (doall executors))]
                    ))))
     
    -
     (defn- read-assignments
       "Returns map from port to struct containing :storm-id and :executors"
    -  [assignments-snapshot assignment-id]
    -  (->> (dofor [sid (keys assignments-snapshot)] (read-my-executors assignments-snapshot sid assignment-id))
    -       (apply merge-with (fn [& ignored] (throw-runtime "Should not have multiple topologies assigned to one port")))))
    +  ([assignments-snapshot assignment-id]
    +     (->> (dofor [sid (keys assignments-snapshot)] (read-my-executors assignments-snapshot sid assignment-id))
    +          (apply merge-with (fn [& ignored] (throw-runtime "Should not have multiple topologies assigned to one port")))))
    +  ([assignments-snapshot assignment-id existing-assignment retries]
    +     (try (let [assignments (read-assignments assignments-snapshot assignment-id)]
    +            (reset! retries 0)
    +            assignments)
    +          (catch RuntimeException e
    +            (if (> @retries 2) (throw e) (swap! retries inc))
    +            (log-warn (.getMessage e))
    --- End diff --
    
    Thanks for the comment. I updated the code. It shows the message like below now:
    ```
    19102 [nREPL-worker-0] INFO  backtype.storm.daemon.nimbus - Setting new assignment for topology id topology2-2-0: #backtype.storm.daemon.common.Assignment{:master-code-dir "/tmp/bd4c83e2-fcab-44e9-bfd9-678124f22a3f/nimbus/stormdist/topology2-2-0", :node->host {"sup1" "centos63"}, :executor->node+port {[1] ["sup1" 1], [2] ["sup1" 2]}, :executor->start-time-secs {[1] 0, [2] 0}}
    19196 [Thread-12] WARN  backtype.storm.daemon.supervisor - Should not have multiple topologies assigned to one port: retrying 1 of 3
    19357 [nREPL-worker-0] INFO  backtype.storm.daemon.nimbus - Delaying event :do-rebalance for 0 secs for topology2-2-0
    19372 [nREPL-worker-0] INFO  backtype.storm.daemon.nimbus - Updated topology2-2-0 with status {:type :rebalancing, :delay-secs 0, :old-status {:type :active}, :num-workers nil, :executor-overrides {}}
    19398 [Thread-12] WARN  backtype.storm.daemon.supervisor - Should not have multiple topologies assigned to one port: retrying 2 of 3
    ```

, Github user ptgoetz commented on the pull request:

    https://github.com/apache/incubator-storm/pull/194#issuecomment-49948145
  
    +1
, Github user revans2 commented on the pull request:

    https://github.com/apache/incubator-storm/pull/194#issuecomment-50207583
  
    STORM-415 is in, the unit tests all pass, and the changes look good to me I am +1.  I'll merge this in.
, Github user asfgit closed the pull request at:

    https://github.com/apache/incubator-storm/pull/194
, Thanks for this fix Masatake.  This bug has bitten me for the last time.

]