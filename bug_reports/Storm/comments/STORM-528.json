[Actually there're 3 storm.py, 3 storm.rb, 2 storm.js.
Could we clean up things to leave only one?, In the past this was fixed by using a symlink to point to the original file, but that resulted in issues for windows users, where symlinks are not easily supported.  I would ultimately like to see three new jars created.  One each for storm.py, storm.rb, and storm.js.  The jars would be very simple and just have a single file in them.

{code}
/resources/storm.XX
{code}

This allows a topology jar to declare a dependency in their pom.xml like

{code}
 <dependency>
  <groupId>org.apache.storm</groupId>
  <artifactId>storm_py</artifactId>
  <version>${storm.version}</version>
</dependency>
{code}

storm-starter would then be updated to use these dependencies.

I would prefer to see the testing of each of these moved over into the same pom.xml that creates the jar file, just because it would follow the convention better.  This is a bit of a chicken/egg problem because there are some tests that not only test storm.py, but also test the ShellBolt/ShellSpout code.  Personally I would like to see ShellBolt and ShellSpout tested with true unit tests that don't rely on storm.py being there, but because we release everything together I am OK with just relying on the integration tests in the other three jars for now., It could be resolved with STORM-513, pull request is https://github.com/apache/storm/pull/286.

But it cannot resolve root of cause. It just copy and paste files to let 3 files have same content., [~revans2] Remeber that the storm.py is just a base class, and real production code we add alot of other py files that derive from it. Placing the python/ruby/nodejs files in a JAR would require  npm install/pip install/gem install as part of the maven build and package the dynamic code with all of its dependnecies. It is too combersome. 
The real solution IMO is to allow ShellBolts to override _codeDir and provide a path to the python/nodejs/code. We currently do that with reflection magic in our base classes.
That way the examples could specify where to find the dynamic code folder. and that's it., I have other approach though it could be more complex than current.

We can keep only ShellSpout, ShellBolt, etc that runs multilang subprocess to storm-core, and move multilang base class implementation to other directories.
Each language could be packaged by their packaging approach., [~itaifrenkel] I think your approach sounds reasonable.  Would you be willing to file a JIRA to so we can override the _codeDir without using reflection.  It would also be nice to provide a simple way to set/override environment variables too., In pull request, https://github.com/apache/storm/pull/385 - STORM-528, https://github.com/apache/storm/pull/389, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/389#issuecomment-72539951
  
    There is a lot of code in here that I don't understand how it relates to STORM-528.  Setting the code dir, is not really something that I think we want to expose, except a controlled way for testing.  I also don't understand all of the code for max pending.  It looks like you have code from multiple JIRA here.
, Github user rekhajoshm closed the pull request at:

    https://github.com/apache/storm/pull/389
]