[Attached are the logs for the runs with topology.debug enabled., OK I have a bit more information.  I traced through the failure logs looking at the batch that failed vs an earlier batch that succeeded, but in the same run of the test.  If found out that in this case it was the commit that failed, not the actual processing, and that both count bolts involved did not process the commit message properly.  They received it, and finished executing, but did not ack the commit message, and did not emit anything new to the coordinator related to the commit.

FAILURE CASE:

Summary:
{code}
spout/coordinator:7 -> count:3 [commit] received done (!!!!no-ack!!!!)
spout/coordinator:7 -> count:4 [commit] received done (!!!!no-ack!!!!)
spout/coordinator:7 -> 2bb7b476-3c35-42dd-bad6-519e8276d51c:1 [commit] received ack done
spout/coordinator:7 -> __acker:2 [__ack_init -3670038820065525526] received ack done
2bb7b476-3c35-42dd-bad6-519e8276d51c:1 -> ?:2 [__ack_ack 7261381623926650396] received ack done
{code}

for logs run
{code}grep 8932423455392050678 failure.txt{code}

SUCCESS CASE:
Summary:
{code}
spout/coordinator:7 -> count:3 [commit] received ack done
spout/coordinator:7 -> count:4 [commit] received ack done
spout/coordinator:7 -> 38f9f1bc-338c-4486-806b-ac946d3920e1:1 [commit] received ack done
38f9f1bc-338c-4486-806b-ac946d3920e1:1 -> __acker:2 [__ack_ack 1031730095793096003] received ack done
spout/coordinator:7 -> __acker:2 [__ack_init 3961628406540289946] received ack done
count:4 -> 38f9f1bc-338c-4486-806b-ac946d3920e1:1 [coord] received ack done
count:3 -> 38f9f1bc-338c-4486-806b-ac946d3920e1:1 [coord] received ack done
count:4 -> __acker:2 [__ack_ack 31105666502947637] received ack done
count:3 -> __acker:2 [__ack_ack 2686861581078832178] received ack done
38f9f1bc-338c-4486-806b-ac946d3920e1:1 -> __acker:2 [__ack_ack 4862926263550768684] received ack done
38f9f1bc-338c-4486-806b-ac946d3920e1:1 -> __acker:2 [__ack_ack 6841047554966168562] received ack done
__acker:2 -> spout/coordinator:7 [__ack_ack] received spout-ack
{code}

For logs run
{code}grep 3333285042640611010 failure.txt{code}

Not sure what is happening that made the count bolts not respond properly to a commit, but I will see what I can come up with., GitHub user revans2 opened a pull request:

    https://github.com/apache/storm/pull/526

    STORM-773: STORM-772: Transactional test timeout too low on restart, and InterruptedException

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/revans2/incubator-storm STORM-773

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/526.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #526
    
----
commit 933972abb47aa9b4ad87bc92d3ad7f79d21c9aee
Author: Robert (Bobby) Evans <evans@yahoo-inc.com>
Date:   2015-04-16T20:58:37Z

    STORM-773: Transactional test timout too low on restart
    STORM-772: Interrupted and InterruptedIOException failures fixed

----
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/526#issuecomment-93840072
  
    So after much searching and tracing through logs, with some added logs in the CoordinatedBolt I found out that the CoordinatedBolt was timing out the batch in a few cases, if the batch took longer then 300ms to complete because the timeout is set to 30 seconds by default and 10 seconds of simulated time equals 100ms of wall time.  When this would happen the bolts would be confused and the batch would never be fully acked.  I am not sure why the coordinator/spout was not getting a timeout and replaying the batch in simulated time, but because it is a simulated time issue, and only really shows up on this one test, I decided to increase the timeout.  If others think we should dig deeper and understand why the replay is not happening I am happy to hand the JIRA over to them.
, Github user knusbaum commented on the pull request:

    https://github.com/apache/storm/pull/526#issuecomment-93856496
  
    +1

, well done, Github user hustfxj commented on the pull request:

    https://github.com/apache/storm/pull/526#issuecomment-93870491
  
    +1
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/526
]