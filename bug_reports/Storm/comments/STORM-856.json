[We would be better to have more informations to address this.

- Is it always reproducible? Or occasionally?
- What messages are printed out when nimbus is crashed? Are stack traces made on each crash pointing to same code line?, Reproducable always on 0.10 branch (master). 0.9.x-branch is OK.

{code}
2015-06-08T16:55:17.162-0500 b.s.d.nimbus [INFO] Delaying event :remove for  secs for test-1-1433800457
2015-06-08T16:55:17.166-0500 b.s.d.nimbus [ERROR] Error on initialization of server service-handler
java.lang.NullPointerException: null
	at clojure.lang.Numbers.ops(Numbers.java:961) ~[clojure-1.6.0.jar:na]
	at clojure.lang.Numbers.multiply(Numbers.java:146) ~[clojure-1.6.0.jar:na]
	at clojure.lang.Numbers.multiply(Numbers.java:3659) ~[clojure-1.6.0.jar:na]
	at backtype.storm.util$secs_to_millis_long.invoke(util.clj:243) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at backtype.storm.timer$schedule.doInvoke(timer.clj:92) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at clojure.lang.RestFn.invoke(RestFn.java:445) [clojure-1.6.0.jar:na]
	at backtype.storm.daemon.nimbus$delay_event.invoke(nimbus.clj:242) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at backtype.storm.daemon.nimbus$state_transitions$fn__8535.invoke(nimbus.clj:173) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.6.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.6.0.jar:na]
	at clojure.core$apply.invoke(core.clj:624) ~[clojure-1.6.0.jar:na]
	at backtype.storm.daemon.nimbus$transition_BANG_.invoke(nimbus.clj:225) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at backtype.storm.daemon.nimbus$transition_BANG_.invoke(nimbus.clj:196) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at backtype.storm.daemon.nimbus$fn__9152$exec_fn__1666__auto____9153.invoke(nimbus.clj:1014) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at clojure.lang.AFn.applyToHelper(AFn.java:156) [clojure-1.6.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.6.0.jar:na]
	at clojure.core$apply.invoke(core.clj:624) ~[clojure-1.6.0.jar:na]
	at backtype.storm.daemon.nimbus$fn__9152$service_handler__9270.doInvoke(nimbus.clj:1006) [storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at clojure.lang.RestFn.invoke(RestFn.java:421) [clojure-1.6.0.jar:na]
	at backtype.storm.daemon.nimbus$launch_server_BANG_.invoke(nimbus.clj:1358) [storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at backtype.storm.daemon.nimbus$_launch.invoke(nimbus.clj:1389) [storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at backtype.storm.daemon.nimbus$_main.invoke(nimbus.clj:1411) [storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.6.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.6.0.jar:na]
	at backtype.storm.daemon.nimbus.main(Unknown Source) [storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
2015-06-08T16:55:17.170-0500 b.s.util [ERROR] Halting process: ("Error on initialization")
java.lang.RuntimeException: ("Error on initialization")
	at backtype.storm.util$exit_process_BANG_.doInvoke(util.clj:332) [storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at clojure.lang.RestFn.invoke(RestFn.java:423) [clojure-1.6.0.jar:na]
	at backtype.storm.daemon.nimbus$fn__9152$service_handler__9270.doInvoke(nimbus.clj:1006) [storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at clojure.lang.RestFn.invoke(RestFn.java:421) [clojure-1.6.0.jar:na]
	at backtype.storm.daemon.nimbus$launch_server_BANG_.invoke(nimbus.clj:1358) [storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at backtype.storm.daemon.nimbus$_launch.invoke(nimbus.clj:1389) [storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at backtype.storm.daemon.nimbus$_main.invoke(nimbus.clj:1411) [storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
	at clojure.lang.AFn.applyToHelper(AFn.java:152) [clojure-1.6.0.jar:na]
	at clojure.lang.AFn.applyTo(AFn.java:144) [clojure-1.6.0.jar:na]
	at backtype.storm.daemon.nimbus.main(Unknown Source) [storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]
[1]  + 21116 exit 13    bin/storm nimbus
{code}

This is in the logs whenever nimbus comes back up if it dies in between the time that someone issues a 'kill' and nimbus acually tries to kill it., Suspect we may not be serializing `:delay-secs` [here|https://github.com/apache/storm/blob/v0.10.0/storm-core/src/clj/backtype/storm/converter.clj#L142-L151], Yes, I see your point.
Neither thrift and clojure StormBase don't have :delay-secs, so update-storm! and storm-base  doesn't work on :delay-secs.
So it's just added to map on demand in runtime, and when nimbus is restarted, nimbus doesn't recognize this value.

{code}
      (update-storm!
        [this storm-id new-elems]
        (let [base (storm-base this storm-id nil)
              executors (:component->executors base)
              new-elems (update new-elems :component->executors (partial merge executors))]
          (set-data cluster-state (storm-path storm-id)
                    (-> base
                        (merge new-elems)
                        thriftify-storm-base
                        Utils/serialize)
                    acls)))

      (storm-base
        [this storm-id callback]
        (when callback
          (swap! storm-base-callback assoc storm-id callback))
        (clojurify-storm-base (maybe-deserialize (get-data cluster-state (storm-path storm-id) (not-nil? callback)) StormBase)))
{code}, Sorry, assigning is by accident, my cat just walks on Macbook.

Btw, once it is triggered users cannot restore from this situation unless they remove state from zk by hand.
(But I don't expect users to remove it manually.)

I think it should be marked as critical or even higher., Actually, I think it is serialized, but it is nested down one more level than before the thrift serialization change.

[~kabhwan], I think it is a [simple fix|https://github.com/apache/storm/compare/master...d2r:storm-856-use-ser-delay-secs]; if you (or the cat) want to make a pull request, it would be OK :)  Otherwise I will put up a pull request shortly when I can confirm it works.

I agree, if this condition happens in the cluster, then it takes some effort to restore nimbus to a working state while keeping running topologies.  Unfortunately, I will mark it as a blocker., GitHub user d2r opened a pull request:

    https://github.com/apache/storm/pull/585

    [STORM-856] use serialized value of delay secs for topo actions

    * Use serialized values for delay in rebalance and kill topology actions, in case nimbus has initialized sometime after the action was given
    * Fix logic in deserialization of topology action options

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/d2r/storm storm-856-use-ser-delay-secs

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/585.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #585
    
----
commit 128ee14ff6f8571c973161805bceadf8cc2cfce8
Author: Derek Dagit <derekd@yahoo-inc.com>
Date:   2015-06-09T01:20:42Z

    use serialized value of delay secs for topo actions

----
, Github user d2r commented on the pull request:

    https://github.com/apache/storm/pull/585#issuecomment-110191747
  
    This should also be merged to 0.10.x-branch.
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/585#issuecomment-110255155
  
    LGTM. Seems like it was a small mistake.
, Lowering "Priority" to Critical. Serialization is still OK, so the fix would be to deploy a storm version with this patch and restart nimbus.  There should not be a need to clear or modify ZK state because of this issue., Github user ptgoetz commented on the pull request:

    https://github.com/apache/storm/pull/585#issuecomment-110435396
  
    +1 Thanks for the quick turnaround on this @d2r.
, Github user knusbaum commented on the pull request:

    https://github.com/apache/storm/pull/585#issuecomment-110447694
  
    +1 Works for me.
, Github user Parth-Brahmbhatt commented on the pull request:

    https://github.com/apache/storm/pull/585#issuecomment-110450393
  
    +1, this bug was introduced by me when I worked on rolling upgrade support, sorry for not catching this during my testing.
, Github user ptgoetz commented on the pull request:

    https://github.com/apache/storm/pull/585#issuecomment-110497517
  
    @d2r I plan to merge this once the 24-hour review period has completed.
, Github user d2r commented on the pull request:

    https://github.com/apache/storm/pull/585#issuecomment-110523564
  
    > +1, this bug was introduced by me when I worked on rolling upgrade support, sorry for not catching this during my testing.
    
    It is fine. Rolling upgrades is a big win, and I am happy to have it.
    
    
    
    > @d2r I plan to merge this once the 24-hour review period has completed.
    
    OK, Thanks.
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/585#issuecomment-110540302
  
    Only thing we missed is checklist of test, not Parth's mistake. It would be better while we concern about it.
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/585
]