[I think this was an attempt to avoid an integer overflow issue that happens with shifting the bit too many times.  there is similar code to protect against this at 

https://github.com/apache/incubator-storm/blob/1a0b46e95ab4ac467525314a75819a75dec92c40/storm-core/src/jvm/backtype/storm/messaging/netty/Client.java#L120-122

So the min can probably be removed., GitHub user kishorvpatil opened a pull request:

    https://github.com/apache/incubator-storm/pull/220

    [STORM-330] Implement storm exponential backoff stategy for netty client and curator

    Fix  [netty Client.java](storm-core/src/jvm/backtype/storm/messaging/netty/Client.java) retry logic and [Utils.java](storm-core/src/jvm/backtype/storm/utils/Utils.java
    ) Curator Framework. 
    The `StormBoundedExponentialBackoffRetry` provides generic exponential-linear backoff retry policy for STORM. It overcomes the following shortcomings in curator frameworks implementation of `BoundedExponentialBackOffRetry`:
      - Limitation maxRetries to 29.
      - `getSleepTimeMs` fails with IllegalArgumentException by passing -ve argument to random.nextInt if retryCount > 29.
      - Also, exponential calculation in quickly catches up to `maxSleepTimeMs` - eventually adding more delay and increasing collision possibility.
    This class calculates `threshold` for exponentially increasing `sleeptime` for retries. Beyond threshold, the sleep time increase is linear. 
    It adds jitter for exponential/linear retry.
    It guarantees `currSleepTimeMs >= prevSleepTimeMs` and `baseSleepTimeMs <= currSleepTimeMs <= maxSleepTimeMs`

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/kishorvpatil/incubator-storm storm-backoff-retry-strategy

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/incubator-storm/pull/220.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #220
    
----
commit 7d21ffe9f9f61c9e3115add26a250b95084b131d
Author: Kishor Patil <kpatil@yahoo-inc.com>
Date:   2014-08-08T20:32:20Z

    Implement storm exponential backoff stategy to use for netty client and curator.

----
, Github user ptgoetz commented on a diff in the pull request:

    https://github.com/apache/incubator-storm/pull/220#discussion_r16061121
  
    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java ---
    @@ -137,8 +138,9 @@ private synchronized void connect() {
                 if (channel != null && channel.isConnected()) {
                     return;
                 }
    -            
    +
                 int tried = 0;
    +            StormBoundedExponentialBackoffRetry retryPolicy = new StormBoundedExponentialBackoffRetry(base_sleep_ms, max_sleep_ms, max_retries);
    --- End diff --
    
    Would it make sense to make `retryPolicy` an instance variable and instantiate it in the constructor rather than create a new one for every call to `connect()`?
, Github user kishorvpatil commented on a diff in the pull request:

    https://github.com/apache/incubator-storm/pull/220#discussion_r16062415
  
    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java ---
    @@ -137,8 +138,9 @@ private synchronized void connect() {
                 if (channel != null && channel.isConnected()) {
                     return;
                 }
    -            
    +
                 int tried = 0;
    +            StormBoundedExponentialBackoffRetry retryPolicy = new StormBoundedExponentialBackoffRetry(base_sleep_ms, max_sleep_ms, max_retries);
    --- End diff --
    
    @ptgoetz, good catch. I will move instantiation of `retryPolicy` from `connect` to constructor.
, Github user kishorvpatil commented on the pull request:

    https://github.com/apache/incubator-storm/pull/220#issuecomment-51810058
  
    @ptgoetz, i have moved instantiation of `retryPolicy` to the client constructor. Please review and let me know if you any further comments.
, Github user kishorvpatil commented on the pull request:

    https://github.com/apache/incubator-storm/pull/220#issuecomment-52820221
  
    @ptgoetz, When you get a chance, could you please take another look and let me know? 
, Github user ptgoetz commented on the pull request:

    https://github.com/apache/incubator-storm/pull/220#issuecomment-52829033
  
    Looks good. Thanks @kishorvpatil 
    +1
, Github user kishorvpatil commented on the pull request:

    https://github.com/apache/incubator-storm/pull/220#issuecomment-52829964
  
    @ptgoetz, thank you.
, Github user revans2 commented on the pull request:

    https://github.com/apache/incubator-storm/pull/220#issuecomment-53281110
  
    I am getting some test failures.
    
    backtype.storm.utils-test test-new-curator-uses-exponential-backoff is failing with 
    
     java.lang.IllegalArgumentException: No matching field found: getMaxRetryInterval for class backtype.storm.utils.StormBoundedExponentialBackoffRetry
    
    which is a method you removed.
    
    backtype.storm.messaging.netty-unit-test is getting a divide by zero error in a lot of the test functions at StormBoundedExponentialBackoffRetry.java:53
, Github user kishorvpatil commented on the pull request:

    https://github.com/apache/incubator-storm/pull/220#issuecomment-53676020
  
    @revans2, 
    I have addressed all the concerns and all tests pass now.
       - `backtype.storm.utils-test test-new-curator-uses-exponential-backoff` exposed `getMaxRetryInterval` for testing alone. Since the `maxRetryInterval` is argument passed in constructor and need not again be retrieved for assertion against what was passed to the constructor. 
       - About failing tests, the constructor arguments needed to be corrected, since old class had different order of `maxRetries` and `maxSleepTimeMs` in `Utils.java`.
       - About `divide by zero`, was scenarios I overlooked - when `maxRetries` is below `expRetriesThreshold`, making the RetryPolicy - exponential only. In that case, the calculation of `linearBaseSleepMs` failed. Now I am forcing it to `1` whenever user configures `maxRetries` below exponential retry threshold. 
, Github user revans2 commented on the pull request:

    https://github.com/apache/incubator-storm/pull/220#issuecomment-53717790
  
    +1 all the tests pass and the code look fine.
    
    @ptgoetz not sure if you want to take another look or not.
, Github user asfgit closed the pull request at:

    https://github.com/apache/incubator-storm/pull/220
, Merged. Thanks [~kishorvpatil]]