[i'm the same as you. we use clojureDSL under storm 0.9.2-incubating . we also found that and have no idea.
we expected this bug can be resolved as soon as possible, [~phyce] [~newday1] If possible can you please provide a sample topology which can reproduce this issue. Thanks., [~sriharsha] hello, i found something today though i don't know why it was

here is the thing , we use clojure dsl under storm . The bolt always loop died when it run the prepare function,So i guess
maybe something wrong happen when load the clojure code. Then i build a storm from github mirror, modify the sources and add some log where storm load the clojure bolt

backtype.storm.utils/Utils
    public static IFn loadClojureFn(String namespace, String name) {
        try {
            clojure.lang.Compiler.eval(RT.readString("(require '" + namespace + ")"));
        } catch (Exception e) {
LOG.error("读取clojure bolt代码异常 namespace=" + namespace + ", name=" + name, e);
        }
        return (IFn) RT.var(namespace, name).deref();
    }

here is the log when the bolt throw exception

2015-02-09 16:19:02 b.s.u.Utils [ERROR] 读取clojure bolt代码异常 namespace=com.pajk.risk.storm.clj.engine, name=count-bolt__
clojure.lang.Compiler$CompilerException: java.lang.RuntimeException: Unable to resolve symbol: conditionCache in this context, compiling:(com/pajk/risk/storm/clj/calc.clj:12:13)
	at clojure.lang.Compiler.analyze(Compiler.java:6464) ~[clojure-1.6.0.jar:na]
	at clojure.lang.Compiler.analyze(Compiler.java:6406) ~[clojure-1.6.0.jar:na]
	at clojure.lang.Compiler$HostExpr$Parser.parse(Compiler.java:924) ~[clojure-1.6.0.jar:na]
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6644) ~[clojure-1.6.0.jar:na]
	at clojure.lang.Compiler.analyze(Compiler.java:6445) ~[clojure-1.6.0.jar:na]
	at clojure.lang.Compiler.analyzeSeq(Compiler.java:6632) ~[clojure-1.6.0.jar:na]
	at clojure.lang.Compiler.analyze(Compiler.java:6445) ~[clojure-1.6.0.jar:na]

but i do define the conditionCache in a another clojure file, and i load it by :use , here is my code

(ns com.pajk.risk.storm.clj.calc
  (:import (java.util Map)
           (com.pajk.risk.engine.api.model UniformEvent))
  (:use com.pajk.risk.storm.clj.cache)
  (:use com.pajk.risk.storm.clj.mock)
  (:use com.pajk.risk.storm.clj.util)
  (:require [clojure.tools.logging :as log]))

conditionCache is defined in com.pajk.risk.storm.clj.cache

(def ^LoadingCache conditionCache (-> (CacheBuilder/newBuilder)
                                      (.maximumSize 10000)
                                      (.build (proxy [CacheLoader] [] (load [^String key]
                                                                        (AviatorEvaluator/compile key))))))

My question is how the storm load my clojure bolt and how to load its dependency , Thx
, i am so confused about it. i wrote a test to load the clojure function in java, That's ok. My code is as follows
i can get the reference successful

public class ClojureDslLoadTest {
    public static void main(String[] args) {
        System.out.println(loadClojureFn("com.pajk.risk.storm.clj.confdata", "init-all-test"));
        System.out.println(loadClojureFn("com.pajk.risk.storm.clj.util", "load-json"));
    }

    public static IFn loadClojureFn(String namespace, String name) {
        try {
            clojure.lang.Compiler.eval(RT.readString("(require '" + namespace + ")"));
        } catch (Exception e) {
            //if playing from the repl and defining functions, file won't exist
            e.printStackTrace();
        }
        return (IFn) RT.var(namespace, name).deref();
    }
}

But under storm, i caught the Exception 

clojure.lang.Compiler$CompilerException: java.lang.RuntimeException: Unable to resolve symbol: load-json in this context, compiling:(com/pajk/risk/storm/clj/confdata.clj:42:36)
	at clojure.lang.Compiler.analyze(Compiler.java:6464) ~[clojure-1.6.0.jar:na]

I have no idea ..
, [~newday1] Thanks for the details. I'll work on reproducing it., [~sriharsha] 

hi, i found something interesting.
when i merge all my clj sources to one clj file , it works fine.
Is this a classpath problem? But it is under the same classpath whether it works fine  or failed

i print my classpath when storm load the prepare method

2015-02-26 11:00:14 b.s.c.ClojureBolt [INFO] Storm开始加载bolt闭包com.pajk.risk.storm.clj.engine_count-bolt__ classpath=/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/ring-devel-1.3
.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/slf4j-api-1.7.5.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/commons-lang-2.5.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/
lib/storm-core-0.10.0-SNAPSHOT.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/math.numeric-tower-0.0.1.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/commons-codec-1.6.jar:/ho
me/admin/apache-storm-0.10.0-SNAPSHOT/lib/crypto-equality-1.0.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/reflectasm-1.07-shaded.jar:/home/admin/apache-storm-0.10.0-SNAPSHO
T/lib/ns-tracker-0.2.2.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/curator-client-2.4.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/commons-exec-1.1.jar:/home/admin/apac
he-storm-0.10.0-SNAPSHOT/lib/tools.namespace-0.2.4.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/asm-4.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/chill-java-0.3.5.jar:/
home/admin/apache-storm-0.10.0-SNAPSHOT/lib/ring-core-1.1.5.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/clj-time-0.8.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/ring-s
ervlet-1.3.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/httpclient-4.3.3.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/jline-2.11.jar:/home/admin/apache-storm-0.10.0-SNAP
SHOT/lib/hadoop-auth-2.4.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/commons-io-2.4.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/tools.logging-0.2.3.jar:/home/admin/apa
che-storm-0.10.0-SNAPSHOT/lib/clout-1.0.1.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/compojure-1.1.3.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/jetty-security-7.6.13.v
20130916.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/disruptor-2.10.1.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/servlet-api-2.5.jar:/home/admin/apache-storm-0.10.0-SNA
PSHOT/lib/jetty-servlets-7.6.13.v20130916.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/objenesis-1.2.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/ring-anti-forgery-1.0.0.j
ar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/jetty-http-7.6.13.v20130916.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/javax.servlet-2.5.0.v201103041518.jar:/home/admin/apac
he-storm-0.10.0-SNAPSHOT/lib/logback-core-1.0.13.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/clojure-1.6.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/carbonite-1.4.0.ja
r:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/jetty-continuation-7.6.13.v20130916.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/logback-classic-1.0.13.jar:/home/admin/apache-s
torm-0.10.0-SNAPSHOT/lib/curator-framework-2.4.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/snakeyaml-1.11.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/java.classpath-0.
2.2.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/ring-jetty-adapter-1.3.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/jetty-servlet-7.6.13.v20130916.jar:/home/admin/apach
e-storm-0.10.0-SNAPSHOT/lib/json-simple-1.1.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/minlog-1.2.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/tools.cli-0.2.4.jar:/home/
admin/apache-storm-0.10.0-SNAPSHOT/lib/core.incubator-0.1.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/commons-logging-1.1.3.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib
/crypto-random-1.2.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/kryo-2.21.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/httpcore-4.3.2.jar:/home/admin/apache-storm-0.10.0
-SNAPSHOT/lib/joda-time-2.3.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/jetty-io-7.6.13.v20130916.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/tools.macro-0.1.0.jar:/home
/admin/apache-storm-0.10.0-SNAPSHOT/lib/log4j-over-slf4j-1.6.6.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/jetty-client-7.6.13.v20130916.jar:/home/admin/apache-storm-0.10.0-S
NAPSHOT/lib/jetty-util-7.6.13.v20130916.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/jetty-server-7.6.13.v20130916.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/jgrapht-cor
e-0.9.0.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/commons-fileupload-1.2.1.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/lib/clj-stacktrace-0.2.7.jar:/home/admin/apache-stor
m-0.10.0-SNAPSHOT/lib/hiccup-0.3.6.jar:/home/admin/apache-storm-0.10.0-SNAPSHOT/conf:/home/admin/storm/localdir/supervisor/stormdist/risk-engine-4-1424919605/stormjar.jar

, [~sriharsha] [~phyce]
Hello , i found the root cause .
Because we package storm-jar include the clj sources
Storm may load the .clj source or .class , they conflict , I've been running into this issue as well. It has been more apparent when we did not AOT compile the project, however, we're now seeing it for external libraries that are AOT compiled. I am not yet convinced that this is a race condition between the loading of clj and class files. Is there any proof for that claim?, [~jeremyheiler] Could you give details on which storm version are you using and you are also seeing the same error as
" Attempting to
call unbound fn: #'entry-dedup.bolt/dedup__ at", I'm using Storm 0.9.3 (with Netty). And yes, I am seeing the same "unbound fn" error, of course with different vars., [~jeremyheiler] If possible can you give us an example topology where you seeing this issue. I tried to reproduce this with example shell topologies I am not seeing any errors or issues with them., As far as we can tell, since we upgraded to Storm 0.9.4 we did not reproduce this issue. So maybe it got solved by 0.9.4 as a side effect. Can you guys reproduce once you upgrade to 0.9.4 ?
, This is not fixed in 0.9.5, at least for my usage.

However, I had isolated one instance of this error to  a custom spout. It would happen when nextTuple is called for the first time. If I put a try/catch in nextTuple, catching IllegalStateException so that the unbound var error is ignored, it eventually stops happening after ~25 seconds on a 1-spout/4-bolt topology with no parallelism.

What could cause this race condition?, Same problem here with 0.10.0-beta1, I can reproduce this with storm running off the git head as well. I just built and deployed it. Not bundling the storm jar in my uberjar. , A bit more discovery. Taking my bolts and spouts and putting them in the same .clj file seems to have fixed it. This suggests to me that when Utils.loadClojureFn requires the namespace for one, the other isn't also being loaded. There are no references from my bolts to my spouts except in the topology, so maybe it's when the topology is resolved that the problem manifests?, In my case, streamparse api were used to run locally and submit code to STORM cluster, and  it didn't happen during prepare, when I ran it locally it was ok but when it is submitted to STORM cluster, I got

java.lang.RuntimeException: java.lang.IllegalStateException: Attempting to call unbound fn

clojure version is 1.5.1, storm version is 0.9.5, sparse 2.1.3

the error was due to calling "call-to-outside-function" within spout execute, and that function can be 3rd party library as well, the code is as follows:

(defn call-to-outside-function [someArg]
    (do stuff ....))

(defspout kw-spout ["something"]
  [conf context collector]
        (spout
            (nextTuple []
                (Thread/sleep 100)
                (call-to-outside-function "someArgs")
                (emit-spout! collector ("not important"))
                )
            (ack [id])
            ))

It is related to this bug ?]