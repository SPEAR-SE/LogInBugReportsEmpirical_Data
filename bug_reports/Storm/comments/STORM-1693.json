[The number of tuples sent by *bolt A to acker in last 10 minutes* differ a lot by *the number of tuples read by acker from bolt A in last 10 minutes*., I put up some code to catch any negative percentage here -
https://github.com/apache/storm/blob/1.x-branch/storm-core/src/jvm/org/apache/storm/metric/internal/CountStatAndMetric.java#L189

``
 if (pct < 0) {
         throw new IllegalStateException("This is never expected. " + timeSpent + "#" + timeNeeded + "#" + bucketTime[i]);
 }
``

The exception was thrown in the topology with following statements
{noformat}
java.lang.IllegalStateException: This is never expected. 602745#-2745#0
java.lang.IllegalStateException: This is never expected. 602421#-2421#0
java.lang.IllegalStateException: This is never expected. 602467#-2467#0
{noformat}, [~revans2] can you help me in debugging this? Since `_bucketStart` is being updated every `600/19` seconds, why would timeSpent be higher than 600 seconds. , GitHub user abhishekagarwal87 opened a pull request:

    https://github.com/apache/storm/pull/1326

    STORM-1693: Do not cancel the task after stats are rendered

    Fresher task is cancelled right after 3 seconds when executor heartbeat is sent. getValueAndReset can rotate the buckets but it is not time bound. Metric tick is in same queue as the input tuples from spout. If processing input tuples is slow, it may take much more to generate metrics and call getValueAndReset and thus `System.currentTimeMillis() - _bucketStart` is more than 10 minutes. 

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/abhishekagarwal87/storm STORM-1693

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1326.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1326
    
----
commit 884b051b3fcdd49cb8a0df52b57b685d6b36f858
Author: Abhishek Agarwal <abhishek.agarwal@inmobi.com>
Date:   2016-04-10T16:12:19Z

    STORM-1693: Do not cancel the task after stats are rendered

----
, Github user abhishekagarwal87 commented on the pull request:

    https://github.com/apache/storm/pull/1326#issuecomment-208321281
  
    Remove the _task.cancel from other places and redundant cleanup calls. Build failure doesn't seem to be related. 
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1326#discussion_r59214896
  
    --- Diff: storm-core/src/jvm/org/apache/storm/metric/internal/CountStatAndMetric.java ---
    @@ -197,12 +196,6 @@ long readApproximateTime(long value, long timeSpent, long[] bucketTime, long[] b
             return total;
         }
     
    -    public void close() {
    -        if (_task != null) {
    -            _task.cancel();
    --- End diff --
    
    If we don't cancel it we leak memory and other things in the tests.  We at least need to close the stat when we are all done, not after calling render-stats.
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1326#discussion_r59214980
  
    --- Diff: storm-core/src/jvm/org/apache/storm/metric/internal/LatencyStatAndMetric.java ---
    @@ -248,12 +248,6 @@ private synchronized void rotate(long lat, long count, long timeSpent, long targ
             return Utils.zeroIfNaNOrInf(((double) totalLat) / totalCount);
         }
     
    -    public void close() {
    -        if (_task != null) {
    -            _task.cancel();
    --- End diff --
    
    Here too we do need to cancel the task eventually.
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1326#discussion_r59215053
  
    --- Diff: storm-core/src/jvm/org/apache/storm/metric/internal/MultiCountStatAndMetric.java ---
    @@ -103,10 +103,4 @@ public Object getValueAndReset() {
             }
             return ret;
         }
    -
    -    public void close() {
    -        for (CountStatAndMetric cc: _counts.values()) {
    -            cc.close();
    --- End diff --
    
    We still need this too.
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1326#discussion_r59215086
  
    --- Diff: storm-core/src/jvm/org/apache/storm/metric/internal/MultiLatencyStatAndMetric.java ---
    @@ -100,10 +100,4 @@ public Object getValueAndReset() {
             }
             return ret;
         }
    -
    -    public void close() {
    -        for (LatencyStatAndMetric l: _lat.values()) {
    -            l.close();
    --- End diff --
    
    And here too.
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1326#discussion_r59215122
  
    --- Diff: storm-core/src/jvm/org/apache/storm/metric/internal/RateTracker.java ---
    @@ -100,12 +99,6 @@ synchronized double reportRate(long currentTime) {
             return events * 1000.0 / duration;
         }
     
    -    public void close() {
    -        if (_task != null) {
    -            _task.cancel();
    --- End diff --
    
    And here we need it.
, Github user abhishekagarwal87 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1326#discussion_r59215430
  
    --- Diff: storm-core/src/jvm/org/apache/storm/metric/internal/CountStatAndMetric.java ---
    @@ -197,12 +196,6 @@ long readApproximateTime(long value, long timeSpent, long[] bucketTime, long[] b
             return total;
         }
     
    -    public void close() {
    -        if (_task != null) {
    -            _task.cancel();
    --- End diff --
    
    @revans2 - As far as I could see, close is being called only in the render-stats. Tests initialize with negative number of buckets so _task is never initialized at all. 
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1326#discussion_r59215960
  
    --- Diff: storm-core/src/clj/org/apache/storm/stats.clj ---
    @@ -188,14 +168,12 @@
     
     (defn value-bolt-stats!
       [^BoltExecutorStats stats]
    -  (cleanup-bolt-stats! stats)
       (merge (value-common-stats (:common stats))
              (value-stats stats BOLT-FIELDS)
              {:type :bolt}))
     
     (defn value-spout-stats!
       [^SpoutExecutorStats stats]
    -  (cleanup-spout-stats! stats)
    --- End diff --
    
    Really the issue is just that cleanup-bolt-stats! and cleanup-spout-stats! needs to move from value-*-stats! to something that is called from the executor shutdown.  
    
    https://github.com/abhishekagarwal87/storm/blob/STORM-1693/storm-core/src/clj/org/apache/storm/daemon/executor.clj#L409-L417
    
    I thought that is where they were called from when I saw them, but I obviously was wrong.
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1326#discussion_r59216852
  
    --- Diff: storm-core/src/jvm/org/apache/storm/metric/internal/RateTracker.java ---
    @@ -100,12 +99,6 @@ synchronized double reportRate(long currentTime) {
             return events * 1000.0 / duration;
         }
     
    -    public void close() {
    -        if (_task != null) {
    -            _task.cancel();
    --- End diff --
    
    It should have been called when the disruptor queue shuts down, but it wasn't.  Another bug.
    
    https://github.com/abhishekagarwal87/storm/blob/STORM-1693/storm-core/src/jvm/org/apache/storm/utils/DisruptorQueue.java#L392-L400
, Github user abhishekagarwal87 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1326#discussion_r59216981
  
    --- Diff: storm-core/src/clj/org/apache/storm/stats.clj ---
    @@ -188,14 +168,12 @@
     
     (defn value-bolt-stats!
       [^BoltExecutorStats stats]
    -  (cleanup-bolt-stats! stats)
       (merge (value-common-stats (:common stats))
              (value-stats stats BOLT-FIELDS)
              {:type :bolt}))
     
     (defn value-spout-stats!
       [^SpoutExecutorStats stats]
    -  (cleanup-spout-stats! stats)
    --- End diff --
    
    Thanks @revans2 . Cancelling the task during the executor shutdown makes sense. I will modify the PR accordingly and restore the close functions. 
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/1326#issuecomment-208381652
  
    @abhishekagarwal87 Thanks for finding/fixing these issues.  I don't think we want to just rip out the shutdown logic, it can cause leaks.  I would really prefer for us to fix the shutdown logic so that we do it properly.
, Github user abhishekagarwal87 commented on the pull request:

    https://github.com/apache/storm/pull/1326#issuecomment-208383617
  
    I will add the shutdown for both Multi*Metrics and RateTracker in executor shutdown flow. I suppose that is the only time, these fresher tasks have to be cancelled?
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/1326#issuecomment-208385581
  
    The only reason to cancel them is to avoid a memory leak, and mostly in the tests, because for the worker when we do it when the worker is shutting down.
, Github user abhishekagarwal87 commented on the pull request:

    https://github.com/apache/storm/pull/1326#issuecomment-208821277
  
    @revans2 - Addressed your comments. 
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/1326#issuecomment-208926930
  
    Great +1.  But we need to do the same fixes for master too.  If this is blocking the 1.x release then I am OK with doing it on a follow on JIRA, but if it is not blocking then I would prefer to have them go in together so we don't violate process.
, Github user abhishekagarwal87 commented on the pull request:

    https://github.com/apache/storm/pull/1326#issuecomment-208959845
  
    No problem. I will open a PR for master branch as well. 
, GitHub user abhishekagarwal87 opened a pull request:

    https://github.com/apache/storm/pull/1333

    STORM-1693: Move stats cleanup to executor shutdown

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/abhishekagarwal87/storm STORM-1693-master

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1333.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1333
    
----
commit 983c420bfb170fba0b6ae0fd1b1fb3b99d3a1079
Author: Abhishek Agarwal <abhishek.agarwal@inmobi.com>
Date:   2016-04-12T15:42:09Z

    STORM-1693: Move stats cleanup to executor shutdown

----
, Github user abhishekagarwal87 commented on the pull request:

    https://github.com/apache/storm/pull/1326#issuecomment-208969733
  
    PR for master: https://github.com/apache/storm/pull/1333 
, Github user hustfxj commented on the pull request:

    https://github.com/apache/storm/pull/1333#issuecomment-209193820
  
    +1
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/1326#issuecomment-210218447
  
    +1
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/1333#issuecomment-210218509
  
    +1
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/1326
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/1333
, Thanks [~abhishek.agarwal].
I merged into master and 1.x-branch, but version 1.0.1 is not available for fix versions so I'll keep this issue open and close when it's available.]