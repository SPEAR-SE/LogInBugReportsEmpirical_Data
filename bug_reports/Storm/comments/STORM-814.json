[[~rajeshkuch] This is expected behavior. If you want to get optimal throughput your partitions and spout parallelism should match. In your case when you have 16 parttioins and 1 spout parallelism all of the topic partitions will be assigned 1 spout to read from and when you increased it to 8 each of the spout instance gets 2 per spout instance. , Here is the situation

No of Partitions : 16

Spout parallelism : 1 then performance is 9ms
Spout parallelism : 16 then latency is 2 sec.

It should be the other way. If I have parallelism to same as partitions then the performance should be optimal.
, [~rajeshkuch] sorry read it the other way round. How is your topology looks like is it only the Kafkaspout in the topology or are there any bolts. Can you also post KafkaSpout config., Here is the bolt latency information

bol2	32	32	2123660	2123660	0.035	1.081	2123620	1.069	2123520	0			
bolt3	8	8	2120980	0	       0.095	        0.906	2121280	0.908	2121280	0			
bolt1	8	8	2124180	2124180	0.090	0.957	2125860	0.950	2125840	0

Kafka spout information

Spouts (All time)
kafkaspout	8	8	2125680	2125680	2050.919	2116780	0	


Its simple topology with total execution less than 3 ms. I am running this topology with 4 supervisors with one worker node each.

There are no specific config info set on kafka spout. , How is your data pushed to kafka?  It is plausible that the numbers you see are due to max spout pending.

If you are receiving data in bursts, you would pull them off much faster with 8 spouts than 1.  Then the spout output queues would be relatively large in size, and since the tuple is sitting in the output queue longer, the overall latency is higher.  The burstiness would account for low bolt capacity figures; typically high spout output queue sizes correlate with higher bolt utilization than you're seeing.

Anyways, it seems odd to me to point at a very specific application profile and then come to the conclusion that there is a bug in the spout.  You should run your tests with spout only and do throughput tests.  If you can pull less data off of kafka with 8 spouts than 1, then I would agree that something is odd.  But even that (purely hypothetical situation) would seem to be more likely to sit with the kafka client than with the storm implementation of kafka spout., I ran the same test with one spout only and here is are the results

Total No of partitions : 8

Test 1:
Kafka Spout parallelism : 8 
Latency : 1.649
Spout Pending : 1000

Test2
Kafka Spout parallelism : 1 
Latency : 1.149
Spout Pending : 8000

Same test with one spout and one bolt

Test 1:
Kafka Spout parallelism : 8 
Latency : 23 ms
Spout Pending : 1000

Test2
Kafka Spout parallelism : 1 
Latency : 1.7 ms
Spout Pending : 8000


]