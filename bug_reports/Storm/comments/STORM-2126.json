[Thanks [~abellina],

I merged this into master and 1.x-branch, but the cherry-pick was not clean going to 1.0.x-branch so I didn't pull it in there.  If you feel up to making a similar change for that branch it would be awesome. , [~revans2]: hi again Bobby!  This is another change that broke storm-on-mesos.  It's *much* worse for us though than the breakage caused by the previous change I brought up before ([STORM-2018|https://issues.apache.org/jira/browse/STORM-2018?focusedCommentId=16108307&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16108307]).   We've already worked around that issue.   However, this change has switched the nimbus scheduling from being Slot-centric to being Supervisor-centric.  Specifically this changed the behavior of the code path that takes the slots returned from {{INimbus.allSlotsAvailableForScheduling()}} and eventually propagated into {{INimbus.assignSlots()}} -- if a Supervisor doesn't already exist then the slot information is no longer respected.   And for storm-on-mesos the supervisors do not exist a priori -- they are launched onto hosts when a topology needs to be launched.  So the storm-on-mesos integration was relying on the nimbus to take the slots and call assignSlots even without a supervisor yet existing.

It is unfortunate that we inherited this messy interface between Storm and Mesos which allowed for this kind of seemingly purely improved code  (it *is* much more readable!) to actually break storm-on-mesos.  I have some ideas for hacking around it which may eventually be done, but I'm curious if you have any ideas for how we can fake there being Supervisors even when there aren't actually any supervisors yet?]