[GitHub user srdo opened a pull request:

    https://github.com/apache/storm/pull/1340

    STORM-1682: Refactor DynamicBrokersReader to lookup leader informatio…

    …n via Kafka metadata API. Put Zookeeper metadata lookup into new class.
    
    See https://issues.apache.org/jira/browse/STORM-1682.
    
    This solution splits DynamicBrokersReader into two. Instead of looking up leaders and brokers in Zookeeper, ZkBrokersReader will use the brokers in Zookeeper to construct one or more SimpleConsumers, which DynamicBrokersReader can then use to lookup partition leaders.
    
    DynamicBrokersReader should now cause the spout to restart in the following scenarios:
    If it can't find any brokers in Zookeeper
    If it can't contact any of the brokers it found in Zookeeper
    If wildcard topics are listed in Zookeeper, and no broker has metadata for all of them
    
    In order to test behavior when brokers shut down, it was necessary to separate the Kafka test broker from Zookeeper so multiple brokers can run in a cluster, which is the reason for modifications in many tests.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/srdo/storm STORM-1682

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1340.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1340
    
----
commit 78a3d0683d1bfbfec7bbc7425927347b4b47154d
Author: Stig Rohde Døssing <sdo@it-minds.dk>
Date:   2016-04-12T18:24:49Z

    STORM-1682: Refactor DynamicBrokersReader to lookup leader information via Kafka metadata API. Put Zookeeper metadata lookup into new class.

----
, Github user srdo commented on the pull request:

    https://github.com/apache/storm/pull/1340#issuecomment-212927945
  
    This runs reliably for me locally, Travis seemed to run into a heap space limit.
, Github user srdo commented on the pull request:

    https://github.com/apache/storm/pull/1340#issuecomment-219834590
  
    The tests pass on 0.8.2.1, which is the version targeted by https://github.com/apache/storm/pull/1386. Reopening.
, GitHub user srdo reopened a pull request:

    https://github.com/apache/storm/pull/1340

    STORM-1682: Refactor DynamicBrokersReader to lookup leader informatio…

    …n via Kafka metadata API. Put Zookeeper metadata lookup into new class.
    
    See https://issues.apache.org/jira/browse/STORM-1682.
    
    This solution splits DynamicBrokersReader into two. Instead of looking up leaders and brokers in Zookeeper, ZkBrokersReader will use the brokers in Zookeeper to construct one or more SimpleConsumers, which DynamicBrokersReader can then use to lookup partition leaders.
    
    DynamicBrokersReader should now cause the spout to restart in the following scenarios:
    If it can't find any brokers in Zookeeper
    If it can't contact any of the brokers it found in Zookeeper
    If wildcard topics are listed in Zookeeper, and no broker has metadata for all of them
    
    In order to test behavior when brokers shut down, it was necessary to separate the Kafka test broker from Zookeeper so multiple brokers can run in a cluster, which is the reason for modifications in many tests.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/srdo/storm STORM-1682

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1340.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1340
    
----
commit 78a3d0683d1bfbfec7bbc7425927347b4b47154d
Author: Stig Rohde Døssing <sdo@it-minds.dk>
Date:   2016-04-12T18:24:49Z

    STORM-1682: Refactor DynamicBrokersReader to lookup leader information via Kafka metadata API. Put Zookeeper metadata lookup into new class.

commit af72ce6229ec1332d7569846121e3b07b3b42b33
Author: Stig Rohde Døssing <sdo@it-minds.dk>
Date:   2016-04-14T14:37:47Z

    STORM-1682: Add check of metadata request error code in DynamicBrokersReader

commit 430473be42f68d65aed471af9a808f5c7c599f39
Author: Stig Rohde Døssing <sdo@it-minds.dk>
Date:   2016-04-14T15:38:09Z

    STORM-1682: Replace TopicCommand with AdminUtils, replace KafkaServerStartable with KafkaServer. The two former contain System.exit calls

commit 3d323392c1f809d6e829b641d0ecb1719865bde8
Author: Stig Rohde Døssing <sdo@it-minds.dk>
Date:   2016-04-21T09:50:20Z

    Merge branch 'master' of https://github.com/apache/storm into STORM-1682

commit e9f3f860b5aecccd9c9fb9cc086fac1bb619f5bd
Author: Stig Rohde Døssing <sdo@it-minds.dk>
Date:   2016-04-21T09:45:39Z

    STORM-1682: Fix NPE in DynamicBrokersReader when leader is missing/down

commit dc3c0fb73cb1074fd7d38d1ada9ef0c021957eb5
Author: Stig Rohde Døssing <sdo@it-minds.dk>
Date:   2016-05-16T11:38:54Z

    STORM-1682: Adjust for Kafka 0.8.2.1

----
, Github user abhishekagarwal87 commented on the pull request:

    https://github.com/apache/storm/pull/1340#issuecomment-219942810
  
    Given that partitions information is refreshed every 30 seconds, and this particular exception is rare, is this change necessary? Also when the exception occurs, does it kill the worker jvm?
, Github user srdo commented on the pull request:

    https://github.com/apache/storm/pull/1340#issuecomment-219992956
  
    It's not strictly necessary, no. It's just an alternate way of looking up leaders that avoids the concurrency issue when looking up the leader in Zookeeper. As a side effect, it may give more informative error logs when the metadata API returns errors, than being told that a node in Zookeeper is missing.
    
    Yes, the RuntimeExceptions will crash the worker. I put them in before realizing that refresh was called periodically. I could replace them with error logs?
, We misidentified the cause of our topologies hanging as this issue when it was actually caused by https://issues.apache.org/jira/browse/STORM-1750. The code change is fairly big, and the only effect is to prevent the spout from pausing consumption from a partition if that partition temporarily has no leader. Since the spout should resume the partition when getBrokersInfo is called, which happens every 30 seconds, it's not really a problem.]