[This is due to Clojure's optimization.
Clojure has two implicit types of persistent map: PersistentArrayMap and PersistentHashMap. Which type Clojure uses for persisting map is determined by specific threshold, so in fact Clojure should make sure that users don't need to care about this.
But this is not true for into-array with no type information. If into-array is called with no type information, into-array uses the class which is type of first element.

Unfortunately, from below line, component->executors and maps were different types which one is PersistentArrayMap and another one is PersistentHashMap.
{code}
(into-array (into [component->executors] maps))
{code}

We should pass common type of two maps. Since parameter type of Utils/joinMaps is Map[], we can pass Map to into-array., Merged to master.]