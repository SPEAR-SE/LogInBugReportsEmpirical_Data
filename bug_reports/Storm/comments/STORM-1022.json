[I came across the same exception while using STORM  '0.10.0.2.3.0.0-2557' in hortonworks data plaform 2.3.

Before this exception hits, a runtime exception was thrown which resulted in supervisor restarting workers , there by leading to 
'SEVERE: RuntimeException while executing runnable org.apache.storm.guava.util.concurrent.Futures'. 

Here is my scenario:

(1) i have registered a metrics consumer for my topology:
conf.registerMetricsConsumer(NewRelicMetricConsumer.class,10);

(2) the topology starts off  (in the example below at 2015-10-19T06:53)
2015-10-19T06:53:17.757-0400 b.s.d.supervisor [INFO] 6afff1fd-4741-49a8-bd38-769146e28d81 still hasn't started

(3) The metrics consumer threw a Runtime exception which results in storm "Async loop died" and 'Worker died'
-----------------------------------------------------------------------------------------------
015-10-19 06:54:31 b.s.util [ERROR] Async loop died!
java.lang.RuntimeException: java.lang.ClassCastException: java.util.HashMap cannot be cast to java.lang.Number
	at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:128) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(DisruptorQueue.java:99) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.disruptor$consume_batch_when_available.invoke(disruptor.clj:80) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.daemon.executor$fn__7014$fn__7027$fn__7078.invoke(executor.clj:808) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.util$async_loop$fn__545.invoke(util.clj:475) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.6.0.jar:na]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_40]
Caused by: java.lang.ClassCastException: java.util.HashMap cannot be cast to java.lang.Number
	at com.pocketmath.nebula.metric.storm.NewRelicMetricConsumer.handleDataPoints(NewRelicMetricConsumer.java:55) ~[stormjar.jar:na]
	at backtype.storm.metric.MetricsConsumerBolt.execute(MetricsConsumerBolt.java:55) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.daemon.executor$fn__7014$tuple_action_fn__7016.invoke(executor.clj:670) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.daemon.executor$mk_task_receiver$fn__6937.invoke(executor.clj:426) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.disruptor$clojure_handler$reify__6513.onEvent(disruptor.clj:58) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:125) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	... 6 common frames omitted
2015-10-19 06:54:31 b.s.d.executor [ERROR] 
java.lang.RuntimeException: java.lang.ClassCastException: java.util.HashMap cannot be cast to java.lang.Number
	at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:128) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(DisruptorQueue.java:99) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.disruptor$consume_batch_when_available.invoke(disruptor.clj:80) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.daemon.executor$fn__7014$fn__7027$fn__7078.invoke(executor.clj:808) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.util$async_loop$fn__545.invoke(util.clj:475) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at clojure.lang.AFn.run(AFn.java:22) [clojure-1.6.0.jar:na]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_40]
Caused by: java.lang.ClassCastException: java.util.HashMap cannot be cast to java.lang.Number
	at com.test.metric.storm.NewRelicMetricConsumer.handleDataPoints(NewRelicMetricConsumer.java:55) ~[stormjar.jar:na]
	at backtype.storm.metric.MetricsConsumerBolt.execute(MetricsConsumerBolt.java:55) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.daemon.executor$fn__7014$tuple_action_fn__7016.invoke(executor.clj:670) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.daemon.executor$mk_task_receiver$fn__6937.invoke(executor.clj:426) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.disruptor$clojure_handler$reify__6513.onEvent(disruptor.clj:58) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	at backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:125) ~[storm-core-0.10.0.2.3.0.0-2557.jar:0.10.0.2.3.0.0-2557]
	... 6 common frames omitted
-----------------------------------------------------------------------------------------------

(3) the supervisor detects death and re-launches worker

2015-10-19T06:54:42.557-0400 b.s.d.supervisor [INFO] Worker Process 6afff1fd-4741-49a8-bd38-769146e28d81 has died!
2015-10-19T06:54:42.557-0400 b.s.d.supervisor [INFO] Shutting down and clearing state for id 6afff1fd-4741-49a8-bd38-769146e28d81. Current supervisor time: 1445252082. State: :timed-out, Heartbeat: {:time-secs 1445252079, :storm-id "ambari_test3-27-1445251979", :executors [[41 41] [33 33] [1 1] [53 53] [65 65] [9 9] [57 57] [-1 -1] [61 61] [13 13] [21 21] [5 5] [29 29] [45 45] [37 37] [25 25] [49 49] [17 17]], :port 6700}
2015-10-19T06:54:42.557-0400 b.s.d.supervisor [INFO] Shutting down 5f60d8c8-4895-4dab-ae04-709434648e26:6afff1fd-4741-49a8-bd38-769146e28d81——

2015-10-19T06:54:43.567-0400 b.s.d.supervisor [INFO] Launching worker with command: ..........................

-----------------------------------------------------------------------------------------------
(4) moments later as we wait for worker startup.. we get the exception:

2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:Oct 19, 2015 7:03:15 AM org.apache.storm.guava.util.concurrent.ExecutionList executeListener
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:SEVERE: RuntimeException while executing runnable org.apache.storm.guava.util.concurrent.Futures$4@3bdb38ba with executor org.apache.storm.guava.util.concurrent.MoreExecutors$SameThreadExecutorService@351cd1b1
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:java.lang.RuntimeException: Failed to connect to Netty-Client-ip-10-5-xx.xxxx/10.5.xx.xxx:6701
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at backtype.storm.messaging.netty.Client.connect(Client.java:300)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at backtype.storm.messaging.netty.Client.access$1100(Client.java:66)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at backtype.storm.messaging.netty.Client$2.reconnectAgain(Client.java:289)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at backtype.storm.messaging.netty.Client$2.onSuccess(Client.java:275)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at backtype.storm.messaging.netty.Client$2.onSuccess(Client.java:267)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at org.apache.storm.guava.util.concurrent.Futures$4.run(Futures.java:1181)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at org.apache.storm.guava.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at org.apache.storm.guava.util.concurrent.ExecutionList.executeListener(ExecutionList.java:156)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at org.apache.storm.guava.util.concurrent.ExecutionList.execute(ExecutionList.java:145)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at org.apache.storm.guava.util.concurrent.ListenableFutureTask.done(ListenableFutureTask.java:91)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at java.util.concurrent.FutureTask.finishCompletion(FutureTask.java:384)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at java.util.concurrent.FutureTask.set(FutureTask.java:233)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at java.util.concurrent.FutureTask.run(FutureTask.java:274)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at java.util.concurrent.FutureTask.run(FutureTask.java:266)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at java.lang.Thread.run(Thread.java:745)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:Caused by: java.lang.RuntimeException: Giving up to connect to Netty-Client-ip-10-5-xx.xxxx/10.5.xx.xxx:6701 after 32 failed attempts
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       at backtype.storm.messaging.netty.Client.connect(Client.java:295)
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:       ... 19 more
2015-10-19T07:03:15.557-0400 b.s.util [WARN] Worker Process cf9fc058-0bda-40f7-8450-cb9037cb05c3:
2015-10-19T07:03:41.748-0400 b.s.d.supervisor [INFO] Worker Process 4366cfef-65fa-4385-b36a-eb4c272f4324 exited with code: 20
2015-10-19T07:03:42.611-0400 b.s.d.supervisor [INFO] Worker Process 4366cfef-65fa-4385-b36a-eb4c272f4324 has died!
2015-10-19T07:03:42.611-0400 b.s.d.supervisor [INFO] Shutting down and clearing state for id 4366cfef-65fa-4385-b36a-eb4c272f4324. Current supervisor time: 1445252622. State: :timed-out, Heartbeat: {:time-secs 1445252620, :storm-id "ambari_test3-27-1445251979", :executors [[47 47] [7 7] [51 51] [3 3] [39 39] [35 35] [43 43] [63 63] [23 23] [11 11] [31 31] [-1 -1] [55 55] [19 19] [27 27] [59 59] [15 15]], :port 6701}

------------------------

On disabling my buggy metrics consumer, the exception no longer appeared.

Hope this helps.

---
Vishnu Rao, [~jaihind213],

The error you are reporting looks like it is caused by code that is not a part of storm.
```at com.pocketmath.nebula.metric.storm.NewRelicMetricConsumer.handleDataPoints(NewRelicMetricConsumer.java:55)```

I'm not sure exactly who is providing that to you.  It could be that we have changed one of the metrics in a non-compatible way, but I cannot tell from just the stack trace.  I might be able to tell if I had the source code to NewRelicMetricConsumer.java.

Do you have any more information on this?, hi Robert,

The Stack trace provided is of the Metric Consumer I registered with storm.
i.e. "at com.pocketmath.nebula.metric.storm.NewRelicMetricConsumer.handleDataPoints(NewRelicMetricConsumer.java:55)`" belongs to my metric consumer code.

The metric consumer code threw a Runtime exception which resulted in the worker dying and supervisor trying to restart it.

In my Scenario, the Metric Consumer threw the Runtime exception and that lead to the main exception reported in the description.

Any Metric Consumer which throws a runtime exception should lead to this scenario.

-vishnu rao, Yes exactly.  I'm not really sure how that relates to this JIRA which is a network disconnection happening between workers, possibly when the remote worker was restarted., hi Robert,

the scenario i mentioned lead to the same exception mentioned in this jira

hence i wanted to share this scenario too, but in my case the worker died.

-vishnu, Recently we meet the same problem caused by Netty after several times retrial except that It's not caused by supervisor but worker them selfs.
{quote}
2016-10-24T17:12:05.981+0800 STDIO [ERROR] Oct 24, 2016 5:12:05 PM org.apache.storm.guava.util.concurrent.ExecutionList executeListener
SEVERE: RuntimeException while executing runnable org.apache.storm.guava.util.concurrent.Futures$4@43f31edc with executor org.apache.storm.guava.util.concurrent.MoreExecutors$SameThreadExecutorService@e6f205e
java.lang.RuntimeException: Failed to connect to Netty-Client-xxx/xx.xx.xx.173:6721
        at backtype.storm.messaging.netty.Client.connect(Client.java:308)
        at backtype.storm.messaging.netty.Client.access$1100(Client.java:78)
        at backtype.storm.messaging.netty.Client$2.reconnectAgain(Client.java:297)
        at backtype.storm.messaging.netty.Client$2.onSuccess(Client.java:283)
        at backtype.storm.messaging.netty.Client$2.onSuccess(Client.java:275)
        at org.apache.storm.guava.util.concurrent.Futures$4.run(Futures.java:1181)
        at org.apache.storm.guava.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)
        at org.apache.storm.guava.util.concurrent.ExecutionList.executeListener(ExecutionList.java:156)
        at org.apache.storm.guava.util.concurrent.ExecutionList.execute(ExecutionList.java:145)
        at org.apache.storm.guava.util.concurrent.ListenableFutureTask.done(ListenableFutureTask.java:91)
        at java.util.concurrent.FutureTask$Sync.innerSet(FutureTask.java:251)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:439)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
        at java.util.concurrent.FutureTask.run(FutureTask.java:138)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:98)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:206)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.RuntimeException: Giving up to connect to Netty-Client-sd-bigdata-storm5-73-173.idc.vip.com/10.208.73.173:6721 after 12 failed attempts
        at backtype.storm.messaging.netty.Client.connect(Client.java:303)
        ... 20 more
{quote}
when workers start, they tried to connect each other. After several times retrial, one worker failed, and throw an *RuntimeException*. The *RuntimeException* is swallowed by guava, as shown in the error stack. The code is as following in ExecutionList.java line 154 in guava 16.0.1:
{code:java}
private static void executeListener(Runnable runnable, Executor executor) {
    try {
      executor.execute(runnable);
    } catch (RuntimeException e) {
      // Log it and keep going, bad runnable and/or executor.  Don't
      // punish the other runnables if we're given a bad one.  We only
      // catch RuntimeException because we want Errors to propagate up.
      log.log(Level.SEVERE, "RuntimeException while executing runnable "
          + runnable + " with executor " + executor, e);
    }
  }
{code}
The RuntimeException will never been thrown to the timer thread of worker and thus will not cause the dead of the worker. And the worker will never try to reconnect again. The worker should die, so that supervisor will pull it up again——this won't happen if this bug exists.
Our storm version is 0.9.4 . And I can see the storm 0.9.6 has removed guava in the code. So the problem was solved in new version of storm.]