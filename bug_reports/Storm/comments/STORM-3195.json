[Community 1.x will not have this issue because https://github.com/apache/storm/pull/2325 wasn't merged into 1.x. The worker count will always be int and acker executer number will always be int. 

Our internal version 1.x has https://github.com/apache/storm/pull/2325 feature. And that's why it happened. , [~ethanli]
I'm wondering the symptom itself: shouldn't worker count as well as acker executor number be integer? No one would say worker count is 1.66 and acker executor count is 2.33, so the value itself looks somewhat incorrect to me., Yeah this is our internal code. We have a piece of code in nimbu.clj similar to https://github.com/apache/storm/pull/2325 but it's in clojure: 

{code:java}
(defn estimated-worker-count-for-ras-topo [storm-conf topology]
  (let [component-parallelism-mp (into {} (map #(vector (first %) (component-parallelism storm-conf (second %))) (all-components topology)))
        bolt-memory-requirement (into {} (map #(vector (first %) (.getOnHeapMemoryMb (second %))) (into {} (ResourceUtils/getBoltsResources topology storm-conf))))
        spout-memory-requirement (into {} (map #(vector (first %) (.getOnHeapMemoryMb (second %))) (into {} (ResourceUtils/getSpoutsResources topology storm-conf))))
        component-memory-requirement (merge bolt-memory-requirement spout-memory-requirement)
        total-memory-required (reduce + (vals (merge-with * component-memory-requirement component-parallelism-mp)))
        worker-heap-memory (get storm-conf WORKER-HEAP-MEMORY-MB)
        ]
    (/ total-memory-required worker-heap-memory)))
{code}
This returns a double value. 

We don't need to worry about it in the community code.]