[As I commented from https://github.com/apache/storm/pull/1919, below code comes from blog post on Confluent:

{code}
try {
  while (running) {
  ConsumerRecords<String, String> records = consumer.poll(1000);

  try {
    consumer.commitSync();
    for (ConsumerRecord<String, String> record : records)
      System.out.println(record.offset() + ": " + record.value());
    } catch (CommitFailedException e) {
      // application specific failure handling
    }
  }
} finally {
  consumer.close();
}
{code}

which we can exactly do the same: poll the data, call commitSync(), and emit tuples only when commitSync() succeeds. It will guarantee at-most-once., [~kabhwan], seems `consumerAutoCommitMode` will be deprecated then. 
  If acker=0, pull_then_commit, if ack>0, act case 4;
Right?, [~mingmxu] I've opened an attempt at this at https://github.com/apache/storm/pull/2249#issuecomment-319798787, please let me know if you are also working on a solution., The one pull request addresses both of the issues.]