[I found by overriding lots of methods that after KerberosSaslClientHandler was registered for one of the pacemaker servers, it was immediately deregistered:
{code:java}
at org.apache.storm.messaging.netty.KerberosSaslClientHandler.channelUnregistered(KerberosSaslClientHandler.java:170) [storm-client-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.AbstractChannelHandlerContext.invokeChannelUnregistered(AbstractChannelHandlerContext.java:181) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.AbstractChannelHandlerContext.invokeChannelUnregistered(AbstractChannelHandlerContext.java:167) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.AbstractChannelHandlerContext.fireChannelUnregistered(AbstractChannelHandlerContext.java:160) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.ChannelInboundHandlerAdapter.channelUnregistered(ChannelInboundHandlerAdapter.java:53) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.AbstractChannelHandlerContext.invokeChannelUnregistered(AbstractChannelHandlerContext.java:181) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.AbstractChannelHandlerContext.invokeChannelUnregistered(AbstractChannelHandlerContext.java:167) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.AbstractChannelHandlerContext.fireChannelUnregistered(AbstractChannelHandlerContext.java:160) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.DefaultChannelPipeline$HeadContext.channelUnregistered(DefaultChannelPipeline.java:1412) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.AbstractChannelHandlerContext.invokeChannelUnregistered(AbstractChannelHandlerContext.java:181) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.AbstractChannelHandlerContext.invokeChannelUnregistered(AbstractChannelHandlerContext.java:167) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.DefaultChannelPipeline.fireChannelUnregistered(DefaultChannelPipeline.java:865) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:844) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:465) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) [shaded-deps-2.0.0.y.jar:2.0.0.y]
{code}
Adding some logging in Netty, it was a connection refused:

 
{code:java}
java.net.ConnectException: Connection refused

        at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) ~[?:1.8.0_131]

        at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) ~[?:1.8.0_131]

        at org.apache.storm.shade.io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:325) ~[shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at org.apache.storm.shade.io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884) [shaded-deps-2.0.0.y.jar:2.0.0.y]

        at java.lang.Thread.run(Thread.java:748) [?:1.8.0_131]
{code}
I could not find any built in logging or easily understandable way to determine this is happening.  It looks like we have code to reconnect to the pacemaker server when catching an exception, but none is being passed back to us visibly in this case.  Adding a reconnect call after giving up on the number of attempts appears to fix the issue.  Will do further testing., Thanks [~agresch],

 

I merged this into master.]