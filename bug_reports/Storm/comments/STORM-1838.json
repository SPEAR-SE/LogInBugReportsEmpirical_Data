[Github user ptgoetz commented on the pull request:

    https://github.com/apache/storm/pull/1419#issuecomment-219501512
  
    another JIRA integration test. Ignore.
, Github user hmcl commented on the pull request:

    https://github.com/apache/storm/pull/1419#issuecomment-219533584
  
    @flisky can you please share the code, or at least the steps to reproduce the scenario where this code does not work? Another alternative is that you enable all the logging levels for us to understand what is happening. That could should be necessary, and I am not very comfortable just removing it without understanding what is going on. 
    
    Without that code, I believe that the scenario where a consumer rebalance occurs, and offsets 1,2 have been hacked, but 3 is still pending, and 4, 5 have also been acked, won't work. That code is there to cover for this scenario.
, Github user flisky commented on the pull request:

    https://github.com/apache/storm/pull/1419#issuecomment-219616507
  
    It turns out that I used `FirstPollOffsetStrategy#LATEST`, and `UNCOMMITTED` version would be okay.
, Github user hmcl commented on the pull request:

    https://github.com/apache/storm/pull/1419#issuecomment-219788238
  
    @flisky so what does your last comment mean? That this patch no longer applies?
, Github user flisky commented on the pull request:

    https://github.com/apache/storm/pull/1419#issuecomment-219907956
  
    Sorry, I didn't say it clearly, but this patch still applies.
    
    ï¼·hen a consumer re-balance occurs and **FirstPollOffsetStrategy#EARLIEST/LATEST**,  the retained partition wouldn't use the committed offset to resume but use the -2 / -1 offset, as I observed, so this is reason why the comment (`leave the acked offsets as they were to resume where it left off`) doesn't apply.
, Github user flisky commented on the pull request:

    https://github.com/apache/storm/pull/1419#issuecomment-219908452
  
    By the way, it seems that we didn't handle the situation `offset out of range` when I test the `UNCOMMITTED_LATEST` strategy.
, Github user hmcl commented on the pull request:

    https://github.com/apache/storm/pull/1419#issuecomment-220102668
  
    @flisky can you please provide specific examples or a code snippet that I can use to test what you are saying. Can you also post the logs (perhaps on JIRA) that show the cases that are failing? What do you mean by `offset out of range`?
    
    As for your first comment, please keep in mind that the `FirstPollOffsetStrategy`, as the name indicates, it's only for the first poll, i.e., the first time a `KafkaSpout` polls from Kafka. It does not apply to consumer rebalance. Quoting the [javadoc](https://goo.gl/PyR7Cm) of "The offset used by the Kafka spout in the first poll to Kafka broker." Therefore, the `LATEST/EARLIEST` strategies only apply in the first poll, not on every consumer rebalance. Furthermore, if a consumer rebalance occurs, but the same partition is assigned to this spout, and some offsets have already been emitted and acked, we wan to keep those, and only process the ones that haven't yet been acked because they have have failed and waiting to be retried (according to exponential backoff) or may be on the "wire". 
    
    What do you mean by -2 , -1? Can you please give specific examples. Thanks.
, Github user flisky commented on the pull request:

    https://github.com/apache/storm/pull/1419#issuecomment-220208297
  
    > as the name indicates, it's only for the first poll
    
    As I observed, it isn't. `KafkaSpoutConsumerRebalanceListener#onPartitionsAssigned` called `initialize` method, so FirstPollOffsetStrategy works on every consumer rebalance.
    
    Can you please confirm this? Thanks!
, Github user hmcl commented on the pull request:

    https://github.com/apache/storm/pull/1419#issuecomment-221145807
  
    @flisky I am looking at this now
, Github user flisky commented on the issue:

    https://github.com/apache/storm/pull/1419
  
    friendly ping, @hmcl
, Github user hmcl commented on the issue:

    https://github.com/apache/storm/pull/1419
  
    @flisky some stuff came up. Apologies for the delay in my response. I will get back to you today or tomorrow as I am working on this now.
]