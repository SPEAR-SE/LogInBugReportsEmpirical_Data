[-c drpc.servers=[\"host1\"] works, Actually this seems to be an issue only with storm.cmd.

Storm.py does a urlencode on storm.options so its able to parse json arrays correctly., GitHub user arunmahadevan opened a pull request:

    https://github.com/apache/storm/pull/1094

    [STORM-1532]: Fix readCommandLineOpts to parse JSON correctly in windows

    In Windows env, the storm.options are not url-encoded. The parsing logic needs to be fixed to not split in the middle of raw JSON objects.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/arunmahadevan/storm STORM-1532

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1094.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1094
    
----

----
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1094#discussion_r52473785
  
    --- Diff: storm-core/src/jvm/org/apache/storm/utils/Utils.java ---
    @@ -330,7 +330,11 @@ public static Map readCommandLineOpts() {
             Map ret = new HashMap();
             String commandOptions = System.getProperty("storm.options");
             if (commandOptions != null) {
    -            String[] configs = commandOptions.split(",");
    +            /*
    +             below regex uses negative lookahead to not split in the middle of
    +             json objects '{}' or json arrays '[]'
    +              */
    +            String[] configs = commandOptions.split(",(?![^\\[\\]{}]*(]|}))");
    --- End diff --
    
    So first of all this is a really complicated REGEX and even if it worked correctly I would be nervous moving from something simple to something so complex. To break down the REGEX (Just so I am sure I understand what it is doing) `,(?![^\\[\\]{}]*(]|}))` will split on a `,` so long as `(?!` it is not followed by anything that matches `[^\\[\\]{}]*(]|})` which matches any character that is not one of `[`, `]`, `{`, or `}` zero or more times followed by either a `]` or `}` character.
    
    In my testing that does not maintain backwards compatibility with what we had before nor what we currently have.  The python code will URL encode the key/value so no `,` appears in it.  That lets us provide backwards compatibility where I could type odd values that didn't parse to JSON, or other odd things like having a string in the JSON that had JSON like characters in it.  This code does nothing to handle quoting of strings, and in some cases with bad JSON it will split things very differently from before, which is at lest an incompatibility between the windows code and the python code.
    
    On Windows `-c 'foo=["A", "B", "C"' -c bar=B` I forgot to close the array for foo
    ```
    (clojure.string/split "foo=[\"A\", \"B\", \"C\",bar=B" #",(?![^\\[\\]{}]*(]|}))")
    ["foo=[\"A\"" " \"B\"" " \"C\"" "bar=B"]
    ```
    Because we silently skip things that don't make since to us (in keeping with what happened before but is probably not ideal. we would end up with foo set to `[\"A\"` and bar set to `B`.
    
    They python code works just fine here, but if for some reason I wanted bar to be an array or a map It would combine the two options together.
    
    `-c 'foo=["A", "B", "C"' -c 'bar=["B"]'` I forgot to close the array for foo again
    
    ```
    (clojure.string/split "foo=[\"A\"%2C \"B\" %2C \"C\",bar=[\"B\"]" #",(?![^\\[\\]{}]*(]|}))")
    ["foo=[\"A\"%2C \"B\" %2C \"C\",bar=[\"B\"]"]
    ```
    
    Now they are all just one parameter and foo will be set to a really ugly complex string value, and bar will just disappear.
    
    This code cannot go in as is, and making the REGEX more complicated is not going to solve it.  Not to mention the case where for some reason I may want a value that is URL encoded, and if windows does not URL encode it before sending it over, we will URL decode it, and ...
, Github user arunmahadevan commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1094#discussion_r52494730
  
    --- Diff: storm-core/src/jvm/org/apache/storm/utils/Utils.java ---
    @@ -330,7 +330,11 @@ public static Map readCommandLineOpts() {
             Map ret = new HashMap();
             String commandOptions = System.getProperty("storm.options");
             if (commandOptions != null) {
    -            String[] configs = commandOptions.split(",");
    +            /*
    +             below regex uses negative lookahead to not split in the middle of
    +             json objects '{}' or json arrays '[]'
    +              */
    +            String[] configs = commandOptions.split(",(?![^\\[\\]{}]*(]|}))");
    --- End diff --
    
    The regex works only for valid JSON strings.
    
    With the current storm.cmd script, valid json strings were not parsed properly so one could not pass a list (for e.g. drpc.servers) from windows. I couldn't figure out a way to url-encode from storm.cmd so I came up with the regex that works for valid JSONs. 
    
    The change should not affect the parsing of the storm.options sent via the python script since the url-encoded values would not contain `[, {, ] or }` and will not be touched by the regex.
    
    Agree this is not the ideal fix that handles all the cases but lets one pass valid json in storm.cmd in windows which is currently broken. If there are any alternatives to get the options working in windows l can try to explore.
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1094#discussion_r52656968
  
    --- Diff: storm-core/src/jvm/org/apache/storm/utils/Utils.java ---
    @@ -330,7 +330,11 @@ public static Map readCommandLineOpts() {
             Map ret = new HashMap();
             String commandOptions = System.getProperty("storm.options");
             if (commandOptions != null) {
    -            String[] configs = commandOptions.split(",");
    +            /*
    +             below regex uses negative lookahead to not split in the middle of
    +             json objects '{}' or json arrays '[]'
    +              */
    +            String[] configs = commandOptions.split(",(?![^\\[\\]{}]*(]|}))");
    --- End diff --
    
    Sorry about the long pause.  I thought I had replied already, but I guess I didn't hit the merge comment button.  I forgot that the python was escaping all of the JSON characters, so like you said this works.
    
    I am OK with merging this in, but I would like an explanation by the REGEX explaining about the escaping in most cases and that this is not perfect for windows.
    
    It would also be good to have a follow on JIRA to solve this correctly with url encoding the parameters, but I don't know enough about windows to suggest how to do that.
, Github user arunmahadevan commented on the pull request:

    https://github.com/apache/storm/pull/1094#issuecomment-184105900
  
    @revans2 updated comment to mention the gotchas in windows and raised [JIRA](https://issues.apache.org/jira/browse/STORM-1550) to fix storm.cmd. 
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/1094#issuecomment-184803373
  
    OK I am +1 for this then.
, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/1094#issuecomment-184970451
  
    +1. @arunmahadevan this should go into 1.x-branch as well.
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/1094
, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/1094#issuecomment-184983795
  
    Thanks @arunmahadevan merged into master. Can you please open another PR for 1.x-branch. 
, GitHub user arunmahadevan opened a pull request:

    https://github.com/apache/storm/pull/1115

    [STORM-1532]: Fix readCommandLineOpts to parse JSON correctly

    In Windows env, the storm.options are not url-encoded. The
    parsing logic needs to be fixed to not split in the middle of
    raw JSON objects.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/arunmahadevan/storm STORM-1532-1.x

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1115.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1115
    
----
commit b2f8c1b71cd24854c8be064fbd8c0ff8cc18dfaa
Author: Arun Mahadevan <aiyer@hortonworks.com>
Date:   2016-02-10T05:53:34Z

    [STORM-1532]: Fix readCommandLineOpts to parse JSON correctly
    
    In Windows env, the storm.options are not url-encoded. The
    parsing logic needs to be fixed to not split in the middle of
    raw JSON objects.

----
, Github user arunmahadevan commented on the pull request:

    https://github.com/apache/storm/pull/1094#issuecomment-185036883
  
    @harshach raised https://github.com/apache/storm/pull/1115 for 1.x-branch.
, Github user arunmahadevan commented on the pull request:

    https://github.com/apache/storm/pull/1115#issuecomment-185037003
  
    This PR is to apply https://github.com/apache/storm/pull/1094 in 1.x-branch.
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/1115#issuecomment-185828181
  
    +1 here too.
, Github user ptgoetz commented on the pull request:

    https://github.com/apache/storm/pull/1115#issuecomment-186370862
  
    +1
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/1115
, Merged to master and 1.x-branch.]