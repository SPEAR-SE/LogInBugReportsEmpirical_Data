[I got it as a first step in storm.
How may i assign that task?,  Hello, 

I would like to lift this limitation to ease my deployments. 

Here's the fix I propose: 

In file supervisor.clj, function launch-worker, in the 'let', I would add 'storm-log-conf-file' like so: 
... 
    (let [conf (:conf supervisor) 
          storm-home (System/getProperty "storm.home")
          ... 
          storm-log-conf-file (or (System/getProperty "logback.configurationFile") (str storm-home file-path-separator "logback" file-path-separator "cluster.xml")) 
... 
and substitute current concatenation of logback.configurationFile with it: 
... 
                     (str "-Dlogback.configurationFile=" storm-log-conf-file) 
... 

If it's ok with you, can I submit a pull request on the master, next? 

Thanks a lot for your help, [~fmazoyer] how about making it as part of configuration in storm.yaml. storm.logback.conf.dir this should be expected to have both cluster.xml and worker.xml . If this is not defined we can default to storm-home/logback/.
The changes related to this should be in bin/storm (python file) also in supervisor.clj, Thanks for the comment :-)

I would propose this as a fix, then:
    - Add storm.logback.conf.dir to storm.yaml.
    - In python script, for all daemons except supervisor, determine -Dlogback.configurationFile from storm.logback.conf.dir and pass it on to daemon as "-Dlogback.configurationFile=" + STORM_LOGBACK_CONF_DIR + "/cluster.xml".
      If not defined, fall back to default/usual storm logback directory pointing to cluster.xml  
    - In python script, for the supervisor, if defined, pass on "-Dstorm.logback.conf.dir=" + STORM_LOGBACK_CONF_DIR and "-Dlogback.configurationFile=" + STORM_LOGBACK_CONF_DIR + "/cluster.xml"
      Otherwise, fall back to default/usual storm logback directory pointing to cluster.xml  
    - In supervisor.clj, if storm.logback.conf.dir is defined, use is at root dir for worker.xml in launch command line; otherwise, fall back to default/usual storm logback directory pointing to worker.xml  

What do you think ?
Thanks again for the help :-), This may be a dumb question, but I'll ask it anyway : Why use a specific storm cli for dos ? Is it a question of path handling ? Anything else ?
I'm asking because if we want to fix this jira, we will also have to change the .cmd scripts :-)
Thanks a lot for your help !, [~fmazoyer] STORM-487 has a patch up for making storm.py work on both windows and linux. Apart from this I still feel storm.cmd is necessity, it offers to generte service XML which will allow users to register storm daemons in windows service registry and controls the status of storm daemons via windows service start/stop etc., [~fmazoyer] In your proposal I am not sure why the supervisor daemon changes should be different than other daemons . Can you please explain. I think we can have one method in python script to return the cluster.xml based on config and every other method can use it. , Thanks a lot for answering my question and for your comments :-)

So this is my understanding of the behaviour of storm.py :
{code}
  storm nimbus|supervisor|...
{code}
will eventually run :
{code}
  java ... -Dlogback.configurationFile=<path>/cluster.xml ...
{code}
As far as the daemons (nimbus, supervisor...) are concerned, this {code} -Dlogback.configurationFile {code} is 'opaquely' passed on to the JVM and processed by the logback library directly.
The supervisor process itself is no exception to the rule, except that supervisor.clj forks the worker daemons, with the following parameter:
{code}
(str "-Dlogback.configurationFile=" storm-home file-path-separator "logback" file-path-separator "worker.xml")
{code}
If we keep the same mechanism, we have to somehow provide the path to the logback configuration directory (that would be the same as the one where cluster.xml is, that's right).

In any case, I guess we will agree on the fact that:
  - We need to get the storm.logback.conf.dir from storm.yaml in storm.py, let's call it {code} get_logback_conf_dir() {code}
  - For each daemon, we can pass on to the JVM: {code} "-Dlogback.configurationFile=" + get_logback_conf_dir() + "/cluster.xml" {code}

Now we may disagree on that :-):
   - For the supervisor daemon, pass on to the JVM: 
   {code}  
   "-Dstorm.logback.conf.dir=" + get_logback_conf_dir(),
   "-Dlogback.configurationFile=" + get_logback_conf_dir() + "/cluster.xml"
   {code}
  - In launch-worker in supervisor.clj, add the following lines:
   {code}
          ...
          (let ...
              storm-logback-conf-dir (or (System/getProperty "storm.logback.conf.dir") (str storm-home file-path-separator "logback"))
          ...
          command (concat ...
          ...
              (str "-Dlogback.configurationFile=" storm-logback-conf-dir file-path-separator "worker.xml")
          ...
    {code}

Hope I'm not leaving anything out.

What do you reckon ?
Thanks a lot for your time :-), [~fmazoyer] thanks for the details. In supervisor.clj it already reads the storm config using read-storm-config look for method "launch"
you can use that to read storm.logback.conf.dir from the config instead of passing it as "-Dstorm.logback.conf.dir" from storm.py, Thanks a lot for the help: I like your solution best :-)
Kind regards, Hi, please check following branch : 
[https://github.com/fmazoyer/storm/commit/b2f8eb651d3e8dbd7939aae126d803da6b948663]

This fixes STORM-248 and STORM-322 (spaces in storm.*cmd).

This was therefore tested on Linux and Windows.

Thanks a lot for your help and comments :-)
Kind regards, [~fmazoyer] Thanks for the patch. Can you please send it as a pull request against https://github.com/apache/storm master branch., GitHub user fmazoyer opened a pull request:

    https://github.com/apache/storm/pull/353

    STORM-248 STORM-322 proposal for fix

    Details are in JIRA https://issues.apache.org/jira/browse/STORM-248.
    As a collateral benefit, this also addresses JIRA https://issues.apache.org/jira/browse/STORM-322.
    Could you please review ?

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/fmazoyer/storm STORM-248

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/353.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #353
    
----
commit b2f8eb651d3e8dbd7939aae126d803da6b948663
Author: fmazoyer <frantz.mazoyer@altran.com>
Date:   2014-12-19T16:12:57Z

    STORM-248 STORM-322 proposal for fix

----
, Hello,
I would just like to point out that [https://issues.apache.org/jira/browse/STORM-487] (removing storm.cmd) has just been +1ed.
If this is merged, I will resubmit another pull request without the changes in storm*.cmd files.
Kind regards :), Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/353#issuecomment-67982494
  
    +1 the changes look fine to me.  Please upmerge.  the storm python script has changed since you did the pull request and there are some minor merge conflicts that should be simple to fix.
, Shall I close the current pull request and open a new one or is there another way?
Thanks for the help :-), Github user fmazoyer commented on the pull request:

    https://github.com/apache/storm/pull/353#issuecomment-68863466
  
    Rebased and resolved conflicts from upstream/master.
    Unfortunately, it also took two files I did not intend to pull: changelog.md and SequenceFormat.java.
    Sorry about that.
    Closing and resubmitting.
, Github user fmazoyer closed the pull request at:

    https://github.com/apache/storm/pull/353
, GitHub user fmazoyer opened a pull request:

    https://github.com/apache/storm/pull/373

    STORM-248 STORM-322 are fixed and upmerged

    Details are in JIRA https://issues.apache.org/jira/browse/STORM-248.
    As a collateral benefit, this also addresses JIRA https://issues.apache.org/jira/browse/STORM-322.
    Could you please review?

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/fmazoyer/storm STORM-248

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/373.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #373
    
----
commit b2f8eb651d3e8dbd7939aae126d803da6b948663
Author: fmazoyer <frantz.mazoyer@altran.com>
Date:   2014-12-19T16:12:57Z

    STORM-248 STORM-322 proposal for fix

commit 49688fd5856e81d947255aca9cca4252d8243945
Author: fmazoyer <frantz.mazoyer@altran.com>
Date:   2014-12-19T16:12:57Z

    STORM-248 STORM-322 proposal for fix

commit 14a828cae8d883a8a0d1022d75156079a37a88a8
Author: fmazoyer <frantz.mazoyer@altran.com>
Date:   2015-01-06T12:23:37Z

    Merge branch 'STORM-248' of https://github.com/fmazoyer/storm.git into STORM-248

commit fba310af8cc2796af9314bd26217fe08552ad49c
Author: fmazoyer <frantz.mazoyer@altran.com>
Date:   2015-01-06T15:27:19Z

    STORM-248 use os.path.join instead or mere path concatenation

----
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/373#discussion_r22552440
  
    --- Diff: bin/storm ---
    @@ -74,7 +74,8 @@ if (not os.path.isfile(os.path.join(USER_CONF_DIR, "storm.yaml"))):
     STORM_RELEASE_DIR = os.path.join(STORM_DIR, "RELEASE")
     STORM_LIB_DIR = os.path.join(STORM_DIR, "lib")
     STORM_BIN_DIR = os.path.join(STORM_DIR, "bin")
    -STORM_LOGBACK_FILE_PATH = os.path.join(STORM_DIR, "logback", "cluster.xml")
    +STORM_LOGBACK_DIR = os.path.join(STORM_DIR, "logback")
    +STORM_LOGBACK_FILE_PATH = os.path.join(STORM_LOGBACK_DIR, "cluster.xml")
    --- End diff --
    
    I don't think this is used any more.
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/373#issuecomment-68935435
  
    One minor comment, but other then that it looks good.
, Github user fmazoyer commented on the pull request:

    https://github.com/apache/storm/pull/373#issuecomment-69002802
  
    Thank you for your comment, this is done :-)
    Could you please review ?
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/373#issuecomment-69044334
  
    Looks good to me +1.  I'll give it a few days to let others have a chance to review, and then check it in if there are no other comments.
, Github user harshach commented on a diff in the pull request:

    https://github.com/apache/storm/pull/373#discussion_r22597312
  
    --- Diff: bin/storm ---
    @@ -312,6 +312,13 @@ def repl():
         cppaths = [CLUSTER_CONF_DIR]
         exec_storm_class("clojure.main", jvmtype="-client", extrajars=cppaths)
     
    +def get_logback_conf_dir():
    +    cppaths = [CLUSTER_CONF_DIR]
    +    storm_logback_conf_dir = confvalue("storm.logback.conf.dir", cppaths)
    +    if(storm_logback_conf_dir == None or storm_logback_conf_dir == "nil"):
    --- End diff --
    
    Here storm_logback_conf_dir == "nil" will match if the storm_logback_conf_dir is set to  "nil" . I think you meant to check if the string is empty, a better way probably is "if not storm_logback_conf"
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/373#discussion_r22597616
  
    --- Diff: bin/storm ---
    @@ -312,6 +312,13 @@ def repl():
         cppaths = [CLUSTER_CONF_DIR]
         exec_storm_class("clojure.main", jvmtype="-client", extrajars=cppaths)
     
    +def get_logback_conf_dir():
    +    cppaths = [CLUSTER_CONF_DIR]
    +    storm_logback_conf_dir = confvalue("storm.logback.conf.dir", cppaths)
    +    if(storm_logback_conf_dir == None or storm_logback_conf_dir == "nil"):
    --- End diff --
    
    No it is actually "nil".  You can try it.
    
    ```
    $ storm localconfvalue something.bogus
    something.bogus: nil
    ```
, Github user revans2 commented on a diff in the pull request:

    https://github.com/apache/storm/pull/373#discussion_r22597673
  
    --- Diff: bin/storm ---
    @@ -312,6 +312,13 @@ def repl():
         cppaths = [CLUSTER_CONF_DIR]
         exec_storm_class("clojure.main", jvmtype="-client", extrajars=cppaths)
     
    +def get_logback_conf_dir():
    +    cppaths = [CLUSTER_CONF_DIR]
    +    storm_logback_conf_dir = confvalue("storm.logback.conf.dir", cppaths)
    +    if(storm_logback_conf_dir == None or storm_logback_conf_dir == "nil"):
    --- End diff --
    
    If we want it to behave differently we need to fix confvalue.
, Github user harshach commented on a diff in the pull request:

    https://github.com/apache/storm/pull/373#discussion_r22600178
  
    --- Diff: bin/storm ---
    @@ -312,6 +312,13 @@ def repl():
         cppaths = [CLUSTER_CONF_DIR]
         exec_storm_class("clojure.main", jvmtype="-client", extrajars=cppaths)
     
    +def get_logback_conf_dir():
    +    cppaths = [CLUSTER_CONF_DIR]
    +    storm_logback_conf_dir = confvalue("storm.logback.conf.dir", cppaths)
    +    if(storm_logback_conf_dir == None or storm_logback_conf_dir == "nil"):
    --- End diff --
    
    Sorry, you are right it is "nil".
, Github user harshach commented on the pull request:

    https://github.com/apache/storm/pull/373#issuecomment-69056901
  
    +1
, Github user fmazoyer commented on the pull request:

    https://github.com/apache/storm/pull/373#issuecomment-70099486
  
    Hi Robert,
    do you think there are still some things to do on my side ?
    Thanks for everything :-)
     

]