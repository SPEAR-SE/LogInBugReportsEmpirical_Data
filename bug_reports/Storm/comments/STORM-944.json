[Pull request available here:

https://github.com/apache/storm/pull/609, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/609#issuecomment-129640139
  
    There're some issues regarding using SNAPSHOT version of dependencies.
    
    - Tez: https://issues.apache.org/jira/browse/HIVE-8845
    - Calcite: https://issues.apache.org/jira/browse/HIVE-8873
    
    For now, without this PR, builds are failed cause it tries to fetch SNAPSHOT version of calcite but nexus.codehaus.org is unreachable.
    Behavior of depending on SNAPSHOT is fixed at 1.0.0.
    
    I didn't have time to use Hive, so I have some questions, 
    
    - Is it safe for users to upgrade hive version to 1.x.y without compatibility issues?
    - If it is, is it better to notify users to use Hive version to 1.0.0 and higher while using storm-hive?
    
    IMO we would be better to try avoiding any workarounds unless we can't resolve it without workaround. 
    
    @dossett @caofangkun @harshach @ptgoetz @revans2 
, Github user dossett commented on the pull request:

    https://github.com/apache/storm/pull/609#issuecomment-129663786
  
    I think this PR is preferable to stating a requirement for Hive 1.0.0 (of course, as the author of the PR, I would think that :-) )
    
    - I could be wrong, but I think the vast majority of Hive installs are not yet at 1.0.0 since HDP 2.2.X is at 0.14.0 and 2.3 has not had time to be widely adopted.  Other Hadoop distributions are slower to upgrade Hive than HDP.
    
    - This PR doesn't try to change any functional behavior. It just prevents maven from trying to resolve a dependency that will fail anyway.
, Github user caofangkun commented on the pull request:

    https://github.com/apache/storm/pull/609#issuecomment-129689692
  
    1 This PR is outdated now and  should upmerge this with master
    2  [ org.apache.calcite:calcite-core:0.9.2-incubating](https://github.com/apache/storm/blob/master/external/storm-hive/pom.xml#L83) also not necessary be brought in .
    3 This PR only and should only resolve fails of  fetching SNAPSHOT version of calcite
       I do not think there's compatibility issue right now , and of course we could file another issue if necessary.
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/609#issuecomment-129836616
  
    @dossett 
    Makes sense.
    Last thing I'd like to know is that current patch can work with Hive 1.x.y.
    If it isn't, storm-hive is just for 0.14.0 since you showed storm-hive doesn't work with Hive 0.13.0.
    It would be better to specify supporting Hive versions to README.
    
    @caofangkun 
    If it doesn't affect storm-hive, I also think it would be better to remove explicit dependency about calcite, since higher version of Hive could require higher version of calcite.
    But as I stated earlier, I didn't use Hive so verification and confirmation from Committer Sponsors are required.
, Github user dossett commented on the pull request:

    https://github.com/apache/storm/pull/609#issuecomment-129860736
  
    @HeartSaVioR 
    This PR works with hive.version=1.0.0   By "works" I mean that it compiles and passes all unit tests.
    
    It does NOT work with hive.version=1.2.1 (the version of Hive that ships with HDP 2.3).  Hive 1.2.1 depends on Calcite 1.2.0 and several tests fail if it's excluded.  I could get past these first problems by updating the calcite version in storm-hive/pom.xml to 1.2.0.  However, one test still fails (see below).  I have not had time to investigate these further, but it looks like some Hive behavior changes unrelated to the calcite dependency issue.
    
    A new JIRA for Hive 1.2.1 support seems appropriate for that issue.
    
    ```
    Running org.apache.storm.hive.bolt.TestHiveBolt
    Tests run: 9, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 15.488 sec <<< FAILURE! - in org.apache.storm.hive.bolt.TestHiveBolt
    testWithTimeformat(org.apache.storm.hive.bolt.TestHiveBolt)  Time elapsed: 0.692 sec  <<< FAILURE!
    org.mockito.exceptions.verification.WantedButNotInvoked: 
    Wanted but not invoked:
    collector.ack(
        source: null:1, stream: , id: {}, [100, test-123, null, null]
    );
    -> at org.apache.storm.hive.bolt.TestHiveBolt.testWithTimeformat(TestHiveBolt.java:235)
    
    However, there were other interactions with this mock:
    -> at backtype.storm.task.OutputCollector.reportError(OutputCollector.java:223)
    -> at backtype.storm.task.OutputCollector.fail(OutputCollector.java:218)
    -> at backtype.storm.task.OutputCollector.reportError(OutputCollector.java:223)
    -> at backtype.storm.task.OutputCollector.fail(OutputCollector.java:218)
    
    	at org.apache.storm.hive.bolt.TestHiveBolt.testWithTimeformat(TestHiveBolt.java:235)
    
    Running org.apache.storm.hive.common.TestHiveWriter
    Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.387 sec - in org.apache.storm.hive.common.TestHiveWriter
    
    Results :
    
    Failed tests: 
      TestHiveBolt.testWithTimeformat:235 
    Wanted but not invoked:
    collector.ack(
        source: null:1, stream: , id: {}, [100, test-123, null, null]
    );
    -> at org.apache.storm.hive.bolt.TestHiveBolt.testWithTimeformat(TestHiveBolt.java:235)
    
    However, there were other interactions with this mock:
    -> at backtype.storm.task.OutputCollector.reportError(OutputCollector.java:223)
    -> at backtype.storm.task.OutputCollector.fail(OutputCollector.java:218)
    -> at backtype.storm.task.OutputCollector.reportError(OutputCollector.java:223)
    -> at backtype.storm.task.OutputCollector.fail(OutputCollector.java:218)
    
    
    Tests run: 12, Failures: 1, Errors: 0, Skipped: 0
    ```
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/609#issuecomment-130092091
  
    For now, all Travis CI builds are failing due to SNAPSHOT issue on storm-hive.
    It is already bothering us, so I think we should take this first, and discuss later improvements for this issue.
    +1.
    
    @caofangkun 
    I'm sorry but removing calcite-core from dependency is minor at now. It would be better to be addressed again when we agree to check hive version compatibilities.
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/609
, Thanks [~dossett], I merged this to master.

I don't have an idea we should apply this to 0.10.0, so I'd like to let Committer Sponsors decide it., GitHub user HeartSaVioR opened a pull request:

    https://github.com/apache/storm/pull/718

    STORM-944: storm-hive pom.xml has a dependency conflict with calcite (backport to 0.10.x)

    For future maintaining 0.10.x-branch.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/HeartSaVioR/storm STORM-944-0.10-x-branch

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/718.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #718
    
----
commit 9b89cf0a0e418ad243f88c527577f0c4886bf8e0
Author: Aaron Dossett <aaron.dossett@target.com>
Date:   2015-06-30T19:49:38Z

    resolve calcite dependency conflict

----
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/718#issuecomment-137578387
  
    CHANGELOG.md should be modified to both branch - master and 0.10.x-branch.
, Github user knusbaum commented on the pull request:

    https://github.com/apache/storm/pull/718#issuecomment-137580109
  
    +1
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/718
]