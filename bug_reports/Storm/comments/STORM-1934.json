[GitHub user HeartSaVioR opened a pull request:

    https://github.com/apache/storm/pull/1528

    STORM-1934 Fix race condition between sync-supervisor and sync-processes

    * sync-supervisor just downloads new topology code and writes new local assignment
      * shutting down workers and removing topology code is moved to sync-processes
    * sync-processes does all of jobs based on local assignment and allocated workers
    * remove unused / unneeded codes
    
    Here's my test result for this patch:
    
    * `mvn clean install` 5 times: not met supervisor intermittent failure (STORM-1933)
      * will try more times
    * kill worker via `kill`, `kill -9`, `restart worker` from UI: no issue on restarting worker
    * rebalance topology to change workers (2 -> 3): to test that new assignment has same worker port but different executors compared to assigned workers
      * worker is recognized as :disallowed, and killed & relaunched
    
    Rebalance test in details:
    
    - Writing new assignment
    ```
    6701 {:storm-id "test-topology2-4-1467185073", :executors ([7 7] [5 5] [3 3] [1 1]), :resources [0.0 0.0 0.0]}, 
    6702 {:storm-id "test-topology2-4-1467185073", :executors ([6 6] [4 4] [2 2]), :resources [0.0 0.0 0.0]}
    ```
    
    - Assigned executors:
    ```
    6701 {:storm-id "test-topology2-4-1467185073", :executors [[7 7] [5 5] [3 3] [1 1]], :resources #object[org.apache.storm.generated.WorkerResources 0x40c4d31c "WorkerResources(mem_on_heap:0.0, mem_off_heap:0.0, cpu:0.0)"]}, 
    6702 {:storm-id "test-topology2-4-1467185073", :executors [[6 6] [4 4] [2 2]], :resources #object[org.apache.storm.generated.WorkerResources 0x4ba861f4 "WorkerResources(mem_on_heap:0.0, mem_off_heap:0.0, cpu:0.0)"]}}
    ```
    
    - Allocated:
    ```
    "2e9bea10-02b7-4e55-88e7-b194b9917a63" [:disallowed {:time-secs 1467185407, :storm-id "test-topology2-4-1467185073", :executors [[3 3] [6 6] [-1 -1]], :port 6703}], 
    "4630c4bf-9786-47ff-9f3b-6b42d9781b9d" [:disallowed {:time-secs 1467185407, :storm-id "test-topology2-4-1467185073", :executors [[7 7] [1 1] [-1 -1] [4 4]], :port 6701}], 
    "b9a622d2-5e5b-4311-999c-8c8dd92da6b6" [:disallowed {:time-secs 1467185406, :storm-id "test-topology2-4-1467185073", :executors [[2 2] [-1 -1] [5 5]], :port 6702}]}
    ```
    
    NOTE: Due to forward reference, I have to move `sync-processes` to just before `mk-synchronize-supervisor`. Major changes are done in sync-processes so reviewers need to compare before & after manually. Sorry about that.
    
    Since supervisor.clj is already ported to Java in master branch, I should have time to read ported code, and modify to be in sync.
    
    Please review and comment while I'm working against master branch. Thanks!

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/HeartSaVioR/storm STORM-1934-1.x

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1528.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1528
    
----
commit e5857e07838af888988691af39efbe415b9a2345
Author: Jungtaek Lim <kabhwan@gmail.com>
Date:   2016-06-29T07:06:20Z

    STORM-1934 Fix race condition between sync-supervisor and sync-processes
    
    * sync-supervisor just downloads new topology code and writes new local assignment
      * shutting down workers and removing topology code is moved to sync-processes
    * sync-processes does all of jobs based on local assignment and allocated workers
    * remove unused / unneeded codes

----
, Github user HeartSaVioR commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    Note: This patch removes the change from STORM-1561 since supervisor originally checks the change of executors in same port. 
    Please refer `read-allocated-workers` and `matches-an-assignment?`, and let me know if I'm missing here.
, Linking other suspected issues., Github user HeartSaVioR commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    Build passes on storm-core so it's unrelated.
, Github user satishd commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1528#discussion_r68914596
  
    --- Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj ---
    @@ -592,24 +577,13 @@
           (doseq [p (set/difference (set (keys existing-assignment))
                                     (set (keys new-assignment)))]
             (.killedWorker isupervisor (int p)))
    --- End diff --
    
     `StandaloneSupervisor` implementation does nothing. What is the need of this API?
, Github user satishd commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1528#discussion_r68914602
  
    --- Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj ---
    @@ -592,24 +577,13 @@
           (doseq [p (set/difference (set (keys existing-assignment))
                                     (set (keys new-assignment)))]
             (.killedWorker isupervisor (int p)))
    -      (kill-existing-workers-with-change-in-components supervisor existing-assignment new-assignment)
           (.assigned isupervisor (keys new-assignment))
    --- End diff --
    
     `StandaloneSupervisor` implementation does nothing. What is the need of this API?
, GitHub user HeartSaVioR opened a pull request:

    https://github.com/apache/storm/pull/1529

    STORM-1934 Fix race condition between sync-supervisor and sync-processes

    * sync-supervisor just downloads new topology code and writes new local assignment
      * shutting down workers and removing topology code is moved to sync-processes
    * sync-processes does all of jobs based on local assignment and allocated workers
    
    PR for 1.x-branch: #1528
    
    Please note that supervisor is ported to Java, so PR for master and PR for 1.x-branch are having different diff. But concept is same.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/HeartSaVioR/storm STORM-1934

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1529.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1529
    
----
commit 816a6cc47e5be505d4857e25a4aa14d2f09cade0
Author: Jungtaek Lim <kabhwan@gmail.com>
Date:   2016-06-29T10:06:43Z

    STORM-1934 Fix race condition between sync-supervisor and sync-processes
    
    * sync-supervisor just downloads new topology code and writes new local assignment
      * shutting down workers and removing topology code is moved to sync-processes
    * sync-processes does all of jobs based on local assignment and allocated workers

----
, Github user arunmahadevan commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    @HeartSaVioR The changes looks good. May be you can add some comments in sync-process and mk-synchronize-supervisor on what each is supposed to do.
    
    In your comment where you rebalanced from 2 -> 3 workers, the allocated status for the new worker ":port 6703" is also disallowed, which looks odd since its a new worker.
, Github user HeartSaVioR commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    @arunmahadevan Sorry for confusing: rebalance is done from 3 workers to 2 workers, and since all executors map are changed so all workers are disallowed and two new workers are launched.
, Github user arunmahadevan commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    @HeartSaVioR thanks for the clarification, it makes sense now. Can you also check rebalance from 2 -> 3 workers ?
, Github user HeartSaVioR commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    @arunmahadevan 
    This works perfectly.
    
    - Writing new assignment
    ```
    6700 {:storm-id "test-topology2-4-1467185073", :executors ([7 7] [4 4] [1 1]), :resources [0.0 0.0 0.0]}, 
    6702 {:storm-id "test-topology2-4-1467185073", :executors ([6 6] [3 3]), :resources [0.0 0.0 0.0]}, 
    6701 {:storm-id "test-topology2-4-1467185073", :executors ([5 5] [2 2]), :resources [0.0 0.0 0.0]}
    ```
    
    - Assigned executors:
    ```
    {6700 {:storm-id "test-topology2-4-1467185073", :executors [[7 7] [4 4] [1 1]], :resources #object[org.apache.storm.generated.WorkerResources 0x6dabc02d "WorkerResources(mem_on_heap:0.0, mem_off_heap:0.0, cpu:0.0)"]}, 
    6701 {:storm-id "test-topology2-4-1467185073", :executors [[5 5] [2 2]], :resources #object[org.apache.storm.generated.WorkerResources 0x6de46954 "WorkerResources(mem_on_heap:0.0, mem_off_heap:0.0, cpu:0.0)"]}, 
    6702 {:storm-id "test-topology2-4-1467185073", :executors [[6 6] [3 3]], :resources #object[org.apache.storm.generated.WorkerResources 0x60f1fbb5 "WorkerResources(mem_on_heap:0.0, mem_off_heap:0.0, cpu:0.0)"]}}
    ```
    
    - Allocated:
    ```
    "612eeee0-0ddc-4820-9062-c79276d56cf2" [:disallowed {:time-secs 1467209575, :storm-id "test-topology2-4-1467185073", :executors [[2 2] [6 6] [-1 -1] [4 4]], :port 6702}], 
    "9751163a-f7b8-46a5-9b9c-bcd1fd1446cd" [:disallowed {:time-secs 1467209574, :storm-id "test-topology2-4-1467185073", :executors [[7 7] [3 3] [1 1] [-1 -1] [5 5]], :port 6701}]
    ```
    
    Now three workers are running.
, Github user arunmahadevan commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    Thanks @HeartSaVioR. It looks good.
    
    +1
, Github user HeartSaVioR commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    I'd like to get reviewed by @kishorvpatil if (but only if) he's available since it removes the changeset of STORM-1561. Since it's critical issue and related to race condition I'd also like to get reviewed by more contributors / committers. 
    And that would be really nice if affected users can apply this patch to see if this helps. I'll ping reporters for relevant issues and ask them to help testing.
, Github user satishd commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    @HeartSaVioR added resolution details in the description of the PR. Adding one more point here: `(kill-existing-workers-with-change-in-components supervisor existing-assignment new-assignment)` is not needed in `sync-supervisor` as it kills all the workers with invalid state which includes the old workers and rebalanced workers.
, Github user satishd commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    +1 LGTM. 
, Github user HeartSaVioR commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    Added some comments. I'll squash once reviewing is done.
, Github user satishd commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    @HeartSaVioR You may want to use `(declare rm-topo-files)` in the start so that you do not need to move `defn sync-processes` for handling forward references. This may make it easy to review the code. 
, Github user HeartSaVioR commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    @satishd Yeah it would be really better. Thanks for the tip. Applied.
, Github user harshach commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1528#discussion_r69152524
  
    --- Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj ---
    @@ -425,6 +433,13 @@
              ". State: " state
              ", Heartbeat: " (pr-str heartbeat))
             (shutdown-worker supervisor id)))
    +
    +    (doseq [storm-id all-downloaded-storm-ids]
    --- End diff --
    
    This looks like you removed the check where we used to keep the jars even the assignement goes away. We had another issue where if the topology is rebalanced and the assignment goes away 
    and immediately comes back to the same supervisor , it tries re-download the jar and if it happens to be a large jar file than there are chances that supervisor worker gets killed before it even starts as the jar download takes longer time.
    IMO , i don't see a reason to remove the storm jars on a rebalance or if the assignement goes away. They should be removed when the topology gets killed.
, Github user harshach commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    @HeartSaVioR  I had a fix before for similar issue here https://github.com/apache/storm/pull/401/files . I don't see much of the code here. Can you take a look if that particular case is handled here.
    
    @revans2 @kishorvpatil @d2r can you also take a look at this PR.
, Github user HeartSaVioR commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    @harshach 
    `sync-supervisor` writes local assignment after code download for topology is completed. 
    Since `sync-processes` launches worker based on local assignment, there's a guarantee that code download is completed before launching worker.
    
    Btw, as you see the diff, STORM-130 is not on recent code. Not sure why it's removed.
, Github user HeartSaVioR commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1528#discussion_r69245914
  
    --- Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj ---
    @@ -425,6 +433,13 @@
              ". State: " state
              ", Heartbeat: " (pr-str heartbeat))
             (shutdown-worker supervisor id)))
    +
    +    (doseq [storm-id all-downloaded-storm-ids]
    --- End diff --
    
    @harshach 
    I agree that it would be nice to keep topology code until topology gets killed, but since this is same to what it was, I guess we can handle this as new issue for improvement.
    Btw, `assignment-snapshot` seems hiding no topology info (I mean killed) vs no assignment. We should let assignment-snapshot distinguish both.
, Github user HeartSaVioR commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    @harshach 
    And sync-processes (`get-valid-new-worker-ids`) checks topology files before launching workers.
    If there's an issue which corrupts topology code or not having topology code, sync-processes doesn't launch worker, and next runs of sync-supervisor will try to download topology code again.
, Github user HeartSaVioR commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1528#discussion_r69497481
  
    --- Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj ---
    @@ -425,6 +433,13 @@
              ". State: " state
              ", Heartbeat: " (pr-str heartbeat))
             (shutdown-worker supervisor id)))
    +
    +    (doseq [storm-id all-downloaded-storm-ids]
    --- End diff --
    
    @harshach Would I file a new issue regarding your suggestion, or do you want to file it?
, Github user HeartSaVioR commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    @harshach I commented your concern so could you revisit this?
    @ptgoetz Could you also take a look?
, Github user harshach commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    @HeartSaVioR I am +1 .
, Github user HeartSaVioR commented on a diff in the pull request:

    https://github.com/apache/storm/pull/1528#discussion_r70016445
  
    --- Diff: storm-core/src/clj/org/apache/storm/daemon/supervisor.clj ---
    @@ -425,6 +433,13 @@
              ". State: " state
              ", Heartbeat: " (pr-str heartbeat))
             (shutdown-worker supervisor id)))
    +
    +    (doseq [storm-id all-downloaded-storm-ids]
    --- End diff --
    
    Never mind. Filed [STORM-1952](https://issues.apache.org/jira/browse/STORM-1952)
, Github user ptgoetz commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    +1
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/1528
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/1529
, Github user harshach commented on the issue:

    https://github.com/apache/storm/pull/1528
  
    Thanks @HeartSaVioR . Merged into 1.0.x, 1-x, master branches.
]