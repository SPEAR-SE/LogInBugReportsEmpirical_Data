[Also, the pending switch to kafka 9 means that metadata.fetch.timeout.ms config is deprecated, and max.block.ms should be used instead.

49394 [main] WARN  o.a.k.c.p.KafkaProducer - metadata.fetch.timeout.ms config is deprecated and will be removed soon. Please use max.block.ms, GitHub user ppoulosk opened a pull request:

    https://github.com/apache/storm/pull/1245

    DO NOT MERGE [STORM-1646]  Fix intermittent failures in storm-kafka unit tests

    This PR is dependent on the pr 1131, for STORM-822.  
    
    https://github.com/apache/storm/pull/1131
    
    We have run into a few issues running storm-kafka unit tests on lightly resourced VMs, especially after moving to kafka-9.
    
    This moves the exponential backoff manager to use simulated time in testing.  We had been seeing races when using Thread.sleep with low sleep periods.
    
    It also switches a config no longer used in kafka 9 to the recommended config parameter, and bumps up the timeout.
    
    49394 [main] WARN o.a.k.c.p.KafkaProducer - metadata.fetch.timeout.ms config is deprecated and will be removed soon. Please use max.block.ms

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ppoulosk/storm STORM-1646

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1245.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1245
    
----
commit afc3bdebd70faac9da6af907c18665f47604a012
Author: Hugo Louro <hmclouro@gmail.com>
Date:   2015-12-14T18:16:42Z

    STORM-822: Kafka Spout New Consumer API

commit 1a98839e59f90c3c3b2819d5850b02f69b3a31d5
Author: Paul Poulosky <ppoulosk@thenperfect-lm.champ.corp.yahoo.com>
Date:   2016-03-22T14:43:29Z

    Adjust timeout, change define, fix error print, move to simulated time

----
, Github user ppoulosk commented on the pull request:

    https://github.com/apache/storm/pull/1245#issuecomment-209123968
  
    Closing this PR and putting up another one since STORM-822 is resolved.
, Github user ppoulosk closed the pull request at:

    https://github.com/apache/storm/pull/1245
, GitHub user ppoulosk opened a pull request:

    https://github.com/apache/storm/pull/1335

    [STORM-1646] Fix Kafka unit tests

    This fixes two unit test failures in external/kafka I saw when running tests repeatedly, especially on low resource VMs.
    
    There was a race in the Exponential Backoff Manager that was fixed by switching the test to use simulated time.
    
    The Kafka Utils Test was seeing failures on underpowered systems due to a timeout value that was too small. Added log4j2 properties xml to be able to change the log level printed in the output. Also changed metadata.fetch.timeout.ms to max.block.ms, as kafka 0.9 had deprecated the config. The test output had warnings like
    
    39890 [main] WARN o.a.k.c.p.KafkaProducer - metadata.fetch.timeout.ms config is deprecated and will be removed soon. Please use max.block.ms


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ppoulosk/storm FixKafkaUnitTests

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1335.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1335
    
----
commit 38cf3f3d2f594023260efd853a2255306a0e6190
Author: Paul Poulosky <ppoulosk@thenperfect-lm.champ.corp.yahoo.com>
Date:   2016-04-12T19:17:44Z

    Fix tests

----
, Github user ppoulosk closed the pull request at:

    https://github.com/apache/storm/pull/1335
, GitHub user ppoulosk reopened a pull request:

    https://github.com/apache/storm/pull/1335

    [STORM-1646] Fix Kafka unit tests

    This fixes two unit test failures in external/kafka I saw when running tests repeatedly, especially on low resource VMs.
    
    There was a race in the Exponential Backoff Manager that was fixed by switching the test to use simulated time.
    
    The Kafka Utils Test was seeing failures on underpowered systems due to a timeout value that was too small. Added log4j2 properties xml to be able to change the log level printed in the output. Also changed metadata.fetch.timeout.ms to max.block.ms, as kafka 0.9 had deprecated the config. The test output had warnings like
    
    39890 [main] WARN o.a.k.c.p.KafkaProducer - metadata.fetch.timeout.ms config is deprecated and will be removed soon. Please use max.block.ms


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ppoulosk/storm FixKafkaUnitTests

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1335.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1335
    
----
commit 38cf3f3d2f594023260efd853a2255306a0e6190
Author: Paul Poulosky <ppoulosk@thenperfect-lm.champ.corp.yahoo.com>
Date:   2016-04-12T19:17:44Z

    Fix tests

----
, Github user kishorvpatil commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-209515255
  
    LGTM. +1
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-209517825
  
    +1
, Github user srdo commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-210042576
  
    There's also a metadata.fetch.timeout.ms here 
    https://github.com/apache/storm/blob/master/external/storm-kafka/src/test/org/apache/storm/kafka/bolt/KafkaBoltTest.java#L211
, Github user vesense commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-215088822
  
    LGTM
, Github user ppoulosk commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-215733730
  
    Changed usage of metadata.fetch.timeout.ms in KafkaBoltTest as well.
, Github user jerrypeng commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-215831984
  
    +1
, Github user ppoulosk closed the pull request at:

    https://github.com/apache/storm/pull/1335
, GitHub user ppoulosk reopened a pull request:

    https://github.com/apache/storm/pull/1335

    [STORM-1646] Fix Kafka unit tests

    This fixes two unit test failures in external/kafka I saw when running tests repeatedly, especially on low resource VMs.
    
    There was a race in the Exponential Backoff Manager that was fixed by switching the test to use simulated time.
    
    The Kafka Utils Test was seeing failures on underpowered systems due to a timeout value that was too small. Added log4j2 properties xml to be able to change the log level printed in the output. Also changed metadata.fetch.timeout.ms to max.block.ms, as kafka 0.9 had deprecated the config. The test output had warnings like
    
    39890 [main] WARN o.a.k.c.p.KafkaProducer - metadata.fetch.timeout.ms config is deprecated and will be removed soon. Please use max.block.ms


You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/ppoulosk/storm FixKafkaUnitTests

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/1335.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #1335
    
----
commit 38cf3f3d2f594023260efd853a2255306a0e6190
Author: Paul Poulosky <ppoulosk@thenperfect-lm.champ.corp.yahoo.com>
Date:   2016-04-12T19:17:44Z

    Fix tests

commit c54e6c5a7c76ee38fcf7620359c17a0dc3caa034
Author: Paul Poulosky <ppoulosk@thenperfect-lm.champ.corp.yahoo.com>
Date:   2016-04-29T14:22:41Z

    Change other occurrances of the deprecated setting

----
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-216477509
  
    `max.block.ms` is not available for 0.8.x so IMO it would be not good to change storm-kafka module to strictly support 0.9 or higher. Users who use Kafka 0.9 or higher could use storm-kafka-client even though storm-kafka is not compatible with 0.9, but not opposite.
, Github user ppoulosk commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-216529805
  
    @HeartSaVioR,
    
    I assumed that because storm-kafka already builds against kafka 0.9 and that the changes to max.block.ms were only in unit test code it would not affect any user compatibility.  Is that wrong?
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-216535715
  
    Issue is that some users report that storm-kafka 1.0.0 with 0.9 is not working properly.
    
    Please refer https://issues.apache.org/jira/browse/STORM-1755 and #1386.
    When we adjust the version into 0.8.x, that option becomes useless for test codes, which could incur failures which seems hard to find.
    
    But using `metadata.fetch.timeout.ms` wouldn't make any issues for Kafka 0.8 and 0.9. And I don't think storm-kafka can support Kafka same or upper than 0.10.0 clearly so no issue for using deprecated property. But this is just my 2 cents and I'd like to hear about other opinions, too.
, Github user srdo commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-216564619
  
    storm-kafka will probably support 0.10.0, I believe the Kafka developers version their APIs so new clusters can talk to old clients. That shouldn't affect the choice of configuration parameters though, since any 0.8.x support in 0.10.0 would expect 0.8.x configuration parameters.
    
    See https://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/api/ApiVersion.scala and how it's used in https://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/server/KafkaApis.scala if you're interested. The way I understand it is the client indicates which version of the API it wants to use, and then the broker uses that version of the API for requests/responses.
, Github user ppoulosk commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-216565610
  
    Thanks for the explanation.  Will revert that change.
, Github user srdo commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-216573099
  
    I might have been a bit quick on the trigger there. The Kafka coding guidelines target backward compatibility for one release only. So storm-kafka might not support 0.10.0.
    
    (http://kafka.apache.org/coding-guide.html under backwards compatibility)
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/1335#issuecomment-216576871
  
    Yeah, I guess Kafka doesn't strictly respect semantic versioning, or their major version seems to 2nd number of the version at least before reaching 1.0.0.
, Thanks [~ppoulosk], I merged into master, 1.x, 1.0.x branches.]