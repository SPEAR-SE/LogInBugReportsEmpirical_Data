[I response it based on current master, so you can checkout current master and see it helps.

(Need citation)

If channelRef is null, it does reconnect when task have a message to send (by send() method).

http://netty.io/4.0/api/io/netty/channel/Channel.html#isWritable()
http://stackoverflow.com/questions/11786528/can-a-netty-nio-channel-be-writable-but-not-connected#comment15913035_11791721

Seems like isWritable() return false if and only if write buffer is full. It doesn't check socket is broken.

So I think it doesn't always false., the channelRef  will not be null.
Also the netty event loop close the socket,  but th Client don't register any callback to monitor the socket close event,  so the channelRef  is pointing to a closed channel,  and the send() fuction pass to add message to bufferã€‚

I have writed code to test Netty isWritable().
After  connected the server, test program sleep then I shutdown the server. when the test program wake up,  the result is:

connect OK
nowritable
noconnected


{code:title=testNetty.java|borderStyle=solid}
        @Test
	public void testNetty() {
		ThreadFactory bossFactory = new NettyRenameThreadFactoryX("client"
				+ "-boss");
		ThreadFactory workerFactory = new NettyRenameThreadFactoryX("client"
				+ "-worker");
		NioClientSocketChannelFactory factory = new NioClientSocketChannelFactory(
				Executors.newCachedThreadPool(bossFactory),
				Executors.newCachedThreadPool(workerFactory), 2);
		ClientBootstrap bootstrap = new ClientBootstrap(factory);
		bootstrap.setOption("tcpNoDelay", true);
		bootstrap.setOption("sendBufferSize", 10000);
		bootstrap.setOption("keepAlive", true);

		// Set up the pipeline factory.
		bootstrap.setPipelineFactory(new StormClientPipelineFactoryX());

		// Start the connection attempt.
		InetSocketAddress remote_addr = new InetSocketAddress(
				"XXX.XXX.XXX.XXX", 1234);
		ChannelFuture future = bootstrap.connect(remote_addr);
		future.awaitUninterruptibly();
		Channel current = future.getChannel();
		if (!future.isSuccess()) {
			if (null != current) {
				current.close();
			}
		} else {

			System.out.println("connect OK");
		}
		try {
			Thread.sleep(1000 * 10);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		if (current.isWritable()) {
			System.out.println("writable");
		} else {
			System.out.println("nowritable");
		}

		if (current.isConnected()) {
			System.out.println("connected");
		} else {
			System.out.println("noconnected");
		}
	}
{code}, https://issues.apache.org/jira/browse/STORM-406]