[Hi Michael, are you doing a rolling-upgrade from 0.9 to 0.10?
It seems that the field "nimbus_uptime_secs" only exists in 0.9.x for ClusterSummary; in 0.11.0, this field no longer exists because we introduce multiple nimbuses in HA. , Hi Zhuo

thanks for your reply.

The Cluster installation is a fresh installation in VMs of Hortonworks 2.3 (Storm 0.10.0) as we wanted to test in a virtual environment before upgrading the production cluster.
The client code is a fresh compile with upgrading storm-core 0.10.0 via gradle.

Even when the field is not used anymore by the server, it seems that it is still validiated in ClusterSummary:
public void validate()
   if (!is_set_nimbus_uptime_secs()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'nimbus_uptime_secs' is unset! Struct:" + toString());
    }

The class seems to be autogenerated. Could it be that the autogeneration was not performed for this class before releasing 0.10.0? The date in the header looks outdated:
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-2-6")
public class ClusterSummary implements ...


BR Michael, Sorry for the confusion. Both 0.9 and 0.10 still has the field, 0.11 does not. 
Not sure why clusterSummary.setFieldValue is not called for nimbus_uptime_secs to set its field bit to be true., Hi,

In which class is it supposed to be set? Can we probably turn on logging
there?

Br Michael

, There is either a bug in thrift or you have a client server mismatch.  Nimbus will validate the object before serializing it out using essentially the same code that is being used to validate the object after deserializing.  The reason I use essentially is because if we have a mismatch in the versions of storm on the client and server the validation logic will be different.

Hortonworks 2.3 has storm 0.10.0 but it also has HA merged into it, so it is closer to 0.11.x for this. 

I really don't like the idea of fully removing a required field.  It make doing a rolling upgrade impossible.  I would very much prefer to deprecate it, and either always set it to 0, or set it to the lowest uptime of all nimbuses.  I'll see if I can through together a patch for that quickly.

, GitHub user revans2 opened a pull request:

    https://github.com/apache/storm/pull/868

    STORM-1189: Maintain wire compatability with 0.10.x versions of storm.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/revans2/incubator-storm STORM-1189

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/storm/pull/868.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #868
    
----
commit 5c818b093350f572a38a5c59f9e083625b298ddd
Author: Robert (Bobby) Evans <evans@yahoo-inc.com>
Date:   2015-11-09T14:44:36Z

    STORM-1189: Maintain wire compatability with 0.10.x versions of storm.

----
, I just put up a pull request that should fix the issue with storm.  If Hortonworks wants it they are going to have to cherry-pick it back themselves., Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/868#issuecomment-155084311
  
    I have not tested this manually between a 0.10.x client and a 0.11.x server, but I do plan to.
    
    Note that this only maintains wire compatibility, not API compatibility.  The constructor for ClusterSummary is not the same, as required parameters have been removed.  I don't see this as critical because only internal storm code should ever be creating instances of this class, but it is an incompatibility with 0.10.x.
, Github user kishorvpatil commented on the pull request:

    https://github.com/apache/storm/pull/868#issuecomment-155093325
  
    LGTM. +1
, Github user zhuoliu commented on the pull request:

    https://github.com/apache/storm/pull/868#issuecomment-155099830
  
    +1
, Github user revans2 commented on the pull request:

    https://github.com/apache/storm/pull/868#issuecomment-155104869
  
    I just ran the test and I was able to use a 0.10.1 UI against a nimbus instance running using this patch.
    
    I did find that ShellBolt is not backwards compatible.  I will file a JIRA around that.
, Github user HeartSaVioR commented on the pull request:

    https://github.com/apache/storm/pull/868#issuecomment-155222663
  
    +1
, Github user asfgit closed the pull request at:

    https://github.com/apache/storm/pull/868
, I merged the fix into master., Github user spicoflorin commented on the pull request:

    https://github.com/apache/storm/pull/868#issuecomment-159317100
  
    Hello!
     I have downloaded the version 0.10.0 and applied the patch from  https://patch-diff.githubusercontent.com/raw/apache/storm/pull/868.patch, but I got compilation errors. I would like to use the 0.10.0 storm version. Can you please test again? Or what code version should I use : the one from tags (0.10.0) or the one from the branch 0.10.x master?
     ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project storm-core: Compilation failure: Compilation failure:
    ERROR] /d:/Temp/stom-10/storm-0.10.0/storm-core/src/jvm/backtype/storm/generated/ClusterSummary.java:[321,5] duplicate case label
    ERROR] /d:/Temp/stom-10/storm-0.10.0/storm-core/src/jvm/backtype/storm/generated/ClusterSummary.java:[403,13] variable this_present_nimbus_uptime_secs is already defined in method equals(backtype.storm.generated.ClusterSummary)
    ERROR] /d:/Temp/stom-10/storm-0.10.0/storm-core/src/jvm/backtype/storm/generated/ClusterSummary.java:[404,13] variable that_present_nimbus_uptime_secs is already defined in method equals(backtype.storm.generated.ClusterSummary)
    ERROR] /d:/Temp/stom-10/storm-0.10.0/storm-core/src/jvm/backtype/storm/generated/ClusterSummary.java:[617,11] duplicate case label
    ERROR] -> [Help 1]
, Github user YuChem commented on the pull request:

    https://github.com/apache/storm/pull/868#issuecomment-169778882
  
    @spicoflorin: I have encountered the same issue. Did you get it resolved? Would you mind get some tips on how to workaround?
, Github user spicoflorin commented on the pull request:

    https://github.com/apache/storm/pull/868#issuecomment-178437230
  
    Hi!
      I didn't solve it. 
]