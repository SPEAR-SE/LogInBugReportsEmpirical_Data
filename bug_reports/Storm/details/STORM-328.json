{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12715487","self":"https://issues.apache.org/jira/rest/api/2/issue/12715487","key":"STORM-328","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327112","id":"12327112","name":"0.9.3","archived":false,"released":true,"releaseDate":"2014-11-25"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2014-07-09T01:22:34.408+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue Jul 15 22:25:13 UTC 2014","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_4838882663_*|*_5_*:*_1_*:*_0","customfield_12310420":"393773","customfield_12312321":null,"resolutiondate":"2014-07-15T14:22:08.537+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-328/watchers","watchCount":4,"isWatching":false},"created":"2014-05-20T14:14:05.952+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["newbie"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326452","id":"12326452","name":"0.9.2-incubating","archived":false,"released":true,"releaseDate":"2014-06-25"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12326788","id":"12326788","name":"0.9.1-incubating","archived":false,"released":true,"releaseDate":"2014-02-10"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12326789","id":"12326789","name":"0.9.0.1","archived":false,"released":true,"releaseDate":"2013-12-06"}],"customfield_12312339":null,"issuelinks":[],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-10-05T02:12:29.700+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12327950","id":"12327950","name":"storm-core","description":"Core storm daemons and APIs including trident"}],"timeoriginalestimate":null,"description":"For most numeric configuration values Config.java has a type of Number listed, but the values are parsed using Utils.getInt or Utils.getLong, which means if someone gave a floating point number it would pass the ConfigValidation, but would blow up when it is used.  This is most critical for values that Nimbus reads, but would be good to have them consistent everywhere.\n\nWe should also check that getInt works properly for numbers that are larger then would fit in an integer.\n\nEither we need to update Utils to be more lenient when looking at doubles, or we need to make Config more strict, which may be difficult with the YAML and JSON parsing that happens, where ints are often converted into longs.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"393925","customfield_12312823":null,"summary":"Config.java and Utils.get{Int,Long} are not in sync for floating point","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14055730","id":"14055730","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zhming","name":"zhming","key":"zhming","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Zhiming Guo","active":true,"timeZone":"Asia/Shanghai"},"body":"Hi there, I'm a newbie and I want to solve this newbie bug. I have read the related codes. Is it a real bug? \nShould I just simply add a new Utils.getFloat? Or I add Utils.getFloat and Utils.getNumber then replace all getInt with getNumber?\n\nI ran \n{code}\negrep -ir --include=*.{java,clj} \"getInt\\(\" . | less\n{code}\nand I got output: \n{code}\n./backtype/storm/drpc/DRPCSpout.java:            int port = Utils.getInt(conf.get(Config.DRPC_INVOCATIONS_PORT));\n./backtype/storm/drpc/ReturnResults.java:            final int port = Utils.getInt(retMap.get(\"port\"));\n./backtype/storm/messaging/netty/Client.java:        buffer_size = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_BUFFER_SIZE));\n./backtype/storm/messaging/netty/Client.java:        max_retries = Math.min(30, Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_MAX_RETRIES)));\n./backtype/storm/messaging/netty/Client.java:        base_sleep_ms = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_MIN_SLEEP_MS));\n./backtype/storm/messaging/netty/Client.java:        max_sleep_ms = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_MAX_SLEEP_MS));\n./backtype/storm/messaging/netty/Client.java:        this.messageBatchSize = Utils.getInt(storm_conf.get(Config.STORM_NETTY_MESSAGE_BATCH_SIZE), 262144);\n./backtype/storm/messaging/netty/Client.java:        flushCheckInterval = Utils.getInt(storm_conf.get(Config.STORM_NETTY_FLUSH_CHECK_INTERVAL_MS), 10); // default 10 ms\n./backtype/storm/messaging/netty/Context.java:        int maxWorkers = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_CLIENT_WORKER_THREADS));\n./backtype/storm/messaging/netty/Context.java:        int otherWorkers = Utils.getInt(storm_conf.get(Config.TOPOLOGY_WORKERS), 1) - 1;\n./backtype/storm/messaging/netty/Server.java:        queueCount = Utils.getInt(storm_conf.get(Config.WORKER_RECEIVER_THREAD_COUNT), 1);\n./backtype/storm/messaging/netty/Server.java:        int buffer_size = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_BUFFER_SIZE));\n./backtype/storm/messaging/netty/Server.java:        int maxWorkers = Utils.getInt(storm_conf.get(Config.STORM_MESSAGING_NETTY_SERVER_WORKER_THREADS));\n./backtype/storm/task/GeneralTopologyContext.java:        Integer max = Utils.getInt(_stormConf.get(Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS));\n./backtype/storm/task/GeneralTopologyContext.java:                    max = Math.max(Utils.getInt(comp), max);\n./backtype/storm/testing/MemoryTransactionalSpout.java:            else _maxSpoutPending = Utils.getInt(c);\n./backtype/storm/testing/OpaqueMemoryTransactionalSpout.java:            else _maxSpoutPending = Utils.getInt(c);\n./backtype/storm/transactional/TransactionalSpoutCoordinator.java:            _maxTransactionActive = Utils.getInt(active);\n./backtype/storm/utils/NimbusClient.java:            int nimbusPort = Utils.getInt(conf.get(Config.NIMBUS_THRIFT_PORT));\n./backtype/storm/utils/Utils.java:    public static Integer getInt(Object o) {\n./backtype/storm/utils/Utils.java:      Integer result = getInt(o, null);\n./backtype/storm/utils/Utils.java:    public static Integer getInt(Object o, Integer defaultValue) {\n./backtype/storm/utils/Utils.java:            serverPorts.add(zkServer + \":\" + Utils.getInt(port));\n./backtype/storm/utils/Utils.java:                .connectionTimeoutMs(Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_CONNECTION_TIMEOUT)))\n./backtype/storm/utils/Utils.java:                .sessionTimeoutMs(Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_SESSION_TIMEOUT)))\n./backtype/storm/utils/Utils.java:                            Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_RETRY_INTERVAL)),\n./backtype/storm/utils/Utils.java:                            Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_RETRY_TIMES)),\n./backtype/storm/utils/Utils.java:                            Utils.getInt(conf.get(Config.STORM_ZOOKEEPER_RETRY_INTERVAL_CEILING))));\n./storm/trident/drpc/ReturnResultsReducer.java:            final int port = Utils.getInt(retMap.get(\"port\"));\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zhming","name":"zhming","key":"zhming","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10443","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10443","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10443","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10443"},"displayName":"Zhiming Guo","active":true,"timeZone":"Asia/Shanghai"},"created":"2014-07-09T01:22:34.408+0000","updated":"2014-07-09T01:22:34.408+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14055982","id":"14055982","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"I'm also investigating this issue.\n\nDefinitely using Utils.getInt() with long value leads problem.\n\n{quote}\n        System.out.println(new Long(Long.MAX_VALUE));\n        System.out.println(new Long(Long.MAX_VALUE).intValue());\n\n        System.out.println(new Long(Long.MIN_VALUE));\n        System.out.println(new Long(Long.MIN_VALUE).intValue());\n{quote}\n\nprints below\n{quote}\n9223372036854775807\n-1\n-9223372036854775808\n0\n{quote}\n(My develop environment is OSX 10.8 with JDK 1.7.0_55.)\n\nImplementation of Long.intValue(), it just type-cast long value to int.\nIt means type-casting picks lower 4 bytes from long but many situations we don't intend to.\n\nhttp://www.myhowto.org/java/60-understanding-the-primitive-numeric-type-conversions-in-java/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2014-07-09T08:15:08.200+0000","updated":"2014-07-09T08:19:02.005+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14056008","id":"14056008","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Also, there're no Utils.getLong().\nThere's only Utils.getInt() so all number parameters goes to integer.\nIt means we're having issues when long value is present. It would converted to  narrow and it maybe weird value.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2014-07-09T08:50:04.720+0000","updated":"2014-07-09T08:50:04.720+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14056063","id":"14056063","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"And we would lose precision when we convert integer or long to float, or long to double by explicit type-casting.\nhttp://www.informit.com/articles/article.aspx?p=1932926&seqNum=5\n\nSince type-casting is not safe with some situation, I think we should present getInt / getLong / getFloat / getDouble (Do we need getShort / getByte?), and let Config more strict.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2014-07-09T10:15:15.166+0000","updated":"2014-07-09T10:15:15.166+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14056387","id":"14056387","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"Like I said when I filed the JIRA there are two possibilities to fix this.  We can either update Config.java to properly enforce ranges for different numbers, based off of how they will be interpreted.  Or we need to update Utils.get{Int,Long,Etc.} to handle numbers outside of the allowed range in a sensible way. Possibly something like If the number is too big to fit, make it MAX whatever. If it is too small to fit make it MIN whatever.\n\nI think I would prefer to have Config be more restrictive, than to have the interpretation of the values be more lenient.\n\nIt should not be hard to come up with an IntegerValidator, LongValidator, etc. And replace all of the instances of Number.class with one of these two.  Or DoubleValidator, etc. if we find that they are being used that way instead.\n\nThere already is an PowerOf2Validator in ConfigValidation that you can use as a staring point.\nhttps://github.com/apache/incubator-storm/blob/master/storm-core/src/jvm/backtype/storm/ConfigValidation.java#L87-105\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2014-07-09T16:01:25.617+0000","updated":"2014-07-09T16:01:25.617+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14056859","id":"14056859","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"I agree. I think applying user's intention without modifying is better, so I'll try to restrict type.\nCurrently all things(configure params) seems to fine with Integer.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2014-07-09T22:31:19.951+0000","updated":"2014-07-09T22:31:19.951+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14058939","id":"14058939","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user HeartSaVioR opened a pull request:\n\n    https://github.com/apache/incubator-storm/pull/187\n\n    STORM-328 : More restrictive to Config, strict range check within Utils.getInt()\n\n    Related Issue : https://issues.apache.org/jira/browse/STORM-328\n    \n    There're some reasons to make this change.\n    \n    1. We use Utils.getInt() to read configuration parameters.\n    2. Utils.getInt() uses Long.intValue(). It just convert long to int by narrow conversion, using lowest 4 bytes so it would be weird value.\n    http://www.myhowto.org/java/60-understanding-the-primitive-numeric-type-conversions-in-java/\n    3. based on 2. we need to restrict configuration parameters using strict type validation.\n    (clojure seems to use long instead of int, so it should be with range check.)\n    \n    I checked parameter's type.\n    int is enough for most of these, topology sample rate needs double.\n    So I introduce IntegerValidator, IntegersValidator (for ports, etc), DoubleValidator.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/HeartSaVioR/incubator-storm STORM-328\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/incubator-storm/pull/187.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #187\n    \n----\ncommit 214ee7454548b884c591991b1faea770d1478cec\nAuthor: Jungtaek Lim <kabhwan@gmail.com>\nDate:   2014-07-11T15:59:01Z\n\n    STORM-328 More restrictive to Config, strict range check within Utils.getInt\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-11T16:15:19.980+0000","updated":"2014-07-11T16:15:19.980+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14058940","id":"14058940","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"I've post pull request to handle this issue.\n\nhttps://github.com/apache/incubator-storm/pull/187","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2014-07-11T16:15:49.619+0000","updated":"2014-07-11T16:15:49.619+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14059066","id":"14059066","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/187#issuecomment-48760269\n  \n    Looks good to me +1.  Because the patch is new we need to wait 2 days to give everyone else a chance to comment too. I'll try to merge this in Monday or Tuesday, if I forget please yell at me so I remember.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-11T17:39:37.090+0000","updated":"2014-07-11T17:39:37.090+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14059102","id":"14059102","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/187#discussion_r14834365\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/ConfigValidation.java ---\n    @@ -82,6 +82,76 @@ public void validateField(String name, Object field)\n         public static Object MapsValidator = FieldListValidatorFactory(Map.class);\n     \n         /**\n    +     * Validates a Integer.\n    +     */\n    +    public static Object IntegerValidator = new FieldValidator() {\n    +        @Override\n    +        public void validateField(String name, Object o) throws IllegalArgumentException {\n    +            if (o == null) {\n    +                // A null value is acceptable.\n    --- End diff --\n    \n    Before this change, a null value for these fields would throw an exception:\n    https://github.com/apache/incubator-storm/blob/master/storm-core/src/clj/backtype/storm/config.clj#L51\n    \n    Now, when it is null, it will pass validation.\n    \n    This is probably fine, but wanted to bring it up since it is a change.\n    \n    (This is not the case with the new `IntegersValidator` below.)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-11T17:56:05.885+0000","updated":"2014-07-11T17:56:05.885+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14059105","id":"14059105","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/187#discussion_r14834476\n  \n    --- Diff: storm-core/test/clj/backtype/storm/config_test.clj ---\n    @@ -65,13 +65,41 @@\n                     (.validateField validator \"test\" x)\n                     (catch Exception e e)))))))\n     \n    -(deftest test-topology-workers-is-number\n    +(deftest test-integer-validator\n    +   (let [validator ConfigValidation/IntegerValidator]\n    +        (.validateField validator \"test\" 1000)\n    +        (is (thrown-cause? java.lang.IllegalArgumentException\n    +           (.validateField validator \"test\" 1.34)))\n    +        (is (thrown-cause? java.lang.IllegalArgumentException\n    +           (.validateField validator \"test\" 9223372036854775807)))))\n    --- End diff --\n    \n    Could use `(inc Integer/MAX_VALUE)` here, but not really a big deal.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-11T17:58:07.166+0000","updated":"2014-07-11T17:58:07.166+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14059184","id":"14059184","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/187#issuecomment-48768039\n  \n    +1 Have a couple of comments, but they are very minor.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-11T18:46:29.609+0000","updated":"2014-07-11T18:46:29.609+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14059532","id":"14059532","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/187#discussion_r14849803\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/ConfigValidation.java ---\n    @@ -82,6 +82,76 @@ public void validateField(String name, Object field)\n         public static Object MapsValidator = FieldListValidatorFactory(Map.class);\n     \n         /**\n    +     * Validates a Integer.\n    +     */\n    +    public static Object IntegerValidator = new FieldValidator() {\n    +        @Override\n    +        public void validateField(String name, Object o) throws IllegalArgumentException {\n    +            if (o == null) {\n    +                // A null value is acceptable.\n    --- End diff --\n    \n    @d2r I'm not familiar with clojure, but it seems that line 51 you commented is about Class, not value.\n    \n    ````\n    (defmethod get-FieldValidator Object\n      [klass]\n      {:pre [(not (nil? klass))]}\n      (reify ConfigValidation$FieldValidator\n        (validateField [this name v]\n                       (if (and (not (nil? v))\n                                (not (instance? klass v)))\n                         (throw (IllegalArgumentException.\n                                  (str \"field \" name \" '\" v \"' must be a '\" (.getName klass) \"'\")))))))\n    ````\n    \n    Actually it have been allowed null value.\n    It throws IllegalArgumentException when value is not null and value is not instance of Class.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-12T00:09:44.679+0000","updated":"2014-07-12T00:09:44.679+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14059546","id":"14059546","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/187#discussion_r14850130\n  \n    --- Diff: storm-core/test/clj/backtype/storm/config_test.clj ---\n    @@ -65,13 +65,41 @@\n                     (.validateField validator \"test\" x)\n                     (catch Exception e e)))))))\n     \n    -(deftest test-topology-workers-is-number\n    +(deftest test-integer-validator\n    +   (let [validator ConfigValidation/IntegerValidator]\n    +        (.validateField validator \"test\" 1000)\n    +        (is (thrown-cause? java.lang.IllegalArgumentException\n    +           (.validateField validator \"test\" 1.34)))\n    +        (is (thrown-cause? java.lang.IllegalArgumentException\n    +           (.validateField validator \"test\" 9223372036854775807)))))\n    --- End diff --\n    \n    @d2r I replaced magic numbers to actual meaning. \n    It would be more easy to understand. Thank you for comment!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-12T00:29:26.063+0000","updated":"2014-07-12T00:29:26.063+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14061312","id":"14061312","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/187#discussion_r14906679\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/ConfigValidation.java ---\n    @@ -82,6 +82,76 @@ public void validateField(String name, Object field)\n         public static Object MapsValidator = FieldListValidatorFactory(Map.class);\n     \n         /**\n    +     * Validates a Integer.\n    +     */\n    +    public static Object IntegerValidator = new FieldValidator() {\n    +        @Override\n    +        public void validateField(String name, Object o) throws IllegalArgumentException {\n    +            if (o == null) {\n    +                // A null value is acceptable.\n    --- End diff --\n    \n    @HeartSaVioR, you are correct, the null check was for the field's class and not its value as you stated.  I misremembered and misread my own code. :)\n    \n    And I see in cc5f1f6 that you have added test code to cover the nil value case for Integer, Integers, and Double.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-14T21:50:40.810+0000","updated":"2014-07-14T21:50:40.810+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14061313","id":"14061313","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/187#issuecomment-48964845\n  \n    +1 looks good.  Tests pass for me.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-14T21:51:02.073+0000","updated":"2014-07-14T21:51:02.073+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14061380","id":"14061380","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/187#issuecomment-48969984\n  \n    @d2r Thanks for reviewing! :)\n    @revans2 At this time I think PR can be merged. :)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-14T22:45:48.575+0000","updated":"2014-07-14T22:45:48.575+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14061515","id":"14061515","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user mjzshd commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/187#issuecomment-48980409\n  \n    (**Off-topic**) Can somebody tell me how to test a single Clojure test, for example the `config-test.clj`?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-15T01:22:42.705+0000","updated":"2014-07-15T01:22:42.705+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14062047","id":"14062047","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/187#issuecomment-49031014\n  \n    > (Off-topic) Can somebody tell me how to test a single Clojure test, for example the config-test.clj?\n    \n    https://github.com/apache/incubator-storm/pull/14#issuecomment-31481945\n    \n    We could definitely use a custom clojure test runner that would do this based on arguments to maven CLI.  Right now it simply runs any test that it finds.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-15T13:29:00.318+0000","updated":"2014-07-15T13:29:00.318+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14062111","id":"14062111","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"[~kabhwan] thanks for the contribution.  I have merged your pull request into master.  Keep up the good work.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2014-07-15T14:22:08.597+0000","updated":"2014-07-15T14:22:08.597+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14062731","id":"14062731","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/incubator-storm/pull/187\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-15T21:59:45.388+0000","updated":"2014-07-15T21:59:45.388+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12715487/comment/14062768","id":"14062768","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/187#issuecomment-49101256\n  \n    @revans2 Thanks for merging! :)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-15T22:25:13.856+0000","updated":"2014-07-15T22:25:13.856+0000"}],"maxResults":22,"total":22,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-328/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1vsxz:"}}