{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12786813","self":"https://issues.apache.org/jira/rest/api/2/issue/12786813","key":"STORM-737","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327123","id":"12327123","description":"security feature branch","name":"0.10.0","archived":false,"released":true,"releaseDate":"2015-11-05"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2015-04-12T11:49:00.915+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Jul 27 23:00:24 UTC 2015","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_10296055320_*|*_5_*:*_1_*:*_0","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2015-07-27T23:00:23.996+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-737/watchers","watchCount":5,"isWatching":false},"created":"2015-03-30T18:59:28.733+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326452","id":"12326452","name":"0.9.2-incubating","archived":false,"released":true,"releaseDate":"2014-06-25"}],"customfield_12312339":null,"issuelinks":[{"id":"12421242","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12421242","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12820758","key":"STORM-770","self":"https://issues.apache.org/jira/rest/api/2/issue/12820758","fields":{"summary":"NullPointerException in consumeBatchToCursor","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12412307","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12412307","type":{"id":"12310051","name":"Supercedes","inward":"is superceded by","outward":"supercedes","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310051"},"outwardIssue":{"id":"12761709","key":"STORM-593","self":"https://issues.apache.org/jira/rest/api/2/issue/12761709","fields":{"summary":"No need of rwlock for clojure atom ","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}}],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-10-05T00:55:28.147+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12327950","id":"12327950","name":"storm-core","description":"Core storm daemons and APIs including trident"}],"timeoriginalestimate":null,"description":"There is a race condition in the worker code that can allow for a send() to be called on a closed connection.\n\n[Discussion|https://github.com/apache/storm/pull/349#issuecomment-87778672]\n\nThe assignment mapping from task -> node+port needs to be read and used in the read lock when sending, so that an accurate mapping is used that does not include any connections that are closed.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Workers may try to send to closed connections","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagit","name":"dagit","key":"dagit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagit&avatarId=25742","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagit&avatarId=25742","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagit&avatarId=25742","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagit&avatarId=25742"},"displayName":"Derek Dagit","active":true,"timeZone":"America/Chicago"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagit","name":"dagit","key":"dagit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagit&avatarId=25742","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagit&avatarId=25742","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagit&avatarId=25742","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagit&avatarId=25742"},"displayName":"Derek Dagit","active":true,"timeZone":"America/Chicago"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14491436","id":"14491436","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=staslev","name":"staslev","key":"staslev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=staslev&avatarId=30630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=staslev&avatarId=30630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=staslev&avatarId=30630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=staslev&avatarId=30630"},"displayName":"Stas Levin","active":true,"timeZone":"Asia/Jerusalem"},"body":"We got the following exception after our topology had been up for ~2 days, and I was wondering if it might be related. \nLooks like \"task\" in \"mk-transfer-fn\" is null, making \"(.add remote (TaskMessage. task (.serialize serializer tuple)))\" fail on NPE (worker.clj:128, storm-core-0.9.2-incubating.jar)\n\njava.lang.RuntimeException: java.lang.NullPointerException\n\tat backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:128) ~[storm-core-0.9.2-incubating.jar:0.9.2-incubating]\n\tat backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(DisruptorQueue.java:99) ~[storm-core-0.9.2-incubating.jar:0.9.2-incubating]\n\tat backtype.storm.disruptor$consume_batch_when_available.invoke(disruptor.clj:80) ~[storm-core-0.9.2-incubating.jar:0.9.2-incubating]\n\tat backtype.storm.disruptor$consume_loop_STAR_$fn__758.invoke(disruptor.clj:94) ~[storm-core-0.9.2-incubating.jar:0.9.2-incubating]\n\tat backtype.storm.util$async_loop$fn__457.invoke(util.clj:431) ~[storm-core-0.9.2-incubating.jar:0.9.2-incubating]\n\tat clojure.lang.AFn.run(AFn.java:24) [clojure-1.5.1.jar:na]\n\tat java.lang.Thread.run(Thread.java:745) [na:1.7.0_72]\nCaused by: java.lang.NullPointerException: null\n\tat clojure.lang.RT.intCast(RT.java:1087) ~[clojure-1.5.1.jar:na]\n\tat backtype.storm.daemon.worker$mk_transfer_fn$fn__5748.invoke(worker.clj:128) ~[storm-core-0.9.2-incubating.jar:0.9.2-incubating]\n\tat backtype.storm.daemon.executor$start_batch_transfer__GT_worker_handler_BANG_$fn__5483.invoke(executor.clj:256) ~[storm-core-0.9.2-incubating.jar:0.9.2-incubating]\n\tat backtype.storm.disruptor$clojure_handler$reify__745.onEvent(disruptor.clj:58) ~[storm-core-0.9.2-incubating.jar:0.9.2-incubating]\n\tat backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:125) ~[storm-core-0.9.2-incubating.jar:0.9.2-incubating]\n\t... 6 common frames omitted,java.lang.RuntimeException: java.lang.NullPointerException\n\nAny ideas?\n\nP.S.\nAlso saw it here: \nhttp://mail-archives.apache.org/mod_mbox/storm-user/201501.mbox/%3CCABcMBhCusXXU=V1e66wfUATGYH1euQnd1SiOG65-Tp8xLWx0ww@mail.gmail.com%3E","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=staslev","name":"staslev","key":"staslev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=staslev&avatarId=30630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=staslev&avatarId=30630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=staslev&avatarId=30630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=staslev&avatarId=30630"},"displayName":"Stas Levin","active":true,"timeZone":"Asia/Jerusalem"},"created":"2015-04-12T11:49:00.915+0000","updated":"2015-04-12T13:14:26.075+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14493198","id":"14493198","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user HeartSaVioR opened a pull request:\n\n    https://github.com/apache/storm/pull/521\n\n    [STORM-737] Check task->node+port with read lock to prevent sending to closed connection\n\n    It's based on Nathan's comment, please refer to https://github.com/apache/storm/pull/349#issuecomment-87778672\n    \n    https://github.com/apache/storm/commit/861a92eab8740cfc0f83ac4d7ade9a2ab04a8b9b seems to make a regression. \n    But it also introduces optimizations of sending, it shouldn't be discarded.\n    \n    I changed send logic to let TransferDrainer matches task to node+port so then we can still enjoy optimization of sending logic.\n    \n    I'm still not familiar with clojure so please review and comment if it can be optimized.\n    Thanks!\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/HeartSaVioR/storm STORM-737\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/521.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #521\n    \n----\ncommit a1d7b3eb343f304565fe24fb7e0151bfbcb3824e\nAuthor: Jungtaek Lim <kabhwan@gmail.com>\nDate:   2015-04-13T22:16:37Z\n\n    While sending tuple, check task->node+port with read lock\n    \n    * we can ensure task->node+port is safe within read lock\n    ** refer write lock inside of mk-refresh-connections\n    * Let TransferDrainer matches task to node+port\n    ** So then we can still enjoy optimization of sending logic\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-04-13T22:28:29.873+0000","updated":"2015-04-13T22:28:29.873+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14493212","id":"14493212","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"[~staslev] \nSeems like it would be better to file a new issue about your situation since root cause is not discovered.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2015-04-13T22:46:23.847+0000","updated":"2015-04-13T22:46:23.847+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14493815","id":"14493815","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=staslev","name":"staslev","key":"staslev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=staslev&avatarId=30630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=staslev&avatarId=30630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=staslev&avatarId=30630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=staslev&avatarId=30630"},"displayName":"Stas Levin","active":true,"timeZone":"Asia/Jerusalem"},"body":"Opened STORM-770","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=staslev","name":"staslev","key":"staslev","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=staslev&avatarId=30630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=staslev&avatarId=30630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=staslev&avatarId=30630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=staslev&avatarId=30630"},"displayName":"Stas Levin","active":true,"timeZone":"Asia/Jerusalem"},"created":"2015-04-14T08:59:38.315+0000","updated":"2015-04-14T08:59:38.315+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14527308","id":"14527308","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-98850849\n  \n    @nathanmarz @d2r You may want to take a look since it's based on your discussion, https://github.com/apache/storm/pull/349#issuecomment-87778672.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-04T21:11:18.562+0000","updated":"2015-05-04T21:11:18.562+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14527377","id":"14527377","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-98857155\n  \n    @HeartSaVioR , I am sorry I have been swamped with another task, and I have not had a chance to review.\n    \n    I had a [branch](https://github.com/apache/storm/compare/master...d2r:storm-737-prevent-send-to-invalid-socket), but I had not taken an opportunity to really test it yet.\n    \n    I will try to get back to this within the week.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-04T21:46:46.989+0000","updated":"2015-05-04T21:46:46.989+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14527863","id":"14527863","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-98942013\n  \n    @d2r Thanks for comment, I can wait it. :)\n    \n    Btw, your branch doesn't follow Nathan's comment.\n    ```\n    In short, the code in the write-lock is fine – it's the code in the read lock that needs to be fixed. As part of that, the code looking up the node+port for a task needs to be moved back to this function and not happen before the tuple goes on the transfer queue.\n    ```\n    Root reason is from mk-transfer-fn. \n    It matches task and node+port but there's some latencies from adding Transfer queue to sending via Netty. Task to node+port can be changed during latency so we should delegate matching it to very close to sending, within read lock to get safely.\n    \n    So I'd like you to compare mine and yours when you come back. Thanks!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-05T04:03:39.888+0000","updated":"2015-05-05T04:03:39.888+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14540454","id":"14540454","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-101382574\n  \n    @HeartSaVioR \n    \n    Thanks for taking a look. Well, I was trying to follow his comments. :)\n    \n    I noticed though, that the line in my `let` binding\n    ```Clojure\n    valid-node+ports (vals task->node+port)\n    ```\n    maybe should have been\n    ```Clojure\n    valid-node+ports (vals @task->node+port)\n    ```\n    with the `@`.\n    \n    `task->node+port` is actually an atom, however, so if we dereference it within the read-lock there, we should have the accurate task assignment before we add anything to the queue to be sent.  I believe this addresses the concern you cited from @nathanmarz.  The other change was to encapsulate the separate TransferDrainer#add, since it does not need to be a separate public method.\n    \n    So, @HeartSaVioR, since we have both looked at my branch already, do you want to take my changes into your branch and continue the discussion from there?  It seems like a smaller set of changes to begin with, and maybe it would be easier going forward?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-12T18:44:29.392+0000","updated":"2015-05-12T18:44:29.392+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14540918","id":"14540918","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-101446038\n  \n    @d2r \n    First of all, I'm sorry I did some mistakes about expression.\n    I mean, your approach follows some of Nathan's comment, but not all.\n    Your patch can also resolve STORM-737, with dropping some tuples when task->node+port is changed, while we can save these.\n    \n    @nathanmarz said 861a92e made a regression, so it means, before applying 861a92e (0666c41387fc11c0422b26ab27ebc38c30fe26af) was right.\n    AFAIK mk-transfer-fn is looking inside task->node+port while it should be handled from read-lock, and that's the point of regression.\n    You can find out I'm trying to revert it when you see changeset of mk-transfer-tuples-handler in that commit.\n    Current PR takes same logic (yes, same) from old thing but playing with TransferDrainer.\n    \n    * PR\n    ```\n    (defn mk-transfer-tuples-handler [worker]\n      (let [^DisruptorQueue transfer-queue (:transfer-queue worker)\n            drainer (TransferDrainer.)\n            node+port->socket (:cached-node+port->socket worker)\n            task->node+port (:cached-task->node+port worker)\n            endpoint-socket-lock (:endpoint-socket-lock worker)\n            ]\n        (disruptor/clojure-handler\n          (fn [packets _ batch-end?]\n            (.add drainer packets)\n            \n            (when batch-end?\n              (read-locked endpoint-socket-lock\n                (let [node+port->socket @node+port->socket\n                      task->node+port @task->node+port]\n                  (.send drainer task->node+port node+port->socket)))\n              (.clear drainer))))))\n    ```\n    \n    * Old (that Nathan said it was right)\n    https://github.com/apache/storm/blob/0666c41387fc11c0422b26ab27ebc38c30fe26af/storm-core/src/clj/backtype/storm/daemon/worker.clj\n    ```\n    (defn mk-transfer-tuples-handler [worker]\n      (let [^DisruptorQueue transfer-queue (:transfer-queue worker)\n            drainer (ArrayList.)\n            node+port->socket (:cached-node+port->socket worker)\n            task->node+port (:cached-task->node+port worker)\n            endpoint-socket-lock (:endpoint-socket-lock worker)\n            ]\n        (disruptor/clojure-handler\n          (fn [packets _ batch-end?]\n            (.addAll drainer packets)\n            (when batch-end?\n              (read-locked endpoint-socket-lock\n                (let [node+port->socket @node+port->socket\n                      task->node+port @task->node+port]\n                  ;; consider doing some automatic batching here (would need to not be serialized at this point to remove per-tuple overhead)\n                  ;; try using multipart messages ... first sort the tuples by the target node (without changing the local ordering)\n                \n                  (fast-list-iter [[task ser-tuple] drainer]\n                    ;; TODO: consider write a batch of tuples here to every target worker  \n                    ;; group by node+port, do multipart send              \n                    (let [node-port (get task->node+port task)]\n                      (when node-port\n                        (.send ^IConnection (get node+port->socket node-port) task ser-tuple))\n                        ))))\n              (.clear drainer))))))\n    ```\n    \n    So, I'd like you to review current PR, and find out issues, and go together.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-12T22:40:42.224+0000","updated":"2015-05-12T22:40:42.224+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14540936","id":"14540936","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-101449371\n  \n    Please note that packets shouldn't have values which can be changed while passing to transfer flow.\n    task->node+port can be changed (I mean node+port for tuple can be changed), but task id for tuple is not.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-12T22:48:30.147+0000","updated":"2015-05-12T22:48:30.147+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14541162","id":"14541162","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-101475237\n  \n    > @d2r\n    > First of all, I'm sorry I did some mistakes about expression.\n    \n    No worries.\n    \n    > So, I'd like you to review current PR, and find out issues, and go together.\n    \n    OK, sounds good to me. Let me take a look.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T01:19:30.004+0000","updated":"2015-05-13T01:19:30.004+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14541164","id":"14541164","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30196125\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/utils/TransferDrainer.java ---\n    @@ -26,10 +26,10 @@\n     \n     public class TransferDrainer {\n     \n    -  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n    +  private HashMap<Integer, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n       \n    -  public void add(HashMap<String, ArrayList<TaskMessage>> workerTupleSetMap) {\n    -    for (String key : workerTupleSetMap.keySet()) {\n    +  public void add(HashMap<Integer, ArrayList<TaskMessage>> taskTupleSetMap) {\n    --- End diff --\n    \n    We should remove `add` or make it private, as per [this comment](https://github.com/apache/storm/pull/349#issuecomment-87767343).  There is no need to have separate `add` and `send` methods here.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T01:22:30.338+0000","updated":"2015-05-13T01:22:30.338+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14541180","id":"14541180","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-101480982\n  \n    I see 4 test errors using your branch.  They all appear to be test timeouts.\n    \n    * integration-test/test-basic-topology\n    * messaging-test/\n       * test-receiver-message-order\n       * test-local-transport\n    * netty-integration-test/test-integration\n    \n    I ran `mvn test` on Linux and OSX and got the same results.  Can you please check?\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T01:52:00.772+0000","updated":"2015-05-13T01:52:00.772+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14541182","id":"14541182","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30197303\n  \n    --- Diff: storm-core/src/clj/backtype/storm/daemon/worker.clj ---\n    @@ -139,12 +139,12 @@\n                       (.add local pair) \n     \n                       ;;Using java objects directly to avoid performance issues in java code\n    -                  (let [node+port (get @task->node+port task)]\n    -                    (when (not (.get remoteMap node+port))\n    -                      (.put remoteMap node+port (ArrayList.)))\n    -                    (let [remote (.get remoteMap node+port)]\n    +                  (let []\n    +                    (when (not (.get remoteMap task))\n    +                      (.put remoteMap task (ArrayList.)))\n    +                    (let [remote (.get remoteMap task)]\n                           (.add remote (TaskMessage. task (.serialize serializer tuple)))\n    -                     )))) \n    +                    ))))\n    --- End diff --\n    \n    If we use `task` as the key, doesn't that mean we are no longer batching tuples that go to the same `node+port`?  I think we want to do this.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T01:53:49.981+0000","updated":"2015-05-13T01:53:49.981+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14541184","id":"14541184","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30197344\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/utils/TransferDrainer.java ---\n    @@ -26,10 +26,10 @@\n     \n     public class TransferDrainer {\n     \n    -  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n    +  private HashMap<Integer, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n       \n    -  public void add(HashMap<String, ArrayList<TaskMessage>> workerTupleSetMap) {\n    -    for (String key : workerTupleSetMap.keySet()) {\n    +  public void add(HashMap<Integer, ArrayList<TaskMessage>> taskTupleSetMap) {\n    --- End diff --\n    \n    @d2r \n    Yes, we don't need this since we're adding tuples and sending it immediately. \n    I'll make it private and add parameter to send. Thanks!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T01:54:51.007+0000","updated":"2015-05-13T01:54:51.007+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14541193","id":"14541193","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30197889\n  \n    --- Diff: storm-core/src/clj/backtype/storm/daemon/worker.clj ---\n    @@ -139,12 +139,12 @@\n                       (.add local pair) \n     \n                       ;;Using java objects directly to avoid performance issues in java code\n    -                  (let [node+port (get @task->node+port task)]\n    -                    (when (not (.get remoteMap node+port))\n    -                      (.put remoteMap node+port (ArrayList.)))\n    -                    (let [remote (.get remoteMap node+port)]\n    +                  (let []\n    +                    (when (not (.get remoteMap task))\n    +                      (.put remoteMap task (ArrayList.)))\n    +                    (let [remote (.get remoteMap task)]\n                           (.add remote (TaskMessage. task (.serialize serializer tuple)))\n    -                     )))) \n    +                    ))))\n    --- End diff --\n    \n    @d2r \n    Yes, TransferDrainer doesn't have to do it.\n    Btw, it makes me think that we may don't need to play with TransferDrainer since its main role is grouping tuples by node+port.\n    \n    Could you confirm that I'm right?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T02:10:11.406+0000","updated":"2015-05-13T02:10:11.406+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14541200","id":"14541200","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30198050\n  \n    --- Diff: storm-core/src/clj/backtype/storm/daemon/worker.clj ---\n    @@ -139,12 +139,12 @@\n                       (.add local pair) \n     \n                       ;;Using java objects directly to avoid performance issues in java code\n    -                  (let [node+port (get @task->node+port task)]\n    -                    (when (not (.get remoteMap node+port))\n    -                      (.put remoteMap node+port (ArrayList.)))\n    -                    (let [remote (.get remoteMap node+port)]\n    +                  (let []\n    +                    (when (not (.get remoteMap task))\n    +                      (.put remoteMap task (ArrayList.)))\n    +                    (let [remote (.get remoteMap task)]\n                           (.add remote (TaskMessage. task (.serialize serializer tuple)))\n    -                     )))) \n    +                    ))))\n    --- End diff --\n    \n    @d2r \n    Maybe I misunderstood your comment.\n    Seems like I grouped tuples by task, not node+port. It should be grouped again from mk-transfer-tuples-handler.\n    I'll fix it. Maybe TransferDrainer can help this, so please forget about last comment.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T02:15:07.711+0000","updated":"2015-05-13T02:15:07.711+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14541284","id":"14541284","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30201415\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/utils/TransferDrainer.java ---\n    @@ -26,10 +26,10 @@\n     \n     public class TransferDrainer {\n     \n    -  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n    +  private HashMap<Integer, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n       \n    -  public void add(HashMap<String, ArrayList<TaskMessage>> workerTupleSetMap) {\n    -    for (String key : workerTupleSetMap.keySet()) {\n    +  public void add(HashMap<Integer, ArrayList<TaskMessage>> taskTupleSetMap) {\n    --- End diff --\n    \n    @d2r \n    Looking it again, it should stores tuples to buffer unless batch-end? is true.\n    0666c41 stores tuples to ArrayList, and 861a92e just stores tuples to TransferDrainer itself.\n    So if we changed add() to private or remove add(), we should introduce another buffer, which role may be duplicated to TransferDrainer.\n    (It may not an issue when batch-end? is always true, but I don't know.)\n    \n    Which one do you think is better?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T04:13:48.608+0000","updated":"2015-05-13T04:13:48.608+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14541342","id":"14541342","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-101515533\n  \n    @d2r I can't reproduce test failures. I'll give it a try again.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T05:15:20.554+0000","updated":"2015-05-13T05:15:20.554+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14541825","id":"14541825","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30225056\n  \n    --- Diff: storm-core/src/clj/backtype/storm/daemon/worker.clj ---\n    @@ -139,12 +139,12 @@\n                       (.add local pair) \n     \n                       ;;Using java objects directly to avoid performance issues in java code\n    -                  (let [node+port (get @task->node+port task)]\n    -                    (when (not (.get remoteMap node+port))\n    -                      (.put remoteMap node+port (ArrayList.)))\n    -                    (let [remote (.get remoteMap node+port)]\n    +                  (let []\n    +                    (when (not (.get remoteMap task))\n    +                      (.put remoteMap task (ArrayList.)))\n    +                    (let [remote (.get remoteMap task)]\n                           (.add remote (TaskMessage. task (.serialize serializer tuple)))\n    -                     )))) \n    +                    ))))\n    --- End diff --\n    \n    Yeah, maybe that part we do not need to change.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T12:25:34.536+0000","updated":"2015-05-13T12:25:34.536+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14541826","id":"14541826","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-101648482\n  \n    > @d2r I can't reproduce test failures. I'll give it a try again.\n    \n    OK, please update your branch, and I will re-run the tests.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T12:26:29.034+0000","updated":"2015-05-13T12:26:29.034+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14542788","id":"14542788","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-101825293\n  \n    @d2r \n    Modified TransferDrainer to re-group messages by destination when send has called.\n    I left TransferDrainer.add() cause it plays as buffer, but I'm ready to remove Transfer.add() when we think it's better to have other buffer.\n    I've done upmerging, and ran unit tests with no issue.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T21:45:11.367+0000","updated":"2015-05-13T21:45:11.367+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14542791","id":"14542791","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-101826046\n  \n    @clockfly \n    I'd like you to have a look since I don't want to destroy your optimization, but just fix the issue.\n    Thanks in advance!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T21:49:23.113+0000","updated":"2015-05-13T21:49:23.113+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14542828","id":"14542828","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-101831525\n  \n    We may be better to revert mk-transfer-fn to 0666c41387fc11c0422b26ab27ebc38c30fe26af as grouping by task can be handled (or doesn't need to be handled) from mk-transfer-tuples-handler.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T22:08:38.851+0000","updated":"2015-05-13T22:08:38.851+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14542836","id":"14542836","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Please ignore this comment. I'll try other approach and talk it later.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2015-05-13T22:17:48.748+0000","updated":"2015-05-13T22:17:48.748+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14542876","id":"14542876","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-101841901\n  \n    I made another changeset which reverts whole things to 0666c41 (without ```try-serialize-local```) but leaves TransferDrainer as buffer and grouper (by host+port).\n    https://github.com/HeartSaVioR/storm/commit/6ef2f11e9eade772c8ae67a6410d537871739938\n    \n    If we think latter is better to move on, I'll post a new PR based on 6ef2f11e9eade772c8ae67a6410d537871739938.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-13T22:58:34.615+0000","updated":"2015-05-13T22:58:34.615+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14546880","id":"14546880","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30463274\n  \n    --- Diff: storm-core/src/clj/backtype/storm/daemon/worker.clj ---\n    @@ -139,12 +139,12 @@\n                       (.add local pair) \n     \n                       ;;Using java objects directly to avoid performance issues in java code\n    -                  (let [node+port (get @task->node+port task)]\n    -                    (when (not (.get remoteMap node+port))\n    -                      (.put remoteMap node+port (ArrayList.)))\n    -                    (let [remote (.get remoteMap node+port)]\n    +                  (let []\n    +                    (when (not (.get remoteMap task))\n    +                      (.put remoteMap task (ArrayList.)))\n    +                    (let [remote (.get remoteMap task)]\n                           (.add remote (TaskMessage. task (.serialize serializer tuple)))\n    -                     )))) \n    +                    ))))\n    --- End diff --\n    \n    If we leave the code here unchanged, we will not need to re-group by destination later.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-16T18:20:46.635+0000","updated":"2015-05-16T18:20:46.635+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14546882","id":"14546882","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30463289\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/utils/TransferDrainer.java ---\n    @@ -23,40 +23,62 @@\n     \n     import backtype.storm.messaging.IConnection;\n     import backtype.storm.messaging.TaskMessage;\n    +import com.google.common.collect.Maps;\n     \n     public class TransferDrainer {\n     \n    -  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n    +  private HashMap<Integer, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n       \n    -  public void add(HashMap<String, ArrayList<TaskMessage>> workerTupleSetMap) {\n    -    for (String key : workerTupleSetMap.keySet()) {\n    -      \n    -      ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(key);\n    -      if (null == bundle) {\n    -        bundle = new ArrayList<ArrayList<TaskMessage>>();\n    -        bundles.put(key, bundle);\n    -      }\n    -      \n    -      ArrayList tupleSet = workerTupleSetMap.get(key);\n    -      if (null != tupleSet && tupleSet.size() > 0) {\n    -        bundle.add(tupleSet);\n    -      }\n    -    } \n    +  public void add(HashMap<Integer, ArrayList<TaskMessage>> taskTupleSetMap) {\n    +    for (Integer task : taskTupleSetMap.keySet()) {\n    +      addListRefToMap(this.bundles, task, taskTupleSetMap.get(task));\n    +    }\n    --- End diff --\n    \n    This does not need to be public.  It is not necessary to separately add and send.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-16T18:22:39.114+0000","updated":"2015-05-16T18:22:39.114+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14547031","id":"14547031","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30466949\n  \n    --- Diff: storm-core/src/clj/backtype/storm/daemon/worker.clj ---\n    @@ -139,12 +139,12 @@\n                       (.add local pair) \n     \n                       ;;Using java objects directly to avoid performance issues in java code\n    -                  (let [node+port (get @task->node+port task)]\n    -                    (when (not (.get remoteMap node+port))\n    -                      (.put remoteMap node+port (ArrayList.)))\n    -                    (let [remote (.get remoteMap node+port)]\n    +                  (let []\n    +                    (when (not (.get remoteMap task))\n    +                      (.put remoteMap task (ArrayList.)))\n    +                    (let [remote (.get remoteMap task)]\n                           (.add remote (TaskMessage. task (.serialize serializer tuple)))\n    -                     )))) \n    +                    ))))\n    --- End diff --\n    \n    @d2r \n    Think about situation like \n    \n    * tuples which consist of \n      * 3 tuples corresponding to task 1 (worker A) -- (A)\n      * 5 tuples corresponding to task 2 (worker A) -- (B)\n      * 2 tuples corresponding to task 3 (worker B) -- (C)\n    \n    We can ensure we send tuples to proper worker since we check task->node+port with read lock.\n    But if we don't re-group messages by worker, we'll send tuples batched by task, not worker.\n    It means, though we can send 10 tuples at a moment, we send batched tuples (A), (B) to worker A separately.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-17T03:07:16.141+0000","updated":"2015-05-17T03:07:16.141+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14547032","id":"14547032","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30466962\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/utils/TransferDrainer.java ---\n    @@ -23,40 +23,62 @@\n     \n     import backtype.storm.messaging.IConnection;\n     import backtype.storm.messaging.TaskMessage;\n    +import com.google.common.collect.Maps;\n     \n     public class TransferDrainer {\n     \n    -  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n    +  private HashMap<Integer, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n       \n    -  public void add(HashMap<String, ArrayList<TaskMessage>> workerTupleSetMap) {\n    -    for (String key : workerTupleSetMap.keySet()) {\n    -      \n    -      ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(key);\n    -      if (null == bundle) {\n    -        bundle = new ArrayList<ArrayList<TaskMessage>>();\n    -        bundles.put(key, bundle);\n    -      }\n    -      \n    -      ArrayList tupleSet = workerTupleSetMap.get(key);\n    -      if (null != tupleSet && tupleSet.size() > 0) {\n    -        bundle.add(tupleSet);\n    -      }\n    -    } \n    +  public void add(HashMap<Integer, ArrayList<TaskMessage>> taskTupleSetMap) {\n    +    for (Integer task : taskTupleSetMap.keySet()) {\n    +      addListRefToMap(this.bundles, task, taskTupleSetMap.get(task));\n    +    }\n    --- End diff --\n    \n    @d2r Please check my previous comment.\n    https://github.com/apache/storm/pull/521#discussion_r30201415\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-17T03:09:28.334+0000","updated":"2015-05-17T03:09:28.334+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14547050","id":"14547050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-102749917\n  \n    Nathan's comments for clarifying its real issue completely makes sense.\n    But we should verify what codes we should change while applying.\n    IMO it is a critical path for transfer efficiency, so it would be better to have more reviewer for this patch.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-17T05:42:37.404+0000","updated":"2015-05-17T05:42:37.404+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14548063","id":"14548063","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30511279\n  \n    --- Diff: storm-core/src/clj/backtype/storm/daemon/worker.clj ---\n    @@ -139,12 +139,12 @@\n                       (.add local pair) \n     \n                       ;;Using java objects directly to avoid performance issues in java code\n    -                  (let [node+port (get @task->node+port task)]\n    -                    (when (not (.get remoteMap node+port))\n    -                      (.put remoteMap node+port (ArrayList.)))\n    -                    (let [remote (.get remoteMap node+port)]\n    +                  (let []\n    +                    (when (not (.get remoteMap task))\n    +                      (.put remoteMap task (ArrayList.)))\n    +                    (let [remote (.get remoteMap task)]\n                           (.add remote (TaskMessage. task (.serialize serializer tuple)))\n    -                     )))) \n    +                    ))))\n    --- End diff --\n    \n    I think we both agree.\n    \n    I suggest we do not change L132-137, since it already groups by destination.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T14:22:15.313+0000","updated":"2015-05-18T14:22:15.313+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14548098","id":"14548098","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30513365\n  \n    --- Diff: storm-core/src/clj/backtype/storm/daemon/worker.clj ---\n    @@ -139,12 +139,12 @@\n                       (.add local pair) \n     \n                       ;;Using java objects directly to avoid performance issues in java code\n    -                  (let [node+port (get @task->node+port task)]\n    -                    (when (not (.get remoteMap node+port))\n    -                      (.put remoteMap node+port (ArrayList.)))\n    -                    (let [remote (.get remoteMap node+port)]\n    +                  (let []\n    +                    (when (not (.get remoteMap task))\n    +                      (.put remoteMap task (ArrayList.)))\n    +                    (let [remote (.get remoteMap task)]\n                           (.add remote (TaskMessage. task (.serialize serializer tuple)))\n    -                     )))) \n    +                    ))))\n    --- End diff --\n    \n    @d2r \n    Accessing task->node+port from these lines is root of this problem since it can be changed during preparing for transfer. So we should change current implementation to not accessing task->node+port.\n    It should be grouped by destination (node and port) within read lock.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T14:42:49.338+0000","updated":"2015-05-18T14:42:49.338+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14548206","id":"14548206","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30521681\n  \n    --- Diff: storm-core/src/clj/backtype/storm/daemon/worker.clj ---\n    @@ -139,12 +139,12 @@\n                       (.add local pair) \n     \n                       ;;Using java objects directly to avoid performance issues in java code\n    -                  (let [node+port (get @task->node+port task)]\n    -                    (when (not (.get remoteMap node+port))\n    -                      (.put remoteMap node+port (ArrayList.)))\n    -                    (let [remote (.get remoteMap node+port)]\n    +                  (let []\n    +                    (when (not (.get remoteMap task))\n    +                      (.put remoteMap task (ArrayList.)))\n    +                    (let [remote (.get remoteMap task)]\n                           (.add remote (TaskMessage. task (.serialize serializer tuple)))\n    -                     )))) \n    +                    ))))\n    --- End diff --\n    \n    > I suggest we do not change L132-137, since it already groups by destination.\n    \n    I will follow up again, I think I see what you mean in your other comment.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T16:07:12.646+0000","updated":"2015-05-18T16:07:12.646+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14548377","id":"14548377","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-103145088\n  \n    @HeartSaVioR,\n    \n    I see you are right.  There are two race conditions here:\n    \n    1. If we do not check assignments in the read-lock, then we could use an invalid connection. There could be an exception if we lose this race.\n    \n    2. If we group by destination node+port when we equeue tuples for sending, we lose the information needed to update the destination node+port when we dequeue for sending, since assignments `task->node+port` can change in the meantime.  If we lose this race, then tuples for which there is a new assignment may be dropped unnecessarily (if we fix 1.) or sent to the wrong worker.\n    \n    (Formerly, I did not realize 2. was also a regression with 861a92e, so I was looking for a smaller change in this PR.)\n    \n    > If you think latter is better to move on, I'll post a new PR based on 6ef2f11.\n    \n    OK, I will take a look at your other branch.\n    \n    >  IMO it is a critical path for transfer efficiency, so it would be better to have more reviewer for this patch.\n    \n    I agree. The more, the better.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T17:39:57.004+0000","updated":"2015-05-18T17:39:57.004+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14548601","id":"14548601","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30539591\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/utils/TransferDrainer.java ---\n    @@ -23,40 +23,62 @@\n     \n     import backtype.storm.messaging.IConnection;\n     import backtype.storm.messaging.TaskMessage;\n    +import com.google.common.collect.Maps;\n     \n     public class TransferDrainer {\n     \n    -  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n    +  private HashMap<Integer, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n       \n    -  public void add(HashMap<String, ArrayList<TaskMessage>> workerTupleSetMap) {\n    -    for (String key : workerTupleSetMap.keySet()) {\n    -      \n    -      ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(key);\n    -      if (null == bundle) {\n    -        bundle = new ArrayList<ArrayList<TaskMessage>>();\n    -        bundles.put(key, bundle);\n    -      }\n    -      \n    -      ArrayList tupleSet = workerTupleSetMap.get(key);\n    -      if (null != tupleSet && tupleSet.size() > 0) {\n    -        bundle.add(tupleSet);\n    -      }\n    -    } \n    +  public void add(HashMap<Integer, ArrayList<TaskMessage>> taskTupleSetMap) {\n    +    for (Integer task : taskTupleSetMap.keySet()) {\n    +      addListRefToMap(this.bundles, task, taskTupleSetMap.get(task));\n    +    }\n       }\n       \n    -  public void send(HashMap<String, IConnection> connections) {\n    -    for (String hostPort : bundles.keySet()) {\n    -      IConnection connection = connections.get(hostPort);\n    -      if (null != connection) { \n    -        ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(hostPort);\n    -        Iterator<TaskMessage> iter = getBundleIterator(bundle);\n    -        if (null != iter && iter.hasNext()) {\n    -          connection.send(iter);\n    +  public void send(HashMap<Integer, String> taskToNode, HashMap<String, IConnection> connections) {\n    +    HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundleMapByDestination = groupBundleByDestination(taskToNode);\n    +\n    +    for (String hostPort : bundleMapByDestination.keySet()) {\n    +      if (hostPort != null) {\n    --- End diff --\n    \n    Can `hostPort` (the key) be `null` in the map returned by `groupBundleByDestination`?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T19:31:50.194+0000","updated":"2015-05-18T19:31:50.194+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14548602","id":"14548602","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30539645\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/utils/TransferDrainer.java ---\n    @@ -23,40 +23,62 @@\n     \n     import backtype.storm.messaging.IConnection;\n     import backtype.storm.messaging.TaskMessage;\n    +import com.google.common.collect.Maps;\n     \n     public class TransferDrainer {\n     \n    -  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n    +  private HashMap<Integer, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n       \n    -  public void add(HashMap<String, ArrayList<TaskMessage>> workerTupleSetMap) {\n    -    for (String key : workerTupleSetMap.keySet()) {\n    -      \n    -      ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(key);\n    -      if (null == bundle) {\n    -        bundle = new ArrayList<ArrayList<TaskMessage>>();\n    -        bundles.put(key, bundle);\n    -      }\n    -      \n    -      ArrayList tupleSet = workerTupleSetMap.get(key);\n    -      if (null != tupleSet && tupleSet.size() > 0) {\n    -        bundle.add(tupleSet);\n    -      }\n    -    } \n    +  public void add(HashMap<Integer, ArrayList<TaskMessage>> taskTupleSetMap) {\n    +    for (Integer task : taskTupleSetMap.keySet()) {\n    +      addListRefToMap(this.bundles, task, taskTupleSetMap.get(task));\n    +    }\n       }\n       \n    -  public void send(HashMap<String, IConnection> connections) {\n    -    for (String hostPort : bundles.keySet()) {\n    -      IConnection connection = connections.get(hostPort);\n    -      if (null != connection) { \n    -        ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(hostPort);\n    -        Iterator<TaskMessage> iter = getBundleIterator(bundle);\n    -        if (null != iter && iter.hasNext()) {\n    -          connection.send(iter);\n    +  public void send(HashMap<Integer, String> taskToNode, HashMap<String, IConnection> connections) {\n    +    HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundleMapByDestination = groupBundleByDestination(taskToNode);\n    +\n    +    for (String hostPort : bundleMapByDestination.keySet()) {\n    +      if (hostPort != null) {\n    +        IConnection connection = connections.get(hostPort);\n    +        if (null != connection) {\n    +          ArrayList<ArrayList<TaskMessage>> bundle = bundleMapByDestination.get(hostPort);\n    +          Iterator<TaskMessage> iter = getBundleIterator(bundle);\n    +          if (null != iter && iter.hasNext()) {\n    +            connection.send(iter);\n    +          }\n             }\n           }\n    -    } \n    +    }\n       }\n    -  \n    +\n    +  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> groupBundleByDestination(HashMap<Integer, String> taskToNode) {\n    +    HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundleMap = Maps.newHashMap();\n    +    for (Integer task : this.bundles.keySet()) {\n    +      String hostPort = taskToNode.get(task);\n    +      if (hostPort != null) {\n    +        for (ArrayList<TaskMessage> chunk : this.bundles.get(task)) {\n    +          addListRefToMap(bundleMap, hostPort, chunk);\n    +        }\n    +      }\n    +    }\n    +    return bundleMap;\n    +  }\n    +\n    +  private <T> void addListRefToMap(HashMap<T, ArrayList<ArrayList<TaskMessage>>> bundles,\n    --- End diff --\n    \n    nit: Can we rename `bundles` to something like `bundleMap`, since it is also the name of a member?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T19:32:34.139+0000","updated":"2015-05-18T19:32:34.139+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14548603","id":"14548603","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30539714\n  \n    --- Diff: storm-core/src/clj/backtype/storm/daemon/worker.clj ---\n    @@ -129,12 +129,12 @@\n                       (.add local pair) \n     \n                       ;;Using java objects directly to avoid performance issues in java code\n    -                  (let [node+port (get @task->node+port task)]\n    -                    (when (not (.get remoteMap node+port))\n    -                      (.put remoteMap node+port (ArrayList.)))\n    -                    (let [remote (.get remoteMap node+port)]\n    +                  (let []\n    --- End diff --\n    \n    If we have nothing in the binding form, then we can remove the `let` here.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T19:33:19.575+0000","updated":"2015-05-18T19:33:19.575+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14548624","id":"14548624","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-103187844\n  \n    > I made another changeset which reverts whole things to 0666c41 (without try-serialize-local) but leaves TransferDrainer as buffer and grouper (by host+port).\n    > HeartSaVioR@6ef2f11\n    > \n    > If you think latter is better to move on, I'll post a new PR based on 6ef2f11.\n    \n    I do prefer the changes on your other branch above those in this pull request because the other branch is cleaner, but it is up to you.  Either way we will want to be careful.\n    \n    Thanks for looking at this.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T19:43:45.620+0000","updated":"2015-05-18T19:43:45.620+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14549239","id":"14549239","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user HeartSaVioR opened a pull request:\n\n    https://github.com/apache/storm/pull/557\n\n    [STORM-737] Check task->node+port with read lock to prevent sending to closed connection\n\n    * we can ensure task->node+port is safe within read lock\n    ** refer write lock inside of mk-refresh-connections\n    * don't group messages from transfer-fn cause we'll match task->node+port later\n    * Let TransferDrainer groups message to node+port by referring task id\n    ** So then we can still enjoy optimization of sending logic\n    \n    Actually it's another approach from #521, but this changeset is cleaner so I'd like to move on this PR.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/HeartSaVioR/storm STORM-737-2nd-appraoch\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/557.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #557\n    \n----\ncommit 6ef2f11e9eade772c8ae67a6410d537871739938\nAuthor: Jungtaek Lim <kabhwan@gmail.com>\nDate:   2015-05-13T22:50:45Z\n\n    While sending tuple, check task->node+port with read lock\n    \n    * we can ensure task->node+port is safe within read lock\n    ** refer write lock inside of mk-refresh-connections\n    * don't group messages from transfer-fn cause we'll match task->node+port later\n    * Let TransferDrainer groups message to node+port by referring task id\n    ** So then we can still enjoy optimization of sending logic\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T21:12:12.871+0000","updated":"2015-05-18T21:12:12.871+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14549242","id":"14549242","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-103213278\n  \n    @d2r Thanks for reviewing!\n    I'd like to get 6ef2f11 to pulled in, so I'm closing this PR unless we agree #521 is better than #557.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T21:14:46.299+0000","updated":"2015-05-18T21:14:46.299+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14549244","id":"14549244","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR closed the pull request at:\n\n    https://github.com/apache/storm/pull/521\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T21:14:46.728+0000","updated":"2015-05-18T21:14:46.728+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14549254","id":"14549254","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/557#discussion_r30548714\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/utils/TransferDrainer.java ---\n    @@ -26,88 +26,47 @@\n     \n     public class TransferDrainer {\n     \n    -  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n    -  \n    -  public void add(HashMap<String, ArrayList<TaskMessage>> workerTupleSetMap) {\n    -    for (String key : workerTupleSetMap.keySet()) {\n    -      \n    -      ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(key);\n    -      if (null == bundle) {\n    -        bundle = new ArrayList<ArrayList<TaskMessage>>();\n    -        bundles.put(key, bundle);\n    -      }\n    -      \n    -      ArrayList tupleSet = workerTupleSetMap.get(key);\n    -      if (null != tupleSet && tupleSet.size() > 0) {\n    -        bundle.add(tupleSet);\n    -      }\n    -    } \n    +  private ArrayList<TaskMessage> buffer = new ArrayList<TaskMessage>();\n    +\n    +  public void addAll(ArrayList<TaskMessage> tuples) {\n    +    buffer.addAll(tuples);\n    --- End diff --\n    \n    I know you mentioned this in a comment on the former pull request, but since this is just a list do you want to remove `buffer`, `addAll()`, and `clear()` from this class and instead pass an ArrayList to the `send` method?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T21:21:48.335+0000","updated":"2015-05-18T21:21:48.335+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14549258","id":"14549258","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/557#discussion_r30549032\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/utils/TransferDrainer.java ---\n    @@ -26,88 +26,47 @@\n     \n     public class TransferDrainer {\n     \n    -  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n    -  \n    -  public void add(HashMap<String, ArrayList<TaskMessage>> workerTupleSetMap) {\n    -    for (String key : workerTupleSetMap.keySet()) {\n    -      \n    -      ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(key);\n    -      if (null == bundle) {\n    -        bundle = new ArrayList<ArrayList<TaskMessage>>();\n    -        bundles.put(key, bundle);\n    -      }\n    -      \n    -      ArrayList tupleSet = workerTupleSetMap.get(key);\n    -      if (null != tupleSet && tupleSet.size() > 0) {\n    -        bundle.add(tupleSet);\n    -      }\n    -    } \n    +  private ArrayList<TaskMessage> buffer = new ArrayList<TaskMessage>();\n    +\n    +  public void addAll(ArrayList<TaskMessage> tuples) {\n    +    buffer.addAll(tuples);\n    --- End diff --\n    \n    @d2r \n    Anything is fine with me. \n    We may introduce new buffer to outer side, but if it feels clearer I'll be happy to do it.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T21:25:18.206+0000","updated":"2015-05-18T21:25:18.206+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14549271","id":"14549271","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/557#discussion_r30549645\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/utils/TransferDrainer.java ---\n    @@ -26,88 +26,47 @@\n     \n     public class TransferDrainer {\n     \n    -  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n    -  \n    -  public void add(HashMap<String, ArrayList<TaskMessage>> workerTupleSetMap) {\n    -    for (String key : workerTupleSetMap.keySet()) {\n    -      \n    -      ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(key);\n    -      if (null == bundle) {\n    -        bundle = new ArrayList<ArrayList<TaskMessage>>();\n    -        bundles.put(key, bundle);\n    -      }\n    -      \n    -      ArrayList tupleSet = workerTupleSetMap.get(key);\n    -      if (null != tupleSet && tupleSet.size() > 0) {\n    -        bundle.add(tupleSet);\n    -      }\n    -    } \n    +  private ArrayList<TaskMessage> buffer = new ArrayList<TaskMessage>();\n    +\n    +  public void addAll(ArrayList<TaskMessage> tuples) {\n    +    buffer.addAll(tuples);\n    --- End diff --\n    \n    Yeah, I liked your suggestion of having the new buffer.  Before TransferDrainer was added, the buffer was just an ArrayList anyway.  I do not think it makes sense to have an ArrayList \"inside\" the TransferDrainer, because then we are implementing wrapper methods for `addAll` and `clear` that do not add value.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T21:32:15.344+0000","updated":"2015-05-18T21:32:15.344+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14549365","id":"14549365","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/557#issuecomment-103230182\n  \n    @d2r Changed to have a buffer outer side of TransferDrainer.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-18T22:15:31.353+0000","updated":"2015-05-18T22:15:31.353+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14550694","id":"14550694","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/storm/pull/557#issuecomment-103575069\n  \n    FYI: unit tests passed for me.\n    I plan to take a look at performance using [storm-perf-test](https://github.com/yahoo/storm-perf-test)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-19T16:19:54.752+0000","updated":"2015-05-19T16:19:54.752+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14551242","id":"14551242","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user ptgoetz commented on the pull request:\n\n    https://github.com/apache/storm/pull/557#issuecomment-103668907\n  \n    So far I think I'm seeing a performance regression in terms of throughput, but I want to let all the test cases run to be sure. I will have more information tomorrow.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-19T21:14:24.557+0000","updated":"2015-05-19T21:14:24.557+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14551893","id":"14551893","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/557#issuecomment-103777141\n  \n    I'm also seeing a performance regression. IMO resolving issue could introduce performance drop slightly, but shouldn't too much.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T06:21:06.638+0000","updated":"2015-05-20T06:21:06.638+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14552124","id":"14552124","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/557#issuecomment-103843197\n  \n    Since current approach do more works within read lock, it may be necessary to test performance with previous approach, too.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T11:00:48.873+0000","updated":"2015-05-20T11:00:48.873+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14552373","id":"14552373","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user ptgoetz commented on the pull request:\n\n    https://github.com/apache/storm/pull/557#issuecomment-103904248\n  \n    I'm definitely seeing a performance regression. In a core storm topology I'm seeing a drop in throughput and slight increase in latency. In a trident topology I'm seeing a significant increase in latency (2x).\n    \n    I'll try testing with #521.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T14:23:48.697+0000","updated":"2015-05-20T14:23:48.697+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14552495","id":"14552495","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user ptgoetz commented on the pull request:\n\n    https://github.com/apache/storm/pull/557#issuecomment-103928314\n  \n    Testing with #521 applied to 0.10.x-branch I'm actually seeing a performance ***improvement***.\n    \n    With core storm topologies there's an increase in throughput and a small reduction in latency. With trident, throughput is the same and latency is slightly lower.\n    \n    I'll run my fault tolerance tests next to see if there's any change in behavior\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T15:34:43.898+0000","updated":"2015-05-20T15:34:43.898+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14552858","id":"14552858","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user ptgoetz commented on the pull request:\n\n    https://github.com/apache/storm/pull/557#issuecomment-103992667\n  \n    @HeartSaVioR,\n    #521 passed my fault tolerance test (which randomly kills workers and tests for data loss).\n    \n    I'd suggest closing this pull request, and reopening #521 to address @d2r's comments there.\n    \n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T18:50:06.377+0000","updated":"2015-05-20T18:50:06.377+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14553109","id":"14553109","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/557#issuecomment-104039348\n  \n    @ptgoetz Thanks for testing! I'll move on to #521.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T21:06:16.280+0000","updated":"2015-05-20T21:06:16.280+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14553110","id":"14553110","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR closed the pull request at:\n\n    https://github.com/apache/storm/pull/557\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T21:06:17.368+0000","updated":"2015-05-20T21:06:17.368+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14553111","id":"14553111","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user HeartSaVioR reopened a pull request:\n\n    https://github.com/apache/storm/pull/521\n\n    [STORM-737] Check task->node+port with read lock to prevent sending to closed connection\n\n    It's based on Nathan's comment, please refer to https://github.com/apache/storm/pull/349#issuecomment-87778672\n    \n    https://github.com/apache/storm/commit/861a92eab8740cfc0f83ac4d7ade9a2ab04a8b9b seems to make a regression. \n    But it also introduces optimizations of sending, it shouldn't be discarded.\n    \n    I changed send logic to let TransferDrainer matches task to node+port so then we can still enjoy optimization of sending logic.\n    \n    I'm still not familiar with clojure so please review and comment if it can be optimized.\n    Thanks!\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/HeartSaVioR/storm STORM-737\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/521.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #521\n    \n----\ncommit a1d7b3eb343f304565fe24fb7e0151bfbcb3824e\nAuthor: Jungtaek Lim <kabhwan@gmail.com>\nDate:   2015-04-13T22:16:37Z\n\n    While sending tuple, check task->node+port with read lock\n    \n    * we can ensure task->node+port is safe within read lock\n    ** refer write lock inside of mk-refresh-connections\n    * Let TransferDrainer matches task to node+port\n    ** So then we can still enjoy optimization of sending logic\n\ncommit 85af195049fd1229acc62a1b8638415c06b6cf9d\nAuthor: Jungtaek Lim <kabhwan@gmail.com>\nDate:   2015-05-13T21:21:32Z\n\n    Change TransferDrainer to re-group msg by destination when sending\n\ncommit 52bd47b31505db9352e299178c85e990c3f10235\nAuthor: Jungtaek Lim <kabhwan@gmail.com>\nDate:   2015-05-13T21:43:28Z\n\n    Merge branch 'master' into STORM-737\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T21:06:24.768+0000","updated":"2015-05-20T21:06:24.768+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14553115","id":"14553115","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-104039782\n  \n    Since #557 has performance regression, we picked this PR.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T21:07:19.017+0000","updated":"2015-05-20T21:07:19.017+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14553138","id":"14553138","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30750154\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/utils/TransferDrainer.java ---\n    @@ -23,40 +23,62 @@\n     \n     import backtype.storm.messaging.IConnection;\n     import backtype.storm.messaging.TaskMessage;\n    +import com.google.common.collect.Maps;\n     \n     public class TransferDrainer {\n     \n    -  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n    +  private HashMap<Integer, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n       \n    -  public void add(HashMap<String, ArrayList<TaskMessage>> workerTupleSetMap) {\n    -    for (String key : workerTupleSetMap.keySet()) {\n    -      \n    -      ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(key);\n    -      if (null == bundle) {\n    -        bundle = new ArrayList<ArrayList<TaskMessage>>();\n    -        bundles.put(key, bundle);\n    -      }\n    -      \n    -      ArrayList tupleSet = workerTupleSetMap.get(key);\n    -      if (null != tupleSet && tupleSet.size() > 0) {\n    -        bundle.add(tupleSet);\n    -      }\n    -    } \n    +  public void add(HashMap<Integer, ArrayList<TaskMessage>> taskTupleSetMap) {\n    +    for (Integer task : taskTupleSetMap.keySet()) {\n    +      addListRefToMap(this.bundles, task, taskTupleSetMap.get(task));\n    +    }\n       }\n       \n    -  public void send(HashMap<String, IConnection> connections) {\n    -    for (String hostPort : bundles.keySet()) {\n    -      IConnection connection = connections.get(hostPort);\n    -      if (null != connection) { \n    -        ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(hostPort);\n    -        Iterator<TaskMessage> iter = getBundleIterator(bundle);\n    -        if (null != iter && iter.hasNext()) {\n    -          connection.send(iter);\n    +  public void send(HashMap<Integer, String> taskToNode, HashMap<String, IConnection> connections) {\n    +    HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundleMapByDestination = groupBundleByDestination(taskToNode);\n    +\n    +    for (String hostPort : bundleMapByDestination.keySet()) {\n    +      if (hostPort != null) {\n    --- End diff --\n    \n    @d2r \n    No, we removed it into groupBundleByDestination(), so we don't need to check again. Thanks!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T21:14:13.361+0000","updated":"2015-05-20T21:14:13.361+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14553139","id":"14553139","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30750199\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/utils/TransferDrainer.java ---\n    @@ -23,40 +23,62 @@\n     \n     import backtype.storm.messaging.IConnection;\n     import backtype.storm.messaging.TaskMessage;\n    +import com.google.common.collect.Maps;\n     \n     public class TransferDrainer {\n     \n    -  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n    +  private HashMap<Integer, ArrayList<ArrayList<TaskMessage>>> bundles = new HashMap();\n       \n    -  public void add(HashMap<String, ArrayList<TaskMessage>> workerTupleSetMap) {\n    -    for (String key : workerTupleSetMap.keySet()) {\n    -      \n    -      ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(key);\n    -      if (null == bundle) {\n    -        bundle = new ArrayList<ArrayList<TaskMessage>>();\n    -        bundles.put(key, bundle);\n    -      }\n    -      \n    -      ArrayList tupleSet = workerTupleSetMap.get(key);\n    -      if (null != tupleSet && tupleSet.size() > 0) {\n    -        bundle.add(tupleSet);\n    -      }\n    -    } \n    +  public void add(HashMap<Integer, ArrayList<TaskMessage>> taskTupleSetMap) {\n    +    for (Integer task : taskTupleSetMap.keySet()) {\n    +      addListRefToMap(this.bundles, task, taskTupleSetMap.get(task));\n    +    }\n       }\n       \n    -  public void send(HashMap<String, IConnection> connections) {\n    -    for (String hostPort : bundles.keySet()) {\n    -      IConnection connection = connections.get(hostPort);\n    -      if (null != connection) { \n    -        ArrayList<ArrayList<TaskMessage>> bundle = bundles.get(hostPort);\n    -        Iterator<TaskMessage> iter = getBundleIterator(bundle);\n    -        if (null != iter && iter.hasNext()) {\n    -          connection.send(iter);\n    +  public void send(HashMap<Integer, String> taskToNode, HashMap<String, IConnection> connections) {\n    +    HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundleMapByDestination = groupBundleByDestination(taskToNode);\n    +\n    +    for (String hostPort : bundleMapByDestination.keySet()) {\n    +      if (hostPort != null) {\n    +        IConnection connection = connections.get(hostPort);\n    +        if (null != connection) {\n    +          ArrayList<ArrayList<TaskMessage>> bundle = bundleMapByDestination.get(hostPort);\n    +          Iterator<TaskMessage> iter = getBundleIterator(bundle);\n    +          if (null != iter && iter.hasNext()) {\n    +            connection.send(iter);\n    +          }\n             }\n           }\n    -    } \n    +    }\n       }\n    -  \n    +\n    +  private HashMap<String, ArrayList<ArrayList<TaskMessage>>> groupBundleByDestination(HashMap<Integer, String> taskToNode) {\n    +    HashMap<String, ArrayList<ArrayList<TaskMessage>>> bundleMap = Maps.newHashMap();\n    +    for (Integer task : this.bundles.keySet()) {\n    +      String hostPort = taskToNode.get(task);\n    +      if (hostPort != null) {\n    +        for (ArrayList<TaskMessage> chunk : this.bundles.get(task)) {\n    +          addListRefToMap(bundleMap, hostPort, chunk);\n    +        }\n    +      }\n    +    }\n    +    return bundleMap;\n    +  }\n    +\n    +  private <T> void addListRefToMap(HashMap<T, ArrayList<ArrayList<TaskMessage>>> bundles,\n    --- End diff --\n    \n    @d2r OK, it's better than shadowing fields. Thanks!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T21:14:51.304+0000","updated":"2015-05-20T21:14:51.304+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14553141","id":"14553141","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/521#discussion_r30750378\n  \n    --- Diff: storm-core/src/clj/backtype/storm/daemon/worker.clj ---\n    @@ -129,12 +129,12 @@\n                       (.add local pair) \n     \n                       ;;Using java objects directly to avoid performance issues in java code\n    -                  (let [node+port (get @task->node+port task)]\n    -                    (when (not (.get remoteMap node+port))\n    -                      (.put remoteMap node+port (ArrayList.)))\n    -                    (let [remote (.get remoteMap node+port)]\n    +                  (let []\n    --- End diff --\n    \n    @d2r Oh, right. I'll reflect it. Thanks!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T21:16:42.803+0000","updated":"2015-05-20T21:16:42.803+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14553164","id":"14553164","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-104045430\n  \n    @d2r @ptgoetz Applied @d2r's comments.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-20T21:31:43.583+0000","updated":"2015-05-20T21:31:43.583+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14561530","id":"14561530","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-106038982\n  \n    Tested with https://github.com/yahoo/storm-perf-test with the following arguments:\n    ```\n    --ack --bolt 4 --name test -l 1 -n 1 --workers 4 --spout 3 --testTimeSec 900\n    -c topology.max.spout.pending=1092 --messageSize 10\n    ```\n    \n    OK, I found both the data-rate and the latency are improved with this patch in my tests:\n    \n    master at 512d3def:\n    Throughput in MB/s:\n      max: 0.1519711812\n      99:  0.1510783919\n      90:  0.1276066783\n      50:  0.1100190481\n      min: 0.07258733114\n    Complete Latency/10m: 265ms\n    \n    This PR 85c5096e merged to master at 512d3def:\n    Throughput in MB/s:\n      max: 0.1760864258\n      99:  0.1707911174\n      90:  0.1550458272\n      50:  0.1419607798\n      min: 0.1128451029\n    Complete Latency/10m: 204ms\n    \n    I am also fine with the changes.\n    \n    +1\n    \n    Thank you for your patience, @HeartSaVioR.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-27T19:12:25.614+0000","updated":"2015-05-27T19:12:25.614+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14561793","id":"14561793","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-106086856\n  \n    @d2r No Problem, thanks for reviewing and taking performance test!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-27T21:39:20.709+0000","updated":"2015-05-27T21:39:20.709+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14561796","id":"14561796","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-106087173\n  \n    @ptgoetz Could you take a look in order to complete current PR? Thanks in advance!\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-27T21:41:23.635+0000","updated":"2015-05-27T21:41:23.635+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14561805","id":"14561805","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user ptgoetz commented on the pull request:\n\n    https://github.com/apache/storm/pull/521#issuecomment-106087952\n  \n    I'm +1. As I mentioned on the other pull request this patch actually improves performance while the alternate approach created a performance regression.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-27T21:46:48.284+0000","updated":"2015-05-27T21:46:48.284+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14565146","id":"14565146","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/storm/pull/521\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-05-29T17:56:04.464+0000","updated":"2015-05-29T17:56:04.464+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12786813/comment/14643572","id":"14643572","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"It was already resolved.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2015-07-27T23:00:24.031+0000","updated":"2015-07-27T23:00:24.031+0000"}],"maxResults":67,"total":67,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-737/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i27k0f:"}}