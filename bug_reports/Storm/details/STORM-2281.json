{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13033513","self":"https://issues.apache.org/jira/rest/api/2/issue/13033513","key":"STORM-2281","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":25200,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12335748","id":"12335748","name":"1.1.0","archived":false,"released":true,"releaseDate":"2017-03-29"}],"aggregatetimespent":25200,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2017-01-12T09:13:03.316+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Feb 08 02:15:03 UTC 2017","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_883202837_*|*_3_*:*_1_*:*_1555495420_*|*_5_*:*_1_*:*_0","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2017-02-08T02:15:03.437+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2281/watchers","watchCount":5,"isWatching":false},"created":"2017-01-10T20:50:05.242+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":["kafka","trident"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":"STORM-1856","customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329843","id":"12329843","name":"1.0.0","archived":false,"released":true,"releaseDate":"2016-04-12"}],"customfield_12312339":null,"issuelinks":[],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hmclouro","name":"hmclouro","key":"hmclouro","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hugo Louro","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-02-08T02:15:03.473+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12331080","id":"12331080","name":"storm-kafka-client"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12328904","id":"12328904","name":"trident"}],"timeoriginalestimate":null,"description":"For Kafka Spout New Consumer in Trident, if we increase the spout parallelism more than one then we can see that the below error happens\n\nIt is reproducible most of the times, it it does not then just kill and restart topology.  (if spout parallelism is 1 there is no problem, it only happens with multiple spouts)\n\nSteps to Reproduce:\n1. Create a Spout Only Trident Topology (or read write topology)\n2. Create a topic with multiple partition (2 or more) \n3. Pump some data and try to read with parallelism of 2 or more\n\n\nNo current assignment for partition input-1 \nat org.apache.storm.utils.DisruptorQueue.consumeBatchToCursor(DisruptorQueue.java:464) ~[storm-core-1.0.2.jar:1.0.2] \nat org.apache.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(DisruptorQueue.java:430) ~[storm-core-1.0.2.jar:1.0.2] \nat org.apache.storm.disruptor$consume_batch_when_available.invoke(disruptor.clj:73) ~[storm-core-1.0.2.jar:1.0.2] \nat org.apache.storm.daemon.executor$fn__8058$fn__8071$fn__8124.invoke(executor.clj:850) ~[storm-core-1.0.2.jar:1.0.2] \nat org.apache.storm.util$async_loop$fn__624.invoke(util.clj:484) [storm-core-1.0.2.jar:1.0.2] \nat clojure.lang.AFn.run(AFn.java:22) [clojure-1.7.0.jar:?] \nat java.lang.Thread.run(Thread.java:745) [?:1.8.0_77] \nCaused by: java.lang.IllegalStateException: No current assignment for partition input-1 \nat org.apache.kafka.clients.consumer.internals.SubscriptionState.assignedState(SubscriptionState.java:231) ~[kafka-clients-0.10.0.0.jar:?] \nat org.apache.kafka.clients.consumer.internals.SubscriptionState.seek(SubscriptionState.java:256) ~[kafka-clients-0.10.0.0.jar:?] \nat org.apache.kafka.clients.consumer.KafkaConsumer.seek(KafkaConsumer.java:1134) ~[kafka-clients-0.10.0.0.jar:?] \nat org.apache.storm.kafka.spout.trident.KafkaTridentSpoutEmitter.seek(KafkaTridentSpoutEmitter.java:139) ~[storm-kafka-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT] \nat org.apache.storm.kafka.spout.trident.KafkaTridentSpoutEmitter.emitPartitionBatch(KafkaTridentSpoutEmitter.java:88) ~[storm-kafka-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT] \nat org.apache.storm.kafka.spout.trident.KafkaTridentSpoutEmitter.emitPartitionBatch(KafkaTridentSpoutEmitter.java:47) ~[storm-kafka-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT] \nat org.apache.storm.trident.spout.OpaquePartitionedTridentSpoutExecutor$Emitter.emitBatch(OpaquePartitionedTridentSpoutExecutor.java:128) ~[storm-core-1.0.2.jar:1.0.2] \nat org.apache.storm.trident.spout.TridentSpoutExecutor.execute(TridentSpoutExecutor.java:82) ~[storm-core-1.0.2.jar:1.0.2]","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"7h","remainingEstimateSeconds":0,"timeSpentSeconds":25200},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12846666","id":"12846666","filename":"Screen Shot 2017-01-09 at 8.54.17 PM.png","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=supermonk","name":"supermonk","key":"supermonk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Narendra Bidari","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-01-10T20:50:05.580+0000","size":135693,"mimeType":"image/png","content":"https://issues.apache.org/jira/secure/attachment/12846666/Screen+Shot+2017-01-09+at+8.54.17+PM.png"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12849943","id":"12849943","filename":"Screen Shot 2017-01-30 at 1.44.59 AM.png","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hmclouro","name":"hmclouro","key":"hmclouro","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hugo Louro","active":true,"timeZone":"Etc/UTC"},"created":"2017-01-30T11:10:30.254+0000","size":199274,"mimeType":"image/png","content":"https://issues.apache.org/jira/secure/attachment/12849943/Screen+Shot+2017-01-30+at+1.44.59+AM.png"}],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Running Multiple Kafka Spouts (Trident) Throws Illegal State Exception","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=supermonk","name":"supermonk","key":"supermonk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Narendra Bidari","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=supermonk","name":"supermonk","key":"supermonk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Narendra Bidari","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":25200,"total":25200,"percent":100},"environment":"centos mac","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":25200,"total":25200,"percent":100},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/comment/15820548","id":"15820548","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Trident implementation of storm-kafka-client is only applied to 1.x and master branch, and none of version line is released yet.\n\nDid you build your own Storm with 1.x or master branch? If then please change Affects Version/s accordingly.\n\nAnd could you reproduce this with Storm 1.0.2 or Storm 1.x branch? I'm not sure storm-kafka-client works with Storm 0.x version line.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2017-01-12T09:13:03.316+0000","updated":"2017-01-12T09:13:03.316+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/comment/15826555","id":"15826555","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=supermonk","name":"supermonk","key":"supermonk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Narendra Bidari","active":true,"timeZone":"America/Los_Angeles"},"body":"[~kabhwan] : Yes, We build our own branch. \n\nI have updated the ticket with the error on storm 1.0 and latest storm-kaka-client.  The error still appears. It has more to do with Kafka Consumer Subscription","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=supermonk","name":"supermonk","key":"supermonk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Narendra Bidari","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-01-17T18:28:40.116+0000","updated":"2017-01-17T18:28:40.116+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/comment/15829109","id":"15829109","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sriharsha","name":"sriharsha","key":"sriharsha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sriharsha Chintalapani","active":true,"timeZone":"America/Los_Angeles"},"body":"[~supermonk] which version of kafka-clients are you using.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sriharsha","name":"sriharsha","key":"sriharsha","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sriharsha Chintalapani","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-01-19T01:13:13.840+0000","updated":"2017-01-19T01:13:13.840+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/comment/15832386","id":"15832386","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=supermonk","name":"supermonk","key":"supermonk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Narendra Bidari","active":true,"timeZone":"America/Los_Angeles"},"body":"[~sriharsha] : We are using 0.10.0.0\n\n<dependency>\n\t\t\t<groupId>org.apache.kafka</groupId>\n\t\t\t<artifactId>kafka-clients</artifactId>\n\t\t\t<version>0.10.0.0</version>\n\t\t</dependency>","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=supermonk","name":"supermonk","key":"supermonk","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Narendra Bidari","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-01-20T20:54:36.875+0000","updated":"2017-01-20T20:54:36.875+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/comment/15834932","id":"15834932","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hmclouro","name":"hmclouro","key":"hmclouro","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hugo Louro","active":true,"timeZone":"Etc/UTC"},"body":"Quick update: I was able to reproduce this on my local machine.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hmclouro","name":"hmclouro","key":"hmclouro","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hugo Louro","active":true,"timeZone":"Etc/UTC"},"created":"2017-01-23T17:42:37.476+0000","updated":"2017-01-23T17:42:37.476+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/comment/15857244","id":"15857244","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Thanks [~hmclouro], I merged into master and 1.x branch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2017-02-08T02:15:03.469+0000","updated":"2017-02-08T02:15:03.469+0000"}],"maxResults":6,"total":6,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2281/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":49,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36434","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user hmcl opened a pull request:\n\n    https://github.com/apache/storm/pull/1902\n\n    STORM-2281: Running Multiple Kafka Spouts (Trident) Throws Illegal State Exception\n\n    To review this PR please review only the commit that has STORM-2281. It is currently sitting on top of the multiple commits addressing STORM-2225, waiting for them to be squashed in and eventually merged.\n    \n    @harshach can you please review. Thanks.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/hmcl/storm-apache 1.x-branch_STORM-2225_KSSimpler_2\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/1902.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #1902\n    \n----\ncommit 5e7d6a4fd7ed3fdd3400fc022c1df975381b51eb\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-23T21:11:22Z\n\n    Revert \"Merge branch 'STORM-2236-1.x' of https://github.com/MediaV/storm into STORM-2236-1.x-merge\"\n    \n    This reverts commit 389966ea4969d76271da1ad80f9f46e1c87cade4, reversing\n    changes made to 397977797a6ef940403c0ff4c14b834a45b6ae05.\n\ncommit 568d4b73e9b26e1f42350847798fc45639ba4de2\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2016-11-30T03:39:26Z\n\n    STORM-1997: copy state/bolt from storm-kafka to storm-kafka-client\n    STORM-2225: change spout config to be simpler.\n    STORM-2228: removed ability to request a single topic go to multiple streams\n    \n    Conflicts:\n    \texamples/storm-kafka-client-examples/src/main/java/org/apache/storm/kafka/trident/TridentKafkaClientWordCountWildcardTopics.java\n    \texternal/storm-kafka-client/src/test/java/org/apache/storm/kafka/spout/builders/SingleTopicKafkaSpoutConfiguration.java\n\ncommit 389a02a266625683bfdb01f486b23ed2c98fe033\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2016-12-08T19:26:49Z\n\n    fixed some issues with rebase\n    \n    Conflicts:\n    \texternal/storm-kafka-client/src/test/java/org/apache/storm/kafka/spout/KafkaSpoutRebalanceTest.java\n\ncommit 18f522fef2f64d6209c63db7b9e6426de8acc43d\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2016-12-08T22:10:12Z\n\n    addressed review comments\n    \n    Conflicts:\n    \texternal/storm-kafka-client/README.md\n\ncommit 4cf7f5595d7274b765ec84772a9fce388667748e\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2016-12-08T22:12:43Z\n\n    oops\n\ncommit f285060d92d93b23ed4a3721dfcbe9389c3c6c0c\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-06T22:37:31Z\n\n    STORM-2225: make the core API java7 compatible\n\ncommit 8fc59a46153efcafbce9f759b089d1eaca576079\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-06T22:42:31Z\n\n    STORM-2225: addressed doc review comments\n\ncommit 959f2ace453b0e421ad051654f8de93c21ee06a2\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-09T16:11:41Z\n\n    STORM-2225: java7 modifications\n\ncommit 390a39873cb8611e9f92615afaebd3a298204d8f\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-09T16:58:27Z\n\n    STORM-2225: Updated docs\n\ncommit a7387e1361a521cdb62ed6e5cd2a3833732704b6\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-09T17:06:12Z\n\n    Missed a Java 7 compatability issue\n\ncommit c4a3a4f1bb7ec7184e3927ca7b4c6592281218ad\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-09T17:15:38Z\n\n    STORM-2225: Fixed typo\n\ncommit 4483ffa60c37271b9c86f5b789cac8288885e0fb\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-17T16:07:13Z\n\n    STORM-2225: Addressed some review comments.\n\ncommit f82a0a3b407d03cd62c817f8473c770fc0bf0a68\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-17T18:39:43Z\n\n    STORM-2225: Make the config support Deserializer.class configs\n\ncommit f4df71a217482b25e44dd2d74ad50fa192f6d1df\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-18T16:32:06Z\n\n    STORM-2236: Reimplemented manual partition management on top of STORM-2225\n\ncommit 9952861c31b3c1524e9ff3631439ab0b0620dae0\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-18T17:08:46Z\n\n    STORM-2236: Make this work with trident and update the docs.\n\ncommit 34a98c4a735b835b1b67edebcc49940a178bbb8c\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-18T18:48:02Z\n\n    Addressed review comments\n\ncommit b57aee609fccb9fa1f7058c1f8091d05de9ddc8f\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-19T14:48:13Z\n\n    Fixed issue with upmerge\n\ncommit f6114715a950c9c79e97eb52e96c244731c293dd\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-19T18:32:05Z\n\n    STORM-2225: review rework\n\ncommit f0f00c2cedef5b09108a0fc73cde4de0abde0a12\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-19T20:59:39Z\n\n    Review comments\n\ncommit 094d6dcd8bdf1505e31c765675df3aeabfb4d694\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-01-23T16:42:23Z\n\n    Some final rework\n\ncommit 092b216071dbf82316679dfe0bc8d82cb5eeafbd\nAuthor: Hugo Louro <hmclouro@gmail.com>\nDate:   2017-01-30T08:02:42Z\n\n    STORM-2281: Running Multiple Kafka Spouts (Trident) Throws Illegal State Exception\n       - Fix topic partition assignments to tasks running Kafka consumer responsible for the assigned topic partitions\n       - Improved logging and code\n\n----\n","created":"2017-01-30T11:04:23.178+0000","updated":"2017-01-30T11:04:23.178+0000","started":"2017-01-30T11:04:23.175+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36434","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36479","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98590830\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutOpaque.java ---\n    @@ -79,8 +72,8 @@ public Fields getOutputFields() {\n     \n         @Override\n         public String toString() {\n    -        return \"KafkaTridentSpoutOpaque{\" +\n    -                \"kafkaManager=\" + kafkaManager +\n    +        return super.toString() +\n    --- End diff --\n    \n    Same: do we really want to use Object.toString()?\n","created":"2017-01-31T03:06:39.707+0000","updated":"2017-01-31T03:06:39.707+0000","started":"2017-01-31T03:06:39.706+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36479","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36481","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98588416\n  \n    --- Diff: examples/storm-kafka-client-examples/src/main/java/org/apache/storm/kafka/trident/TridentKafkaClientWordCountNamedTopics.java ---\n    @@ -107,8 +113,12 @@ protected void run(String[] args) throws AlreadyAliveException, InvalidTopologyE\n                         localSubmitter.submit(topic1Tp, tpConf, KafkaProducerTopology.newTopology(brokerUrl, topic1));\n                         localSubmitter.submit(topic2Tp, tpConf, KafkaProducerTopology.newTopology(brokerUrl, topic2));\n                         // Consumer\n    +                    try {\n                         localSubmitter.submit(consTpName, tpConf, TridentKafkaConsumerTopology.newTopology(\n    --- End diff --\n    \n    Indentation is off.\n","created":"2017-01-31T03:06:39.709+0000","updated":"2017-01-31T03:06:39.709+0000","started":"2017-01-31T03:06:39.709+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36481","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36480","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98588817\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutBatchMetadata.java ---\n    @@ -74,8 +74,8 @@ public TopicPartition getTopicPartition() {\n     \n         @Override\n         public String toString() {\n    -        return \"KafkaTridentSpoutBatchMetadata{\" +\n    -                \"topicPartition=\" + topicPartition +\n    +        return super.toString() +\n    --- End diff --\n    \n    Do we really want to use `Object.toString()`?\n","created":"2017-01-31T03:06:39.709+0000","updated":"2017-01-31T03:06:39.709+0000","started":"2017-01-31T03:06:39.709+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36480","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36482","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98591458\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutEmitter.java ---\n    @@ -161,31 +187,84 @@ private long seek(TopicPartition tp, KafkaTridentSpoutBatchMetadata<K, V> lastBa\n             return fetchOffset;\n         }\n     \n    -    // returns paused topic partitions\n    +    // returns paused topic partitions.\n         private Collection<TopicPartition> pauseTopicPartitions(TopicPartition excludedTp) {\n    -        final Set<TopicPartition> pausedTopicPartitions  = new HashSet<>(kafkaConsumer.assignment());\n    -        LOG.debug(\"Currently assigned topic partitions [{}]\", pausedTopicPartitions);\n    +        final Set<TopicPartition> pausedTopicPartitions = new HashSet<>(kafkaConsumer.assignment());\n    +        LOG.trace(\"Currently assigned topic partitions [{}]\", pausedTopicPartitions);\n    --- End diff --\n    \n    Do we need to change this to trace? \n","created":"2017-01-31T03:06:39.718+0000","updated":"2017-01-31T03:06:39.718+0000","started":"2017-01-31T03:06:39.718+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36482","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36483","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98588609\n  \n    --- Diff: examples/storm-kafka-examples/src/main/java/org/apache/storm/kafka/trident/LocalSubmitter.java ---\n    @@ -43,10 +43,15 @@ public static LocalSubmitter newInstance() {\n         }\n     \n         public static Config defaultConfig() {\n    +        return defaultConfig(false);\n    +    }\n    +\n    +    public static Config defaultConfig(boolean debug) {\n             final Config conf = new Config();\n             conf.setMaxSpoutPending(20);\n    -        conf.setMaxTaskParallelism(1);\n    -        conf.setNumWorkers(1);\n    +//        conf.setMaxTaskParallelism(2);\n    --- End diff --\n    \n    Better to remove comments if not necessary.\n","created":"2017-01-31T03:06:39.728+0000","updated":"2017-01-31T03:06:39.728+0000","started":"2017-01-31T03:06:39.728+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36483","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36484","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98590052\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutEmitter.java ---\n    @@ -196,8 +275,8 @@ public void close() {\n     \n         @Override\n         public String toString() {\n    -        return \"KafkaTridentSpoutEmitter{\" +\n    -                \", kafkaManager=\" + kafkaManager +\n    +        return super.toString() +\n    --- End diff --\n    \n    Same: do we really want to use Object.toString()?\n","created":"2017-01-31T03:06:39.775+0000","updated":"2017-01-31T03:06:39.775+0000","started":"2017-01-31T03:06:39.775+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36484","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36485","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98588501\n  \n    --- Diff: examples/storm-kafka-client-examples/src/main/java/org/apache/storm/kafka/trident/TridentKafkaClientWordCountNamedTopics.java ---\n    @@ -107,8 +113,12 @@ protected void run(String[] args) throws AlreadyAliveException, InvalidTopologyE\n                         localSubmitter.submit(topic1Tp, tpConf, KafkaProducerTopology.newTopology(brokerUrl, topic1));\n                         localSubmitter.submit(topic2Tp, tpConf, KafkaProducerTopology.newTopology(brokerUrl, topic2));\n                         // Consumer\n    +                    try {\n                         localSubmitter.submit(consTpName, tpConf, TridentKafkaConsumerTopology.newTopology(\n                                 localSubmitter.getDrpc(), newKafkaTridentSpoutOpaque()));\n    +                    } catch (Exception e) {\n    +                        e.printStackTrace();\n    +                    }\n     \n                         // print\n                         localSubmitter.printResults(15, 1, TimeUnit.SECONDS);\n    --- End diff --\n    \n    If submit is failing, it doesn't make sense to execute this. Might be better to move this to the inside of try-catch.\n","created":"2017-01-31T03:06:39.785+0000","updated":"2017-01-31T03:06:39.785+0000","started":"2017-01-31T03:06:39.785+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36485","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36486","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98590758\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutManager.java ---\n    @@ -107,9 +90,25 @@ Fields getFields() {\n     \n         @Override\n         public String toString() {\n    -        return \"KafkaTridentSpoutManager{\" +\n    -                \"kafkaConsumer=\" + kafkaConsumer +\n    +        return super.toString() +\n    --- End diff --\n    \n    Same: do we really want to use Object.toString()?\n","created":"2017-01-31T03:06:39.787+0000","updated":"2017-01-31T03:06:39.787+0000","started":"2017-01-31T03:06:39.787+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36486","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36487","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98591120\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutTopicPartition.java ---\n    @@ -43,7 +43,7 @@ public TopicPartition getTopicPartition() {\n     \n         @Override\n         public String getId() {\n    -        return topicPartition.topic() + \"/\" + topicPartition.partition();\n    +        return topicPartition.topic() + \"_\" + topicPartition.partition();\n    --- End diff --\n    \n    https://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/common/Topic.scala#L29\n    \n    '_' is legal char for topic whereas '/' is not legal char for topic. It must not be changed.\n","created":"2017-01-31T03:06:39.809+0000","updated":"2017-01-31T03:06:39.809+0000","started":"2017-01-31T03:06:39.809+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36487","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36488","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98589751\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutEmitter.java ---\n    @@ -47,70 +33,111 @@\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    -public class KafkaTridentSpoutEmitter<K,V> implements IOpaquePartitionedTridentSpout.Emitter<List<TopicPartition>, KafkaTridentSpoutTopicPartition, KafkaTridentSpoutBatchMetadata<K,V>>, Serializable {\n    -    private static final long serialVersionUID = -7343927794834130435L;\n    +import java.io.Serializable;\n    +import java.util.ArrayList;\n    +import java.util.Arrays;\n    +import java.util.Collection;\n    +import java.util.Collections;\n    +import java.util.HashSet;\n    +import java.util.List;\n    +import java.util.Set;\n    +import java.util.concurrent.TimeUnit;\n    +\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;\n     \n    +public class KafkaTridentSpoutEmitter<K, V> implements IOpaquePartitionedTridentSpout.Emitter<\n    +        List<TopicPartition>,\n    +        KafkaTridentSpoutTopicPartition,\n    +        KafkaTridentSpoutBatchMetadata<K, V>>,\n    +        Serializable {\n    +\n    +    private static final long serialVersionUID = -7343927794834130435L;\n         private static final Logger LOG = LoggerFactory.getLogger(KafkaTridentSpoutEmitter.class);\n     \n         // Kafka\n         private final KafkaConsumer<K, V> kafkaConsumer;\n     \n         // Bookkeeping\n         private final KafkaTridentSpoutManager<K, V> kafkaManager;\n    +\n         // Declare some KafkaTridentSpoutManager references for convenience\n         private final long pollTimeoutMs;\n         private final KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy;\n         private final RecordTranslator<K, V> translator;\n         private final Timer refreshSubscriptionTimer;\n     \n    -    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext context) {\n    -        this.kafkaManager = kafkaManager;\n    -        this.kafkaManager.subscribeKafkaConsumer(context);\n    -        refreshSubscriptionTimer = new Timer(500, kafkaManager.getKafkaSpoutConfig().getPartitionRefreshPeriodMs(), TimeUnit.MILLISECONDS);\n    +    private TopologyContext topologyContext;\n     \n    -        //must subscribeKafkaConsumer before this line\n    -        kafkaConsumer = kafkaManager.getKafkaConsumer();\n    -        translator = kafkaManager.getKafkaSpoutConfig().getTranslator();\n    +    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext topologyContext, Timer refreshSubscriptionTimer) {\n    +        this.kafkaConsumer = kafkaManager.createAndSubscribeKafkaConsumer(topologyContext);\n    +        this.kafkaManager = kafkaManager;\n    +        this.topologyContext = topologyContext;\n    +        this.refreshSubscriptionTimer = refreshSubscriptionTimer;\n    +        this.translator = kafkaManager.getKafkaSpoutConfig().getTranslator();\n     \n             final KafkaSpoutConfig<K, V> kafkaSpoutConfig = kafkaManager.getKafkaSpoutConfig();\n    -        pollTimeoutMs = kafkaSpoutConfig.getPollTimeoutMs();\n    -        firstPollOffsetStrategy = kafkaSpoutConfig.getFirstPollOffsetStrategy();\n    +        this.pollTimeoutMs = kafkaSpoutConfig.getPollTimeoutMs();\n    +        this.firstPollOffsetStrategy = kafkaSpoutConfig.getFirstPollOffsetStrategy();\n             LOG.debug(\"Created {}\", this);\n         }\n     \n    +    /**\n    +     * Creates instance of this class with default 500 millisecond refresh subscription timer\n    +     */\n    +    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext topologyContext) {\n    +        this(kafkaManager, topologyContext, new Timer(500,\n    +                kafkaManager.getKafkaSpoutConfig().getPartitionRefreshPeriodMs(), TimeUnit.MILLISECONDS));\n    +    }\n    +\n         @Override\n         public KafkaTridentSpoutBatchMetadata<K, V> emitPartitionBatch(TransactionAttempt tx, TridentCollector collector,\n    -            KafkaTridentSpoutTopicPartition partitionTs, KafkaTridentSpoutBatchMetadata<K, V> lastBatch) {\n    -        LOG.debug(\"Emitting batch: [transaction = {}], [partition = {}], [collector = {}], [lastBatchMetadata = {}]\",\n    -                tx, partitionTs, collector, lastBatch);\n    +            KafkaTridentSpoutTopicPartition currBatchPartition, KafkaTridentSpoutBatchMetadata<K, V> lastBatch) {\n     \n    -        final TopicPartition topicPartition = partitionTs.getTopicPartition();\n    +        LOG.debug(\"Processing batch: [transaction = {}], [currBatchPartition = {}], [lastBatchMetadata = {}], [collector = {}]\",\n    +                tx, currBatchPartition, lastBatch, collector);\n    +\n    +        final TopicPartition currBatchTp = currBatchPartition.getTopicPartition();\n    +        final Set<TopicPartition> assignments = kafkaConsumer.assignment();\n             KafkaTridentSpoutBatchMetadata<K, V> currentBatch = lastBatch;\n             Collection<TopicPartition> pausedTopicPartitions = Collections.emptySet();\n     \n    -        try {\n    -            // pause other topic partitions to only poll from current topic partition\n    -            pausedTopicPartitions = pauseTopicPartitions(topicPartition);\n    +        if (assignments == null || !assignments.contains(currBatchPartition.getTopicPartition())) {\n    +            LOG.debug(\"SKIPPING processing batch: [transaction = {}], [currBatchPartition = {}], [lastBatchMetadata = {}], \" +\n    --- End diff --\n    \n    Is it OK to have this as debug? If it indicates that odd thing is happening, better to have this as warn or even higher.\n    I'm not familiar with current storm-kafka-client so just would like to check again. \n","created":"2017-01-31T03:06:39.815+0000","updated":"2017-01-31T03:06:39.815+0000","started":"2017-01-31T03:06:39.815+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36488","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36489","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98590853\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutOpaqueCoordinator.java ---\n    @@ -57,8 +57,8 @@ public void close() {\n     \n         @Override\n         public String toString() {\n    -        return \"KafkaTridentSpoutOpaqueCoordinator{\" +\n    -                \"kafkaManager=\" + kafkaManager +\n    +        return super.toString() +\n    --- End diff --\n    \n    Same: do we really want to use Object.toString()?\n","created":"2017-01-31T03:06:39.935+0000","updated":"2017-01-31T03:06:39.935+0000","started":"2017-01-31T03:06:39.935+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36489","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36490","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98588677\n  \n    --- Diff: examples/storm-kafka-examples/src/main/java/org/apache/storm/kafka/trident/TridentKafkaWordCount.java ---\n    @@ -95,7 +95,8 @@ public static void main(String[] args) throws Exception {\n                     localSubmitter.submit(prodTpName, tpConf, KafkaProducerTopology.newTopology(zkBrokerUrl[1], topicName));\n                     // Consumer\n                     localSubmitter.submit(consTpName, tpConf, TridentKafkaConsumerTopology.newTopology(localSubmitter.getDrpc(),\n    -                        new TransactionalTridentKafkaSpout(newTridentKafkaConfig(zkBrokerUrl[0]))));\n    +                        new OpaqueTridentKafkaSpout(newTridentKafkaConfig(zkBrokerUrl[0]))));\n    +//                        new TransactionalTridentKafkaSpout(newTridentKafkaConfig(zkBrokerUrl[0]))));\n    --- End diff --\n    \n    Remove the comment line.\n","created":"2017-01-31T03:06:40.083+0000","updated":"2017-01-31T03:06:40.083+0000","started":"2017-01-31T03:06:40.083+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36490","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36492","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user harshach commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98593325\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutEmitter.java ---\n    @@ -47,70 +33,111 @@\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    -public class KafkaTridentSpoutEmitter<K,V> implements IOpaquePartitionedTridentSpout.Emitter<List<TopicPartition>, KafkaTridentSpoutTopicPartition, KafkaTridentSpoutBatchMetadata<K,V>>, Serializable {\n    -    private static final long serialVersionUID = -7343927794834130435L;\n    +import java.io.Serializable;\n    +import java.util.ArrayList;\n    +import java.util.Arrays;\n    +import java.util.Collection;\n    +import java.util.Collections;\n    +import java.util.HashSet;\n    +import java.util.List;\n    +import java.util.Set;\n    +import java.util.concurrent.TimeUnit;\n    +\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;\n     \n    +public class KafkaTridentSpoutEmitter<K, V> implements IOpaquePartitionedTridentSpout.Emitter<\n    +        List<TopicPartition>,\n    +        KafkaTridentSpoutTopicPartition,\n    +        KafkaTridentSpoutBatchMetadata<K, V>>,\n    +        Serializable {\n    +\n    +    private static final long serialVersionUID = -7343927794834130435L;\n         private static final Logger LOG = LoggerFactory.getLogger(KafkaTridentSpoutEmitter.class);\n     \n         // Kafka\n         private final KafkaConsumer<K, V> kafkaConsumer;\n     \n         // Bookkeeping\n         private final KafkaTridentSpoutManager<K, V> kafkaManager;\n    +\n         // Declare some KafkaTridentSpoutManager references for convenience\n         private final long pollTimeoutMs;\n         private final KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy;\n         private final RecordTranslator<K, V> translator;\n         private final Timer refreshSubscriptionTimer;\n     \n    -    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext context) {\n    -        this.kafkaManager = kafkaManager;\n    -        this.kafkaManager.subscribeKafkaConsumer(context);\n    -        refreshSubscriptionTimer = new Timer(500, kafkaManager.getKafkaSpoutConfig().getPartitionRefreshPeriodMs(), TimeUnit.MILLISECONDS);\n    +    private TopologyContext topologyContext;\n     \n    -        //must subscribeKafkaConsumer before this line\n    -        kafkaConsumer = kafkaManager.getKafkaConsumer();\n    -        translator = kafkaManager.getKafkaSpoutConfig().getTranslator();\n    +    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext topologyContext, Timer refreshSubscriptionTimer) {\n    +        this.kafkaConsumer = kafkaManager.createAndSubscribeKafkaConsumer(topologyContext);\n    +        this.kafkaManager = kafkaManager;\n    +        this.topologyContext = topologyContext;\n    +        this.refreshSubscriptionTimer = refreshSubscriptionTimer;\n    +        this.translator = kafkaManager.getKafkaSpoutConfig().getTranslator();\n     \n             final KafkaSpoutConfig<K, V> kafkaSpoutConfig = kafkaManager.getKafkaSpoutConfig();\n    -        pollTimeoutMs = kafkaSpoutConfig.getPollTimeoutMs();\n    -        firstPollOffsetStrategy = kafkaSpoutConfig.getFirstPollOffsetStrategy();\n    +        this.pollTimeoutMs = kafkaSpoutConfig.getPollTimeoutMs();\n    +        this.firstPollOffsetStrategy = kafkaSpoutConfig.getFirstPollOffsetStrategy();\n             LOG.debug(\"Created {}\", this);\n         }\n     \n    +    /**\n    +     * Creates instance of this class with default 500 millisecond refresh subscription timer\n    +     */\n    +    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext topologyContext) {\n    +        this(kafkaManager, topologyContext, new Timer(500,\n    --- End diff --\n    \n    do we want make the timer here configurable instead of 500\n","created":"2017-01-31T03:27:15.384+0000","updated":"2017-01-31T03:27:15.384+0000","started":"2017-01-31T03:27:15.383+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36492","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36494","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98593892\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutEmitter.java ---\n    @@ -47,70 +33,111 @@\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    -public class KafkaTridentSpoutEmitter<K,V> implements IOpaquePartitionedTridentSpout.Emitter<List<TopicPartition>, KafkaTridentSpoutTopicPartition, KafkaTridentSpoutBatchMetadata<K,V>>, Serializable {\n    -    private static final long serialVersionUID = -7343927794834130435L;\n    +import java.io.Serializable;\n    +import java.util.ArrayList;\n    +import java.util.Arrays;\n    +import java.util.Collection;\n    +import java.util.Collections;\n    +import java.util.HashSet;\n    +import java.util.List;\n    +import java.util.Set;\n    +import java.util.concurrent.TimeUnit;\n    +\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;\n     \n    +public class KafkaTridentSpoutEmitter<K, V> implements IOpaquePartitionedTridentSpout.Emitter<\n    +        List<TopicPartition>,\n    +        KafkaTridentSpoutTopicPartition,\n    +        KafkaTridentSpoutBatchMetadata<K, V>>,\n    +        Serializable {\n    +\n    +    private static final long serialVersionUID = -7343927794834130435L;\n         private static final Logger LOG = LoggerFactory.getLogger(KafkaTridentSpoutEmitter.class);\n     \n         // Kafka\n         private final KafkaConsumer<K, V> kafkaConsumer;\n     \n         // Bookkeeping\n         private final KafkaTridentSpoutManager<K, V> kafkaManager;\n    +\n         // Declare some KafkaTridentSpoutManager references for convenience\n         private final long pollTimeoutMs;\n         private final KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy;\n         private final RecordTranslator<K, V> translator;\n         private final Timer refreshSubscriptionTimer;\n     \n    -    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext context) {\n    -        this.kafkaManager = kafkaManager;\n    -        this.kafkaManager.subscribeKafkaConsumer(context);\n    -        refreshSubscriptionTimer = new Timer(500, kafkaManager.getKafkaSpoutConfig().getPartitionRefreshPeriodMs(), TimeUnit.MILLISECONDS);\n    +    private TopologyContext topologyContext;\n     \n    -        //must subscribeKafkaConsumer before this line\n    -        kafkaConsumer = kafkaManager.getKafkaConsumer();\n    -        translator = kafkaManager.getKafkaSpoutConfig().getTranslator();\n    +    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext topologyContext, Timer refreshSubscriptionTimer) {\n    +        this.kafkaConsumer = kafkaManager.createAndSubscribeKafkaConsumer(topologyContext);\n    +        this.kafkaManager = kafkaManager;\n    +        this.topologyContext = topologyContext;\n    +        this.refreshSubscriptionTimer = refreshSubscriptionTimer;\n    +        this.translator = kafkaManager.getKafkaSpoutConfig().getTranslator();\n     \n             final KafkaSpoutConfig<K, V> kafkaSpoutConfig = kafkaManager.getKafkaSpoutConfig();\n    -        pollTimeoutMs = kafkaSpoutConfig.getPollTimeoutMs();\n    -        firstPollOffsetStrategy = kafkaSpoutConfig.getFirstPollOffsetStrategy();\n    +        this.pollTimeoutMs = kafkaSpoutConfig.getPollTimeoutMs();\n    +        this.firstPollOffsetStrategy = kafkaSpoutConfig.getFirstPollOffsetStrategy();\n             LOG.debug(\"Created {}\", this);\n         }\n     \n    +    /**\n    +     * Creates instance of this class with default 500 millisecond refresh subscription timer\n    +     */\n    +    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext topologyContext) {\n    +        this(kafkaManager, topologyContext, new Timer(500,\n    --- End diff --\n    \n    This is for backward compatible. Another constructor which receives timer is available.\n","created":"2017-01-31T03:36:20.682+0000","updated":"2017-01-31T03:36:20.682+0000","started":"2017-01-31T03:36:20.681+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36494","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36495","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user harshach commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98593964\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutEmitter.java ---\n    @@ -47,70 +33,111 @@\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    -public class KafkaTridentSpoutEmitter<K,V> implements IOpaquePartitionedTridentSpout.Emitter<List<TopicPartition>, KafkaTridentSpoutTopicPartition, KafkaTridentSpoutBatchMetadata<K,V>>, Serializable {\n    -    private static final long serialVersionUID = -7343927794834130435L;\n    +import java.io.Serializable;\n    +import java.util.ArrayList;\n    +import java.util.Arrays;\n    +import java.util.Collection;\n    +import java.util.Collections;\n    +import java.util.HashSet;\n    +import java.util.List;\n    +import java.util.Set;\n    +import java.util.concurrent.TimeUnit;\n    +\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;\n     \n    +public class KafkaTridentSpoutEmitter<K, V> implements IOpaquePartitionedTridentSpout.Emitter<\n    +        List<TopicPartition>,\n    +        KafkaTridentSpoutTopicPartition,\n    +        KafkaTridentSpoutBatchMetadata<K, V>>,\n    +        Serializable {\n    +\n    +    private static final long serialVersionUID = -7343927794834130435L;\n         private static final Logger LOG = LoggerFactory.getLogger(KafkaTridentSpoutEmitter.class);\n     \n         // Kafka\n         private final KafkaConsumer<K, V> kafkaConsumer;\n     \n         // Bookkeeping\n         private final KafkaTridentSpoutManager<K, V> kafkaManager;\n    +\n         // Declare some KafkaTridentSpoutManager references for convenience\n         private final long pollTimeoutMs;\n         private final KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy;\n         private final RecordTranslator<K, V> translator;\n         private final Timer refreshSubscriptionTimer;\n     \n    -    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext context) {\n    -        this.kafkaManager = kafkaManager;\n    -        this.kafkaManager.subscribeKafkaConsumer(context);\n    -        refreshSubscriptionTimer = new Timer(500, kafkaManager.getKafkaSpoutConfig().getPartitionRefreshPeriodMs(), TimeUnit.MILLISECONDS);\n    +    private TopologyContext topologyContext;\n     \n    -        //must subscribeKafkaConsumer before this line\n    -        kafkaConsumer = kafkaManager.getKafkaConsumer();\n    -        translator = kafkaManager.getKafkaSpoutConfig().getTranslator();\n    +    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext topologyContext, Timer refreshSubscriptionTimer) {\n    +        this.kafkaConsumer = kafkaManager.createAndSubscribeKafkaConsumer(topologyContext);\n    +        this.kafkaManager = kafkaManager;\n    +        this.topologyContext = topologyContext;\n    +        this.refreshSubscriptionTimer = refreshSubscriptionTimer;\n    +        this.translator = kafkaManager.getKafkaSpoutConfig().getTranslator();\n     \n             final KafkaSpoutConfig<K, V> kafkaSpoutConfig = kafkaManager.getKafkaSpoutConfig();\n    -        pollTimeoutMs = kafkaSpoutConfig.getPollTimeoutMs();\n    -        firstPollOffsetStrategy = kafkaSpoutConfig.getFirstPollOffsetStrategy();\n    +        this.pollTimeoutMs = kafkaSpoutConfig.getPollTimeoutMs();\n    +        this.firstPollOffsetStrategy = kafkaSpoutConfig.getFirstPollOffsetStrategy();\n             LOG.debug(\"Created {}\", this);\n         }\n     \n    +    /**\n    +     * Creates instance of this class with default 500 millisecond refresh subscription timer\n    +     */\n    +    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext topologyContext) {\n    +        this(kafkaManager, topologyContext, new Timer(500,\n    +                kafkaManager.getKafkaSpoutConfig().getPartitionRefreshPeriodMs(), TimeUnit.MILLISECONDS));\n    +    }\n    +\n         @Override\n         public KafkaTridentSpoutBatchMetadata<K, V> emitPartitionBatch(TransactionAttempt tx, TridentCollector collector,\n    -            KafkaTridentSpoutTopicPartition partitionTs, KafkaTridentSpoutBatchMetadata<K, V> lastBatch) {\n    -        LOG.debug(\"Emitting batch: [transaction = {}], [partition = {}], [collector = {}], [lastBatchMetadata = {}]\",\n    -                tx, partitionTs, collector, lastBatch);\n    +            KafkaTridentSpoutTopicPartition currBatchPartition, KafkaTridentSpoutBatchMetadata<K, V> lastBatch) {\n     \n    -        final TopicPartition topicPartition = partitionTs.getTopicPartition();\n    +        LOG.debug(\"Processing batch: [transaction = {}], [currBatchPartition = {}], [lastBatchMetadata = {}], [collector = {}]\",\n    +                tx, currBatchPartition, lastBatch, collector);\n    +\n    +        final TopicPartition currBatchTp = currBatchPartition.getTopicPartition();\n    +        final Set<TopicPartition> assignments = kafkaConsumer.assignment();\n             KafkaTridentSpoutBatchMetadata<K, V> currentBatch = lastBatch;\n             Collection<TopicPartition> pausedTopicPartitions = Collections.emptySet();\n     \n    -        try {\n    -            // pause other topic partitions to only poll from current topic partition\n    -            pausedTopicPartitions = pauseTopicPartitions(topicPartition);\n    +        if (assignments == null || !assignments.contains(currBatchPartition.getTopicPartition())) {\n    +            LOG.debug(\"SKIPPING processing batch: [transaction = {}], [currBatchPartition = {}], [lastBatchMetadata = {}], \" +\n    +                            \"[collector = {}] because it is not assigned [{}] to consumer instance [{}] of consumer group [{}]\",\n    +                    tx, currBatchPartition, lastBatch, collector, assignments, kafkaConsumer,\n    +                    kafkaManager.getKafkaSpoutConfig().getConsumerGroupId());\n    +        } else {\n    +            try {\n    +                // pause other topic partitions to only poll from current topic partition\n    +                pausedTopicPartitions = pauseTopicPartitions(currBatchTp);\n    --- End diff --\n    \n    how this will work in case of multiple executors running the spout. It looks like we are making sure there is only executor/kafka-consumer that can poll the topic partitions. It looks like the intent here is to keep data from 1 partition per batch. \n","created":"2017-01-31T03:37:23.198+0000","updated":"2017-01-31T03:37:23.198+0000","started":"2017-01-31T03:37:23.198+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36495","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36496","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user harshach commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r98594395\n  \n    --- Diff: pom.xml ---\n    @@ -267,7 +267,7 @@\n             <storm.kafka.artifact.id>kafka_2.10</storm.kafka.artifact.id>\n     \n             <!-- kafka version used by new storm-kafka-client spout code -->\n    -        <storm.kafka.client.version>0.10.0.0</storm.kafka.client.version>\n    +        <storm.kafka.client.version>0.10.1.1</storm.kafka.client.version>\n    --- End diff --\n    \n    Lets keep the version to 0.10.0.1 here. Its better to support lowest version as much as possible. As of now old clients can connect to new brokers but not other way round.\n","created":"2017-01-31T03:44:21.665+0000","updated":"2017-01-31T03:44:21.665+0000","started":"2017-01-31T03:44:21.665+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36496","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36497","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user harshach commented on the issue:\n\n    https://github.com/apache/storm/pull/1902\n  \n    @hmcl overall looks good to me. Left few questions. @hmcl has some good points around the topic names.\n","created":"2017-01-31T03:45:02.584+0000","updated":"2017-01-31T03:45:02.584+0000","started":"2017-01-31T03:45:02.584+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36497","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36559","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r99045274\n  \n    --- Diff: examples/storm-kafka-examples/src/main/java/org/apache/storm/kafka/trident/TridentKafkaWordCount.java ---\n    @@ -95,7 +95,8 @@ public static void main(String[] args) throws Exception {\n                     localSubmitter.submit(prodTpName, tpConf, KafkaProducerTopology.newTopology(zkBrokerUrl[1], topicName));\n                     // Consumer\n                     localSubmitter.submit(consTpName, tpConf, TridentKafkaConsumerTopology.newTopology(localSubmitter.getDrpc(),\n    -                        new TransactionalTridentKafkaSpout(newTridentKafkaConfig(zkBrokerUrl[0]))));\n    +                        new OpaqueTridentKafkaSpout(newTridentKafkaConfig(zkBrokerUrl[0]))));\n    +//                        new TransactionalTridentKafkaSpout(newTridentKafkaConfig(zkBrokerUrl[0]))));\n    --- End diff --\n    \n    I meant to leave it such that it's pretty trivial, and also brings awareness, of using this test to test both Opaque and Transactional Trident. I think it's an overdo to write code supporting both (e.g. with a CLI option), that's why I left this as an easy way to do so. I can put a comment saying why this code is there. If you still think it should be removed, I can do it. Let me know.\n","created":"2017-02-02T02:52:43.959+0000","updated":"2017-02-02T02:52:43.959+0000","started":"2017-02-02T02:52:43.957+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36559","issueId":"13033513"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13033513/worklog/36560","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1902#discussion_r99045382\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/trident/KafkaTridentSpoutEmitter.java ---\n    @@ -47,70 +33,111 @@\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    -public class KafkaTridentSpoutEmitter<K,V> implements IOpaquePartitionedTridentSpout.Emitter<List<TopicPartition>, KafkaTridentSpoutTopicPartition, KafkaTridentSpoutBatchMetadata<K,V>>, Serializable {\n    -    private static final long serialVersionUID = -7343927794834130435L;\n    +import java.io.Serializable;\n    +import java.util.ArrayList;\n    +import java.util.Arrays;\n    +import java.util.Collection;\n    +import java.util.Collections;\n    +import java.util.HashSet;\n    +import java.util.List;\n    +import java.util.Set;\n    +import java.util.concurrent.TimeUnit;\n    +\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;\n    +import static org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;\n     \n    +public class KafkaTridentSpoutEmitter<K, V> implements IOpaquePartitionedTridentSpout.Emitter<\n    +        List<TopicPartition>,\n    +        KafkaTridentSpoutTopicPartition,\n    +        KafkaTridentSpoutBatchMetadata<K, V>>,\n    +        Serializable {\n    +\n    +    private static final long serialVersionUID = -7343927794834130435L;\n         private static final Logger LOG = LoggerFactory.getLogger(KafkaTridentSpoutEmitter.class);\n     \n         // Kafka\n         private final KafkaConsumer<K, V> kafkaConsumer;\n     \n         // Bookkeeping\n         private final KafkaTridentSpoutManager<K, V> kafkaManager;\n    +\n         // Declare some KafkaTridentSpoutManager references for convenience\n         private final long pollTimeoutMs;\n         private final KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy;\n         private final RecordTranslator<K, V> translator;\n         private final Timer refreshSubscriptionTimer;\n     \n    -    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext context) {\n    -        this.kafkaManager = kafkaManager;\n    -        this.kafkaManager.subscribeKafkaConsumer(context);\n    -        refreshSubscriptionTimer = new Timer(500, kafkaManager.getKafkaSpoutConfig().getPartitionRefreshPeriodMs(), TimeUnit.MILLISECONDS);\n    +    private TopologyContext topologyContext;\n     \n    -        //must subscribeKafkaConsumer before this line\n    -        kafkaConsumer = kafkaManager.getKafkaConsumer();\n    -        translator = kafkaManager.getKafkaSpoutConfig().getTranslator();\n    +    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext topologyContext, Timer refreshSubscriptionTimer) {\n    +        this.kafkaConsumer = kafkaManager.createAndSubscribeKafkaConsumer(topologyContext);\n    +        this.kafkaManager = kafkaManager;\n    +        this.topologyContext = topologyContext;\n    +        this.refreshSubscriptionTimer = refreshSubscriptionTimer;\n    +        this.translator = kafkaManager.getKafkaSpoutConfig().getTranslator();\n     \n             final KafkaSpoutConfig<K, V> kafkaSpoutConfig = kafkaManager.getKafkaSpoutConfig();\n    -        pollTimeoutMs = kafkaSpoutConfig.getPollTimeoutMs();\n    -        firstPollOffsetStrategy = kafkaSpoutConfig.getFirstPollOffsetStrategy();\n    +        this.pollTimeoutMs = kafkaSpoutConfig.getPollTimeoutMs();\n    +        this.firstPollOffsetStrategy = kafkaSpoutConfig.getFirstPollOffsetStrategy();\n             LOG.debug(\"Created {}\", this);\n         }\n     \n    +    /**\n    +     * Creates instance of this class with default 500 millisecond refresh subscription timer\n    +     */\n    +    public KafkaTridentSpoutEmitter(KafkaTridentSpoutManager<K,V> kafkaManager, TopologyContext topologyContext) {\n    +        this(kafkaManager, topologyContext, new Timer(500,\n    +                kafkaManager.getKafkaSpoutConfig().getPartitionRefreshPeriodMs(), TimeUnit.MILLISECONDS));\n    +    }\n    +\n         @Override\n         public KafkaTridentSpoutBatchMetadata<K, V> emitPartitionBatch(TransactionAttempt tx, TridentCollector collector,\n    -            KafkaTridentSpoutTopicPartition partitionTs, KafkaTridentSpoutBatchMetadata<K, V> lastBatch) {\n    -        LOG.debug(\"Emitting batch: [transaction = {}], [partition = {}], [collector = {}], [lastBatchMetadata = {}]\",\n    -                tx, partitionTs, collector, lastBatch);\n    +            KafkaTridentSpoutTopicPartition currBatchPartition, KafkaTridentSpoutBatchMetadata<K, V> lastBatch) {\n     \n    -        final TopicPartition topicPartition = partitionTs.getTopicPartition();\n    +        LOG.debug(\"Processing batch: [transaction = {}], [currBatchPartition = {}], [lastBatchMetadata = {}], [collector = {}]\",\n    +                tx, currBatchPartition, lastBatch, collector);\n    +\n    +        final TopicPartition currBatchTp = currBatchPartition.getTopicPartition();\n    +        final Set<TopicPartition> assignments = kafkaConsumer.assignment();\n             KafkaTridentSpoutBatchMetadata<K, V> currentBatch = lastBatch;\n             Collection<TopicPartition> pausedTopicPartitions = Collections.emptySet();\n     \n    -        try {\n    -            // pause other topic partitions to only poll from current topic partition\n    -            pausedTopicPartitions = pauseTopicPartitions(topicPartition);\n    +        if (assignments == null || !assignments.contains(currBatchPartition.getTopicPartition())) {\n    +            LOG.debug(\"SKIPPING processing batch: [transaction = {}], [currBatchPartition = {}], [lastBatchMetadata = {}], \" +\n    --- End diff --\n    \n    I agree with WARN. I believe the the code can only get here if there is a rebalance while the tasks are being assigned. This logic will guarantee that we retry.\n","created":"2017-02-02T02:54:15.730+0000","updated":"2017-02-02T02:54:15.730+0000","started":"2017-02-02T02:54:15.730+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36560","issueId":"13033513"}]},"customfield_12311820":"0|i38iq7:"}}