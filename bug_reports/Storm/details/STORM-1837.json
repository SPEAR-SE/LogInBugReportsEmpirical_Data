{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12969845","self":"https://issues.apache.org/jira/rest/api/2/issue/12969845","key":"STORM-1837","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":7200,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12335748","id":"12335748","name":"1.1.0","archived":false,"released":true,"releaseDate":"2017-03-29"}],"aggregatetimespent":7200,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2016-05-16T20:58:30.308+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Sep 19 20:44:17 UTC 2016","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_10985548129_*|*_5_*:*_1_*:*_0","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2016-09-19T20:44:15.722+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-1837/watchers","watchCount":3,"isWatching":false},"created":"2016-05-15T17:11:49.641+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329843","id":"12329843","name":"1.0.0","archived":false,"released":true,"releaseDate":"2016-04-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12335587","id":"12335587","name":"1.0.1","archived":false,"released":true,"releaseDate":"2016-05-06"}],"customfield_12312339":null,"issuelinks":[],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Srdo","name":"Srdo","key":"srdo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stig Rohde Døssing","active":true,"timeZone":"Europe/Copenhagen"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-09-19T20:44:17.514+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"Since https://github.com/apache/storm/pull/810 it is no longer possible to call Testing.completeTopology when time is not simulating, because a call to advance-cluster-time is made from the function, which calls Time/advanceTime. advance-cluster-time should only be called if time is simulating.\n\nSince https://github.com/apache/storm/pull/830 a local cluster run without time simulation may lose messages. When a worker emits messages for a worker that hasn't started yet, the message is lost. This can happen because spouts may start emitting before all workers have started, when time simulation is disabled. Local clusters usually run without message timeouts, so this will make tests relying on Testing.withLocalCluster flaky.\n\nThe problem is that there are no longer any queues to store messages for workers that haven't started yet. See https://github.com/apache/storm/pull/830/files#diff-c6ff4208ef84c7a5a1a6b8b6bd1f7d19R104. A queue should be added for messages for workers that haven't registered a receive callback yet.","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"2h","remainingEstimateSeconds":0,"timeSpentSeconds":7200},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Running local clusters without simulating time breaks Testing.completeTopology, and may cause message loss","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Srdo","name":"Srdo","key":"srdo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stig Rohde Døssing","active":true,"timeZone":"Europe/Copenhagen"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Srdo","name":"Srdo","key":"srdo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stig Rohde Døssing","active":true,"timeZone":"Europe/Copenhagen"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":7200,"total":7200,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":7200,"total":7200,"percent":100},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/comment/15285278","id":"15285278","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil commented on the pull request:\n\n    https://github.com/apache/storm/pull/1417#issuecomment-219545865\n  \n    The code changes look good. \n    I ran unit test and had `netty_unit_test` timeout once. I think we need to change the timeout for https://github.com/apache/storm/blob/master/storm-core/test/clj/org/apache/storm/messaging/netty_unit_test.clj#L115\n    \n    ```\n    <error message=\"Uncaught exception, not in assertion.\">Uncaught exception, not in assertion.\n    expected: nil\n      actual: java.lang.AssertionError: Test timed out (5000ms) (empty? (.getLoad client [(int 1) (int 2)]))\n     at org.apache.storm.messaging.netty_unit_test$test_load_fn.invoke (netty_unit_test.clj:115)\n        org.apache.storm.messaging.netty_unit_test/fn (netty_unit_test.clj:143)\n        clojure.test$test_var$fn__7670.invoke (test.clj:704)\n        clojure.test$test_var.invoke (test.clj:704)\n        clojure.test$test_vars$fn__7692$fn__7697.invoke (test.clj:722)\n        clojure.test$default_fixture.invoke (test.clj:674)\n        clojure.test$test_vars$fn__7692.invoke (test.clj:722)\n        clojure.test$default_fixture.invoke (test.clj:674)\n        clojure.test$test_vars.invoke (test.clj:718)\n        clojure.test$test_all_vars.invoke (test.clj:728)\n        clojure.test$test_ns.invoke (test.clj:747)\n        clojure.core$map$fn__4553.invoke (core.clj:2624)\n        clojure.lang.LazySeq.sval (LazySeq.java:40)\n        clojure.lang.LazySeq.seq (LazySeq.java:49)\n        clojure.lang.Cons.next (Cons.java:39)\n        clojure.lang.RT.boundedLength (RT.java:1735)\n        clojure.lang.RestFn.applyTo (RestFn.java:130)\n        clojure.core$apply.invoke (core.clj:632)\n        clojure.test$run_tests.doInvoke (test.clj:762)\n        clojure.lang.RestFn.invoke (RestFn.java:408)\n        org.apache.storm.testrunner$eval8790$iter__8791__8795$fn__8796$fn__8797$fn__8798.invoke (test_runner.clj:107)\n        org.apache.storm.testrunner$eval8790$iter__8791__8795$fn__8796$fn__8797.invoke (test_runner.clj:53)\n        org.apache.storm.testrunner$eval8790$iter__8791__8795$fn__8796.invoke (test_runner.clj:52)\n        clojure.lang.LazySeq.sval (LazySeq.java:40)\n        clojure.lang.LazySeq.seq (LazySeq.java:49)\n        clojure.lang.RT.seq (RT.java:507)\n        clojure.core/seq (core.clj:137)\n        clojure.core$dorun.invoke (core.clj:3009)\n        org.apache.storm.testrunner$eval8790.invoke (test_runner.clj:52)\n        clojure.lang.Compiler.eval (Compiler.java:6782)\n        clojure.lang.Compiler.load (Compiler.java:7227)\n        clojure.lang.Compiler.loadFile (Compiler.java:7165)\n        clojure.main$load_script.invoke (main.clj:275)\n        clojure.main$script_opt.invoke (main.clj:337)\n        clojure.main$main.doInvoke (main.clj:421)\n        clojure.lang.RestFn.invoke (RestFn.java:421)\n        clojure.lang.Var.invoke (Var.java:383)\n        clojure.lang.AFn.applyToHelper (AFn.java:156)\n        clojure.lang.Var.applyTo (Var.java:700)\n        clojure.main.main (main.java:37)\n    \n          at: test_runner.clj:105</error>\n            </testcase>\n    ```\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-16T20:58:30.308+0000","updated":"2016-05-16T20:58:30.308+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/comment/15285310","id":"15285310","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user srdo commented on the pull request:\n\n    https://github.com/apache/storm/pull/1417#issuecomment-219549248\n  \n    I'd be happy to bump it. I don't think test-load-fn actually hits any of the changed code though, since it uses the netty.Context rather than local.Context. What do you think is a reasonable timeout? 15-20 seconds?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-16T21:11:08.708+0000","updated":"2016-05-16T21:11:08.708+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/comment/15285869","id":"15285869","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user HeartSaVioR commented on the pull request:\n\n    https://github.com/apache/storm/pull/1417#issuecomment-219600127\n  \n    @kishorvpatil \n    Nice finding. I think it should reflect STORM_TEST_TIMEOUT_MS, but it can be done with another JIRA issue since it seems not related on this PR.\n    \n    Btw, other test failure is observed from Travis CI, which I think is also not related to this PR.\n    \n    ```\n    Running org.apache.storm.utils.DisruptorQueueTest\n    Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 4.352 sec <<< FAILURE! - in org.apache.storm.utils.DisruptorQueueTest\n    testInOrderBatch(org.apache.storm.utils.DisruptorQueueTest)  Time elapsed: 0.405 sec  <<< FAILURE!\n    junit.framework.AssertionFailedError: producer 0 is still alive\n    \tat junit.framework.Assert.fail(Assert.java:57)\n    \tat junit.framework.Assert.assertTrue(Assert.java:22)\n    \tat junit.framework.Assert.assertFalse(Assert.java:39)\n    \tat junit.framework.TestCase.assertFalse(TestCase.java:210)\n    \tat org.apache.storm.utils.DisruptorQueueTest.run(DisruptorQueueTest.java:135)\n    \tat org.apache.storm.utils.DisruptorQueueTest.testInOrderBatch(DisruptorQueueTest.java:106)\n    ```\n    \n    @srdo \n    I guess what @kishorvpatil reported is a kind of intermittent failure, since one of storm-core build is passed on Travis CI.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-17T01:59:52.776+0000","updated":"2016-05-17T01:59:52.776+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/comment/15286344","id":"15286344","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user srdo commented on the pull request:\n\n    https://github.com/apache/storm/pull/1417#issuecomment-219674715\n  \n    Something like this? https://github.com/apache/storm/pull/1421\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-17T10:07:17.720+0000","updated":"2016-05-17T10:07:17.720+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/comment/15286756","id":"15286756","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil commented on the pull request:\n\n    https://github.com/apache/storm/pull/1417#issuecomment-219741531\n  \n    @HeartSaVioR, you are right, I did not notice the `DisruptorQueueTest` failure.\n    @srdo, Thank you for putting up #1421. It's ironic to see `LocalNimbusTest` fail for that PR. :) I am bumping this on up.\n    +1\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-17T14:48:14.846+0000","updated":"2016-05-17T14:48:14.846+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/comment/15504637","id":"15504637","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"Thanks [~Srdo],\n\nI merged this into master and branch-1.x","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2016-09-19T20:44:17.128+0000","updated":"2016-09-19T20:44:17.128+0000"}],"maxResults":6,"total":6,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-1837/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":13,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/27346","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/1417\n  \n    @kishorvpatil Please take another look at this when you have time. There was a potential NPE in the flushPending function because I forgot to check server._cb for null before dereferencing. It should be fixed now. We run a large number of tests using local clusters, and this fix seems to have made the tests much more reliable.\n","created":"2016-08-29T10:55:18.129+0000","updated":"2016-08-29T10:55:18.129+0000","started":"2016-08-29T10:55:18.128+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"27346","issueId":"12969845"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/29233","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/1417\n  \n    @revans2 Any chance I could get you to take a look at this? I'd like to get this in, since local clusters are currently likely to drop messages when not using time simulation.\n","created":"2016-09-16T08:13:44.059+0000","updated":"2016-09-16T08:13:44.059+0000","started":"2016-09-16T08:13:44.056+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"29233","issueId":"12969845"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/29308","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1417#discussion_r79412277\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/messaging/local/Context.java ---\n    @@ -82,31 +86,73 @@ public void close() {\n     \n         private static class LocalClient implements IConnection {\n             private final LocalServer _server;\n    +        //Messages sent before the server registered a callback\n    +        private final LinkedBlockingQueue<TaskMessage> _pendingDueToUnregisteredServer;\n    +        private final ScheduledExecutorService _pendingFlusher;\n     \n             public LocalClient(LocalServer server) {\n                 _server = server;\n    +            _pendingDueToUnregisteredServer = new LinkedBlockingQueue<>();\n    +            _pendingFlusher = Executors.newScheduledThreadPool(1, new ThreadFactory(){\n    +                @Override\n    +                public Thread newThread(Runnable runnable) {\n    +                    Thread thread = new Thread(runnable);\n    +                    thread.setName(\"LocalClientFlusher-\" + thread.getId());\n    +                    thread.setDaemon(true);\n    +                    return thread;\n    +                }\n    +            });\n    +            _pendingFlusher.scheduleAtFixedRate(new Runnable(){\n    +                @Override\n    +                public void run(){\n    +                    try {\n    +                        //Ensure messages are flushed even if no more sends are performed\n    +                        flushPending();\n    +                    } catch (Throwable t) {\n    +                        LOG.error(\"Uncaught throwable in pending message flusher thread, messages may be lost\", t);\n    +                        throw t;\n    +                    }\n    +                }\n    +            }, 5, 5, TimeUnit.SECONDS);\n             }\n     \n             @Override\n             public void registerRecv(IConnectionCallback cb) {\n                 throw new IllegalArgumentException(\"SHOULD NOT HAPPEN\");\n             }\n    -\n    +        \n    +        private void flushPending(){\n    +            if (_server._cb != null && !_pendingDueToUnregisteredServer.isEmpty()) {\n    +                ArrayList<TaskMessage> ret = new ArrayList<>();\n    +                _pendingDueToUnregisteredServer.drainTo(ret);\n    +                _server._cb.recv(ret);\n    --- End diff --\n    \n    If _cb is marked as volatile, does that means we expect it to change at any point in time?  If so then the null check is not enough.  We should cache it locally before doing the null check and the call (everywhere).\n","created":"2016-09-19T15:14:27.864+0000","updated":"2016-09-19T15:14:27.864+0000","started":"2016-09-19T15:14:27.863+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"29308","issueId":"12969845"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/29309","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1417#discussion_r79413571\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/messaging/local/Context.java ---\n    @@ -82,31 +86,73 @@ public void close() {\n     \n         private static class LocalClient implements IConnection {\n             private final LocalServer _server;\n    +        //Messages sent before the server registered a callback\n    +        private final LinkedBlockingQueue<TaskMessage> _pendingDueToUnregisteredServer;\n    +        private final ScheduledExecutorService _pendingFlusher;\n     \n             public LocalClient(LocalServer server) {\n                 _server = server;\n    +            _pendingDueToUnregisteredServer = new LinkedBlockingQueue<>();\n    +            _pendingFlusher = Executors.newScheduledThreadPool(1, new ThreadFactory(){\n    +                @Override\n    +                public Thread newThread(Runnable runnable) {\n    +                    Thread thread = new Thread(runnable);\n    +                    thread.setName(\"LocalClientFlusher-\" + thread.getId());\n    +                    thread.setDaemon(true);\n    +                    return thread;\n    +                }\n    +            });\n    +            _pendingFlusher.scheduleAtFixedRate(new Runnable(){\n    +                @Override\n    +                public void run(){\n    +                    try {\n    +                        //Ensure messages are flushed even if no more sends are performed\n    +                        flushPending();\n    +                    } catch (Throwable t) {\n    +                        LOG.error(\"Uncaught throwable in pending message flusher thread, messages may be lost\", t);\n    +                        throw t;\n    --- End diff --\n    \n    Does this compile?  I didn't think we could throw a throwable from a method that does not declare it.\n","created":"2016-09-19T15:14:27.880+0000","updated":"2016-09-19T15:14:27.880+0000","started":"2016-09-19T15:14:27.880+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"29309","issueId":"12969845"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/29310","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1417#discussion_r79412428\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/messaging/local/Context.java ---\n    @@ -82,31 +86,73 @@ public void close() {\n     \n         private static class LocalClient implements IConnection {\n             private final LocalServer _server;\n    +        //Messages sent before the server registered a callback\n    +        private final LinkedBlockingQueue<TaskMessage> _pendingDueToUnregisteredServer;\n    +        private final ScheduledExecutorService _pendingFlusher;\n     \n             public LocalClient(LocalServer server) {\n                 _server = server;\n    +            _pendingDueToUnregisteredServer = new LinkedBlockingQueue<>();\n    +            _pendingFlusher = Executors.newScheduledThreadPool(1, new ThreadFactory(){\n    +                @Override\n    +                public Thread newThread(Runnable runnable) {\n    +                    Thread thread = new Thread(runnable);\n    +                    thread.setName(\"LocalClientFlusher-\" + thread.getId());\n    +                    thread.setDaemon(true);\n    +                    return thread;\n    +                }\n    +            });\n    +            _pendingFlusher.scheduleAtFixedRate(new Runnable(){\n    +                @Override\n    +                public void run(){\n    +                    try {\n    +                        //Ensure messages are flushed even if no more sends are performed\n    +                        flushPending();\n    +                    } catch (Throwable t) {\n    +                        LOG.error(\"Uncaught throwable in pending message flusher thread, messages may be lost\", t);\n    +                        throw t;\n    +                    }\n    +                }\n    +            }, 5, 5, TimeUnit.SECONDS);\n             }\n     \n             @Override\n             public void registerRecv(IConnectionCallback cb) {\n                 throw new IllegalArgumentException(\"SHOULD NOT HAPPEN\");\n             }\n    -\n    +        \n    +        private void flushPending(){\n    +            if (_server._cb != null && !_pendingDueToUnregisteredServer.isEmpty()) {\n    +                ArrayList<TaskMessage> ret = new ArrayList<>();\n    +                _pendingDueToUnregisteredServer.drainTo(ret);\n    +                _server._cb.recv(ret);\n    +            }\n    +        }\n    +        \n             @Override\n             public void send(int taskId,  byte[] payload) {\n    +            TaskMessage message = new TaskMessage(taskId, payload);\n                 if (_server._cb != null) {\n    -                _server._cb.recv(Arrays.asList(new TaskMessage(taskId, payload)));\n    +                flushPending();\n    +                _server._cb.recv(Arrays.asList(message));\n    --- End diff --\n    \n    cache _cb before using it.\n","created":"2016-09-19T15:14:28.127+0000","updated":"2016-09-19T15:14:28.127+0000","started":"2016-09-19T15:14:28.126+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"29310","issueId":"12969845"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/29311","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1417#discussion_r79412490\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/messaging/local/Context.java ---\n    @@ -82,31 +86,73 @@ public void close() {\n     \n         private static class LocalClient implements IConnection {\n             private final LocalServer _server;\n    +        //Messages sent before the server registered a callback\n    +        private final LinkedBlockingQueue<TaskMessage> _pendingDueToUnregisteredServer;\n    +        private final ScheduledExecutorService _pendingFlusher;\n     \n             public LocalClient(LocalServer server) {\n                 _server = server;\n    +            _pendingDueToUnregisteredServer = new LinkedBlockingQueue<>();\n    +            _pendingFlusher = Executors.newScheduledThreadPool(1, new ThreadFactory(){\n    +                @Override\n    +                public Thread newThread(Runnable runnable) {\n    +                    Thread thread = new Thread(runnable);\n    +                    thread.setName(\"LocalClientFlusher-\" + thread.getId());\n    +                    thread.setDaemon(true);\n    +                    return thread;\n    +                }\n    +            });\n    +            _pendingFlusher.scheduleAtFixedRate(new Runnable(){\n    +                @Override\n    +                public void run(){\n    +                    try {\n    +                        //Ensure messages are flushed even if no more sends are performed\n    +                        flushPending();\n    +                    } catch (Throwable t) {\n    +                        LOG.error(\"Uncaught throwable in pending message flusher thread, messages may be lost\", t);\n    +                        throw t;\n    +                    }\n    +                }\n    +            }, 5, 5, TimeUnit.SECONDS);\n             }\n     \n             @Override\n             public void registerRecv(IConnectionCallback cb) {\n                 throw new IllegalArgumentException(\"SHOULD NOT HAPPEN\");\n             }\n    -\n    +        \n    +        private void flushPending(){\n    +            if (_server._cb != null && !_pendingDueToUnregisteredServer.isEmpty()) {\n    +                ArrayList<TaskMessage> ret = new ArrayList<>();\n    +                _pendingDueToUnregisteredServer.drainTo(ret);\n    +                _server._cb.recv(ret);\n    +            }\n    +        }\n    +        \n             @Override\n             public void send(int taskId,  byte[] payload) {\n    +            TaskMessage message = new TaskMessage(taskId, payload);\n                 if (_server._cb != null) {\n    -                _server._cb.recv(Arrays.asList(new TaskMessage(taskId, payload)));\n    +                flushPending();\n    +                _server._cb.recv(Arrays.asList(message));\n    +            } else {\n    +                _pendingDueToUnregisteredServer.add(message);\n                 }\n             }\n      \n             @Override\n             public void send(Iterator<TaskMessage> msgs) {\n                 if (_server._cb != null) {\n    +                flushPending();\n                     ArrayList<TaskMessage> ret = new ArrayList<>();\n                     while (msgs.hasNext()) {\n                         ret.add(msgs.next());\n                     }\n                     _server._cb.recv(ret);\n    --- End diff --\n    \n    cache _cb before using it.\n","created":"2016-09-19T15:14:28.522+0000","updated":"2016-09-19T15:14:28.522+0000","started":"2016-09-19T15:14:28.522+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"29311","issueId":"12969845"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/29319","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1417#discussion_r79430410\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/messaging/local/Context.java ---\n    @@ -82,31 +86,73 @@ public void close() {\n     \n         private static class LocalClient implements IConnection {\n             private final LocalServer _server;\n    +        //Messages sent before the server registered a callback\n    +        private final LinkedBlockingQueue<TaskMessage> _pendingDueToUnregisteredServer;\n    +        private final ScheduledExecutorService _pendingFlusher;\n     \n             public LocalClient(LocalServer server) {\n                 _server = server;\n    +            _pendingDueToUnregisteredServer = new LinkedBlockingQueue<>();\n    +            _pendingFlusher = Executors.newScheduledThreadPool(1, new ThreadFactory(){\n    +                @Override\n    +                public Thread newThread(Runnable runnable) {\n    +                    Thread thread = new Thread(runnable);\n    +                    thread.setName(\"LocalClientFlusher-\" + thread.getId());\n    +                    thread.setDaemon(true);\n    +                    return thread;\n    +                }\n    +            });\n    +            _pendingFlusher.scheduleAtFixedRate(new Runnable(){\n    +                @Override\n    +                public void run(){\n    +                    try {\n    +                        //Ensure messages are flushed even if no more sends are performed\n    +                        flushPending();\n    +                    } catch (Throwable t) {\n    +                        LOG.error(\"Uncaught throwable in pending message flusher thread, messages may be lost\", t);\n    +                        throw t;\n    --- End diff --\n    \n    My guess is that it is java8 being smart and that when we try to pull it into 1.x it will fail.\n","created":"2016-09-19T16:25:05.779+0000","updated":"2016-09-19T16:25:05.779+0000","started":"2016-09-19T16:25:05.778+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"29319","issueId":"12969845"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/29320","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1417#discussion_r79430642\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/messaging/local/Context.java ---\n    @@ -82,31 +86,73 @@ public void close() {\n     \n         private static class LocalClient implements IConnection {\n             private final LocalServer _server;\n    +        //Messages sent before the server registered a callback\n    +        private final LinkedBlockingQueue<TaskMessage> _pendingDueToUnregisteredServer;\n    +        private final ScheduledExecutorService _pendingFlusher;\n     \n             public LocalClient(LocalServer server) {\n                 _server = server;\n    +            _pendingDueToUnregisteredServer = new LinkedBlockingQueue<>();\n    +            _pendingFlusher = Executors.newScheduledThreadPool(1, new ThreadFactory(){\n    +                @Override\n    +                public Thread newThread(Runnable runnable) {\n    +                    Thread thread = new Thread(runnable);\n    +                    thread.setName(\"LocalClientFlusher-\" + thread.getId());\n    +                    thread.setDaemon(true);\n    +                    return thread;\n    +                }\n    +            });\n    +            _pendingFlusher.scheduleAtFixedRate(new Runnable(){\n    +                @Override\n    +                public void run(){\n    +                    try {\n    +                        //Ensure messages are flushed even if no more sends are performed\n    +                        flushPending();\n    +                    } catch (Throwable t) {\n    +                        LOG.error(\"Uncaught throwable in pending message flusher thread, messages may be lost\", t);\n    +                        throw t;\n    +                    }\n    +                }\n    +            }, 5, 5, TimeUnit.SECONDS);\n             }\n     \n             @Override\n             public void registerRecv(IConnectionCallback cb) {\n                 throw new IllegalArgumentException(\"SHOULD NOT HAPPEN\");\n             }\n    -\n    +        \n    +        private void flushPending(){\n    +            if (_server._cb != null && !_pendingDueToUnregisteredServer.isEmpty()) {\n    +                ArrayList<TaskMessage> ret = new ArrayList<>();\n    +                _pendingDueToUnregisteredServer.drainTo(ret);\n    +                _server._cb.recv(ret);\n    --- End diff --\n    \n    I expect the callback to be set to a non-null value when the receiving worker registers at some point. I don't expect it to be set to null again once it is non-null. The volatile is just to make sure that the value becomes visible to other threads once set.\n    \n    If it doesn't become null after being set non-null is caching still needed for some reason?\n","created":"2016-09-19T16:26:10.516+0000","updated":"2016-09-19T16:26:10.516+0000","started":"2016-09-19T16:26:10.515+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"29320","issueId":"12969845"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/29322","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/1417\n  \n    +1 pending travis.  @srdo like I said I don't expect _cb to ever go back to null, I just thought it would be good to be defensive because it is a possibility the way the API is currently written.  Not a big deal though.\n","created":"2016-09-19T17:24:43.441+0000","updated":"2016-09-19T17:24:43.441+0000","started":"2016-09-19T17:24:43.438+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"29322","issueId":"12969845"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/29324","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/1417\n  \n    @revans2 Sure, it doesn't hurt. Added the caching.\n","created":"2016-09-19T17:47:18.094+0000","updated":"2016-09-19T17:47:18.094+0000","started":"2016-09-19T17:47:18.094+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"29324","issueId":"12969845"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/29327","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/1417\n  \n    I don't know why Travis is having such a hard time with master. The tests run fine on my machine.\n","created":"2016-09-19T20:00:36.573+0000","updated":"2016-09-19T20:00:36.573+0000","started":"2016-09-19T20:00:36.571+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"29327","issueId":"12969845"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/29337","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/1417\n  \n    For one of the failures it is the normal issue with maven having issues downloading dependencies.\n    \n    But there also was an NPE in one of the tests\n    ```\n    java.lang.NullPointerException\n    \tat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:26) ~[clojure-1.7.0.jar:?]\n    \tat org.apache.storm.daemon.nimbus$mk_reified_nimbus$reify__5148$iter__5203__5207$fn__5208.invoke(nimbus.clj:1997) ~[classes/:?]\n    \tat clojure.lang.LazySeq.sval(LazySeq.java:40) ~[clojure-1.7.0.jar:?]\n    \tat clojure.lang.LazySeq.seq(LazySeq.java:49) ~[clojure-1.7.0.jar:?]\n    \tat clojure.lang.RT.seq(RT.java:507) ~[clojure-1.7.0.jar:?]\n    \tat clojure.core$seq__4128.invoke(core.clj:137) ~[clojure-1.7.0.jar:?]\n    \tat clojure.core$dorun.invoke(core.clj:3009) ~[clojure-1.7.0.jar:?]\n    \tat clojure.core$doall.invoke(core.clj:3025) ~[clojure-1.7.0.jar:?]\n    \tat org.apache.storm.daemon.nimbus$mk_reified_nimbus$reify__5148.getTopologyInfoWithOpts(nimbus.clj:1995) ~[classes/:?]\n    \tat org.apache.storm.daemon.nimbus$mk_reified_nimbus$reify__5148.getTopologyInfo(nimbus.clj:2034) ~[classes/:?]\n    \tat org.apache.storm.generated.Nimbus$Processor$getTopologyInfo.getResult(Nimbus.java:3822) ~[classes/:?]\n    \tat org.apache.storm.generated.Nimbus$Processor$getTopologyInfo.getResult(Nimbus.java:3806) ~[classes/:?]\n    \tat org.apache.thrift.ProcessFunction.process(ProcessFunction.java:39) ~[libthrift-0.9.3.jar:0.9.3]\n    \tat org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:39) ~[libthrift-0.9.3.jar:0.9.3]\n    \tat org.apache.storm.security.auth.SimpleTransportPlugin$SimpleWrapProcessor.process(SimpleTransportPlugin.java:158) ~[classes/:?]\n    \tat org.apache.thrift.server.AbstractNonblockingServer$FrameBuffer.invoke(AbstractNonblockingServer.java:518) [libthrift-0.9.3.jar:0.9.3]\n    \tat org.apache.thrift.server.Invocation.run(Invocation.java:18) [libthrift-0.9.3.jar:0.9.3]\n    \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_31]\n    \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_31]\n    \tat java.lang.Thread.run(Thread.java:745) [?:1.8.0_31]\n    ```\n    \n    That failure is a known issue that I fixed in my new supervisor pull request.\n    \n    +1 for the changes\n","created":"2016-09-19T20:11:07.519+0000","updated":"2016-09-19T20:11:07.519+0000","started":"2016-09-19T20:11:07.519+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"29337","issueId":"12969845"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12969845/worklog/29342","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/storm/pull/1417\n","created":"2016-09-19T20:42:57.157+0000","updated":"2016-09-19T20:42:57.157+0000","started":"2016-09-19T20:42:57.156+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"29342","issueId":"12969845"}]},"customfield_12311820":"0|i2xzm7:"}}