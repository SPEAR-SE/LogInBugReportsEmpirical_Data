{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13075875","self":"https://issues.apache.org/jira/rest/api/2/issue/13075875","key":"STORM-2538","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":15000,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[],"aggregatetimespent":15000,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/2","id":"2","description":"The problem described is an issue which will never be fixed.","name":"Won't Fix"},"customfield_12312322":null,"customfield_12310220":"2017-06-01T16:59:29.501+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue Jul 18 02:07:31 UTC 2017","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_107876_*|*_3_*:*_1_*:*_4182779089_*|*_6_*:*_1_*:*_0","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2017-07-18T02:07:31.389+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2538/watchers","watchCount":4,"isWatching":false},"created":"2017-05-30T16:12:44.511+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12338104","id":"12338104","name":"1.x","archived":false,"released":false}],"customfield_12312339":null,"issuelinks":[{"id":"12509443","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12509443","type":{"id":"12310051","name":"Supercedes","inward":"is superceded by","outward":"supercedes","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310051"},"inwardIssue":{"id":"13077243","key":"STORM-2542","self":"https://issues.apache.org/jira/rest/api/2/issue/13077243","fields":{"summary":"Deprecate storm-kafka-client KafkaConsumer.subscribe API subscriptions on 1.x and remove them as options in 2.x","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}}],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hmclouro","name":"hmclouro","key":"hmclouro","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hugo Louro","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-07-18T02:07:31.440+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12331080","id":"12331080","name":"storm-kafka-client"}],"timeoriginalestimate":null,"description":"Currently, KafkaSpout in storm-kafka-client can cause duplicate tuples to be emitted. Reason is the implementation of ConsumerRebalanceListener interface is called by kafka everytime a new executor comes up. However, on PartitionsRevoked we already have some in flight tuples and are emitting the same ones from the new executor on which the onPartitionsAssigned was called. We need to make sure that we emit only one tuple per kafka message.","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"4h 10m","remainingEstimateSeconds":0,"timeSpentSeconds":15000},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"New kafka spout emits duplicate tuples","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pshah","name":"pshah","key":"pshah","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Priyank Shah","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pshah","name":"pshah","key":"pshah","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Priyank Shah","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":15000,"total":15000,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":15000,"total":15000,"percent":100},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/comment/16033296","id":"16033296","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Srdo","name":"Srdo","key":"srdo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stig Rohde DÃ¸ssing","active":true,"timeZone":"Europe/Copenhagen"},"body":"[~pshah] Hi Priyank. I'm wondering if you'd be willing to try out a workaround for this issue? Since the issue is caused by Kafka rebalances, I think you can resolve this by switching to this Subscription implementation https://github.com/apache/storm/blob/master/external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/ManualPartitionNamedSubscription.java. You can specify this class when creating your KafkaSpoutConfig builder (e.g. https://github.com/apache/storm/blob/master/external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpoutConfig.java#L136).\n\nSwitching to the manual Subscription should prevent rebalances from occuring unless you change the number of partitions for the topic(s) you're consuming from.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Srdo","name":"Srdo","key":"srdo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stig Rohde DÃ¸ssing","active":true,"timeZone":"Europe/Copenhagen"},"created":"2017-06-01T16:59:29.501+0000","updated":"2017-06-01T16:59:29.501+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/comment/16090986","id":"16090986","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hmclouro","name":"hmclouro","key":"hmclouro","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hugo Louro","active":true,"timeZone":"Etc/UTC"},"body":"Marked as Won't Fix in favor of STORM-2542","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hmclouro","name":"hmclouro","key":"hmclouro","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hugo Louro","active":true,"timeZone":"Etc/UTC"},"created":"2017-07-18T02:07:31.431+0000","updated":"2017-07-18T02:07:31.431+0000"}],"maxResults":2,"total":2,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2538/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":29,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43649","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user hmcl opened a pull request:\n\n    https://github.com/apache/storm/pull/2147\n\n    STORM-2538: New kafka spout emits duplicate tuples\n\n      - Refactored TimeInterval out of KafkaSpoutRetryExponentialBackoff\n      - Configurable pre-fetch tasks to be run before spout starts processing tuples\n           - Configurable fixed delay task before activation\n           - Consumer rebalance task not to poll any data during rebalance\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/hmcl/storm-apache 1.x-branch_STORM-2538\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/2147.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #2147\n    \n----\ncommit 6a8c5e828992fb5c98f54f9fd91918e2b23f6eda\nAuthor: Hugo Louro <hmclouro@gmail.com>\nDate:   2017-05-31T02:52:57Z\n\n    STORM-2538: New kafka spout emits duplicate tuples\n      - Refactored TimeInterval out of KafkaSpoutRetryExponentialBackoff\n      - Configurable pre-fetch tasks to be run before spout starts processing tuples\n           - Configurable fixed delay task before activation\n           - Consumer rebalance task not to poll any data during rebalance\n\n----\n","created":"2017-05-31T14:59:05.521+0000","updated":"2017-05-31T14:59:05.521+0000","started":"2017-05-31T14:59:05.518+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43649","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43650","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on the issue:\n\n    https://github.com/apache/storm/pull/2147\n  \n    This patch is WIP, needs fixing unit test failures. Submitting for initial review.\n","created":"2017-05-31T14:59:46.961+0000","updated":"2017-05-31T14:59:46.961+0000","started":"2017-05-31T14:59:46.956+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43650","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43657","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user arunmahadevan commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119397619\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java ---\n    @@ -74,7 +79,7 @@\n         private transient FirstPollOffsetStrategy firstPollOffsetStrategy;  // Strategy to determine the fetch offset of the first realized by the spout upon activation\n         private transient KafkaSpoutRetryService retryService;              // Class that has the logic to handle tuple failure\n         private transient Timer commitTimer;                                // timer == null for auto commit mode\n    -    private transient boolean initialized;                              // Flag indicating that the spout is still undergoing initialization process.\n    +//    private transient boolean initialized;                              // Flag indicating that the spout is still undergoing initialization process.\n    --- End diff --\n    \n    Remove if not required\n","created":"2017-05-31T16:46:35.732+0000","updated":"2017-05-31T16:46:35.732+0000","started":"2017-05-31T16:46:35.732+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43657","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43658","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user arunmahadevan commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119409717\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java ---\n    @@ -252,14 +289,16 @@ private boolean commit() {\n         private boolean poll() {\n             final int maxUncommittedOffsets = kafkaSpoutConfig.getMaxUncommittedOffsets();\n             final int readyMessageCount = retryService.readyMessageCount();\n    -        final boolean poll = !waitingToEmit() &&\n    -            //Check that the number of uncommitted, nonretriable tuples is less than the maxUncommittedOffsets limit\n    -            //Accounting for retriable tuples this way still guarantees that the limit is followed on a per partition basis, and prevents locking up the spout when there are too many retriable tuples\n    -            (numUncommittedOffsets - readyMessageCount < maxUncommittedOffsets ||\n    -            consumerAutoCommitMode);\n    +        final boolean poll = !isWaitingToEmit() &&\n    +              /*\n    +               * Check that the number of uncommitted, non-retriable tuples is less than the maxUncommittedOffsets limit\n    +               * Accounting for retriable tuples this way still guarantees that the limit is followed on a per partition basis,\n    +               * and prevents locking up the spout when there are too many retriable tuples\n    +               */\n    +                (numUncommittedOffsets - readyMessageCount < maxUncommittedOffsets || consumerAutoCommitMode);\n    --- End diff --\n    \n    Add clarifying parenthesis \n    ```java\n    if (((numUncommittedOffsets - readyMessageCount) < maxUncommittedOffsets) || consumerAutoCommitMode) \n    ```\n","created":"2017-05-31T16:46:35.743+0000","updated":"2017-05-31T16:46:35.743+0000","started":"2017-05-31T16:46:35.742+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43658","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43659","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user arunmahadevan commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119402305\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java ---\n    @@ -127,12 +132,19 @@ public void open(Map conf, TopologyContext context, SpoutOutputCollector collect\n         // =========== Consumer Rebalance Listener - On the same thread as the caller ===========\n     \n         private class KafkaSpoutConsumerRebalanceListener implements ConsumerRebalanceListener {\n    +        private ConsumerRebalanceHandlerTask task;\n    +\n    +        public KafkaSpoutConsumerRebalanceListener(ConsumerRebalanceHandlerTask task) {\n    +            this.task = task;\n    +        }\n    +\n             @Override\n             public void onPartitionsRevoked(Collection<TopicPartition> partitions) {\n                 LOG.info(\"Partitions revoked. [consumer-group={}, consumer={}, topic-partitions={}]\",\n                         kafkaSpoutConfig.getConsumerGroupId(), kafkaConsumer, partitions);\n    -            if (!consumerAutoCommitMode && initialized) {\n    -                initialized = false;\n    +\n    +            if (!consumerAutoCommitMode && task.isComplete()) {\n    --- End diff --\n    \n    where/how is the task going to complete? \n    \n    need some latch/check in a loop here ?\n","created":"2017-05-31T16:46:35.744+0000","updated":"2017-05-31T16:46:35.744+0000","started":"2017-05-31T16:46:35.743+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43659","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43660","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user arunmahadevan commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119404574\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java ---\n    @@ -170,10 +182,13 @@ private void initialize(Collection<TopicPartition> partitions) {\n                     final long fetchOffset = doSeek(tp, committedOffset);\n                     setAcked(tp, fetchOffset);\n                 }\n    -            initialized = true;\n    +\n    +            task.start();\n    --- End diff --\n    \n    Since this is invoked from `onPartitionsAssigned`, the isComplete is going to return true as soon as onPartitionsRevoked is invoked after partition assignment right ?  \n    \n    The `onPartitionsRevoked` could wait for message.timeout.secs so that in-flight messages are acked/failed and then commit the offsets before returning to minimize the duplicates. May be this is what you wanted the ConsumerRebalanceHandlerTask to handle via isCompleted but it does not seem to do that currently.\n","created":"2017-05-31T16:46:35.919+0000","updated":"2017-05-31T16:46:35.919+0000","started":"2017-05-31T16:46:35.918+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43660","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43661","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user arunmahadevan commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119409290\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java ---\n    @@ -252,14 +289,16 @@ private boolean commit() {\n         private boolean poll() {\n             final int maxUncommittedOffsets = kafkaSpoutConfig.getMaxUncommittedOffsets();\n             final int readyMessageCount = retryService.readyMessageCount();\n    -        final boolean poll = !waitingToEmit() &&\n    -            //Check that the number of uncommitted, nonretriable tuples is less than the maxUncommittedOffsets limit\n    -            //Accounting for retriable tuples this way still guarantees that the limit is followed on a per partition basis, and prevents locking up the spout when there are too many retriable tuples\n    -            (numUncommittedOffsets - readyMessageCount < maxUncommittedOffsets ||\n    -            consumerAutoCommitMode);\n    +        final boolean poll = !isWaitingToEmit() &&\n    --- End diff --\n    \n    If I understood correctly, it can be refactored to something like :\n    \n    ```java\n            boolean result = false;\n            if (!isWaitingToEmit()) {\n                if (numUncommittedOffsets - readyMessageCount < maxUncommittedOffsets || consumerAutoCommitMode) {\n                    result = true;\n                } else {\n                    LOG.debug(\"Not polling. [{}] uncommitted offsets across all topic partitions has reached the threshold of [{}]\", numUncommittedOffsets, maxUncommittedOffsets);\n                }\n            } else {\n                LOG.debug(\"Not polling. Tuples waiting to be emitted. [{}] uncommitted offsets across all topic partitions\", numUncommittedOffsets);\n            }\n            return result;\n            \n    ```\n","created":"2017-05-31T16:46:35.929+0000","updated":"2017-05-31T16:46:35.929+0000","started":"2017-05-31T16:46:35.929+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43661","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43662","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119413232\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java ---\n    @@ -127,12 +132,19 @@ public void open(Map conf, TopologyContext context, SpoutOutputCollector collect\n         // =========== Consumer Rebalance Listener - On the same thread as the caller ===========\n     \n         private class KafkaSpoutConsumerRebalanceListener implements ConsumerRebalanceListener {\n    +        private ConsumerRebalanceHandlerTask task;\n    +\n    +        public KafkaSpoutConsumerRebalanceListener(ConsumerRebalanceHandlerTask task) {\n    +            this.task = task;\n    +        }\n    +\n             @Override\n             public void onPartitionsRevoked(Collection<TopicPartition> partitions) {\n                 LOG.info(\"Partitions revoked. [consumer-group={}, consumer={}, topic-partitions={}]\",\n                         kafkaSpoutConfig.getConsumerGroupId(), kafkaConsumer, partitions);\n    -            if (!consumerAutoCommitMode && initialized) {\n    -                initialized = false;\n    +\n    +            if (!consumerAutoCommitMode && task.isComplete()) {\n    --- End diff --\n    \n    it's like an boolean, asynchronous task. start and stop will set the boolean field. start() -> complete=true, stop() -> complete=false\n","created":"2017-05-31T16:55:40.703+0000","updated":"2017-05-31T16:55:40.703+0000","started":"2017-05-31T16:55:40.702+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43662","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43663","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119413655\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java ---\n    @@ -74,7 +79,7 @@\n         private transient FirstPollOffsetStrategy firstPollOffsetStrategy;  // Strategy to determine the fetch offset of the first realized by the spout upon activation\n         private transient KafkaSpoutRetryService retryService;              // Class that has the logic to handle tuple failure\n         private transient Timer commitTimer;                                // timer == null for auto commit mode\n    -    private transient boolean initialized;                              // Flag indicating that the spout is still undergoing initialization process.\n    +//    private transient boolean initialized;                              // Flag indicating that the spout is still undergoing initialization process.\n    --- End diff --\n    \n    ok, I forgot.\n","created":"2017-05-31T16:57:18.005+0000","updated":"2017-05-31T16:57:18.005+0000","started":"2017-05-31T16:57:18.004+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43663","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43664","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119413565\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/TimeInterval.java ---\n    @@ -0,0 +1,70 @@\n    +/*\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + *   or more contributor license agreements.  See the NOTICE file\n    + *   distributed with this work for additional information\n    + *   regarding copyright ownership.  The ASF licenses this file\n    + *   to you under the Apache License, Version 2.0 (the\n    + *   \"License\"); you may not use this file except in compliance\n    + *   with the License.  You may obtain a copy of the License at\n    + *\n    + *   http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + *   Unless required by applicable law or agreed to in writing, software\n    + *   distributed under the License is distributed on an \"AS IS\" BASIS,\n    + *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + *   See the License for the specific language governing permissions and\n    + *   limitations under the License.\n    + */\n    +\n    +package org.apache.storm.kafka.spout.internal;\n    --- End diff --\n    \n    Could this go in the main package instead? I don't think it makes sense to have an \"internal\" package if we put user-facing classes in there.\n","created":"2017-05-31T17:26:43.649+0000","updated":"2017-05-31T17:26:43.649+0000","started":"2017-05-31T17:26:43.648+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43664","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43665","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119406978\n  \n    --- Diff: examples/storm-kafka-examples/src/main/java/org/apache/storm/kafka/trident/KafkaProducerTopology.java ---\n    @@ -54,7 +54,7 @@ public static StormTopology newTopology(String brokerUrl, String topicName) {\n         /**\n          * @return the Storm config for the topology that publishes sentences to kafka using a kafka bolt.\n          */\n    -    private static Properties newProps(final String brokerUrl, final String topicName) {\n    +    static Properties newProps(final String brokerUrl, final String topicName) {\n    --- End diff --\n    \n    I don't see this called anywhere?\n","created":"2017-05-31T17:26:43.702+0000","updated":"2017-05-31T17:26:43.702+0000","started":"2017-05-31T17:26:43.701+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43665","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43666","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119406901\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java ---\n    @@ -48,13 +33,33 @@\n     import org.apache.storm.kafka.spout.internal.KafkaConsumerFactoryDefault;\n     import org.apache.storm.kafka.spout.internal.OffsetManager;\n     import org.apache.storm.kafka.spout.internal.Timer;\n    +import org.apache.storm.kafka.spout.internal.tasks.FixedDelayStartupTask;\n    +import org.apache.storm.kafka.spout.internal.tasks.PreFetchTask;\n    +import org.apache.storm.kafka.spout.internal.tasks.PreFetchTasksManager;\n     import org.apache.storm.spout.SpoutOutputCollector;\n     import org.apache.storm.task.TopologyContext;\n     import org.apache.storm.topology.OutputFieldsDeclarer;\n     import org.apache.storm.topology.base.BaseRichSpout;\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    +import java.util.Collection;\n    --- End diff --\n    \n    I think checkstyle is configured to require first static imports, then all other imports, with alphabetical sorting within each group. \n","created":"2017-05-31T17:26:43.839+0000","updated":"2017-05-31T17:26:43.839+0000","started":"2017-05-31T17:26:43.839+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43666","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43667","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119420992\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java ---\n    @@ -252,14 +289,16 @@ private boolean commit() {\n         private boolean poll() {\n             final int maxUncommittedOffsets = kafkaSpoutConfig.getMaxUncommittedOffsets();\n             final int readyMessageCount = retryService.readyMessageCount();\n    -        final boolean poll = !waitingToEmit() &&\n    -            //Check that the number of uncommitted, nonretriable tuples is less than the maxUncommittedOffsets limit\n    -            //Accounting for retriable tuples this way still guarantees that the limit is followed on a per partition basis, and prevents locking up the spout when there are too many retriable tuples\n    -            (numUncommittedOffsets - readyMessageCount < maxUncommittedOffsets ||\n    -            consumerAutoCommitMode);\n    +        final boolean poll = !isWaitingToEmit() &&\n    +              /*\n    +               * Check that the number of uncommitted, non-retriable tuples is less than the maxUncommittedOffsets limit\n    +               * Accounting for retriable tuples this way still guarantees that the limit is followed on a per partition basis,\n    +               * and prevents locking up the spout when there are too many retriable tuples\n    +               */\n    +                (numUncommittedOffsets - readyMessageCount < maxUncommittedOffsets || consumerAutoCommitMode);\n    --- End diff --\n    \n    Will do, but this was pre-existing code, not really pertaining to the scope of this patch.\n","created":"2017-05-31T17:30:26.213+0000","updated":"2017-05-31T17:30:26.213+0000","started":"2017-05-31T17:30:26.212+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43667","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43668","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119421827\n  \n    --- Diff: examples/storm-kafka-examples/src/main/java/org/apache/storm/kafka/trident/KafkaProducerTopology.java ---\n    @@ -54,7 +54,7 @@ public static StormTopology newTopology(String brokerUrl, String topicName) {\n         /**\n          * @return the Storm config for the topology that publishes sentences to kafka using a kafka bolt.\n          */\n    -    private static Properties newProps(final String brokerUrl, final String topicName) {\n    +    static Properties newProps(final String brokerUrl, final String topicName) {\n    --- End diff --\n    \n    I use this for some test cases I have I use that are not part of the codebase. This is not a change as it's left as package protected\n","created":"2017-05-31T17:30:26.217+0000","updated":"2017-05-31T17:30:26.217+0000","started":"2017-05-31T17:30:26.217+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43668","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43669","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119421886\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/TimeInterval.java ---\n    @@ -0,0 +1,70 @@\n    +/*\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + *   or more contributor license agreements.  See the NOTICE file\n    + *   distributed with this work for additional information\n    + *   regarding copyright ownership.  The ASF licenses this file\n    + *   to you under the Apache License, Version 2.0 (the\n    + *   \"License\"); you may not use this file except in compliance\n    + *   with the License.  You may obtain a copy of the License at\n    + *\n    + *   http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + *   Unless required by applicable law or agreed to in writing, software\n    + *   distributed under the License is distributed on an \"AS IS\" BASIS,\n    + *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + *   See the License for the specific language governing permissions and\n    + *   limitations under the License.\n    + */\n    +\n    +package org.apache.storm.kafka.spout.internal;\n    --- End diff --\n    \n    OK\n","created":"2017-05-31T17:30:40.961+0000","updated":"2017-05-31T17:30:40.961+0000","started":"2017-05-31T17:30:40.961+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43669","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43670","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119422491\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java ---\n    @@ -170,10 +182,13 @@ private void initialize(Collection<TopicPartition> partitions) {\n                     final long fetchOffset = doSeek(tp, committedOffset);\n                     setAcked(tp, fetchOffset);\n                 }\n    -            initialized = true;\n    +\n    +            task.start();\n    --- End diff --\n    \n    As far as I recall the KafkaConsumer won't let you commit messages to partitions the consumer is not assigned, so committing after onPartitionsRevoked won't work. I think it would be a nicer solution to eliminate most rebalances by switching to manual partition assignment\n","created":"2017-05-31T17:33:04.977+0000","updated":"2017-05-31T17:33:04.977+0000","started":"2017-05-31T17:33:04.973+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43670","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43671","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119423281\n  \n    --- Diff: examples/storm-kafka-examples/src/main/java/org/apache/storm/kafka/trident/KafkaProducerTopology.java ---\n    @@ -54,7 +54,7 @@ public static StormTopology newTopology(String brokerUrl, String topicName) {\n         /**\n          * @return the Storm config for the topology that publishes sentences to kafka using a kafka bolt.\n          */\n    -    private static Properties newProps(final String brokerUrl, final String topicName) {\n    +    static Properties newProps(final String brokerUrl, final String topicName) {\n    --- End diff --\n    \n    Ok, was just making sure it wasn't an oversight :)\n","created":"2017-05-31T17:36:15.247+0000","updated":"2017-05-31T17:36:15.247+0000","started":"2017-05-31T17:36:15.246+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43671","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43672","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119423603\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java ---\n    @@ -48,13 +33,33 @@\n     import org.apache.storm.kafka.spout.internal.KafkaConsumerFactoryDefault;\n     import org.apache.storm.kafka.spout.internal.OffsetManager;\n     import org.apache.storm.kafka.spout.internal.Timer;\n    +import org.apache.storm.kafka.spout.internal.tasks.FixedDelayStartupTask;\n    +import org.apache.storm.kafka.spout.internal.tasks.PreFetchTask;\n    +import org.apache.storm.kafka.spout.internal.tasks.PreFetchTasksManager;\n     import org.apache.storm.spout.SpoutOutputCollector;\n     import org.apache.storm.task.TopologyContext;\n     import org.apache.storm.topology.OutputFieldsDeclarer;\n     import org.apache.storm.topology.base.BaseRichSpout;\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    +import java.util.Collection;\n    --- End diff --\n    \n    OK. IntelliJ did this for me.\n","created":"2017-05-31T17:37:29.053+0000","updated":"2017-05-31T17:37:29.053+0000","started":"2017-05-31T17:37:29.053+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43672","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43673","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on the issue:\n\n    https://github.com/apache/storm/pull/2147\n  \n    @srdo I agree that this is not the ideal solution, and that's precisely the reason why the pre-fetch tasks are pluggable. There are better approaches to do this, but this one fixes some immediate problems for some customers. \n    \n    The discussion of whether supporting dynamic partition assignment or only fixed partition should be done in the email list. I think that we should still support it, at least for 1.x-branch as there are customers using it already. I would conjecture that way more people are using dynamic vs fixed. For 2.0 is a matter of deciding what we want to do, and if we end up supporting both, we should really separate concerns handling fixed and dynamic partition assignment.\n","created":"2017-05-31T17:58:10.705+0000","updated":"2017-05-31T17:58:10.705+0000","started":"2017-05-31T17:58:10.705+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43673","issueId":"13075875"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13075875/worklog/43674","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2147#discussion_r119429199\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/KafkaSpout.java ---\n    @@ -252,14 +289,16 @@ private boolean commit() {\n         private boolean poll() {\n             final int maxUncommittedOffsets = kafkaSpoutConfig.getMaxUncommittedOffsets();\n             final int readyMessageCount = retryService.readyMessageCount();\n    -        final boolean poll = !waitingToEmit() &&\n    -            //Check that the number of uncommitted, nonretriable tuples is less than the maxUncommittedOffsets limit\n    -            //Accounting for retriable tuples this way still guarantees that the limit is followed on a per partition basis, and prevents locking up the spout when there are too many retriable tuples\n    -            (numUncommittedOffsets - readyMessageCount < maxUncommittedOffsets ||\n    -            consumerAutoCommitMode);\n    +        final boolean poll = !isWaitingToEmit() &&\n    --- End diff --\n    \n    I was avoiding refactoring internal logic in these changes, but I will look at it and do it either in this or in a follow up patch. I will let u know.\n","created":"2017-05-31T17:59:28.302+0000","updated":"2017-05-31T17:59:28.302+0000","started":"2017-05-31T17:59:28.302+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"43674","issueId":"13075875"}]},"customfield_12311820":"0|i3fn3z:"}}