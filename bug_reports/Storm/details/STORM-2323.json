{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13037567","self":"https://issues.apache.org/jira/rest/api/2/issue/13037567","key":"STORM-2323","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":6000,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12335748","id":"12335748","name":"1.1.0","archived":false,"released":true,"releaseDate":"2017-03-29"}],"aggregatetimespent":6000,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Feb 01 05:08:52 UTC 2017","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_21106179_*|*_3_*:*_1_*:*_587920471_*|*_5_*:*_1_*:*_0","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2017-02-01T05:08:52.446+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2323/watchers","watchCount":1,"isWatching":false},"created":"2017-01-25T03:58:25.843+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"customfield_12312339":null,"issuelinks":[],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-02-01T05:08:52.485+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12327950","id":"12327950","name":"storm-core","description":"Core storm daemons and APIs including trident"}],"timeoriginalestimate":null,"description":"Precondition for Leader Nimbus is not sufficient to guarantee that the Nimbus can provide all the blobs for active topologies.\n\nFor example, current leadership check logic passes if only topology code blobs are available. \n\nAnd for 1.x branch and master branch, ideally it needs to check dependency blobs for active topologies.","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"1h 40m","remainingEstimateSeconds":0,"timeSpentSeconds":6000},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Precondition for Leader Nimbus should check all topology blobs","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":6000,"total":6000,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":6000,"total":6000,"percent":100},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13037567/comment/15848016","id":"15848016","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Merged into master and 1.x branch via [~sriharsha].\n\nI would not port back this to 1.0.x branch while release vote for 1.0.3 RC1 is going ahead. I'll take it after vote ends.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2017-02-01T05:08:52.479+0000","updated":"2017-02-01T05:08:52.479+0000"}],"maxResults":1,"total":1,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2323/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":10,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13037567/worklog/36221","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user HeartSaVioR opened a pull request:\n\n    https://github.com/apache/storm/pull/1895\n\n    STORM-2323 Precondition for Leader Nimbus should check all topology blobs and also corresponding dependencies\n\n    * change the precondition for leader Nimbus\n    ** it should have all active topology blobs locally\n    ** it should also have all corresponding dependency blobs locally\n    ** corresponding dependencies will be extracted from topology codes (via getBlob)\n    \n    Since it tries to get blobs, probably leader listener can try to access other Nimbuses, and someone might think this is a bit dangerous.\n    I also have other branch which only checks all active topology blobs, not corresponding dependency blobs, so please feel free to share your opinions.\n    https://github.com/HeartSaVioR/storm/tree/STORM-2323-no-check-dependencies\n    \n    I'll create pull request for 1.x when we select one of these branch and review and ready to merge.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/HeartSaVioR/storm STORM-2323\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/1895.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #1895\n    \n----\ncommit c747a99b3344a7ede4da5898ed35a3d1e23b67fd\nAuthor: Jungtaek Lim <kabhwan@gmail.com>\nDate:   2017-01-25T04:16:44Z\n\n    STORM-2323 Precondition for Leader Nimbus should check all topology blobs and also corresponding dependencies\n    \n    * change the precondition for leader Nimbus\n    ** it should have all active topology blobs and corresponding dependencies locally\n\n----\n","created":"2017-01-25T09:49:07.493+0000","updated":"2017-01-25T09:49:07.493+0000","started":"2017-01-25T09:49:07.493+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36221","issueId":"13037567"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13037567/worklog/36229","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user harshach commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1895#discussion_r97818016\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/zookeeper/Zookeeper.java ---\n    @@ -336,29 +340,53 @@ public static NimbusInfo toNimbusInfo(Participant participant) {\n         public static LeaderLatchListener leaderLatchListenerImpl(final Map conf, final CuratorFramework zk, final BlobStore blobStore, final LeaderLatch leaderLatch) throws UnknownHostException {\n             final String hostName = InetAddress.getLocalHost().getCanonicalHostName();\n             return new LeaderLatchListener() {\n    +            final String STORM_JAR_SUFFIX = \"-stormjar.jar\";\n    +            final String STORM_CODE_SUFFIX = \"-stormcode.ser\";\n    +            final String STORM_CONF_SUFFIX = \"-stormconf.ser\";\n    +\n                 @Override\n                 public void isLeader() {\n    -                Set<String> activeTopologyIds = new HashSet<>(Zookeeper.getChildren(zk, conf.get(Config.STORM_ZOOKEEPER_ROOT) + ClusterUtils.STORMS_SUBTREE, false));\n    -                Set<String> localTopologyIds = blobStore.filterAndListKeys(new KeyFilter<String>() {\n    -                    @Override\n    -                    public String filter(String key) {\n    -                        return ConfigUtils.getIdFromBlobKey(key);\n    -                    }\n    -                });\n    -                Sets.SetView<String> diffTopology = Sets.difference(activeTopologyIds, localTopologyIds);\n    -                LOG.info(\"active-topology-ids [{}] local-topology-ids [{}] diff-topology [{}]\",\n    -                        generateJoinedString(activeTopologyIds), generateJoinedString(localTopologyIds),\n    +                Set<String> activeTopologyIds = new TreeSet<>(Zookeeper.getChildren(zk, conf.get(Config.STORM_ZOOKEEPER_ROOT) + ClusterUtils.STORMS_SUBTREE, false));\n    +\n    +                Set<String> activeTopologyBlobKeys = populateTopologyBlobKeys(activeTopologyIds);\n    +                Set<String> activeTopologyCodeKeys = filterTopologyCodeKeys(activeTopologyBlobKeys);\n    +                Set<String> allLocalBlobKeys = Sets.newHashSet(blobStore.listKeys());\n    +                Set<String> allLocalTopologyBlobKeys = filterTopologyBlobKeys(allLocalBlobKeys);\n    +\n    +                // this finds all active topologies blob keys from all local topology blob keys\n    +                Sets.SetView<String> diffTopology = Sets.difference(activeTopologyBlobKeys, allLocalTopologyBlobKeys);\n    +                LOG.info(\"active-topology-blobs [{}] local-topology-blobs [{}] diff-topology-blobs [{}]\",\n    +                        generateJoinedString(activeTopologyIds), generateJoinedString(allLocalTopologyBlobKeys),\n                             generateJoinedString(diffTopology));\n     \n    -                if (diffTopology.isEmpty()) {\n    -                    LOG.info(\"Accepting leadership, all active topology found locally.\");\n    -                } else {\n    +                if (!diffTopology.isEmpty()) {\n                         LOG.info(\"code for all active topologies not available locally, giving up leadership.\");\n                         try {\n                             leaderLatch.close();\n                         } catch (IOException e) {\n                             throw new RuntimeException(e);\n                         }\n    +\n    +                    return;\n    --- End diff --\n    \n    instead of adding a return can't we make this as if else \n","created":"2017-01-25T16:27:43.079+0000","updated":"2017-01-25T16:27:43.079+0000","started":"2017-01-25T16:27:43.076+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36229","issueId":"13037567"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13037567/worklog/36230","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user harshach commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1895#discussion_r97818183\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/zookeeper/Zookeeper.java ---\n    @@ -336,29 +340,53 @@ public static NimbusInfo toNimbusInfo(Participant participant) {\n         public static LeaderLatchListener leaderLatchListenerImpl(final Map conf, final CuratorFramework zk, final BlobStore blobStore, final LeaderLatch leaderLatch) throws UnknownHostException {\n             final String hostName = InetAddress.getLocalHost().getCanonicalHostName();\n             return new LeaderLatchListener() {\n    +            final String STORM_JAR_SUFFIX = \"-stormjar.jar\";\n    +            final String STORM_CODE_SUFFIX = \"-stormcode.ser\";\n    +            final String STORM_CONF_SUFFIX = \"-stormconf.ser\";\n    +\n                 @Override\n                 public void isLeader() {\n    -                Set<String> activeTopologyIds = new HashSet<>(Zookeeper.getChildren(zk, conf.get(Config.STORM_ZOOKEEPER_ROOT) + ClusterUtils.STORMS_SUBTREE, false));\n    -                Set<String> localTopologyIds = blobStore.filterAndListKeys(new KeyFilter<String>() {\n    -                    @Override\n    -                    public String filter(String key) {\n    -                        return ConfigUtils.getIdFromBlobKey(key);\n    -                    }\n    -                });\n    -                Sets.SetView<String> diffTopology = Sets.difference(activeTopologyIds, localTopologyIds);\n    -                LOG.info(\"active-topology-ids [{}] local-topology-ids [{}] diff-topology [{}]\",\n    -                        generateJoinedString(activeTopologyIds), generateJoinedString(localTopologyIds),\n    +                Set<String> activeTopologyIds = new TreeSet<>(Zookeeper.getChildren(zk, conf.get(Config.STORM_ZOOKEEPER_ROOT) + ClusterUtils.STORMS_SUBTREE, false));\n    +\n    +                Set<String> activeTopologyBlobKeys = populateTopologyBlobKeys(activeTopologyIds);\n    +                Set<String> activeTopologyCodeKeys = filterTopologyCodeKeys(activeTopologyBlobKeys);\n    +                Set<String> allLocalBlobKeys = Sets.newHashSet(blobStore.listKeys());\n    +                Set<String> allLocalTopologyBlobKeys = filterTopologyBlobKeys(allLocalBlobKeys);\n    +\n    +                // this finds all active topologies blob keys from all local topology blob keys\n    +                Sets.SetView<String> diffTopology = Sets.difference(activeTopologyBlobKeys, allLocalTopologyBlobKeys);\n    +                LOG.info(\"active-topology-blobs [{}] local-topology-blobs [{}] diff-topology-blobs [{}]\",\n    +                        generateJoinedString(activeTopologyIds), generateJoinedString(allLocalTopologyBlobKeys),\n                             generateJoinedString(diffTopology));\n     \n    -                if (diffTopology.isEmpty()) {\n    -                    LOG.info(\"Accepting leadership, all active topology found locally.\");\n    -                } else {\n    +                if (!diffTopology.isEmpty()) {\n                         LOG.info(\"code for all active topologies not available locally, giving up leadership.\");\n                         try {\n                             leaderLatch.close();\n                         } catch (IOException e) {\n                             throw new RuntimeException(e);\n                         }\n    +\n    +                    return;\n    --- End diff --\n    \n    Also if the nimbus has incomplete set of topology resources, wouldn't it be better to cleanup the resources and let it sync from the newly elected leader.\n","created":"2017-01-25T16:28:19.929+0000","updated":"2017-01-25T16:28:19.929+0000","started":"2017-01-25T16:28:19.928+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36230","issueId":"13037567"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13037567/worklog/36249","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1895#discussion_r97902409\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/zookeeper/Zookeeper.java ---\n    @@ -336,29 +340,53 @@ public static NimbusInfo toNimbusInfo(Participant participant) {\n         public static LeaderLatchListener leaderLatchListenerImpl(final Map conf, final CuratorFramework zk, final BlobStore blobStore, final LeaderLatch leaderLatch) throws UnknownHostException {\n             final String hostName = InetAddress.getLocalHost().getCanonicalHostName();\n             return new LeaderLatchListener() {\n    +            final String STORM_JAR_SUFFIX = \"-stormjar.jar\";\n    +            final String STORM_CODE_SUFFIX = \"-stormcode.ser\";\n    +            final String STORM_CONF_SUFFIX = \"-stormconf.ser\";\n    +\n                 @Override\n                 public void isLeader() {\n    -                Set<String> activeTopologyIds = new HashSet<>(Zookeeper.getChildren(zk, conf.get(Config.STORM_ZOOKEEPER_ROOT) + ClusterUtils.STORMS_SUBTREE, false));\n    -                Set<String> localTopologyIds = blobStore.filterAndListKeys(new KeyFilter<String>() {\n    -                    @Override\n    -                    public String filter(String key) {\n    -                        return ConfigUtils.getIdFromBlobKey(key);\n    -                    }\n    -                });\n    -                Sets.SetView<String> diffTopology = Sets.difference(activeTopologyIds, localTopologyIds);\n    -                LOG.info(\"active-topology-ids [{}] local-topology-ids [{}] diff-topology [{}]\",\n    -                        generateJoinedString(activeTopologyIds), generateJoinedString(localTopologyIds),\n    +                Set<String> activeTopologyIds = new TreeSet<>(Zookeeper.getChildren(zk, conf.get(Config.STORM_ZOOKEEPER_ROOT) + ClusterUtils.STORMS_SUBTREE, false));\n    +\n    +                Set<String> activeTopologyBlobKeys = populateTopologyBlobKeys(activeTopologyIds);\n    +                Set<String> activeTopologyCodeKeys = filterTopologyCodeKeys(activeTopologyBlobKeys);\n    +                Set<String> allLocalBlobKeys = Sets.newHashSet(blobStore.listKeys());\n    +                Set<String> allLocalTopologyBlobKeys = filterTopologyBlobKeys(allLocalBlobKeys);\n    +\n    +                // this finds all active topologies blob keys from all local topology blob keys\n    +                Sets.SetView<String> diffTopology = Sets.difference(activeTopologyBlobKeys, allLocalTopologyBlobKeys);\n    +                LOG.info(\"active-topology-blobs [{}] local-topology-blobs [{}] diff-topology-blobs [{}]\",\n    +                        generateJoinedString(activeTopologyIds), generateJoinedString(allLocalTopologyBlobKeys),\n                             generateJoinedString(diffTopology));\n     \n    -                if (diffTopology.isEmpty()) {\n    -                    LOG.info(\"Accepting leadership, all active topology found locally.\");\n    -                } else {\n    +                if (!diffTopology.isEmpty()) {\n                         LOG.info(\"code for all active topologies not available locally, giving up leadership.\");\n                         try {\n                             leaderLatch.close();\n                         } catch (IOException e) {\n                             throw new RuntimeException(e);\n                         }\n    +\n    +                    return;\n    --- End diff --\n    \n    OK I'll try to remove `return` at this place.\n    \n    Btw, synchronizing blobs are done for each, so I don't see benefit to clean up. If we're worried about inconsistency between versions of the topology blobs, I think it should be handled properly from BlobStore.\n","created":"2017-01-25T23:16:37.286+0000","updated":"2017-01-25T23:16:37.286+0000","started":"2017-01-25T23:16:37.286+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36249","issueId":"13037567"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13037567/worklog/36250","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1895#discussion_r97907878\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/zookeeper/Zookeeper.java ---\n    @@ -336,29 +340,53 @@ public static NimbusInfo toNimbusInfo(Participant participant) {\n         public static LeaderLatchListener leaderLatchListenerImpl(final Map conf, final CuratorFramework zk, final BlobStore blobStore, final LeaderLatch leaderLatch) throws UnknownHostException {\n             final String hostName = InetAddress.getLocalHost().getCanonicalHostName();\n             return new LeaderLatchListener() {\n    +            final String STORM_JAR_SUFFIX = \"-stormjar.jar\";\n    +            final String STORM_CODE_SUFFIX = \"-stormcode.ser\";\n    +            final String STORM_CONF_SUFFIX = \"-stormconf.ser\";\n    +\n                 @Override\n                 public void isLeader() {\n    -                Set<String> activeTopologyIds = new HashSet<>(Zookeeper.getChildren(zk, conf.get(Config.STORM_ZOOKEEPER_ROOT) + ClusterUtils.STORMS_SUBTREE, false));\n    -                Set<String> localTopologyIds = blobStore.filterAndListKeys(new KeyFilter<String>() {\n    -                    @Override\n    -                    public String filter(String key) {\n    -                        return ConfigUtils.getIdFromBlobKey(key);\n    -                    }\n    -                });\n    -                Sets.SetView<String> diffTopology = Sets.difference(activeTopologyIds, localTopologyIds);\n    -                LOG.info(\"active-topology-ids [{}] local-topology-ids [{}] diff-topology [{}]\",\n    -                        generateJoinedString(activeTopologyIds), generateJoinedString(localTopologyIds),\n    +                Set<String> activeTopologyIds = new TreeSet<>(Zookeeper.getChildren(zk, conf.get(Config.STORM_ZOOKEEPER_ROOT) + ClusterUtils.STORMS_SUBTREE, false));\n    +\n    +                Set<String> activeTopologyBlobKeys = populateTopologyBlobKeys(activeTopologyIds);\n    +                Set<String> activeTopologyCodeKeys = filterTopologyCodeKeys(activeTopologyBlobKeys);\n    +                Set<String> allLocalBlobKeys = Sets.newHashSet(blobStore.listKeys());\n    +                Set<String> allLocalTopologyBlobKeys = filterTopologyBlobKeys(allLocalBlobKeys);\n    +\n    +                // this finds all active topologies blob keys from all local topology blob keys\n    +                Sets.SetView<String> diffTopology = Sets.difference(activeTopologyBlobKeys, allLocalTopologyBlobKeys);\n    +                LOG.info(\"active-topology-blobs [{}] local-topology-blobs [{}] diff-topology-blobs [{}]\",\n    +                        generateJoinedString(activeTopologyIds), generateJoinedString(allLocalTopologyBlobKeys),\n                             generateJoinedString(diffTopology));\n     \n    -                if (diffTopology.isEmpty()) {\n    -                    LOG.info(\"Accepting leadership, all active topology found locally.\");\n    -                } else {\n    +                if (!diffTopology.isEmpty()) {\n                         LOG.info(\"code for all active topologies not available locally, giving up leadership.\");\n                         try {\n                             leaderLatch.close();\n                         } catch (IOException e) {\n                             throw new RuntimeException(e);\n                         }\n    +\n    +                    return;\n    --- End diff --\n    \n    Addressed.\n","created":"2017-01-25T23:58:48.637+0000","updated":"2017-01-25T23:58:48.637+0000","started":"2017-01-25T23:58:48.636+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36250","issueId":"13037567"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13037567/worklog/36348","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user harshach commented on the issue:\n\n    https://github.com/apache/storm/pull/1895\n  \n    +1\n","created":"2017-01-26T20:42:03.655+0000","updated":"2017-01-26T20:42:03.655+0000","started":"2017-01-26T20:42:03.655+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36348","issueId":"13037567"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13037567/worklog/36440","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user HeartSaVioR opened a pull request:\n\n    https://github.com/apache/storm/pull/1903\n\n    STORM-2323 (1.x) Precondition for Leader Nimbus should check all topology blobs and also corresponding dependencies\n\n    * change the precondition for leader Nimbus\n    ** it should have all active topology blobs and corresponding dependencies locally\n    * change zookeeper.clj to use Zookeeper.leaderLatchListenerImpl\n    \n    master branch: #1895\n    \n    The difference between #1895 and this is due to zookeeper.clj. In 1.x branch it has both zookeeper.clj and Zookeeper.java. I don't want to make redundant efforts to get rid of zookeeper.clj, but not also want to modify both of code. So I change zookeeper.clj to refer Zookeeper's leader latch listener implementation.\n    \n    @harshach \n    Since you reviewed the PR for master branch, I would ask you to review this as well. Thanks in advance.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/HeartSaVioR/storm STORM-2323-1.x\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/1903.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #1903\n    \n----\ncommit b19b0a1da4488bf91d60aa1487d6ed6109af4162\nAuthor: Jungtaek Lim <kabhwan@gmail.com>\nDate:   2017-01-25T04:16:44Z\n\n    STORM-2323 Precondition for Leader Nimbus should check all topology blobs and also corresponding dependencies\n    \n    * change the precondition for leader Nimbus\n    ** it should have all active topology blobs and corresponding dependencies locally\n    * change zookeeper.clj to use Zookeeper.leaderLatchListenerImpl\n\n----\n","created":"2017-01-30T13:20:14.798+0000","updated":"2017-01-30T13:20:14.798+0000","started":"2017-01-30T13:20:14.798+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36440","issueId":"13037567"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13037567/worklog/36444","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on the issue:\n\n    https://github.com/apache/storm/pull/1895\n  \n    Thanks @harshach for reviewing. I also created PR (#1903) for 1.x (and possibly 1.0.x) branch.\n","created":"2017-01-30T13:42:46.261+0000","updated":"2017-01-30T13:42:46.261+0000","started":"2017-01-30T13:42:46.260+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36444","issueId":"13037567"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13037567/worklog/36540","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/storm/pull/1895\n","created":"2017-02-01T02:16:34.329+0000","updated":"2017-02-01T02:16:34.329+0000","started":"2017-02-01T02:16:34.328+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36540","issueId":"13037567"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13037567/worklog/36541","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/storm/pull/1903\n","created":"2017-02-01T02:36:22.258+0000","updated":"2017-02-01T02:36:22.258+0000","started":"2017-02-01T02:36:22.258+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"36541","issueId":"13037567"}]},"customfield_12311820":"0|i395xz:"}}