{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12720427","self":"https://issues.apache.org/jira/rest/api/2/issue/12720427","key":"STORM-348","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12327123","id":"12327123","description":"security feature branch","name":"0.10.0","archived":false,"released":true,"releaseDate":"2015-11-05"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2014-06-19T23:20:50.015+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Jul 30 18:41:40 UTC 2014","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_4308131322_*|*_5_*:*_1_*:*_0","customfield_12310420":"398626","customfield_12312321":null,"resolutiondate":"2014-07-30T16:17:58.271+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-348/watchers","watchCount":3,"isWatching":false},"created":"2014-06-10T19:35:46.994+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["security"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"customfield_12312339":null,"issuelinks":[],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=speaktoraghav","name":"speaktoraghav","key":"speaktoraghav","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=speaktoraghav&avatarId=20376","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=speaktoraghav&avatarId=20376","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=speaktoraghav&avatarId=20376","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=speaktoraghav&avatarId=20376"},"displayName":"Raghavendra Nandagopal","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-10-09T00:49:52.187+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12327950","id":"12327950","name":"storm-core","description":"Core storm daemons and APIs including trident"}],"timeoriginalestimate":null,"description":"Currently The Netty transport does no authentication at all.  You can encrypt the tuples being sent, but that is a huge performance hit for many cases that do not need it.  We should support simple SASL authentication when Netty first connects to an external process.  We probably want to use something similar to what we do for ZK, and generate a random secret for each topology.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12657017","id":"12657017","filename":"Storm-Netty Authentication.pdf","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=speaktoraghav","name":"speaktoraghav","key":"speaktoraghav","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=speaktoraghav&avatarId=20376","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=speaktoraghav&avatarId=20376","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=speaktoraghav&avatarId=20376","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=speaktoraghav&avatarId=20376"},"displayName":"Raghavendra Nandagopal","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-22T01:07:32.325+0000","size":73760,"mimeType":"application/pdf","content":"https://issues.apache.org/jira/secure/attachment/12657017/Storm-Netty+Authentication.pdf"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12658704","id":"12658704","filename":"Storm-Netty Authentication Updated.pdf","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=speaktoraghav","name":"speaktoraghav","key":"speaktoraghav","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=speaktoraghav&avatarId=20376","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=speaktoraghav&avatarId=20376","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=speaktoraghav&avatarId=20376","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=speaktoraghav&avatarId=20376"},"displayName":"Raghavendra Nandagopal","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-30T18:41:40.605+0000","size":73936,"mimeType":"application/pdf","content":"https://issues.apache.org/jira/secure/attachment/12658704/Storm-Netty+Authentication+Updated.pdf"}],"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"398751","customfield_12312823":null,"summary":"(Security) Netty SASL Authentication","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14038090","id":"14038090","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=speaktoraghav","name":"speaktoraghav","key":"speaktoraghav","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=speaktoraghav&avatarId=20376","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=speaktoraghav&avatarId=20376","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=speaktoraghav&avatarId=20376","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=speaktoraghav&avatarId=20376"},"displayName":"Raghavendra Nandagopal","active":true,"timeZone":"America/Los_Angeles"},"body":"Please assign it to me.  I am taking a look at it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=speaktoraghav","name":"speaktoraghav","key":"speaktoraghav","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=speaktoraghav&avatarId=20376","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=speaktoraghav&avatarId=20376","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=speaktoraghav&avatarId=20376","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=speaktoraghav&avatarId=20376"},"displayName":"Raghavendra Nandagopal","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-06-19T23:20:50.015+0000","updated":"2014-06-19T23:20:50.015+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14069636","id":"14069636","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=speaktoraghav","name":"speaktoraghav","key":"speaktoraghav","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=speaktoraghav&avatarId=20376","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=speaktoraghav&avatarId=20376","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=speaktoraghav&avatarId=20376","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=speaktoraghav&avatarId=20376"},"displayName":"Raghavendra Nandagopal","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi Bobby,\n  I have attached the changes that describes the implementation of SASL mechanism for Storm-Netty.  When you get a chance, Can you please review it?\n\n  The code changes are completed and I have tested with topology user as the credentials to the SASL.\n  I need to know where I can get the kerberos token for a specific topology from the Java code.  Once this change is done, I can send you the pull request within couple of days.\n\nThanks,\nRaghavendra Nandagopal","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=speaktoraghav","name":"speaktoraghav","key":"speaktoraghav","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=speaktoraghav&avatarId=20376","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=speaktoraghav&avatarId=20376","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=speaktoraghav&avatarId=20376","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=speaktoraghav&avatarId=20376"},"displayName":"Raghavendra Nandagopal","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-22T01:07:32.329+0000","updated":"2014-07-22T01:07:32.329+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14070878","id":"14070878","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user RaghavendraNandagopal opened a pull request:\n\n    https://github.com/apache/incubator-storm/pull/202\n\n    STORM-348: Netty SASL Authentication\n\n    Hi Bobby,\n      I have made the changes for the SASL Netty Authentication.  Currently the credentials used is with the topology name, but I thought I would be using Kerberos token instead as we agreed I will use randomly generated credentials that are kept in zookeeper.  I will try to find it out which method to call or if you can help me out it would be great.  In the meantime you can review the changes.\n    \n     I have tested the changes but didn't create the unit tests.  I will create a separate JIRA for unit test and get it done.  I am learning Clojure and will get it done soon.\n    \n    Thanks,\n    Raghavendra Nandagopal\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/RaghavendraNandagopal/incubator-storm security\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/incubator-storm/pull/202.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #202\n    \n----\ncommit 41986445fb89ff77c101fcdd6daccb945160e8a9\nAuthor: Raghavendra Nandagopal <speaktoraghav@gmail.com>\nDate:   2014-07-22T20:20:54Z\n\n    STORM-348: Netty SASL Authentication\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-22T20:50:30.309+0000","updated":"2014-07-22T20:50:30.309+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14071100","id":"14071100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=speaktoraghav","name":"speaktoraghav","key":"speaktoraghav","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=speaktoraghav&avatarId=20376","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=speaktoraghav&avatarId=20376","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=speaktoraghav&avatarId=20376","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=speaktoraghav&avatarId=20376"},"displayName":"Raghavendra Nandagopal","active":true,"timeZone":"America/Los_Angeles"},"body":"Below log shows the authentication between client and server worker processes.\n\n{code}\n2014-07-22 16:00:02 b.s.m.n.SaslStormServerHandler [DEBUG] SASL credentials is the storm user name: raghav@TESTKERBEROS.COM\n2014-07-22 16:00:03 b.s.m.n.SaslStormServerHandler [DEBUG] messageReceived: Got class backtype.storm.messaging.netty.ControlMessage\n2014-07-22 16:00:03 b.s.m.n.SaslStormServerHandler [DEBUG] No saslNettyServer for [id: 0x1b237a4c, /127.0.0.1:50718 => /127.0.0.1:6700] yet; creating now, with topology token:\n2014-07-22 16:00:03 b.s.m.n.SaslNettyServer [DEBUG] SaslNettyServer: Topology token is: raghav@TESTKERBEROS.COM with authmethod DIGEST-MD5\n2014-07-22 16:00:03 b.s.m.n.SaslNettyServer [DEBUG] SaslDigestCallback: Creating SaslDigestCallback handler with topology token: raghav@TESTKERBEROS.COM\n2014-07-22 16:00:03 b.s.m.n.SaslStormServerHandler [DEBUG] processToken:  With nettyServer: backtype.storm.messaging.netty.SaslNettyServer@30926bd7 and token length: 20\n2014-07-22 16:00:03 b.s.m.n.SaslStormClientHandler [DEBUG] send/recv time (ms): 507\n2014-07-22 16:00:03 b.s.m.n.SaslStormClientHandler [DEBUG] Responding to server's token of length: 97\n2014-07-22 16:00:03 b.s.m.n.SaslNettyServer [DEBUG] response: Responding to input token of length: 0\n2014-07-22 16:00:03 b.s.m.n.SaslNettyServer [DEBUG] response: Response token length: 97\n2014-07-22 16:00:03 b.s.m.n.SaslNettyClient [DEBUG] handle: SASL client callback: setting username: bXNzQFRFU1RLRVJCRVJPUy5DT00=\n2014-07-22 16:00:03 b.s.m.n.SaslNettyClient [DEBUG] handle: SASL client callback: setting userPassword\n2014-07-22 16:00:03 b.s.m.n.SaslNettyClient [DEBUG] handle: SASL client callback: setting realm: default\n2014-07-22 16:00:03 b.s.m.n.SaslStormClientHandler [DEBUG] Response to server token has length:270\n2014-07-22 16:00:03 b.s.m.n.SaslStormClientHandler [DEBUG] send/recv time (ms): 533\n2014-07-22 16:00:03 b.s.m.n.SaslStormClientHandler [DEBUG] Responding to server's token of length: 40\n2014-07-22 16:00:03 b.s.m.n.SaslStormClientHandler [DEBUG] Response to server is null: authentication should now be complete.\n2014-07-22 16:00:03 b.s.m.n.SaslStormClientHandler [DEBUG] send/recv time (ms): 533\n2014-07-22 16:00:03 b.s.m.n.SaslStormClientHandler [DEBUG] Server has sent us the SaslComplete message. Allowing normal work to proceed.\n2014-07-22 16:00:03 b.s.m.n.SaslStormServerHandler [DEBUG] messageReceived: Got class backtype.storm.messaging.netty.SaslMessageToken\n2014-07-22 16:00:03 b.s.m.n.SaslNettyServer [DEBUG] response: Responding to input token of length: 270\n2014-07-22 16:00:03 b.s.m.n.SaslNettyServer [DEBUG] handle: SASL server DIGEST-MD5 callback: setting username for client: raghav@TESTKERBEROS.COM\n2014-07-22 16:00:03 b.s.m.n.SaslNettyServer [DEBUG] handle: SASL server DIGEST-MD5 callback: setting password for client: raghav@TESTKERBEROS.COM\n2014-07-22 16:00:03 b.s.m.n.SaslNettyServer [DEBUG] handle: SASL server DIGEST-MD5 callback: setting canonicalized client ID: raghav@TESTKERBEROS.COM\n2014-07-22 16:00:03 b.s.m.n.SaslNettyServer [DEBUG] response: Response token length: 40\n2014-07-22 16:00:03 b.s.m.n.SaslStormServerHandler [DEBUG] SASL authentication is complete for client with username: bXNzQFRFU1RLRVJCRVJPUy5DT00=\n2014-07-22 16:00:03 b.s.m.n.SaslStormServerHandler [DEBUG] Removing SaslServerHandler from pipeline since SASL authentication is complete.\n2014-07-22 16:00:03 b.s.m.n.SaslStormServerHandler [DEBUG] messageReceived: authenticated client: bXNzQFRFU1RLRVJCRVJPUy5DT00= is authorized to do request on server.\n2014-07-22 16:00:03 b.s.m.n.SaslStormServerHandler [DEBUG] messageReceived: authenticated client: bXNzQFRFU1RLRVJCRVJPUy5DT00= is authorized to do request on server.\n2014-07-22 16:00:03 b.s.m.n.SaslStormServerHandler [DEBUG] messageReceived: authenticated client: bXNzQFRFU1RLRVJCRVJPUy5DT00= is authorized to do request on server.\n2014-07-22 16:00:03 b.s.m.n.SaslStormServerHandler [DEBUG] messageReceived: authenticated client: bXNzQFRFU1RLRVJCRVJPUy5DT00= is authorized to do request on server.\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=speaktoraghav","name":"speaktoraghav","key":"speaktoraghav","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=speaktoraghav&avatarId=20376","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=speaktoraghav&avatarId=20376","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=speaktoraghav&avatarId=20376","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=speaktoraghav&avatarId=20376"},"displayName":"Raghavendra Nandagopal","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-22T23:12:21.881+0000","updated":"2014-07-22T23:12:21.881+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14073799","id":"14073799","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user RaghavendraNandagopal commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#issuecomment-50089308\n  \n    Hi Bobby,\n       I have made the changes for SASL credentials to accept zookeeper secret key that is being generated for a given topology.\n    \n      Also if you need to run it you need to set the configuration parameter for a topology as below.\n    storm.messaging.netty.authentication=true\n    \n    Thanks,\n    Raghavendra Nandagopal\n        \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-24T22:59:14.481+0000","updated":"2014-07-24T22:59:14.481+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074424","id":"14074424","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15402203\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java ---\n    @@ -57,8 +59,10 @@\n         private int messageBatchSize;\n         \n         private AtomicLong pendings;\n    +    \n    +    Map storm_conf;\n     \n    -    MessageBatch messageBatch = null;\n    +\tMessageBatch messageBatch = null;\n    --- End diff --\n    \n    Please replace tabs with spaces.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T14:12:43.874+0000","updated":"2014-07-25T14:12:43.874+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074425","id":"14074425","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15402272\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/Client.java ---\n    @@ -57,8 +59,10 @@\n         private int messageBatchSize;\n         \n         private AtomicLong pendings;\n    +    \n    +    Map storm_conf;\n     \n    -    MessageBatch messageBatch = null;\n    +\tMessageBatch messageBatch = null;\n    --- End diff --\n    \n    And please mark the new member variables as private they don't appear to need to be protected or package private.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T14:14:05.824+0000","updated":"2014-07-25T14:14:05.824+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074428","id":"14074428","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15402428\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslMessageToken.java ---\n    @@ -0,0 +1,100 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package backtype.storm.messaging.netty;\n    +\n    +import org.jboss.netty.buffer.ChannelBuffer;\n    +import org.jboss.netty.buffer.ChannelBufferOutputStream;\n    +import org.jboss.netty.buffer.ChannelBuffers;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +/**\n    + * Send and receive SASL tokens.\n    + */\n    +public class SaslMessageToken {\n    +\t/** Class logger */\n    +\tprivate static final Logger LOG = LoggerFactory\n    +\t\t\t.getLogger(SaslMessageToken.class);\n    +\n    +\t/** Used for client or server's token to send or receive from each other. */\n    +\tprivate byte[] token;\n    +\n    +\t/**\n    +\t * Constructor used for reflection only.\n    +\t */\n    +\tpublic SaslMessageToken() {\n    +\t}\n    +\n    +\t/**\n    +\t * Constructor used to send request.\n    +\t * \n    +\t * @param token\n    +\t *            the SASL token, generated by a SaslClient or SaslServer.\n    +\t */\n    +\tpublic SaslMessageToken(byte[] token) {\n    +\t\tthis.token = token;\n    +\t}\n    +\n    +\t/**\n    +\t * Read accessor for SASL token\n    +\t * \n    +\t * @return saslToken SASL token\n    +\t */\n    +\tpublic byte[] getSaslToken() {\n    +\t\treturn token;\n    +\t}\n    +\n    +\t/**\n    +\t * Write accessor for SASL token\n    +\t * \n    +\t * @param token\n    +\t *            SASL token\n    +\t */\n    +\tpublic void setSaslToken(byte[] token) {\n    +\t\tthis.token = token;\n    +\t}\n    +\n    +\tint encodeLength() {\n    +\t\treturn 2+4+token.length;\n    +\t}\n    +\n    +\t/**\n    +\t * encode the current SaslToken Message into a channel buffer\n    +\t * SaslTokenMessageRequest is encoded as:\n    +\t * identifier .... short(2) always it is -500\n    +\t * payload length .... int\n    +\t * payload .... byte[] \n    +\t * @throws Exception\n    +\t */\n    +\tChannelBuffer buffer() throws Exception {\n    +\t\tChannelBufferOutputStream bout = new ChannelBufferOutputStream(\n    --- End diff --\n    \n    Again it looks like you have a mixture of spaces and tabs here.  In general the java files have just had spaces in them.  But this is fairly minor for a new file.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T14:16:15.711+0000","updated":"2014-07-25T14:16:15.711+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074467","id":"14074467","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15406084\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslNettyClient.java ---\n    @@ -0,0 +1,166 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package backtype.storm.messaging.netty;\n    +\n    +import java.io.IOException;\n    +\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.RealmCallback;\n    +import javax.security.sasl.RealmChoiceCallback;\n    +import javax.security.sasl.Sasl;\n    +import javax.security.sasl.SaslClient;\n    +import javax.security.sasl.SaslException;\n    +\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +/**\n    + * Implements SASL logic for storm worker client processes.\n    + */\n    +public class SaslNettyClient {\n    +\n    +\tprivate static final Logger LOG = LoggerFactory\n    +\t\t\t.getLogger(SaslNettyClient.class);\n    +\n    +\t/**\n    +\t * Used to respond to server's counterpart, SaslServer with SASL tokens\n    +\t * represented as byte arrays.\n    +\t */\n    +\tprivate SaslClient saslClient;\n    +\n    +\t/**\n    +\t * Create a SaslNettyClient for authentication with servers.\n    +\t */\n    +\tpublic SaslNettyClient(String topologyName, byte[] token) {\n    +\t\ttry {\n    +\t\t\tLOG.debug(\"SaslNettyClient: Creating SASL \"\n    +\t\t\t\t\t+ SaslUtils.AUTH_DIGEST_MD5\n    +\t\t\t\t\t+ \" client to authenticate to server \");\n    +\n    +\t\t\tsaslClient = Sasl.createSaslClient(\n    +\t\t\t\t\tnew String[] { SaslUtils.AUTH_DIGEST_MD5 }, null, null,\n    +\t\t\t\t\tSaslUtils.DEFAULT_REALM, SaslUtils.getSaslProps(),\n    +\t\t\t\t\tnew SaslClientCallbackHandler(topologyName, token));\n    +\n    +\t\t} catch (IOException e) {\n    +\t\t\tLOG.error(\"SaslNettyClient: Could not obtain topology token for Netty \"\n    +\t\t\t\t\t+ \"Client to use to authenticate with a Netty Server.\");\n    +\t\t\tsaslClient = null;\n    --- End diff --\n    \n    I'm not sure we want to fall back to this on an error.  Because when we try to connect we will end up with NPEs.  Also we don't log the IOException which may make debugging difficult.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T15:20:41.223+0000","updated":"2014-07-25T15:20:41.223+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074486","id":"14074486","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15407759\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslStormClientHandler.java ---\n    @@ -0,0 +1,155 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package backtype.storm.messaging.netty;\n    +\n    +import java.io.IOException;\n    +\n    +import org.jboss.netty.channel.Channel;\n    +import org.jboss.netty.channel.ChannelHandlerContext;\n    +import org.jboss.netty.channel.ChannelStateEvent;\n    +import org.jboss.netty.channel.Channels;\n    +import org.jboss.netty.channel.MessageEvent;\n    +import org.jboss.netty.channel.SimpleChannelUpstreamHandler;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import backtype.storm.Config;\n    +\n    +public class SaslStormClientHandler extends SimpleChannelUpstreamHandler {\n    +\n    +\tprivate static final Logger LOG = LoggerFactory\n    +\t\t\t.getLogger(SaslStormClientHandler.class);\n    +\tprivate Client client;\n    +\tlong start_time;\n    +\t/** Used for client or server's token to send or receive from each other. */\n    +\tprivate byte[] token;\n    +\tprivate String topologyName;\n    +\n    +\tpublic SaslStormClientHandler(Client client) throws IOException {\n    +\t\tthis.client = client;\n    +\t\tstart_time = System.currentTimeMillis();\n    +\t\tgetSASLCredentials();\n    +\t}\n    +\n    +\t@Override\n    +\tpublic void channelConnected(ChannelHandlerContext ctx,\n    +\t\t\tChannelStateEvent event) {\n    +\t\t// register the newly established channel\n    +\t\tChannel channel = ctx.getChannel();\n    +\n    +\t\tLOG.info(\"Connection established from \" + channel.getLocalAddress()\n    +\t\t\t\t+ \" to \" + channel.getRemoteAddress());\n    +\n    +\t\ttry {\n    +\t\t\tSaslNettyClient saslNettyClient = SaslNettyClientState.getSaslNettyClient\n    +\t\t\t\t\t.get(channel);\n    +\n    +\t\t\tif (saslNettyClient == null) {\n    +\t\t\t\tLOG.debug(\"Creating saslNettyClient now \" + \"for channel: \"\n    +\t\t\t\t\t\t+ channel);\n    +\t\t\t\tsaslNettyClient = new SaslNettyClient(topologyName, token);\n    +\t\t\t\tSaslNettyClientState.getSaslNettyClient.set(channel,\n    +\t\t\t\t\t\tsaslNettyClient);\n    +\t\t\t}\n    +\t\t\tchannel.write(ControlMessage.SASL_TOKEN_MESSAGE_REQUEST);\n    +\t\t} catch (Exception e) {\n    +\t\t\tLOG.error(\"Failed to authenticate with server \" + \"due to error: \"\n    +\t\t\t\t\t+ e);\n    --- End diff --\n    \n    can we change this to a \", e\" instead of a \"+ e\" that way we can get the stack trace in the logs too.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T15:46:36.548+0000","updated":"2014-07-25T15:46:36.548+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074495","id":"14074495","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15408174\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslStormClientHandler.java ---\n    @@ -0,0 +1,155 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package backtype.storm.messaging.netty;\n    +\n    +import java.io.IOException;\n    +\n    +import org.jboss.netty.channel.Channel;\n    +import org.jboss.netty.channel.ChannelHandlerContext;\n    +import org.jboss.netty.channel.ChannelStateEvent;\n    +import org.jboss.netty.channel.Channels;\n    +import org.jboss.netty.channel.MessageEvent;\n    +import org.jboss.netty.channel.SimpleChannelUpstreamHandler;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import backtype.storm.Config;\n    +\n    +public class SaslStormClientHandler extends SimpleChannelUpstreamHandler {\n    +\n    +\tprivate static final Logger LOG = LoggerFactory\n    +\t\t\t.getLogger(SaslStormClientHandler.class);\n    +\tprivate Client client;\n    +\tlong start_time;\n    +\t/** Used for client or server's token to send or receive from each other. */\n    +\tprivate byte[] token;\n    +\tprivate String topologyName;\n    +\n    +\tpublic SaslStormClientHandler(Client client) throws IOException {\n    +\t\tthis.client = client;\n    +\t\tstart_time = System.currentTimeMillis();\n    +\t\tgetSASLCredentials();\n    +\t}\n    +\n    +\t@Override\n    +\tpublic void channelConnected(ChannelHandlerContext ctx,\n    +\t\t\tChannelStateEvent event) {\n    +\t\t// register the newly established channel\n    +\t\tChannel channel = ctx.getChannel();\n    +\n    +\t\tLOG.info(\"Connection established from \" + channel.getLocalAddress()\n    +\t\t\t\t+ \" to \" + channel.getRemoteAddress());\n    +\n    +\t\ttry {\n    +\t\t\tSaslNettyClient saslNettyClient = SaslNettyClientState.getSaslNettyClient\n    +\t\t\t\t\t.get(channel);\n    +\n    +\t\t\tif (saslNettyClient == null) {\n    +\t\t\t\tLOG.debug(\"Creating saslNettyClient now \" + \"for channel: \"\n    +\t\t\t\t\t\t+ channel);\n    +\t\t\t\tsaslNettyClient = new SaslNettyClient(topologyName, token);\n    +\t\t\t\tSaslNettyClientState.getSaslNettyClient.set(channel,\n    +\t\t\t\t\t\tsaslNettyClient);\n    +\t\t\t}\n    +\t\t\tchannel.write(ControlMessage.SASL_TOKEN_MESSAGE_REQUEST);\n    +\t\t} catch (Exception e) {\n    +\t\t\tLOG.error(\"Failed to authenticate with server \" + \"due to error: \"\n    +\t\t\t\t\t+ e);\n    +\t\t}\n    +\t\treturn;\n    +\n    +\t}\n    +\n    +\t@Override\n    +\tpublic void messageReceived(ChannelHandlerContext ctx, MessageEvent event)\n    +\t\t\tthrows Exception {\n    +\t\tLOG.debug(\"send/recv time (ms): {}\",\n    +\t\t\t\t(System.currentTimeMillis() - start_time));\n    +\n    +\t\tChannel channel = ctx.getChannel();\n    +\n    +\t\t// Generate SASL response to server using Channel-local SASL client.\n    +\t\tSaslNettyClient saslNettyClient = SaslNettyClientState.getSaslNettyClient\n    +\t\t\t\t.get(channel);\n    +\t\tif (saslNettyClient == null) {\n    +\t\t\tthrow new Exception(\"saslNettyClient was unexpectedly \"\n    +\t\t\t\t\t+ \"null for channel: \" + channel);\n    +\t\t}\n    +\n    +\t\t// examine the response message from server\n    +\t\tif (event.getMessage() instanceof ControlMessage) {\n    +\t\t\tControlMessage msg = (ControlMessage) event.getMessage();\n    +\t\t\tif (msg == ControlMessage.SASL_COMPLETE_REQUEST) {\n    +\t\t\t\tLOG.debug(\"Server has sent us the SaslComplete \"\n    +\t\t\t\t\t\t+ \"message. Allowing normal work to proceed.\");\n    +\n    +\t\t\t\tif (!saslNettyClient.isComplete()) {\n    +\t\t\t\t\tLOG.error(\"Server returned a Sasl-complete message, \"\n    +\t\t\t\t\t\t\t+ \"but as far as we can tell, we are not authenticated yet.\");\n    +\t\t\t\t\tthrow new Exception(\"Server returned a \"\n    +\t\t\t\t\t\t\t+ \"Sasl-complete message, but as far as \"\n    +\t\t\t\t\t\t\t+ \"we can tell, we are not authenticated yet.\");\n    +\t\t\t\t}\n    +\t\t\t\tctx.getPipeline().remove(this);\n    --- End diff --\n    \n    Do we want to try and support the wrap/unwrap functionality in SASL?  I assume we don't need to at the beginning, but some people have asked for wire encryption and this could be an option.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T15:52:44.541+0000","updated":"2014-07-25T15:52:44.541+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074499","id":"14074499","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15408278\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslStormClientHandler.java ---\n    @@ -0,0 +1,155 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package backtype.storm.messaging.netty;\n    +\n    +import java.io.IOException;\n    +\n    +import org.jboss.netty.channel.Channel;\n    +import org.jboss.netty.channel.ChannelHandlerContext;\n    +import org.jboss.netty.channel.ChannelStateEvent;\n    +import org.jboss.netty.channel.Channels;\n    +import org.jboss.netty.channel.MessageEvent;\n    +import org.jboss.netty.channel.SimpleChannelUpstreamHandler;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import backtype.storm.Config;\n    +\n    +public class SaslStormClientHandler extends SimpleChannelUpstreamHandler {\n    +\n    +\tprivate static final Logger LOG = LoggerFactory\n    +\t\t\t.getLogger(SaslStormClientHandler.class);\n    +\tprivate Client client;\n    +\tlong start_time;\n    +\t/** Used for client or server's token to send or receive from each other. */\n    +\tprivate byte[] token;\n    +\tprivate String topologyName;\n    +\n    +\tpublic SaslStormClientHandler(Client client) throws IOException {\n    +\t\tthis.client = client;\n    +\t\tstart_time = System.currentTimeMillis();\n    +\t\tgetSASLCredentials();\n    +\t}\n    +\n    +\t@Override\n    +\tpublic void channelConnected(ChannelHandlerContext ctx,\n    +\t\t\tChannelStateEvent event) {\n    +\t\t// register the newly established channel\n    +\t\tChannel channel = ctx.getChannel();\n    +\n    +\t\tLOG.info(\"Connection established from \" + channel.getLocalAddress()\n    +\t\t\t\t+ \" to \" + channel.getRemoteAddress());\n    +\n    +\t\ttry {\n    +\t\t\tSaslNettyClient saslNettyClient = SaslNettyClientState.getSaslNettyClient\n    +\t\t\t\t\t.get(channel);\n    +\n    +\t\t\tif (saslNettyClient == null) {\n    +\t\t\t\tLOG.debug(\"Creating saslNettyClient now \" + \"for channel: \"\n    +\t\t\t\t\t\t+ channel);\n    +\t\t\t\tsaslNettyClient = new SaslNettyClient(topologyName, token);\n    +\t\t\t\tSaslNettyClientState.getSaslNettyClient.set(channel,\n    +\t\t\t\t\t\tsaslNettyClient);\n    +\t\t\t}\n    +\t\t\tchannel.write(ControlMessage.SASL_TOKEN_MESSAGE_REQUEST);\n    +\t\t} catch (Exception e) {\n    +\t\t\tLOG.error(\"Failed to authenticate with server \" + \"due to error: \"\n    +\t\t\t\t\t+ e);\n    +\t\t}\n    +\t\treturn;\n    +\n    +\t}\n    +\n    +\t@Override\n    +\tpublic void messageReceived(ChannelHandlerContext ctx, MessageEvent event)\n    +\t\t\tthrows Exception {\n    +\t\tLOG.debug(\"send/recv time (ms): {}\",\n    +\t\t\t\t(System.currentTimeMillis() - start_time));\n    +\n    +\t\tChannel channel = ctx.getChannel();\n    +\n    +\t\t// Generate SASL response to server using Channel-local SASL client.\n    +\t\tSaslNettyClient saslNettyClient = SaslNettyClientState.getSaslNettyClient\n    +\t\t\t\t.get(channel);\n    +\t\tif (saslNettyClient == null) {\n    +\t\t\tthrow new Exception(\"saslNettyClient was unexpectedly \"\n    +\t\t\t\t\t+ \"null for channel: \" + channel);\n    +\t\t}\n    +\n    +\t\t// examine the response message from server\n    +\t\tif (event.getMessage() instanceof ControlMessage) {\n    +\t\t\tControlMessage msg = (ControlMessage) event.getMessage();\n    +\t\t\tif (msg == ControlMessage.SASL_COMPLETE_REQUEST) {\n    +\t\t\t\tLOG.debug(\"Server has sent us the SaslComplete \"\n    +\t\t\t\t\t\t+ \"message. Allowing normal work to proceed.\");\n    +\n    +\t\t\t\tif (!saslNettyClient.isComplete()) {\n    +\t\t\t\t\tLOG.error(\"Server returned a Sasl-complete message, \"\n    +\t\t\t\t\t\t\t+ \"but as far as we can tell, we are not authenticated yet.\");\n    +\t\t\t\t\tthrow new Exception(\"Server returned a \"\n    +\t\t\t\t\t\t\t+ \"Sasl-complete message, but as far as \"\n    +\t\t\t\t\t\t\t+ \"we can tell, we are not authenticated yet.\");\n    +\t\t\t\t}\n    +\t\t\t\tctx.getPipeline().remove(this);\n    +\t\t\t\t// We call fireMessageReceived since the client is allowed to\n    +\t\t\t\t// perform this request. The client's request will now proceed\n    +\t\t\t\t// to the next pipeline component namely StormClientHandler.\n    +\t\t\t\tChannels.fireMessageReceived(ctx, msg);\n    +\t\t\t\treturn;\n    +\t\t\t}\n    +\t\t}\n    +\t\tSaslMessageToken saslTokenMessage = (SaslMessageToken) event\n    +\t\t\t\t.getMessage();\n    +\t\tLOG.debug(\"Responding to server's token of length: \"\n    +\t\t\t\t+ saslTokenMessage.getSaslToken().length);\n    +\n    +\t\t// Generate SASL response (but we only actually send the response if\n    +\t\t// it's non-null.\n    +\t\tbyte[] responseToServer = saslNettyClient\n    +\t\t\t\t.saslResponse(saslTokenMessage);\n    +\t\tif (responseToServer == null) {\n    +\t\t\t// If we generate a null response, then authentication has completed\n    +\t\t\t// (if not, warn), and return without sending a response back to the\n    +\t\t\t// server.\n    +\t\t\tLOG.debug(\"Response to server is null: \"\n    +\t\t\t\t\t+ \"authentication should now be complete.\");\n    +\t\t\tif (!saslNettyClient.isComplete()) {\n    +\t\t\t\tLOG.warn(\"Generated a null response, \"\n    --- End diff --\n    \n    Do we want to throw an exception in this case?  Like we do above.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T15:54:26.882+0000","updated":"2014-07-25T15:54:26.882+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074502","id":"14074502","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15408707\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslUtils.java ---\n    @@ -0,0 +1,75 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package backtype.storm.messaging.netty;\n    +\n    +import java.nio.charset.Charset;\n    +import java.util.HashMap;\n    +import java.util.Map;\n    +\n    +import javax.security.sasl.Sasl;\n    +\n    +import org.apache.commons.codec.binary.Base64;\n    +\n    +import backtype.storm.Config;\n    +\n    +class SaslUtils {\n    +\tpublic static final String AUTH_DIGEST_MD5 = \"DIGEST-MD5\";\n    +\tpublic static final String DEFAULT_REALM = \"default\";\n    +\n    +\tstatic Map<String, String> getSaslProps() {\n    +\t\tMap<String, String> props = new HashMap<String, String>();\n    +\t\tprops.put(Sasl.POLICY_NOPLAINTEXT, \"true\");\n    +\t\treturn props;\n    +\t}\n    +\n    +\t/**\n    +\t * Encode a password as a base64-encoded char[] array.\n    +\t * \n    +\t * @param password\n    +\t *            as a byte array.\n    +\t * @return password as a char array.\n    +\t */\n    +\tstatic char[] encodePassword(byte[] password) {\n    +\t\treturn new String(Base64.encodeBase64(password),\n    +\t\t\t\tCharset.defaultCharset()).toCharArray();\n    --- End diff --\n    \n    Can we change this to explicitly be UTF-8.  The default charset can change from local to local, although shouldn't really.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T16:01:22.150+0000","updated":"2014-07-25T16:01:22.150+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074503","id":"14074503","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15408724\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslUtils.java ---\n    @@ -0,0 +1,75 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package backtype.storm.messaging.netty;\n    +\n    +import java.nio.charset.Charset;\n    +import java.util.HashMap;\n    +import java.util.Map;\n    +\n    +import javax.security.sasl.Sasl;\n    +\n    +import org.apache.commons.codec.binary.Base64;\n    +\n    +import backtype.storm.Config;\n    +\n    +class SaslUtils {\n    +\tpublic static final String AUTH_DIGEST_MD5 = \"DIGEST-MD5\";\n    +\tpublic static final String DEFAULT_REALM = \"default\";\n    +\n    +\tstatic Map<String, String> getSaslProps() {\n    +\t\tMap<String, String> props = new HashMap<String, String>();\n    +\t\tprops.put(Sasl.POLICY_NOPLAINTEXT, \"true\");\n    +\t\treturn props;\n    +\t}\n    +\n    +\t/**\n    +\t * Encode a password as a base64-encoded char[] array.\n    +\t * \n    +\t * @param password\n    +\t *            as a byte array.\n    +\t * @return password as a char array.\n    +\t */\n    +\tstatic char[] encodePassword(byte[] password) {\n    +\t\treturn new String(Base64.encodeBase64(password),\n    +\t\t\t\tCharset.defaultCharset()).toCharArray();\n    +\t}\n    +\n    +\t/**\n    +\t * Encode a identifier as a base64-encoded char[] array.\n    +\t * \n    +\t * @param identifier\n    +\t *            as a byte array.\n    +\t * @return identifier as a char array.\n    +\t */\n    +\tstatic String encodeIdentifier(byte[] identifier) {\n    +\t\treturn new String(Base64.encodeBase64(identifier),\n    +\t\t\t\tCharset.defaultCharset());\n    --- End diff --\n    \n    UTF-8 here too.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T16:01:34.293+0000","updated":"2014-07-25T16:01:34.293+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074510","id":"14074510","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15409108\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/StormClientPipelineFactory.java ---\n    @@ -32,12 +34,24 @@ public ChannelPipeline getPipeline() throws Exception {\n             // Create a default pipeline implementation.\n             ChannelPipeline pipeline = Channels.pipeline();\n     \n    -        // Decoder\n    -        pipeline.addLast(\"decoder\", new MessageDecoder());\n    -        // Encoder\n    -        pipeline.addLast(\"encoder\", new MessageEncoder());\n    -        // business logic.\n    -        pipeline.addLast(\"handler\", new StormClientErrorHandler(client.name()));\n    +        boolean isNettyAuth = (Boolean) this.client.storm_conf.get(Config.STORM_MESSAGING_NETTY_AUTHENTICATION);\n    +        if(isNettyAuth) {\n    +\t        // Decoder\n    +\t        pipeline.addLast(\"decoder\", new MessageDecoder());\n    +\t        // Encoder\n    +\t        pipeline.addLast(\"encoder\", new MessageEncoder());\n    +\t        // Authenticate: Removed after authentication completes\n    +\t        pipeline.addLast(\"saslClientHandler\", new SaslStormClientHandler(client));\n    +\t        // business logic.\n    +\t        pipeline.addLast(\"handler\", new StormClientErrorHandler(client.name()));\n    +        } else {\n    +        \t// Decoder\n    +\t        pipeline.addLast(\"decoder\", new MessageDecoder());\n    +\t        // Encoder\n    +\t        pipeline.addLast(\"encoder\", new MessageEncoder());\n    +\t        // business logic.\n    +\t        pipeline.addLast(\"handler\", new StormClientErrorHandler(client.name()));\n    +        }\n    --- End diff --\n    \n    There is a lot in common between the if and else blocks.  Could we try and combine them again, and just have adding the saslClientHandler be in the if block?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T16:08:17.707+0000","updated":"2014-07-25T16:08:17.707+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074515","id":"14074515","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15409160\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/StormServerPipelineFactory.java ---\n    @@ -33,13 +36,27 @@ public ChannelPipeline getPipeline() throws Exception {\n             // Create a default pipeline implementation.\n             ChannelPipeline pipeline = Channels.pipeline();\n     \n    -        // Decoder\n    -        pipeline.addLast(\"decoder\", new MessageDecoder());\n    -        // Encoder\n    -        pipeline.addLast(\"encoder\", new MessageEncoder());\n    -        // business logic.\n    -        pipeline.addLast(\"handler\", new StormServerHandler(server));\n    -\n    +        boolean isNettyAuth = (Boolean) this.server.storm_conf.get(Config.STORM_MESSAGING_NETTY_AUTHENTICATION);\n    +        if(isNettyAuth) {\n    +        \t// Decoder\n    +            pipeline.addLast(\"decoder\", new MessageDecoder());\n    +            // Encoder\n    +            pipeline.addLast(\"encoder\", new MessageEncoder());\n    +            // Authenticate: Removed after authentication completes\n    +            pipeline.addLast(\"saslServerHandler\", new SaslStormServerHandler(server));\n    +            // Authorize\n    +            pipeline.addLast(\"authorizeServerHandler\", new SaslStormServerAuthorizeHandler());\n    +            // business logic.\n    +            pipeline.addLast(\"handler\", new StormServerHandler(server));\n    +        } else {\n    +        \t// Decoder\n    +            pipeline.addLast(\"decoder\", new MessageDecoder());\n    +            // Encoder\n    +            pipeline.addLast(\"encoder\", new MessageEncoder());\n    +            // business logic.\n    +            pipeline.addLast(\"handler\", new StormServerHandler(server));\n    +        }\n    +        \n    --- End diff --\n    \n    Similar here, could we try to combine as much of the if/else blocks together do that the sasl handling is the only thing in the if block.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T16:09:06.467+0000","updated":"2014-07-25T16:09:06.467+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074517","id":"14074517","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#issuecomment-50170349\n  \n    I haven't had a chance to test this yet.  I only have a few comments most of them are fairly minor.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T16:10:16.307+0000","updated":"2014-07-25T16:10:16.307+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14074518","id":"14074518","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15409263\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslStormClientHandler.java ---\n    @@ -0,0 +1,155 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package backtype.storm.messaging.netty;\n    +\n    +import java.io.IOException;\n    +\n    +import org.jboss.netty.channel.Channel;\n    +import org.jboss.netty.channel.ChannelHandlerContext;\n    +import org.jboss.netty.channel.ChannelStateEvent;\n    +import org.jboss.netty.channel.Channels;\n    +import org.jboss.netty.channel.MessageEvent;\n    +import org.jboss.netty.channel.SimpleChannelUpstreamHandler;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import backtype.storm.Config;\n    +\n    +public class SaslStormClientHandler extends SimpleChannelUpstreamHandler {\n    +\n    +\tprivate static final Logger LOG = LoggerFactory\n    +\t\t\t.getLogger(SaslStormClientHandler.class);\n    +\tprivate Client client;\n    +\tlong start_time;\n    +\t/** Used for client or server's token to send or receive from each other. */\n    +\tprivate byte[] token;\n    +\tprivate String topologyName;\n    +\n    +\tpublic SaslStormClientHandler(Client client) throws IOException {\n    +\t\tthis.client = client;\n    +\t\tstart_time = System.currentTimeMillis();\n    +\t\tgetSASLCredentials();\n    +\t}\n    +\n    +\t@Override\n    +\tpublic void channelConnected(ChannelHandlerContext ctx,\n    +\t\t\tChannelStateEvent event) {\n    +\t\t// register the newly established channel\n    +\t\tChannel channel = ctx.getChannel();\n    +\n    +\t\tLOG.info(\"Connection established from \" + channel.getLocalAddress()\n    +\t\t\t\t+ \" to \" + channel.getRemoteAddress());\n    +\n    +\t\ttry {\n    +\t\t\tSaslNettyClient saslNettyClient = SaslNettyClientState.getSaslNettyClient\n    +\t\t\t\t\t.get(channel);\n    +\n    +\t\t\tif (saslNettyClient == null) {\n    +\t\t\t\tLOG.debug(\"Creating saslNettyClient now \" + \"for channel: \"\n    +\t\t\t\t\t\t+ channel);\n    +\t\t\t\tsaslNettyClient = new SaslNettyClient(topologyName, token);\n    +\t\t\t\tSaslNettyClientState.getSaslNettyClient.set(channel,\n    +\t\t\t\t\t\tsaslNettyClient);\n    +\t\t\t}\n    +\t\t\tchannel.write(ControlMessage.SASL_TOKEN_MESSAGE_REQUEST);\n    +\t\t} catch (Exception e) {\n    +\t\t\tLOG.error(\"Failed to authenticate with server \" + \"due to error: \"\n    +\t\t\t\t\t+ e);\n    +\t\t}\n    +\t\treturn;\n    +\n    +\t}\n    +\n    +\t@Override\n    +\tpublic void messageReceived(ChannelHandlerContext ctx, MessageEvent event)\n    +\t\t\tthrows Exception {\n    +\t\tLOG.debug(\"send/recv time (ms): {}\",\n    +\t\t\t\t(System.currentTimeMillis() - start_time));\n    +\n    +\t\tChannel channel = ctx.getChannel();\n    +\n    +\t\t// Generate SASL response to server using Channel-local SASL client.\n    +\t\tSaslNettyClient saslNettyClient = SaslNettyClientState.getSaslNettyClient\n    +\t\t\t\t.get(channel);\n    +\t\tif (saslNettyClient == null) {\n    +\t\t\tthrow new Exception(\"saslNettyClient was unexpectedly \"\n    +\t\t\t\t\t+ \"null for channel: \" + channel);\n    +\t\t}\n    +\n    +\t\t// examine the response message from server\n    +\t\tif (event.getMessage() instanceof ControlMessage) {\n    +\t\t\tControlMessage msg = (ControlMessage) event.getMessage();\n    +\t\t\tif (msg == ControlMessage.SASL_COMPLETE_REQUEST) {\n    +\t\t\t\tLOG.debug(\"Server has sent us the SaslComplete \"\n    +\t\t\t\t\t\t+ \"message. Allowing normal work to proceed.\");\n    +\n    +\t\t\t\tif (!saslNettyClient.isComplete()) {\n    +\t\t\t\t\tLOG.error(\"Server returned a Sasl-complete message, \"\n    +\t\t\t\t\t\t\t+ \"but as far as we can tell, we are not authenticated yet.\");\n    +\t\t\t\t\tthrow new Exception(\"Server returned a \"\n    +\t\t\t\t\t\t\t+ \"Sasl-complete message, but as far as \"\n    +\t\t\t\t\t\t\t+ \"we can tell, we are not authenticated yet.\");\n    +\t\t\t\t}\n    +\t\t\t\tctx.getPipeline().remove(this);\n    --- End diff --\n    \n    I see now that the encoder/decoder are not SASL aware, so the wrap/unwrap would have to happen at that level, making this a bigger change.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-25T16:11:25.479+0000","updated":"2014-07-25T16:11:25.479+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14075181","id":"14075181","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user RaghavendraNandagopal commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15431022\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslNettyClient.java ---\n    @@ -0,0 +1,166 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package backtype.storm.messaging.netty;\n    +\n    +import java.io.IOException;\n    +\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.RealmCallback;\n    +import javax.security.sasl.RealmChoiceCallback;\n    +import javax.security.sasl.Sasl;\n    +import javax.security.sasl.SaslClient;\n    +import javax.security.sasl.SaslException;\n    +\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +/**\n    + * Implements SASL logic for storm worker client processes.\n    + */\n    +public class SaslNettyClient {\n    +\n    +\tprivate static final Logger LOG = LoggerFactory\n    +\t\t\t.getLogger(SaslNettyClient.class);\n    +\n    +\t/**\n    +\t * Used to respond to server's counterpart, SaslServer with SASL tokens\n    +\t * represented as byte arrays.\n    +\t */\n    +\tprivate SaslClient saslClient;\n    +\n    +\t/**\n    +\t * Create a SaslNettyClient for authentication with servers.\n    +\t */\n    +\tpublic SaslNettyClient(String topologyName, byte[] token) {\n    +\t\ttry {\n    +\t\t\tLOG.debug(\"SaslNettyClient: Creating SASL \"\n    +\t\t\t\t\t+ SaslUtils.AUTH_DIGEST_MD5\n    +\t\t\t\t\t+ \" client to authenticate to server \");\n    +\n    +\t\t\tsaslClient = Sasl.createSaslClient(\n    +\t\t\t\t\tnew String[] { SaslUtils.AUTH_DIGEST_MD5 }, null, null,\n    +\t\t\t\t\tSaslUtils.DEFAULT_REALM, SaslUtils.getSaslProps(),\n    +\t\t\t\t\tnew SaslClientCallbackHandler(topologyName, token));\n    +\n    +\t\t} catch (IOException e) {\n    +\t\t\tLOG.error(\"SaslNettyClient: Could not obtain topology token for Netty \"\n    +\t\t\t\t\t+ \"Client to use to authenticate with a Netty Server.\");\n    +\t\t\tsaslClient = null;\n    --- End diff --\n    \n    The createSaslClient() method throws IOException and we just log it and make the saslClient object null which will end up with NPEs.  Is there anything that we need to take care?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-26T01:04:32.419+0000","updated":"2014-07-26T01:04:32.419+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14076535","id":"14076535","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user RaghavendraNandagopal commented on a diff in the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#discussion_r15480490\n  \n    --- Diff: storm-core/src/jvm/backtype/storm/messaging/netty/SaslUtils.java ---\n    @@ -0,0 +1,75 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package backtype.storm.messaging.netty;\n    +\n    +import java.nio.charset.Charset;\n    +import java.util.HashMap;\n    +import java.util.Map;\n    +\n    +import javax.security.sasl.Sasl;\n    +\n    +import org.apache.commons.codec.binary.Base64;\n    +\n    +import backtype.storm.Config;\n    +\n    +class SaslUtils {\n    +\tpublic static final String AUTH_DIGEST_MD5 = \"DIGEST-MD5\";\n    +\tpublic static final String DEFAULT_REALM = \"default\";\n    +\n    +\tstatic Map<String, String> getSaslProps() {\n    +\t\tMap<String, String> props = new HashMap<String, String>();\n    +\t\tprops.put(Sasl.POLICY_NOPLAINTEXT, \"true\");\n    +\t\treturn props;\n    +\t}\n    +\n    +\t/**\n    +\t * Encode a password as a base64-encoded char[] array.\n    +\t * \n    +\t * @param password\n    +\t *            as a byte array.\n    +\t * @return password as a char array.\n    +\t */\n    +\tstatic char[] encodePassword(byte[] password) {\n    +\t\treturn new String(Base64.encodeBase64(password),\n    +\t\t\t\tCharset.defaultCharset()).toCharArray();\n    --- End diff --\n    \n    Unfortunately, the file.encoding property has to be specified as the JVM starts up; up.  The character encoding used by String.getBytes() and the default constructors of InputStreamReader and OutputStreamWriter has been permanently cached.\n    java -Dfile.encoding=UTF-8\n    Charset.defaultCharset() will reflect changes to the file.encoding property, but most of the code in the core Java libraries that need to determine the default character encoding do not use this mechanism.\n    When we are encoding or decoding, we have to query the file.encoding property or Charset.defaultCharset() to find the current default encoding, and use the appropriate method or constructor overload to specify it.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-28T18:25:58.179+0000","updated":"2014-07-28T18:25:58.179+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14077131","id":"14077131","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user RaghavendraNandagopal commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#issuecomment-50416955\n  \n    Hi Bobby, \n      I have made all the changes mentioned above and provided the comments for specific questions.  \n    I will look at the wrap/unwrap functionality within SASL and in the meantime if you can review and provide your comments on the basic SASL functionality.\n    \n    Thanks,\n    Raghavendra Nandagopal\n    \n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-28T23:36:43.974+0000","updated":"2014-07-28T23:36:43.974+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14078531","id":"14078531","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#issuecomment-50549920\n  \n    The code looks good.  The wrap/unwrap we can save for a later time.  I had some very minor merge conflicts and storm-core/test/clj/backtype/storm/messaging/netty_unit_test.clj is failing for me.  It looks like it needs to have STORM-MESSAGING-NETTY-AUTHENTICATION false added to all of the configs, as they are unit tests and don't pick up defaults.yaml\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-29T22:45:42.198+0000","updated":"2014-07-29T22:45:42.198+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14078538","id":"14078538","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#issuecomment-50550303\n  \n    I forgot to add that after you update the tests I am +1 for merging this in.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-29T22:49:55.483+0000","updated":"2014-07-29T22:49:55.483+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14078541","id":"14078541","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user RaghavendraNandagopal commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#issuecomment-50550500\n  \n    Should I make any changes to fix the configs or will it be taken care.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-29T22:52:15.780+0000","updated":"2014-07-29T22:52:15.780+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14078687","id":"14078687","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#issuecomment-50558624\n  \n    ```\n    diff --git a/storm-core/test/clj/backtype/storm/messaging/netty_unit_test.clj b/storm-core/test/clj/backtype/storm/messaging/netty_unit_test.clj\n    index ea7b8dc..c205dc3 100644\n    --- a/storm-core/test/clj/backtype/storm/messaging/netty_unit_test.clj\n    +++ b/storm-core/test/clj/backtype/storm/messaging/netty_unit_test.clj\n    @@ -32,6 +32,7 @@\n                         STORM-MESSAGING-NETTY-MAX-SLEEP-MS 5000\n                         STORM-MESSAGING-NETTY-SERVER-WORKER-THREADS 1\n                         STORM-MESSAGING-NETTY-CLIENT-WORKER-THREADS 1\n    +                    STORM-MESSAGING-NETTY-AUTHENTICATION false\n                         }\n             context (TransportFactory/makeContext storm-conf)\n             server (.bind context nil port)\n    @@ -54,6 +55,7 @@\n                         STORM-MESSAGING-NETTY-MAX-SLEEP-MS 5000\n                         STORM-MESSAGING-NETTY-SERVER-WORKER-THREADS 1\n                         STORM-MESSAGING-NETTY-CLIENT-WORKER-THREADS 1\n    +                    STORM-MESSAGING-NETTY-AUTHENTICATION false\n                         }\n             context (TransportFactory/makeContext storm-conf)\n             server (.bind context nil port)\n    @@ -76,6 +78,7 @@\n                         STORM-MESSAGING-NETTY-MAX-SLEEP-MS 5000\n                         STORM-MESSAGING-NETTY-SERVER-WORKER-THREADS 1\n                         STORM-MESSAGING-NETTY-CLIENT-WORKER-THREADS 1\n    +                    STORM-MESSAGING-NETTY-AUTHENTICATION false\n                         }\n    ```\n    \n    is what I had to do to get the tests to pass.  Otherwise I was getting NPEs in the tests. If you could update your pull request it makes tracking the changes, a lot cleaner.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-30T00:27:12.447+0000","updated":"2014-07-30T00:27:12.447+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14078701","id":"14078701","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user RaghavendraNandagopal commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#issuecomment-50559191\n  \n    I have made the changes to the netty_unit_test.clj and netty_integration_test.clj files.  Can you please check?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-30T00:35:26.266+0000","updated":"2014-07-30T00:35:26.266+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14079433","id":"14079433","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on the pull request:\n\n    https://github.com/apache/incubator-storm/pull/202#issuecomment-50637878\n  \n    It all looks good I am +1. I'll merge this into the security branch shortly.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-30T16:14:07.688+0000","updated":"2014-07-30T16:14:07.688+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14079441","id":"14079441","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"Thanks Raghavendra,\n\nI think this finally puts us in a position for security to be merged into master. keep up the good work.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2014-07-30T16:17:58.306+0000","updated":"2014-07-30T16:17:58.306+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14079468","id":"14079468","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/incubator-storm/pull/202\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2014-07-30T16:31:44.840+0000","updated":"2014-07-30T16:31:44.840+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12720427/comment/14079739","id":"14079739","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=speaktoraghav","name":"speaktoraghav","key":"speaktoraghav","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=speaktoraghav&avatarId=20376","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=speaktoraghav&avatarId=20376","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=speaktoraghav&avatarId=20376","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=speaktoraghav&avatarId=20376"},"displayName":"Raghavendra Nandagopal","active":true,"timeZone":"America/Los_Angeles"},"body":"I have updated the document that has the latest design and implementation details.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=speaktoraghav","name":"speaktoraghav","key":"speaktoraghav","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=speaktoraghav&avatarId=20376","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=speaktoraghav&avatarId=20376","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=speaktoraghav&avatarId=20376","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=speaktoraghav&avatarId=20376"},"displayName":"Raghavendra Nandagopal","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-30T18:41:40.611+0000","updated":"2014-07-30T18:41:40.611+0000"}],"maxResults":30,"total":30,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-348/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1wmmn:"}}