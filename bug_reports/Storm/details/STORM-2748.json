{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13103615","self":"https://issues.apache.org/jira/rest/api/2/issue/13103615","key":"STORM-2748","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":6000,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false}],"aggregatetimespent":6000,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"2017-09-20 14:22:28.054","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_99501627_*|*_5_*:*_1_*:*_0","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2017-09-21T18:00:49.635+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2748/watchers","watchCount":1,"isWatching":false},"created":"2017-09-20T14:22:28.054+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["pull-request-available"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false}],"customfield_12312339":null,"issuelinks":[],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-09-21T18:01:12.619+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12332924","id":"12332924","name":"storm-server"}],"timeoriginalestimate":null,"description":"The test starts up a small topology on a simulated time cluster with TOPOLOGY_TICK_TUPLE_FREQ_SECS set to 1.  Then it simulates 2 seconds of cluster time.  This is not enough time to even launch the topology.  How do I know this?  Because the Bolt and Spout in the topology override `writeObject` so the resulting serialized bolt and spout are empty and trying to deserialize them results in an exception.\n\nJust running a topology that does nothing and never verifies that the ticks showed up is a really horrible test.  We should either delete it entirely or actually verify that ticks are showing up once a second.  I am leaning towards just removing it totally.","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"1h 40m","remainingEstimateSeconds":0,"timeSpentSeconds":6000},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"TickTupleTest is useless","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":6000,"total":6000,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":6000,"total":6000,"percent":100},"comment":{"comments":[],"maxResults":0,"total":0,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2748/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":10,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103615/worklog/53149","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user revans2 opened a pull request:\n\n    https://github.com/apache/storm/pull/2334\n\n    STORM-2748: Fix TickTupleTest to actually test something\n\n    \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/revans2/incubator-storm STORM-2748\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/2334.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #2334\n    \n----\ncommit b1bc23521e686216043c42f1f1f7d31cc4a92a26\nAuthor: Robert (Bobby) Evans <evans@yahoo-inc.com>\nDate:   2017-09-20T15:42:26Z\n\n    STORM-2748: Fix TickTupleTest to actually test something\n\n----\n","created":"2017-09-20T15:43:36.360+0000","updated":"2017-09-20T15:43:36.360+0000","started":"2017-09-20T15:43:36.357+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"53149","issueId":"13103615"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103615/worklog/53155","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2334#discussion_r140027547\n  \n    --- Diff: storm-server/src/test/java/org/apache/storm/TickTupleTest.java ---\n    @@ -18,85 +18,103 @@\n     \n     package org.apache.storm;\n     \n    +import java.util.Map;\n    +import java.util.concurrent.LinkedBlockingQueue;\n    +import java.util.concurrent.TimeUnit;\n    +import java.util.concurrent.atomic.AtomicReference;\n    +import org.apache.storm.ILocalCluster.ILocalTopology;\n     import org.apache.storm.generated.StormTopology;\n     import org.apache.storm.spout.SpoutOutputCollector;\n     import org.apache.storm.task.OutputCollector;\n     import org.apache.storm.task.TopologyContext;\n    -import org.apache.storm.topology.IRichSpout;\n     import org.apache.storm.topology.OutputFieldsDeclarer;\n     import org.apache.storm.topology.TopologyBuilder;\n     import org.apache.storm.topology.base.BaseRichBolt;\n     import org.apache.storm.topology.base.BaseRichSpout;\n     import org.apache.storm.tuple.Fields;\n     import org.apache.storm.tuple.Tuple;\n    -import org.apache.storm.utils.Utils;\n    -import org.junit.Assert;\n    +import org.apache.storm.utils.Time;\n    +import org.apache.storm.utils.TupleUtils;\n     import org.junit.Test;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n     \n    -import java.util.Map;\n    +import static org.junit.Assert.*;\n     \n     public class TickTupleTest {\n    +    private final static Logger LOG = LoggerFactory.getLogger(TickTupleTest.class);\n    +    private static LinkedBlockingQueue<Long> tickTupleTimes = new LinkedBlockingQueue<>();\n    +    private static AtomicReference<Tuple> nonTickTuple = new AtomicReference<>(null);\n     \n         @Test\n         public void testTickTupleWorksWithSystemBolt() throws Exception {\n    -        ILocalCluster cluster = null;\n    -        try {\n    -            cluster =  new LocalCluster.Builder().withSimulatedTime().withNimbusDaemon(true).build();\n    +        try (ILocalCluster cluster = new LocalCluster.Builder().withSimulatedTime().withNimbusDaemon(true).build()){\n                 StormTopology topology = createNoOpTopology();\n                 Config topoConf = new Config();\n    -            topoConf.putAll(Utils.readDefaultConfig());\n    -            topoConf.put(\"storm.cluster.mode\", \"local\");\n                 topoConf.put(Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS, 1);\n    -            cluster.submitTopology(\"test\", topoConf,  topology);\n    -            cluster.advanceClusterTime(2);\n    -            Assert.assertTrue(\"Test is passed\", true);\n    -        } finally {\n    -            cluster.close();\n    +            try (ILocalTopology topo = cluster.submitTopology(\"test\", topoConf,  topology)) {\n    +                //Give the cluster some time to come up\n    +                cluster.advanceClusterTime(40);\n    +                tickTupleTimes.clear();\n    +                cluster.advanceClusterTime(1);\n    +                assertEquals(41000, tickTupleTimes.poll(100, TimeUnit.MILLISECONDS).longValue());\n    +                cluster.advanceClusterTime(1);\n    +                assertEquals(42000, tickTupleTimes.poll(100, TimeUnit.MILLISECONDS).longValue());\n    +                cluster.advanceClusterTime(1);\n    +                assertEquals(43000, tickTupleTimes.poll(100, TimeUnit.MILLISECONDS).longValue());\n    +                cluster.advanceClusterTime(1);\n    +                assertEquals(44000, tickTupleTimes.poll(100, TimeUnit.MILLISECONDS).longValue());\n    +                cluster.advanceClusterTime(1);\n    +                assertEquals(45000, tickTupleTimes.poll(100, TimeUnit.MILLISECONDS).longValue());\n    +            }\n    +            assertNull(\"The bolt got a tuple that is not a tick tuple \" + nonTickTuple.get(), nonTickTuple.get());\n             }\n    -\n         }\n     \n    -    private IRichSpout makeNoOpSpout() {\n    -        return new BaseRichSpout() {\n    -            @Override\n    -            public void declareOutputFields(OutputFieldsDeclarer declarer) {\n    -                declarer.declare(new Fields(\"tuple\"));\n    -            }\n    -\n    -            @Override\n    -            public void open(Map<String, Object> conf, TopologyContext context, SpoutOutputCollector collector) {\n    -            }\n    +    private static class NoopSpout extends BaseRichSpout {\n    +        @Override\n    +        public void declareOutputFields(OutputFieldsDeclarer declarer) {\n    +            declarer.declare(new Fields(\"tuple\"));\n    +        }\n     \n    -            @Override\n    -            public void nextTuple() {\n    -            }\n    +        @Override\n    +        public void open(Map<String, Object> conf, TopologyContext context, SpoutOutputCollector collector) {\n    +        }\n     \n    -            private void writeObject(java.io.ObjectOutputStream stream) {\n    -            }\n    -        };\n    +        @Override\n    +        public void nextTuple() {\n    +        }\n         }\n     \n    -    private BaseRichBolt makeNoOpBolt() {\n    -        return new BaseRichBolt() {\n    -            @Override\n    -            public void prepare(Map<String, Object> conf, TopologyContext topologyContext, OutputCollector outputCollector) {}\n    -            @Override\n    -            public void execute(Tuple tuple) {}\n    +    private static class NoopBlot extends BaseRichBolt {\n    +        @Override\n    +        public void prepare(Map<String, Object> conf, TopologyContext topologyContext, OutputCollector outputCollector) {}\n     \n    -            @Override\n    -            public void cleanup() { }\n    +        @Override\n    +        public void execute(Tuple tuple) {\n    +            LOG.error(\"GOT {}\", tuple);\n    --- End diff --\n    \n    Nit: Info or debug might be nicer so a grep for errors in the logs doesn't produce this line.\n","created":"2017-09-20T16:55:04.371+0000","updated":"2017-09-20T16:55:04.371+0000","started":"2017-09-20T16:55:04.369+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"53155","issueId":"13103615"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103615/worklog/53156","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2334#discussion_r140026143\n  \n    --- Diff: storm-server/src/test/java/org/apache/storm/TickTupleTest.java ---\n    @@ -18,85 +18,103 @@\n     \n     package org.apache.storm;\n     \n    +import java.util.Map;\n    +import java.util.concurrent.LinkedBlockingQueue;\n    +import java.util.concurrent.TimeUnit;\n    +import java.util.concurrent.atomic.AtomicReference;\n    +import org.apache.storm.ILocalCluster.ILocalTopology;\n     import org.apache.storm.generated.StormTopology;\n     import org.apache.storm.spout.SpoutOutputCollector;\n     import org.apache.storm.task.OutputCollector;\n     import org.apache.storm.task.TopologyContext;\n    -import org.apache.storm.topology.IRichSpout;\n     import org.apache.storm.topology.OutputFieldsDeclarer;\n     import org.apache.storm.topology.TopologyBuilder;\n     import org.apache.storm.topology.base.BaseRichBolt;\n     import org.apache.storm.topology.base.BaseRichSpout;\n     import org.apache.storm.tuple.Fields;\n     import org.apache.storm.tuple.Tuple;\n    -import org.apache.storm.utils.Utils;\n    -import org.junit.Assert;\n    +import org.apache.storm.utils.Time;\n    +import org.apache.storm.utils.TupleUtils;\n     import org.junit.Test;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n     \n    -import java.util.Map;\n    +import static org.junit.Assert.*;\n     \n     public class TickTupleTest {\n    +    private final static Logger LOG = LoggerFactory.getLogger(TickTupleTest.class);\n    +    private static LinkedBlockingQueue<Long> tickTupleTimes = new LinkedBlockingQueue<>();\n    +    private static AtomicReference<Tuple> nonTickTuple = new AtomicReference<>(null);\n     \n         @Test\n         public void testTickTupleWorksWithSystemBolt() throws Exception {\n    -        ILocalCluster cluster = null;\n    -        try {\n    -            cluster =  new LocalCluster.Builder().withSimulatedTime().withNimbusDaemon(true).build();\n    +        try (ILocalCluster cluster = new LocalCluster.Builder().withSimulatedTime().withNimbusDaemon(true).build()){\n                 StormTopology topology = createNoOpTopology();\n                 Config topoConf = new Config();\n    -            topoConf.putAll(Utils.readDefaultConfig());\n    -            topoConf.put(\"storm.cluster.mode\", \"local\");\n                 topoConf.put(Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS, 1);\n    -            cluster.submitTopology(\"test\", topoConf,  topology);\n    -            cluster.advanceClusterTime(2);\n    -            Assert.assertTrue(\"Test is passed\", true);\n    -        } finally {\n    -            cluster.close();\n    +            try (ILocalTopology topo = cluster.submitTopology(\"test\", topoConf,  topology)) {\n    +                //Give the cluster some time to come up\n    +                cluster.advanceClusterTime(40);\n    +                tickTupleTimes.clear();\n    +                cluster.advanceClusterTime(1);\n    +                assertEquals(41000, tickTupleTimes.poll(100, TimeUnit.MILLISECONDS).longValue());\n    +                cluster.advanceClusterTime(1);\n    +                assertEquals(42000, tickTupleTimes.poll(100, TimeUnit.MILLISECONDS).longValue());\n    +                cluster.advanceClusterTime(1);\n    +                assertEquals(43000, tickTupleTimes.poll(100, TimeUnit.MILLISECONDS).longValue());\n    +                cluster.advanceClusterTime(1);\n    +                assertEquals(44000, tickTupleTimes.poll(100, TimeUnit.MILLISECONDS).longValue());\n    +                cluster.advanceClusterTime(1);\n    +                assertEquals(45000, tickTupleTimes.poll(100, TimeUnit.MILLISECONDS).longValue());\n    +            }\n    +            assertNull(\"The bolt got a tuple that is not a tick tuple \" + nonTickTuple.get(), nonTickTuple.get());\n             }\n    -\n         }\n     \n    -    private IRichSpout makeNoOpSpout() {\n    -        return new BaseRichSpout() {\n    -            @Override\n    -            public void declareOutputFields(OutputFieldsDeclarer declarer) {\n    -                declarer.declare(new Fields(\"tuple\"));\n    -            }\n    -\n    -            @Override\n    -            public void open(Map<String, Object> conf, TopologyContext context, SpoutOutputCollector collector) {\n    -            }\n    +    private static class NoopSpout extends BaseRichSpout {\n    +        @Override\n    +        public void declareOutputFields(OutputFieldsDeclarer declarer) {\n    +            declarer.declare(new Fields(\"tuple\"));\n    +        }\n     \n    -            @Override\n    -            public void nextTuple() {\n    -            }\n    +        @Override\n    +        public void open(Map<String, Object> conf, TopologyContext context, SpoutOutputCollector collector) {\n    +        }\n     \n    -            private void writeObject(java.io.ObjectOutputStream stream) {\n    -            }\n    -        };\n    +        @Override\n    +        public void nextTuple() {\n    +        }\n         }\n     \n    -    private BaseRichBolt makeNoOpBolt() {\n    -        return new BaseRichBolt() {\n    -            @Override\n    -            public void prepare(Map<String, Object> conf, TopologyContext topologyContext, OutputCollector outputCollector) {}\n    -            @Override\n    -            public void execute(Tuple tuple) {}\n    +    private static class NoopBlot extends BaseRichBolt {\n    --- End diff --\n    \n    Nit: Blot -> Bolt\n","created":"2017-09-20T16:55:04.479+0000","updated":"2017-09-20T16:55:04.479+0000","started":"2017-09-20T16:55:04.478+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"53156","issueId":"13103615"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103615/worklog/53158","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/2334\n  \n    @srdo thanks for the review.  Trying to get the test to work on the slower VMs is still a work in progress.  I'll let you know why I actually have it passing consistently.\n","created":"2017-09-20T17:02:33.209+0000","updated":"2017-09-20T17:02:33.209+0000","started":"2017-09-20T17:02:33.208+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"53158","issueId":"13103615"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103615/worklog/53159","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/2334\n  \n    @srdo I finally have the test passing predictably on travis.  I also fixed the issues that you saw.  Feel free to take another look.\n","created":"2017-09-20T17:25:41.541+0000","updated":"2017-09-20T17:25:41.541+0000","started":"2017-09-20T17:25:41.540+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"53159","issueId":"13103615"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103615/worklog/53160","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2334#discussion_r140039574\n  \n    --- Diff: storm-server/src/test/java/org/apache/storm/TickTupleTest.java ---\n    @@ -18,85 +18,113 @@\n     \n     package org.apache.storm;\n     \n    +import java.util.Map;\n    +import java.util.concurrent.LinkedBlockingQueue;\n    +import java.util.concurrent.TimeUnit;\n    +import java.util.concurrent.atomic.AtomicReference;\n    +import org.apache.storm.ILocalCluster.ILocalTopology;\n     import org.apache.storm.generated.StormTopology;\n     import org.apache.storm.spout.SpoutOutputCollector;\n     import org.apache.storm.task.OutputCollector;\n     import org.apache.storm.task.TopologyContext;\n    -import org.apache.storm.topology.IRichSpout;\n     import org.apache.storm.topology.OutputFieldsDeclarer;\n     import org.apache.storm.topology.TopologyBuilder;\n     import org.apache.storm.topology.base.BaseRichBolt;\n     import org.apache.storm.topology.base.BaseRichSpout;\n     import org.apache.storm.tuple.Fields;\n     import org.apache.storm.tuple.Tuple;\n    -import org.apache.storm.utils.Utils;\n    -import org.junit.Assert;\n    +import org.apache.storm.utils.Time;\n    +import org.apache.storm.utils.TupleUtils;\n     import org.junit.Test;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n     \n    -import java.util.Map;\n    +import static org.junit.Assert.*;\n     \n     public class TickTupleTest {\n    +    private final static Logger LOG = LoggerFactory.getLogger(TickTupleTest.class);\n    +    private static LinkedBlockingQueue<Long> tickTupleTimes = new LinkedBlockingQueue<>();\n    +    private static AtomicReference<Tuple> nonTickTuple = new AtomicReference<>(null);\n     \n         @Test\n         public void testTickTupleWorksWithSystemBolt() throws Exception {\n    -        ILocalCluster cluster = null;\n    -        try {\n    -            cluster =  new LocalCluster.Builder().withSimulatedTime().withNimbusDaemon(true).build();\n    +        try (ILocalCluster cluster = new LocalCluster.Builder().withSimulatedTime().withNimbusDaemon(true).build()){\n                 StormTopology topology = createNoOpTopology();\n                 Config topoConf = new Config();\n    -            topoConf.putAll(Utils.readDefaultConfig());\n    -            topoConf.put(\"storm.cluster.mode\", \"local\");\n                 topoConf.put(Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS, 1);\n    -            cluster.submitTopology(\"test\", topoConf,  topology);\n    -            cluster.advanceClusterTime(2);\n    -            Assert.assertTrue(\"Test is passed\", true);\n    -        } finally {\n    -            cluster.close();\n    +            try (ILocalTopology topo = cluster.submitTopology(\"test\", topoConf,  topology)) {\n    +                //Give the cluster some time to come up\n    +                long time = 0;\n    +                while (tickTupleTimes.size() <= 0) {\n    +                    assert time <= 100_000 : \"took over \" + time + \" ms of simulated time to get a message back...\";\n    +                    cluster.advanceClusterTime(10);\n    +                    time += 10_000;\n    +                }\n    +                tickTupleTimes.clear();\n    +                cluster.advanceClusterTime(1);\n    +                time += 1000;\n    --- End diff --\n    \n    I think this can be put in a loop now, the following lines don't differ anymore.\n","created":"2017-09-20T17:36:58.885+0000","updated":"2017-09-20T17:36:58.885+0000","started":"2017-09-20T17:36:58.884+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"53160","issueId":"13103615"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103615/worklog/53163","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/2334\n  \n    @srdo I turned it into a loop like you requested\n","created":"2017-09-20T21:08:06.960+0000","updated":"2017-09-20T21:08:06.960+0000","started":"2017-09-20T21:08:06.957+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"53163","issueId":"13103615"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103615/worklog/53187","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2334\n  \n    Thanks\n","created":"2017-09-21T05:52:30.072+0000","updated":"2017-09-21T05:52:30.072+0000","started":"2017-09-21T05:52:30.071+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"53187","issueId":"13103615"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103615/worklog/53208","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on the issue:\n\n    https://github.com/apache/storm/pull/2334\n  \n    +1\n","created":"2017-09-21T15:28:59.472+0000","updated":"2017-09-21T15:28:59.472+0000","started":"2017-09-21T15:28:59.471+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"53208","issueId":"13103615"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13103615/worklog/53214","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/storm/pull/2334\n","created":"2017-09-21T18:01:12.612+0000","updated":"2017-09-21T18:01:12.612+0000","started":"2017-09-21T18:01:12.609+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"53214","issueId":"13103615"}]},"customfield_12311820":"0|i3kat3:"}}