{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13132630","self":"https://issues.apache.org/jira/rest/api/2/issue/13132630","key":"STORM-2905","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":12000,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[],"aggregatetimespent":12000,"resolution":null,"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"2018-01-22 10:22:45.513","customfield_12312320":null,"customfield_12310222":null,"customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2905/watchers","watchCount":2,"isWatching":false},"created":"2018-01-22T10:22:45.513+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["pull-request-available"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false}],"customfield_12312339":null,"issuelinks":[],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=danny0405","name":"danny0405","key":"danny0405","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuzhao Chen","active":true,"timeZone":"Asia/Harbin"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-07-19T08:32:58.284+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12332924","id":"12332924","name":"storm-server"}],"timeoriginalestimate":null,"description":"When we kill a topology, at the moment of topology blob-files be removed, Supervisor executor still request blob-files and get an KeyNotFoundException.\r\n\r\nI stepped in and found the reason:\r\n1. We do not add a guarded lock on `topologyBlobs` of AsyncLocalizer which is singleton to a supervisor node.\r\n2. And we remove jar/code/conf blob keys in `topologyBlobs` of killed storm only in a timer task: cleanUp() method of AsyncLocalizer, the remove condition is :[no one reference the blobs] AND [ blobs removed by master OR exceeds the max configured size ], the default scheduling interval is 30 seconds.\r\n3. When we kill a storm on a node[ which means that the slot container are empty], the AsyncLocalizer will do: releaseSlotFor, which only remove reference on the blobs [topologyBlobs keys are still there.]\r\n4. Then the container is empty, and Slot.java will do: cleanupCurrentContainer, which will invoke AsyncLocalizer #releaseSlotFor to release the slot.\r\n5. AsyncLocalizer have a timer task: updateBlobs to update base/user blobs every 30 seconds, which based on the AsyncLocalizer#`topologyBlobs`\r\n6. We know that AsyncLocalizer#`topologyBlobs` overdue keys are only removed by its AsyncLocalizer#cleanUp which is also a timer task.\r\n7. So when we kill a storm, AsyncLocalizer#updateBlobs will update based on a removed jar/code/conf blob-key and fire a exception, then retried until the configured max times to end.\r\n\r\nHere is how i fixed it:\r\n1. just remove the base blob keys eagerly when we do AsyncLocalizer #releaseSlotFor when there is no reference [no one used] on the blobs, and remove the overdue keys in AsyncLocalizer#`topologyBlobs`\r\n2. Guard the AsyncLocalizer#updateBlobs and AsyncLocalizer #releaseSlotFor on the same lock.\r\n3. When container is empty, we do not need to exec AsyncLocalizer #releaseSlotFor[because we have already deleted them].\r\n4. I also add a new RPC api for decide if there exists a remote blob, we can use it to decide it the blob could be removed instead of use getBlobMeta and catch an confusing KeyNotFoundException [both on supervisors and master log for every base blobs].\r\n\r\nThis is the partial of Supervisor log:\r\n\r\n2018-03-31 13:41:17.089 o.a.s.d.s.AdvancedFSOps SLOT_6700 [INFO] Deleting path /Users/danny0405/workspace/storm-2.x-test/supervisor1/apache-storm-2.0.0-SNAPSHOT/storm-local/workers/b50aa089-6584-498e-a5cc-85cba13e4cb0/pids/1115\r\n 2018-03-31 13:41:17.090 o.a.s.d.s.AdvancedFSOps SLOT_6700 [INFO] Deleting path /Users/danny0405/workspace/storm-2.x-test/supervisor1/apache-storm-2.0.0-SNAPSHOT/storm-local/workers/b50aa089-6584-498e-a5cc-85cba13e4cb0/heartbeats\r\n 2018-03-31 13:41:17.102 o.a.s.d.s.AdvancedFSOps SLOT_6700 [INFO] Deleting path /Users/danny0405/workspace/storm-2.x-test/supervisor1/apache-storm-2.0.0-SNAPSHOT/storm-local/workers/b50aa089-6584-498e-a5cc-85cba13e4cb0/pids\r\n 2018-03-31 13:41:17.102 o.a.s.d.s.AdvancedFSOps SLOT_6700 [INFO] Deleting path /Users/danny0405/workspace/storm-2.x-test/supervisor1/apache-storm-2.0.0-SNAPSHOT/storm-local/workers/b50aa089-6584-498e-a5cc-85cba13e4cb0/tmp\r\n 2018-03-31 13:41:17.102 o.a.s.d.s.AdvancedFSOps SLOT_6700 [INFO] Deleting path /Users/danny0405/workspace/storm-2.x-test/supervisor1/apache-storm-2.0.0-SNAPSHOT/storm-local/workers/b50aa089-6584-498e-a5cc-85cba13e4cb0\r\n 2018-03-31 13:41:17.103 o.a.s.d.s.Container SLOT_6700 [INFO] REMOVE worker-user b50aa089-6584-498e-a5cc-85cba13e4cb0\r\n 2018-03-31 13:41:17.103 o.a.s.d.s.AdvancedFSOps SLOT_6700 [INFO] Deleting path /Users/danny0405/workspace/storm-2.x-test/supervisor1/apache-storm-2.0.0-SNAPSHOT/storm-local/workers-users/b50aa089-6584-498e-a5cc-85cba13e4cb0\r\n 2018-03-31 13:41:17.104 o.a.s.d.s.BasicContainer SLOT_6700 [INFO] Removed Worker ID b50aa089-6584-498e-a5cc-85cba13e4cb0\r\n 2018-03-31 13:41:17.105 o.a.s.d.s.Slot SLOT_6700 [INFO] STATE KILL msInState: 25 topo:word_count_fk_11-2-1522472558 worker:null -&gt; EMPTY msInState: 0\r\n 2018-03-31 13:41:17.105 o.a.s.d.s.Slot SLOT_6700 [INFO] SLOT 6700: Changing current assignment from LocalAssignment(topology_id:word_count_fk_11-2-1522472558, executors:[ExecutorInfo(task_start:7, task_end:7), ExecutorInfo(task_start:6, task_end:6), ExecutorInfo(task_start:5, task_end:5), ExecutorInfo(task_start:4, task_end:4), ExecutorInfo(task_start:3, task_end:3), ExecutorInfo(task_start:2, task_end:2), ExecutorInfo(task_start:1, task_end:1)], resources:WorkerResources(mem_on_heap:896.0, mem_off_heap:0.0, cpu:70.0, shared_mem_on_heap:0.0, shared_mem_off_heap:0.0, resources:{offheap.memory.mb=0.0, onheap.memory.mb=896.0, cpu.pcore.percent=70.0}, shared_resources:{}), owner:danny0405) to null\r\n 2018-03-31 13:41:18.001 o.a.s.d.s.t.SupervisorHealthCheck timer [INFO] Running supervisor healthchecks...\r\n 2018-03-31 13:41:18.002 o.a.s.h.HealthChecker timer [INFO] The supervisor healthchecks succeeded.\r\n 2018-03-31 13:41:36.837 o.a.s.l.AsyncLocalizer AsyncLocalizer Executor - 1 [WARN] Failed to download blob LOCAL TOPO BLOB TOPO_JAR word_count_fk_11-2-1522472558 will try again in 100 ms\r\n org.apache.storm.generated.KeyNotFoundException: null\r\n         at org.apache.storm.generated.Nimbus$getBlobMeta_result$getBlobMeta_resultStandardScheme.read(Nimbus.java:25225) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n         at org.apache.storm.generated.Nimbus$getBlobMeta_result$getBlobMeta_resultStandardScheme.read(Nimbus.java:25193) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n         at org.apache.storm.generated.Nimbus$getBlobMeta_result.read(Nimbus.java:25124) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n         at org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:86) ~[libthrift-0.9.3.jar:0.9.3]\r\n         at org.apache.storm.generated.Nimbus$Client.recv_getBlobMeta(Nimbus.java:825) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n         at org.apache.storm.generated.Nimbus$Client.getBlobMeta(Nimbus.java:812) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n         at org.apache.storm.blobstore.NimbusBlobStore.getBlobMeta(NimbusBlobStore.java:318) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n         at org.apache.storm.localizer.LocallyCachedTopologyBlob.getRemoteVersion(LocallyCachedTopologyBlob.java:176) ~[storm-server-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n         at org.apache.storm.localizer.AsyncLocalizer.lambda$downloadOrUpdate$5(AsyncLocalizer.java:249) ~[storm-server-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n         at java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1626) [?:1.8.0_151]\r\n         at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [?:1.8.0_151]\r\n         at java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_151]\r\n         at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [?:1.8.0_151]\r\n         at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [?:1.8.0_151]\r\n         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_151]\r\n         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_151]\r\n         at java.lang.Thread.run(Thread.java:748) [?:1.8.0_151]","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"3h 20m","remainingEstimateSeconds":0,"timeSpentSeconds":12000},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Supervisor still downloads storm blob files when the topology was killed.","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=danny0405","name":"danny0405","key":"danny0405","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuzhao Chen","active":true,"timeZone":"Asia/Harbin"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=danny0405","name":"danny0405","key":"danny0405","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yuzhao Chen","active":true,"timeZone":"Asia/Harbin"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":12000,"total":12000,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":12000,"total":12000,"percent":100},"comment":{"comments":[],"maxResults":0,"total":0,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2905/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":20,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/86267","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user danny0405 opened a pull request:\n\n    https://github.com/apache/storm/pull/2618\n\n    [STORM-2905] Fix KeyNotFoundException when kill a storm and add isRem…\n\n    When we kill a topology, at the moment of topology blob-files be removed, Supervisor executor still request blob-files and get an KeyNotFoundException.\r\n    \r\n    I stepped in and found the reason:\r\n    1. We do not add a guarded lock on `topologyBlobs` of AsyncLocalizer which is singleton to a supervisor node.\r\n    2. And we remove jar/code/conf blob keys in `topologyBlobs` of killed storm only in a timer task: cleanUp() method of AsyncLocalizer, the remove condition is :[no one reference the blobs] AND [ blobs removed by master OR exceeds the max configured size ], the default scheduling interval is 30 seconds.\r\n    3. When we kill a storm on a node[ which means that the slot container are empty], the AsyncLocalizer will do: releaseSlotFor, which only remove reference on the blobs [topologyBlobs keys are still there.]\r\n    4. Then the container is empty, and Slot.java will do: cleanupCurrentContainer, which will invoke AsyncLocalizer #releaseSlotFor to release the slot.\r\n    5. AsyncLocalizer have a timer task: updateBlobs to update base/user blobs every 30 seconds, which based on the AsyncLocalizer#`topologyBlobs`\r\n    6. We know that AsyncLocalizer#`topologyBlobs` overdue keys are only removed by its AsyncLocalizer#cleanUp which is also a timer task.\r\n    7. So when we kill a storm, AsyncLocalizer#updateBlobs will update based on a removed jar/code/conf blob-key and fire a exception, then retried until the configured max times to end.\r\n    \r\n    Here is how i fixed it:\r\n    1. just remove the base blob keys eagerly when we do AsyncLocalizer #releaseSlotFor when there is no reference [no one used] on the blobs, and remove the overdue keys in AsyncLocalizer#`topologyBlobs`\r\n    2. Guard the AsyncLocalizer#updateBlobs and AsyncLocalizer #releaseSlotFor on the same lock.\r\n    3. When container is empty, we do not need to exec AsyncLocalizer #releaseSlotFor[because we have already deleted them].\r\n    4. I also add a new RPC api for decide if there exists a remote blob, we can use it to decide it the blob could be removed instead of use getBlobMeta and catch an confusing KeyNotFoundException [both on supervisors and master log for every base blobs].\r\n    \r\n    This is the JIRA: [STORM-2905](https://issues.apache.org/jira/browse/STORM-2905)\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/danny0405/storm fix-kill\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/2618.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #2618\n    \n----\ncommit 7435dfd3cdb097097b69a96f3007a2c3a106fab4\nAuthor: chenyuzhao <chenyuzhao@...>\nDate:   2018-03-31T07:15:28Z\n\n    [STORM-2905] Fix KeyNotFoundException when kill a storm and add isRemoteBlobExists decide for blobs\n\n----\n","created":"2018-03-31T07:18:13.692+0000","updated":"2018-03-31T07:18:13.692+0000","started":"2018-03-31T07:18:13.692+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"86267","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/86600","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2618#discussion_r178567096\n  \n    --- Diff: storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java ---\n    @@ -497,7 +497,6 @@ static DynamicState cleanupCurrentContainer(DynamicState dynamicState, StaticSta\n             assert(dynamicState.container.areAllProcessesDead());\n             \n             dynamicState.container.cleanUp();\n    -        staticState.localizer.releaseSlotFor(dynamicState.currentAssignment, staticState.port);\n    --- End diff --\n    \n    cleanupCurrentConatiner gets used in many different locations, not just during the blob update.  We need to release the slot when the container is killed or reference counting will be off.\n","created":"2018-04-02T15:22:56.961+0000","updated":"2018-04-02T15:22:56.961+0000","started":"2018-04-02T15:22:56.961+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"86600","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/86603","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2618#discussion_r178568732\n  \n    --- Diff: storm-server/src/main/java/org/apache/storm/localizer/LocalizedResourceRetentionSet.java ---\n    @@ -94,17 +93,17 @@ public void cleanup(ClientBlobStore store) {\n                 Map.Entry<LocallyCachedBlob, Map<String, ? extends LocallyCachedBlob>> rsrc = i.next();\n                 LocallyCachedBlob resource = rsrc.getKey();\n                 try {\n    -                resource.getRemoteVersion(store);\n    +                if (!store.isRemoteBlobExists(resource.getKey())) {\n    --- End diff --\n    \n    Admittedly the code is cleaner with this, but the change is totally unneeded.  It behaves exactly the same as it did before.  I think this is a good change, it would just be nice to have it be a separate pull request and a separate JIRA as it is not really a part of the needed fix.\n","created":"2018-04-02T15:30:01.632+0000","updated":"2018-04-02T15:30:01.632+0000","started":"2018-04-02T15:30:01.632+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"86603","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/86612","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    I am trying to understand the reasons behind this change.  Is this jira just to remove an exception that shows up in the logs?  Or is that exception actually causing a problem?\r\n    \r\n    The reason I ask is a risk vs reward situation.  The code in AsyncLocalizer is really very complicated and because it is asynchronous there are lots of races and corner cases.  This makes me a bit nervous to start changing fundamental things just because of some extra logs.  Additionally this is a distributed system and this particular race is inherent in the system.  It is possible for someone to delete a blob at any point in time and the code in the supervisor needs to handle it.\n","created":"2018-04-02T15:45:21.824+0000","updated":"2018-04-02T15:45:21.824+0000","started":"2018-04-02T15:45:21.823+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"86612","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/86889","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2618#discussion_r178692521\n  \n    --- Diff: storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java ---\n    @@ -497,7 +497,6 @@ static DynamicState cleanupCurrentContainer(DynamicState dynamicState, StaticSta\n             assert(dynamicState.container.areAllProcessesDead());\n             \n             dynamicState.container.cleanUp();\n    -        staticState.localizer.releaseSlotFor(dynamicState.currentAssignment, staticState.port);\n    --- End diff --\n    \n    yeah, but `staticState.localizer.releaseSlotFor` only remove topology base blobs[jar/code/conf] which are already taken care of by releaseSlotFor itself.\n","created":"2018-04-03T01:28:22.025+0000","updated":"2018-04-03T01:28:22.025+0000","started":"2018-04-03T01:28:22.024+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"86889","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/86890","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    @revans2 \r\n    I did this path for the concurrent race condition on `AsyncLocalize#topologyBlobs` of func: `updateBlobs` and `releaseSlotFor`, `AsyncLocalize#topologyBlobs` overdue keys will be only cleaned by `AsyncLocalize#clean()` timer task, `updateBlobs` is also a timer task but not guarded by lock.\r\n    \r\n    I add a RPC api `isRemoteBlobExist` only to let the log not confusing, which is unrelated to this patch.\n","created":"2018-04-03T01:33:16.575+0000","updated":"2018-04-03T01:33:16.575+0000","started":"2018-04-03T01:33:16.575+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"86890","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/86892","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2618#discussion_r178693115\n  \n    --- Diff: storm-server/src/main/java/org/apache/storm/localizer/LocalizedResourceRetentionSet.java ---\n    @@ -94,17 +93,17 @@ public void cleanup(ClientBlobStore store) {\n                 Map.Entry<LocallyCachedBlob, Map<String, ? extends LocallyCachedBlob>> rsrc = i.next();\n                 LocallyCachedBlob resource = rsrc.getKey();\n                 try {\n    -                resource.getRemoteVersion(store);\n    +                if (!store.isRemoteBlobExists(resource.getKey())) {\n    --- End diff --\n    \n    Ok, i will separate it apart with another JIRA.\n","created":"2018-04-03T01:34:23.778+0000","updated":"2018-04-03T01:34:23.778+0000","started":"2018-04-03T01:34:23.778+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"86892","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/87112","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2618#discussion_r178852812\n  \n    --- Diff: storm-server/src/main/java/org/apache/storm/daemon/supervisor/Slot.java ---\n    @@ -497,7 +497,6 @@ static DynamicState cleanupCurrentContainer(DynamicState dynamicState, StaticSta\n             assert(dynamicState.container.areAllProcessesDead());\n             \n             dynamicState.container.cleanUp();\n    -        staticState.localizer.releaseSlotFor(dynamicState.currentAssignment, staticState.port);\n    --- End diff --\n    \n    That is not true.\r\n    \r\n    https://github.com/danny0405/storm/blob/a4e659b5073794396ea23e3dd7b79c00536fc3fe/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java#L505-L511\r\n    \r\n    The code first removes the base blobs reference counts, but then it decrements a reference count for other blobs too.\n","created":"2018-04-03T14:53:59.978+0000","updated":"2018-04-03T14:53:59.978+0000","started":"2018-04-03T14:53:59.978+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"87112","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/87122","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    @danny0405 \r\n    \r\n    {{updateBlobs}} does not need to be guarded by a lock.  This is what I was talking about with the code being complex.\r\n    \r\n    {{requestDownloadBaseTopologyBlobs}} is protected by a lock simply because of this non-thread safe code.\r\n    \r\n    https://github.com/apache/storm/blob/402a371ccdb39ccd7146fe9743e91ca36fee6d15/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java#L222-L226\r\n    \r\n    Part of this were written prior to the more to java8 so {{computeIfAbsent}} was not available.  Now that it is we could replace it and I believe remove the lock, but I would want to spend some time to be sure it was not accidentally protecting something else in there too.\r\n    \r\n    {{requestDownloadTopologyBlobs}} looks like it does not need to be synchronized at all.  It must have been a mistake on my part, but it does look like it might be providing some protection to a bug in\r\n    \r\n    https://github.com/apache/storm/blob/402a371ccdb39ccd7146fe9743e91ca36fee6d15/storm-server/src/main/java/org/apache/storm/localizer/AsyncLocalizer.java#L191-L195\r\n    \r\n    Which is executing outside of a lock, but looks to not be thread safe.\r\n    \r\n    Declaring {{updateBlobs}} as synchronized does absolutely noting except make it have conflicts with {{requestDownloadTopologyBlobs}} and {{requestDownloadBaseTopologyBlobs}}.  And if we are able to remove the locks there, then it will not be an issue at all.  {{updateBlobs}} is scheduled using {{scheduleWithFixedDelay}}\r\n    \r\n    https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ScheduledExecutorService.html#scheduleWithFixedDelay(java.lang.Runnable,%20long,%20long,%20java.util.concurrent.TimeUnit)\r\n    \r\n    The javadocs clearly states that the next execution only starts a fixed delay after the previous one finished.  There will only ever be one copy it running at a time.  Additionally everything it does is already asynchronous so would be happening on a separate thread. Making it synchronized would just slow things down.  \r\n    \r\n    The having a blob disappear at the wrong time is a race that will always be in the system and we cannot fix it with synchronization because it is happening on separate servers.  The only thing we can do is to deal with it when it happens.  The way the current code deals with it is to try again later.  This means that a worker that is trying to come up for the first time will not come up until the blob is fully downloaded, but if we are trying to update the blob and it has disappeared we will simply keep the older version around until we don't need it any more.  Yes we may log some exceptions while we do it, but that is the worst thing that will happen.\n","created":"2018-04-03T15:34:46.540+0000","updated":"2018-04-03T15:34:46.540+0000","started":"2018-04-03T15:34:46.540+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"87122","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/87125","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    Just FYI I files STORM-3020 to address the race that I just found.\n","created":"2018-04-03T15:43:18.607+0000","updated":"2018-04-03T15:43:18.607+0000","started":"2018-04-03T15:43:18.606+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"87125","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/87520","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    @revans2\r\n    \r\n    To me the race condition has none of the business of AsyncLocalize# `requestDownloadBaseTopologyBlobs `, it's the race condition on AsyncLocalize#`topologyBlobs` of timer task AsyncLocalize#`cleanup` and AsyncLocalize#`updateBlobs`.\r\n    \r\n    From my cases the exception is throw from this code segment:\r\n    ```java\r\n    private CompletableFuture<Void> downloadOrUpdate(Collection<? extends LocallyCachedBlob> blobs) {\r\n            CompletableFuture<Void> [] all = new CompletableFuture[blobs.size()];\r\n            int i = 0;\r\n            for (final LocallyCachedBlob blob: blobs) {\r\n                all[i] = CompletableFuture.runAsync(() -> {\r\n                    LOG.debug(\"STARTING download of {}\", blob);\r\n                    try (ClientBlobStore blobStore = getClientBlobStore()) {\r\n                        boolean done = false;\r\n                        long failures = 0;\r\n                        while (!done) {\r\n                            try {\r\n                                synchronized (blob) {\r\n                                    long localVersion = blob.getLocalVersion();\r\n                                    // KeyNotFoundException is thrown here first, then it will goes to \r\n                                    long remoteVersion = blob.getRemoteVersion(blobStore);\r\n                                    if (localVersion != remoteVersion || !blob.isFullyDownloaded()) {\r\n                                        try {\r\n                                            long newVersion = blob.downloadToTempLocation(blobStore);\r\n                                            blob.informAllOfChangeAndWaitForConsensus();\r\n                                            blob.commitNewVersion(newVersion);\r\n                                            blob.informAllChangeComplete();\r\n                                        } finally {\r\n                                            blob.cleanupOrphanedData();\r\n                                        }\r\n                                    }\r\n                                }\r\n                                done = true;\r\n                            } catch (KeyNotFoundException kne) {\r\n                              //no blob exist on the cluster, cancel downloading.\r\n                                done = true;\r\n                            } catch (Exception e) {\r\n                                failures++;\r\n                                if (failures > blobDownloadRetries) {\r\n                                    throw new RuntimeException(\"Could not download...\", e);\r\n                                }\r\n                                LOG.warn(\"Failed to download blob {} will try again in {} ms\", blob, ATTEMPTS_INTERVAL_TIME, e);\r\n                                Utils.sleep(ATTEMPTS_INTERVAL_TIME);\r\n                            }\r\n                        }\r\n                    }\r\n                    LOG.debug(\"FINISHED download of {}\", blob);\r\n                }, execService);\r\n                i++;\r\n            }\r\n            return CompletableFuture.allOf(all);\r\n        }\r\n    ```\r\n    \r\n    When AsyncLocalizer start, it will start the two timer task:\r\n    ```java\r\n    execService.scheduleWithFixedDelay(this::updateBlobs, 30, 30, TimeUnit.SECONDS);\r\n            LOG.debug(\"Scheduling cleanup every {} millis\", cacheCleanupPeriod);\r\n            execService.scheduleAtFixedRate(this::cleanup, cacheCleanupPeriod, cacheCleanupPeriod, TimeUnit.MILLISECONDS);\r\n    ```\r\n    This bug happens because cleanup did after updateBlobs for killed storms overdue keys, so updateBlobs will still get a KeyNotFoundException.\r\n    \r\n    Although scheduleAtFixedDelay is event trig model and only one task will exec at a time, we still can not make sure which can exec first for this two timer task because the time cost of these two tasks are different.\n","created":"2018-04-04T12:35:00.290+0000","updated":"2018-04-04T12:35:00.290+0000","started":"2018-04-04T12:35:00.279+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"87520","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/87768","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    @danny0405 \r\n    \r\n    I just created #2622 to fix the race condition in AsyncLocalizer.  It does conflict a lot with this patch, so I wanted to make sure you saw it and had a chance to give feedback on it.\r\n    \r\n    I understand where the exception is coming from, but what I am saying is that putting a synchronize on both cleanup and updateBlobs does not fix the issue.  Adding in the synchronize only serves to slow down other parts of the processing.  Even controlling the order in which they execute is not enough, because cleanup will only happen after the scheduling change has been fully processed.\r\n    \r\n    Perhaps some kind of a message sequence chart would better explain the race here.\r\n    \r\n    ![worker being killed](https://user-images.githubusercontent.com/3441321/38334965-7a34ec3e-3822-11e8-88a4-fe1760c0f691.png)\r\n    \r\n    The issue is not in the order of cleanup and checking for updates.  The race is between nimbus deleting the blobs and the supervisor fully processing the topology being killed.\r\n    \r\n    Any time after nimbus deletes the blobs in the blob store until the supervisor has killed the workers and released all references to those blobs we can still get this issue.\r\n    \r\n    ![worker being killed bad](https://user-images.githubusercontent.com/3441321/38335209-31d7ea76-3823-11e8-968e-7e5a081f8f73.png)\r\n    \r\n    The above sequence is an example of this happening even if we got the ordering right.\r\n    \r\n    The only way to \"fix\" the race is to make it safe to lose the race.  The current code will output an exception stack trace when it loses the race.  This is not ideal, but it is safe at least as far as I am able to determine.\r\n    \r\n    That is why I was asking if the issue is just that we are outputting the stack trace or if there is something else that is happening that is worse than having all of the stack traces?  If it is just the stack traces there are things we can do to address them.  If it goes beyond that then I still don't understand the issue yet.\n","created":"2018-04-04T21:23:27.718+0000","updated":"2018-04-04T21:23:27.718+0000","started":"2018-04-04T21:23:27.718+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"87768","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/87929","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    @danny0405\r\n    I agree with you that the race condition is between nimbus deleting the blobs and the supervisor fully processing the topology being killed.\r\n    \r\n    But i still think we should handle this race condition reasonably as a normal and expectant case. It's  a distribution system, so can the AsyncLocalizer decide based on master blob keys' existence when update local resources? A thrown stack trace it really confusing and non-necessary, especially when the blob-client try as configured max times to fetch a blob already removed from cluster.\r\n    \r\n    At lease we should not make a downloading request when we have removed the blobs, and should not decide the blob's existence based on a thrown KeyNotFoundException[ confusing too, because user have already killed/removed them on their own initiative ].\n","created":"2018-04-05T07:45:25.184+0000","updated":"2018-04-05T07:45:25.184+0000","started":"2018-04-05T07:45:25.169+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"87929","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/88050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    OK good I do understand the problem.\r\n    \r\n    There really are a few ways that I see we can make the stack trace much less likely to come out in the common case.  The following are in my preferred order, but I am open to other ideas.\r\n    \r\n    1)  We don't delete the blobs on the nimbus side for a while after we kill the topology.\r\n    Currently we delete the blobs on a timer that runs every 10 seconds by default, and I would have to trace through things, but I think we may do some other deletions before that happens.  If instead we kept a separate map (TOPO_X can be cleaned up after Y) then when cleanup runs it can check that map and if it does not find the topo it wants to clean up, or if it finds it and the time has passed, then it cleans it up.\r\n    \r\n    2) We don't output the stack trace until it has failed some number of times in a row.  This would mean that we would still output the error if the blob was deleted when it should not have been, but would not look like an error until it had been gone for 1 or 2 seconds.  Hopefully long enough to actually have killed the workers.\r\n    \r\n    3) We have the supervisor inform the AsyncLocalizer about topologies that are in the process of being killed.\r\n    Right now part of the issue with the race is that killing a worker can take a non-trivial amount of time.  This makes the window that the race can happen in much larger.  If as soon as the supervisors know that a topology is being killed they tell the AsyncLocalizer it could then not output errors for any topology in the process of being killed.  The issue here is that informing the supervisors happens in a background thread and is not guaranteed to happen, so it might not work as frequently as we would like.\n","created":"2018-04-05T14:07:18.603+0000","updated":"2018-04-05T14:07:18.603+0000","started":"2018-04-05T14:07:18.602+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"88050","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/88297","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    I am inclined to choose option 3 because:\r\n    1. We now have already made an RPC request for killing/starting-worker from master to supervisors as soon as we the event happens on master. So the supervisor can inform the AsyncLocalizer [or AsyncLocalizer fetch it locally] which topology/blobs have already been removed.\r\n    \r\n    2. We can request local supervisor every time before update blobs for the little probability that AsyncLocalizer still get overdue keys.\r\n    \r\n    But another situation is for the user archives and normal blob files, the model is: master make a event and AsyncLocalizer sync it at fixed interval, this model is too simple to handle this. I think there should be sync inform of PRC about add/remove events between blob-server/blob-client. Just make AsyncLocalizer sync it at fixed interval is ok, but we should not decide if blobs are remove based on KeyNotFoundException.\n","created":"2018-04-06T01:41:29.649+0000","updated":"2018-04-06T01:41:29.649+0000","started":"2018-04-06T01:41:29.648+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"88297","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/93210","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    @revans2 \r\n    Sorry to leave for a long time cause i'm on a  training course. Do you have any good idea how can we fix or promote this?\n","created":"2018-04-20T13:51:38.642+0000","updated":"2018-04-20T13:51:38.642+0000","started":"2018-04-20T13:51:38.641+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"93210","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/101838","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    @danny0405 Sorry about the long delay.  I also got rather busy with other things.\r\n    \r\n    My personal choice would be a combination of 1 and 2.  We have run into an issue internally where very rarely where a blob may be uploaded to nimbus as part of submitting a topology and then the blob is deleted before the topology itself can be submitted.\r\n    \r\n    We are likely to fix this by using a variant of 1, something where we give ourselves a few mins after we see a blob with no corresponding topology before we decide it is fine to delete it.  That should fix the issue in 99% of the cases, and also fix the upload issue.\n","created":"2018-05-14T18:55:30.596+0000","updated":"2018-05-14T18:55:30.596+0000","started":"2018-05-14T18:55:30.596+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"101838","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/124569","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user agresch commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    Just curious what the plan is fo this PR? \n","created":"2018-07-18T19:42:58.523+0000","updated":"2018-07-18T19:42:58.523+0000","started":"2018-07-18T19:42:58.523+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"124569","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/124586","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user agresch commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    Couple of comments back to @revans2 from Apr5.....\r\n    \r\n    1) We don't delete the blobs on the nimbus side for a while after we kill the topology.     - Would we also prevent the user from doing so in this case?\r\n    \r\n    2) We don't output the stack trace until it has failed some number of times in a row.   - This may be fine for the supervisor, but I see this exception trace polluting the nimbus log non-stop.  Would you prevent this as well?\r\n    \r\n    2018-06-25 21:49:03.928 o.a.s.d.n.Nimbus pool-37-thread-483 [WARN] get blob meta exception.\r\n    org.apache.storm.utils.WrappedKeyNotFoundException: run-1-1529962766-stormjar.jar\r\n            at org.apache.storm.blobstore.LocalFsBlobStore.getStoredBlobMeta(LocalFsBlobStore.java:256) ~[storm-server-2.0.0.y.jar:2.0.0.y]\r\n            at org.apache.storm.blobstore.LocalFsBlobStore.getBlobMeta(LocalFsBlobStore.java:286) ~[storm-server-2.0.0.y.jar:2.0.0.y]\r\n            at org.apache.storm.daemon.nimbus.Nimbus.getBlobMeta(Nimbus.java:3498) [storm-server-2.0.0.y.jar:2.0.0.y]\r\n            at org.apache.storm.generated.Nimbus$Processor$getBlobMeta.getResult(Nimbus.java:4014) [storm-client-2.0.0.y.jar:2.0.0.y]\r\n            at org.apache.storm.generated.Nimbus$Processor$getBlobMeta.getResult(Nimbus.java:3993) [storm-client-2.0.0.y.jar:2.0.0.y]\r\n            at org.apache.storm.thrift.ProcessFunction.process(ProcessFunction.java:38) [shaded-deps-2.0.0.y.jar:2.0.0.y]\r\n            at org.apache.storm.thrift.TBaseProcessor.process(TBaseProcessor.java:39) [shaded-deps-2.0.0.y.jar:2.0.0.y]\r\n            at org.apache.storm.security.auth.sasl.SaslTransportPlugin$TUGIWrapProcessor.process(SaslTransportPlugin.java:147) [storm-client-2.0.0.y.jar:2.0.0.y]\r\n            at org.apache.storm.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:291) [shaded-deps-2.0.0.y.jar:2.0.0.y]\r\n            at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_131]\r\n            at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_131]\r\n            at java.lang.Thread.run(Thread.java:748) [?:1.8.0_131]\r\n\n","created":"2018-07-18T20:17:10.186+0000","updated":"2018-07-18T20:17:10.186+0000","started":"2018-07-18T20:17:10.185+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"124586","issueId":"13132630"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13132630/worklog/124858","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on the issue:\n\n    https://github.com/apache/storm/pull/2618\n  \n    @agresch\r\n    Yeah , the problem still exists but i have no time to fix it now, i will try to take it.\n","created":"2018-07-19T08:32:58.277+0000","updated":"2018-07-19T08:32:58.277+0000","started":"2018-07-19T08:32:58.276+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"124858","issueId":"13132630"}]},"customfield_12311820":"0|i3p6cv:"}}