{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13139676","self":"https://issues.apache.org/jira/rest/api/2/issue/13139676","key":"STORM-2965","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":14400,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false}],"aggregatetimespent":14400,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Feb 26 02:39:13 UTC 2018","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_23740_*|*_3_*:*_1_*:*_475509766_*|*_5_*:*_1_*:*_0","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2018-02-26T02:39:13.109+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2965/watchers","watchCount":1,"isWatching":false},"created":"2018-02-20T14:33:39.643+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["pull-request-available"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":"STORM-2714","customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false}],"customfield_12312339":null,"issuelinks":[],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-02-26T02:39:13.141+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12332475","id":"12332475","name":"storm-client"}],"timeoriginalestimate":null,"description":"While reading configuration file from classpath at Utils.getConfigFromClasspath(), it doesn't interpret wildcard (\\*) as Java classpath does. It should behave same as Java.","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"4h","remainingEstimateSeconds":0,"timeSpentSeconds":14400},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Interpret wildcard in classpath correctly when reading config from classpath","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":14400,"total":14400,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":14400,"total":14400,"percent":100},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/comment/16376342","id":"16376342","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Merged into master.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2018-02-26T02:39:13.135+0000","updated":"2018-02-26T02:39:13.135+0000"}],"maxResults":1,"total":1,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2965/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":25,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/74441","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user HeartSaVioR opened a pull request:\n\n    https://github.com/apache/storm/pull/2566\n\n    STORM-2965 Interpret wildcard in classpath correctly when reading con…\n\n    …fig from classpath\r\n    \r\n    * also fix version pattern in SimpleVersion which parses version like 0.10.3 correctly\r\n    \r\n    Manually tested with running Storm 1.2.1-rc1 topology.\r\n    \r\n    @revans2 Please take a look. Thanks in advance.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/HeartSaVioR/storm STORM-2965\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/2566.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #2566\n    \n----\ncommit 2ea751da4c25024ef874228c82cb0ad747fa0285\nAuthor: Jungtaek Lim <kabhwan@...>\nDate:   2018-02-20T13:07:08Z\n\n    STORM-2965 Interpret wildcard in classpath correctly when reading config from classpath\n    \n    * also fix version pattern in SimpleVersion which parses version like 0.10.3 correctly\n\n----\n","created":"2018-02-20T14:44:49.344+0000","updated":"2018-02-20T14:44:49.344+0000","started":"2018-02-20T14:44:49.344+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"74441","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75495","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170298520\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1505,35 +1508,36 @@ public static StormTopology addVersions(StormTopology topology) {\n             Map<String, Object> defaultsConf = null;\n             Map<String, Object> stormConf = null;\n             for (String part: cp) {\n    -            File f = new File(part);\n    -            if (f.isDirectory()) {\n    -                if (defaultsConf == null) {\n    -                    defaultsConf = readConfIgnoreNotFound(yaml, new File(f, \"defaults.yaml\"));\n    -                }\n    -                \n    -                if (stormConf == null) {\n    -                    stormConf = readConfIgnoreNotFound(yaml, new File(f, \"storm.yaml\"));\n    +            String wildcardSuffix = File.separator + \"*\";\n    --- End diff --\n    \n    Wouldn't it also work to just check if the part ends with \"*\"? \n","created":"2018-02-23T16:43:04.965+0000","updated":"2018-02-23T16:43:04.965+0000","started":"2018-02-23T16:43:04.964+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75495","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75496","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170299702\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1505,35 +1508,36 @@ public static StormTopology addVersions(StormTopology topology) {\n             Map<String, Object> defaultsConf = null;\n             Map<String, Object> stormConf = null;\n             for (String part: cp) {\n    -            File f = new File(part);\n    -            if (f.isDirectory()) {\n    -                if (defaultsConf == null) {\n    -                    defaultsConf = readConfIgnoreNotFound(yaml, new File(f, \"defaults.yaml\"));\n    -                }\n    -                \n    -                if (stormConf == null) {\n    -                    stormConf = readConfIgnoreNotFound(yaml, new File(f, \"storm.yaml\"));\n    +            String wildcardSuffix = File.separator + \"*\";\n    +            if (part.endsWith(wildcardSuffix)) {\n    +                // wildcard is given\n    +                // in java classpath, '*' is translated to '*.jar'\n    +                File dir = new File(part.substring(0, part.length() - wildcardSuffix.length()));\n    --- End diff --\n    \n    Could we use Path for creating paths instead of manipulating strings? (asking because it's nice if the code is obviously portable)\n","created":"2018-02-23T16:43:04.966+0000","updated":"2018-02-23T16:43:04.966+0000","started":"2018-02-23T16:43:04.966+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75496","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75497","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170301223\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1570,4 +1574,49 @@ public static boolean isLocalhostAddress(String address) {\n             }\n             return result;\n         }\n    +\n    +    private static class JarConfigReader {\n    +        private Yaml yaml;\n    +        private Map<String, Object> defaultsConf;\n    +        private Map<String, Object> stormConf;\n    +        private File f;\n    +\n    +        public JarConfigReader(Yaml yaml, Map<String, Object> defaultsConf, Map<String, Object> stormConf, File f) {\n    +            this.yaml = yaml;\n    +            this.defaultsConf = defaultsConf;\n    +            this.stormConf = stormConf;\n    +            this.f = f;\n    +        }\n    +\n    +        public Map<String, Object> getDefaultsConf() {\n    +            return defaultsConf;\n    +        }\n    +\n    +        public Map<String, Object> getStormConf() {\n    +            return stormConf;\n    +        }\n    +\n    +        public JarConfigReader invoke() throws IOException {\n    --- End diff --\n    \n    Nit: This method seems to be part of initializing this class. Consider making it private and calling it from the constructor.\n","created":"2018-02-23T16:43:05.185+0000","updated":"2018-02-23T16:43:05.185+0000","started":"2018-02-23T16:43:05.184+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75497","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75498","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170300322\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1505,35 +1508,36 @@ public static StormTopology addVersions(StormTopology topology) {\n             Map<String, Object> defaultsConf = null;\n             Map<String, Object> stormConf = null;\n             for (String part: cp) {\n    -            File f = new File(part);\n    -            if (f.isDirectory()) {\n    -                if (defaultsConf == null) {\n    -                    defaultsConf = readConfIgnoreNotFound(yaml, new File(f, \"defaults.yaml\"));\n    -                }\n    -                \n    -                if (stormConf == null) {\n    -                    stormConf = readConfIgnoreNotFound(yaml, new File(f, \"storm.yaml\"));\n    +            String wildcardSuffix = File.separator + \"*\";\n    +            if (part.endsWith(wildcardSuffix)) {\n    +                // wildcard is given\n    +                // in java classpath, '*' is translated to '*.jar'\n    +                File dir = new File(part.substring(0, part.length() - wildcardSuffix.length()));\n    +                File[] jarFiles = dir.listFiles((dir1, name) -> name.endsWith(\".jar\"));\n    +\n    +                if (jarFiles != null) {\n    --- End diff --\n    \n    Nit: Isn't there something really weird going on if this is null? The javadoc only mentions that this can be null if there's an IO error or the dir isn't a directory.\n","created":"2018-02-23T16:43:05.280+0000","updated":"2018-02-23T16:43:05.280+0000","started":"2018-02-23T16:43:05.280+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75498","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75499","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170301964\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1570,4 +1574,49 @@ public static boolean isLocalhostAddress(String address) {\n             }\n             return result;\n         }\n    +\n    +    private static class JarConfigReader {\n    +        private Yaml yaml;\n    +        private Map<String, Object> defaultsConf;\n    +        private Map<String, Object> stormConf;\n    +        private File f;\n    +\n    +        public JarConfigReader(Yaml yaml, Map<String, Object> defaultsConf, Map<String, Object> stormConf, File f) {\n    +            this.yaml = yaml;\n    +            this.defaultsConf = defaultsConf;\n    +            this.stormConf = stormConf;\n    +            this.f = f;\n    +        }\n    +\n    +        public Map<String, Object> getDefaultsConf() {\n    +            return defaultsConf;\n    +        }\n    +\n    +        public Map<String, Object> getStormConf() {\n    +            return stormConf;\n    +        }\n    +\n    +        public JarConfigReader invoke() throws IOException {\n    +            try (JarFile jarFile = new JarFile(f)) {\n    +                Enumeration<JarEntry> jarEnums = jarFile.entries();\n    +                while (jarEnums.hasMoreElements()) {\n    +                    JarEntry entry = jarEnums.nextElement();\n    +                    if (!entry.isDirectory()) {\n    +                        if (defaultsConf == null && entry.getName().equals(\"defaults.yaml\")) {\n    +                            try (InputStream in = jarFile.getInputStream(entry)) {\n    +                                defaultsConf = (Map<String, Object>) yaml.load(new InputStreamReader(in));\n    +                            }\n    +                        }\n    +\n    +                        if (stormConf == null && entry.getName().equals(\"storm.yaml\")) {\n    +                            try (InputStream in = jarFile.getInputStream(entry)) {\n    +                                stormConf = (Map<String, Object>) yaml.load(new InputStreamReader(in));\n    --- End diff --\n    \n    Nit: Consider moving the InputStreamReader into the try-with-resources, so it also gets closed.\n","created":"2018-02-23T16:43:05.993+0000","updated":"2018-02-23T16:43:05.993+0000","started":"2018-02-23T16:43:05.993+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75499","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75565","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170357327\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1505,35 +1508,36 @@ public static StormTopology addVersions(StormTopology topology) {\n             Map<String, Object> defaultsConf = null;\n             Map<String, Object> stormConf = null;\n             for (String part: cp) {\n    -            File f = new File(part);\n    -            if (f.isDirectory()) {\n    -                if (defaultsConf == null) {\n    -                    defaultsConf = readConfIgnoreNotFound(yaml, new File(f, \"defaults.yaml\"));\n    -                }\n    -                \n    -                if (stormConf == null) {\n    -                    stormConf = readConfIgnoreNotFound(yaml, new File(f, \"storm.yaml\"));\n    +            String wildcardSuffix = File.separator + \"*\";\n    --- End diff --\n    \n    According to my understanding of Oracle Java classpath doc, it should only expand when file name is '*' rather than like 'abc*'. If 'abc*' is given in file name, it should not expand to abcde.jar or so.\r\n    \r\n    https://docs.oracle.com/javase/8/docs/technotes/tools/unix/classpath.html\n","created":"2018-02-23T20:18:16.498+0000","updated":"2018-02-23T20:18:16.498+0000","started":"2018-02-23T20:18:16.498+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75565","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75566","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170357618\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1505,35 +1508,36 @@ public static StormTopology addVersions(StormTopology topology) {\n             Map<String, Object> defaultsConf = null;\n             Map<String, Object> stormConf = null;\n             for (String part: cp) {\n    -            File f = new File(part);\n    -            if (f.isDirectory()) {\n    -                if (defaultsConf == null) {\n    -                    defaultsConf = readConfIgnoreNotFound(yaml, new File(f, \"defaults.yaml\"));\n    -                }\n    -                \n    -                if (stormConf == null) {\n    -                    stormConf = readConfIgnoreNotFound(yaml, new File(f, \"storm.yaml\"));\n    +            String wildcardSuffix = File.separator + \"*\";\n    +            if (part.endsWith(wildcardSuffix)) {\n    +                // wildcard is given\n    +                // in java classpath, '*' is translated to '*.jar'\n    +                File dir = new File(part.substring(0, part.length() - wildcardSuffix.length()));\n    --- End diff --\n    \n    I just get rid of manipulating string via File's method. Please take a look at new commit.\n","created":"2018-02-23T20:19:36.387+0000","updated":"2018-02-23T20:19:36.387+0000","started":"2018-02-23T20:19:36.387+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75566","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75567","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170358164\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1505,35 +1508,36 @@ public static StormTopology addVersions(StormTopology topology) {\n             Map<String, Object> defaultsConf = null;\n             Map<String, Object> stormConf = null;\n             for (String part: cp) {\n    -            File f = new File(part);\n    -            if (f.isDirectory()) {\n    -                if (defaultsConf == null) {\n    -                    defaultsConf = readConfIgnoreNotFound(yaml, new File(f, \"defaults.yaml\"));\n    -                }\n    -                \n    -                if (stormConf == null) {\n    -                    stormConf = readConfIgnoreNotFound(yaml, new File(f, \"storm.yaml\"));\n    +            String wildcardSuffix = File.separator + \"*\";\n    +            if (part.endsWith(wildcardSuffix)) {\n    +                // wildcard is given\n    +                // in java classpath, '*' is translated to '*.jar'\n    +                File dir = new File(part.substring(0, part.length() - wildcardSuffix.length()));\n    +                File[] jarFiles = dir.listFiles((dir1, name) -> name.endsWith(\".jar\"));\n    +\n    +                if (jarFiles != null) {\n    --- End diff --\n    \n    Hmm... yes. Are we better to throw some exception when `dir.listFiles()` returns null? Or do we just ignore weird case and get rid of null check?\n","created":"2018-02-23T20:22:09.039+0000","updated":"2018-02-23T20:22:09.039+0000","started":"2018-02-23T20:22:09.038+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75567","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75568","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170358225\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1570,4 +1574,49 @@ public static boolean isLocalhostAddress(String address) {\n             }\n             return result;\n         }\n    +\n    +    private static class JarConfigReader {\n    +        private Yaml yaml;\n    +        private Map<String, Object> defaultsConf;\n    +        private Map<String, Object> stormConf;\n    +        private File f;\n    +\n    +        public JarConfigReader(Yaml yaml, Map<String, Object> defaultsConf, Map<String, Object> stormConf, File f) {\n    +            this.yaml = yaml;\n    +            this.defaultsConf = defaultsConf;\n    +            this.stormConf = stormConf;\n    +            this.f = f;\n    +        }\n    +\n    +        public Map<String, Object> getDefaultsConf() {\n    +            return defaultsConf;\n    +        }\n    +\n    +        public Map<String, Object> getStormConf() {\n    +            return stormConf;\n    +        }\n    +\n    +        public JarConfigReader invoke() throws IOException {\n    +            try (JarFile jarFile = new JarFile(f)) {\n    +                Enumeration<JarEntry> jarEnums = jarFile.entries();\n    +                while (jarEnums.hasMoreElements()) {\n    +                    JarEntry entry = jarEnums.nextElement();\n    +                    if (!entry.isDirectory()) {\n    +                        if (defaultsConf == null && entry.getName().equals(\"defaults.yaml\")) {\n    +                            try (InputStream in = jarFile.getInputStream(entry)) {\n    +                                defaultsConf = (Map<String, Object>) yaml.load(new InputStreamReader(in));\n    +                            }\n    +                        }\n    +\n    +                        if (stormConf == null && entry.getName().equals(\"storm.yaml\")) {\n    +                            try (InputStream in = jarFile.getInputStream(entry)) {\n    +                                stormConf = (Map<String, Object>) yaml.load(new InputStreamReader(in));\n    --- End diff --\n    \n    Addressed.\n","created":"2018-02-23T20:22:22.391+0000","updated":"2018-02-23T20:22:22.391+0000","started":"2018-02-23T20:22:22.391+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75568","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75569","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170358961\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1570,4 +1574,49 @@ public static boolean isLocalhostAddress(String address) {\n             }\n             return result;\n         }\n    +\n    +    private static class JarConfigReader {\n    +        private Yaml yaml;\n    +        private Map<String, Object> defaultsConf;\n    +        private Map<String, Object> stormConf;\n    +        private File f;\n    +\n    +        public JarConfigReader(Yaml yaml, Map<String, Object> defaultsConf, Map<String, Object> stormConf, File f) {\n    +            this.yaml = yaml;\n    +            this.defaultsConf = defaultsConf;\n    +            this.stormConf = stormConf;\n    +            this.f = f;\n    +        }\n    +\n    +        public Map<String, Object> getDefaultsConf() {\n    +            return defaultsConf;\n    +        }\n    +\n    +        public Map<String, Object> getStormConf() {\n    +            return stormConf;\n    +        }\n    +\n    +        public JarConfigReader invoke() throws IOException {\n    --- End diff --\n    \n    The class is made from IntelliJ's extract feature. We are now calling readZip/readJar separately so hopefully that is OK to keep it public and be called from outside.\n","created":"2018-02-23T20:25:38.541+0000","updated":"2018-02-23T20:25:38.541+0000","started":"2018-02-23T20:25:38.541+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75569","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75570","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on the issue:\n\n    https://github.com/apache/storm/pull/2566\n  \n    @srdo \r\n    Addressed review comment. Please take a look again.\n","created":"2018-02-23T20:26:33.117+0000","updated":"2018-02-23T20:26:33.117+0000","started":"2018-02-23T20:26:33.116+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75570","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75571","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170359655\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1559,8 +1577,8 @@ public static boolean isLocalhostAddress(String address) {\n             Set<Integer> ids = srcMap.keySet();\n             Integer largestId = ids.stream().max(Integer::compareTo).get();\n             int end = largestId - start;\n    -        ArrayList<V> result = new ArrayList<>(Collections.nCopies(end+1 , null)); // creates array[largestId+1] filled with nulls\n    -        for( Map.Entry<Integer, V> entry : srcMap.entrySet() ) {\n    +        ArrayList<V> result = new ArrayList<>(Collections.nCopies(end + 1, null)); // creates array[largestId+1] filled with nulls\n    --- End diff --\n    \n    Auto-corrected via IntelliJ. Let me revert if we don't want to fix unrelated thing.\n","created":"2018-02-23T20:29:02.328+0000","updated":"2018-02-23T20:29:02.328+0000","started":"2018-02-23T20:29:02.328+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75571","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75725","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170418529\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1505,35 +1508,36 @@ public static StormTopology addVersions(StormTopology topology) {\n             Map<String, Object> defaultsConf = null;\n             Map<String, Object> stormConf = null;\n             for (String part: cp) {\n    -            File f = new File(part);\n    -            if (f.isDirectory()) {\n    -                if (defaultsConf == null) {\n    -                    defaultsConf = readConfIgnoreNotFound(yaml, new File(f, \"defaults.yaml\"));\n    -                }\n    -                \n    -                if (stormConf == null) {\n    -                    stormConf = readConfIgnoreNotFound(yaml, new File(f, \"storm.yaml\"));\n    +            String wildcardSuffix = File.separator + \"*\";\n    --- End diff --\n    \n    Thanks, hadn't thought of that. I was thinking of the case where the full path is \"*\", which I think you've fixed now.\n","created":"2018-02-24T10:56:49.190+0000","updated":"2018-02-24T10:56:49.190+0000","started":"2018-02-24T10:56:49.190+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75725","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75726","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170418510\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1570,4 +1588,60 @@ public static boolean isLocalhostAddress(String address) {\n             }\n             return result;\n         }\n    +\n    +    private static class JarConfigReader {\n    +        private Yaml yaml;\n    +        private Map<String, Object> defaultsConf;\n    +        private Map<String, Object> stormConf;\n    +        private File f;\n    +\n    +        public JarConfigReader(Yaml yaml, Map<String, Object> defaultsConf, Map<String, Object> stormConf, File f) {\n    +            this.yaml = yaml;\n    +            this.defaultsConf = defaultsConf;\n    +            this.stormConf = stormConf;\n    +            this.f = f;\n    +        }\n    +\n    +        public Map<String, Object> getDefaultsConf() {\n    +            return defaultsConf;\n    +        }\n    +\n    +        public Map<String, Object> getStormConf() {\n    +            return stormConf;\n    +        }\n    +\n    +        public JarConfigReader readZip() throws IOException {\n    +            try (ZipFile zipFile = new ZipFile(f)) {\n    +                readArchive(zipFile);\n    +            }\n    +            return this;\n    +        }\n    +\n    +        public JarConfigReader readJar() throws IOException {\n    +            try (JarFile jarFile = new JarFile(f)) {\n    +                readArchive(jarFile);\n    +            }\n    +            return this;\n    +        }\n    +\n    +        private void readArchive(ZipFile zipFile) throws IOException {\n    +            Enumeration<? extends ZipEntry> zipEnums = zipFile.entries();\n    +            while (zipEnums.hasMoreElements()) {\n    +                ZipEntry entry = zipEnums.nextElement();\n    +                if (!entry.isDirectory()) {\n    +                    if (defaultsConf == null && entry.getName().equals(\"defaults.yaml\")) {\n    +                        try (InputStream in = zipFile.getInputStream(entry); InputStreamReader isr = new InputStreamReader(in)) {\n    --- End diff --\n    \n    Nit: Since you're not using the in variable, you could builder the isr in one step\n","created":"2018-02-24T10:56:49.469+0000","updated":"2018-02-24T10:56:49.469+0000","started":"2018-02-24T10:56:49.469+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75726","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75727","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170418572\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1505,35 +1508,36 @@ public static StormTopology addVersions(StormTopology topology) {\n             Map<String, Object> defaultsConf = null;\n             Map<String, Object> stormConf = null;\n             for (String part: cp) {\n    -            File f = new File(part);\n    -            if (f.isDirectory()) {\n    -                if (defaultsConf == null) {\n    -                    defaultsConf = readConfIgnoreNotFound(yaml, new File(f, \"defaults.yaml\"));\n    -                }\n    -                \n    -                if (stormConf == null) {\n    -                    stormConf = readConfIgnoreNotFound(yaml, new File(f, \"storm.yaml\"));\n    +            String wildcardSuffix = File.separator + \"*\";\n    +            if (part.endsWith(wildcardSuffix)) {\n    +                // wildcard is given\n    +                // in java classpath, '*' is translated to '*.jar'\n    +                File dir = new File(part.substring(0, part.length() - wildcardSuffix.length()));\n    --- End diff --\n    \n    Thanks, looks good\n","created":"2018-02-24T10:59:03.757+0000","updated":"2018-02-24T10:59:03.757+0000","started":"2018-02-24T10:59:03.757+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75727","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75728","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170418624\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1505,35 +1508,36 @@ public static StormTopology addVersions(StormTopology topology) {\n             Map<String, Object> defaultsConf = null;\n             Map<String, Object> stormConf = null;\n             for (String part: cp) {\n    -            File f = new File(part);\n    -            if (f.isDirectory()) {\n    -                if (defaultsConf == null) {\n    -                    defaultsConf = readConfIgnoreNotFound(yaml, new File(f, \"defaults.yaml\"));\n    -                }\n    -                \n    -                if (stormConf == null) {\n    -                    stormConf = readConfIgnoreNotFound(yaml, new File(f, \"storm.yaml\"));\n    +            String wildcardSuffix = File.separator + \"*\";\n    +            if (part.endsWith(wildcardSuffix)) {\n    +                // wildcard is given\n    +                // in java classpath, '*' is translated to '*.jar'\n    +                File dir = new File(part.substring(0, part.length() - wildcardSuffix.length()));\n    +                File[] jarFiles = dir.listFiles((dir1, name) -> name.endsWith(\".jar\"));\n    +\n    +                if (jarFiles != null) {\n    --- End diff --\n    \n    I'm not sure. If jarFiles is null, it looks like we'll end up returning an empty config, so I think downstream code will probably break. If that's the case, I'd prefer throwing an exception here so it's obvious what went wrong. Whether we want to throw a custom exception or just remove the null check and get an NPE in the following line makes no difference to me.\n","created":"2018-02-24T11:02:00.350+0000","updated":"2018-02-24T11:02:00.350+0000","started":"2018-02-24T11:02:00.349+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75728","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75729","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170418654\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1570,4 +1574,49 @@ public static boolean isLocalhostAddress(String address) {\n             }\n             return result;\n         }\n    +\n    +    private static class JarConfigReader {\n    +        private Yaml yaml;\n    +        private Map<String, Object> defaultsConf;\n    +        private Map<String, Object> stormConf;\n    +        private File f;\n    +\n    +        public JarConfigReader(Yaml yaml, Map<String, Object> defaultsConf, Map<String, Object> stormConf, File f) {\n    +            this.yaml = yaml;\n    +            this.defaultsConf = defaultsConf;\n    +            this.stormConf = stormConf;\n    +            this.f = f;\n    +        }\n    +\n    +        public Map<String, Object> getDefaultsConf() {\n    +            return defaultsConf;\n    +        }\n    +\n    +        public Map<String, Object> getStormConf() {\n    +            return stormConf;\n    +        }\n    +\n    +        public JarConfigReader invoke() throws IOException {\n    --- End diff --\n    \n    Looks good, thanks. Not sure if it makes a difference to open the jarfile with JarFile rather than ZipFile, but it can't hurt.\n","created":"2018-02-24T11:04:09.844+0000","updated":"2018-02-24T11:04:09.844+0000","started":"2018-02-24T11:04:09.844+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75729","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75730","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2566#discussion_r170418714\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/utils/Utils.java ---\n    @@ -1570,4 +1588,60 @@ public static boolean isLocalhostAddress(String address) {\n             }\n             return result;\n         }\n    +\n    +    private static class JarConfigReader {\n    +        private Yaml yaml;\n    +        private Map<String, Object> defaultsConf;\n    +        private Map<String, Object> stormConf;\n    +        private File f;\n    +\n    +        public JarConfigReader(Yaml yaml, Map<String, Object> defaultsConf, Map<String, Object> stormConf, File f) {\n    +            this.yaml = yaml;\n    +            this.defaultsConf = defaultsConf;\n    +            this.stormConf = stormConf;\n    +            this.f = f;\n    +        }\n    +\n    +        public Map<String, Object> getDefaultsConf() {\n    +            return defaultsConf;\n    +        }\n    +\n    +        public Map<String, Object> getStormConf() {\n    +            return stormConf;\n    +        }\n    +\n    +        public JarConfigReader readZip() throws IOException {\n    +            try (ZipFile zipFile = new ZipFile(f)) {\n    +                readArchive(zipFile);\n    +            }\n    +            return this;\n    +        }\n    +\n    +        public JarConfigReader readJar() throws IOException {\n    +            try (JarFile jarFile = new JarFile(f)) {\n    +                readArchive(jarFile);\n    +            }\n    +            return this;\n    +        }\n    +\n    +        private void readArchive(ZipFile zipFile) throws IOException {\n    +            Enumeration<? extends ZipEntry> zipEnums = zipFile.entries();\n    +            while (zipEnums.hasMoreElements()) {\n    +                ZipEntry entry = zipEnums.nextElement();\n    +                if (!entry.isDirectory()) {\n    +                    if (defaultsConf == null && entry.getName().equals(\"defaults.yaml\")) {\n    +                        try (InputStream in = zipFile.getInputStream(entry); InputStreamReader isr = new InputStreamReader(in)) {\n    --- End diff --\n    \n    Addressed.\n","created":"2018-02-24T11:08:29.812+0000","updated":"2018-02-24T11:08:29.812+0000","started":"2018-02-24T11:08:29.812+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75730","issueId":"13139676"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13139676/worklog/75735","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on the issue:\n\n    https://github.com/apache/storm/pull/2566\n  \n    @srdo Addressed another review comment.\n","created":"2018-02-24T11:23:05.174+0000","updated":"2018-02-24T11:23:05.174+0000","started":"2018-02-24T11:23:05.174+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"75735","issueId":"13139676"}]},"customfield_12311820":"0|i3qdrr:"}}