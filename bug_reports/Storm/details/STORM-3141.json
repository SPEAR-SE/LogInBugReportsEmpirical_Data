{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13169589","self":"https://issues.apache.org/jira/rest/api/2/issue/13169589","key":"STORM-3141","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":2400,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false}],"aggregatetimespent":2400,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2018-07-12T13:55:03.332+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Jul 12 13:55:03 UTC 2018","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_808313_*|*_3_*:*_1_*:*_846229917_*|*_5_*:*_1_*:*_0","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2018-07-12T13:55:03.303+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-3141/watchers","watchCount":1,"isWatching":false},"created":"2018-07-02T18:37:45.120+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":["pull-request-available"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":"STORM-2714","customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false}],"customfield_12312339":null,"issuelinks":[],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Srdo","name":"Srdo","key":"srdo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stig Rohde Døssing","active":true,"timeZone":"Europe/Copenhagen"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-07-12T13:55:03.342+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12332475","id":"12332475","name":"storm-client"}],"timeoriginalestimate":null,"description":"{code}\r\n2018-07-02 20:32:28.944 [Worker-Transfer] ERROR org.apache.storm.utils.Utils - Async loop died!\r\njava.lang.NullPointerException: null\r\n\tat org.apache.storm.daemon.worker.WorkerState.transferLocalBatch(WorkerState.java:538) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.messaging.DeserializingConnectionCallback.recv(DeserializingConnectionCallback.java:71) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.messaging.local.Context$LocalClient.send(Context.java:194) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.utils.TransferDrainer.send(TransferDrainer.java:53) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.daemon.worker.WorkerTransfer.flush(WorkerTransfer.java:100) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.utils.JCQueue.consumeImpl(JCQueue.java:146) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.utils.JCQueue.consume(JCQueue.java:110) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.utils.JCQueue.consume(JCQueue.java:101) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.daemon.worker.WorkerTransfer.lambda$makeTransferThread$0(WorkerTransfer.java:82) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.utils.Utils$2.run(Utils.java:353) [storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_144]\r\n2018-07-02 20:32:28.945 [Worker-Transfer] ERROR org.apache.storm.utils.Utils - Async loop died!\r\njava.lang.RuntimeException: java.lang.NullPointerException\r\n\tat org.apache.storm.utils.Utils$2.run(Utils.java:368) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_144]\r\nCaused by: java.lang.NullPointerException\r\n\tat org.apache.storm.daemon.worker.WorkerState.transferLocalBatch(WorkerState.java:538) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.messaging.DeserializingConnectionCallback.recv(DeserializingConnectionCallback.java:71) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.messaging.local.Context$LocalClient.send(Context.java:194) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.utils.TransferDrainer.send(TransferDrainer.java:53) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.daemon.worker.WorkerTransfer.flush(WorkerTransfer.java:100) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.utils.JCQueue.consumeImpl(JCQueue.java:146) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.utils.JCQueue.consume(JCQueue.java:110) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.utils.JCQueue.consume(JCQueue.java:101) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.daemon.worker.WorkerTransfer.lambda$makeTransferThread$0(WorkerTransfer.java:82) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\tat org.apache.storm.utils.Utils$2.run(Utils.java:353) ~[storm-client-2.0.0-SNAPSHOT.jar:2.0.0-SNAPSHOT]\r\n\t... 1 more\r\n{code}\r\n\r\nWhen tuples are received, the method looks up which JCQueue to send to. It does this with the tuple destination task id. The map it looks in only has the queues by the starting task id of the executor's range, so if the destination is e.g. task 4 for an executor with assignment [3, 4], we hit an NPE.","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"40m","remainingEstimateSeconds":0,"timeSpentSeconds":2400},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"NPE in WorkerState.transferLocalBatch when receiving messages for a task that isn't the first task assigned to the executor","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Srdo","name":"Srdo","key":"srdo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stig Rohde Døssing","active":true,"timeZone":"Europe/Copenhagen"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Srdo","name":"Srdo","key":"srdo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stig Rohde Døssing","active":true,"timeZone":"Europe/Copenhagen"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":2400,"total":2400,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":2400,"total":2400,"percent":100},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13169589/comment/16541684","id":"16541684","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Looks like Bobby forgot to close this. Marked as resolved. Thanks again [~Srdo]!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2018-07-12T13:55:03.332+0000","updated":"2018-07-12T13:55:03.332+0000"}],"maxResults":1,"total":1,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-3141/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":4,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13169589/worklog/118354","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user srdo opened a pull request:\n\n    https://github.com/apache/storm/pull/2750\n\n    STORM-3141: Fix NPE in WorkerState.transferLocalBatch, and refactor B…\n\n    …ackpressureTracker to get rid of placeholder JCQueue\r\n    \r\n    https://issues.apache.org/jira/browse/STORM-3141\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/srdo/storm STORM-3141\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/2750.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #2750\n    \n----\ncommit 34a6cb0af7dcde7e5658dac3f85b320702cfca31\nAuthor: Stig Rohde Døssing <srdo@...>\nDate:   2018-07-02T19:42:54Z\n\n    STORM-3141: Fix NPE in WorkerState.transferLocalBatch, and refactor BackpressureTracker to get rid of placeholder JCQueue\n\n----\n","created":"2018-07-02T19:44:17.063+0000","updated":"2018-07-02T19:44:17.063+0000","started":"2018-07-02T19:44:17.062+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"118354","issueId":"13169589"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13169589/worklog/119405","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2750#discussion_r200393309\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/daemon/worker/BackPressureTracker.java ---\n    @@ -22,56 +22,53 @@\n     import java.util.List;\n     import java.util.Map;\n     import java.util.Map.Entry;\n    -import java.util.concurrent.ConcurrentHashMap;\n    -import org.apache.storm.Constants;\n     import org.apache.storm.messaging.netty.BackPressureStatus;\n     import org.apache.storm.utils.JCQueue;\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    -import static org.apache.storm.Constants.SYSTEM_TASK_ID;\n    +import java.util.concurrent.atomic.AtomicBoolean;\n    +\n    +import java.util.stream.Collectors;\n    +import org.apache.storm.shade.org.apache.commons.lang.builder.ToStringBuilder;\n    +import org.apache.storm.shade.org.apache.commons.lang.builder.ToStringStyle;\n     \n     /***\n    - *   Tracks the BackPressure status using a Map<TaskId, JCQueue>.\n    - *   Special value NONE, is used to indicate that the task is not under BackPressure\n    - *   ConcurrentHashMap does not allow storing null values, so we use the special value NONE instead.\n    + *   Tracks the BackPressure status.\n      */\n     public class BackPressureTracker {\n         static final Logger LOG = LoggerFactory.getLogger(BackPressureTracker.class);\n    -    private static final JCQueue NONE = new JCQueue(\"NoneQ\", 2, 0, 1, null,\n    -                                                    \"none\", Constants.SYSTEM_COMPONENT_ID, -1, 0) {\n    -    };\n    -    private final Map<Integer, JCQueue> tasks = new ConcurrentHashMap<>(); // updates are more frequent than iteration\n    +    private final Map<Integer, BackpressureState> tasks;\n         private final String workerId;\n     \n    -    public BackPressureTracker(String workerId, List<Integer> allLocalTasks) {\n    +    public BackPressureTracker(String workerId, Map<Integer, JCQueue> localTasksToQueues) {\n             this.workerId = workerId;\n    -        for (Integer taskId : allLocalTasks) {\n    -            if (taskId != SYSTEM_TASK_ID) {\n    -                tasks.put(taskId, NONE);  // all tasks are considered to be not under BP initially\n    -            }\n    -        }\n    +        this.tasks = localTasksToQueues.entrySet().stream()\n    +            .collect(Collectors.toMap(\n    +                entry -> entry.getKey(),\n    +                entry -> new BackpressureState(entry.getValue())));\n         }\n     \n         private void recordNoBackPressure(Integer taskId) {\n    -        tasks.put(taskId, NONE);\n    +        tasks.get(taskId).backpressure.set(false);\n         }\n     \n         /***\n          * Record BP for a task.\n          * This is called by transferLocalBatch() on NettyWorker thread\n          * @return true if an update was recorded, false if taskId is already under BP\n          */\n    -    public boolean recordBackPressure(Integer taskId, JCQueue recvQ) {\n    -        return tasks.put(taskId, recvQ) == NONE;\n    +    public boolean recordBackPressure(Integer taskId) {\n    +        return tasks.get(taskId).backpressure.getAndSet(true);\n    --- End diff --\n    \n    The return value of this method has switched.  getAndSet is going to return the previous value, which is true if it already was under backpressure and false if it was not.  This is the opposite of\r\n    \r\n    ```\r\n    * @return true if an update was recorded, false if taskId is already under BP\r\n    ```\r\n    \r\n    This is used to control when the server sends messages to the client about backpressure, and could make it happen not frequently enough and the beginning and then way too frequently after that.\n","created":"2018-07-05T15:29:13.138+0000","updated":"2018-07-05T15:29:13.138+0000","started":"2018-07-05T15:29:13.137+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"119405","issueId":"13169589"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13169589/worklog/119516","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2750#discussion_r200445007\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/daemon/worker/BackPressureTracker.java ---\n    @@ -22,56 +22,53 @@\n     import java.util.List;\n     import java.util.Map;\n     import java.util.Map.Entry;\n    -import java.util.concurrent.ConcurrentHashMap;\n    -import org.apache.storm.Constants;\n     import org.apache.storm.messaging.netty.BackPressureStatus;\n     import org.apache.storm.utils.JCQueue;\n     import org.slf4j.Logger;\n     import org.slf4j.LoggerFactory;\n     \n    -import static org.apache.storm.Constants.SYSTEM_TASK_ID;\n    +import java.util.concurrent.atomic.AtomicBoolean;\n    +\n    +import java.util.stream.Collectors;\n    +import org.apache.storm.shade.org.apache.commons.lang.builder.ToStringBuilder;\n    +import org.apache.storm.shade.org.apache.commons.lang.builder.ToStringStyle;\n     \n     /***\n    - *   Tracks the BackPressure status using a Map<TaskId, JCQueue>.\n    - *   Special value NONE, is used to indicate that the task is not under BackPressure\n    - *   ConcurrentHashMap does not allow storing null values, so we use the special value NONE instead.\n    + *   Tracks the BackPressure status.\n      */\n     public class BackPressureTracker {\n         static final Logger LOG = LoggerFactory.getLogger(BackPressureTracker.class);\n    -    private static final JCQueue NONE = new JCQueue(\"NoneQ\", 2, 0, 1, null,\n    -                                                    \"none\", Constants.SYSTEM_COMPONENT_ID, -1, 0) {\n    -    };\n    -    private final Map<Integer, JCQueue> tasks = new ConcurrentHashMap<>(); // updates are more frequent than iteration\n    +    private final Map<Integer, BackpressureState> tasks;\n         private final String workerId;\n     \n    -    public BackPressureTracker(String workerId, List<Integer> allLocalTasks) {\n    +    public BackPressureTracker(String workerId, Map<Integer, JCQueue> localTasksToQueues) {\n             this.workerId = workerId;\n    -        for (Integer taskId : allLocalTasks) {\n    -            if (taskId != SYSTEM_TASK_ID) {\n    -                tasks.put(taskId, NONE);  // all tasks are considered to be not under BP initially\n    -            }\n    -        }\n    +        this.tasks = localTasksToQueues.entrySet().stream()\n    +            .collect(Collectors.toMap(\n    +                entry -> entry.getKey(),\n    +                entry -> new BackpressureState(entry.getValue())));\n         }\n     \n         private void recordNoBackPressure(Integer taskId) {\n    -        tasks.put(taskId, NONE);\n    +        tasks.get(taskId).backpressure.set(false);\n         }\n     \n         /***\n          * Record BP for a task.\n          * This is called by transferLocalBatch() on NettyWorker thread\n          * @return true if an update was recorded, false if taskId is already under BP\n          */\n    -    public boolean recordBackPressure(Integer taskId, JCQueue recvQ) {\n    -        return tasks.put(taskId, recvQ) == NONE;\n    +    public boolean recordBackPressure(Integer taskId) {\n    +        return tasks.get(taskId).backpressure.getAndSet(true);\n    --- End diff --\n    \n    Nice catch. Fixed and added some tests.\n","created":"2018-07-05T18:20:33.539+0000","updated":"2018-07-05T18:20:33.539+0000","started":"2018-07-05T18:20:33.538+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"119516","issueId":"13169589"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13169589/worklog/121565","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/storm/pull/2750\n","created":"2018-07-10T20:29:20.589+0000","updated":"2018-07-10T20:29:20.589+0000","started":"2018-07-10T20:29:20.589+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"121565","issueId":"13169589"}]},"customfield_12311820":"0|i3vgk7:"}}