{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12929943","self":"https://issues.apache.org/jira/rest/api/2/issue/12929943","key":"STORM-1471","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/8","id":"8","description":"The described issue is not actually a problem - it is as designed.","name":"Not A Problem"},"customfield_12312322":null,"customfield_12310220":"2016-01-14T00:10:22.988+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Jan 14 15:22:06 UTC 2016","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_12103007_*|*_6_*:*_1_*:*_0","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2016-01-14T00:10:42.874+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-1471/watchers","watchCount":3,"isWatching":false},"created":"2016-01-13T20:48:59.898+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"customfield_12312339":null,"issuelinks":[],"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-01-14T15:22:06.331+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12324393","id":"12324393","name":"storm-kafka","description":"Storm Kafka Integration"}],"timeoriginalestimate":null,"description":"We currently have an issue in our storm cluster where our Kafka brokers are under heavy load due to too many fetch requests from storm.  We've narrowed the problem to the way Fetch Requests are build in KafkaUtils.  When using the FetchRequestBuilder, storm provides overrides for all the properties except minBytes.  The default for that field is 0 (even though the Kafka default for the high-level consumer is 1).  When paired with a maxWait > 0, this creates a situation where the broker can immediately return a response without waiting (due to minBytes 0).  This puts a heavy load on the brokers and defeats the purpose of any long polling.\n\nBy making this a SpoutConfig option, it will allow the user to set that as appropriate for their situation.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Make FetchRequestBuilder.minBytes a configurable parameter in SpoutConfig","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=garrick.dasbach%40inin.com","name":"garrick.dasbach@inin.com","key":"garrick.dasbach@inin.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Garrick Dasbach","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=garrick.dasbach%40inin.com","name":"garrick.dasbach@inin.com","key":"garrick.dasbach@inin.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Garrick Dasbach","active":true,"timeZone":"Etc/UTC"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929943/comment/15097329","id":"15097329","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"AFAIK, It is intended behavior since nextTuple() in Spout shouldn't be blocked.\nYou can refer http://storm.apache.org/documentation/Concepts.html - Spouts section.\n\nJStorm provides multi-thread mode of Spout, and it could be applied to Storm when merging Storm and JStorm.\nhttps://issues.apache.org/jira/browse/STORM-1358","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2016-01-14T00:10:22.988+0000","updated":"2016-01-14T00:10:22.988+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929943/comment/15097475","id":"15097475","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=garrick.dasbach%40inin.com","name":"garrick.dasbach@inin.com","key":"garrick.dasbach@inin.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Garrick Dasbach","active":true,"timeZone":"Etc/UTC"},"body":"That's a fair point, however it's somewhat confusing then that the KafkaConfig allows you to set fetchMaxWait, which defaults to 10s.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=garrick.dasbach%40inin.com","name":"garrick.dasbach@inin.com","key":"garrick.dasbach@inin.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Garrick Dasbach","active":true,"timeZone":"Etc/UTC"},"created":"2016-01-14T02:31:51.448+0000","updated":"2016-01-14T02:31:51.448+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929943/comment/15098242","id":"15098242","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=garrick.dasbach%40inin.com","name":"garrick.dasbach@inin.com","key":"garrick.dasbach@inin.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Garrick Dasbach","active":true,"timeZone":"Etc/UTC"},"body":"Not sure how far out the JStorm port is, but in the interim, maybe it would be sufficient to make the Kafka fetch asynchronous.  That way we can allow long-polling without blocking the spout.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=garrick.dasbach%40inin.com","name":"garrick.dasbach@inin.com","key":"garrick.dasbach@inin.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Garrick Dasbach","active":true,"timeZone":"Etc/UTC"},"created":"2016-01-14T15:22:06.331+0000","updated":"2016-01-14T15:22:06.331+0000"}],"maxResults":3,"total":3,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-1471/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2r9gn:"}}