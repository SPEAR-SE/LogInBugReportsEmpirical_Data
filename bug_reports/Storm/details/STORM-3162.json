{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13175210","self":"https://issues.apache.org/jira/rest/api/2/issue/13175210","key":"STORM-3162","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":13200,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false}],"aggregatetimespent":13200,"resolution":null,"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"2018-07-27 15:49:53.581","customfield_12312320":null,"customfield_12310222":null,"customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-3162/watchers","watchCount":1,"isWatching":false},"created":"2018-07-27T15:49:53.581+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":["pull-request-available"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false}],"customfield_12312339":null,"issuelinks":[],"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-08-27T05:53:24.116+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12332475","id":"12332475","name":"storm-client"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12327950","id":"12327950","name":"storm-core","description":"Core storm daemons and APIs including trident"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12332924","id":"12332924","name":"storm-server"}],"timeoriginalestimate":null,"description":"This is discovered during testing for STORM-3133. Travis-CI log can be found [here|https://travis-ci.org/apache/storm/jobs/408719153#L1897].\r\n\r\nSpecifically, updateHeartbeatCache can be invoked both by Nimbus (at `Nimbus#updateHeartBeats`) and by Supervisor (at `Nimbubs#updateCachedHeartbeatsFromWorker` at `Nimbus#updateCachedHeartbeatsFromSupervisor`), causing ConcurrentModificationException.","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"3h 40m","remainingEstimateSeconds":0,"timeSpentSeconds":13200},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Race condition at updateHeartbeatCache","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zhengdai","name":"zhengdai","key":"zhengdai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34044","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"},"displayName":"Zhengdai Hu","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zhengdai","name":"zhengdai","key":"zhengdai","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34044","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"},"displayName":"Zhengdai Hu","active":true,"timeZone":"Etc/UTC"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":13200,"total":13200,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":13200,"total":13200,"percent":100},"comment":{"comments":[],"maxResults":0,"total":0,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-3162/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":22,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/133693","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user zd-project opened a pull request:\n\n    https://github.com/apache/storm/pull/2800\n\n    STORM-3162: Fix concurrent modification bug\n\n    See: https://issues.apache.org/jira/browse/STORM-3162\r\n    \r\n    I managed to alter the Java implementation and it seems to be passing storm-server test. However in storm-core there's a nimbus_test.clj which depends on some of the older implementation that I changed in this PR. I myself am not very familiar with Clojure so I don't know how to fix it. If any of you can take a look it'll be great.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/zd-project/storm STORM-3162\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/2800.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #2800\n    \n----\ncommit e7bacee9ecc2c136a7ef3c5d3144eae2d95a9306\nAuthor: Zhengdai Hu <zhengdai.hu@...>\nDate:   2018-08-08T21:33:19Z\n\n    STORM-3162: Fix concurrent modification bug\n\n----\n","created":"2018-08-10T17:25:26.292+0000","updated":"2018-08-10T17:25:26.292+0000","started":"2018-08-10T17:25:26.292+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"133693","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/135399","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2800#discussion_r210632176\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java ---\n    @@ -1525,27 +1528,24 @@ public static ComponentPageInfo aggCompExecsStats(\n          * @param timeout       timeout\n          * @return a HashMap of updated executor heart beats\n          */\n    -    public static Map<List<Integer>, Map<String, Object>> updateHeartbeatCacheFromZkHeartbeat(Map<List<Integer>, Map<String, Object>> cache,\n    -                                                                                              Map<List<Integer>, Map<String, Object>>\n    -                                                                                                  executorBeats,\n    -                                                                                              Set<List<Integer>> executors,\n    -                                                                                              Integer timeout) {\n    -        Map<List<Integer>, Map<String, Object>> ret = new HashMap<>();\n    -        if (cache == null && executorBeats == null) {\n    -            return ret;\n    -        }\n    -\n    +    public static ConcurrentMap<List<Integer>, Map<String, Object>> updateHeartbeatCacheFromZkHeartbeat(Map<List<Integer>, Map<String, Object>> cache,\n    +                                                                                                        Map<List<Integer>, Map<String, Object>>\n    +                                                                                                                executorBeats,\n    +                                                                                                        Set<List<Integer>> executors,\n    +                                                                                                        Integer timeout) {\n             if (cache == null) {\n    +            if (executorBeats == null) {\n    --- End diff --\n    \n    The construction here seems a little odd. Initializing cache and executorBeats when null isn't necessary. I think we should keep the \"if cache and executorBeats are null\" clause, then replace the other two branches with something like `Map<String, Object> currBeat = cache == null ? null : cache.get(executor);` and equivalent for `newBeat`.\n","created":"2018-08-16T15:31:46.333+0000","updated":"2018-08-16T15:31:46.333+0000","started":"2018-08-16T15:31:46.331+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"135399","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/135400","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2800#discussion_r210633216\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java ---\n    @@ -1565,23 +1565,26 @@ public static ComponentPageInfo aggCompExecsStats(\n         public static void updateHeartbeatCache(Map<List<Integer>, Map<String, Object>> cache,\n                                                 Map<List<Integer>, Map<String, Object>> executorBeats, Set<List<Integer>> executors,\n                                                 Integer timeout) {\n    -        //if not executor beats, refresh is-timed-out of the cache which is done by master\n    +        assert cache instanceof ConcurrentMap;\n    +        //Should we enforce update-if-newer policy?\n             if (executorBeats == null) {\n    -            for (Map.Entry<List<Integer>, Map<String, Object>> executorbeat : cache.entrySet()) {\n    -                Map<String, Object> beat = executorbeat.getValue();\n    +            //If not executor beats, refresh is-timed-out of the cache which is done by master\n    +            for (Map.Entry<List<Integer>, Map<String, Object>> executorBeat : cache.entrySet()) {\n    +                Map<String, Object> beat = executorBeat.getValue();\n                     beat.put(\"is-timed-out\", Time.deltaSecs((Integer) beat.get(\"nimbus-time\")) >= timeout);\n                 }\n    -            return;\n    -        }\n    -        //else refresh nimbus-time and executor-reported-time by heartbeats reporting\n    -        for (List<Integer> executor : executors) {\n    -            cache.put(executor, updateExecutorCache(cache.get(executor), executorBeats.get(executor), timeout));\n    +        } else {\n    --- End diff --\n    \n    Nit: Explicit return can help decrease indentation, I liked it better before.\n","created":"2018-08-16T15:31:46.391+0000","updated":"2018-08-16T15:31:46.391+0000","started":"2018-08-16T15:31:46.390+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"135400","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/135401","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2800#discussion_r210639246\n  \n    --- Diff: storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java ---\n    @@ -1660,26 +1658,18 @@ private TopologyDetails readTopologyDetails(String topoId, StormBase base) throw\n     \n         private void updateHeartbeatsFromZkHeartbeat(String topoId, Set<List<Integer>> allExecutors, Assignment existingAssignment) {\n             LOG.debug(\"Updating heartbeats for {} {} (from ZK heartbeat)\", topoId, allExecutors);\n    -        IStormClusterState state = stormClusterState;\n             Map<List<Integer>, Map<String, Object>> executorBeats =\n    -            StatsUtil.convertExecutorBeats(state.executorBeats(topoId, existingAssignment.get_executor_node_port()));\n    -        Map<List<Integer>, Map<String, Object>> cache = StatsUtil.updateHeartbeatCacheFromZkHeartbeat(heartbeatsCache.get().get(topoId),\n    -                                                                                                      executorBeats, allExecutors,\n    -                                                                                                      ObjectReader.getInt(conf.get(\n    -                                                                                                          DaemonConfig\n    -                                                                                                              .NIMBUS_TASK_TIMEOUT_SECS)));\n    -        heartbeatsCache.getAndUpdate(new Assoc<>(topoId, cache));\n    +            StatsUtil.convertExecutorBeats(stormClusterState.executorBeats(topoId, existingAssignment.get_executor_node_port()));\n    +        heartbeatsCache.compute(topoId, (k, v) ->\n    +                //Guaranteed side-effect-free\n    --- End diff --\n    \n    We should probably put this requirement in comments on the two methods in StatsUtil rather than here, so they stay side effect free.\n","created":"2018-08-16T15:31:46.437+0000","updated":"2018-08-16T15:31:46.437+0000","started":"2018-08-16T15:31:46.437+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"135401","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/135406","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2800\n  \n    Fixed the nimbus_test https://github.com/zd-project/storm/pull/1\n","created":"2018-08-16T16:29:42.841+0000","updated":"2018-08-16T16:29:42.841+0000","started":"2018-08-16T16:29:42.840+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"135406","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138105","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2800#discussion_r212800719\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java ---\n    @@ -1525,27 +1528,24 @@ public static ComponentPageInfo aggCompExecsStats(\n          * @param timeout       timeout\n          * @return a HashMap of updated executor heart beats\n          */\n    -    public static Map<List<Integer>, Map<String, Object>> updateHeartbeatCacheFromZkHeartbeat(Map<List<Integer>, Map<String, Object>> cache,\n    -                                                                                              Map<List<Integer>, Map<String, Object>>\n    -                                                                                                  executorBeats,\n    -                                                                                              Set<List<Integer>> executors,\n    -                                                                                              Integer timeout) {\n    -        Map<List<Integer>, Map<String, Object>> ret = new HashMap<>();\n    -        if (cache == null && executorBeats == null) {\n    -            return ret;\n    -        }\n    -\n    +    public static ConcurrentMap<List<Integer>, Map<String, Object>> updateHeartbeatCacheFromZkHeartbeat(Map<List<Integer>, Map<String, Object>> cache,\n    +                                                                                                        Map<List<Integer>, Map<String, Object>>\n    +                                                                                                                executorBeats,\n    +                                                                                                        Set<List<Integer>> executors,\n    +                                                                                                        Integer timeout) {\n             if (cache == null) {\n    +            if (executorBeats == null) {\n    --- End diff --\n    \n    Sorry, i did see any reason why this method is not thread safe, cause it almost a tool method, only to initialize a Map cache which is updated into `Nimbus` heartbeatsCache through `heartbeatsCache.getAndUpdate(new Assoc<>(topoId, cache))`,` ConcurrentModificationException` happens when we iterate over a collection through iterator and also modify it, but here, we only iterate the executor list and do not modify any of the list entry.\n","created":"2018-08-25T15:05:41.137+0000","updated":"2018-08-25T15:05:41.137+0000","started":"2018-08-25T15:05:41.137+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138105","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138106","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2800#discussion_r212800820\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java ---\n    @@ -1565,23 +1565,26 @@ public static ComponentPageInfo aggCompExecsStats(\n         public static void updateHeartbeatCache(Map<List<Integer>, Map<String, Object>> cache,\n                                                 Map<List<Integer>, Map<String, Object>> executorBeats, Set<List<Integer>> executors,\n                                                 Integer timeout) {\n    -        //if not executor beats, refresh is-timed-out of the cache which is done by master\n    +        assert cache instanceof ConcurrentMap;\n    +        //Should we enforce update-if-newer policy?\n             if (executorBeats == null) {\n    -            for (Map.Entry<List<Integer>, Map<String, Object>> executorbeat : cache.entrySet()) {\n    -                Map<String, Object> beat = executorbeat.getValue();\n    +            //If not executor beats, refresh is-timed-out of the cache which is done by master\n    --- End diff --\n    \n    This code branch can only be invoked by 'Nimbus' and it is always a single thread modification, so please make sure if it will throw any `ConcurrentModificationException`.\n","created":"2018-08-25T15:09:17.012+0000","updated":"2018-08-25T15:09:17.012+0000","started":"2018-08-25T15:09:17.011+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138106","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138107","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2800#discussion_r212800892\n  \n    --- Diff: storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java ---\n    @@ -490,7 +493,7 @@ public Nimbus(Map<String, Object> conf, INimbus inimbus, IStormClusterState stor\n                 stormClusterState = makeStormClusterState(conf);\n             }\n             this.stormClusterState = stormClusterState;\n    -        this.heartbeatsCache = new AtomicReference<>(new HashMap<>());\n    +        this.heartbeatsCache = new ConcurrentHashMap<>();\n    --- End diff --\n    \n    Please change back to `AtomicReference` cause it is multi_thread visible, actually the thrift server serves the RPC methods through multi threading, so we should keep the heartbeatsCache modification be seen as much as possible.\n","created":"2018-08-25T15:12:06.489+0000","updated":"2018-08-25T15:12:06.489+0000","started":"2018-08-25T15:12:06.489+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138107","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138108","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on the issue:\n\n    https://github.com/apache/storm/pull/2800\n  \n    Please make sure again why the `ConcurrentModificationException` happens and attach the stack trace.\n","created":"2018-08-25T15:14:27.185+0000","updated":"2018-08-25T15:14:27.185+0000","started":"2018-08-25T15:14:27.184+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138108","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138111","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user zd-project commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2800#discussion_r212801069\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java ---\n    @@ -1525,27 +1528,24 @@ public static ComponentPageInfo aggCompExecsStats(\n          * @param timeout       timeout\n          * @return a HashMap of updated executor heart beats\n          */\n    -    public static Map<List<Integer>, Map<String, Object>> updateHeartbeatCacheFromZkHeartbeat(Map<List<Integer>, Map<String, Object>> cache,\n    -                                                                                              Map<List<Integer>, Map<String, Object>>\n    -                                                                                                  executorBeats,\n    -                                                                                              Set<List<Integer>> executors,\n    -                                                                                              Integer timeout) {\n    -        Map<List<Integer>, Map<String, Object>> ret = new HashMap<>();\n    -        if (cache == null && executorBeats == null) {\n    -            return ret;\n    -        }\n    -\n    +    public static ConcurrentMap<List<Integer>, Map<String, Object>> updateHeartbeatCacheFromZkHeartbeat(Map<List<Integer>, Map<String, Object>> cache,\n    +                                                                                                        Map<List<Integer>, Map<String, Object>>\n    +                                                                                                                executorBeats,\n    +                                                                                                        Set<List<Integer>> executors,\n    +                                                                                                        Integer timeout) {\n             if (cache == null) {\n    +            if (executorBeats == null) {\n    --- End diff --\n    \n    The very same map created here will be used in `updateHeartbeatCache`, which may be modified concurrently there. Hope this answered your question.\n","created":"2018-08-25T15:19:35.726+0000","updated":"2018-08-25T15:19:35.726+0000","started":"2018-08-25T15:19:35.724+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138111","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138112","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2800#discussion_r212801184\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java ---\n    @@ -1525,27 +1528,24 @@ public static ComponentPageInfo aggCompExecsStats(\n          * @param timeout       timeout\n          * @return a HashMap of updated executor heart beats\n          */\n    -    public static Map<List<Integer>, Map<String, Object>> updateHeartbeatCacheFromZkHeartbeat(Map<List<Integer>, Map<String, Object>> cache,\n    -                                                                                              Map<List<Integer>, Map<String, Object>>\n    -                                                                                                  executorBeats,\n    -                                                                                              Set<List<Integer>> executors,\n    -                                                                                              Integer timeout) {\n    -        Map<List<Integer>, Map<String, Object>> ret = new HashMap<>();\n    -        if (cache == null && executorBeats == null) {\n    -            return ret;\n    -        }\n    -\n    +    public static ConcurrentMap<List<Integer>, Map<String, Object>> updateHeartbeatCacheFromZkHeartbeat(Map<List<Integer>, Map<String, Object>> cache,\n    +                                                                                                        Map<List<Integer>, Map<String, Object>>\n    +                                                                                                                executorBeats,\n    +                                                                                                        Set<List<Integer>> executors,\n    +                                                                                                        Integer timeout) {\n             if (cache == null) {\n    +            if (executorBeats == null) {\n    --- End diff --\n    \n     Concurrently modify a HashMap is ok if we are not also iterate over it, for heartbeats updating, we only need a final consistency.\n","created":"2018-08-25T15:24:22.426+0000","updated":"2018-08-25T15:24:22.426+0000","started":"2018-08-25T15:24:22.425+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138112","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138113","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user zd-project commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2800#discussion_r212801204\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java ---\n    @@ -1565,23 +1565,26 @@ public static ComponentPageInfo aggCompExecsStats(\n         public static void updateHeartbeatCache(Map<List<Integer>, Map<String, Object>> cache,\n                                                 Map<List<Integer>, Map<String, Object>> executorBeats, Set<List<Integer>> executors,\n                                                 Integer timeout) {\n    -        //if not executor beats, refresh is-timed-out of the cache which is done by master\n    +        assert cache instanceof ConcurrentMap;\n    +        //Should we enforce update-if-newer policy?\n             if (executorBeats == null) {\n    -            for (Map.Entry<List<Integer>, Map<String, Object>> executorbeat : cache.entrySet()) {\n    -                Map<String, Object> beat = executorbeat.getValue();\n    +            //If not executor beats, refresh is-timed-out of the cache which is done by master\n    --- End diff --\n    \n    I believe this is wrapped in another method exposed in Thrift API, see `sendSupervisorWorkerHeartbeat`\n","created":"2018-08-25T15:25:00.759+0000","updated":"2018-08-25T15:25:00.759+0000","started":"2018-08-25T15:25:00.758+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138113","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138114","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user zd-project commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2800#discussion_r212801285\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java ---\n    @@ -1565,23 +1565,26 @@ public static ComponentPageInfo aggCompExecsStats(\n         public static void updateHeartbeatCache(Map<List<Integer>, Map<String, Object>> cache,\n                                                 Map<List<Integer>, Map<String, Object>> executorBeats, Set<List<Integer>> executors,\n                                                 Integer timeout) {\n    -        //if not executor beats, refresh is-timed-out of the cache which is done by master\n    +        assert cache instanceof ConcurrentMap;\n    +        //Should we enforce update-if-newer policy?\n             if (executorBeats == null) {\n    -            for (Map.Entry<List<Integer>, Map<String, Object>> executorbeat : cache.entrySet()) {\n    -                Map<String, Object> beat = executorbeat.getValue();\n    +            //If not executor beats, refresh is-timed-out of the cache which is done by master\n    --- End diff --\n    \n    This is actually where the `ConcurrentModificationException` is thrown. Notice that the old code invokes both `cache.entrySet()` and `cache.put()` in this method. Since it's exposed through thrift, it's possible to have `ConcurrentModificationException`. Also see travis log here for an example: https://travis-ci.org/apache/storm/jobs/408719153#L1897\n","created":"2018-08-25T15:28:50.072+0000","updated":"2018-08-25T15:28:50.072+0000","started":"2018-08-25T15:28:50.072+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138114","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138117","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2800#discussion_r212801634\n  \n    --- Diff: storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java ---\n    @@ -1565,23 +1565,26 @@ public static ComponentPageInfo aggCompExecsStats(\n         public static void updateHeartbeatCache(Map<List<Integer>, Map<String, Object>> cache,\n                                                 Map<List<Integer>, Map<String, Object>> executorBeats, Set<List<Integer>> executors,\n                                                 Integer timeout) {\n    -        //if not executor beats, refresh is-timed-out of the cache which is done by master\n    +        assert cache instanceof ConcurrentMap;\n    +        //Should we enforce update-if-newer policy?\n             if (executorBeats == null) {\n    -            for (Map.Entry<List<Integer>, Map<String, Object>> executorbeat : cache.entrySet()) {\n    -                Map<String, Object> beat = executorbeat.getValue();\n    +            //If not executor beats, refresh is-timed-out of the cache which is done by master\n    --- End diff --\n    \n    Then please check the code invocation when the passed in `executorBeats == null`, for `sendSupervisorWorkerHeartbeat` we will never get a null but at least a empty map.\r\n    \r\n    For testing, i believe there should be some bug to fix, but this code modification is not that necessary.\n","created":"2018-08-25T15:39:39.512+0000","updated":"2018-08-25T15:39:39.512+0000","started":"2018-08-25T15:39:39.511+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138117","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138140","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2800\n  \n    I'm sorry if this turns a bit verbose, but I'm going to write down what I see as the issue here, so we can hopefully come to a common understanding (and so I don't forget and have to look at this again)\r\n    \r\n    As far as I can tell, the uses of `heartbeatsCache` in Nimbus are thread safe, because the values are never modified, just overwritten. That is, we don't do `heartbeatsCache.get(topoId).put(foo, bar)`, instead we do `heartbeatsCache.getAndUpdate(func)`, which replaces the value entirely. I don't believe we need further synchronization here, since the `AtomicReference` ensures that the value changes are propagated to all threads, and two threads reading from an effectively immutable map at the same time should be fine(?)\r\n    \r\n    However in the `updateHeartbeatCache` method in StatsUtil https://github.com/apache/storm/blob/4c42ee3d259d5d90a4e7d3445d1c119601eec6c7/storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java#L1565 we take one of the values from `heartbeatsCache` and modify it.\r\n    \r\n    There are a couple of problems here. First, the `cache` value is a regular `HashMap` and not a `ConcurrentHashMap`, so modifying it from two threads at once isn't safe. Second, in the branch in `updateHeartbeatCache` where `executorBeats` is null, we iterate over the `cache` parameter. If one thread is in the iteration, and another thread is in the other branch in `updateHeartbeatCache`, we get the exception.\r\n    \r\n    The reason this exception isn't thrown in a real cluster is that the `executorBeats` parameter is only null when called from https://github.com/apache/storm/blob/4c42ee3d259d5d90a4e7d3445d1c119601eec6c7/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java#L1681\r\n    \r\n    This only happens when Nimbus is booting up as part of `launchServer`, or when someone triggers a rebalance in the topology. We see it in the tests, because Nimbus and the supervisors are started concurrently, so Nimbus can be in one branch in `StatsUtil.updateHeartbeatCache` while one of the supervisors is in the other branch. It can technically happen in a real cluster, but someone would have to get extremely unlucky with rebalance timing.\r\n    \r\n    I think the fix here should be making sure that `StatsUtil.updateHeartbeatCache` is thread safe. One option is to make the `cache` value a `ConcurrentHashMap`. Another option would be to make `updateHeartbeatCache` create and return a new map, instead of modifying the existing one.\n","created":"2018-08-25T19:07:20.668+0000","updated":"2018-08-25T19:07:20.668+0000","started":"2018-08-25T19:07:20.667+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138140","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138171","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on the issue:\n\n    https://github.com/apache/storm/pull/2800\n  \n    @srdo @zd-project \r\n    Thx for your explanation, that make sense for me.\r\n    \r\n    One thing needs to clarify is that `executorBeats` parameter for `StatsUtil#updateHeartbeatCache` is null for every scheduling round of master in order to refresh the `is-timed-out` flag.\r\n    \r\n    There does have possibility that supervisor/worker will walk into code branch:\r\n    https://github.com/apache/storm/blob/4c42ee3d259d5d90a4e7d3445d1c119601eec6c7/storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java#L1576-L1579\r\n    \r\n    and Nimbus the other:\r\n    https://github.com/apache/storm/blob/4c42ee3d259d5d90a4e7d3445d1c119601eec6c7/storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java#L1568-L1574\r\n    \r\n    I think the key here is we used a `forEach` interation for the cache, so here, we could change it to a iterator loop, which is okey cause we only need final consistency instead of ConcurrentMap or copy which will cause perf regression.\n","created":"2018-08-26T03:37:38.981+0000","updated":"2018-08-26T03:37:38.981+0000","started":"2018-08-26T03:37:38.980+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138171","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138179","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2800\n  \n    I don't think fixing the `executorBeats == null` branch is enough. As far as I can tell, two supervisors/workers can be in the https://github.com/apache/storm/blob/4c42ee3d259d5d90a4e7d3445d1c119601eec6c7/storm-client/src/jvm/org/apache/storm/stats/StatsUtil.java#L1576-L1579 branch at the same time for the same topology. We won't get an exception if this happens, but we'll still be modifying a HashMap from two threads at the same time, which isn't safe.\r\n    \r\n    Regarding fixing the `executorBeats == null` branch, it isn't enough to switch to an iterator, since iterators have the same behavior as a `forEach` loop (throws exception if underlying collection is concurrently modified). \n","created":"2018-08-26T07:22:52.458+0000","updated":"2018-08-26T07:22:52.458+0000","started":"2018-08-26T07:22:52.431+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138179","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138180","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2800\n  \n    Regarding performance, consider that Nimbus is already copying `heartbeatCache` on writes everywhere else https://github.com/apache/storm/blob/master/storm-server/src/main/java/org/apache/storm/daemon/nimbus/Nimbus.java#L4636-L4639.\r\n    \r\n    Changing `StatsUtil.updateHeartbeatCache` to return a new Map and using `Assoc` to update `heartbeatCache` would be my preferred solution.\n","created":"2018-08-26T07:32:38.637+0000","updated":"2018-08-26T07:32:38.637+0000","started":"2018-08-26T07:32:38.636+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138180","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138183","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on the issue:\n\n    https://github.com/apache/storm/pull/2800\n  \n    @srdo \r\n    Agree that copy is a better solution.\n","created":"2018-08-26T09:32:47.853+0000","updated":"2018-08-26T09:32:47.853+0000","started":"2018-08-26T09:32:47.852+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138183","issueId":"13175210"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13175210/worklog/138246","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2800\n  \n    @danny0405 Could you elaborate on why fixing the `executorBeats == null` branch is enough? My concern is that the other branch modifies a HashMap (the `cache` parameter) from multiple threads with no synchronization. Why is this safe?\n","created":"2018-08-26T19:53:01.927+0000","updated":"2018-08-26T19:53:01.927+0000","started":"2018-08-26T19:53:01.926+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"138246","issueId":"13175210"}]},"customfield_12311820":"0|i3wexr:"}}