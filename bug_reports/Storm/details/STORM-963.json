{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12849270","self":"https://issues.apache.org/jira/rest/api/2/issue/12849270","key":"STORM-963","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2015-07-31T01:02:59.937+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Sat Mar 05 02:42:50 UTC 2016","customfield_12312320":null,"customfield_12310222":null,"customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-963/watchers","watchCount":8,"isWatching":false},"created":"2015-07-27T09:47:36.006+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["multilang"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329548","id":"12329548","name":"0.9.4","archived":false,"released":true,"releaseDate":"2015-03-25"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12332476","id":"12332476","name":"0.9.5","archived":false,"released":true,"releaseDate":"2015-06-04"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12333021","id":"12333021","name":"0.9.6","archived":false,"released":true,"releaseDate":"2015-11-05"}],"customfield_12312339":null,"issuelinks":[{"id":"12433625","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12433625","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12787168","key":"STORM-742","self":"https://issues.apache.org/jira/rest/api/2/issue/12787168","fields":{"summary":"Very busy ShellBolt subprocess with ACK mode cannot respond heartbeat just in time","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-03-05T02:42:50.651+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12324393","id":"12324393","name":"storm-kafka","description":"Storm Kafka Integration"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12327951","id":"12327951","name":"storm-multilang","description":"Storm integration with other programming languages"}],"timeoriginalestimate":null,"description":"Hi,\n\nWe've got a pretty simple topology running with Storm 0.9.5 (tried also with 0.9.4 and 0.9.6-INCUBATING) in a 3 machine cluster:\n\n{code}kafkaSpout (3) -----> processBolt (12){code}\n\nSome info:\n- kafkaSpout reads from a topic with 3 partitions and 2 replications\n- processBolt iterates throught the message and saves the results in MongoDB\n- processBolt is implemented in Python and has a storm.log(\"I'm doing something\") just to add a simple debug message in the logs\n- The messages can be quite big (~25-40 MB) and are in JSON format\n- The kafka topic has a retention of 2 hours\n- We use the same ZooKeeper cluster to both Kafka and Storm\n\nThe topology gets frozen after several hours (not days) running. We don't see any message in the logs... In fact, the periodic message from s.k.KafkaUtils and s.k.ZkCoordinator disapears. As you can imagine, the message from the Bolt also dissapears. Logs are copy/pasted further on. If we redeploy the topology everything starts to work again until it becomes frozen again.\n\nOur kafkaSpout config is:\n\n{code}\nZkHosts zkHosts = new ZkHosts(\"zkhost01:2181,zkhost02:2181,zkhost03:2181\");\nSpoutConfig kafkaConfig = new SpoutConfig(zkHosts, \"topic\", \"/topic/ourclientid\", \"ourclientid\");\nkafkaConfig.scheme = new SchemeAsMultiScheme(new StringScheme());\nkafkaConfig.fetchSizeBytes = 50*1024*1024;\nkafkaConfig.bufferSizeBytes = 50*1024*1024;\n{code}\n\nWe've also tried setting the following options\n\n{code}\nkafkaConfig.forceFromStart = true;\nkafkaConfig.startOffsetTime = kafka.api.OffsetRequest.EarliestTime(); // Also with kafka.api.OffsetRequest.LatestTime();\nkafkaConfig.useStartOffsetTimeIfOffsetOutOfRange = true;\n{code}\n\nRight now the topology is running without acking the messages since there's a bug in kafkaSpout with failed messages and deleted offsets in Kafka.\n\nThis is what can be seen in the logs in one of the workers:\n\n{code}\n2015-07-23T12:37:38.008+0200 b.s.t.ShellBolt [INFO] ShellLog pid:28364, name:processBolt I'm doing something\n2015-07-23T12:37:39.079+0200 b.s.t.ShellBolt [INFO] ShellLog pid:28364, name:processBolt I'm doing something\n2015-07-23T12:37:51.013+0200 b.s.t.ShellBolt [INFO] ShellLog pid:28364, name:processBolt I'm doing something\n2015-07-23T12:37:51.091+0200 b.s.t.ShellBolt [INFO] ShellLog pid:28364, name:processBolt I'm doing something\n2015-07-23T12:38:02.684+0200 s.k.ZkCoordinator [INFO] Task [2/3] Refreshing partition manager connections\n2015-07-23T12:38:02.687+0200 s.k.DynamicBrokersReader [INFO] Read partition info from zookeeper: GlobalPartitionInformation{partitionMap={0=kafka1:9092, 1=kafka2:9092, 2=kafka3:9092}}\n2015-07-23T12:38:02.687+0200 s.k.KafkaUtils [INFO] Task [2/3] assigned [Partition{host=kafka2, partition=1}]\n2015-07-23T12:38:02.687+0200 s.k.ZkCoordinator [INFO] Task [2/3] Deleted partition managers: []\n2015-07-23T12:38:02.687+0200 s.k.ZkCoordinator [INFO] Task [2/3] New partition managers: []\n2015-07-23T12:38:02.687+0200 s.k.ZkCoordinator [INFO] Task [2/3] Finished refreshing\n2015-07-23T12:38:09.012+0200 b.s.t.ShellBolt [INFO] ShellLog pid:28364, name:processBolt I'm doing something\n2015-07-23T12:38:41.878+0200 b.s.t.ShellBolt [INFO] ShellLog pid:28364, name:processBolt I'm doing something\n2015-07-23T12:39:02.688+0200 s.k.ZkCoordinator [INFO] Task [2/3] Refreshing partition manager connections\n2015-07-23T12:39:02.691+0200 s.k.DynamicBrokersReader [INFO] Read partition info from zookeeper: GlobalPartitionInformation{partitionMap={0=kafka1:9092, 1=kafka2:9092, 2=kafka3:9092}}\n2015-07-23T12:39:02.691+0200 s.k.KafkaUtils [INFO] Task [2/3] assigned [Partition{host=kafka2:9092, partition=1}]\n2015-07-23T12:39:02.691+0200 s.k.ZkCoordinator [INFO] Task [2/3] Deleted partition managers: []\n2015-07-23T12:39:02.691+0200 s.k.ZkCoordinator [INFO] Task [2/3] New partition managers: []\n2015-07-23T12:39:02.691+0200 s.k.ZkCoordinator [INFO] Task [2/3] Finished refreshing\n2015-07-23T12:40:02.692+0200 s.k.ZkCoordinator [INFO] Task [2/3] Refreshing partition manager connections\n2015-07-23T12:40:02.695+0200 s.k.DynamicBrokersReader [INFO] Read partition info from zookeeper: GlobalPartitionInformation{partitionMap={0=kafka1:9092, 1=kafka2:9092, 2=kafka3:9092}}\n2015-07-23T12:40:02.695+0200 s.k.KafkaUtils [INFO] Task [2/3] assigned [Partition{host=kafka2:9092, partition=1}]\n2015-07-23T12:40:02.695+0200 s.k.ZkCoordinator [INFO] Task [2/3] Deleted partition managers: []\n2015-07-23T12:40:02.695+0200 s.k.ZkCoordinator [INFO] Task [2/3] New partition managers: []\n2015-07-23T12:40:02.695+0200 s.k.ZkCoordinator [INFO] Task [2/3] Finished refreshing\n2015-07-23T12:41:02.696+0200 s.k.ZkCoordinator [INFO] Task [2/3] Refreshing partition manager connections\n2015-07-23T12:41:02.699+0200 s.k.DynamicBrokersReader [INFO] Read partition info from zookeeper: GlobalPartitionInformation{partitionMap={0=kafka1:9092, 1=kafka2:9092, 2=kafka3:9092}}\n2015-07-23T12:41:02.699+0200 s.k.KafkaUtils [INFO] Task [2/3] assigned [Partition{host=kafka2:9092, partition=1}]\n2015-07-23T12:41:02.699+0200 s.k.ZkCoordinator [INFO] Task [2/3] Deleted partition managers: []\n2015-07-23T12:41:02.699+0200 s.k.ZkCoordinator [INFO] Task [2/3] New partition managers: []\n2015-07-23T12:41:02.699+0200 s.k.ZkCoordinator [INFO] Task [2/3] Finished refreshing\n2015-07-23T12:42:02.735+0200 s.k.ZkCoordinator [INFO] Task [2/3] Refreshing partition manager connections\n2015-07-23T12:42:02.737+0200 s.k.DynamicBrokersReader [INFO] Read partition info from zookeeper: GlobalPartitionInformation{partitionMap={0=kafka1:9092, 1=kafka2:9092, 2=kafka3:9092}}\n2015-07-23T12:42:02.737+0200 s.k.KafkaUtils [INFO] Task [2/3] assigned [Partition{host=kafka2:9092, partition=1}]\n2015-07-23T12:42:02.737+0200 s.k.ZkCoordinator [INFO] Task [2/3] Deleted partition managers: []\n2015-07-23T12:42:02.737+0200 s.k.ZkCoordinator [INFO] Task [2/3] New partition managers: []\n2015-07-23T12:42:02.737+0200 s.k.ZkCoordinator [INFO] Task [2/3] Finished refreshing\n{code}\n\nand then it becomes frozen. Nothing is written into the nimbus log. We've checked the offsets in ZooKeeper and they're not updated:\n\n{code}\n{\"topology\":{\"id\":\"218e58a5-6bfb-4b32-ae89-f3afa19306e1\",\"name\":\"our-topology\"},\"offset\":12047144,\"partition\":1,\"broker\":{\"host\":\"kafka2\",\"port\":9092},\"topic\":\"topic\"}\ncZxid = 0x100028958\nctime = Wed Jul 01 12:22:36 CEST 2015\nmZxid = 0x100518527\nmtime = Thu Jul 23 12:42:41 CEST 2015\npZxid = 0x100028958\ncversion = 0\ndataVersion = 446913\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 183\nnumChildren = 0\n{code}\n\n\nAny ideas of what we could be missing?\n\nPS: This was sent to the Storm user's mailing list and got 0 replies :\\","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12766869","id":"12766869","filename":"dump","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=darsh221","name":"darsh221","key":"darsh221","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"darsh221","active":true,"timeZone":"Etc/UTC"},"created":"2015-10-15T20:24:28.107+0000","size":246836,"mimeType":"text/html","content":"https://issues.apache.org/jira/secure/attachment/12766869/dump"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12751047","id":"12751047","filename":"jstack.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhishek.agarwal","name":"abhishek.agarwal","key":"abhishek.agarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Abhishek Agarwal","active":true,"timeZone":"Asia/Kolkata"},"created":"2015-08-18T15:12:49.224+0000","size":99794,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12751047/jstack.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12791593","id":"12791593","filename":"jstack-bopcat.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bopcat","name":"bopcat","key":"bopcat","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kirill Prasalov","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-05T02:41:31.842+0000","size":46547,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12791593/jstack-bopcat.txt"}],"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Frozen topology (KafkaSpout + Multilang bolt)","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":"- VMware ESX 5.5 \n- Ubuntu Server 14.04 LTS (kernel 3.16.0-41-generic)\n- Java (TM) SE Runtime Environment (build 1.8.0_45-b14)\n- Python 2.7.6 (default, Jun 22 2015, 17:58:13)\n- Zookeeper 3.4.6","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14648578","id":"14648578","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Could you reproduce this issue every time?\nWhen circumstance appears again, could you dump each worker processes including subprocess?\n(Dumping worker process can be done with jstack <PID>, dumping python process can be done with kill -SIGABRT <PID>.)\n\nYou may can't get multilang subprocess's dump since it is redirected to ShellBolt worker's stdin.\n\nDump log could help us.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2015-07-31T01:02:59.937+0000","updated":"2015-07-31T01:02:59.937+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14651841","id":"14651841","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"body":"Hi [~kabhwan],\n\nWe're not able to reproduce it when we want. It just happens every now and then, but it's quite frequent, so we're able to provide some test results.\n\nExecuting {{kill -SIGABRT <PID>}} in one of the Python processes writes this into the worker's log:\n\n{code}\n2015-08-03T14:41:30.315+0200 b.s.t.ShellBolt [ERROR] Halting process: ShellBolt died.\njava.lang.RuntimeException: subprocess heartbeat timeout\n\tat backtype.storm.task.ShellBolt$BoltHeartbeatTimerTask.run(ShellBolt.java:305) [storm-core-0.9.5.jar:0.9.5]\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_45]\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [na:1.8.0_45]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_45]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [na:1.8.0_45]\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_45]\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_45]\n\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\n2015-08-03T14:41:30.315+0200 b.s.d.executor [ERROR] \njava.lang.RuntimeException: subprocess heartbeat timeout\n\tat backtype.storm.task.ShellBolt$BoltHeartbeatTimerTask.run(ShellBolt.java:305) [storm-core-0.9.5.jar:0.9.5]\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_45]\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [na:1.8.0_45]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_45]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [na:1.8.0_45]\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_45]\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_45]\n\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\n2015-08-03T14:41:30.317+0200 b.s.t.ShellBolt [ERROR] Halting process: ShellBolt died.\njava.lang.RuntimeException: backtype.storm.multilang.NoOutputException: Pipe to subprocess seems to be broken! No output read.\nSerializer Exception:\n\n\n\tat backtype.storm.utils.ShellProcess.readShellMsg(ShellProcess.java:101) ~[storm-core-0.9.5.jar:0.9.5]\n\tat backtype.storm.task.ShellBolt$BoltReaderRunnable.run(ShellBolt.java:318) ~[storm-core-0.9.5.jar:0.9.5]\n\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\n2015-08-03T14:41:30.318+0200 b.s.d.executor [ERROR] \njava.lang.RuntimeException: backtype.storm.multilang.NoOutputException: Pipe to subprocess seems to be broken! No output read.\nSerializer Exception:\n\n\n\tat backtype.storm.utils.ShellProcess.readShellMsg(ShellProcess.java:101) ~[storm-core-0.9.5.jar:0.9.5]\n\tat backtype.storm.task.ShellBolt$BoltReaderRunnable.run(ShellBolt.java:318) ~[storm-core-0.9.5.jar:0.9.5]\n\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\n2015-08-03T14:41:30.320+0200 b.s.t.ShellBolt [ERROR] Halting process: ShellBolt died.\njava.io.IOException: Broken pipe\n\tat java.io.FileOutputStream.writeBytes(Native Method) ~[na:1.8.0_45]\n\tat java.io.FileOutputStream.write(FileOutputStream.java:326) ~[na:1.8.0_45]\n\tat java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82) ~[na:1.8.0_45]\n\tat java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140) ~[na:1.8.0_45]\n\tat java.io.DataOutputStream.flush(DataOutputStream.java:123) ~[na:1.8.0_45]\n\tat backtype.storm.multilang.JsonSerializer.writeString(JsonSerializer.java:96) ~[storm-core-0.9.5.jar:0.9.5]\n\tat backtype.storm.multilang.JsonSerializer.writeMessage(JsonSerializer.java:89) ~[storm-core-0.9.5.jar:0.9.5]\n\tat backtype.storm.multilang.JsonSerializer.writeBoltMsg(JsonSerializer.java:74) ~[storm-core-0.9.5.jar:0.9.5]\n\tat backtype.storm.utils.ShellProcess.writeBoltMsg(ShellProcess.java:106) ~[storm-core-0.9.5.jar:0.9.5]\n\tat backtype.storm.task.ShellBolt$BoltWriterRunnable.run(ShellBolt.java:355) ~[storm-core-0.9.5.jar:0.9.5]\n\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\n2015-08-03T14:41:30.320+0200 b.s.d.executor [ERROR] \njava.io.IOException: Broken pipe\n\tat java.io.FileOutputStream.writeBytes(Native Method) ~[na:1.8.0_45]\n\tat java.io.FileOutputStream.write(FileOutputStream.java:326) ~[na:1.8.0_45]\n\tat java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82) ~[na:1.8.0_45]\n\tat java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140) ~[na:1.8.0_45]\n\tat java.io.DataOutputStream.flush(DataOutputStream.java:123) ~[na:1.8.0_45]\n\tat backtype.storm.multilang.JsonSerializer.writeString(JsonSerializer.java:96) ~[storm-core-0.9.5.jar:0.9.5]\n\tat backtype.storm.multilang.JsonSerializer.writeMessage(JsonSerializer.java:89) ~[storm-core-0.9.5.jar:0.9.5]\n\tat backtype.storm.multilang.JsonSerializer.writeBoltMsg(JsonSerializer.java:74) ~[storm-core-0.9.5.jar:0.9.5]\n\tat backtype.storm.utils.ShellProcess.writeBoltMsg(ShellProcess.java:106) ~[storm-core-0.9.5.jar:0.9.5]\n\tat backtype.storm.task.ShellBolt$BoltWriterRunnable.run(ShellBolt.java:355) ~[storm-core-0.9.5.jar:0.9.5]\n\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\n2015-08-03T14:41:30.357+0200 b.s.d.worker [INFO] Shutting down worker my-topology-47-1438604011 63b8c93e-7d6e-4d67-b4f8-957c9650e7ba 6700\n2015-08-03T14:41:30.358+0200 b.s.m.n.Client [INFO] closing Netty Client Netty-Client-vm05.v5tech.local/172.28.69.111:6700\n2015-08-03T14:41:30.358+0200 b.s.m.n.Client [INFO] waiting up to 600000 ms to send 0 pending messages to Netty-Client-vm05.v5tech.local/172.28.69.111:6700\n2015-08-03T14:41:30.359+0200 b.s.m.n.Client [INFO] closing Netty Client Netty-Client-vm05.v5tech.local/172.28.69.111:6701\n2015-08-03T14:41:30.360+0200 b.s.m.n.Client [INFO] waiting up to 600000 ms to send 0 pending messages to Netty-Client-vm05.v5tech.local/172.28.69.111:6701\n2015-08-03T14:41:30.360+0200 b.s.d.worker [INFO] Shutting down receive thread\n2015-08-03T14:41:30.360+0200 b.s.m.n.Client [INFO] creating Netty Client, connecting to localhost:6700, bufferSize: 5242880\n2015-08-03T14:41:30.360+0200 o.a.s.c.r.ExponentialBackoffRetry [WARN] maxRetries too large (300). Pinning to 29\n2015-08-03T14:41:30.360+0200 b.s.u.StormBoundedExponentialBackoffRetry [INFO] The baseSleepTimeMs [100] the maxSleepTimeMs [1000] the maxRetries [300]\n2015-08-03T14:41:30.360+0200 b.s.m.n.Client [INFO] connection attempt 1 to Netty-Client-localhost/127.0.0.1:6700 scheduled to run in 0 ms\n2015-08-03T14:41:30.361+0200 b.s.m.loader [INFO] Shutting down receiving-thread: [my-topology-47-1438604011, 6700]\n2015-08-03T14:41:30.361+0200 b.s.m.n.Client [ERROR] connection to Netty-Client-localhost/127.0.0.1:6700 is unavailable\n2015-08-03T14:41:30.361+0200 b.s.m.n.Client [ERROR] dropping 1 message(s) destined for Netty-Client-localhost/127.0.0.1:6700\n2015-08-03T14:41:30.361+0200 b.s.m.n.Client [INFO] closing Netty Client Netty-Client-localhost/127.0.0.1:6700\n2015-08-03T14:41:30.361+0200 b.s.m.n.Client [INFO] waiting up to 600000 ms to send 0 pending messages to Netty-Client-localhost/127.0.0.1:6700\n2015-08-03T14:41:30.361+0200 b.s.m.loader [INFO] Waiting for receiving-thread:[my-topology-47-1438604011, 6700] to die\n2015-08-03T14:41:30.365+0200 b.s.m.n.Client [INFO] connection established to Netty-Client-localhost/127.0.0.1:6700\n2015-08-03T14:41:30.366+0200 b.s.m.loader [INFO] Shutdown receiving-thread: [my-topology-47-1438604011, 6700]\n2015-08-03T14:41:30.366+0200 b.s.d.worker [INFO] Shut down receive thread\n2015-08-03T14:41:30.366+0200 b.s.d.worker [INFO] Terminating messaging context\n2015-08-03T14:41:30.366+0200 b.s.d.worker [INFO] Shutting down executors\n2015-08-03T14:41:30.368+0200 b.s.d.executor [INFO] Shutting down executor processBolt:[2 2]\n2015-08-03T14:41:30.368+0200 b.s.util [INFO] Async loop interrupted!\n2015-08-03T14:41:30.368+0200 b.s.util [INFO] Async loop interrupted!\n2015-08-03T14:41:30.370+0200 b.s.d.executor [INFO] Shut down executor processBolt:[2 2]\n2015-08-03T14:41:30.370+0200 b.s.d.executor [INFO] Shutting down executor processBolt:[5 5]\n2015-08-03T14:41:30.371+0200 b.s.util [INFO] Async loop interrupted!\n{code}\n\nIn the supervisor's log:\n\n{code}\n2015-08-03T14:42:01.542+0200 b.s.d.supervisor [INFO] Shutting down and clearing state for id f2111c3b-31e5-4e72-b16b-ff5897148844. Current supervisor time: 1438605721. State: :timed-out, Heartbeat: #backtype.storm.daemon.common.WorkerHeartbeat{:time-secs 1438605690, :storm-id \"my-topology-47-1438604011\", :executors #{[2 2] [5 5] [8 8] [11 11] [14 14] [-1 -1]}, :port 6700}\n2015-08-03T14:42:01.542+0200 b.s.d.supervisor [INFO] Shutting down 63b8c93e-7d6e-4d67-b4f8-957c9650e7ba:f2111c3b-31e5-4e72-b16b-ff5897148844\n2015-08-03T14:42:01.544+0200 b.s.util [INFO] Error when trying to kill 63473. Process is probably already dead.\n2015-08-03T14:42:01.546+0200 b.s.util [INFO] Error when trying to kill 63466. Process is probably already dead.\n2015-08-03T14:42:01.548+0200 b.s.util [INFO] Error when trying to kill 63481. Process is probably already dead.\n2015-08-03T14:42:01.549+0200 b.s.util [INFO] Error when trying to kill 63465. Process is probably already dead.\n2015-08-03T14:42:01.554+0200 b.s.util [INFO] Error when trying to kill 63414. Process is probably already dead.\n2015-08-03T14:42:02.556+0200 b.s.util [INFO] Error when trying to kill 63473. Process is probably already dead.\n2015-08-03T14:42:02.558+0200 b.s.util [INFO] Error when trying to kill 63466. Process is probably already dead.\n2015-08-03T14:42:02.562+0200 b.s.util [INFO] Error when trying to kill 63481. Process is probably already dead.\n2015-08-03T14:42:02.563+0200 b.s.util [INFO] Error when trying to kill 63465. Process is probably already dead.\n2015-08-03T14:42:02.566+0200 b.s.util [INFO] Error when trying to kill 63414. Process is probably already dead.\n2015-08-03T14:42:02.569+0200 b.s.d.supervisor [INFO] Shut down 63b8c93e-7d6e-4d67-b4f8-957c9650e7ba:f2111c3b-31e5-4e72-b16b-ff5897148844\n2015-08-03T14:42:02.570+0200 b.s.d.supervisor [INFO] Launching worker with assignment #backtype.storm.daemon.supervisor.LocalAssignment{:storm-id \"my-topology-47-1438604011\", :executors ([2 2] [5 5] [8 8] [11 11] [14 14])} for this supervisor 63b8c93e-7d6e-4d67-b4f8-957c9650e7ba on port 6700 with id e75a75ff-2eed-430d-bd77-8cd707667b1d\n2015-08-03T14:42:02.571+0200 b.s.d.supervisor [INFO] Launching worker with command: '/opt/java/latest/bin/java' '-server' '-Xmx6144m' '-Djava.library.path=/var/lib/storm/supervisor/stormdist/my-topology-47-1438604011/resources/Linux-amd64:/var/lib/storm/supervisor/stormdist/my-topology-47-1438604011/resources:/usr/local/lib:/opt/local/lib:/usr/lib' '-Dlogfile.name=worker-6700.log' '-Dstorm.home=/opt/mydir/apache-storm-0.9.5' '-Dstorm.conf.file=' '-Dstorm.options=' '-Dstorm.log.dir=/opt/mydir/apache-storm-0.9.5/logs' '-Dlogback.configurationFile=/opt/mydir/apache-storm-0.9.5/logback/cluster.xml' '-Dstorm.id=my-topology-47-1438604011' '-Dworker.id=e75a75ff-2eed-430d-bd77-8cd707667b1d' '-Dworker.port=6700' '-cp' '/opt/mydir/apache-storm-0.9.5/lib/minlog-1.2.jar:/opt/mydir/apache-storm-0.9.5/lib/carbonite-1.4.0.jar:/opt/mydir/apache-storm-0.9.5/lib/json-simple-1.1.jar:/opt/mydir/apache-storm-0.9.5/lib/slf4j-api-1.7.5.jar:/opt/mydir/apache-storm-0.9.5/lib/kryo-2.21.jar:/opt/mydir/apache-storm-0.9.5/lib/tools.logging-0.2.3.jar:/opt/mydir/apache-storm-0.9.5/lib/ring-servlet-0.3.11.jar:/opt/mydir/apache-storm-0.9.5/lib/tools.cli-0.2.4.jar:/opt/mydir/apache-storm-0.9.5/lib/disruptor-2.10.1.jar:/opt/mydir/apache-storm-0.9.5/lib/clj-stacktrace-0.2.2.jar:/opt/mydir/apache-storm-0.9.5/lib/math.numeric-tower-0.0.1.jar:/opt/ymdir/apache-storm-0.9.5/lib/ring-jetty-adapter-0.3.11.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-io-2.4.jar:/opt/mydir/apache-storm-0.9.5/lib/servlet-api-2.5.jar:/opt/mydir/apache-storm-0.9.5/lib/log4j-over-slf4j-1.6.6.jar:/opt/mydir/apache-storm-0.9.5/lib/core.incubator-0.1.0.jar:/opt/mydir/apache-storm-0.9.5/lib/asm-4.0.jar:/opt/mydir/apache-storm-0.9.5/lib/hiccup-0.3.6.jar:/opt/mydir/apache-storm-0.9.5/lib/jetty-util-6.1.26.jar:/opt/mydir/apache-storm-0.9.5/lib/tools.macro-0.1.0.jar:/opt/mydir/apache-storm-0.9.5/lib/ring-devel-0.3.11.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-exec-1.1.jar:/opt/mydir/apache-storm-0.9.5/lib/ring-core-1.1.5.jar:/opt/mydir/apache-storm-0.9.5/lib/clout-1.0.1.jar:/opt/mydir/apache-storm-0.9.5/lib/jetty-6.1.26.jar:/opt/mydir/apache-storm-0.9.5/lib/objenesis-1.2.jar:/opt/mydir/apache-storm-0.9.5/lib/logback-core-1.0.13.jar:/opt/mydir/apache-storm-0.9.5/lib/jgrapht-core-0.9.0.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-codec-1.6.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-lang-2.5.jar:/opt/mydir/apache-storm-0.9.5/lib/clojure-1.5.1.jar:/opt/mydir/apache-storm-0.9.5/lib/storm-core-0.9.5.jar:/opt/mydir/apache-storm-0.9.5/lib/chill-java-0.3.5.jar:/opt/mydir/apache-storm-0.9.5/lib/reflectasm-1.07-shaded.jar:/opt/mydir/apache-storm-0.9.5/lib/joda-time-2.0.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-logging-1.1.3.jar:/opt/mydir/apache-storm-0.9.5/lib/compojure-1.1.3.jar:/opt/mydir/apache-storm-0.9.5/lib/clj-time-0.4.1.jar:/opt/mydir/apache-storm-0.9.5/lib/jline-2.11.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-fileupload-1.2.1.jar:/opt/mydir/apache-storm-0.9.5/lib/logback-classic-1.0.13.jar:/opt/mydir/apache-storm-0.9.5/lib/snakeyaml-1.11.jar:/opt/mydir/apache-storm-0.9.5/conf:/var/lib/storm/supervisor/stormdist/my-topology-47-1438604011/stormjar.jar' 'backtype.storm.daemon.worker' 'my-topology-47-1438604011' '63b8c93e-7d6e-4d67-b4f8-957c9650e7ba' '6700' 'e75a75ff-2eed-430d-bd77-8cd707667b1d'\n2015-08-03T14:42:02.571+0200 b.s.d.supervisor [INFO] e75a75ff-2eed-430d-bd77-8cd707667b1d still hasn't started\n2015-08-03T14:42:03.072+0200 b.s.d.supervisor [INFO] e75a75ff-2eed-430d-bd77-8cd707667b1d still hasn't started\n2015-08-03T14:42:03.572+0200 b.s.d.supervisor [INFO] e75a75ff-2eed-430d-bd77-8cd707667b1d still hasn't started\n{code}\n\nAnd nimbus' log:\n\n{code}\n2015-08-03T14:42:03.959+0200 b.s.d.nimbus [INFO] Executor my-topology-47-1438604011:[2 2] not alive\n2015-08-03T14:42:03.959+0200 b.s.d.nimbus [INFO] Executor my-topology-47-1438604011:[5 5] not alive\n2015-08-03T14:42:03.959+0200 b.s.d.nimbus [INFO] Executor my-topology-47-1438604011:[8 8] not alive\n2015-08-03T14:42:03.959+0200 b.s.d.nimbus [INFO] Executor my-topology-47-1438604011:[11 11] not alive\n2015-08-03T14:42:03.959+0200 b.s.d.nimbus [INFO] Executor my-topology-47-1438604011:[14 14] not alive\n2015-08-03T14:42:03.964+0200 b.s.s.EvenScheduler [INFO] Available slots: ([\"3e795735-aa1d-483d-8140-1faa9eb9161c\" 6702] [\"3e795735-aa1d-483d-8140-1faa9eb9161c\" 6703] [\"63b8c93e-7d6e-4d67-b4f8-957c9650e7ba\" 6701] [\"63b8c93e-7d6e-4d67-b4f8-957c9650e7ba\" 6702] [\"63b8c93e-7d6e-4d67-b4f8-957c9650e7ba\" 6703] [\"1dbdec2d-9e91-42e5-beac-2f2848667e14\" 6700] [\"1dbdec2d-9e91-42e5-beac-2f2848667e14\" 6701] [\"1dbdec2d-9e91-42e5-beac-2f2848667e14\" 6702] [\"1dbdec2d-9e91-42e5-beac-2f2848667e14\" 6703])\n2015-08-03T14:42:03.964+0200 b.s.d.nimbus [INFO] Reassigning my-topology-47-1438604011 to 3 slots\n2015-08-03T14:42:03.964+0200 b.s.d.nimbus [INFO] Reassign executors: [[2 2] [5 5] [8 8] [11 11] [14 14]]\n2015-08-03T14:42:03.969+0200 b.s.d.nimbus [INFO] Setting new assignment for topology id my-topology-47-1438604011: #backtype.storm.daemon.common.Assignment{:master-code-dir \"/var/lib/storm/nimbus/stormdist/my-topology-47-1438604011\", :node->host {\"1dbdec2d-9e91-42e5-beac-2f2848667e14\" \"vm06.v5tech.local\", \"3e795735-aa1d-483d-8140-1faa9eb9161c\" \"vm05.v5tech.local\"}, :executor->node+port {[2 2] [\"1dbdec2d-9e91-42e5-beac-2f2848667e14\" 6700], [3 3] [\"3e795735-aa1d-483d-8140-1faa9eb9161c\" 6700], [4 4] [\"3e795735-aa1d-483d-8140-1faa9eb9161c\" 6701], [5 5] [\"1dbdec2d-9e91-42e5-beac-2f2848667e14\" 6700], [6 6] [\"3e795735-aa1d-483d-8140-1faa9eb9161c\" 6700], [7 7] [\"3e795735-aa1d-483d-8140-1faa9eb9161c\" 6701], [8 8] [\"1dbdec2d-9e91-42e5-beac-2f2848667e14\" 6700], [9 9] [\"3e795735-aa1d-483d-8140-1faa9eb9161c\" 6700], [10 10] [\"3e795735-aa1d-483d-8140-1faa9eb9161c\" 6701], [11 11] [\"1dbdec2d-9e91-42e5-beac-2f2848667e14\" 6700], [12 12] [\"3e795735-aa1d-483d-8140-1faa9eb9161c\" 6700], [13 13] [\"3e795735-aa1d-483d-8140-1faa9eb9161c\" 6701], [14 14] [\"1dbdec2d-9e91-42e5-beac-2f2848667e14\" 6700], [15 15] [\"3e795735-aa1d-483d-8140-1faa9eb9161c\" 6700], [1 1] [\"3e795735-aa1d-483d-8140-1faa9eb9161c\" 6701]}, :executor->start-time-secs {[2 2] 1438605723, [3 3] 1438605182, [4 4] 1438605573, [5 5] 1438605723, [6 6] 1438605182, [7 7] 1438605573, [8 8] 1438605723, [9 9] 1438605182, [10 10] 1438605573, [11 11] 1438605723, [12 12] 1438605182, [13 13] 1438605573, [14 14] 1438605723, [15 15] 1438605182, [1 1] 1438605573}}\n{code}\n\nBasically, it rebalances the topology removing the node where we executed the {{kill}} command. That produces a lot of error messages and some Netty related stuff. After that, everything seems to work again. In fact, we can rebalance again the topology (via UI) and everything works fine for a random amount of time (minutes or hours).\n\nRight now, after 15 min, it's frozen and we don't find a single line in the logs:\n\n{code}\n2015-08-03T14:51:22.028+0200 b.s.t.ShellBolt [INFO] ShellLog pid:64304, name:processBolt I'm doing something\n2015-08-03T14:51:50.981+0200 b.s.t.ShellBolt [INFO] ShellLog pid:64304, name:processBolt I'm doing something\n2015-08-03T14:51:51.211+0200 b.s.t.ShellBolt [INFO] ShellLog pid:64304, name:processBolt I'm doing something\n2015-08-03T14:51:52.289+0200 b.s.t.ShellBolt [INFO] ShellLog pid:64304, name:processBolt I'm doing something\n2015-08-03T14:51:58.181+0200 s.k.ZkCoordinator [INFO] Task [3/3] Refreshing partition manager connections\n2015-08-03T14:51:58.183+0200 s.k.DynamicBrokersReader [INFO] Read partition info from zookeeper: GlobalPartitionInformation{partitionMap={0=kafka1:9092, 1=kafka2:9092, 2=kafka3:9092}}\n2015-08-03T14:51:58.183+0200 s.k.KafkaUtils [INFO] Task [3/3] assigned [Partition{host=kafka3:9092, partition=2}]\n2015-08-03T14:51:58.183+0200 s.k.ZkCoordinator [INFO] Task [3/3] Deleted partition managers: []\n2015-08-03T14:51:58.183+0200 s.k.ZkCoordinator [INFO] Task [3/3] New partition managers: []\n2015-08-03T14:51:58.183+0200 s.k.ZkCoordinator [INFO] Task [3/3] Finished refreshing\n2015-08-03T14:52:22.251+0200 b.s.t.ShellBolt [INFO] ShellLog pid:64304, name:processBolt I'm doing something\n2015-08-03T14:52:22.278+0200 b.s.t.ShellBolt [INFO] ShellLog pid:64304, name:processBolt I'm doing something\n2015-08-03T14:52:22.289+0200 b.s.t.ShellBolt [INFO] ShellLog pid:64304, name:processBolt I'm doing something\n\n2015-08-03T14:52:58.184+0200 s.k.ZkCoordinator [INFO] Task [3/3] Refreshing partition manager connections\n2015-08-03T14:52:58.187+0200 s.k.DynamicBrokersReader [INFO] Read partition info from zookeeper: GlobalPartitionInformation{partitionMap={0=kafka1:9092, 1=kafka2:9092, 2=kafka3:9092}}\n2015-08-03T14:52:58.187+0200 s.k.KafkaUtils [INFO] Task [3/3] assigned [Partition{host=kafka12.v5tech.local:9092, partition=2}]\n2015-08-03T14:52:58.187+0200 s.k.ZkCoordinator [INFO] Task [3/3] Deleted partition managers: []\n2015-08-03T14:52:58.187+0200 s.k.ZkCoordinator [INFO] Task [3/3] New partition managers: []\n2015-08-03T14:52:58.187+0200 s.k.ZkCoordinator [INFO] Task [3/3] Finished refreshing\n\n\n2015-08-03T14:53:58.189+0200 s.k.ZkCoordinator [INFO] Task [3/3] Refreshing partition manager connections\n2015-08-03T14:53:58.192+0200 s.k.DynamicBrokersReader [INFO] Read partition info from zookeeper: GlobalPartitionInformation{partitionMap={0=kafka1:9092, 1=kafka2:9092, 2=kafka3:9092}}\n2015-08-03T14:53:58.193+0200 s.k.KafkaUtils [INFO] Task [3/3] assigned [Partition{host=kafka3:9092, partition=2}]\n2015-08-03T14:53:58.193+0200 s.k.ZkCoordinator [INFO] Task [3/3] Deleted partition managers: []\n2015-08-03T14:53:58.193+0200 s.k.ZkCoordinator [INFO] Task [3/3] New partition managers: []\n2015-08-03T14:53:58.193+0200 s.k.ZkCoordinator [INFO] Task [3/3] Finished refreshing\n2015-08-03T14:54:58.194+0200 s.k.ZkCoordinator [INFO] Task [3/3] Refreshing partition manager connections\n2015-08-03T14:54:58.198+0200 s.k.DynamicBrokersReader [INFO] Read partition info from zookeeper: GlobalPartitionInformation{partitionMap={0=kafka1:9092, 1=kafka2:9092, 2=kafka3:9092}}\n2015-08-03T14:54:58.199+0200 s.k.KafkaUtils [INFO] Task [3/3] assigned [Partition{host=kafka3:9092, partition=2}]\n2015-08-03T14:54:58.199+0200 s.k.ZkCoordinator [INFO] Task [3/3] Deleted partition managers: []\n2015-08-03T14:54:58.199+0200 s.k.ZkCoordinator [INFO] Task [3/3] New partition managers: []\n2015-08-03T14:54:58.199+0200 s.k.ZkCoordinator [INFO] Task [3/3] Finished refreshing\n{code}\n\nI'll add the {{jstack}} results later on.\n\nI can provide you with full logs from a fresh topology deploy if a secure upload URL is provided.\n\nHope this information helps a little bit.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"created":"2015-08-03T13:10:57.379+0000","updated":"2015-08-03T13:10:57.379+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14651850","id":"14651850","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"body":"No luck with a {{jstack}} execution:\n\n{code}\n> ps aux|grep java| grep storm | grep worker\nstorm      850 24.9 46.1 11092720 4736148 ?    Sl   15:04   3:58 /opt/java/latest/bin/java -server -Xmx6144m -Djava.library.path=/var/lib/storm/supervisor/stormdist/my-topology-48-1438607054/resources/Linux-amd64:/var/lib/storm/supervisor/stormdist/my-topology-48-1438607054/resources:/usr/local/lib:/opt/local/lib:/usr/lib -Dlogfile.name=worker-6700.log -Dstorm.home=/opt/mydir/apache-storm-0.9.5 -Dstorm.conf.file= -Dstorm.options= -Dstorm.log.dir=/opt/mydir/apache-storm-0.9.5/logs -Dlogback.configurationFile=/opt/mydir/apache-storm-0.9.5/logback/cluster.xml -Dstorm.id=my-topology-48-1438607054 -Dworker.id=3904443c-7532-4b76-a0f3-63a873bae8f0 -Dworker.port=6700 -cp /opt/mydir/apache-storm-0.9.5/lib/minlog-1.2.jar:/opt/mydir/apache-storm-0.9.5/lib/carbonite-1.4.0.jar:/opt/mydir/apache-storm-0.9.5/lib/json-simple-1.1.jar:/opt/mydir/apache-storm-0.9.5/lib/slf4j-api-1.7.5.jar:/opt/mydir/apache-storm-0.9.5/lib/kryo-2.21.jar:/opt/mydir/apache-storm-0.9.5/lib/tools.logging-0.2.3.jar:/opt/mydir/apache-storm-0.9.5/lib/ring-servlet-0.3.11.jar:/opt/mydir/apache-storm-0.9.5/lib/tools.cli-0.2.4.jar:/opt/mydir/apache-storm-0.9.5/lib/disruptor-2.10.1.jar:/opt/mydir/apache-storm-0.9.5/lib/clj-stacktrace-0.2.2.jar:/opt/mydir/apache-storm-0.9.5/lib/math.numeric-tower-0.0.1.jar:/opt/mydir/apache-storm-0.9.5/lib/ring-jetty-adapter-0.3.11.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-io-2.4.jar:/opt/mydir/apache-storm-0.9.5/lib/servlet-api-2.5.jar:/opt/mydir/apache-storm-0.9.5/lib/log4j-over-slf4j-1.6.6.jar:/opt/mydir/apache-storm-0.9.5/lib/core.incubator-0.1.0.jar:/opt/mydir/apache-storm-0.9.5/lib/asm-4.0.jar:/opt/mydir/apache-storm-0.9.5/lib/hiccup-0.3.6.jar:/opt/mydir/apache-storm-0.9.5/lib/jetty-util-6.1.26.jar:/opt/mydir/apache-storm-0.9.5/lib/tools.macro-0.1.0.jar:/opt/mydir/apache-storm-0.9.5/lib/ring-devel-0.3.11.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-exec-1.1.jar:/opt/mydir/apache-storm-0.9.5/lib/ring-core-1.1.5.jar:/opt/mydir/apache-storm-0.9.5/lib/clout-1.0.1.jar:/opt/mydir/apache-storm-0.9.5/lib/jetty-6.1.26.jar:/opt/mydir/apache-storm-0.9.5/lib/objenesis-1.2.jar:/opt/mydir/apache-storm-0.9.5/lib/logback-core-1.0.13.jar:/opt/mydir/apache-storm-0.9.5/lib/jgrapht-core-0.9.0.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-codec-1.6.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-lang-2.5.jar:/opt/mydir/apache-storm-0.9.5/lib/clojure-1.5.1.jar:/opt/mydir/apache-storm-0.9.5/lib/storm-core-0.9.5.jar:/opt/mydir/apache-storm-0.9.5/lib/chill-java-0.3.5.jar:/opt/mydir/apache-storm-0.9.5/lib/reflectasm-1.07-shaded.jar:/opt/mydir/apache-storm-0.9.5/lib/joda-time-2.0.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-logging-1.1.3.jar:/opt/mydir/apache-storm-0.9.5/lib/compojure-1.1.3.jar:/opt/mydir/apache-storm-0.9.5/lib/clj-time-0.4.1.jar:/opt/mydir/apache-storm-0.9.5/lib/jline-2.11.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-fileupload-1.2.1.jar:/opt/mydir/apache-storm-0.9.5/lib/logback-classic-1.0.13.jar:/opt/mydir/apache-storm-0.9.5/lib/snakeyaml-1.11.jar:/opt/mydir/apache-storm-0.9.5/conf:/var/lib/storm/supervisor/stormdist/my-topology-48-1438607054/stormjar.jar backtype.storm.daemon.worker my-topology-48-1438607054 63b8c93e-7d6e-4d67-b4f8-957c9650e7ba 6700 3904443c-7532-4b76-a0f3-63a873bae8f0\n\n> jstack 850\n850: Unable to open socket file: target process not responding or HotSpot VM not loaded\nThe -F option can be used when the target process is not responding\n{code}\n\nAnd after some minutes the worker process dies, as can be seen in the supervisor's log:\n\n{code}\n2015-08-03T15:20:56.584+0200 b.s.d.supervisor [INFO] Shutting down and clearing state for id 3904443c-7532-4b76-a0f3-63a873bae8f0. Current supervisor time: 1438608056. State: :timed-out, Heartbeat: #backtype.storm.daemon.common.WorkerHeartbeat{:time-secs 1438608025, :storm-id \"my-topology-48-1438607054\", :executors #{[2 2] [5 5] [8 8] [11 11] [14 14] [-1 -1]}, :port 6700}\n2015-08-03T15:20:56.584+0200 b.s.d.supervisor [INFO] Shutting down 63b8c93e-7d6e-4d67-b4f8-957c9650e7ba:3904443c-7532-4b76-a0f3-63a873bae8f0\n2015-08-03T15:20:57.606+0200 b.s.util [INFO] Error when trying to kill 936. Process is probably already dead.\n2015-08-03T15:20:57.610+0200 b.s.util [INFO] Error when trying to kill 937. Process is probably already dead.\n2015-08-03T15:20:57.618+0200 b.s.util [INFO] Error when trying to kill 938. Process is probably already dead.\n2015-08-03T15:20:57.619+0200 b.s.util [INFO] Error when trying to kill 939. Process is probably already dead.\n2015-08-03T15:20:57.623+0200 b.s.d.supervisor [INFO] Shut down 63b8c93e-7d6e-4d67-b4f8-957c9650e7ba:3904443c-7532-4b76-a0f3-63a873bae8f0\n2015-08-03T15:20:57.624+0200 b.s.d.supervisor [INFO] Launching worker with assignment #backtype.storm.daemon.supervisor.LocalAssignment{:storm-id \"my-topology-48-1438607054\", :executors ([2 2] [5 5] [8 8] [11 11] [14 14])} for this supervisor 63b8c93e-7d6e-4d67-b4f8-957c9650e7ba on port 6700 with id 22528582-09ee-411a-bfbd-65ffecd69be4\n2015-08-03T15:20:57.625+0200 b.s.d.supervisor [INFO] Launching worker with command: '/opt/java/latest/bin/java' '-server' '-Xmx6144m' '-Djava.library.path=/var/lib/storm/supervisor/stormdist/my-topology-48-1438607054/resources/Linux-amd64:/var/lib/storm/supervisor/stormdist/my-topology-48-1438607054/resources:/usr/local/lib:/opt/local/lib:/usr/lib' '-Dlogfile.name=worker-6700.log' '-Dstorm.home=/opt/mydir/apache-storm-0.9.5' '-Dstorm.conf.file=' '-Dstorm.options=' '-Dstorm.log.dir=/opt/mydir/apache-storm-0.9.5/logs' '-Dlogback.configurationFile=/opt/mydir/apache-storm-0.9.5/logback/cluster.xml' '-Dstorm.id=my-topology-48-1438607054' '-Dworker.id=22528582-09ee-411a-bfbd-65ffecd69be4' '-Dworker.port=6700' '-cp' '/opt/mydir/apache-storm-0.9.5/lib/minlog-1.2.jar:/opt/mydir/apache-storm-0.9.5/lib/carbonite-1.4.0.jar:/opt/mydir/apache-storm-0.9.5/lib/json-simple-1.1.jar:/opt/mydir/apache-storm-0.9.5/lib/slf4j-api-1.7.5.jar:/opt/mydir/apache-storm-0.9.5/lib/kryo-2.21.jar:/opt/mydir/apache-storm-0.9.5/lib/tools.logging-0.2.3.jar:/opt/mydir/apache-storm-0.9.5/lib/ring-servlet-0.3.11.jar:/opt/mydir/apache-storm-0.9.5/lib/tools.cli-0.2.4.jar:/opt/mydir/apache-storm-0.9.5/lib/disruptor-2.10.1.jar:/opt/mydir/apache-storm-0.9.5/lib/clj-stacktrace-0.2.2.jar:/opt/mydir/apache-storm-0.9.5/lib/math.numeric-tower-0.0.1.jar:/opt/mydir/apache-storm-0.9.5/lib/ring-jetty-adapter-0.3.11.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-io-2.4.jar:/opt/mydir/apache-storm-0.9.5/lib/servlet-api-2.5.jar:/opt/mydir/apache-storm-0.9.5/lib/log4j-over-slf4j-1.6.6.jar:/opt/mydir/apache-storm-0.9.5/lib/core.incubator-0.1.0.jar:/opt/mydir/apache-storm-0.9.5/lib/asm-4.0.jar:/opt/mydir/apache-storm-0.9.5/lib/hiccup-0.3.6.jar:/opt/mydir/apache-storm-0.9.5/lib/jetty-util-6.1.26.jar:/opt/mydir/apache-storm-0.9.5/lib/tools.macro-0.1.0.jar:/opt/mydir/apache-storm-0.9.5/lib/ring-devel-0.3.11.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-exec-1.1.jar:/opt/mydir/apache-storm-0.9.5/lib/ring-core-1.1.5.jar:/opt/mydir/apache-storm-0.9.5/lib/clout-1.0.1.jar:/opt/mydir/apache-storm-0.9.5/lib/jetty-6.1.26.jar:/opt/mydir/apache-storm-0.9.5/lib/objenesis-1.2.jar:/opt/mydir/apache-storm-0.9.5/lib/logback-core-1.0.13.jar:/opt/mydir/apache-storm-0.9.5/lib/jgrapht-core-0.9.0.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-codec-1.6.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-lang-2.5.jar:/opt/mydir/apache-storm-0.9.5/lib/clojure-1.5.1.jar:/opt/mydir/apache-storm-0.9.5/lib/storm-core-0.9.5.jar:/opt/mydir/apache-storm-0.9.5/lib/chill-java-0.3.5.jar:/opt/mydir/apache-storm-0.9.5/lib/reflectasm-1.07-shaded.jar:/opt/mydir/apache-storm-0.9.5/lib/joda-time-2.0.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-logging-1.1.3.jar:/opt/mydir/apache-storm-0.9.5/lib/compojure-1.1.3.jar:/opt/mydir/apache-storm-0.9.5/lib/clj-time-0.4.1.jar:/opt/mydir/apache-storm-0.9.5/lib/jline-2.11.jar:/opt/mydir/apache-storm-0.9.5/lib/commons-fileupload-1.2.1.jar:/opt/mydir/apache-storm-0.9.5/lib/logback-classic-1.0.13.jar:/opt/mydir/apache-storm-0.9.5/lib/snakeyaml-1.11.jar:/opt/mydir/apache-storm-0.9.5/conf:/var/lib/storm/supervisor/stormdist/my-topology-48-1438607054/stormjar.jar' 'backtype.storm.daemon.worker' 'my-topology-48-1438607054' '63b8c93e-7d6e-4d67-b4f8-957c9650e7ba' '6700' '22528582-09ee-411a-bfbd-65ffecd69be4'\n2015-08-03T15:20:57.626+0200 b.s.d.supervisor [INFO] 22528582-09ee-411a-bfbd-65ffecd69be4 still hasn't started\n2015-08-03T15:20:58.126+0200 b.s.d.supervisor [INFO] 22528582-09ee-411a-bfbd-65ffecd69be4 still hasn't started\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"created":"2015-08-03T13:24:20.261+0000","updated":"2015-08-03T13:24:20.261+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14651859","id":"14651859","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"jstack with -F option forces leaving thread dump. \nWhen you meet circumstance again, try jstack with -F option. It should be a good bet.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2015-08-03T13:34:49.555+0000","updated":"2015-08-03T13:34:49.555+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14651860","id":"14651860","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Could you please refer my e-mail address from profile and send full logs? Thanks in advance!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2015-08-03T13:36:20.454+0000","updated":"2015-08-03T13:36:20.454+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14654930","id":"14654930","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"body":"Hi [~kabhwan], did you reviece my email?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"created":"2015-08-05T07:16:09.470+0000","updated":"2015-08-05T07:16:09.470+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14654939","id":"14654939","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Hi Alex, sorry I forgot to respond.\nI received your email but I didn't have a time to take a look.\nI'll have a look when I have some leisure time. Thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2015-08-05T07:22:54.950+0000","updated":"2015-08-05T07:22:54.950+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14658343","id":"14658343","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"You seems not handle heartbeat tuple from multilang bolt process.\nPlease refer http://storm.apache.org/documentation/Multilang-protocol.html to how to handle heartbeat.\nstorm-multilang supports it, and AFAIK some 3rd party libraries support it.\n\nHere's related log from jstack. It calls ShellBolt.die() because of heartbeat timeout.\n{code}\nThread 3735: (state = IN_NATIVE)\n - java.io.FileInputStream.readBytes(byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.io.FileInputStream.read(byte[], int, int) @bci=4, line=255 (Compiled frame)\n - java.io.BufferedInputStream.read1(byte[], int, int) @bci=39, line=284 (Compiled frame)\n - java.io.BufferedInputStream.read(byte[], int, int) @bci=49, line=345 (Compiled frame)\n - sun.nio.cs.StreamDecoder.readBytes() @bci=135, line=284 (Compiled frame)\n - sun.nio.cs.StreamDecoder.implRead(char[], int, int) @bci=112, line=326 (Compiled frame)\n - sun.nio.cs.StreamDecoder.read(char[], int, int) @bci=180, line=178 (Compiled frame)\n - java.io.InputStreamReader.read(char[], int, int) @bci=7, line=184 (Compiled frame)\n - java.io.Reader.read(char[]) @bci=5, line=140 (Interpreted frame)\n - org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer, char[]) @bci=8, line=2001 (Interpreted frame)\n - org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer) @bci=7, line=1980 (Interpreted frame)\n - org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer) @bci=2, line=1957 (Interpreted frame)\n - org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset) @bci=15, line=1907 (Interpreted frame)\n - org.apache.commons.io.IOUtils.toString(java.io.InputStream, java.nio.charset.Charset) @bci=11, line=778 (Interpreted frame)\n - org.apache.commons.io.IOUtils.toString(java.io.InputStream) @bci=4, line=759 (Interpreted frame)\n - backtype.storm.utils.ShellProcess.getErrorsString() @bci=11, line=138 (Interpreted frame)\n - backtype.storm.utils.ShellProcess.getProcessTerminationInfoString() @bci=19, line=180 (Interpreted frame)\n - backtype.storm.task.ShellBolt.die(java.lang.Throwable) @bci=21, line=280 (Interpreted frame)\n - backtype.storm.task.ShellBolt.access$400(backtype.storm.task.ShellBolt, java.lang.Throwable) @bci=2, line=69 (Compiled frame)\n - backtype.storm.task.ShellBolt$BoltHeartbeatTimerTask.run() @bci=81, line=305 (Compiled frame)\n - java.util.concurrent.Executors$RunnableAdapter.call() @bci=4, line=511 (Compiled frame)\n - java.util.concurrent.FutureTask.runAndReset() @bci=47, line=308 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask) @bci=1, line=180 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run() @bci=37, line=294 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n{code}\n\nAnd here's related log from worker log.\n{code}\n2015-08-03T16:01:25.762+0200 b.s.t.ShellBolt [ERROR] Halting process: ShellBolt died.\njava.lang.RuntimeException: subprocess heartbeat timeout\n\tat backtype.storm.task.ShellBolt$BoltHeartbeatTimerTask.run(ShellBolt.java:305) [storm-core-0.9.5.jar:0.9.5]\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_45]\n\tat java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308) [na:1.8.0_45]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_45]\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294) [na:1.8.0_45]\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_45]\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_45]\n\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_45]\n{code}\n\nIn other words, topology is not frozen, but workers were suicided themselves cause of heartbeat timeout.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2015-08-05T15:12:20.579+0000","updated":"2015-08-05T15:12:20.579+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14658371","id":"14658371","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"body":"Hi [~kabhwan],\n\nWe're using https://github.com/apache/storm/blob/master/storm-multilang/python/src/main/resources/resources/storm.py and it handles heartbeat tuples. In fact, we're able to run the topology for hours sometimes. I don't believe it's a heartbeat problem, otherwise it'd be reproduced every time we deploy the topology.\n\nI think that heartbeat problem was caused by the {{kill -SIGABRT}} to the python process. If we don't execute the {{kill}}, that info is not present in the logs.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"created":"2015-08-05T15:28:23.735+0000","updated":"2015-08-05T15:28:23.735+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14659056","id":"14659056","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"OK, then could you run jstack when topology seems frozen, without signal to python process?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2015-08-05T22:08:46.989+0000","updated":"2015-08-05T22:08:46.989+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14659582","id":"14659582","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"body":"Sure, no problem. I'll post it here ASAP. Thanks :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"created":"2015-08-06T06:58:44.989+0000","updated":"2015-08-06T06:58:44.989+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14659799","id":"14659799","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"body":"Done. This is the result:\n\n{code}\nAttaching to process ID 7636, please wait...\nDebugger attached successfully.\nServer compiler detected.\nJVM version is 25.45-b02\nDeadlock Detection:\n\nNo deadlocks found.\n\nThread 7761: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take() @bci=100, line=1088 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take() @bci=1, line=809 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=149, line=1067 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=26, line=1127 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7760: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(long) @bci=78, line=2078 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take() @bci=124, line=1093 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take() @bci=1, line=809 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=149, line=1067 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=26, line=1127 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7759: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Interpreted frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Interpreted frame)\n - java.util.concurrent.DelayQueue.take() @bci=28, line=211 (Interpreted frame)\n - java.util.concurrent.DelayQueue.take() @bci=1, line=70 (Interpreted frame)\n - org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop() @bci=10, line=781 (Interpreted frame)\n - org.apache.curator.framework.imps.CuratorFrameworkImpl.access$400(org.apache.curator.framework.imps.CuratorFrameworkImpl) @bci=1, line=57 (Interpreted frame)\n - org.apache.curator.framework.imps.CuratorFrameworkImpl$4.call() @bci=4, line=275 (Interpreted frame)\n - java.util.concurrent.FutureTask.run() @bci=42, line=266 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7758: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Interpreted frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Interpreted frame)\n - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=442 (Interpreted frame)\n - org.apache.zookeeper.ClientCnxn$EventThread.run() @bci=9, line=494 (Interpreted frame)\n\n\nThread 7757: (state = IN_NATIVE)\n - sun.nio.ch.EPollArrayWrapper.epollWait(long, int, long, int) @bci=0 (Compiled frame; information may be imprecise)\n - sun.nio.ch.EPollArrayWrapper.poll(long) @bci=18, line=269 (Compiled frame)\n - sun.nio.ch.EPollSelectorImpl.doSelect(long) @bci=28, line=79 (Compiled frame)\n - sun.nio.ch.SelectorImpl.lockAndDoSelect(long) @bci=37, line=86 (Compiled frame)\n - sun.nio.ch.SelectorImpl.select(long) @bci=30, line=97 (Compiled frame)\n - org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(int, java.util.List, java.util.LinkedList, org.apache.zookeeper.ClientCnxn) @bci=6, line=349 (Compiled frame)\n - org.apache.zookeeper.ClientCnxn$SendThread.run() @bci=604, line=1081 (Interpreted frame)\n\n\nThread 7756: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Interpreted frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Interpreted frame)\n - java.util.concurrent.ArrayBlockingQueue.take() @bci=20, line=403 (Interpreted frame)\n - org.apache.curator.framework.state.ConnectionStateManager.processEvents() @bci=13, line=208 (Interpreted frame)\n - org.apache.curator.framework.state.ConnectionStateManager.access$000(org.apache.curator.framework.state.ConnectionStateManager) @bci=1, line=42 (Interpreted frame)\n - org.apache.curator.framework.state.ConnectionStateManager$1.call() @bci=4, line=110 (Interpreted frame)\n - java.util.concurrent.FutureTask.run() @bci=42, line=266 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7755: (state = IN_NATIVE)\n - java.io.FileInputStream.readBytes(byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.io.FileInputStream.read(byte[], int, int) @bci=4, line=255 (Compiled frame)\n - java.io.BufferedInputStream.read1(byte[], int, int) @bci=39, line=284 (Compiled frame)\n - java.io.BufferedInputStream.read(byte[], int, int) @bci=49, line=345 (Compiled frame)\n - sun.nio.cs.StreamDecoder.readBytes() @bci=135, line=284 (Compiled frame)\n - sun.nio.cs.StreamDecoder.implRead(char[], int, int) @bci=112, line=326 (Compiled frame)\n - sun.nio.cs.StreamDecoder.read(char[], int, int) @bci=180, line=178 (Compiled frame)\n - java.io.InputStreamReader.read(char[], int, int) @bci=7, line=184 (Compiled frame)\n - java.io.Reader.read(char[]) @bci=5, line=140 (Interpreted frame)\n - org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer, char[]) @bci=8, line=2001 (Interpreted frame)\n - org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer) @bci=7, line=1980 (Interpreted frame)\n - org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer) @bci=2, line=1957 (Interpreted frame)\n - org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset) @bci=15, line=1907 (Interpreted frame)\n - org.apache.commons.io.IOUtils.toString(java.io.InputStream, java.nio.charset.Charset) @bci=11, line=778 (Interpreted frame)\n - org.apache.commons.io.IOUtils.toString(java.io.InputStream) @bci=4, line=759 (Interpreted frame)\n - backtype.storm.utils.ShellProcess.getErrorsString() @bci=11, line=138 (Interpreted frame)\n - backtype.storm.utils.ShellProcess.getProcessTerminationInfoString() @bci=19, line=180 (Interpreted frame)\n - backtype.storm.task.ShellBolt.die(java.lang.Throwable) @bci=21, line=280 (Interpreted frame)\n - backtype.storm.task.ShellBolt.access$400(backtype.storm.task.ShellBolt, java.lang.Throwable) @bci=2, line=69 (Interpreted frame)\n - backtype.storm.task.ShellBolt$BoltHeartbeatTimerTask.run() @bci=81, line=305 (Interpreted frame)\n - java.util.concurrent.Executors$RunnableAdapter.call() @bci=4, line=511 (Compiled frame)\n - java.util.concurrent.FutureTask.runAndReset() @bci=47, line=308 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask) @bci=1, line=180 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run() @bci=37, line=294 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7754: (state = BLOCKED)\n - java.io.BufferedInputStream.available() @bci=0, line=409 (Compiled frame)\n - backtype.storm.utils.ShellProcess.logErrorStream() @bci=4, line=125 (Compiled frame)\n - backtype.storm.utils.ShellProcess.writeBoltMsg(backtype.storm.multilang.BoltMsg) @bci=11, line=108 (Compiled frame)\n - backtype.storm.task.ShellBolt$BoltWriterRunnable.run() @bci=108, line=361 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7753: (state = IN_NATIVE)\n - java.io.FileInputStream.readBytes(byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.io.FileInputStream.read(byte[], int, int) @bci=4, line=255 (Compiled frame)\n - java.io.BufferedInputStream.read1(byte[], int, int) @bci=39, line=284 (Compiled frame)\n - java.io.BufferedInputStream.read(byte[], int, int) @bci=49, line=345 (Compiled frame)\n - sun.nio.cs.StreamDecoder.readBytes() @bci=135, line=284 (Compiled frame)\n - sun.nio.cs.StreamDecoder.implRead(char[], int, int) @bci=112, line=326 (Compiled frame)\n - sun.nio.cs.StreamDecoder.read(char[], int, int) @bci=180, line=178 (Compiled frame)\n - java.io.InputStreamReader.read(char[], int, int) @bci=7, line=184 (Compiled frame)\n - java.io.BufferedReader.fill() @bci=145, line=161 (Compiled frame)\n - java.io.BufferedReader.readLine(boolean) @bci=44, line=324 (Compiled frame)\n - java.io.BufferedReader.readLine() @bci=2, line=389 (Compiled frame)\n - backtype.storm.multilang.JsonSerializer.readString() @bci=12, line=179 (Compiled frame)\n - backtype.storm.multilang.JsonSerializer.readMessage() @bci=1, line=166 (Compiled frame)\n - backtype.storm.multilang.JsonSerializer.readShellMsg() @bci=1, line=100 (Compiled frame)\n - backtype.storm.utils.ShellProcess.readShellMsg() @bci=4, line=99 (Compiled frame)\n - backtype.storm.task.ShellBolt$BoltReaderRunnable.run() @bci=17, line=318 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7752: (state = IN_NATIVE)\n - java.io.FileInputStream.readBytes(byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.io.FileInputStream.read(byte[], int, int) @bci=4, line=255 (Compiled frame)\n - java.io.BufferedInputStream.read1(byte[], int, int) @bci=39, line=284 (Compiled frame)\n - java.io.BufferedInputStream.read(byte[], int, int) @bci=49, line=345 (Compiled frame)\n - sun.nio.cs.StreamDecoder.readBytes() @bci=135, line=284 (Compiled frame)\n - sun.nio.cs.StreamDecoder.implRead(char[], int, int) @bci=112, line=326 (Compiled frame)\n - sun.nio.cs.StreamDecoder.read(char[], int, int) @bci=180, line=178 (Compiled frame)\n - java.io.InputStreamReader.read(char[], int, int) @bci=7, line=184 (Compiled frame)\n - java.io.Reader.read(char[]) @bci=5, line=140 (Interpreted frame)\n - org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer, char[]) @bci=8, line=2001 (Interpreted frame)\n - org.apache.commons.io.IOUtils.copyLarge(java.io.Reader, java.io.Writer) @bci=7, line=1980 (Interpreted frame)\n - org.apache.commons.io.IOUtils.copy(java.io.Reader, java.io.Writer) @bci=2, line=1957 (Interpreted frame)\n - org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, java.nio.charset.Charset) @bci=15, line=1907 (Interpreted frame)\n - org.apache.commons.io.IOUtils.toString(java.io.InputStream, java.nio.charset.Charset) @bci=11, line=778 (Interpreted frame)\n - org.apache.commons.io.IOUtils.toString(java.io.InputStream) @bci=4, line=759 (Interpreted frame)\n - backtype.storm.utils.ShellProcess.getErrorsString() @bci=11, line=138 (Interpreted frame)\n - backtype.storm.utils.ShellProcess.getProcessTerminationInfoString() @bci=19, line=180 (Interpreted frame)\n - backtype.storm.task.ShellBolt.die(java.lang.Throwable) @bci=21, line=280 (Interpreted frame)\n - backtype.storm.task.ShellBolt.access$400(backtype.storm.task.ShellBolt, java.lang.Throwable) @bci=2, line=69 (Interpreted frame)\n - backtype.storm.task.ShellBolt$BoltHeartbeatTimerTask.run() @bci=81, line=305 (Interpreted frame)\n - java.util.concurrent.Executors$RunnableAdapter.call() @bci=4, line=511 (Compiled frame)\n - java.util.concurrent.FutureTask.runAndReset() @bci=47, line=308 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask) @bci=1, line=180 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run() @bci=37, line=294 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7751: (state = BLOCKED)\n - java.io.BufferedInputStream.available() @bci=0, line=409 (Compiled frame)\n - backtype.storm.utils.ShellProcess.logErrorStream() @bci=4, line=125 (Compiled frame)\n - backtype.storm.utils.ShellProcess.writeBoltMsg(backtype.storm.multilang.BoltMsg) @bci=11, line=108 (Compiled frame)\n - backtype.storm.task.ShellBolt$BoltWriterRunnable.run() @bci=108, line=361 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7750: (state = IN_NATIVE)\n - java.io.FileInputStream.readBytes(byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.io.FileInputStream.read(byte[], int, int) @bci=4, line=255 (Compiled frame)\n - java.io.BufferedInputStream.read1(byte[], int, int) @bci=39, line=284 (Compiled frame)\n - java.io.BufferedInputStream.read(byte[], int, int) @bci=49, line=345 (Compiled frame)\n - sun.nio.cs.StreamDecoder.readBytes() @bci=135, line=284 (Compiled frame)\n - sun.nio.cs.StreamDecoder.implRead(char[], int, int) @bci=112, line=326 (Compiled frame)\n - sun.nio.cs.StreamDecoder.read(char[], int, int) @bci=180, line=178 (Compiled frame)\n - java.io.InputStreamReader.read(char[], int, int) @bci=7, line=184 (Compiled frame)\n - java.io.BufferedReader.fill() @bci=145, line=161 (Compiled frame)\n - java.io.BufferedReader.readLine(boolean) @bci=44, line=324 (Compiled frame)\n - java.io.BufferedReader.readLine() @bci=2, line=389 (Compiled frame)\n - backtype.storm.multilang.JsonSerializer.readString() @bci=12, line=179 (Compiled frame)\n - backtype.storm.multilang.JsonSerializer.readMessage() @bci=1, line=166 (Compiled frame)\n - backtype.storm.multilang.JsonSerializer.readShellMsg() @bci=1, line=100 (Compiled frame)\n - backtype.storm.utils.ShellProcess.readShellMsg() @bci=4, line=99 (Compiled frame)\n - backtype.storm.task.ShellBolt$BoltReaderRunnable.run() @bci=17, line=318 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7749: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Interpreted frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Interpreted frame)\n - java.util.concurrent.DelayQueue.take() @bci=28, line=211 (Interpreted frame)\n - java.util.concurrent.DelayQueue.take() @bci=1, line=70 (Interpreted frame)\n - org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop() @bci=10, line=781 (Interpreted frame)\n - org.apache.curator.framework.imps.CuratorFrameworkImpl.access$400(org.apache.curator.framework.imps.CuratorFrameworkImpl) @bci=1, line=57 (Interpreted frame)\n - org.apache.curator.framework.imps.CuratorFrameworkImpl$4.call() @bci=4, line=275 (Interpreted frame)\n - java.util.concurrent.FutureTask.run() @bci=42, line=266 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7748: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Interpreted frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Interpreted frame)\n - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=442 (Interpreted frame)\n - org.apache.zookeeper.ClientCnxn$EventThread.run() @bci=9, line=494 (Interpreted frame)\n\n\nThread 7747: (state = IN_NATIVE)\n - sun.nio.ch.EPollArrayWrapper.epollWait(long, int, long, int) @bci=0 (Compiled frame; information may be imprecise)\n - sun.nio.ch.EPollArrayWrapper.poll(long) @bci=18, line=269 (Compiled frame)\n - sun.nio.ch.EPollSelectorImpl.doSelect(long) @bci=28, line=79 (Compiled frame)\n - sun.nio.ch.SelectorImpl.lockAndDoSelect(long) @bci=37, line=86 (Compiled frame)\n - sun.nio.ch.SelectorImpl.select(long) @bci=30, line=97 (Compiled frame)\n - org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(int, java.util.List, java.util.LinkedList, org.apache.zookeeper.ClientCnxn) @bci=6, line=349 (Compiled frame)\n - org.apache.zookeeper.ClientCnxn$SendThread.run() @bci=604, line=1081 (Interpreted frame)\n\n\nThread 7746: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Interpreted frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Interpreted frame)\n - java.util.concurrent.ArrayBlockingQueue.take() @bci=20, line=403 (Interpreted frame)\n - org.apache.curator.framework.state.ConnectionStateManager.processEvents() @bci=13, line=208 (Interpreted frame)\n - org.apache.curator.framework.state.ConnectionStateManager.access$000(org.apache.curator.framework.state.ConnectionStateManager) @bci=1, line=42 (Interpreted frame)\n - org.apache.curator.framework.state.ConnectionStateManager$1.call() @bci=4, line=110 (Interpreted frame)\n - java.util.concurrent.FutureTask.run() @bci=42, line=266 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7745: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Interpreted frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Interpreted frame)\n - java.util.concurrent.DelayQueue.take() @bci=28, line=211 (Interpreted frame)\n - java.util.concurrent.DelayQueue.take() @bci=1, line=70 (Interpreted frame)\n - org.apache.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop() @bci=10, line=781 (Interpreted frame)\n - org.apache.curator.framework.imps.CuratorFrameworkImpl.access$400(org.apache.curator.framework.imps.CuratorFrameworkImpl) @bci=1, line=57 (Interpreted frame)\n - org.apache.curator.framework.imps.CuratorFrameworkImpl$4.call() @bci=4, line=275 (Interpreted frame)\n - java.util.concurrent.FutureTask.run() @bci=42, line=266 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7744: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Interpreted frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Interpreted frame)\n - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=442 (Interpreted frame)\n - org.apache.zookeeper.ClientCnxn$EventThread.run() @bci=9, line=494 (Interpreted frame)\n\n\nThread 7743: (state = IN_NATIVE)\n - sun.nio.ch.EPollArrayWrapper.epollWait(long, int, long, int) @bci=0 (Compiled frame; information may be imprecise)\n - sun.nio.ch.EPollArrayWrapper.poll(long) @bci=18, line=269 (Compiled frame)\n - sun.nio.ch.EPollSelectorImpl.doSelect(long) @bci=28, line=79 (Compiled frame)\n - sun.nio.ch.SelectorImpl.lockAndDoSelect(long) @bci=37, line=86 (Compiled frame)\n - sun.nio.ch.SelectorImpl.select(long) @bci=30, line=97 (Compiled frame)\n - org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(int, java.util.List, java.util.LinkedList, org.apache.zookeeper.ClientCnxn) @bci=6, line=349 (Compiled frame)\n - org.apache.zookeeper.ClientCnxn$SendThread.run() @bci=604, line=1081 (Interpreted frame)\n\n\nThread 7738: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Interpreted frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Interpreted frame)\n - java.util.concurrent.ArrayBlockingQueue.take() @bci=20, line=403 (Interpreted frame)\n - org.apache.curator.framework.state.ConnectionStateManager.processEvents() @bci=13, line=208 (Interpreted frame)\n - org.apache.curator.framework.state.ConnectionStateManager.access$000(org.apache.curator.framework.state.ConnectionStateManager) @bci=1, line=42 (Interpreted frame)\n - org.apache.curator.framework.state.ConnectionStateManager$1.call() @bci=4, line=110 (Interpreted frame)\n - java.util.concurrent.FutureTask.run() @bci=42, line=266 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7737: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(long) @bci=78, line=2078 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take() @bci=124, line=1093 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take() @bci=1, line=809 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=149, line=1067 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=26, line=1127 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7736: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(long) @bci=78, line=2078 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take() @bci=124, line=1093 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take() @bci=1, line=809 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=149, line=1067 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=26, line=1127 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7735: (state = IN_NATIVE)\n - java.lang.UNIXProcess.waitForProcessExit(int) @bci=0 (Interpreted frame)\n - java.lang.UNIXProcess.lambda$initStreams$266() @bci=5, line=290 (Interpreted frame)\n - java.lang.UNIXProcess$$Lambda$9.run() @bci=4 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7733: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(long) @bci=78, line=2078 (Compiled frame)\n - java.util.concurrent.LinkedBlockingQueue.poll(long, java.util.concurrent.TimeUnit) @bci=62, line=467 (Compiled frame)\n - backtype.storm.task.ShellBolt$BoltWriterRunnable.run() @bci=86, line=359 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7732: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(long) @bci=78, line=2078 (Compiled frame)\n - java.util.concurrent.LinkedBlockingQueue.poll(long, java.util.concurrent.TimeUnit) @bci=62, line=467 (Compiled frame)\n - backtype.storm.task.ShellBolt$BoltWriterRunnable.run() @bci=86, line=359 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7731: (state = IN_NATIVE)\n - java.io.FileInputStream.readBytes(byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.io.FileInputStream.read(byte[], int, int) @bci=4, line=255 (Compiled frame)\n - java.io.BufferedInputStream.read1(byte[], int, int) @bci=39, line=284 (Compiled frame)\n - java.io.BufferedInputStream.read(byte[], int, int) @bci=49, line=345 (Compiled frame)\n - sun.nio.cs.StreamDecoder.readBytes() @bci=135, line=284 (Compiled frame)\n - sun.nio.cs.StreamDecoder.implRead(char[], int, int) @bci=112, line=326 (Compiled frame)\n - sun.nio.cs.StreamDecoder.read(char[], int, int) @bci=180, line=178 (Compiled frame)\n - java.io.InputStreamReader.read(char[], int, int) @bci=7, line=184 (Compiled frame)\n - java.io.BufferedReader.fill() @bci=145, line=161 (Compiled frame)\n - java.io.BufferedReader.readLine(boolean) @bci=44, line=324 (Compiled frame)\n - java.io.BufferedReader.readLine() @bci=2, line=389 (Compiled frame)\n - backtype.storm.multilang.JsonSerializer.readString() @bci=12, line=179 (Compiled frame)\n - backtype.storm.multilang.JsonSerializer.readMessage() @bci=1, line=166 (Compiled frame)\n - backtype.storm.multilang.JsonSerializer.readShellMsg() @bci=1, line=100 (Compiled frame)\n - backtype.storm.utils.ShellProcess.readShellMsg() @bci=4, line=99 (Compiled frame)\n - backtype.storm.task.ShellBolt$BoltReaderRunnable.run() @bci=17, line=318 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7730: (state = IN_NATIVE)\n - java.io.FileInputStream.readBytes(byte[], int, int) @bci=0 (Compiled frame; information may be imprecise)\n - java.io.FileInputStream.read(byte[], int, int) @bci=4, line=255 (Compiled frame)\n - java.io.BufferedInputStream.read1(byte[], int, int) @bci=39, line=284 (Compiled frame)\n - java.io.BufferedInputStream.read(byte[], int, int) @bci=49, line=345 (Compiled frame)\n - sun.nio.cs.StreamDecoder.readBytes() @bci=135, line=284 (Compiled frame)\n - sun.nio.cs.StreamDecoder.implRead(char[], int, int) @bci=112, line=326 (Compiled frame)\n - sun.nio.cs.StreamDecoder.read(char[], int, int) @bci=180, line=178 (Compiled frame)\n - java.io.InputStreamReader.read(char[], int, int) @bci=7, line=184 (Compiled frame)\n - java.io.BufferedReader.fill() @bci=145, line=161 (Compiled frame)\n - java.io.BufferedReader.readLine(boolean) @bci=44, line=324 (Compiled frame)\n - java.io.BufferedReader.readLine() @bci=2, line=389 (Compiled frame)\n - backtype.storm.multilang.JsonSerializer.readString() @bci=12, line=179 (Compiled frame)\n - backtype.storm.multilang.JsonSerializer.readMessage() @bci=1, line=166 (Compiled frame)\n - backtype.storm.multilang.JsonSerializer.readShellMsg() @bci=1, line=100 (Compiled frame)\n - backtype.storm.utils.ShellProcess.readShellMsg() @bci=4, line=99 (Compiled frame)\n - backtype.storm.task.ShellBolt$BoltReaderRunnable.run() @bci=17, line=318 (Compiled frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7729: (state = IN_NATIVE)\n - java.lang.UNIXProcess.waitForProcessExit(int) @bci=0 (Interpreted frame)\n - java.lang.UNIXProcess.lambda$initStreams$266() @bci=5, line=290 (Interpreted frame)\n - java.lang.UNIXProcess$$Lambda$9.run() @bci=4 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7723: (state = IN_NATIVE)\n - java.lang.UNIXProcess.waitForProcessExit(int) @bci=0 (Interpreted frame)\n - java.lang.UNIXProcess.lambda$initStreams$266() @bci=5, line=290 (Interpreted frame)\n - java.lang.UNIXProcess$$Lambda$9.run() @bci=4 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7722: (state = IN_NATIVE)\n - java.lang.UNIXProcess.waitForProcessExit(int) @bci=0 (Interpreted frame)\n - java.lang.UNIXProcess.lambda$initStreams$266() @bci=5, line=290 (Interpreted frame)\n - java.lang.UNIXProcess$$Lambda$9.run() @bci=4 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7637: (state = BLOCKED)\n\n\nThread 7719: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(long, java.util.concurrent.TimeUnit) @bci=97, line=2163 (Compiled frame)\n - com.lmax.disruptor.BlockingWaitStrategy.waitFor(long, com.lmax.disruptor.Sequence, com.lmax.disruptor.Sequence[], com.lmax.disruptor.SequenceBarrier, long, java.util.concurrent.TimeUnit) @bci=58, line=87 (Compiled frame)\n - com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long, long, java.util.concurrent.TimeUnit) @bci=21, line=54 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(com.lmax.disruptor.EventHandler) @bci=21, line=97 (Compiled frame)\n - backtype.storm.disruptor$consume_batch_when_available.invoke(java.lang.Object, java.lang.Object) @bci=12, line=80 (Compiled frame)\n - backtype.storm.disruptor$consume_loop_STAR_$fn__1618.invoke() @bci=17, line=94 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7718: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(long, java.util.concurrent.TimeUnit) @bci=97, line=2163 (Compiled frame)\n - com.lmax.disruptor.BlockingWaitStrategy.waitFor(long, com.lmax.disruptor.Sequence, com.lmax.disruptor.Sequence[], com.lmax.disruptor.SequenceBarrier, long, java.util.concurrent.TimeUnit) @bci=58, line=87 (Compiled frame)\n - com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long, long, java.util.concurrent.TimeUnit) @bci=21, line=54 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(com.lmax.disruptor.EventHandler) @bci=21, line=97 (Compiled frame)\n - backtype.storm.disruptor$consume_batch_when_available.invoke(java.lang.Object, java.lang.Object) @bci=12, line=80 (Compiled frame)\n - backtype.storm.daemon.executor$fn__6647$fn__6659$fn__6706.invoke() @bci=17, line=748 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7717: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(long, java.util.concurrent.TimeUnit) @bci=97, line=2163 (Compiled frame)\n - com.lmax.disruptor.BlockingWaitStrategy.waitFor(long, com.lmax.disruptor.Sequence, com.lmax.disruptor.Sequence[], com.lmax.disruptor.SequenceBarrier, long, java.util.concurrent.TimeUnit) @bci=58, line=87 (Compiled frame)\n - com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long, long, java.util.concurrent.TimeUnit) @bci=21, line=54 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(com.lmax.disruptor.EventHandler) @bci=21, line=97 (Compiled frame)\n - backtype.storm.disruptor$consume_batch_when_available.invoke(java.lang.Object, java.lang.Object) @bci=12, line=80 (Compiled frame)\n - backtype.storm.disruptor$consume_loop_STAR_$fn__1618.invoke() @bci=17, line=94 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7716: (state = BLOCKED)\n - java.lang.Thread.sleep(long) @bci=0 (Compiled frame; information may be imprecise)\n - backtype.storm.spout.SleepSpoutWaitStrategy.emptyEmit(long) @bci=4, line=36 (Compiled frame)\n - backtype.storm.daemon.executor$fn__6579$fn__6594$fn__6623.invoke() @bci=1143, line=575 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7715: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=338 (Compiled frame)\n - com.lmax.disruptor.AbstractMultithreadedClaimStrategy.waitForFreeSlotAt(long, com.lmax.disruptor.Sequence[], com.lmax.disruptor.util.MutableLong) @bci=34, line=99 (Compiled frame)\n - com.lmax.disruptor.AbstractMultithreadedClaimStrategy.incrementAndGet(com.lmax.disruptor.Sequence[]) @bci=21, line=49 (Compiled frame)\n - com.lmax.disruptor.Sequencer.next() @bci=26, line=127 (Interpreted frame)\n - backtype.storm.utils.DisruptorQueue.publishDirect(java.lang.Object, boolean) @bci=8, line=174 (Interpreted frame)\n - backtype.storm.utils.DisruptorQueue.publish(java.lang.Object, boolean) @bci=69, line=167 (Compiled frame)\n - backtype.storm.disruptor$publish.invoke(java.lang.Object, java.lang.Object, java.lang.Object) @bci=18, line=66 (Compiled frame)\n - backtype.storm.disruptor$publish.invoke(java.lang.Object, java.lang.Object) @bci=18, line=68 (Compiled frame)\n - backtype.storm.daemon.worker$mk_transfer_local_fn$fn__6748.invoke(java.lang.Object) @bci=180, line=108 (Compiled frame)\n - backtype.storm.daemon.worker$mk_transfer_fn$fn__6755.invoke(java.lang.Object, java.lang.Object) @bci=604, line=134 (Compiled frame)\n - backtype.storm.daemon.executor$start_batch_transfer__GT_worker_handler_BANG_$fn__6489.invoke(java.lang.Object, java.lang.Object, java.lang.Object) @bci=65, line=258 (Compiled frame)\n - backtype.storm.disruptor$clojure_handler$reify__1605.onEvent(java.lang.Object, long, boolean) @bci=28, line=58 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(long, com.lmax.disruptor.EventHandler) @bci=125, line=125 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(com.lmax.disruptor.EventHandler) @bci=39, line=99 (Compiled frame)\n - backtype.storm.disruptor$consume_batch_when_available.invoke(java.lang.Object, java.lang.Object) @bci=12, line=80 (Compiled frame)\n - backtype.storm.disruptor$consume_loop_STAR_$fn__1618.invoke() @bci=17, line=94 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7714: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(long, java.util.concurrent.TimeUnit) @bci=97, line=2163 (Compiled frame)\n - com.lmax.disruptor.BlockingWaitStrategy.waitFor(long, com.lmax.disruptor.Sequence, com.lmax.disruptor.Sequence[], com.lmax.disruptor.SequenceBarrier, long, java.util.concurrent.TimeUnit) @bci=58, line=87 (Compiled frame)\n - com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long, long, java.util.concurrent.TimeUnit) @bci=21, line=54 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(com.lmax.disruptor.EventHandler) @bci=21, line=97 (Compiled frame)\n - backtype.storm.disruptor$consume_batch_when_available.invoke(java.lang.Object, java.lang.Object) @bci=12, line=80 (Compiled frame)\n - backtype.storm.daemon.executor$fn__6647$fn__6659$fn__6706.invoke() @bci=17, line=748 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7713: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(long, java.util.concurrent.TimeUnit) @bci=97, line=2163 (Compiled frame)\n - com.lmax.disruptor.BlockingWaitStrategy.waitFor(long, com.lmax.disruptor.Sequence, com.lmax.disruptor.Sequence[], com.lmax.disruptor.SequenceBarrier, long, java.util.concurrent.TimeUnit) @bci=58, line=87 (Compiled frame)\n - com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long, long, java.util.concurrent.TimeUnit) @bci=21, line=54 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(com.lmax.disruptor.EventHandler) @bci=21, line=97 (Compiled frame)\n - backtype.storm.disruptor$consume_batch_when_available.invoke(java.lang.Object, java.lang.Object) @bci=12, line=80 (Compiled frame)\n - backtype.storm.disruptor$consume_loop_STAR_$fn__1618.invoke() @bci=17, line=94 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7712: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(long, java.util.concurrent.TimeUnit) @bci=97, line=2163 (Compiled frame)\n - com.lmax.disruptor.BlockingWaitStrategy.waitFor(long, com.lmax.disruptor.Sequence, com.lmax.disruptor.Sequence[], com.lmax.disruptor.SequenceBarrier, long, java.util.concurrent.TimeUnit) @bci=58, line=87 (Compiled frame)\n - com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long, long, java.util.concurrent.TimeUnit) @bci=21, line=54 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(com.lmax.disruptor.EventHandler) @bci=21, line=97 (Compiled frame)\n - backtype.storm.disruptor$consume_batch_when_available.invoke(java.lang.Object, java.lang.Object) @bci=12, line=80 (Compiled frame)\n - backtype.storm.daemon.executor$fn__6647$fn__6659$fn__6706.invoke() @bci=17, line=748 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7711: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(long, java.util.concurrent.TimeUnit) @bci=97, line=2163 (Compiled frame)\n - com.lmax.disruptor.BlockingWaitStrategy.waitFor(long, com.lmax.disruptor.Sequence, com.lmax.disruptor.Sequence[], com.lmax.disruptor.SequenceBarrier, long, java.util.concurrent.TimeUnit) @bci=58, line=87 (Compiled frame)\n - com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long, long, java.util.concurrent.TimeUnit) @bci=21, line=54 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(com.lmax.disruptor.EventHandler) @bci=21, line=97 (Compiled frame)\n - backtype.storm.disruptor$consume_batch_when_available.invoke(java.lang.Object, java.lang.Object) @bci=12, line=80 (Compiled frame)\n - backtype.storm.disruptor$consume_loop_STAR_$fn__1618.invoke() @bci=17, line=94 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7710: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Compiled frame)\n - java.util.concurrent.LinkedBlockingQueue.put(java.lang.Object) @bci=56, line=350 (Compiled frame)\n - backtype.storm.task.ShellBolt.execute(backtype.storm.tuple.Tuple) @bci=54, line=145 (Compiled frame)\n - backtype.storm.daemon.executor$fn__6647$tuple_action_fn__6649.invoke(java.lang.Object, java.lang.Object) @bci=354, line=633 (Compiled frame)\n - backtype.storm.daemon.executor$mk_task_receiver$fn__6570.invoke(java.lang.Object, java.lang.Object, java.lang.Object) @bci=357, line=401 (Compiled frame)\n - backtype.storm.disruptor$clojure_handler$reify__1605.onEvent(java.lang.Object, long, boolean) @bci=28, line=58 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(long, com.lmax.disruptor.EventHandler) @bci=125, line=125 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(com.lmax.disruptor.EventHandler) @bci=39, line=99 (Compiled frame)\n - backtype.storm.disruptor$consume_batch_when_available.invoke(java.lang.Object, java.lang.Object) @bci=12, line=80 (Compiled frame)\n - backtype.storm.daemon.executor$fn__6647$fn__6659$fn__6706.invoke() @bci=17, line=748 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7709: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(long, java.util.concurrent.TimeUnit) @bci=97, line=2163 (Compiled frame)\n - com.lmax.disruptor.BlockingWaitStrategy.waitFor(long, com.lmax.disruptor.Sequence, com.lmax.disruptor.Sequence[], com.lmax.disruptor.SequenceBarrier, long, java.util.concurrent.TimeUnit) @bci=58, line=87 (Compiled frame)\n - com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long, long, java.util.concurrent.TimeUnit) @bci=21, line=54 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(com.lmax.disruptor.EventHandler) @bci=21, line=97 (Compiled frame)\n - backtype.storm.disruptor$consume_batch_when_available.invoke(java.lang.Object, java.lang.Object) @bci=12, line=80 (Compiled frame)\n - backtype.storm.disruptor$consume_loop_STAR_$fn__1618.invoke() @bci=17, line=94 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7708: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Compiled frame)\n - java.util.concurrent.LinkedBlockingQueue.put(java.lang.Object) @bci=56, line=350 (Compiled frame)\n - backtype.storm.task.ShellBolt.execute(backtype.storm.tuple.Tuple) @bci=54, line=145 (Compiled frame)\n - backtype.storm.daemon.executor$fn__6647$tuple_action_fn__6649.invoke(java.lang.Object, java.lang.Object) @bci=354, line=633 (Compiled frame)\n - backtype.storm.daemon.executor$mk_task_receiver$fn__6570.invoke(java.lang.Object, java.lang.Object, java.lang.Object) @bci=357, line=401 (Compiled frame)\n - backtype.storm.disruptor$clojure_handler$reify__1605.onEvent(java.lang.Object, long, boolean) @bci=28, line=58 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchToCursor(long, com.lmax.disruptor.EventHandler) @bci=125, line=125 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(com.lmax.disruptor.EventHandler) @bci=39, line=99 (Compiled frame)\n - backtype.storm.disruptor$consume_batch_when_available.invoke(java.lang.Object, java.lang.Object) @bci=12, line=80 (Compiled frame)\n - backtype.storm.daemon.executor$fn__6647$fn__6659$fn__6706.invoke() @bci=17, line=748 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7707: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(long, java.util.concurrent.TimeUnit) @bci=97, line=2163 (Compiled frame)\n - com.lmax.disruptor.BlockingWaitStrategy.waitFor(long, com.lmax.disruptor.Sequence, com.lmax.disruptor.Sequence[], com.lmax.disruptor.SequenceBarrier, long, java.util.concurrent.TimeUnit) @bci=58, line=87 (Compiled frame)\n - com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(long, long, java.util.concurrent.TimeUnit) @bci=21, line=54 (Compiled frame)\n - backtype.storm.utils.DisruptorQueue.consumeBatchWhenAvailable(com.lmax.disruptor.EventHandler) @bci=21, line=97 (Compiled frame)\n - backtype.storm.disruptor$consume_batch_when_available.invoke(java.lang.Object, java.lang.Object) @bci=12, line=80 (Compiled frame)\n - backtype.storm.disruptor$consume_loop_STAR_$fn__1618.invoke() @bci=17, line=94 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7706: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) @bci=20, line=215 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(long) @bci=78, line=2078 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take() @bci=124, line=1093 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take() @bci=1, line=809 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=149, line=1067 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=26, line=1127 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7705: (state = BLOCKED)\n - java.lang.Thread.sleep(long) @bci=0 (Compiled frame; information may be imprecise)\n - org.apache.storm.netty.util.HashedWheelTimer$Worker.waitForNextTick() @bci=84, line=483 (Compiled frame)\n - org.apache.storm.netty.util.HashedWheelTimer$Worker.run() @bci=49, line=392 (Compiled frame)\n - org.apache.storm.netty.util.ThreadRenamingRunnable.run() @bci=55, line=108 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7704: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Compiled frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take() @bci=100, line=1088 (Compiled frame)\n - java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take() @bci=1, line=809 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=149, line=1067 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=26, line=1127 (Compiled frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7703: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=338 (Compiled frame)\n - com.lmax.disruptor.AbstractMultithreadedClaimStrategy.waitForFreeSlotAt(long, com.lmax.disruptor.Sequence[], com.lmax.disruptor.util.MutableLong) @bci=34, line=99 (Compiled frame)\n - com.lmax.disruptor.AbstractMultithreadedClaimStrategy.incrementAndGet(com.lmax.disruptor.Sequence[]) @bci=21, line=49 (Interpreted frame)\n - com.lmax.disruptor.Sequencer.next() @bci=26, line=127 (Interpreted frame)\n - backtype.storm.utils.DisruptorQueue.publishDirect(java.lang.Object, boolean) @bci=8, line=174 (Interpreted frame)\n - backtype.storm.utils.DisruptorQueue.publish(java.lang.Object, boolean) @bci=69, line=167 (Compiled frame)\n - backtype.storm.disruptor$publish.invoke(java.lang.Object, java.lang.Object, java.lang.Object) @bci=18, line=66 (Compiled frame)\n - backtype.storm.disruptor$publish.invoke(java.lang.Object, java.lang.Object) @bci=18, line=68 (Compiled frame)\n - backtype.storm.daemon.worker$mk_transfer_local_fn$fn__6748.invoke(java.lang.Object) @bci=180, line=108 (Compiled frame)\n - backtype.storm.messaging.loader$mk_receive_thread$fn__1626$fn__1627.invoke() @bci=600, line=49 (Compiled frame)\n - backtype.storm.util$async_loop$fn__459.invoke() @bci=39, line=463 (Compiled frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7702: (state = IN_NATIVE)\n - sun.nio.ch.EPollArrayWrapper.epollWait(long, int, long, int) @bci=0 (Interpreted frame)\n - sun.nio.ch.EPollArrayWrapper.poll(long) @bci=18, line=269 (Interpreted frame)\n - sun.nio.ch.EPollSelectorImpl.doSelect(long) @bci=28, line=79 (Interpreted frame)\n - sun.nio.ch.SelectorImpl.lockAndDoSelect(long) @bci=37, line=86 (Interpreted frame)\n - sun.nio.ch.SelectorImpl.select(long) @bci=30, line=97 (Interpreted frame)\n - sun.nio.ch.SelectorImpl.select() @bci=2, line=101 (Interpreted frame)\n - org.apache.storm.netty.channel.socket.nio.NioServerBoss.select(java.nio.channels.Selector) @bci=1, line=163 (Interpreted frame)\n - org.apache.storm.netty.channel.socket.nio.AbstractNioSelector.run() @bci=56, line=212 (Interpreted frame)\n - org.apache.storm.netty.channel.socket.nio.NioServerBoss.run() @bci=1, line=42 (Interpreted frame)\n - org.apache.storm.netty.util.ThreadRenamingRunnable.run() @bci=55, line=108 (Interpreted frame)\n - org.apache.storm.netty.util.internal.DeadLockProofWorker$1.run() @bci=14, line=42 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7701: (state = IN_NATIVE)\n - sun.nio.ch.EPollArrayWrapper.epollWait(long, int, long, int) @bci=0 (Compiled frame; information may be imprecise)\n - sun.nio.ch.EPollArrayWrapper.poll(long) @bci=18, line=269 (Compiled frame)\n - sun.nio.ch.EPollSelectorImpl.doSelect(long) @bci=28, line=79 (Compiled frame)\n - sun.nio.ch.SelectorImpl.lockAndDoSelect(long) @bci=37, line=86 (Compiled frame)\n - sun.nio.ch.SelectorImpl.select(long) @bci=30, line=97 (Compiled frame)\n - org.apache.storm.netty.channel.socket.nio.SelectorUtil.select(java.nio.channels.Selector) @bci=4, line=68 (Compiled frame)\n - org.apache.storm.netty.channel.socket.nio.AbstractNioSelector.select(java.nio.channels.Selector) @bci=1, line=415 (Compiled frame)\n - org.apache.storm.netty.channel.socket.nio.AbstractNioSelector.run() @bci=56, line=212 (Compiled frame)\n - org.apache.storm.netty.channel.socket.nio.AbstractNioWorker.run() @bci=1, line=89 (Interpreted frame)\n - org.apache.storm.netty.channel.socket.nio.NioWorker.run() @bci=1, line=178 (Interpreted frame)\n - org.apache.storm.netty.util.ThreadRenamingRunnable.run() @bci=55, line=108 (Interpreted frame)\n - org.apache.storm.netty.util.internal.DeadLockProofWorker$1.run() @bci=14, line=42 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7700: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\n - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=338 (Compiled frame)\n - com.lmax.disruptor.AbstractMultithreadedClaimStrategy.waitForFreeSlotAt(long, com.lmax.disruptor.Sequence[], com.lmax.disruptor.util.MutableLong) @bci=34, line=99 (Compiled frame)\n - com.lmax.disruptor.AbstractMultithreadedClaimStrategy.incrementAndGet(com.lmax.disruptor.Sequence[]) @bci=21, line=49 (Compiled frame)\n - com.lmax.disruptor.Sequencer.next() @bci=26, line=127 (Interpreted frame)\n - backtype.storm.utils.DisruptorQueue.publishDirect(java.lang.Object, boolean) @bci=8, line=174 (Interpreted frame)\n - backtype.storm.utils.DisruptorQueue.publish(java.lang.Object, boolean) @bci=69, line=167 (Compiled frame)\n - backtype.storm.disruptor$publish.invoke(java.lang.Object, java.lang.Object, java.lang.Object) @bci=18, line=66 (Compiled frame)\n - backtype.storm.disruptor$publish.invoke(java.lang.Object, java.lang.Object) @bci=18, line=68 (Compiled frame)\n - backtype.storm.daemon.executor$setup_metrics_BANG_$fn__6499.invoke() @bci=80, line=274 (Compiled frame)\n - backtype.storm.timer$schedule_recurring$this__1807.invoke() @bci=7, line=99 (Compiled frame)\n - backtype.storm.timer$mk_timer$fn__1790$fn__1791.invoke() @bci=174, line=50 (Compiled frame)\n - backtype.storm.timer$mk_timer$fn__1790.invoke() @bci=54, line=42 (Interpreted frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7699: (state = BLOCKED)\n - java.lang.Thread.sleep(long) @bci=0 (Compiled frame; information may be imprecise)\n - backtype.storm.utils.Time.sleepUntil(long) @bci=173, line=76 (Compiled frame)\n - backtype.storm.utils.Time.sleep(long) @bci=5, line=81 (Compiled frame)\n - backtype.storm.timer$mk_timer$fn__1790$fn__1791.invoke() @bci=220, line=57 (Compiled frame)\n - backtype.storm.timer$mk_timer$fn__1790.invoke() @bci=54, line=42 (Interpreted frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7698: (state = BLOCKED)\n - java.lang.Thread.sleep(long) @bci=0 (Compiled frame; information may be imprecise)\n - backtype.storm.utils.Time.sleepUntil(long) @bci=173, line=76 (Compiled frame)\n - backtype.storm.utils.Time.sleep(long) @bci=5, line=81 (Compiled frame)\n - backtype.storm.timer$mk_timer$fn__1790$fn__1791.invoke() @bci=220, line=57 (Compiled frame)\n - backtype.storm.timer$mk_timer$fn__1790.invoke() @bci=54, line=42 (Interpreted frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7697: (state = BLOCKED)\n - java.lang.Thread.sleep(long) @bci=0 (Compiled frame; information may be imprecise)\n - backtype.storm.utils.Time.sleepUntil(long) @bci=173, line=76 (Compiled frame)\n - backtype.storm.utils.Time.sleep(long) @bci=5, line=81 (Compiled frame)\n - backtype.storm.timer$mk_timer$fn__1790$fn__1791.invoke() @bci=220, line=57 (Compiled frame)\n - backtype.storm.timer$mk_timer$fn__1790.invoke() @bci=54, line=42 (Interpreted frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7696: (state = BLOCKED)\n - java.lang.Thread.sleep(long) @bci=0 (Compiled frame; information may be imprecise)\n - backtype.storm.utils.Time.sleepUntil(long) @bci=173, line=76 (Compiled frame)\n - backtype.storm.utils.Time.sleep(long) @bci=5, line=81 (Compiled frame)\n - backtype.storm.timer$mk_timer$fn__1790$fn__1791.invoke() @bci=220, line=57 (Compiled frame)\n - backtype.storm.timer$mk_timer$fn__1790.invoke() @bci=54, line=42 (Interpreted frame)\n - clojure.lang.AFn.run() @bci=1, line=24 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7695: (state = IN_NATIVE)\n - sun.nio.ch.EPollArrayWrapper.epollWait(long, int, long, int) @bci=0 (Compiled frame; information may be imprecise)\n - sun.nio.ch.EPollArrayWrapper.poll(long) @bci=18, line=269 (Compiled frame)\n - sun.nio.ch.EPollSelectorImpl.doSelect(long) @bci=28, line=79 (Compiled frame)\n - sun.nio.ch.SelectorImpl.lockAndDoSelect(long) @bci=37, line=86 (Compiled frame)\n - sun.nio.ch.SelectorImpl.select(long) @bci=30, line=97 (Compiled frame)\n - org.apache.storm.netty.channel.socket.nio.SelectorUtil.select(java.nio.channels.Selector) @bci=4, line=68 (Compiled frame)\n - org.apache.storm.netty.channel.socket.nio.AbstractNioSelector.select(java.nio.channels.Selector) @bci=1, line=415 (Compiled frame)\n - org.apache.storm.netty.channel.socket.nio.AbstractNioSelector.run() @bci=56, line=212 (Compiled frame)\n - org.apache.storm.netty.channel.socket.nio.NioClientBoss.run() @bci=1, line=42 (Interpreted frame)\n - org.apache.storm.netty.util.ThreadRenamingRunnable.run() @bci=55, line=108 (Interpreted frame)\n - org.apache.storm.netty.util.internal.DeadLockProofWorker$1.run() @bci=14, line=42 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7694: (state = IN_NATIVE)\n - sun.nio.ch.EPollArrayWrapper.epollWait(long, int, long, int) @bci=0 (Compiled frame; information may be imprecise)\n - sun.nio.ch.EPollArrayWrapper.poll(long) @bci=18, line=269 (Compiled frame)\n - sun.nio.ch.EPollSelectorImpl.doSelect(long) @bci=28, line=79 (Compiled frame)\n - sun.nio.ch.SelectorImpl.lockAndDoSelect(long) @bci=37, line=86 (Compiled frame)\n - sun.nio.ch.SelectorImpl.select(long) @bci=30, line=97 (Compiled frame)\n - org.apache.storm.netty.channel.socket.nio.SelectorUtil.select(java.nio.channels.Selector) @bci=4, line=68 (Compiled frame)\n - org.apache.storm.netty.channel.socket.nio.AbstractNioSelector.select(java.nio.channels.Selector) @bci=1, line=415 (Compiled frame)\n - org.apache.storm.netty.channel.socket.nio.AbstractNioSelector.run() @bci=56, line=212 (Compiled frame)\n - org.apache.storm.netty.channel.socket.nio.AbstractNioWorker.run() @bci=1, line=89 (Interpreted frame)\n - org.apache.storm.netty.channel.socket.nio.NioWorker.run() @bci=1, line=178 (Interpreted frame)\n - org.apache.storm.netty.util.ThreadRenamingRunnable.run() @bci=55, line=108 (Interpreted frame)\n - org.apache.storm.netty.util.internal.DeadLockProofWorker$1.run() @bci=14, line=42 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7693: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Interpreted frame)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Interpreted frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Interpreted frame)\n - java.util.concurrent.DelayQueue.take() @bci=28, line=211 (Interpreted frame)\n - java.util.concurrent.DelayQueue.take() @bci=1, line=70 (Interpreted frame)\n - org.apache.storm.curator.framework.imps.CuratorFrameworkImpl.backgroundOperationsLoop() @bci=10, line=781 (Interpreted frame)\n - org.apache.storm.curator.framework.imps.CuratorFrameworkImpl.access$400(org.apache.storm.curator.framework.imps.CuratorFrameworkImpl) @bci=1, line=57 (Interpreted frame)\n - org.apache.storm.curator.framework.imps.CuratorFrameworkImpl$4.call() @bci=4, line=275 (Interpreted frame)\n - java.util.concurrent.FutureTask.run() @bci=42, line=266 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7692: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Interpreted frame)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Interpreted frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Interpreted frame)\n - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=442 (Interpreted frame)\n - org.apache.storm.zookeeper.ClientCnxn$EventThread.run() @bci=9, line=494 (Interpreted frame)\n\n\nThread 7691: (state = IN_NATIVE)\n - sun.nio.ch.EPollArrayWrapper.epollWait(long, int, long, int) @bci=0 (Compiled frame; information may be imprecise)\n - sun.nio.ch.EPollArrayWrapper.poll(long) @bci=18, line=269 (Compiled frame)\n - sun.nio.ch.EPollSelectorImpl.doSelect(long) @bci=28, line=79 (Compiled frame)\n - sun.nio.ch.SelectorImpl.lockAndDoSelect(long) @bci=37, line=86 (Compiled frame)\n - sun.nio.ch.SelectorImpl.select(long) @bci=30, line=97 (Compiled frame)\n - org.apache.storm.zookeeper.ClientCnxnSocketNIO.doTransport(int, java.util.List, java.util.LinkedList, org.apache.storm.zookeeper.ClientCnxn) @bci=6, line=349 (Compiled frame)\n - org.apache.storm.zookeeper.ClientCnxn$SendThread.run() @bci=615, line=1081 (Interpreted frame)\n\n\nThread 7690: (state = BLOCKED)\n - sun.misc.Unsafe.park(boolean, long) @bci=0 (Interpreted frame)\n - java.util.concurrent.locks.LockSupport.park(java.lang.Object) @bci=14, line=175 (Interpreted frame)\n - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=42, line=2039 (Interpreted frame)\n - java.util.concurrent.ArrayBlockingQueue.take() @bci=20, line=403 (Interpreted frame)\n - org.apache.storm.curator.framework.state.ConnectionStateManager.processEvents() @bci=13, line=208 (Interpreted frame)\n - org.apache.storm.curator.framework.state.ConnectionStateManager.access$000(org.apache.storm.curator.framework.state.ConnectionStateManager) @bci=1, line=42 (Interpreted frame)\n - org.apache.storm.curator.framework.state.ConnectionStateManager$1.call() @bci=4, line=110 (Interpreted frame)\n - java.util.concurrent.FutureTask.run() @bci=42, line=266 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Interpreted frame)\n - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\n - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\n\n\nThread 7647: (state = BLOCKED)\n\n\nThread 7646: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - java.lang.ref.ReferenceQueue.remove(long) @bci=59, line=143 (Compiled frame)\n - java.lang.ref.ReferenceQueue.remove() @bci=2, line=164 (Compiled frame)\n - java.lang.ref.Finalizer$FinalizerThread.run() @bci=36, line=209 (Interpreted frame)\n\n\nThread 7645: (state = BLOCKED)\n - java.lang.Object.wait(long) @bci=0 (Compiled frame; information may be imprecise)\n - java.lang.Object.wait() @bci=2, line=502 (Compiled frame)\n - java.lang.ref.Reference$ReferenceHandler.run() @bci=36, line=157 (Compiled frame)\n{code}\n\nIt's from a worker process.\n\nNothing is written inside the logs :-\\ And {{kafkaSpout}} offset is not being updated in Zookeeper.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"created":"2015-08-06T10:18:33.532+0000","updated":"2015-08-06T11:02:43.130+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14661008","id":"14661008","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Jstack output still says subprocess heartbeat is not properly handled.\n\nMaybe you're hitting https://issues.apache.org/jira/browse/STORM-742 since now ShellBolt doesn't treat any messages to heartbeat. It only treats \"sync\" to heartbeat, so it couldn't be in time when process latency of subprocess is getting higher.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2015-08-06T23:55:21.232+0000","updated":"2015-08-06T23:57:34.364+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14661412","id":"14661412","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"body":"Uhm... It makes sense, though it talks about ACK's (we removed them from the topology). It's true that our python bolt is a \"heavy\" and \"intense\" bolt and that the processing of a tuple might take so long that the process isn't heartbeating properly. Although it's kind of weird, since it sometimes works for several hours (~16h) and sometimes just minutes (~10m).\n\nPlease [~kabhwan], can you answer me this questions?\n- Is it only a multi-lang issue? If we implement the bolt in Java, it'd work?\n- Any idea of how we could avoid this issue? (aside from implementing the bolt in Java) I'm thinking in adding more bolts and make the tuples go through more little stages, hoping we don't get heartbeat timeouts\n\nThanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alexsobrino","name":"alexsobrino","key":"alexsobrino","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alex Sobrino","active":true,"timeZone":"Europe/Madrid"},"created":"2015-08-07T06:54:22.160+0000","updated":"2015-08-07T06:54:22.160+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14661719","id":"14661719","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"I'm surprised that one tuple takes hours to complete!\n\nLet me answer your question.\n\na) Yes, it's only a multi-lang issue. But you still need to consider message timeout value when you enable ack.\nb) \nYou can increase SUPERVISOR_WORKER_TIMEOUT_SECS to loose heartbeat timeouts. \nBut it also affects whole workers in topology, so please keep in mind before adjusting.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2015-08-07T11:54:38.319+0000","updated":"2015-08-07T11:54:38.319+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14701411","id":"14701411","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhishek.agarwal","name":"abhishek.agarwal","key":"abhishek.agarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Abhishek Agarwal","active":true,"timeZone":"Asia/Kolkata"},"body":"I seem to have run into similar issue. I am using kafka spout along with a bolt written in java. There is only one bolt in topology. I see no errors at all in the logs. However, it behaves as if the spout thread has died. Kafka spout nextTuple is not being called at all. \n\nLuckily I took the jstack. I have attached it to JIRA. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=abhishek.agarwal","name":"abhishek.agarwal","key":"abhishek.agarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Abhishek Agarwal","active":true,"timeZone":"Asia/Kolkata"},"created":"2015-08-18T15:12:49.228+0000","updated":"2015-08-18T15:13:27.563+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14959547","id":"14959547","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=darsh221","name":"darsh221","key":"darsh221","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"darsh221","active":true,"timeZone":"Etc/UTC"},"body":"We are facing similar issue in production where storm worker just hangs and we see complete latency increases drastically.This happened 3 times in last 2 months.If I try to take the thread dump worker process just dies. Once i was able to get the thread dump and see lot of block threads in it. I'm attaching thread dump to JIRA.We are using 0.9.5 and spout pending size is set to 1000. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=darsh221","name":"darsh221","key":"darsh221","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"darsh221","active":true,"timeZone":"Etc/UTC"},"created":"2015-10-15T20:22:50.906+0000","updated":"2015-10-15T20:22:50.906+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/14978400","id":"14978400","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jawanjal.shiva","name":"jawanjal.shiva","key":"jawanjal.shiva","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aniruddha Jawanjal","active":true,"timeZone":"Etc/UTC"},"body":"We are using only java in our cluster & have faced the same issue. This doesn't seem to be multi-lang issue. Everything is running fine after we have killed & re-deployed the topologies. I will provide the jstack result if I face the issue again.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jawanjal.shiva","name":"jawanjal.shiva","key":"jawanjal.shiva","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aniruddha Jawanjal","active":true,"timeZone":"Etc/UTC"},"created":"2015-10-28T13:20:43.741+0000","updated":"2015-10-28T13:20:43.741+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12849270/comment/15181463","id":"15181463","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bopcat","name":"bopcat","key":"bopcat","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kirill Prasalov","active":true,"timeZone":"Etc/UTC"},"body":"Hi! I have the same.\n\nStorm v. 0. 9. 4. Pure Java. A simplistic Trident topology reading from Kafka. SINGLE NODE (i. e. only one worker and parallelism of one - this is important).\n\nThe topology consists just of an OpaqueTridentKafkaSpout and a standard Debug filter. They are translated into standard Storm spout and three bolts: $mastercoord-bg0, $spoutcoord-spout0, spout0, b-0. The topology is doing nothing no matter what I send to the Kafka topic. Silence in the logs. The sun is shining. Birds are singing.\n\nThis very same issue appeared from time to time. Some time ago I deployed a new topology and soon realized it was processing just a single batch every minute and between those batches it was idle. Then I created the simplistic one with a single Debug filter but with two workers in a three node cluster (Nimbus + two Supervisors). The behavior was reproduced. What I observed was that those batches with the one minute delays between them were processed on a different node than the one where my spout was deployed.\n\nThen I simplified the configuration down to a single worker and voila! The topology became idle and even redeploying it didn't help. So I hacked Trident code a little bit by adding log output to several classes and found the following: $mastercoord-bg0 works just fine and so does $spoutcoord-spout0 but then the tuples get lost on the way to spout0. The only tuples spout0 is able to see are ticks but Kafka broker info emitted from $spoutcoord-spout0 never reaches its destination. After 60 secs which are Storm's sync timeout $mastercoord-bg0 fails its transaction attempt.\n\nMy hand made log output from Trident classes looks like this:\n\n2016-03-05T03:32:39.695+0100 storm.trident.topology.MasterBatchCoordinator [DEBUG] Emitted: 14813273:110\n2016-03-05T03:32:39.695+0100 storm.trident.spout.TridentSpoutCoordinator [DEBUG] Got a transaction: 14813273:110\n2016-03-05T03:32:39.697+0100 storm.trident.spout.TridentSpoutCoordinator [DEBUG] The transaction 14813273 triggers a new batch with metadata GlobalPartitionInformation{partitionMap={0=test-kafka3:9092}}\n2016-03-05T03:32:39.934+0100 storm.trident.topology.TridentBoltExecutor [DEBUG] Got a tuple: source: __system:-1, stream: __tick, id: {}, [5]\n2016-03-05T03:32:44.935+0100 storm.trident.topology.TridentBoltExecutor [DEBUG] Got a tuple: source: __system:-1, stream: __tick, id: {}, [5]\n2016-03-05T03:32:49.935+0100 storm.trident.topology.TridentBoltExecutor [DEBUG] Got a tuple: source: __system:-1, stream: __tick, id: {}, [5]\n2016-03-05T03:32:54.935+0100 storm.trident.topology.TridentBoltExecutor [DEBUG] Got a tuple: source: __system:-1, stream: __tick, id: {}, [5]\n2016-03-05T03:32:59.935+0100 storm.trident.topology.TridentBoltExecutor [DEBUG] Got a tuple: source: __system:-1, stream: __tick, id: {}, [5]\n2016-03-05T03:33:04.936+0100 storm.trident.topology.TridentBoltExecutor [DEBUG] Got a tuple: source: __system:-1, stream: __tick, id: {}, [5]\n2016-03-05T03:33:09.935+0100 storm.trident.topology.TridentBoltExecutor [DEBUG] Got a tuple: source: __system:-1, stream: __tick, id: {}, [5]\n2016-03-05T03:33:14.936+0100 storm.trident.topology.TridentBoltExecutor [DEBUG] Got a tuple: source: __system:-1, stream: __tick, id: {}, [5]\n2016-03-05T03:33:19.936+0100 storm.trident.topology.TridentBoltExecutor [DEBUG] Got a tuple: source: __system:-1, stream: __tick, id: {}, [5]\n2016-03-05T03:33:24.936+0100 storm.trident.topology.TridentBoltExecutor [DEBUG] Got a tuple: source: __system:-1, stream: __tick, id: {}, [5]\n2016-03-05T03:33:29.936+0100 storm.trident.topology.TridentBoltExecutor [DEBUG] Got a tuple: source: __system:-1, stream: __tick, id: {}, [5]\n2016-03-05T03:33:34.937+0100 storm.trident.topology.TridentBoltExecutor [DEBUG] Got a tuple: source: __system:-1, stream: __tick, id: {}, [5]\n2016-03-05T03:33:39.693+0100 storm.trident.topology.MasterBatchCoordinator [DEBUG] Failed the transaction 14813273\n2016-03-05T03:33:39.696+0100 storm.trident.topology.MasterBatchCoordinator [DEBUG] Emitted: 14813273:111\n2016-03-05T03:33:39.696+0100 storm.trident.spout.TridentSpoutCoordinator [DEBUG] Got a transaction: 14813273:111\n2016-03-05T03:33:39.700+0100 storm.trident.spout.TridentSpoutCoordinator [DEBUG] The transaction 14813273 triggers a new batch with metadata GlobalPartitionInformation{partitionMap={0=test-kafka3:9092}}\n.....................\n\nAlso I noticed that every time I submit the topology to the cluster, I see the following in its worker-670*.log:\n\n2016-03-05T01:41:49.057+0100 b.s.m.n.Client [ERROR] connection to Netty-Client-localhost/127.0.0.1:6706 is unavailable\n2016-03-05T01:41:49.057+0100 b.s.m.n.Client [ERROR] dropping 1 message(s) destined for Netty-Client-localhost/127.0.0.1:6706\n\nI don't know if it's relevant or not...\n\nAttaching also jstack's output (jstack-bopcat.txt).\n\nThe topology is still frozen btw after several days and many redeploys.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=bopcat","name":"bopcat","key":"bopcat","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kirill Prasalov","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-05T02:42:50.651+0000","updated":"2016-03-05T02:42:50.651+0000"}],"maxResults":19,"total":19,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-963/votes","votes":4,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2hyjz:"}}