{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12929860","self":"https://issues.apache.org/jira/rest/api/2/issue/12929860","key":"STORM-1469","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":600,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[],"aggregatetimespent":600,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2016-02-26T19:22:25.521+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Mar 30 17:34:45 UTC 2017","customfield_12312320":null,"customfield_12310222":null,"customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-1469/watchers","watchCount":9,"isWatching":false},"created":"2016-01-13T16:02:34.825+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329843","id":"12329843","name":"1.0.0","archived":false,"released":true,"releaseDate":"2016-04-12"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false}],"customfield_12312339":null,"issuelinks":[{"id":"12495894","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12495894","type":{"id":"10001","name":"dependent","inward":"is depended upon by","outward":"depends upon","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"},"outwardIssue":{"id":"12953972","key":"STORM-1661","self":"https://issues.apache.org/jira/rest/api/2/issue/12953972","fields":{"summary":"Introduce a config to turn off blobstore acl validation in insecure mode","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/16","id":"16","description":"Created by JIRA Software - do not edit or delete. Issue type for a user story.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21145&avatarType=issuetype","name":"Story","subtask":false,"avatarId":21145}}}}],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kishorvpatil","name":"kishorvpatil","key":"kishorvpatil","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kishor Patil","active":true,"timeZone":"America/Chicago"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-12-28T04:45:21.530+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/4","description":"This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/reopened.png","name":"Reopened","id":"4","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12327950","id":"12327950","name":"storm-core","description":"Core storm daemons and APIs including trident"}],"timeoriginalestimate":null,"description":"When deploying to a nimbus a topology which is larger in size >17MB, we get an exception. In storm 0.9.3 this could be mitigated by using the following config on the storm.yaml to increse the buffer size to handle the topology size. i.e. 50MB would be\n\nnimbus.thrift.max_buffer_size: 50000000\n\nThis configuration does not resolve the issue in the master branch of storm and we cannot deploy topologies which are large in size.\n\nHere is the log on the client side when attempting to deploy to the nimbus node:\njava.lang.RuntimeException: org.apache.thrift7.transport.TTransportException\n\tat backtype.storm.StormSubmitter.submitTopologyAs(StormSubmitter.java:251) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat backtype.storm.StormSubmitter.submitTopology(StormSubmitter.java:272) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat backtype.storm.StormSubmitter.submitTopology(StormSubmitter.java:155) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat com.trustwave.siem.storm.topology.deployer.TopologyDeployer.deploy(TopologyDeployer.java:149) [siem-ng-storm-deployer-cloud.jar:]\n\tat com.trustwave.siem.storm.topology.deployer.TopologyDeployer.main(TopologyDeployer.java:87) [siem-ng-storm-deployer-cloud.jar:]\nCaused by: org.apache.thrift7.transport.TTransportException\n\tat org.apache.thrift7.transport.TIOStreamTransport.read(TIOStreamTransport.java:132) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat org.apache.thrift7.transport.TTransport.readAll(TTransport.java:86) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat org.apache.thrift7.transport.TFramedTransport.readFrame(TFramedTransport.java:129) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat org.apache.thrift7.transport.TFramedTransport.read(TFramedTransport.java:101) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat org.apache.thrift7.transport.TTransport.readAll(TTransport.java:86) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat org.apache.thrift7.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:429) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat org.apache.thrift7.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:318) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat org.apache.thrift7.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:219) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat org.apache.thrift7.TServiceClient.receiveBase(TServiceClient.java:77) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat backtype.storm.generated.Nimbus$Client.recv_submitTopology(Nimbus.java:238) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat backtype.storm.generated.Nimbus$Client.submitTopology(Nimbus.java:222) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\tat backtype.storm.StormSubmitter.submitTopologyAs(StormSubmitter.java:237) ~[storm-core-0.11.0-SNAPSHOT.jar:0.11.0-SNAPSHOT]\n\t... 4 more\n\nHere is the log on the server side (nimbus.log):\n\n2016-01-13 10:48:07.206 o.a.s.d.nimbus [INFO] Cleaning inbox ... deleted: stormjar-c8666220-fa19-426b-a7e4-c62dfb57f1f0.jar\n2016-01-13 10:55:09.823 o.a.s.d.nimbus [INFO] Uploading file from client to /var/storm-data/nimbus/inbox/stormjar-80ecdf05-6a25-4281-8c78-10062ac5e396.jar\n2016-01-13 10:55:11.910 o.a.s.d.nimbus [INFO] Finished uploading file from client: /var/storm-data/nimbus/inbox/stormjar-80ecdf05-6a25-4281-8c78-10062ac5e396.jar\n2016-01-13 10:55:12.084 o.a.t.s.AbstractNonblockingServer$FrameBuffer [WARN] Exception while invoking!\norg.apache.thrift7.transport.TTransportException: Frame size (17435758) larger than max length (16384000)!\n\tat org.apache.thrift7.transport.TFramedTransport.readFrame(TFramedTransport.java:137)\n\tat org.apache.thrift7.transport.TFramedTransport.read(TFramedTransport.java:101)\n\tat org.apache.thrift7.transport.TTransport.readAll(TTransport.java:86)\n\tat org.apache.thrift7.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:429)\n\tat org.apache.thrift7.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:318)\n\tat org.apache.thrift7.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:219)\n\tat org.apache.thrift7.TBaseProcessor.process(TBaseProcessor.java:27)\n\tat org.apache.storm.security.auth.SimpleTransportPlugin$SimpleWrapProcessor.process(SimpleTransportPlugin.java:158)\n\tat org.apache.thrift7.server.AbstractNonblockingServer$FrameBuffer.invoke(AbstractNonblockingServer.java:518)\n\tat org.apache.thrift7.server.Invocation.run(Invocation.java:18)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\n","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"10m","remainingEstimateSeconds":0,"timeSpentSeconds":600},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Unable to deploy large topologies on apache storm","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rudra.sharma","name":"rudra.sharma","key":"rudra.sharma","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rudra Sharma","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rudra.sharma","name":"rudra.sharma","key":"rudra.sharma","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rudra Sharma","active":true,"timeZone":"Etc/UTC"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":600,"total":600,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":600,"total":600,"percent":100},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15169607","id":"15169607","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagit","name":"dagit","key":"dagit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagit&avatarId=25742","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagit&avatarId=25742","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagit&avatarId=25742","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagit&avatarId=25742"},"displayName":"Derek Dagit","active":true,"timeZone":"America/Chicago"},"body":"[~rudra.sharma], if this was seen on master, was the topology submitted using an old client?  I had thought in the latest version of storm the StormSubmitter submits topology jars in chunks of about 30kb at a time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagit","name":"dagit","key":"dagit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagit&avatarId=25742","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagit&avatarId=25742","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagit&avatarId=25742","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagit&avatarId=25742"},"displayName":"Derek Dagit","active":true,"timeZone":"America/Chicago"},"created":"2016-02-26T19:22:25.521+0000","updated":"2016-02-26T19:22:25.521+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15169798","id":"15169798","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagit","name":"dagit","key":"dagit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagit&avatarId=25742","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagit&avatarId=25742","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagit&avatarId=25742","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagit&avatarId=25742"},"displayName":"Derek Dagit","active":true,"timeZone":"America/Chicago"},"body":"OK, looking at this some more: It is not the size of the jar file that matters here, it is the size of the topology config and the topology instance when serialized. If those are too big, then as [~kishorvpatil] noted, there is a 16MB max limit in thrift that we are not correctly overriding with the config mentioned above. Nimbus should launch with a thrift server that has the max buffer size configured correctly, instead of always using the default of 16MB.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dagit","name":"dagit","key":"dagit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=dagit&avatarId=25742","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dagit&avatarId=25742","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dagit&avatarId=25742","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dagit&avatarId=25742"},"displayName":"Derek Dagit","active":true,"timeZone":"America/Chicago"},"created":"2016-02-26T20:59:47.737+0000","updated":"2016-02-26T20:59:47.737+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174538","id":"15174538","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user kishorvpatil opened a pull request:\n\n    https://github.com/apache/storm/pull/1173\n\n    [STORM-1469] Adding Plain Sasl Transport Plugin\n\n    Since `org.apache.storm.security.auth.SimpleTransportPlugin` creates `TFramedTransport` with maxBufferSize, but that conflicts with serialized topology of size exceeded 16MB - default `THsHaServer` allowed max buffer size. So the better option is to implement `PlainSaslTransportPlugin` which avoids using any default values for max-buffer-size. \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/kishorvpatil/incubator-storm storm1469\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/1173.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #1173\n    \n----\ncommit b1e4c94269dbcf2ba01aee89e468c744887c53de\nAuthor: Kishor Patil <kpatil@yahoo-inc.com>\nDate:   2016-02-29T20:44:52Z\n\n    Adding Plain Sasl Transport Plugin\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T22:30:49.526+0000","updated":"2016-03-01T22:30:49.526+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174554","id":"15174554","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54649628\n  \n    --- Diff: conf/defaults.yaml ---\n    @@ -39,7 +39,7 @@ storm.exhibitor.port: 8080\n     storm.exhibitor.poll.uripath: \"/exhibitor/v1/cluster/list\"\n     storm.cluster.mode: \"distributed\" # can be distributed or local\n     storm.local.mode.zmq: false\n    -storm.thrift.transport: \"org.apache.storm.security.auth.SimpleTransportPlugin\"\n    +storm.thrift.transport: \"org.apache.storm.security.auth.plain.PlainSaslTransportPlugin\"\n    --- End diff --\n    \n    What is the rationale for the `.plain` portion of this config? The class already says it is Plain.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T22:47:48.540+0000","updated":"2016-03-01T22:47:48.540+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174560","id":"15174560","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54649974\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainClientCallbackHandler.java ---\n    @@ -0,0 +1,80 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import java.io.IOException;\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.RealmCallback;\n    +\n    +\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +/**\n    + *  client side callback handler.\n    + */\n    +public class PlainClientCallbackHandler implements CallbackHandler {\n    +    private static final String USERNAME = \"username\";\n    +    private static final String PASSWORD = \"password\";\n    +    private static final Logger LOG = LoggerFactory.getLogger(PlainClientCallbackHandler.class);\n    +    private String _username = \"username\";\n    +    private String _password = \"password\";\n    +\n    +    /**\n    +     * This method is invoked by SASL for authentication challenges\n    +     * @param callbacks a collection of challenge callbacks \n    +     */\n    +    public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {\n    +        for (Callback c : callbacks) {\n    +            if (c instanceof NameCallback) {\n    +                LOG.debug(\"name callback\");\n    +                NameCallback nc = (NameCallback) c;\n    +                nc.setName(_username);\n    +            } else if (c instanceof PasswordCallback) {\n    +                LOG.debug(\"password callback\");\n    +                PasswordCallback pc = (PasswordCallback)c;\n    +                if (_password != null) {\n    +                    pc.setPassword(_password.toCharArray());\n    +                } \n    +            } else if (c instanceof AuthorizeCallback) {\n    +                LOG.debug(\"authorization callback\");\n    +                AuthorizeCallback ac = (AuthorizeCallback) c;\n    +                String authid = ac.getAuthenticationID();\n    +                String authzid = ac.getAuthorizationID();\n    +                if (authid.equals(authzid)) {\n    +                    ac.setAuthorized(true);\n    +                } else {\n    +                    ac.setAuthorized(false);\n    +                }\n    +                if (ac.isAuthorized()) {\n    +                    ac.setAuthorizedID(authzid);\n    +                }\n    --- End diff --\n    \n    We can just `setAuthorizedID` above when we `setAuthorized`.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T22:50:14.782+0000","updated":"2016-03-01T22:50:14.782+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174562","id":"15174562","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54650057\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainClientCallbackHandler.java ---\n    @@ -0,0 +1,80 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import java.io.IOException;\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.RealmCallback;\n    +\n    +\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +/**\n    + *  client side callback handler.\n    + */\n    +public class PlainClientCallbackHandler implements CallbackHandler {\n    +    private static final String USERNAME = \"username\";\n    +    private static final String PASSWORD = \"password\";\n    +    private static final Logger LOG = LoggerFactory.getLogger(PlainClientCallbackHandler.class);\n    +    private String _username = \"username\";\n    +    private String _password = \"password\";\n    +\n    +    /**\n    +     * This method is invoked by SASL for authentication challenges\n    +     * @param callbacks a collection of challenge callbacks \n    +     */\n    +    public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {\n    +        for (Callback c : callbacks) {\n    +            if (c instanceof NameCallback) {\n    +                LOG.debug(\"name callback\");\n    +                NameCallback nc = (NameCallback) c;\n    +                nc.setName(_username);\n    +            } else if (c instanceof PasswordCallback) {\n    +                LOG.debug(\"password callback\");\n    +                PasswordCallback pc = (PasswordCallback)c;\n    +                if (_password != null) {\n    +                    pc.setPassword(_password.toCharArray());\n    +                } \n    +            } else if (c instanceof AuthorizeCallback) {\n    +                LOG.debug(\"authorization callback\");\n    +                AuthorizeCallback ac = (AuthorizeCallback) c;\n    +                String authid = ac.getAuthenticationID();\n    +                String authzid = ac.getAuthorizationID();\n    +                if (authid.equals(authzid)) {\n    +                    ac.setAuthorized(true);\n    +                } else {\n    +                    ac.setAuthorized(false);\n    +                }\n    +                if (ac.isAuthorized()) {\n    +                    ac.setAuthorizedID(authzid);\n    +                }\n    +            } else if (c instanceof RealmCallback) {\n    --- End diff --\n    \n    Minor: there is no LOG.debug here as with the other callbacks. Is that intentional?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T22:50:53.648+0000","updated":"2016-03-01T22:50:53.648+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174563","id":"15174563","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54650134\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainClientCallbackHandler.java ---\n    @@ -0,0 +1,80 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import java.io.IOException;\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.RealmCallback;\n    +\n    +\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +/**\n    + *  client side callback handler.\n    + */\n    +public class PlainClientCallbackHandler implements CallbackHandler {\n    +    private static final String USERNAME = \"username\";\n    +    private static final String PASSWORD = \"password\";\n    +    private static final Logger LOG = LoggerFactory.getLogger(PlainClientCallbackHandler.class);\n    +    private String _username = \"username\";\n    +    private String _password = \"password\";\n    +\n    +    /**\n    +     * This method is invoked by SASL for authentication challenges\n    +     * @param callbacks a collection of challenge callbacks \n    +     */\n    +    public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {\n    +        for (Callback c : callbacks) {\n    +            if (c instanceof NameCallback) {\n    +                LOG.debug(\"name callback\");\n    +                NameCallback nc = (NameCallback) c;\n    +                nc.setName(_username);\n    +            } else if (c instanceof PasswordCallback) {\n    +                LOG.debug(\"password callback\");\n    +                PasswordCallback pc = (PasswordCallback)c;\n    +                if (_password != null) {\n    +                    pc.setPassword(_password.toCharArray());\n    +                } \n    +            } else if (c instanceof AuthorizeCallback) {\n    +                LOG.debug(\"authorization callback\");\n    +                AuthorizeCallback ac = (AuthorizeCallback) c;\n    +                String authid = ac.getAuthenticationID();\n    +                String authzid = ac.getAuthorizationID();\n    +                if (authid.equals(authzid)) {\n    +                    ac.setAuthorized(true);\n    +                } else {\n    +                    ac.setAuthorized(false);\n    +                }\n    +                if (ac.isAuthorized()) {\n    +                    ac.setAuthorizedID(authzid);\n    +                }\n    +            } else if (c instanceof RealmCallback) {\n    +                RealmCallback rc = (RealmCallback) c;\n    +                ((RealmCallback) c).setText(rc.getDefaultText());\n    --- End diff --\n    \n    Can we not reuse `rc` instead of casting twice?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T22:51:41.122+0000","updated":"2016-03-01T22:51:41.122+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174570","id":"15174570","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54650921\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainClientCallbackHandler.java ---\n    @@ -0,0 +1,80 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import java.io.IOException;\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.RealmCallback;\n    +\n    +\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +/**\n    + *  client side callback handler.\n    + */\n    +public class PlainClientCallbackHandler implements CallbackHandler {\n    +    private static final String USERNAME = \"username\";\n    +    private static final String PASSWORD = \"password\";\n    +    private static final Logger LOG = LoggerFactory.getLogger(PlainClientCallbackHandler.class);\n    +    private String _username = \"username\";\n    +    private String _password = \"password\";\n    --- End diff --\n    \n    Let's get rid of the private members and just use the constants already defined above.\n    \n    We also want to reference these hard-coded user/pass in the other classes.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T22:57:28.970+0000","updated":"2016-03-01T22:57:28.970+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174574","id":"15174574","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54651094\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainSaslTransportPlugin.java ---\n    @@ -0,0 +1,80 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import org.apache.storm.security.auth.AuthUtils;\n    +import org.apache.storm.security.auth.SaslTransportPlugin;\n    +import org.apache.storm.utils.ExtendedThreadPoolExecutor;\n    +import org.apache.thrift.TProcessor;\n    +import org.apache.thrift.protocol.TBinaryProtocol;\n    +import org.apache.thrift.server.TServer;\n    +import org.apache.thrift.server.TThreadPoolServer;\n    +import org.apache.thrift.transport.TSaslClientTransport;\n    +import org.apache.thrift.transport.TSaslServerTransport;\n    +import org.apache.thrift.transport.TServerSocket;\n    +import org.apache.thrift.transport.TTransport;\n    +import org.apache.thrift.transport.TTransportException;\n    +import org.apache.thrift.transport.TTransportFactory;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import javax.security.auth.callback.CallbackHandler;\n    +import java.io.IOException;\n    +import java.security.Security;\n    +import java.util.concurrent.ArrayBlockingQueue;\n    +import java.util.concurrent.BlockingQueue;\n    +import java.util.concurrent.SynchronousQueue;\n    +import java.util.concurrent.ThreadPoolExecutor;\n    +import java.util.concurrent.TimeUnit;\n    +\n    +public class PlainSaslTransportPlugin extends SaslTransportPlugin {\n    +    public static final String PLAIN = \"PLAIN\";\n    +    private static final Logger LOG = LoggerFactory.getLogger(PlainSaslTransportPlugin.class);\n    +\n    +    @Override\n    +    protected TTransportFactory getServerTransportFactory() throws IOException {\n    +        //create an authentication callback handler\n    +        CallbackHandler serer_callback_handler = new PlainServerCallbackHandler();\n    +        Security.addProvider(new SaslPlainServer.SecurityProvider());\n    +        //create a transport factory that will invoke our auth callback for digest\n    +        TSaslServerTransport.Factory factory = new TSaslServerTransport.Factory();\n    +        factory.addServerDefinition(PLAIN, AuthUtils.SERVICE, \"localhost\", null, serer_callback_handler);\n    +\n    +        LOG.info(\"SASL PLAIN transport factory will be used\");\n    +        return factory;\n    +    }\n    +\n    +    @Override\n    +    public TTransport connect(TTransport transport, String serverHost, String asUser) throws IOException, TTransportException {\n    +        PlainClientCallbackHandler client_callback_handler = new PlainClientCallbackHandler();\n    +        TSaslClientTransport wrapper_transport = new TSaslClientTransport(PLAIN,\n    +            null,\n    +            AuthUtils.SERVICE,\n    +            serverHost,\n    +            null,\n    +            client_callback_handler,\n    +            transport);\n    +\n    +        wrapper_transport.open();\n    +        LOG.debug(\"SASL PLAIN client transport has been established\");\n    +\n    +        return wrapper_transport;\n    +\n    +    }\n    +\n    --- End diff --\n    \n    nit: blank lines\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T22:58:48.075+0000","updated":"2016-03-01T22:58:48.075+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174576","id":"15174576","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54651160\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainServerCallbackHandler.java ---\n    @@ -0,0 +1,108 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import java.io.IOException;\n    +import java.util.HashMap;\n    +import java.util.Map;\n    +\n    +import org.apache.storm.security.auth.ReqContext;\n    +import org.apache.storm.security.auth.SaslTransportPlugin;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.RealmCallback;\n    +\n    +/**\n    + * SASL server side callback handler\n    + */\n    +public class PlainServerCallbackHandler implements CallbackHandler {\n    +    private static final Logger LOG = LoggerFactory.getLogger(PlainServerCallbackHandler.class);\n    +    private static final String SYSPROP_SUPER_PASSWORD = \"storm.SASLAuthenticationProvider.superPassword\";\n    --- End diff --\n    \n    Do we need a superuser password?  I thought this was all hard-coded to use constants?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T22:59:25.325+0000","updated":"2016-03-01T22:59:25.325+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174577","id":"15174577","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54651204\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainServerCallbackHandler.java ---\n    @@ -0,0 +1,108 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import java.io.IOException;\n    +import java.util.HashMap;\n    +import java.util.Map;\n    +\n    +import org.apache.storm.security.auth.ReqContext;\n    +import org.apache.storm.security.auth.SaslTransportPlugin;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.RealmCallback;\n    +\n    +/**\n    + * SASL server side callback handler\n    + */\n    +public class PlainServerCallbackHandler implements CallbackHandler {\n    +    private static final Logger LOG = LoggerFactory.getLogger(PlainServerCallbackHandler.class);\n    +    private static final String SYSPROP_SUPER_PASSWORD = \"storm.SASLAuthenticationProvider.superPassword\";\n    +\n    +    private String userName=\"username\";\n    +    private final Map<String,String> credentials = new HashMap<>();\n    +\n    +    public PlainServerCallbackHandler() throws IOException {\n    +        credentials.put(\"username\", \"password\");\n    +    }\n    --- End diff --\n    \n    Here we probably want to reference constants.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T22:59:50.092+0000","updated":"2016-03-01T22:59:50.092+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174581","id":"15174581","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54651338\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainServerCallbackHandler.java ---\n    @@ -0,0 +1,108 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import java.io.IOException;\n    +import java.util.HashMap;\n    +import java.util.Map;\n    +\n    +import org.apache.storm.security.auth.ReqContext;\n    +import org.apache.storm.security.auth.SaslTransportPlugin;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.RealmCallback;\n    +\n    +/**\n    + * SASL server side callback handler\n    + */\n    +public class PlainServerCallbackHandler implements CallbackHandler {\n    +    private static final Logger LOG = LoggerFactory.getLogger(PlainServerCallbackHandler.class);\n    +    private static final String SYSPROP_SUPER_PASSWORD = \"storm.SASLAuthenticationProvider.superPassword\";\n    +\n    +    private String userName=\"username\";\n    +    private final Map<String,String> credentials = new HashMap<>();\n    +\n    +    public PlainServerCallbackHandler() throws IOException {\n    +        credentials.put(\"username\", \"password\");\n    +    }\n    +\n    +    public void handle(Callback[] callbacks) throws UnsupportedCallbackException {\n    +        for (Callback callback : callbacks) {\n    +            if (callback instanceof NameCallback) {\n    +                handleNameCallback((NameCallback) callback);\n    +            } else if (callback instanceof PasswordCallback) {\n    +                handlePasswordCallback((PasswordCallback) callback);\n    +            } else if (callback instanceof RealmCallback) {\n    +                handleRealmCallback((RealmCallback) callback);\n    +            } else if (callback instanceof AuthorizeCallback) {\n    +                handleAuthorizeCallback((AuthorizeCallback) callback);\n    +            }\n    +        }\n    +    }\n    +\n    +    private void handleNameCallback(NameCallback nc) {\n    +        LOG.debug(\"handleNameCallback\");\n    +        userName = nc.getDefaultName();\n    +        nc.setName(nc.getDefaultName());\n    +    }\n    +\n    +    private void handlePasswordCallback(PasswordCallback pc) {\n    +        LOG.debug(\"handlePasswordCallback\");\n    +        if (\"super\".equals(this.userName) && System.getProperty(SYSPROP_SUPER_PASSWORD) != null) {\n    +            // superuser: use Java system property for password, if available.\n    +            pc.setPassword(System.getProperty(SYSPROP_SUPER_PASSWORD).toCharArray());\n    +        } else if (credentials.containsKey(userName) ) {\n    +            pc.setPassword(credentials.get(userName).toCharArray());\n    +        } else {\n    +            LOG.warn(\"No password found for user: \" + userName);\n    +        }\n    +    }\n    --- End diff --\n    \n    Same question here.  Not sure we want the concept of a superuser.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T23:00:45.521+0000","updated":"2016-03-01T23:00:45.521+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174582","id":"15174582","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54651434\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainServerCallbackHandler.java ---\n    @@ -0,0 +1,108 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import java.io.IOException;\n    +import java.util.HashMap;\n    +import java.util.Map;\n    +\n    +import org.apache.storm.security.auth.ReqContext;\n    +import org.apache.storm.security.auth.SaslTransportPlugin;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.RealmCallback;\n    +\n    +/**\n    + * SASL server side callback handler\n    + */\n    +public class PlainServerCallbackHandler implements CallbackHandler {\n    +    private static final Logger LOG = LoggerFactory.getLogger(PlainServerCallbackHandler.class);\n    +    private static final String SYSPROP_SUPER_PASSWORD = \"storm.SASLAuthenticationProvider.superPassword\";\n    +\n    +    private String userName=\"username\";\n    +    private final Map<String,String> credentials = new HashMap<>();\n    +\n    +    public PlainServerCallbackHandler() throws IOException {\n    +        credentials.put(\"username\", \"password\");\n    +    }\n    +\n    +    public void handle(Callback[] callbacks) throws UnsupportedCallbackException {\n    +        for (Callback callback : callbacks) {\n    +            if (callback instanceof NameCallback) {\n    +                handleNameCallback((NameCallback) callback);\n    +            } else if (callback instanceof PasswordCallback) {\n    +                handlePasswordCallback((PasswordCallback) callback);\n    +            } else if (callback instanceof RealmCallback) {\n    +                handleRealmCallback((RealmCallback) callback);\n    +            } else if (callback instanceof AuthorizeCallback) {\n    +                handleAuthorizeCallback((AuthorizeCallback) callback);\n    +            }\n    +        }\n    +    }\n    +\n    +    private void handleNameCallback(NameCallback nc) {\n    +        LOG.debug(\"handleNameCallback\");\n    +        userName = nc.getDefaultName();\n    +        nc.setName(nc.getDefaultName());\n    +    }\n    +\n    +    private void handlePasswordCallback(PasswordCallback pc) {\n    +        LOG.debug(\"handlePasswordCallback\");\n    +        if (\"super\".equals(this.userName) && System.getProperty(SYSPROP_SUPER_PASSWORD) != null) {\n    +            // superuser: use Java system property for password, if available.\n    +            pc.setPassword(System.getProperty(SYSPROP_SUPER_PASSWORD).toCharArray());\n    +        } else if (credentials.containsKey(userName) ) {\n    +            pc.setPassword(credentials.get(userName).toCharArray());\n    +        } else {\n    +            LOG.warn(\"No password found for user: \" + userName);\n    +        }\n    +    }\n    +\n    +    private void handleRealmCallback(RealmCallback rc) {\n    +        LOG.debug(\"handleRealmCallback: \"+ rc.getDefaultText());\n    +        rc.setText(rc.getDefaultText());\n    +    }\n    +\n    +    private void handleAuthorizeCallback(AuthorizeCallback ac) {\n    +        String authenticationID = ac.getAuthenticationID();\n    +        LOG.info(\"Successfully authenticated client: authenticationID = \" + authenticationID + \" authorizationID = \" + ac.getAuthorizationID());\n    +\n    +        //if authorizationId is not set, set it to authenticationId.\n    +        if(ac.getAuthorizationID() == null) {\n    +            ac.setAuthorizedID(authenticationID);\n    +        }\n    +\n    +        //When authNid and authZid are not equal , authNId is attempting to impersonate authZid, We\n    +        //add the authNid as the real user in reqContext's subject which will be used during authorization.\n    +        if(!authenticationID.equals(ac.getAuthorizationID())) {\n    +            LOG.info(\"Impersonation attempt  authenticationID = \" + ac.getAuthenticationID() + \" authorizationID = \" + ac.getAuthorizationID());\n    --- End diff --\n    \n    minor: use format strings `{}` like in other log statements.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T23:01:25.685+0000","updated":"2016-03-01T23:01:25.685+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174583","id":"15174583","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54651499\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/SaslPlainServer.java ---\n    @@ -0,0 +1,154 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import java.security.Provider;\n    +import java.util.Map;\n    +\n    +import javax.security.auth.callback.*;\n    --- End diff --\n    \n    I would be nice to expand all imports.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T23:01:51.896+0000","updated":"2016-03-01T23:01:51.896+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174585","id":"15174585","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54651550\n  \n    --- Diff: conf/defaults.yaml ---\n    @@ -39,7 +39,7 @@ storm.exhibitor.port: 8080\n     storm.exhibitor.poll.uripath: \"/exhibitor/v1/cluster/list\"\n     storm.cluster.mode: \"distributed\" # can be distributed or local\n     storm.local.mode.zmq: false\n    -storm.thrift.transport: \"org.apache.storm.security.auth.SimpleTransportPlugin\"\n    +storm.thrift.transport: \"org.apache.storm.security.auth.plain.PlainSaslTransportPlugin\"\n    --- End diff --\n    \n    Under `org.apache.storm.security.auth` package we have sub-package by mechanism e.g. `digest`, `kerberos`. Hence the package name `plain`\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T23:02:11.620+0000","updated":"2016-03-01T23:02:11.620+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174586","id":"15174586","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54651672\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/SaslPlainServer.java ---\n    @@ -0,0 +1,154 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import java.security.Provider;\n    +import java.util.Map;\n    +\n    +import javax.security.auth.callback.*;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.Sasl;\n    +import javax.security.sasl.SaslException;\n    +import javax.security.sasl.SaslServer;\n    +import javax.security.sasl.SaslServerFactory;\n    +\n    +public class SaslPlainServer implements SaslServer {\n    +  @SuppressWarnings(\"serial\")\n    +  public static class SecurityProvider extends Provider {\n    +    public SecurityProvider() {\n    +      super(\"SaslPlainServer\", 1.0, \"SASL PLAIN Authentication Server\");\n    +      put(\"SaslServerFactory.PLAIN\",\n    +          SaslPlainServerFactory.class.getName());\n    --- End diff --\n    \n    Just `\"SaslPlainServerFactory\"` ?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T23:03:09.673+0000","updated":"2016-03-01T23:03:09.673+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174591","id":"15174591","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/storm/pull/1173#issuecomment-190954323\n  \n    @kishorvpatil Some of this looks like borrowed code that is not tailored specifically to storm. Is that the case?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T23:06:59.717+0000","updated":"2016-03-01T23:06:59.717+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15174636","id":"15174636","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil commented on the pull request:\n\n    https://github.com/apache/storm/pull/1173#issuecomment-190969675\n  \n    @d2r That's right. The `SaslPlainServer` is implementation borrowed from [hadoop](https://github.com/apache/hadoop/blob/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslPlainServer.java). And `CallBackHandler` implementations are mostly clones from digest package with minor changes.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-01T23:39:29.601+0000","updated":"2016-03-01T23:39:29.601+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175109","id":"15175109","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil commented on the pull request:\n\n    https://github.com/apache/storm/pull/1173#issuecomment-191083880\n  \n    @d2r i have tried to address all your comments, including refactoring two abstract classed `AbstractSaslClientCallbackHandler.java` and `AbstractSaslServerCallbackHandler.java` to place common methods for DIGEST and PLAIN in one place.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T06:15:13.146+0000","updated":"2016-03-02T06:15:13.146+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175125","id":"15175125","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil closed the pull request at:\n\n    https://github.com/apache/storm/pull/1173\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T06:28:07.947+0000","updated":"2016-03-02T06:28:07.947+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175126","id":"15175126","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user kishorvpatil reopened a pull request:\n\n    https://github.com/apache/storm/pull/1173\n\n    [STORM-1469] Adding Plain Sasl Transport Plugin\n\n    Since `org.apache.storm.security.auth.SimpleTransportPlugin` creates `TFramedTransport` with maxBufferSize, but that conflicts with serialized topology of size exceeded 16MB - default `THsHaServer` allowed max buffer size. So the better option is to implement `PlainSaslTransportPlugin` which avoids using any default values for max-buffer-size. \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/kishorvpatil/incubator-storm storm1469\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/1173.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #1173\n    \n----\ncommit b1e4c94269dbcf2ba01aee89e468c744887c53de\nAuthor: Kishor Patil <kpatil@yahoo-inc.com>\nDate:   2016-02-29T20:44:52Z\n\n    Adding Plain Sasl Transport Plugin\n\ncommit cccb9766eb6b01477b44cd35e836997811464632\nAuthor: Kishor Patil <kpatil@yahoo-inc.com>\nDate:   2016-03-02T06:12:57Z\n\n    Refactoring SaslServerCallbackHandler and SaslClientCallbackHandler\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T06:28:09.626+0000","updated":"2016-03-02T06:28:09.626+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175216","id":"15175216","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user abhishekagarwal87 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54689200\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainSaslTransportPlugin.java ---\n    @@ -0,0 +1,69 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import org.apache.storm.security.auth.AuthUtils;\n    +import org.apache.storm.security.auth.SaslTransportPlugin;\n    +import org.apache.thrift.transport.TSaslClientTransport;\n    +import org.apache.thrift.transport.TSaslServerTransport;\n    +import org.apache.thrift.transport.TTransport;\n    +import org.apache.thrift.transport.TTransportException;\n    +import org.apache.thrift.transport.TTransportFactory;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import javax.security.auth.callback.CallbackHandler;\n    +import java.io.IOException;\n    +import java.security.Security;\n    +\n    +public class PlainSaslTransportPlugin extends SaslTransportPlugin {\n    +    public static final String PLAIN = \"PLAIN\";\n    +    private static final Logger LOG = LoggerFactory.getLogger(PlainSaslTransportPlugin.class);\n    +\n    +    @Override\n    +    protected TTransportFactory getServerTransportFactory() throws IOException {\n    +        //create an authentication callback handler\n    +        CallbackHandler server_callback_handler = new PlainServerCallbackHandler();\n    --- End diff --\n    \n    minor: could use camelCase convention. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T07:47:16.455+0000","updated":"2016-03-02T07:47:16.455+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175650","id":"15175650","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54727772\n  \n    --- Diff: conf/defaults.yaml ---\n    @@ -39,7 +39,7 @@ storm.exhibitor.port: 8080\n     storm.exhibitor.poll.uripath: \"/exhibitor/v1/cluster/list\"\n     storm.cluster.mode: \"distributed\" # can be distributed or local\n     storm.local.mode.zmq: false\n    -storm.thrift.transport: \"org.apache.storm.security.auth.SimpleTransportPlugin\"\n    +storm.thrift.transport: \"org.apache.storm.security.auth.plain.PlainSaslTransportPlugin\"\n    --- End diff --\n    \n    This breaks wire compatibility, so it will not be a rolling upgrade.  I am OK with that, but I want to be sure that it is documented.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T14:19:47.913+0000","updated":"2016-03-02T14:19:47.913+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175651","id":"15175651","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54727990\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/AbstractSaslClientCallbackHandler.java ---\n    @@ -0,0 +1,76 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth;\n    +\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.RealmCallback;\n    +import java.io.IOException;\n    +\n    +public abstract class AbstractSaslClientCallbackHandler implements CallbackHandler {\n    +    protected static final String USERNAME = \"username\";\n    +    protected static final String PASSWORD = \"password\";\n    +    private static final Logger LOG = LoggerFactory.getLogger(AbstractSaslClientCallbackHandler.class);\n    +    protected String _username = null;\n    +    protected String _password = null;\n    +\n    +    /**\n    +     * This method is invoked by SASL for authentication challenges\n    +     * @param callbacks a collection of challenge callbacks\n    +     */\n    +    public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {\n    +        for (Callback c : callbacks) {\n    +            if (c instanceof NameCallback) {\n    +                LOG.debug(\"name callback\");\n    +                NameCallback nc = (NameCallback) c;\n    +                nc.setName(_username);\n    --- End diff --\n    \n    So we are always going to set the name to null???\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T14:21:32.769+0000","updated":"2016-03-02T14:21:32.769+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175655","id":"15175655","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54728287\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/AbstractSaslServerCallbackHandler.java ---\n    @@ -0,0 +1,77 @@\n    +package org.apache.storm.security.auth;\n    +\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.RealmCallback;\n    +import java.util.HashMap;\n    +import java.util.Map;\n    +\n    +public abstract class AbstractSaslServerCallbackHandler implements CallbackHandler {\n    +    private static final Logger LOG = LoggerFactory.getLogger(AbstractSaslServerCallbackHandler.class);\n    +    protected final Map<String,String> credentials = new HashMap<>();\n    +    protected String userName;\n    +\n    +    public void handle(Callback[] callbacks) throws UnsupportedCallbackException {\n    +        for (Callback callback : callbacks) {\n    +            if (callback instanceof NameCallback) {\n    +                handleNameCallback((NameCallback) callback);\n    +            } else if (callback instanceof PasswordCallback) {\n    +                handlePasswordCallback((PasswordCallback) callback);\n    +            } else if (callback instanceof RealmCallback) {\n    +                handleRealmCallback((RealmCallback) callback);\n    +            } else if (callback instanceof AuthorizeCallback) {\n    +                handleAuthorizeCallback((AuthorizeCallback) callback);\n    +            }\n    +        }\n    +    }\n    +\n    +    private void handleNameCallback(NameCallback nc) {\n    +        LOG.debug(\"handleNameCallback\");\n    +        userName = nc.getDefaultName();\n    +        nc.setName(nc.getDefaultName());\n    +    }\n    +\n    +    protected void handlePasswordCallback(PasswordCallback pc) {\n    +        LOG.debug(\"handlePasswordCallback\");\n    +        if (credentials.containsKey(userName) ) {\n    +            pc.setPassword(credentials.get(userName).toCharArray());\n    +        } else {\n    +            LOG.warn(\"No password found for user: \" + userName);\n    +        }\n    +    }\n    +\n    +    private void handleRealmCallback(RealmCallback rc) {\n    +        LOG.debug(\"handleRealmCallback: \"+ rc.getDefaultText());\n    --- End diff --\n    \n    Lets use the \"{}\" syntax here.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T14:23:24.888+0000","updated":"2016-03-02T14:23:24.888+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175656","id":"15175656","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54728326\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/AbstractSaslServerCallbackHandler.java ---\n    @@ -0,0 +1,77 @@\n    +package org.apache.storm.security.auth;\n    +\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import javax.security.auth.callback.Callback;\n    +import javax.security.auth.callback.CallbackHandler;\n    +import javax.security.auth.callback.NameCallback;\n    +import javax.security.auth.callback.PasswordCallback;\n    +import javax.security.auth.callback.UnsupportedCallbackException;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.RealmCallback;\n    +import java.util.HashMap;\n    +import java.util.Map;\n    +\n    +public abstract class AbstractSaslServerCallbackHandler implements CallbackHandler {\n    +    private static final Logger LOG = LoggerFactory.getLogger(AbstractSaslServerCallbackHandler.class);\n    +    protected final Map<String,String> credentials = new HashMap<>();\n    +    protected String userName;\n    +\n    +    public void handle(Callback[] callbacks) throws UnsupportedCallbackException {\n    +        for (Callback callback : callbacks) {\n    +            if (callback instanceof NameCallback) {\n    +                handleNameCallback((NameCallback) callback);\n    +            } else if (callback instanceof PasswordCallback) {\n    +                handlePasswordCallback((PasswordCallback) callback);\n    +            } else if (callback instanceof RealmCallback) {\n    +                handleRealmCallback((RealmCallback) callback);\n    +            } else if (callback instanceof AuthorizeCallback) {\n    +                handleAuthorizeCallback((AuthorizeCallback) callback);\n    +            }\n    +        }\n    +    }\n    +\n    +    private void handleNameCallback(NameCallback nc) {\n    +        LOG.debug(\"handleNameCallback\");\n    +        userName = nc.getDefaultName();\n    +        nc.setName(nc.getDefaultName());\n    +    }\n    +\n    +    protected void handlePasswordCallback(PasswordCallback pc) {\n    +        LOG.debug(\"handlePasswordCallback\");\n    +        if (credentials.containsKey(userName) ) {\n    +            pc.setPassword(credentials.get(userName).toCharArray());\n    +        } else {\n    +            LOG.warn(\"No password found for user: \" + userName);\n    --- End diff --\n    \n    \"{}\" syntax\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T14:23:44.095+0000","updated":"2016-03-02T14:23:44.095+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175659","id":"15175659","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54728782\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainSaslTransportPlugin.java ---\n    @@ -0,0 +1,69 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import org.apache.storm.security.auth.AuthUtils;\n    +import org.apache.storm.security.auth.SaslTransportPlugin;\n    +import org.apache.thrift.transport.TSaslClientTransport;\n    +import org.apache.thrift.transport.TSaslServerTransport;\n    +import org.apache.thrift.transport.TTransport;\n    +import org.apache.thrift.transport.TTransportException;\n    +import org.apache.thrift.transport.TTransportFactory;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import javax.security.auth.callback.CallbackHandler;\n    +import java.io.IOException;\n    +import java.security.Security;\n    +\n    +public class PlainSaslTransportPlugin extends SaslTransportPlugin {\n    +    public static final String PLAIN = \"PLAIN\";\n    +    private static final Logger LOG = LoggerFactory.getLogger(PlainSaslTransportPlugin.class);\n    +\n    +    @Override\n    +    protected TTransportFactory getServerTransportFactory() throws IOException {\n    +        //create an authentication callback handler\n    +        CallbackHandler server_callback_handler = new PlainServerCallbackHandler();\n    +        Security.addProvider(new SaslPlainServer.SecurityProvider());\n    --- End diff --\n    \n    What happens if we add this multiple times?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T14:27:07.708+0000","updated":"2016-03-02T14:27:07.708+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175660","id":"15175660","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54728926\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/SaslPlainServer.java ---\n    @@ -0,0 +1,154 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + *     http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import java.security.Provider;\n    +import java.util.Map;\n    +\n    +import javax.security.auth.callback.*;\n    +import javax.security.sasl.AuthorizeCallback;\n    +import javax.security.sasl.Sasl;\n    +import javax.security.sasl.SaslException;\n    +import javax.security.sasl.SaslServer;\n    +import javax.security.sasl.SaslServerFactory;\n    +\n    +public class SaslPlainServer implements SaslServer {\n    +  @SuppressWarnings(\"serial\")\n    +  public static class SecurityProvider extends Provider {\n    +    public SecurityProvider() {\n    +      super(\"SaslPlainServer\", 1.0, \"SASL PLAIN Authentication Server\");\n    +      put(\"SaslServerFactory.PLAIN\",\n    +          SaslPlainServerFactory.class.getName());\n    --- End diff --\n    \n    This ensures that if the package changes or something else like it changes we get a compile error, not a runtime error.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T14:28:23.840+0000","updated":"2016-03-02T14:28:23.840+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175670","id":"15175670","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on the pull request:\n\n    https://github.com/apache/storm/pull/1173#issuecomment-191261944\n  \n    Overall it looks fairly good, but you have a problem with RAT somewhere.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T14:35:43.302+0000","updated":"2016-03-02T14:35:43.302+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175671","id":"15175671","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54730042\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/AbstractSaslServerCallbackHandler.java ---\n    @@ -0,0 +1,77 @@\n    +package org.apache.storm.security.auth;\n    --- End diff --\n    \n    Needs an Apache header.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T14:36:01.374+0000","updated":"2016-03-02T14:36:01.374+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175768","id":"15175768","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54736725\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainClientCallbackHandler.java ---\n    @@ -0,0 +1,31 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import org.apache.storm.security.auth.AbstractSaslClientCallbackHandler;\n    +\n    +public class PlainClientCallbackHandler extends AbstractSaslClientCallbackHandler {\n    +\n    +    /*\n    +     * For plain, using constants for a pair of user name and password.\n    +     */\n    +    public PlainClientCallbackHandler() {\n    +        _username = USERNAME;\n    --- End diff --\n    \n    I forgot to ask before is the user this always reports to nimbus/etc now \"username\"?  If so I really would prefer to pass in the user name of the current user on this system, or even better have the server set the user to null like we were doing before.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T15:19:23.788+0000","updated":"2016-03-02T15:19:23.788+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175813","id":"15175813","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54740640\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainSaslTransportPlugin.java ---\n    @@ -0,0 +1,69 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import org.apache.storm.security.auth.AuthUtils;\n    +import org.apache.storm.security.auth.SaslTransportPlugin;\n    +import org.apache.thrift.transport.TSaslClientTransport;\n    +import org.apache.thrift.transport.TSaslServerTransport;\n    +import org.apache.thrift.transport.TTransport;\n    +import org.apache.thrift.transport.TTransportException;\n    +import org.apache.thrift.transport.TTransportFactory;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +import javax.security.auth.callback.CallbackHandler;\n    +import java.io.IOException;\n    +import java.security.Security;\n    +\n    +public class PlainSaslTransportPlugin extends SaslTransportPlugin {\n    +    public static final String PLAIN = \"PLAIN\";\n    +    private static final Logger LOG = LoggerFactory.getLogger(PlainSaslTransportPlugin.class);\n    +\n    +    @Override\n    +    protected TTransportFactory getServerTransportFactory() throws IOException {\n    +        //create an authentication callback handler\n    +        CallbackHandler server_callback_handler = new PlainServerCallbackHandler();\n    +        Security.addProvider(new SaslPlainServer.SecurityProvider());\n    --- End diff --\n    \n    I will add it to constructor with additional check on if provider is already registered.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T15:43:29.823+0000","updated":"2016-03-02T15:43:29.823+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15175885","id":"15175885","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54749129\n  \n    --- Diff: conf/defaults.yaml ---\n    @@ -39,7 +39,7 @@ storm.exhibitor.port: 8080\n     storm.exhibitor.poll.uripath: \"/exhibitor/v1/cluster/list\"\n     storm.cluster.mode: \"distributed\" # can be distributed or local\n     storm.local.mode.zmq: false\n    -storm.thrift.transport: \"org.apache.storm.security.auth.SimpleTransportPlugin\"\n    +storm.thrift.transport: \"org.apache.storm.security.auth.plain.PlainSaslTransportPlugin\"\n    --- End diff --\n    \n    Since there is not good place to document this. I am simply going without any chances to default on \"storm.thrift.tranport\" so we can pull this in 1.x-branch as well. I will create two separate pull requests - \n    1. to change default and deprecate  `SimpleTransportPlugin`  and configuration on 1.x-branch.\n    2. To remove `SimpleTransportPlugin` and configuration in master.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T16:30:46.169+0000","updated":"2016-03-02T16:30:46.169+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15176219","id":"15176219","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54769352\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/AbstractSaslServerCallbackHandler.java ---\n    @@ -0,0 +1,77 @@\n    +package org.apache.storm.security.auth;\n    --- End diff --\n    \n    added\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T18:41:36.452+0000","updated":"2016-03-02T18:41:36.452+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15176265","id":"15176265","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/1173#discussion_r54772909\n  \n    --- Diff: storm-core/src/jvm/org/apache/storm/security/auth/plain/PlainClientCallbackHandler.java ---\n    @@ -0,0 +1,31 @@\n    +/**\n    + * Licensed to the Apache Software Foundation (ASF) under one\n    + * or more contributor license agreements.  See the NOTICE file\n    + * distributed with this work for additional information\n    + * regarding copyright ownership.  The ASF licenses this file\n    + * to you under the Apache License, Version 2.0 (the\n    + * \"License\"); you may not use this file except in compliance\n    + * with the License.  You may obtain a copy of the License at\n    + *\n    + * http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +package org.apache.storm.security.auth.plain;\n    +\n    +import org.apache.storm.security.auth.AbstractSaslClientCallbackHandler;\n    +\n    +public class PlainClientCallbackHandler extends AbstractSaslClientCallbackHandler {\n    +\n    +    /*\n    +     * For plain, using constants for a pair of user name and password.\n    +     */\n    +    public PlainClientCallbackHandler() {\n    +        _username = USERNAME;\n    --- End diff --\n    \n    Fixed by using System.getProperty(\"user.name\").\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T19:04:26.544+0000","updated":"2016-03-02T19:04:26.544+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15176386","id":"15176386","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on the pull request:\n\n    https://github.com/apache/storm/pull/1173#issuecomment-191407577\n  \n    Looks good to me.  The test failures look unrelated to this.  +1\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T20:16:03.181+0000","updated":"2016-03-02T20:16:03.181+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15176441","id":"15176441","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/storm/pull/1173#issuecomment-191419837\n  \n    Seems good to me. +1\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-02T20:39:43.900+0000","updated":"2016-03-02T20:39:43.900+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15177287","id":"15177287","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user kishorvpatil opened a pull request:\n\n    https://github.com/apache/storm/pull/1178\n\n    [STORM-1469] Remove SimpleTransportPlugin and configuration\n\n    This pull request awaits merging in #1173 \n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/kishorvpatil/incubator-storm storm1469-removeSimple\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/1178.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #1178\n    \n----\ncommit b1e4c94269dbcf2ba01aee89e468c744887c53de\nAuthor: Kishor Patil <kpatil@yahoo-inc.com>\nDate:   2016-02-29T20:44:52Z\n\n    Adding Plain Sasl Transport Plugin\n\ncommit cccb9766eb6b01477b44cd35e836997811464632\nAuthor: Kishor Patil <kpatil@yahoo-inc.com>\nDate:   2016-03-02T06:12:57Z\n\n    Refactoring SaslServerCallbackHandler and SaslClientCallbackHandler\n\ncommit 4e04ce8dcdc33d488a3d15f7a47ab8af15136db4\nAuthor: Kishor Patil <kpatil@yahoo-inc.com>\nDate:   2016-03-02T16:27:56Z\n\n    Addressing review comments\n\ncommit 5e2d44df8c342d29d723ac4ac90d0e1efb6884bb\nAuthor: Kishor Patil <kpatil@yahoo-inc.com>\nDate:   2016-03-02T18:32:00Z\n\n    Using real user-id in the ReqContext instead of username in PlainSaslTransportPlugin\n\ncommit 1dbdfb1769979a8391348b5275bfd4bd2a4edf18\nAuthor: Kishor Patil <kpatil@yahoo-inc.com>\nDate:   2016-03-02T18:48:48Z\n\n    Renaming local variable to camelCase\n\ncommit b133d52043a5f97c019d796a27ded81523120428\nAuthor: Kishor Patil <kpatil@yahoo-inc.com>\nDate:   2016-03-03T04:46:48Z\n\n    Remove SimpleTransportPlugin and configurations\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-03T06:02:41.489+0000","updated":"2016-03-03T06:02:41.489+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15177288","id":"15177288","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user kishorvpatil opened a pull request:\n\n    https://github.com/apache/storm/pull/1179\n\n    [STORM-1469] Decommissioning SimpleTransportPlugin and configuration\n\n    This pull request awaits merging in #1173 merged into 1.x-branch as well.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/kishorvpatil/incubator-storm storm1469-simpledecom\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/1179.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #1179\n    \n----\ncommit 59b29b218357aaf39ae70e829ad5ff20e0732431\nAuthor: Kishor Patil <kpatil@yahoo-inc.com>\nDate:   2016-03-03T05:36:32Z\n\n    Decommissioning SimpleTransportPlugin\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-03T06:02:57.300+0000","updated":"2016-03-03T06:02:57.300+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15177289","id":"15177289","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil commented on the pull request:\n\n    https://github.com/apache/storm/pull/1173#issuecomment-191596685\n  \n    Created two pull requests as follow-up\n    \n    #1178  Remove SimpleTransportPlugin and configuration and \n    #1179 Decommissioning SimpleTransportPlugin and configuration ( on 1.x-branch.)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-03T06:04:22.294+0000","updated":"2016-03-03T06:04:22.294+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15178569","id":"15178569","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on the pull request:\n\n    https://github.com/apache/storm/pull/1179#issuecomment-191949144\n  \n    +1 not sure why travis failed.  Didn't even try to build in most cases.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-03T20:28:44.289+0000","updated":"2016-03-03T20:28:44.289+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15178570","id":"15178570","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on the pull request:\n\n    https://github.com/apache/storm/pull/1178#issuecomment-191949380\n  \n    Please rebase\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-03T20:29:30.040+0000","updated":"2016-03-03T20:29:30.040+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15179037","id":"15179037","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil closed the pull request at:\n\n    https://github.com/apache/storm/pull/1179\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-04T00:45:12.619+0000","updated":"2016-03-04T00:45:12.619+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15179038","id":"15179038","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user kishorvpatil reopened a pull request:\n\n    https://github.com/apache/storm/pull/1179\n\n    [STORM-1469] Decommissioning SimpleTransportPlugin and configuration\n\n    This pull request awaits merging in #1173 merged into 1.x-branch as well.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/kishorvpatil/incubator-storm storm1469-simpledecom\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/1179.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #1179\n    \n----\ncommit 59b29b218357aaf39ae70e829ad5ff20e0732431\nAuthor: Kishor Patil <kpatil@yahoo-inc.com>\nDate:   2016-03-03T05:36:32Z\n\n    Decommissioning SimpleTransportPlugin\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-04T00:45:12.822+0000","updated":"2016-03-04T00:45:12.822+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15183644","id":"15183644","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/storm/pull/1173\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-07T20:30:02.694+0000","updated":"2016-03-07T20:30:02.694+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15183645","id":"15183645","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"Thanks [~kishorvpatil],\n\nI merged this into master and 1.x-branch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2016-03-07T20:30:52.907+0000","updated":"2016-03-07T20:30:52.907+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15183663","id":"15183663","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kishorvpatil","name":"kishorvpatil","key":"kishorvpatil","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kishor Patil","active":true,"timeZone":"America/Chicago"},"body":"Reopning, as we need to merge https://github.com/apache/storm/pull/1178 and https://github.com/apache/storm/pull/1179","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kishorvpatil","name":"kishorvpatil","key":"kishorvpatil","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kishor Patil","active":true,"timeZone":"America/Chicago"},"created":"2016-03-07T20:45:14.550+0000","updated":"2016-03-07T20:45:14.550+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15185819","id":"15185819","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user ptgoetz commented on the pull request:\n\n    https://github.com/apache/storm/pull/1179#issuecomment-193971785\n  \n    +1. The travis failures seem like a red herring. All tests passed in my environment.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-08T21:17:18.895+0000","updated":"2016-03-08T21:17:18.895+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15185827","id":"15185827","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user d2r commented on the pull request:\n\n    https://github.com/apache/storm/pull/1179#issuecomment-193972813\n  \n    +1\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-08T21:20:39.841+0000","updated":"2016-03-08T21:20:39.841+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15187901","id":"15187901","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user ptgoetz commented on the pull request:\n\n    https://github.com/apache/storm/pull/1179#issuecomment-194497883\n  \n    Merged #1179 to 1.x-branch.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-09T20:40:43.078+0000","updated":"2016-03-09T20:40:43.078+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15187902","id":"15187902","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/storm/pull/1179\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-09T20:41:07.741+0000","updated":"2016-03-09T20:41:07.741+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15188034","id":"15188034","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on the pull request:\n\n    https://github.com/apache/storm/pull/1178#issuecomment-194507679\n  \n    +1\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-09T21:08:58.320+0000","updated":"2016-03-09T21:08:58.320+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15188036","id":"15188036","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user revans2 commented on the pull request:\n\n    https://github.com/apache/storm/pull/1178#issuecomment-194507988\n  \n    oops I missed that org.apache.storm.security.auth.auth-test / testname: digest-authentication-test is failing thinking that it want plane.  \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-03-09T21:10:03.527+0000","updated":"2016-03-09T21:10:03.527+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15208660","id":"15208660","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ptgoetz","name":"ptgoetz","key":"ptgoetz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"P. Taylor Goetz","active":true,"timeZone":"America/Havana"},"body":"Removing from 1.0 release epic since this has been fixed in the 1.x-branch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ptgoetz","name":"ptgoetz","key":"ptgoetz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"P. Taylor Goetz","active":true,"timeZone":"America/Havana"},"created":"2016-03-23T16:05:51.043+0000","updated":"2016-03-23T16:05:51.043+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15226315","id":"15226315","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user abhishekagarwal87 commented on the pull request:\n\n    https://github.com/apache/storm/pull/1178#issuecomment-205824333\n  \n    @kishorvpatil can you rebase it? Also, I see that default transport plugin in 1.x is still SimpleTransportPlugin even though it is deprecated. Is it intended? \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-04-05T14:06:51.370+0000","updated":"2016-04-05T14:06:51.370+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15226329","id":"15226329","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"Github user kishorvpatil commented on the pull request:\n\n    https://github.com/apache/storm/pull/1178#issuecomment-205829598\n  \n    @abhishekagarwal87 I supposed we did not merge this PR in time. I think we should change default plugin to `PlainSaslTransportPlugin`. Let me upmerge this.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2016-04-05T14:17:02.759+0000","updated":"2016-04-05T14:17:02.759+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15886181","id":"15886181","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=antoine.tran","name":"antoine.tran","key":"antoine.tran","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Antoine Tran","active":true,"timeZone":"Etc/UTC"},"body":"Dear all,\n\nI have encountered this issue, and I changed in all storm instances (nimbus, supervisor, manager) the thrift protocol PlainSaslTransportPlugin. I managed to launch a topology this time, but in my supervisor there is another issue. It cannot download the Jar:\n\n2017-02-27 17:08:03.649 o.a.s.t.t.TSaslTransport [DEBUG] CLIENT: Writing message with status START and payload length 5\n2017-02-27 17:08:03.649 o.a.s.t.t.TSaslTransport [DEBUG] CLIENT: Writing message with status COMPLETE and payload length 15\n2017-02-27 17:08:03.649 o.a.s.t.t.TSaslTransport [DEBUG] CLIENT: Start message handled\n2017-02-27 17:08:03.649 o.a.s.t.t.TSaslTransport [DEBUG] CLIENT: Main negotiation loop complete\n2017-02-27 17:08:03.649 o.a.s.t.t.TSaslTransport [DEBUG] CLIENT: SASL Client receiving last message\n2017-02-27 17:08:03.650 o.a.s.t.t.TSaslTransport [DEBUG] CLIENT: Received message with status COMPLETE and payload length 0\n2017-02-27 17:08:03.650 o.a.s.s.a.p.PlainSaslTransportPlugin [DEBUG] SASL PLAIN client transport has been established\n2017-02-27 17:08:03.759 o.a.s.t.t.TSaslTransport [DEBUG] writing data length: 90\n2017-02-27 17:08:03.765 o.a.s.t.t.TSaslTransport [DEBUG] CLIENT: reading data length: 134\n2017-02-27 17:08:03.766 o.a.s.u.Utils [ERROR] An exception happened while downloading /space/StormData/storm-data/supervisor/tmp/e1fb749e-7149-4786-9b5f-2466e6c6f7a2/stormjar.jar from blob store.\nAuthorizationException(msg:[storm] does not have [READ ] access to [...........TopologyName........]-stormjar.jar)\n        at org.apache.storm.generated.Nimbus$beginBlobDownload_result$beginBlobDownload_resultStandardScheme.read(Nimbus.java:25754)\n        at org.apache.storm.generated.Nimbus$beginBlobDownload_result$beginBlobDownload_resultStandardScheme.read(Nimbus.java:25731)\n        at org.apache.storm.generated.Nimbus$beginBlobDownload_result.read(Nimbus.java:25662)\n        at org.apache.storm.thrift.TServiceClient.receiveBase(TServiceClient.java:86)\n        at org.apache.storm.generated.Nimbus$Client.recv_beginBlobDownload(Nimbus.java:825)\n        at org.apache.storm.generated.Nimbus$Client.beginBlobDownload(Nimbus.java:812)\n        at org.apache.storm.blobstore.NimbusBlobStore.getBlob(NimbusBlobStore.java:357)\n        at org.apache.storm.utils.Utils.downloadResourcesAsSupervisorAttempt(Utils.java:516)\n        at org.apache.storm.utils.Utils.downloadResourcesAsSupervisor(Utils.java:497)\n        at org.apache.storm.daemon.supervisor$fn__9317.invoke(supervisor.clj:948)\n        at clojure.lang.MultiFn.invoke(MultiFn.java:243)\n        at org.apache.storm.daemon.supervisor$mk_synchronize_supervisor$this__9078$fn__9096.invoke(supervisor.clj:582)\n        at org.apache.storm.daemon.supervisor$mk_synchronize_supervisor$this__9078.invoke(supervisor.clj:581)\n        at org.apache.storm.event$event_manager$fn__8630.invoke(event.clj:40)\n        at clojure.lang.AFn.run(AFn.java:22)\n        at java.lang.Thread.run(Thread.java:745)\n2017-02-27 17:08:03.867 o.a.s.t.t.TSaslTransport [DEBUG] writing data length: 90\n2017-02-27 17:08:03.872 o.a.s.t.t.TSaslTransport [DEBUG] CLIENT: reading data length: 134\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=antoine.tran","name":"antoine.tran","key":"antoine.tran","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Antoine Tran","active":true,"timeZone":"Etc/UTC"},"created":"2017-02-27T17:35:11.715+0000","updated":"2017-02-27T17:35:11.715+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15886184","id":"15886184","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=antoine.tran","name":"antoine.tran","key":"antoine.tran","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Antoine Tran","active":true,"timeZone":"Etc/UTC"},"body":"And I checked, there are still space left, and the storm user (which is storm), can write data in this tmp dir.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=antoine.tran","name":"antoine.tran","key":"antoine.tran","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Antoine Tran","active":true,"timeZone":"Etc/UTC"},"created":"2017-02-27T17:36:02.016+0000","updated":"2017-02-27T17:36:02.016+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15890425","id":"15890425","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=antoine.tran","name":"antoine.tran","key":"antoine.tran","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Antoine Tran","active":true,"timeZone":"Etc/UTC"},"body":"In 1.0.1, using PlainSaslTransportPlugin will break supervisors with an ACL error. I suspect the uberjar couldn't be put in the blobstore.\nThe STORM-1661 fix this by putting permissive Acl in blobstore.\nHowever, I do not consider this issue to be fixed until a proper merge has been done in official storm git repository. The minimum is that https://github.com/apache/storm/blob/master/conf/defaults.yaml contains this default plugin..\nI can also add that by using default plugin Simple..., the value 16MB is hard-coded and cannot be changed. The properties nimbus and drpc for maxbuffer are read, but not in the class related to thrift transport.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=antoine.tran","name":"antoine.tran","key":"antoine.tran","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Antoine Tran","active":true,"timeZone":"Etc/UTC"},"created":"2017-03-01T15:55:26.238+0000","updated":"2017-03-01T16:06:14.476+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15948905","id":"15948905","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ipvp","name":"ipvp","key":"ipvp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"IPVP","active":true,"timeZone":"America/New_York"},"body":"Is there a workaround for this issue that I could apply on my production environment now ?\n\nI believe that I am being affected by this issue.\nRunning Storm 1.0.3 Redhat linux AWS with java.version=1.8.0_121 \nThe jar file being submitted has 47MB.\n\n######exception at the Ninbus.log################# \n\n2017-03-29 22:13:16.349 pool-15-thread-32 o.a.s.cluster [INFO] setup-path/blobstore/<TOPOLOGYNAME>-1-1490839996-stormjar.jar/stormnimbusprod1:6627-1 \n2017-03-29 22:13:16.349 pool-15-thread-32-EventThread o.a.s.s.o.a.z.ClientCnxn [INFO] EventThread shut down \n2017-03-29 22:13:16.389 pool-15-thread-32 o.a.s.d.nimbus [WARN] Topology submission exception. (topology name='<TOPOLOGYNAME>') #error { \n :cause No such file or directory \n :via \n [{:type java.lang.RuntimeException \n   :message java.io.IOException: No such file or directory \n   :at [org.apache.storm.blobstore.LocalFsBlobStore createBlob LocalFsBlobStore.java 117]} \n  {:type java.io.IOException \n   :message No such file or directory \n   :at [java.io.UnixFileSystem createFileExclusively UnixFileSystem.java -2]}] \n :trace \n [[java.io.UnixFileSystem createFileExclusively UnixFileSystem.java -2] \n  [java.io.File createNewFile File.java 1012] \n  [org.apache.storm.blobstore.LocalFsBlobStoreFile getOutputStream LocalFsBlobStoreFile.java 109] \n  [org.apache.storm.blobstore.BlobStore$BlobStoreFileOutputStream <init> BlobStore.java 316] \n  [org.apache.storm.blobstore.LocalFsBlobStore createBlob LocalFsBlobStore.java 111] \n  [org.apache.storm.blobstore.BlobStore createBlob BlobStore.java 217] \n  [sun.reflect.NativeMethodAccessorImpl invoke0 NativeMethodAccessorImpl.java -2] \n  [sun.reflect.NativeMethodAccessorImpl invoke NativeMethodAccessorImpl.java 62] \n  [sun.reflect.DelegatingMethodAccessorImpl invoke DelegatingMethodAccessorImpl.java 43] \n  [java.lang.reflect.Method invoke Method.java 498] \n  [clojure.lang.Reflector invokeMatchingMethod Reflector.java 93] \n  [clojure.lang.Reflector invokeInstanceMethod Reflector.java 28] \n  [org.apache.storm.daemon.nimbus$setup_storm_code invoke nimbus.clj 474] \n  [org.apache.storm.daemon.nimbus$fn__9109$exec_fn__1371__auto__$reify__9138 submitTopologyWithOpts nimbus.clj 1525] \n  [org.apache.storm.daemon.nimbus$fn__9109$exec_fn__1371__auto__$reify__9138 submitTopology nimbus.clj 1541] \n  [org.apache.storm.generated.Nimbus$Processor$submitTopology getResult Nimbus.java 2912] \n  [org.apache.storm.generated.Nimbus$Processor$submitTopology getResult Nimbus.java 2896] \n  [org.apache.storm.thrift.ProcessFunction process ProcessFunction.java 39] \n  [org.apache.storm.thrift.TBaseProcessor process TBaseProcessor.java 39] \n  [org.apache.storm.security.auth.SimpleTransportPlugin$SimpleWrapProcessor process SimpleTransportPlugin.java 162] \n  [org.apache.storm.thrift.server.AbstractNonblockingServer$FrameBuffer invoke AbstractNonblockingServer.java 518] \n  [org.apache.storm.thrift.server.Invocation run Invocation.java 18] \n  [java.util.concurrent.ThreadPoolExecutor runWorker ThreadPoolExecutor.java 1142] \n  [java.util.concurrent.ThreadPoolExecutor$Worker run ThreadPoolExecutor.java 617] \n  [java.lang.Thread run Thread.java 745]]} \n2017-03-29 22:13:16.389 pool-15-thread-32 o.a.s.t.s.AbstractNonblockingServer$FrameBuffer [ERROR] Unexpected throwable while invoking! \njava.lang.RuntimeException: java.io.IOException: No such file or directory \nat org.apache.storm.blobstore.LocalFsBlobStore.createBlob(LocalFsBlobStore.java:117) \nat org.apache.storm.blobstore.BlobStore.createBlob(BlobStore.java:217) \nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) \nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) \nat java.lang.reflect.Method.invoke(Method.java:498) \nat clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:93) \nat clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28) \nat org.apache.storm.daemon.nimbus$setup_storm_code.invoke(nimbus.clj:474) \nat org.apache.storm.daemon.nimbus$fn__9109$exec_fn__1371__auto__$reify__9138.submitTopologyWithOpts(nimbus.clj:1525) \nat org.apache.storm.daemon.nimbus$fn__9109$exec_fn__1371__auto__$reify__9138.submitTopology(nimbus.clj:1541) \nat org.apache.storm.generated.Nimbus$Processor$submitTopology.getResult(Nimbus.java:2912) \nat org.apache.storm.generated.Nimbus$Processor$submitTopology.getResult(Nimbus.java:2896) \nat org.apache.storm.thrift.ProcessFunction.process(ProcessFunction.java:39) \nat org.apache.storm.thrift.TBaseProcessor.process(TBaseProcessor.java:39) \nat org.apache.storm.security.auth.SimpleTransportPlugin$SimpleWrapProcessor.process(SimpleTransportPlugin.java:162) \nat org.apache.storm.thrift.server.AbstractNonblockingServer$FrameBuffer.invoke(AbstractNonblockingServer.java:518) \nat org.apache.storm.thrift.server.Invocation.run(Invocation.java:18) \nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) \nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) \nat java.lang.Thread.run(Thread.java:745) \nCaused by: java.io.IOException: No such file or directory \nat java.io.UnixFileSystem.createFileExclusively(Native Method) \nat java.io.File.createNewFile(File.java:1012) \nat org.apache.storm.blobstore.LocalFsBlobStoreFile.getOutputStream(LocalFsBlobStoreFile.java:109) \nat org.apache.storm.blobstore.BlobStore$BlobStoreFileOutputStream.<init>(BlobStore.java:316) \nat org.apache.storm.blobstore.LocalFsBlobStore.createBlob(LocalFsBlobStore.java:111) \n... 20 more \n\n#####exception when submitting the topology at the supervisor command line ( this exception does not show up on supervisor.log)  \n\n012 [main] INFO  o.a.s.StormSubmitter - Generated ZooKeeper secret payload for MD5-digest: -9206962661854850720:-6919200339480855527 \n1111 [main] INFO  o.a.s.s.a.AuthUtils - Got AutoCreds [] \n1158 [main] INFO  o.a.s.u.NimbusClient - Found leader nimbus : stormnimbusprod1:6627 \n1167 [main] INFO  o.a.s.u.NimbusClient - Found leader nimbus : stormnimbusprod1:6627 \n1172 [main] INFO  o.a.s.StormSubmitter - Uploading topology jar <JARNAME>.jar to assigned location: /opt/storm/storm-local/nimbus/inbox/stormjar-99668ef8-4136-468f-bc67-cbb5a8da9ae3.jar \n1679 [main] INFO  o.a.s.StormSubmitter - Successfully uploaded topology jar to assigned location: /opt/storm/storm-local/nimbus/inbox/stormjar-99668ef8-4136-468f-bc67-cbb5a8da9ae3.jar \n1684 [main] INFO  o.a.s.u.NimbusClient - Found leader nimbus : stormnimbusprod1:6627 \n1685 [main] INFO  o.a.s.StormSubmitter - Submitting topology <TOPOLOGYNAME> in distributed mode with conf {\"storm.zookeeper.topology.auth.scheme\":\"digest\",\"storm.zookeeper.topology.auth.payload\":\"-9206962661854850720:-6919200339480855527\",\"topology.workers\":1,\"topology.debug\":false} \nException in thread \"main\" java.lang.RuntimeException: org.apache.storm.thrift.transport.TTransportException \nat org.apache.storm.StormSubmitter.submitTopologyAs(StormSubmitter.java:255) \nat org.apache.storm.StormSubmitter.submitTopology(StormSubmitter.java:310) \nat org.apache.storm.StormSubmitter.submitTopology(StormSubmitter.java:157) \nat <my package>.<TOPOLOGYNAME>.main(<TOPOLOGYNAME>.java:46) \nCaused by: org.apache.storm.thrift.transport.TTransportException \nat org.apache.storm.thrift.transport.TIOStreamTransport.read(TIOStreamTransport.java:132) \nat org.apache.storm.thrift.transport.TTransport.readAll(TTransport.java:86) \nat org.apache.storm.thrift.transport.TFramedTransport.readFrame(TFramedTransport.java:129) \nat org.apache.storm.thrift.transport.TFramedTransport.read(TFramedTransport.java:101) \nat org.apache.storm.thrift.transport.TTransport.readAll(TTransport.java:86) \nat org.apache.storm.thrift.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:429) \nat org.apache.storm.thrift.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:318) \nat org.apache.storm.thrift.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:219) \nat org.apache.storm.thrift.TServiceClient.receiveBase(TServiceClient.java:77) \nat org.apache.storm.generated.Nimbus$Client.recv_submitTopology(Nimbus.java:294) \nat org.apache.storm.generated.Nimbus$Client.submitTopology(Nimbus.java:278) \nat org.apache.storm.StormSubmitter.submitTopologyAs(StormSubmitter.java:243) \n... 3 more \n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ipvp","name":"ipvp","key":"ipvp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"IPVP","active":true,"timeZone":"America/New_York"},"created":"2017-03-30T11:44:00.980+0000","updated":"2017-03-30T11:44:00.980+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15949051","id":"15949051","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"I am not totally sure what is happening here, but it looks like you are getting an ACL permission issue when trying to download the blob.\n\n{code}\n2017-02-27 17:08:03.766 o.a.s.u.Utils [ERROR] An exception happened while downloading /space/StormData/storm-data/supervisor/tmp/e1fb749e-7149-4786-9b5f-2466e6c6f7a2/stormjar.jar from blob store.\nAuthorizationException(msg:[storm] does not have [READ ] access to [...........TopologyName........]-stormjar.jar)\nat org.apache.storm.generated.Nimbus$beginBlobDownload_result$beginBlobDownload_resultStandardScheme.read(Nimbus.java:25754)\nat org.apache.storm.generated.Nimbus$beginBlobDownload_result$beginBlobDownload_resultStandardScheme.read(Nimbus.java:25731)\nat org.apache.storm.generated.Nimbus$beginBlobDownload_result.read(Nimbus.java:25662)\nat org.apache.storm.thrift.TServiceClient.receiveBase(TServiceClient.java:86)\nat org.apache.storm.generated.Nimbus$Client.recv_beginBlobDownload(Nimbus.java:825)\nat org.apache.storm.generated.Nimbus$Client.beginBlobDownload(Nimbus.java:812)\nat org.apache.storm.blobstore.NimbusBlobStore.getBlob(NimbusBlobStore.java:357)\nat org.apache.storm.utils.Utils.downloadResourcesAsSupervisorAttempt(Utils.java:516)\nat org.apache.storm.utils.Utils.downloadResourcesAsSupervisor(Utils.java:497)\nat org.apache.storm.daemon.supervisor$fn__9317.invoke(supervisor.clj:948)\nat clojure.lang.MultiFn.invoke(MultiFn.java:243)\nat org.apache.storm.daemon.supervisor$mk_synchronize_supervisor$this_9078$fn_9096.invoke(supervisor.clj:582)\nat org.apache.storm.daemon.supervisor$mk_synchronize_supervisor$this__9078.invoke(supervisor.clj:581)\nat org.apache.storm.event$event_manager$fn__8630.invoke(event.clj:40)\nat clojure.lang.AFn.run(AFn.java:22)\nat java.lang.Thread.run(Thread.java:745)\n{code}\n\nindicates that the supervisor was trying to download the topology and was rejected.  If you have security disabled then this should not be happening, please let me know.  If you have security turned on then it looks like the user you supervisor is running as does not have permission to read that blob.  If you have set {{\"nimbus.supervisor.users\"}} correctly the blob ACL handler should let the request through.  If that is not working you could also add that user as a nimbus admin user, but that is something you should do with caution, because it gives the supervisor much more power. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2017-03-30T13:25:30.137+0000","updated":"2017-03-30T13:25:30.137+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15949185","id":"15949185","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"[~ipvp]\n\nYour issue looks different from the other one.  Your exception is on submission.  The previous one was when the supervisor tried to download the jar.  looking at the code around the error.\n\nhttps://github.com/apache/storm/blob/v1.0.3/storm-core/src/jvm/org/apache/storm/blobstore/LocalFsBlobStoreFile.java#L109\n\nIt looks like you don't have permission to create the blob store directories.  The line above the exception is trying to do a mkdirs.  But mkdirs does not throw an exception just returns a boolean, so it looks like the mkdirs failed and we ignored it, but when we went to create the file the exception was thrown saying that the directory does not exist.  You need to make sure that the nimbus user has permission to write to wherever {{setup-path}} is.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2017-03-30T14:37:23.254+0000","updated":"2017-03-30T14:37:23.254+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15949387","id":"15949387","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ipvp","name":"ipvp","key":"ipvp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"IPVP","active":true,"timeZone":"America/New_York"},"body":"Robert Joseph Evans\n \nthanks for helping.\n\nThe entire setup-path(/opt/storm)  is already set to 777.\nThe owner is storm:storm.\nsupersivorctl is starting the service as storm:storm.\n\nAre the blob store directories created under the setup-path by default?\nOR\nAre the blob store directories created on some temporary folder outside the setup-path? Should I give access to the storm storm somewhere else outside the setup-path ?\n\nsecurity was not turned on. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ipvp","name":"ipvp","key":"ipvp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"IPVP","active":true,"timeZone":"America/New_York"},"created":"2017-03-30T16:47:41.278+0000","updated":"2017-03-30T16:47:41.278+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/comment/15949475","id":"15949475","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"[~ipvp],\n\nActually I could be wrong.  Looking more closely at the stack trace the line numbers don't actually line up with stock 1.0.3.  I'm not sure what is happening on nimbus, because I cannot really tell where the error is coming from.  Specifically\n\n{{org.apache.storm.blobstore.LocalFsBlobStore.createBlob(LocalFsBlobStore.java:117)}}\n\npoints to https://github.com/apache/storm/blob/v1.0.3/storm-core/src/jvm/org/apache/storm/blobstore/LocalFsBlobStoreFile.java#L117\n\nwhich is an annotation and should never appear in a stack trace.\n\n\nThat being said did you replace {{/opt/storm}} with {{setup-path}} in the exception stack trace like you did with {{<TOPOLOGYNAME>}}?  If not it looks like you have a config that is literately set to {{setup-path}} and is causing issues.  Otherwise I really don't know what is happening.\n\nOtherwise I really don't know what is happening.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2017-03-30T17:34:45.982+0000","updated":"2017-03-30T17:34:45.982+0000"}],"maxResults":64,"total":64,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-1469/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":1,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12929860/worklog/37972","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user antoinetran commented on the issue:\n\n    https://github.com/apache/storm/pull/1178\n  \n    Hi,\n    \n    This has not been merged yet in storm official repository, but it is in forked kishorvpatil repository. Is this normal? Is travis blocking this? Thank you.\n","created":"2017-03-01T10:45:45.163+0000","updated":"2017-03-01T10:45:45.163+0000","started":"2017-03-01T10:45:45.162+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"37972","issueId":"12929860"}]},"customfield_12311820":"0|i2r8y7:"}}