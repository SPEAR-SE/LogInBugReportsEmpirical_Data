{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13124655","self":"https://issues.apache.org/jira/rest/api/2/issue/13124655","key":"STORM-2853","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":4800,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12341047","id":"12341047","name":"1.2.0","archived":false,"released":true,"releaseDate":"2018-02-15"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12341265","id":"12341265","name":"1.1.2","archived":false,"released":true,"releaseDate":"2018-02-15"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12341596","id":"12341596","name":"1.0.6","archived":false,"released":true,"releaseDate":"2018-02-14"}],"aggregatetimespent":4800,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2017-12-14T10:40:00.736+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Feb 12 10:46:53 UTC 2018","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_4281706604_*|*_3_*:*_1_*:*_96101786_*|*_5_*:*_1_*:*_0","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2018-02-02T04:21:03.863+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2853/watchers","watchCount":3,"isWatching":false},"created":"2017-12-13T12:17:35.503+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":["pull-request-available"],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12335748","id":"12335748","name":"1.1.0","archived":false,"released":true,"releaseDate":"2017-03-29"}],"customfield_12312339":null,"issuelinks":[],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-02-12T10:46:53.180+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12327950","id":"12327950","name":"storm-core","description":"Core storm daemons and APIs including trident"}],"timeoriginalestimate":null,"description":"The issue is there is high cpu usage for deactivated apache storm topologies.  I can reliably re-create the issue using the steps below but I haven't identified the exact cause or a solution yet.\r\n\r\nThe environment is a storm cluster on which 1 topology is running (The topology is extremely simple, I used the exclamation example).  It is INACTIVE.  Initially there is normal CPU usage.  However, when I kill all topology JVM processes on all supervisors and let Storm restart them again, I find that some time later (~9 hours) the CPU usage per JVM process rises to nearly 100%.  I have tested an ACTIVE topology and this does not happen with it.  I have also tested more than one topology and observe the same results when they're in the INACTIVE state.\r\n\r\n***Steps to re-create:***\r\n\r\n 1. Run 1 topology on an Apache Storm cluster\r\n 2. Deactivate it\r\n 3. Kill **all** topology JVM processes on all supervisors (Storm will restart them)\r\n 4. Observe the CPU usage on Supervisors rise to nearly 100% for all **INACTIVE** topology JVM processes.\r\n\r\n***Environment***\r\n\r\nApache Storm 1.1.0 running on 3 VMs (1 nimbus and 2 supervisors).\r\n\r\nCluster Summary:\r\n\r\n - Supervisors: 2 \r\n - Used Slots: 2 \r\n - Available Slots: 38 \r\n - Total Slots: 40\r\n - Executors: 50 \r\n - Tasks: 50\r\n\r\nthe topology has 2 workers and 50 executors/tasks (threads).\r\n\r\n\r\n***Investigation so far:***\r\n\r\nApart from being able to reliably re-create the issue, I have identified, for the affected topology JVM process, the threads using the most CPU.  There are 102 threads total in the process, 97 blocked, 5 IN_NATIVE.  The threads using the most CPU are identical and there are 23 of them (all in BLOCKED state):\r\n\r\n    Thread 28558: (state = BLOCKED)\r\n     - sun.misc.Unsafe.park(boolean, long) @bci=0 (Compiled frame; information may be imprecise)\r\n     - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=338 (Compiled frame)\r\n     - com.lmax.disruptor.MultiProducerSequencer.next(int) @bci=82, line=136 (Compiled frame)\r\n     - com.lmax.disruptor.RingBuffer.next(int) @bci=5, line=260 (Interpreted frame)\r\n     - org.apache.storm.utils.DisruptorQueue.publishDirect(java.util.ArrayList, boolean) @bci=18, line=517 (Interpreted frame)\r\n     - org.apache.storm.utils.DisruptorQueue.access$1000(org.apache.storm.utils.DisruptorQueue, java.util.ArrayList, boolean) @bci=3, line=61 (Interpreted frame)\r\n     - org.apache.storm.utils.DisruptorQueue$ThreadLocalBatcher.flush(boolean) @bci=50, line=280 (Interpreted frame)\r\n     - org.apache.storm.utils.DisruptorQueue$Flusher.run() @bci=55, line=303 (Interpreted frame)\r\n     - java.util.concurrent.Executors$RunnableAdapter.call() @bci=4, line=511 (Compiled frame)\r\n     - java.util.concurrent.FutureTask.run() @bci=42, line=266 (Compiled frame)\r\n     - java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) @bci=95, line=1142 (Compiled frame)\r\n     - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=5, line=617 (Interpreted frame)\r\n     - java.lang.Thread.run() @bci=11, line=745 (Interpreted frame)\r\n\r\n\r\nI identified this thread by using `jstack` to get a thread dump for the process:\r\n \r\n\r\n    jstack -F <pid> > jstack<pid>.txt\r\n\r\nand `top` to identify the threads within the process using the most CPU:\r\n\r\n    top -H -p <pid> ","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"1h 20m","remainingEstimateSeconds":0,"timeSpentSeconds":4800},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12902049","id":"12902049","filename":"exclamation.zip","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shannoncode","name":"shannoncode","key":"shannoncode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=shannoncode&avatarId=33750","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=shannoncode&avatarId=33750","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=shannoncode&avatarId=33750","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=shannoncode&avatarId=33750"},"displayName":"Stuart","active":true,"timeZone":"Europe/London"},"created":"2017-12-14T10:49:52.403+0000","size":5584,"mimeType":"application/zip","content":"https://issues.apache.org/jira/secure/attachment/12902049/exclamation.zip"}],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Deactivated topologies cause high cpu utilization","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shannoncode","name":"shannoncode","key":"shannoncode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=shannoncode&avatarId=33750","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=shannoncode&avatarId=33750","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=shannoncode&avatarId=33750","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=shannoncode&avatarId=33750"},"displayName":"Stuart","active":true,"timeZone":"Europe/London"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shannoncode","name":"shannoncode","key":"shannoncode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=shannoncode&avatarId=33750","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=shannoncode&avatarId=33750","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=shannoncode&avatarId=33750","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=shannoncode&avatarId=33750"},"displayName":"Stuart","active":true,"timeZone":"Europe/London"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":4800,"total":4800,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":4800,"total":4800,"percent":100},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/comment/16290696","id":"16290696","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vorin","name":"vorin","key":"vorin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Adam","active":true,"timeZone":"Etc/UTC"},"body":"I'm having the same issue. It's pretty troubling. Any help would be appreciated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vorin","name":"vorin","key":"vorin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Adam","active":true,"timeZone":"Etc/UTC"},"created":"2017-12-14T10:40:00.736+0000","updated":"2017-12-14T10:40:00.736+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/comment/16290708","id":"16290708","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shannoncode","name":"shannoncode","key":"shannoncode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=shannoncode&avatarId=33750","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=shannoncode&avatarId=33750","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=shannoncode&avatarId=33750","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=shannoncode&avatarId=33750"},"displayName":"Stuart","active":true,"timeZone":"Europe/London"},"body":"The topology I am using to re-create this issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shannoncode","name":"shannoncode","key":"shannoncode","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=shannoncode&avatarId=33750","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=shannoncode&avatarId=33750","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=shannoncode&avatarId=33750","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=shannoncode&avatarId=33750"},"displayName":"Stuart","active":true,"timeZone":"Europe/London"},"created":"2017-12-14T10:50:08.305+0000","updated":"2017-12-14T10:50:08.305+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/comment/16347172","id":"16347172","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vorin","name":"vorin","key":"vorin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Adam","active":true,"timeZone":"Etc/UTC"},"body":"The issue happens because the RingBuffer in a [DisruptorQueue|https://github.com/apache/storm/blob/v1.1.0/storm-core/src/jvm/org/apache/storm/utils/DisruptorQueue.java] fills up and when publishing threads are trying to claim a slot they effectively get stuck doing _LockSupport.parkNanos(1L)_.\r\n\r\nThe whole scenario looks like this. When a topology is active some objects and tuples get published to the DisruptorQueue and they are consumed at the same time. After deactivating the topology the tick tuples (maybe some other kind of tuples as well) are still published and consumed. But then when the worker process is killed and restored the tuples are still published but are no longer consumed. Then the RingBuffer fills up and publishing threads cause CPU spike. This happens because if the topology starts up as deactivated the bolts are not started. That behaviour is caused by the code here:\r\n[https://github.com/apache/storm/blob/v1.1.0/storm-core/src/clj/org/apache/storm/daemon/executor.clj#L744]\r\n\r\nIn my opinion it is a bug, since the behaviour of a deactivated topology is not consistent before and after a JVM's restart.\r\n\r\nA permanent fix would be potentially to remove the sleeping part all toghether.\r\n\r\nA quick workaround mitigating the issue could be to check the RingBuffer state and stop trying publishing if it is full, e.g. by adding this code:\r\n_while (_buffer.remainingCapacity() == 0) {_\r\n _Utils.sleep(1);_\r\n_}_\r\nhere [https://github.com/apache/storm/blob/v1.1.0/storm-core/src/jvm/org/apache/storm/utils/DisruptorQueue.java#L517]\r\n\r\nAny comments or other considerations would be appreciated","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vorin","name":"vorin","key":"vorin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Adam","active":true,"timeZone":"Etc/UTC"},"created":"2018-01-31T16:58:34.136+0000","updated":"2018-01-31T16:58:34.136+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/comment/16347803","id":"16347803","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"[~vorin]\r\n\r\nMakes sense. The code might only consider about startup of topology, which is expected to be finished within small period, but it triggers the issue when there's a case worker is restarting while topology is inactive. Not sure it really did, since the code was placed at really older version, before 0.9.0 I guess, donated to Apache incubator. Nathan's repo is no longer exist so I can't track even why the code was placed for now, so I'm not 100% sure we know the possible risks of getting rid of the sleeping part.\r\n\r\nThe thing which would make the issue more complicated is, we can't disable tick tuple while topology is in inactive state, since from bolt's perspective there might be remaining tuples to process and it needs tick tuple to take some action like flush.\r\n\r\nThe only way what I can think about for now is defer activating tick tuple until all tasks in executor are completed calling open()/prepare(). Even if it makes sense, not sure whether it is easy to address or not. Need to take a look at.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2018-01-31T23:59:05.331+0000","updated":"2018-01-31T23:59:05.331+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/comment/16347870","id":"16347870","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"[~vorin]\r\n\r\nFortunately the fix turned out to be really simple. I submitted pull requests against master and 1.x-branch. Please take a look at if you are interested on the patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2018-02-01T01:40:55.565+0000","updated":"2018-02-01T01:40:55.565+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/comment/16348759","id":"16348759","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vorin","name":"vorin","key":"vorin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Adam","active":true,"timeZone":"Etc/UTC"},"body":"I'm very interested as it affects our production env. Thanks for the quick fix. I'll test it and update you when I'm done.\r\n\r\nBTW I'm trying to figure out how the storm repo is organised. What's the difference between the master and e.g. 1.x-branch? Currently the most likely explanation for me is that the master branch contains various additional projects, whereas e.g. 1.x-branch contains only what in the final distro?\r\n\r\nAlso the 2 PRs you raised. One is for the 1.x-branch in the storm-core, which is the project I was working with so far. The other is for the master branch in the storm-client project, which seems to mirror some of the storm-core functionality but without Clojure part, am I right? Am I right that the storm-client project is not included in standard storm distro? I'm trying to understand that structure so I can properly build a patched version of the storm binaries.\r\n\r\nIs there any doc that would help me understand that repo/code structure? Didn't find anything useful in the Doc folder\r\n\r\nThanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vorin","name":"vorin","key":"vorin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Adam","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-01T15:37:48.387+0000","updated":"2018-02-01T15:37:48.387+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/comment/16349447","id":"16349447","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"[~vorin]\r\n\r\nStorm 2.0.0 was started for porting Clojure to Java, which was one of major change for merging JStorm. While merging JStorm is not happened, we had many voices (including me) who are in favor of get rid of Clojure in various reasons, so we went ahead and ported most of things to Java in master branch.(Regarding merging JStorm, we can restart merging works at any time since they donate the code to ASF, but huge divergence between twos are not easy to cover.)\r\n\r\nWe also have several improvements in Storm 2.0.0, and what you see is one of them: we broke storm-core down into multiple modules in upcoming Storm 2.0.0, \"storm-client\" which is related to client topology side (worker) interfaces and implementations (will have much less dependencies than current), \"storm-server\" which is related to daemon side interfaces and implementations, \"storm-webserver\" which is related to HTTP service and UI. We still keep \"storm-core\" since we didn't port back some tests yet.\r\n\r\nSo if you are really brave to test Storm 2.0.0 SNAPSHOT out, please check out master branch and build your own dist. Most of the time you would want to check out 1.x-branch to test out the change of latest 1.x version line.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2018-02-01T22:56:02.705+0000","updated":"2018-02-01T22:56:02.705+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/comment/16349765","id":"16349765","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Merged the patch into master, 1.x, 1.1.x, 1.0.x branches.\r\n\r\n[~vorin], I merged the patch into branches to make sure they're included to current ongoing RCs. Please reopen the issue if the patch doesn't resolve your issue. Thanks in advance!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2018-02-02T04:21:03.880+0000","updated":"2018-02-02T04:21:03.880+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/comment/16350212","id":"16350212","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vorin","name":"vorin","key":"vorin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Adam","active":true,"timeZone":"Etc/UTC"},"body":"[Jungtaek Lim|https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan] I tested the patch. In our use case it resolves the issue. Thank you.\r\n\r\nMy only reservation is that we removed one of the symptoms but the original inconsistency/root cause remains. Meaning that the behavior of a deactivated topology is not consistent before and after a JVM's restart. \r\n As an example. As you pointed out when a topology is deactivated we want to keep tick tuples coming as there might be remaining tuples to process/flush. Then let's assume that the worker process dies/is killed before the processing/flush can finish. In that case stateful bolts normally would resume processing using those tick tuples but currently they won't have a chance to do it.\r\n Well, it's just a consideration. I do understand the bigger picture perspective here and that the risks of making the bigger functional change dealing with the root cause could be too big.\r\n\r\nAlso thanks for the explanation. It cleared up a lot. Quite an interesting story as well with Clojure and JStorm :-)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vorin","name":"vorin","key":"vorin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Adam","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-02T12:00:38.184+0000","updated":"2018-02-02T12:14:01.410+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/comment/16354766","id":"16354766","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"[~vorin]\r\n\r\nI guess you're saying stateful implemented by user side: I don't think they can use intermediate result while crash occurs, since the result is not guaranteed to be not corrupted. If you're saying stateful supported by Storm, it doesn't leverage tick tuple from bolt side. Please elaborate your example a bit if my explanation doesn't fall into your case.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2018-02-07T00:10:36.260+0000","updated":"2018-02-07T00:10:36.260+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/comment/16360579","id":"16360579","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vorin","name":"vorin","key":"vorin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Adam","active":true,"timeZone":"Etc/UTC"},"body":"[Jungtaek Lim|https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan] \r\n\r\nYes, stateful bolts implemented by a user. Our current application fortunately wouldn't run into such a situation. So it is more of a theoretical scenario.\r\n\r\nSo one can imagine a case e.g. of a bolt that emits tuples in batches. Let's assume it stores them somewhere e.g. in an external cache. Then when the topology is deactivated it could want to flush the current batch (e.g. after a timeout which I can imagine is triggered by a tick tuple in most implementations). So if the JVM restart happens before the timeout, the flush will not happen until the topology is activated and receives the first tick tuple. Whereas it would happen if the JVM hasn't restarted, that's the inconsistency. It's is an edge case scenario of course.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vorin","name":"vorin","key":"vorin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Adam","active":true,"timeZone":"Etc/UTC"},"created":"2018-02-12T10:46:53.180+0000","updated":"2018-02-12T10:46:53.180+0000"}],"maxResults":11,"total":11,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2853/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":8,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/worklog/69631","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user HeartSaVioR opened a pull request:\n\n    https://github.com/apache/storm/pull/2542\n\n    STORM-2853 Initialize tick tuple after initializing spouts/bolts\n\n    * this prevents newly-initializing executor in deactivated topology to show high CPU usage\r\n    \r\n    Please refer https://issues.apache.org/jira/browse/STORM-2853 for more details.\r\n    \r\n    Please also note that we assume all the tasks in executor are for same component.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/HeartSaVioR/storm STORM-2853\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/2542.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #2542\n    \n----\ncommit a5540d79fa8b3b6f625308972fe922786680b833\nAuthor: Jungtaek Lim <kabhwan@...>\nDate:   2018-02-01T00:46:52Z\n\n    STORM-2853 Initialize tick tuple after initializing spouts/bolts\n    \n    * this prevents newly-initializing executor in deactivated topology to show high CPU usage\n\n----\n","created":"2018-02-01T00:49:23.602+0000","updated":"2018-02-01T00:49:23.602+0000","started":"2018-02-01T00:49:23.602+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"69631","issueId":"13124655"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/worklog/69635","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user HeartSaVioR opened a pull request:\n\n    https://github.com/apache/storm/pull/2543\n\n    STORM-2853 Initialize tick tuple after initializing spouts/bolts\n\n    * this prevents newly-initializing executor in deactivated topology to show high CPU usage\r\n    * this is based on the fact that all the tasks in executor are for same component\r\n    \r\n    I guess it would be clean cherry-pick among branches regarding 1.x version lines. (1.1.x/1.0.x)\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/HeartSaVioR/storm STORM-2853-1.x\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/2543.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #2543\n    \n----\ncommit 91f1522820f3ac1c53594e943dfa8f3a2cde1a8f\nAuthor: Jungtaek Lim <kabhwan@...>\nDate:   2018-02-01T01:08:48Z\n\n    STORM-2853 Initialize tick tuple after initializing spouts/bolts\n    \n    * this prevents newly-initializing executor in deactivated topology to show high CPU usage\n    * this is based on the fact that all the tasks in executor are for same component\n\n----\n","created":"2018-02-01T01:10:30.199+0000","updated":"2018-02-01T01:10:30.199+0000","started":"2018-02-01T01:10:30.199+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"69635","issueId":"13124655"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/worklog/69686","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user danny0405 commented on the issue:\n\n    https://github.com/apache/storm/pull/2543\n  \n    Seems start tick thread when we active spouts/bolts instead of when making executor-data is more reasonable，So after this patch, all the tasks in one executor will share one tick thread now?\n","created":"2018-02-01T04:47:03.390+0000","updated":"2018-02-01T04:47:03.390+0000","started":"2018-02-01T04:47:03.390+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"69686","issueId":"13124655"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/worklog/69689","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user HeartSaVioR commented on the issue:\n\n    https://github.com/apache/storm/pull/2543\n  \n    @danny0405 \r\n    > So after this patch, all the tasks in one executor will share one tick thread now?\r\n    \r\n    Yes, but it is actually unchanged. I'm just ensuring that tick tuples are not generated when executor is not ready to process the tuples.\n","created":"2018-02-01T04:55:07.049+0000","updated":"2018-02-01T04:55:07.049+0000","started":"2018-02-01T04:55:07.048+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"69689","issueId":"13124655"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/worklog/70003","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/2542\n  \n    Test failures look unrelated\n","created":"2018-02-01T22:15:28.334+0000","updated":"2018-02-01T22:15:28.334+0000","started":"2018-02-01T22:15:28.333+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"70003","issueId":"13124655"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/worklog/70004","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user revans2 commented on the issue:\n\n    https://github.com/apache/storm/pull/2543\n  \n    test failures look unrelated\n","created":"2018-02-01T22:15:38.155+0000","updated":"2018-02-01T22:15:38.155+0000","started":"2018-02-01T22:15:38.155+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"70004","issueId":"13124655"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/worklog/70070","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/storm/pull/2543\n","created":"2018-02-02T04:19:30.251+0000","updated":"2018-02-02T04:19:30.251+0000","started":"2018-02-02T04:19:30.250+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"70070","issueId":"13124655"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13124655/worklog/70071","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user asfgit closed the pull request at:\n\n    https://github.com/apache/storm/pull/2542\n","created":"2018-02-02T04:19:50.240+0000","updated":"2018-02-02T04:19:50.240+0000","started":"2018-02-02T04:19:50.240+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"70071","issueId":"13124655"}]},"customfield_12311820":"0|i3nurb:"}}