{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13077203","self":"https://issues.apache.org/jira/rest/api/2/issue/13077203","key":"STORM-2541","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":16200,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12341047","id":"12341047","name":"1.2.0","archived":false,"released":true,"releaseDate":"2018-02-15"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12341265","id":"12341265","name":"1.1.2","archived":false,"released":true,"releaseDate":"2018-02-15"}],"aggregatetimespent":16200,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"2017-06-05 09:58:51.158","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_2209971845_*|*_3_*:*_1_*:*_1546441250_*|*_5_*:*_1_*:*_0","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2017-07-18T21:25:44.218+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2541/watchers","watchCount":1,"isWatching":false},"created":"2017-06-05T09:58:51.158+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12335748","id":"12335748","name":"1.1.0","archived":false,"released":true,"releaseDate":"2017-03-29"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12339656","id":"12339656","name":"1.1.1","archived":false,"released":true,"releaseDate":"2017-08-01"}],"customfield_12312339":null,"issuelinks":[{"id":"12517308","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12517308","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"13057485","key":"STORM-2426","self":"https://issues.apache.org/jira/rest/api/2/issue/13057485","fields":{"summary":"First tuples fail after worker is respawn","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Srdo","name":"Srdo","key":"srdo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stig Rohde Døssing","active":true,"timeZone":"Europe/Copenhagen"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-10-12T19:48:50.360+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12331080","id":"12331080","name":"storm-kafka-client"}],"timeoriginalestimate":null,"description":"The manual partition assignment logic in ManualPartitionNamed/PatternSubscription is broken. The spout is unable to start. The subscription needs to call onPartitionsAssigned even if the current assignment is null, otherwise it becomes impossible to initialize the spout. The order of KafkaConsumer.assign and the calls to onPartitionsAssigned/Revoked is also wrong. The assignment must happen first, otherwise onPartitionsAssigned will get an IllegalStateException when it tries to call KafkaConsumer.seek on a partition the consumer is not yet assigned.","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"4.5h","remainingEstimateSeconds":0,"timeSpentSeconds":16200},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Manual partition assignment doesn't work","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Srdo","name":"Srdo","key":"srdo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stig Rohde Døssing","active":true,"timeZone":"Europe/Copenhagen"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Srdo","name":"Srdo","key":"srdo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Stig Rohde Døssing","active":true,"timeZone":"Europe/Copenhagen"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":16200,"total":16200,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":16200,"total":16200,"percent":100},"comment":{"comments":[],"maxResults":0,"total":0,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2541/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":28,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/44018","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user srdo opened a pull request:\n\n    https://github.com/apache/storm/pull/2150\n\n    STORM-2541: Fix storm-kafka-client manual subscription not being able…\n\n    … to start consuming\n    \n    I also refactored the manual subscriptions a bit to deduplicate the code. I think there's no real issue with backporting this to 1.x, because clearly no one has been using these subscriptions so the API breakage shouldn't bother anyone.\n    \n    With regard to testing the manual subscription, I'd like to do that in https://issues.apache.org/jira/browse/STORM-2542 instead, since it'll make the current tests use the manual subscription.\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/srdo/storm STORM-2541\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/2150.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #2150\n    \n----\ncommit 0a7df0d16bcf98c8e3c12fedfcc7676fe6a68155\nAuthor: Stig Rohde Døssing <stigdoessing@gmail.com>\nDate:   2017-06-05T12:59:19Z\n\n    STORM-2541: Fix storm-kafka-client manual subscription not being able to start consuming\n\n----\n","created":"2017-06-05T13:38:57.177+0000","updated":"2017-06-05T13:38:57.177+0000","started":"2017-06-05T13:38:57.174+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"44018","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/45981","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2150#discussion_r123868726\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/TopicFilter.java ---\n    @@ -0,0 +1,38 @@\n    +/*\n    + * Copyright 2017 The Apache Software Foundation.\n    + *\n    + * Licensed under the Apache License, Version 2.0 (the \"License\");\n    + * you may not use this file except in compliance with the License.\n    + * You may obtain a copy of the License at\n    + *\n    + *      http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.storm.kafka.spout;\n    +\n    +import java.util.List;\n    +import org.apache.kafka.clients.consumer.KafkaConsumer;\n    +import org.apache.kafka.common.TopicPartition;\n    +\n    +public interface TopicFilter {\n    --- End diff --\n    \n    must implement Serializable. Otherwise code didn't work for me. The trident [changes](https://github.com/hmcl/storm-apache/blob/35f2c0c71a28a065e64f523b861acd883b2f2101/external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/TopicFilter.java#L24) are already do this.\n","created":"2017-06-24T02:49:18.505+0000","updated":"2017-06-24T02:49:18.505+0000","started":"2017-06-24T02:49:18.505+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"45981","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/45982","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2150#discussion_r123868742\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/PatternTopicFilter.java ---\n    @@ -0,0 +1,59 @@\n    +/*\n    + * Copyright 2017 The Apache Software Foundation.\n    + *\n    + * Licensed under the Apache License, Version 2.0 (the \"License\");\n    + * you may not use this file except in compliance with the License.\n    + * You may obtain a copy of the License at\n    + *\n    + *      http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.storm.kafka.spout;\n    +\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.Map;\n    +import java.util.regex.Pattern;\n    +import org.apache.kafka.clients.consumer.KafkaConsumer;\n    +import org.apache.kafka.common.PartitionInfo;\n    +import org.apache.kafka.common.TopicPartition;\n    +\n    +/**\n    + * Filter that returns all partitions for topics matching the given {@link Pattern}.\n    + */\n    +public class PatternTopicFilter implements TopicFilter {\n    +    \n    +    private final Pattern pattern;\n    +\n    +    /**\n    +     * Creates filter based on a Pattern. Only topic names matching the Pattern are passed by the filter.\n    +     * @param pattern The Pattern to use.\n    +     */\n    +    public PatternTopicFilter(Pattern pattern) {\n    +        this.pattern = pattern;\n    +    }\n    +\n    +    @Override\n    +    public List<TopicPartition> getFilteredTopicPartitions(KafkaConsumer<?, ?> consumer) {\n    +        List<TopicPartition> allPartitions = new ArrayList<>();\n    +        for (Map.Entry<String, List<PartitionInfo>> entry: consumer.listTopics().entrySet()) {\n    +            if (pattern.matcher(entry.getKey()).matches()) {\n    +                for (PartitionInfo partitionInfo: entry.getValue()) {\n    +                    allPartitions.add(new TopicPartition(partitionInfo.topic(), partitionInfo.partition()));\n    +                }\n    +            }\n    +        }\n    +        return allPartitions;\n    +    }\n    +\n    +    @Override\n    +    public String getTopicsString() {\n    +        return pattern.pattern();\n    --- End diff --\n    \n    This implementation should be for a method called getTopicsPattern. Please make a diff with my [slight modification](https://github.com/hmcl/storm-apache/blob/35f2c0c71a28a065e64f523b861acd883b2f2101/external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/PatternTopicFilter.java) of your changes. I suggest that you incorporate that diff in this patch.\n","created":"2017-06-24T02:49:18.518+0000","updated":"2017-06-24T02:49:18.518+0000","started":"2017-06-24T02:49:18.517+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"45982","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/45983","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2150#discussion_r123868570\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/ManualPartitionSubscription.java ---\n    @@ -58,21 +51,21 @@ public ManualPartitionNamedSubscription(ManualPartitioner parter, String ... top\n         \n         @Override\n         public void refreshAssignment() {\n    -        List<TopicPartition> allPartitions = new ArrayList<>();\n    -        for (String topic : topics) {\n    -            for (PartitionInfo partitionInfo: consumer.partitionsFor(topic)) {\n    -                allPartitions.add(new TopicPartition(partitionInfo.topic(), partitionInfo.partition()));\n    -            }\n    -        }\n    +        List<TopicPartition> allPartitions = partitionFilter.getFilteredTopicPartitions(consumer);\n             Collections.sort(allPartitions, TopicPartitionComparator.INSTANCE);\n             Set<TopicPartition> newAssignment = new HashSet<>(partitioner.partition(allPartitions, context));\n             if (!newAssignment.equals(currentAssignment)) {\n    +            consumer.assign(newAssignment);\n                 if (currentAssignment != null) {\n                     listener.onPartitionsRevoked(currentAssignment);\n    -                listener.onPartitionsAssigned(newAssignment);\n                 }\n    +            listener.onPartitionsAssigned(newAssignment);\n                 currentAssignment = newAssignment;\n    -            consumer.assign(currentAssignment);\n    --- End diff --\n    \n    @srdo lines 62 and 63 should be switched. We want to call the listener only once all is set.\n","created":"2017-06-24T02:49:18.649+0000","updated":"2017-06-24T02:49:18.649+0000","started":"2017-06-24T02:49:18.649+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"45983","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46006","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2150#discussion_r123876459\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/ManualPartitionSubscription.java ---\n    @@ -58,21 +51,21 @@ public ManualPartitionNamedSubscription(ManualPartitioner parter, String ... top\n         \n         @Override\n         public void refreshAssignment() {\n    -        List<TopicPartition> allPartitions = new ArrayList<>();\n    -        for (String topic : topics) {\n    -            for (PartitionInfo partitionInfo: consumer.partitionsFor(topic)) {\n    -                allPartitions.add(new TopicPartition(partitionInfo.topic(), partitionInfo.partition()));\n    -            }\n    -        }\n    +        List<TopicPartition> allPartitions = partitionFilter.getFilteredTopicPartitions(consumer);\n             Collections.sort(allPartitions, TopicPartitionComparator.INSTANCE);\n             Set<TopicPartition> newAssignment = new HashSet<>(partitioner.partition(allPartitions, context));\n             if (!newAssignment.equals(currentAssignment)) {\n    +            consumer.assign(newAssignment);\n                 if (currentAssignment != null) {\n                     listener.onPartitionsRevoked(currentAssignment);\n    -                listener.onPartitionsAssigned(newAssignment);\n                 }\n    +            listener.onPartitionsAssigned(newAssignment);\n                 currentAssignment = newAssignment;\n    -            consumer.assign(currentAssignment);\n    --- End diff --\n    \n    Will fix\n","created":"2017-06-24T12:37:47.966+0000","updated":"2017-06-24T12:37:47.966+0000","started":"2017-06-24T12:37:47.962+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46006","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46007","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2150#discussion_r123876462\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/TopicFilter.java ---\n    @@ -0,0 +1,38 @@\n    +/*\n    + * Copyright 2017 The Apache Software Foundation.\n    + *\n    + * Licensed under the Apache License, Version 2.0 (the \"License\");\n    + * you may not use this file except in compliance with the License.\n    + * You may obtain a copy of the License at\n    + *\n    + *      http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.storm.kafka.spout;\n    +\n    +import java.util.List;\n    +import org.apache.kafka.clients.consumer.KafkaConsumer;\n    +import org.apache.kafka.common.TopicPartition;\n    +\n    +public interface TopicFilter {\n    --- End diff --\n    \n    Will fix\n","created":"2017-06-24T12:37:52.613+0000","updated":"2017-06-24T12:37:52.613+0000","started":"2017-06-24T12:37:52.613+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46007","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46009","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2150#discussion_r123877594\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/PatternTopicFilter.java ---\n    @@ -0,0 +1,59 @@\n    +/*\n    + * Copyright 2017 The Apache Software Foundation.\n    + *\n    + * Licensed under the Apache License, Version 2.0 (the \"License\");\n    + * you may not use this file except in compliance with the License.\n    + * You may obtain a copy of the License at\n    + *\n    + *      http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.storm.kafka.spout;\n    +\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.Map;\n    +import java.util.regex.Pattern;\n    +import org.apache.kafka.clients.consumer.KafkaConsumer;\n    +import org.apache.kafka.common.PartitionInfo;\n    +import org.apache.kafka.common.TopicPartition;\n    +\n    +/**\n    + * Filter that returns all partitions for topics matching the given {@link Pattern}.\n    + */\n    +public class PatternTopicFilter implements TopicFilter {\n    +    \n    +    private final Pattern pattern;\n    +\n    +    /**\n    +     * Creates filter based on a Pattern. Only topic names matching the Pattern are passed by the filter.\n    +     * @param pattern The Pattern to use.\n    +     */\n    +    public PatternTopicFilter(Pattern pattern) {\n    +        this.pattern = pattern;\n    +    }\n    +\n    +    @Override\n    +    public List<TopicPartition> getFilteredTopicPartitions(KafkaConsumer<?, ?> consumer) {\n    +        List<TopicPartition> allPartitions = new ArrayList<>();\n    +        for (Map.Entry<String, List<PartitionInfo>> entry: consumer.listTopics().entrySet()) {\n    +            if (pattern.matcher(entry.getKey()).matches()) {\n    +                for (PartitionInfo partitionInfo: entry.getValue()) {\n    +                    allPartitions.add(new TopicPartition(partitionInfo.topic(), partitionInfo.partition()));\n    +                }\n    +            }\n    +        }\n    +        return allPartitions;\n    +    }\n    +\n    +    @Override\n    +    public String getTopicsString() {\n    +        return pattern.pattern();\n    --- End diff --\n    \n    I'm wondering if this works? storm-kafka-monitor seems to be getting the subscribed topics out of the getComponentConfiguration method, but is that called more than once? If it isn't being called occasionally then the list this method returns is going to be empty for pattern subscriptions.\n","created":"2017-06-24T13:47:26.694+0000","updated":"2017-06-24T13:47:26.694+0000","started":"2017-06-24T13:47:26.687+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46009","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46023","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user harshach commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2150#discussion_r123881560\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/PatternTopicFilter.java ---\n    @@ -0,0 +1,59 @@\n    +/*\n    + * Copyright 2017 The Apache Software Foundation.\n    + *\n    + * Licensed under the Apache License, Version 2.0 (the \"License\");\n    + * you may not use this file except in compliance with the License.\n    + * You may obtain a copy of the License at\n    + *\n    + *      http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.storm.kafka.spout;\n    +\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.Map;\n    +import java.util.regex.Pattern;\n    +import org.apache.kafka.clients.consumer.KafkaConsumer;\n    +import org.apache.kafka.common.PartitionInfo;\n    +import org.apache.kafka.common.TopicPartition;\n    +\n    +/**\n    + * Filter that returns all partitions for topics matching the given {@link Pattern}.\n    + */\n    +public class PatternTopicFilter implements TopicFilter {\n    +    \n    +    private final Pattern pattern;\n    +\n    +    /**\n    +     * Creates filter based on a Pattern. Only topic names matching the Pattern are passed by the filter.\n    +     * @param pattern The Pattern to use.\n    +     */\n    +    public PatternTopicFilter(Pattern pattern) {\n    +        this.pattern = pattern;\n    +    }\n    +\n    +    @Override\n    +    public List<TopicPartition> getFilteredTopicPartitions(KafkaConsumer<?, ?> consumer) {\n    +        List<TopicPartition> allPartitions = new ArrayList<>();\n    +        for (Map.Entry<String, List<PartitionInfo>> entry: consumer.listTopics().entrySet()) {\n    +            if (pattern.matcher(entry.getKey()).matches()) {\n    +                for (PartitionInfo partitionInfo: entry.getValue()) {\n    +                    allPartitions.add(new TopicPartition(partitionInfo.topic(), partitionInfo.partition()));\n    +                }\n    +            }\n    +        }\n    +        return allPartitions;\n    +    }\n    +\n    +    @Override\n    +    public String getTopicsString() {\n    +        return pattern.pattern();\n    --- End diff --\n    \n    @priyank5485 can you answer the storm-kafka-monitor question here.\n","created":"2017-06-24T17:28:45.868+0000","updated":"2017-06-24T17:28:45.868+0000","started":"2017-06-24T17:28:45.867+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46023","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46024","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2150#discussion_r123886463\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/PatternTopicFilter.java ---\n    @@ -0,0 +1,59 @@\n    +/*\n    + * Copyright 2017 The Apache Software Foundation.\n    + *\n    + * Licensed under the Apache License, Version 2.0 (the \"License\");\n    + * you may not use this file except in compliance with the License.\n    + * You may obtain a copy of the License at\n    + *\n    + *      http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.storm.kafka.spout;\n    +\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.Map;\n    +import java.util.regex.Pattern;\n    +import org.apache.kafka.clients.consumer.KafkaConsumer;\n    +import org.apache.kafka.common.PartitionInfo;\n    +import org.apache.kafka.common.TopicPartition;\n    +\n    +/**\n    + * Filter that returns all partitions for topics matching the given {@link Pattern}.\n    + */\n    +public class PatternTopicFilter implements TopicFilter {\n    +    \n    +    private final Pattern pattern;\n    +\n    +    /**\n    +     * Creates filter based on a Pattern. Only topic names matching the Pattern are passed by the filter.\n    +     * @param pattern The Pattern to use.\n    +     */\n    +    public PatternTopicFilter(Pattern pattern) {\n    +        this.pattern = pattern;\n    +    }\n    +\n    +    @Override\n    +    public List<TopicPartition> getFilteredTopicPartitions(KafkaConsumer<?, ?> consumer) {\n    +        List<TopicPartition> allPartitions = new ArrayList<>();\n    +        for (Map.Entry<String, List<PartitionInfo>> entry: consumer.listTopics().entrySet()) {\n    +            if (pattern.matcher(entry.getKey()).matches()) {\n    +                for (PartitionInfo partitionInfo: entry.getValue()) {\n    +                    allPartitions.add(new TopicPartition(partitionInfo.topic(), partitionInfo.partition()));\n    +                }\n    +            }\n    +        }\n    +        return allPartitions;\n    +    }\n    +\n    +    @Override\n    +    public String getTopicsString() {\n    +        return pattern.pattern();\n    --- End diff --\n    \n    @srdo I believe that the approach I am suggesting in the Trident PR will solve what both you and I have in mind. Please take a look at the following:\n    \n    https://github.com/hmcl/storm-apache/blob/ca420a4a960c9667262833add74e231fe8d5518b/external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/PatternTopicFilter.java#L60-L67\n    \n    https://github.com/hmcl/storm-apache/blob/ca420a4a960c9667262833add74e231fe8d5518b/external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/PatternTopicFilter.java#L35\n    \n    https://github.com/hmcl/storm-apache/blob/ca420a4a960c9667262833add74e231fe8d5518b/external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/PatternTopicFilter.java#L53\n","created":"2017-06-24T22:08:07.397+0000","updated":"2017-06-24T22:08:07.397+0000","started":"2017-06-24T22:08:07.396+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46024","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46073","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2150#discussion_r123901054\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/PatternTopicFilter.java ---\n    @@ -0,0 +1,59 @@\n    +/*\n    + * Copyright 2017 The Apache Software Foundation.\n    + *\n    + * Licensed under the Apache License, Version 2.0 (the \"License\");\n    + * you may not use this file except in compliance with the License.\n    + * You may obtain a copy of the License at\n    + *\n    + *      http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.storm.kafka.spout;\n    +\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.Map;\n    +import java.util.regex.Pattern;\n    +import org.apache.kafka.clients.consumer.KafkaConsumer;\n    +import org.apache.kafka.common.PartitionInfo;\n    +import org.apache.kafka.common.TopicPartition;\n    +\n    +/**\n    + * Filter that returns all partitions for topics matching the given {@link Pattern}.\n    + */\n    +public class PatternTopicFilter implements TopicFilter {\n    +    \n    +    private final Pattern pattern;\n    +\n    +    /**\n    +     * Creates filter based on a Pattern. Only topic names matching the Pattern are passed by the filter.\n    +     * @param pattern The Pattern to use.\n    +     */\n    +    public PatternTopicFilter(Pattern pattern) {\n    +        this.pattern = pattern;\n    +    }\n    +\n    +    @Override\n    +    public List<TopicPartition> getFilteredTopicPartitions(KafkaConsumer<?, ?> consumer) {\n    +        List<TopicPartition> allPartitions = new ArrayList<>();\n    +        for (Map.Entry<String, List<PartitionInfo>> entry: consumer.listTopics().entrySet()) {\n    +            if (pattern.matcher(entry.getKey()).matches()) {\n    +                for (PartitionInfo partitionInfo: entry.getValue()) {\n    +                    allPartitions.add(new TopicPartition(partitionInfo.topic(), partitionInfo.partition()));\n    +                }\n    +            }\n    +        }\n    +        return allPartitions;\n    +    }\n    +\n    +    @Override\n    +    public String getTopicsString() {\n    +        return pattern.pattern();\n    --- End diff --\n    \n    @hmcl I went and tried out storm-kafka-monitor from the https://github.com/apache/storm/pull/2174 branch, and ran into multiple issues.\n    \n    * The PatternTopicFilter code throws an NPE because the spout calls getTopicString before the Set is initialized (the method is used for logging). This prevents the topology from being submitted.\n    * It looks like the Kafka consumer code is not being correctly shaded into the storm-kafka-monitor jar, so the bash script didn't work for me. I'm not sure if this was a quirk of my build, since the consumer code is present in the 1.1.0 release storm-kafka-monitor jar.\n    * After fixing the two other issues, I tried submitting a topology consuming the \"test*\" pattern from a Kafka instance where topics \"test\", \"test-1\" and \"test-2\" were present. The Storm UI offset lag request returns the following, no matter how long I wait after the topology is running\n    \n    ```\n    {\"kafka-spout\":{\"spoutId\":\"kafka-spout\",\"errorInfo\":\"Unable to get offset lags for kafka. Reason: org.apache.kafka.shaded.common.errors.InvalidTopicException: Topic '' is invalid\\n\",\"spoutType\":\"KAFKA\"}}\n    ```\n    \n    That code (https://github.com/apache/storm/blob/64e29f365c9b5d3e15b33f33ab64e200345333e4/storm-core/src/jvm/org/apache/storm/utils/TopologySpoutLag.java#L91) gets the topic list it should request offset lag for via the spout's getComponentOffsets method, as far as I can tell through this call https://github.com/apache/storm/blob/9e31509d47c4e91c1009f55c7ccf321d7d7e63aa/storm-client/src/jvm/org/apache/storm/topology/TopologyBuilder.java#L541. I don't think we can make the current storm-kafka-monitor implementation work for subscriptions that are not known at topology submission time, unless there is some way to update the component configuration when the subscription changes.\n    \n    I'd also add that I have a few other issues with storm-kafka-monitor:\n    * The jar is installed along with the cluster, and depends on the Kafka version specified in Storm's root POM. Kafka guarantees backwards compatible client-server communication for one release only, so there's a potential coupling between Storm cluster version and Kafka version. If users want to update the Kafka version in storm-kafka-monitor, they have to rebuild that module and replace the jar in their Storm install.\n    * The UI integration uses the storm-kafka-monitor Bash script to start the monitoring code, in order to avoid a dependency between storm-core and storm-kafka-monitor. This prevents the UI integration from working on Windows. We could supply a Windows script as well, but then we'd need to keep the two in sync.\n    \n    I think it makes sense to make the change you are suggesting simply because it makes the spout log a little nicer, but it still leaves the issue with storm-kafka-monitor not working for pattern subscriptions. It would be good if we could figure out a solution to the other issues as well. Maybe we could track offset lag through the metrics system instead, and just make the spout update it?\n    \n    I'll create a separate issue for discussing storm-kafka-monitor.\n","created":"2017-06-25T15:04:56.045+0000","updated":"2017-06-25T15:04:56.045+0000","started":"2017-06-25T15:04:56.044+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46073","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46074","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2150\n  \n    Created the issue for storm-kafka-monitor here https://issues.apache.org/jira/browse/STORM-2600\n","created":"2017-06-25T15:27:19.206+0000","updated":"2017-06-25T15:27:19.206+0000","started":"2017-06-25T15:27:19.206+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46074","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46089","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user priyank5485 commented on the issue:\n\n    https://github.com/apache/storm/pull/2150\n  \n    @srdo @harshach Some comments related to storm-kafka-monitor \n    \n    [~Srdo] Regarding first point, because the lag request is a http pull request from UI, as long as kafkaSpoutConfig.getSubscription().getTopicsString(); returns the correct value it will work since the open method would have been called eventually. The only change we would need is that when the rebalance listener is invoked we would need to keep track of the topics currently subscribed. For e.g. PatternSubscription can have an instance variable called Set<String> topics that would be correctly updated anytime onPartitionsRevoked or onPartitionsAssigned is called. We can use that instance variable to return the value when getTopicsString is called on that object. Does that work?\n    \n    Regarding point 2, we could move the kafka client version to storm-kafka-monitor module. Can you elaborate a bit more on your concern? Is it that if kafka cluster is upgraded, storm-kafka-monitor wont work? In that case storm-kafka-client module will also have to be updated and topology jar rebuilt. Correct? I think in general, we have a certain compatibility restriction in that a given storm release works or has been tested with a certain version of kafka clients. Correct me if i am wrong.\n    \n    Regarding 3, the main reason for creating a separate module and calling bash script from storm UI is so that storm-core does not have a direct kafka dependency since that made sense. For windows, cygwin can be a workaround. Plus, i dont know how many windows users we have. We can start a thread to see if there is really a user base for which we need to support a use case.\n    \n    I dont know the details about how metrics would work. We could have opinions from other people. If that is indeed the right way to go about it then I am all for changing it.\n\n","created":"2017-06-26T02:54:13.814+0000","updated":"2017-06-26T02:54:13.814+0000","started":"2017-06-26T02:54:13.814+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46089","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2150\n  \n    @priyank5485 Thanks for responding, I replied on the linked issue\n","created":"2017-06-26T06:15:15.700+0000","updated":"2017-06-26T06:15:15.700+0000","started":"2017-06-26T06:15:15.700+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46100","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46154","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2150\n  \n    The issues raised in https://issues.apache.org/jira/browse/STORM-2600 aren't really related to this PR, since the pattern based subscriptions were already unsupported by storm-kafka-monitor prior to this change. I think we should look at those issues separately.\n","created":"2017-06-26T19:22:08.976+0000","updated":"2017-06-26T19:22:08.976+0000","started":"2017-06-26T19:22:08.975+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46154","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46366","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2150#discussion_r124323706\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/PatternTopicFilter.java ---\n    @@ -0,0 +1,59 @@\n    +/*\n    + * Copyright 2017 The Apache Software Foundation.\n    + *\n    + * Licensed under the Apache License, Version 2.0 (the \"License\");\n    + * you may not use this file except in compliance with the License.\n    + * You may obtain a copy of the License at\n    + *\n    + *      http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.storm.kafka.spout;\n    +\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.Map;\n    +import java.util.regex.Pattern;\n    +import org.apache.kafka.clients.consumer.KafkaConsumer;\n    +import org.apache.kafka.common.PartitionInfo;\n    +import org.apache.kafka.common.TopicPartition;\n    +\n    +/**\n    + * Filter that returns all partitions for topics matching the given {@link Pattern}.\n    + */\n    +public class PatternTopicFilter implements TopicFilter {\n    +    \n    +    private final Pattern pattern;\n    +\n    +    /**\n    +     * Creates filter based on a Pattern. Only topic names matching the Pattern are passed by the filter.\n    +     * @param pattern The Pattern to use.\n    +     */\n    +    public PatternTopicFilter(Pattern pattern) {\n    +        this.pattern = pattern;\n    +    }\n    +\n    +    @Override\n    +    public List<TopicPartition> getFilteredTopicPartitions(KafkaConsumer<?, ?> consumer) {\n    +        List<TopicPartition> allPartitions = new ArrayList<>();\n    +        for (Map.Entry<String, List<PartitionInfo>> entry: consumer.listTopics().entrySet()) {\n    +            if (pattern.matcher(entry.getKey()).matches()) {\n    +                for (PartitionInfo partitionInfo: entry.getValue()) {\n    +                    allPartitions.add(new TopicPartition(partitionInfo.topic(), partitionInfo.partition()));\n    +                }\n    +            }\n    +        }\n    +        return allPartitions;\n    +    }\n    +\n    +    @Override\n    +    public String getTopicsString() {\n    +        return pattern.pattern();\n    --- End diff --\n    \n    @srdo I think it's good. I still think it's good practice for this class' internal API to return the pattern that it is using to compute the topics string. I am planning on leaving it on my trident [change](https://github.com/hmcl/storm-apache/blob/ca420a4a960c9667262833add74e231fe8d5518b/external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/PatternTopicFilter.java#L65-L67).\n","created":"2017-06-27T16:17:51.373+0000","updated":"2017-06-27T16:17:51.373+0000","started":"2017-06-27T16:17:51.373+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46366","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46367","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on the issue:\n\n    https://github.com/apache/storm/pull/2150\n  \n    +1\n","created":"2017-06-27T16:17:53.860+0000","updated":"2017-06-27T16:17:53.860+0000","started":"2017-06-27T16:17:53.860+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46367","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46671","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2150#discussion_r124855414\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/PatternTopicFilter.java ---\n    @@ -0,0 +1,59 @@\n    +/*\n    + * Copyright 2017 The Apache Software Foundation.\n    + *\n    + * Licensed under the Apache License, Version 2.0 (the \"License\");\n    + * you may not use this file except in compliance with the License.\n    + * You may obtain a copy of the License at\n    + *\n    + *      http://www.apache.org/licenses/LICENSE-2.0\n    + *\n    + * Unless required by applicable law or agreed to in writing, software\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    + * See the License for the specific language governing permissions and\n    + * limitations under the License.\n    + */\n    +\n    +package org.apache.storm.kafka.spout;\n    +\n    +import java.util.ArrayList;\n    +import java.util.List;\n    +import java.util.Map;\n    +import java.util.regex.Pattern;\n    +import org.apache.kafka.clients.consumer.KafkaConsumer;\n    +import org.apache.kafka.common.PartitionInfo;\n    +import org.apache.kafka.common.TopicPartition;\n    +\n    +/**\n    + * Filter that returns all partitions for topics matching the given {@link Pattern}.\n    + */\n    +public class PatternTopicFilter implements TopicFilter {\n    +    \n    +    private final Pattern pattern;\n    +\n    +    /**\n    +     * Creates filter based on a Pattern. Only topic names matching the Pattern are passed by the filter.\n    +     * @param pattern The Pattern to use.\n    +     */\n    +    public PatternTopicFilter(Pattern pattern) {\n    +        this.pattern = pattern;\n    +    }\n    +\n    +    @Override\n    +    public List<TopicPartition> getFilteredTopicPartitions(KafkaConsumer<?, ?> consumer) {\n    +        List<TopicPartition> allPartitions = new ArrayList<>();\n    +        for (Map.Entry<String, List<PartitionInfo>> entry: consumer.listTopics().entrySet()) {\n    +            if (pattern.matcher(entry.getKey()).matches()) {\n    +                for (PartitionInfo partitionInfo: entry.getValue()) {\n    +                    allPartitions.add(new TopicPartition(partitionInfo.topic(), partitionInfo.partition()));\n    +                }\n    +            }\n    +        }\n    +        return allPartitions;\n    +    }\n    +\n    +    @Override\n    +    public String getTopicsString() {\n    +        return pattern.pattern();\n    --- End diff --\n    \n    @hmcl Sure, I don't see a reason not to have a Pattern getter\n","created":"2017-06-29T16:54:47.219+0000","updated":"2017-06-29T16:54:47.219+0000","started":"2017-06-29T16:54:47.219+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46671","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46704","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on the issue:\n\n    https://github.com/apache/storm/pull/2150\n  \n    @srdo I am +1 on this PR. Let's just add the getter method as we agreed on [this comment](https://github.com/apache/storm/pull/2150#discussion_r124855414), and have this PR consist of two commits only. The commit in [STORM-2548 PR](https://github.com/apache/storm/pull/2155) and its own commit.\n","created":"2017-06-29T23:04:48.791+0000","updated":"2017-06-29T23:04:48.791+0000","started":"2017-06-29T23:04:48.790+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46704","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46707","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on the issue:\n\n    https://github.com/apache/storm/pull/2150\n  \n    @srdo Thanks for your diligence and awesome work refactoring this code. It just made it much better.\n","created":"2017-06-29T23:09:06.462+0000","updated":"2017-06-29T23:09:06.462+0000","started":"2017-06-29T23:09:06.462+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46707","issueId":"13077203"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13077203/worklog/46972","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2150\n  \n    @hmcl Sorry, I accidentally overwrote this PR with the STORM-2548 content. This shouldn't contain the STORM-2548 changes. I added the getter and fixed the content error.\n","created":"2017-07-04T20:32:26.315+0000","updated":"2017-07-04T20:32:26.315+0000","started":"2017-07-04T20:32:26.313+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"46972","issueId":"13077203"}]},"customfield_12311820":"0|i3fvav:"}}