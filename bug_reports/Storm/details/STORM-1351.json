{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12915955","self":"https://issues.apache.org/jira/rest/api/2/issue/12915955","key":"STORM-1351","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2015-11-25T17:51:19.849+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Dec 03 03:41:30 UTC 2015","customfield_12312320":null,"customfield_12310222":null,"customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-1351/watchers","watchCount":7,"isWatching":false},"created":"2015-11-24T23:06:09.633+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"customfield_12312339":null,"issuelinks":[],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-12-03T03:41:30.131+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12327950","id":"12327950","name":"storm-core","description":"Core storm daemons and APIs including trident"}],"timeoriginalestimate":null,"description":"A spout can be having a problem generating a  tuple in nextTuple()  because \n -a) there is no data to generate currently \n - b) there is some I/O  issues it is experiencing\n\nIf the spout returns immediately from the nextTuple() call then the nextTuple() will be invoked immediately leading to CPU spike. The CPU spike would last till the situation is remedied by new coming data or the i/o issues getting resolved.\n\nCurrently to work around this, the spouts will have to implement a exponential backoff mechanism internally. There are two problems with this:\n - each spout needs to implement this backoff logic\n - since nextTuple() has an internal sleep and takes longer to return, the latency metrics computation gets thrown off\n\n\n*Thoughts for Solution:*\nThe spout should be able to indicate a 'no data',  'experiencing error' or 'all good' status back to the caller of nextTuple() so that the right backoff logic can kick in.\n\n- The most natural way to do this is using the return type of the nextTuple method. Currently nextTuple() returns void.  However, this will break source and binary compat since the new storm will not be able to invoke the methods on the unmodified spouts. This breaking change can only be considered as an option only prior to v1.0. \n\n- Alternatively this can be done by providing an additional method on the collector to indicate the condition to the topology runner. The spout can invoke this explicitly. the metrics can then also account for 'no data' and 'error attempts'\n\n- Alternatively - The toplogy  runner may just examine the collector if there was new data generated by the nextTuple() call. In this case it cannot distinguish between errors v/s no incoming data. ","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Storm spouts and bolts need a way to communicate problems back to toplogy runner","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15025659","id":"15025659","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"body":"Similar problem exists with Bolts too .. for example a Hive Bolt may not be able to write to Hive due to some intermittent network issues.  Bolts will not have 'no incoming data' case though.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-11-24T23:10:09.211+0000","updated":"2015-11-24T23:10:09.211+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15027259","id":"15027259","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ptgoetz","name":"ptgoetz","key":"ptgoetz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"P. Taylor Goetz","active":true,"timeZone":"America/Havana"},"body":"Have you considered implementing `backtype.storm.spout.ISpoutSleepStrategy`?\n\n{code}\n/**\n * The strategy a spout needs to use when its waiting. Waiting is\n * triggered in one of two conditions:\n * \n * 1. `nextTuple()` emits no tuples\n * 2. The spout has hit maxSpoutPending and can't emit any more tuples\n * \n * The default strategy sleeps for one millisecond.\n */\npublic interface ISpoutWaitStrategy {\n    void prepare(Map conf);\n    void emptyEmit(long streak);\n}\n{code}\n\nIf the call to a spout's `nextTuple()` method does not emit anything, Storm will call the `emptyEmit()` method with the number of times `nextTuple()` has consecutively failed to emit anything (`streak` will be reset to 0 if when the spout emits something).\n\nThe default implementation (`backtype.storm.spout.SleepSpoutWaitStrategy`) will sleep for configurable (`Config.TOPOLOGY_SLEEP_SPOUT_WAIT_STRATEGY_TIME_MS`) number of milliseconds.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ptgoetz","name":"ptgoetz","key":"ptgoetz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"P. Taylor Goetz","active":true,"timeZone":"America/Havana"},"created":"2015-11-25T17:51:19.849+0000","updated":"2015-11-25T17:51:19.849+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15027571","id":"15027571","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"What do you mean by topology runner?  If you want different backoff logic ISpoutWaitStrategy would be the consumer of that data as [~ptgoetz] has pointed out.  But, I don't see much value in backing off for a different amount of time when there is no data vs. there is an error.  The wait strategy is trying to pick up the next tuple to process as quickly as possible without overwhelming the downstream system.  A single 1 ms wait works really well for this.  Adding more of a wait in most cases is to avoid doing a DDOS on the system you are consuming data from.  That does not seem to be the case here.\n\nIf you want to communicate error conditions or similar problems to an end user or a monitoring/alerting system a metric would be preferable.  Spouts can already register their own metrics for reporting errors, and the latest version of storm includes a system metric that includes counts as to why nextTuple was not called.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2015-11-25T20:47:35.875+0000","updated":"2015-11-25T20:47:35.875+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15027632","id":"15027632","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"body":"I dont think there is a need for a different backoff logic for errors v/s no data. only metric update need to be different.\n\nTaylor's suggestion seems promising.\n\nExponential backoff is typically the preferred way in such systems as opposed to 1ms fixed back off.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-11-25T21:21:29.575+0000","updated":"2015-11-25T21:21:29.575+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15027912","id":"15027912","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"body":"Implementing ISpoutWaitStrategy and sleep longer seems not a great idea cause Spout should also handle messages (ack / fail) from Acker in same loop (mean same thread).\nIf we really want this, we should \"skip\" calling nextTuple for some moment without sleep, or sleep a little bit.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kabhwan","name":"kabhwan","key":"kabhwan","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jungtaek Lim","active":true,"timeZone":"Asia/Seoul"},"created":"2015-11-26T00:49:24.967+0000","updated":"2015-11-26T00:49:24.967+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15028087","id":"15028087","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=basti.lj","name":"basti.lj","key":"basti.lj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Basti Liu","active":true,"timeZone":"Etc/UTC"},"body":"Hi [~roshan_naik]\nI think 1ms waiting time as [~revans2] recommended is simple and effective for this scenario. We had a testing for this before. 1ms waiting can make the cpu usage reduced from hundreds to around 1% while we can ensure the response of spout is still quick.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=basti.lj","name":"basti.lj","key":"basti.lj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Basti Liu","active":true,"timeZone":"Etc/UTC"},"created":"2015-11-26T03:24:03.621+0000","updated":"2015-11-26T03:24:03.621+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15028106","id":"15028106","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=basti.lj","name":"basti.lj","key":"basti.lj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Basti Liu","active":true,"timeZone":"Etc/UTC"},"body":"Since we are going to do the java core migration and merging JStorm, I'd like to share a solution in JStorm. Let's have a look if it is helpful. There are two modes of spout, \"single-thread\" and \"multi-thread\" in JStorm. The \"single-thread\" mode is simliar to Storm while the \"multi-thread\" mode separates the processing of ack/fail and nextTuple to two threads. It means we can stay in nextTuple for a long time without any impact on ack/fail. For this scenario, user can define different backoff logic for 'no data', 'experiencing error' or 'all good' status in nextTuple. After each backoff logic, user don't need to return from nextTuple, but just start to process next event to ensure the response of spout and throughput. But, for this mode, the max pending configuration of spout might be not useful as expectation, while backpressure is a good choice for dynamic flow control.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=basti.lj","name":"basti.lj","key":"basti.lj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Basti Liu","active":true,"timeZone":"Etc/UTC"},"created":"2015-11-26T03:49:10.259+0000","updated":"2015-11-26T03:49:10.259+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15029354","id":"15029354","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Johnbaba","name":"Johnbaba","key":"johnbaba","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=johnbaba&avatarId=25536","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=johnbaba&avatarId=25536","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=johnbaba&avatarId=25536","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=johnbaba&avatarId=25536"},"displayName":"John Fang","active":true,"timeZone":"Asia/Shanghai"},"body":"Implementing ISpoutWaitStrategy is enough to solve the problem for errors v/s no data. Of course,  Two modes of spout, \"single-thread\" and \"multi-theads\", maybe be a good choice.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=Johnbaba","name":"Johnbaba","key":"johnbaba","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=johnbaba&avatarId=25536","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=johnbaba&avatarId=25536","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=johnbaba&avatarId=25536","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=johnbaba&avatarId=25536"},"displayName":"John Fang","active":true,"timeZone":"Asia/Shanghai"},"created":"2015-11-27T02:30:13.771+0000","updated":"2015-11-27T02:30:13.771+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15031800","id":"15031800","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"Multi-thread spout support is interesting, and is something we could support.  [~basti.lj] I don't think we have a JIRA for porting that functionality over yet.  If we don't could you file one? We can move discussion about that to the corresponding JIRA.\n\nExponential backoff makes since if you want to avoid wasting a resource and are willing to sacrifice latency to do that.  I think a 1ms fixed sleep makes the most since for the default, but if someone wants to donate a bounded exponential backoff ISpoutWaitStrategy that would be fine with me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2015-11-30T14:03:08.908+0000","updated":"2015-11-30T14:03:08.908+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15032431","id":"15032431","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~basti.lj]  for the insight on CPU usage drop with a simple 1ms timeout.  I assume thats for a single spout/bolt ?\nSeems like that might be adequate for many cases.\n\nGiven the prevalence of exponential back-off...there will surely be users who would prefer to employ it.. and we could give that as an option... as [~revans2] suggests.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-11-30T20:48:23.004+0000","updated":"2015-11-30T20:48:23.004+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15032923","id":"15032923","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=basti.lj","name":"basti.lj","key":"basti.lj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Basti Liu","active":true,"timeZone":"Etc/UTC"},"body":"OK, I will create one for porting that.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=basti.lj","name":"basti.lj","key":"basti.lj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Basti Liu","active":true,"timeZone":"Etc/UTC"},"created":"2015-12-01T02:04:12.181+0000","updated":"2015-12-01T02:04:12.181+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15032944","id":"15032944","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=basti.lj","name":"basti.lj","key":"basti.lj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Basti Liu","active":true,"timeZone":"Etc/UTC"},"body":"Yes, that is for a single spout. But I don't think we need to do this in bolt. Because, after returning from execute(), the thread of bolt will wait untill there is available tuples in receiving queue. The returning immediately from execute() in bolt will not cause any cpu spike.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=basti.lj","name":"basti.lj","key":"basti.lj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Basti Liu","active":true,"timeZone":"Etc/UTC"},"created":"2015-12-01T02:17:22.742+0000","updated":"2015-12-01T02:17:22.742+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15034553","id":"15034553","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"body":"The bolt will need backoff in case of certain error conditions.. for example if the Hive Bolt is unable to deliver data due to I/O exceptions then it should wait before retrying...  in those cases the exponential back off might be more valuable.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-01T20:56:32.636+0000","updated":"2015-12-01T20:56:32.636+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15035890","id":"15035890","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"body":"[~roshan_naik],\n\nThe bolts don't have any pause built in.  Spouts read from the disruptor queue in a non-blocking way, so they can handle the ack/fail messages that are sent to them.  They essentially are polling from two different sources, the user given spout code and the disruptor queue, so the wait strategy is the way to not do it in a busy loop.  Bolts are only reading from a single source, the disruptor queue.  In the common case a bolt is blocking so if a client, like HBase, is getting errors and the bolt thinks it needs to slow down its processing, it can just sleep.  This will cause the input queue to backup and if you have load aware shuffle enabled it will start to try and route tuples around the slow bolt giving them to bolts that are not getting errors.  If all of the bolts are getting errors automatic back-pressure, if it is enabled, will stop the spouts from sending any more messages until the blockage clears up.  There are potentially lots of things we can do to improve on this system, as the current back-pressure is a fairly big hammer, and it would be nice to only stop spouts that can impact the blockage, or simply throttle them so they are going at a better pace.\n\nIf you have an asynchronous bolt you can still implement a similar throttling yourself in your bolt code by limiting the maximum number of tuples that can be in flight at any point in time.  None if this really needs to be a part of the system.  If you would like to work on a solution that make it more transparent to bolts and provides system level metrics about throttling that seems OK.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=revans2","name":"revans2","key":"revans2","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robert Joseph Evans","active":true,"timeZone":"America/Chicago"},"created":"2015-12-02T14:40:55.382+0000","updated":"2015-12-02T14:40:55.382+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12915955/comment/15037197","id":"15037197","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"body":"My observation here is ... it is preferable to externalize the fixed sleep/other sleep strategy rather than each bolt implement it.\nThe back pressure buildup mechanism you describe would still trigger.\n\nIn tune with the rest of your comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=roshan_naik","name":"roshan_naik","key":"roshan_naik","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Roshan Naik","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-12-03T03:41:30.131+0000","updated":"2015-12-03T03:41:30.131+0000"}],"maxResults":15,"total":15,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-1351/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2ow7b:"}}