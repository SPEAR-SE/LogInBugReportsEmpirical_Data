{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13069876","self":"https://issues.apache.org/jira/rest/api/2/issue/13069876","key":"STORM-2505","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":31800,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12339656","id":"12339656","name":"1.1.1","archived":false,"released":true,"releaseDate":"2017-08-01"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12341047","id":"12341047","name":"1.2.0","archived":false,"released":true,"releaseDate":"2018-02-15"}],"aggregatetimespent":31800,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2017-05-09T03:12:36.059+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue May 09 03:12:36 UTC 2017","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_2070333758_*|*_5_*:*_1_*:*_0","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2017-06-01T04:15:39.815+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2505/watchers","watchCount":2,"isWatching":false},"created":"2017-05-08T05:10:06.082+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12338104","id":"12338104","name":"1.x","archived":false,"released":false}],"customfield_12312339":null,"issuelinks":[{"id":"12509446","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12509446","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"13087819","key":"STORM-2639","self":"https://issues.apache.org/jira/rest/api/2/issue/13087819","fields":{"summary":"Kafka Spout incorrectly computes numCommittedOffsets due to voids in the topic (topic compaction)","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vivek","name":"vivek","key":"vivek","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vivek Mittal","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-07-18T03:55:10.147+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12331080","id":"12331080","name":"storm-kafka-client"}],"timeoriginalestimate":null,"description":"Kafka maintains the spout progress (offsets for partitions) which can hold a value which no longer exists (or offset+1 doesn't exist) in the topic due to following reasons\n* Topology stopped processing (or died) & topic got compacted (cleanup.policy=compact) leaving offset voids in the topic.\n* Topology stopped processing (or died) & Topic got cleaned up (cleanup.policy=delete) and the offset.\n\nWhen the topology starts processing again (or restarted), the spout logic suggests that the next offset has to be (committedOffset+1) for the spout to make progress, which will never be the case as (committedOffset+1) has been removed from the topic and will never be acked.\n\n{code:title=OffsetManager.java|borderStyle=solid}\n if (currOffset == nextCommitOffset + 1) {            // found the next offset to commit\n      found = true;\n      nextCommitMsg = currAckedMsg;\n      nextCommitOffset = currOffset;\n} else if (currOffset > nextCommitOffset + 1) {\n      LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n}\n{code}\n\nA smart forwarding mechanism has to be built so as to forward the spout pivot to the next logical location, instead of a hardcoded single forward operation.\n","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"8h 50m","remainingEstimateSeconds":0,"timeSpentSeconds":31800},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Kafka Spout doesn't support voids in the topic (topic compaction not supported)","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vivek","name":"vivek","key":"vivek","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vivek Mittal","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vivek","name":"vivek","key":"vivek","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vivek Mittal","active":true,"timeZone":"Etc/UTC"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":31800,"total":31800,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":31800,"total":31800,"percent":100},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/comment/16001959","id":"16001959","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ranganp","name":"ranganp","key":"ranganp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Prasanna Ranganathan","active":true,"timeZone":"Etc/UTC"},"body":"Compaction in Kafka topics creates gaps in the offsets that are permanent and visible to all consumers all the time.\n\nWhile Delete policy does not create permanent holes in the kafka topic offsets, spout/consumer could still see gaps under a combination of the following factors:\n\n - Kafka topic with short retention period\n - Storm topology that consumes from such a topic with a slow processing rate\n - Spout offset fetch strategy of earliest OR uncommitted_earliest\n\nGiven the above it is possible that while the spout/consumer is busy processing messages fetched from a particular partition, the async cleaner has run and cleaned up expired logs on the Kafka broker managing that partition. Now when the spout fetches the next batch during a subsequent poll it is likely to see message offsets that are not sequential to the ones it received in the previous batch.\n\nVersion info:\nKafka brokers - 0.10.0.1\nKafka Client in spout - 0.10.2","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ranganp","name":"ranganp","key":"ranganp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Prasanna Ranganathan","active":true,"timeZone":"Etc/UTC"},"created":"2017-05-09T03:12:36.059+0000","updated":"2017-05-09T03:31:38.456+0000"}],"maxResults":1,"total":1,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2505/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":59,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42476","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"GitHub user vivekmittal opened a pull request:\n\n    https://github.com/apache/storm/pull/2104\n\n    [STORM-2505] Spout to support topic compaction\n\n    Kafka maintains the spout progress (offsets for partitions) which can hold a value which no longer exists (or offset+1 doesn't exist) in the topic due to following reasons\n    Topology stopped processing (or died) & topic got compacted (cleanup.policy=compact) leaving offset voids in the topic.\n    \n    Topology stopped processing (or died) & Topic got cleaned up (cleanup.policy=delete) and the offset.\n    When the topology starts processing again (or restarted), the spout logic suggests that the next offset has to be (committedOffset+1) for the spout to make progress, which will never be the case as (committedOffset+1) has been removed from the topic and will never be acked.\n    \n    **OffsetManager.java**\n    `\n     if (currOffset == nextCommitOffset + 1) {            // found the next offset to commit\n                    found = true;\n                    nextCommitMsg = currAckedMsg;\n                    nextCommitOffset = currOffset;\n                } else if (currOffset > nextCommitOffset + 1) {\n                    LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n                }\n    `\n    \n    This pull request maintains a emitted offset set in OffsetManager & smartly forward the offset to the next logical offset\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/vivekmittal/storm master\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/storm/pull/2104.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #2104\n    \n----\ncommit acfd13b9c71f6cf4d7307aa1598e8b50b06b0f37\nAuthor: Vivek Mittal <vivek.mittal@flipkart.com>\nDate:   2017-05-08T05:13:36Z\n\n    [STORM-2505] Spout to support topic compaction. Maintaining a emitted set in OffsetManager to handle the voids in the topic\n\n----\n","created":"2017-05-08T05:18:48.604+0000","updated":"2017-05-08T05:18:48.604+0000","started":"2017-05-08T05:18:48.604+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42476","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42528","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2104\n  \n    LGTM. Good solution :)\n","created":"2017-05-08T16:23:32.329+0000","updated":"2017-05-08T16:23:32.329+0000","started":"2017-05-08T16:23:32.329+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42528","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42541","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115305431\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -49,10 +51,14 @@ public OffsetManager(TopicPartition tp, long initialFetchOffset) {\n             LOG.debug(\"Instantiated {}\", this);\n         }\n     \n    -    public void add(KafkaSpoutMessageId msgId) {          // O(Log N)\n    +    public void ack(KafkaSpoutMessageId msgId) {          // O(Log N)\n    --- End diff --\n    \n    why rename this method? There is no acking happening in here. There is a message being added to the internal state of this object, which is reflected by the name **add**. The name **ack** is misleading.\n","created":"2017-05-08T18:22:35.734+0000","updated":"2017-05-08T18:22:35.734+0000","started":"2017-05-08T18:22:35.734+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42541","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42542","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115310456\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -68,13 +74,34 @@ public OffsetAndMetadata findNextCommitOffset() {\n             KafkaSpoutMessageId nextCommitMsg = null;     // this is a convenience variable to make it faster to create OffsetAndMetadata\n     \n             for (KafkaSpoutMessageId currAckedMsg : ackedMsgs) {  // complexity is that of a linear scan on a TreeMap\n    -            if ((currOffset = currAckedMsg.offset()) == nextCommitOffset + 1) {            // found the next offset to commit\n    +            currOffset = currAckedMsg.offset();\n    +            if (currOffset == nextCommitOffset + 1) {            // found the next offset to commit\n                     found = true;\n                     nextCommitMsg = currAckedMsg;\n                     nextCommitOffset = currOffset;\n    -            } else if (currAckedMsg.offset() > nextCommitOffset + 1) {    // offset found is not continuous to the offsets listed to go in the next commit, so stop search\n    -                LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    -                break;\n    +            } else if (currOffset > nextCommitOffset + 1) {\n    +                if (emittedOffsets.contains(nextCommitOffset + 1)) {\n    +                    LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    +                    break;\n    +                } else {\n    +                    /*\n    +                        This case will arise in case of non contiguous offset being processed.\n    +                        So, if the queue doesn't contain offset = committedOffset + 1 (possible\n    +                        if the queue is compacted or deleted), the consumer should jump to\n    +                        the next logical point in the queue. Next logical offset should be the\n    +                        first element after committedOffset in the ascending ordered emitted set.\n    +                     */\n    +                    LOG.debug(\"Processed non contiguous offset, the previously committed offset has been deleted from the topic. Committed: [{}], Processed: [{}]\", committedOffset, currOffset);\n    +                    final Long nextEmittedOffset = emittedOffsets.ceiling(nextCommitOffset);\n    --- End diff --\n    \n    ceiling method can potentially return null. Is the current logic handling that possible case as well ?\n","created":"2017-05-08T18:22:35.735+0000","updated":"2017-05-08T18:22:35.735+0000","started":"2017-05-08T18:22:35.734+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42542","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42543","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115305869\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -68,13 +74,34 @@ public OffsetAndMetadata findNextCommitOffset() {\n             KafkaSpoutMessageId nextCommitMsg = null;     // this is a convenience variable to make it faster to create OffsetAndMetadata\n     \n             for (KafkaSpoutMessageId currAckedMsg : ackedMsgs) {  // complexity is that of a linear scan on a TreeMap\n    -            if ((currOffset = currAckedMsg.offset()) == nextCommitOffset + 1) {            // found the next offset to commit\n    +            currOffset = currAckedMsg.offset();\n    --- End diff --\n    \n    why this change when the code is exactly the same ?\n","created":"2017-05-08T18:22:35.783+0000","updated":"2017-05-08T18:22:35.783+0000","started":"2017-05-08T18:22:35.782+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42543","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42544","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115316343\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -68,13 +74,34 @@ public OffsetAndMetadata findNextCommitOffset() {\n             KafkaSpoutMessageId nextCommitMsg = null;     // this is a convenience variable to make it faster to create OffsetAndMetadata\n     \n             for (KafkaSpoutMessageId currAckedMsg : ackedMsgs) {  // complexity is that of a linear scan on a TreeMap\n    -            if ((currOffset = currAckedMsg.offset()) == nextCommitOffset + 1) {            // found the next offset to commit\n    +            currOffset = currAckedMsg.offset();\n    +            if (currOffset == nextCommitOffset + 1) {            // found the next offset to commit\n                     found = true;\n                     nextCommitMsg = currAckedMsg;\n                     nextCommitOffset = currOffset;\n    -            } else if (currAckedMsg.offset() > nextCommitOffset + 1) {    // offset found is not continuous to the offsets listed to go in the next commit, so stop search\n    -                LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    -                break;\n    +            } else if (currOffset > nextCommitOffset + 1) {\n    +                if (emittedOffsets.contains(nextCommitOffset + 1)) {\n    +                    LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    +                    break;\n    +                } else {\n    +                    /*\n    +                        This case will arise in case of non contiguous offset being processed.\n    +                        So, if the queue doesn't contain offset = committedOffset + 1 (possible\n    +                        if the queue is compacted or deleted), the consumer should jump to\n    +                        the next logical point in the queue. Next logical offset should be the\n    +                        first element after committedOffset in the ascending ordered emitted set.\n    +                     */\n    +                    LOG.debug(\"Processed non contiguous offset, the previously committed offset has been deleted from the topic. Committed: [{}], Processed: [{}]\", committedOffset, currOffset);\n    --- End diff --\n    \n    \"the previously committed offset has been deleted from the topic\" - isn't this incorrect? If the offset has been committed, it has to be in the topic. I believe you meant to say something else in this message. Can you please rephrase it. Thanks.\n","created":"2017-05-08T18:22:35.819+0000","updated":"2017-05-08T18:22:35.819+0000","started":"2017-05-08T18:22:35.819+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42544","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42545","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user hmcl commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115317728\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -113,6 +140,15 @@ public long commit(OffsetAndMetadata committedOffset) {\n                     break;\n                 }\n             }\n    +\n    +        for (Iterator<Long> iterator = emittedOffsets.iterator(); iterator.hasNext();) {\n    --- End diff --\n    \n    which scenario is this cleanup code accounting for ?\n","created":"2017-05-08T18:22:35.821+0000","updated":"2017-05-08T18:22:35.821+0000","started":"2017-05-08T18:22:35.820+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42545","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42546","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115320142\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -113,6 +140,15 @@ public long commit(OffsetAndMetadata committedOffset) {\n                     break;\n                 }\n             }\n    +\n    +        for (Iterator<Long> iterator = emittedOffsets.iterator(); iterator.hasNext();) {\n    --- End diff --\n    \n    The emitted offsets have to get deleted at some point, or the set grows indefinitely\n","created":"2017-05-08T18:32:48.381+0000","updated":"2017-05-08T18:32:48.381+0000","started":"2017-05-08T18:32:48.381+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42546","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42547","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115320154\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -68,13 +74,34 @@ public OffsetAndMetadata findNextCommitOffset() {\n             KafkaSpoutMessageId nextCommitMsg = null;     // this is a convenience variable to make it faster to create OffsetAndMetadata\n     \n             for (KafkaSpoutMessageId currAckedMsg : ackedMsgs) {  // complexity is that of a linear scan on a TreeMap\n    -            if ((currOffset = currAckedMsg.offset()) == nextCommitOffset + 1) {            // found the next offset to commit\n    +            currOffset = currAckedMsg.offset();\n    +            if (currOffset == nextCommitOffset + 1) {            // found the next offset to commit\n                     found = true;\n                     nextCommitMsg = currAckedMsg;\n                     nextCommitOffset = currOffset;\n    -            } else if (currAckedMsg.offset() > nextCommitOffset + 1) {    // offset found is not continuous to the offsets listed to go in the next commit, so stop search\n    -                LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    -                break;\n    +            } else if (currOffset > nextCommitOffset + 1) {\n    +                if (emittedOffsets.contains(nextCommitOffset + 1)) {\n    +                    LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    +                    break;\n    +                } else {\n    +                    /*\n    +                        This case will arise in case of non contiguous offset being processed.\n    +                        So, if the queue doesn't contain offset = committedOffset + 1 (possible\n    +                        if the queue is compacted or deleted), the consumer should jump to\n    +                        the next logical point in the queue. Next logical offset should be the\n    +                        first element after committedOffset in the ascending ordered emitted set.\n    +                     */\n    +                    LOG.debug(\"Processed non contiguous offset, the previously committed offset has been deleted from the topic. Committed: [{}], Processed: [{}]\", committedOffset, currOffset);\n    +                    final Long nextEmittedOffset = emittedOffsets.ceiling(nextCommitOffset);\n    --- End diff --\n    \n    Nice catch, L96 seems like it'll throw an NPE when Java tries to unbox nextEmittedOffset\n","created":"2017-05-08T18:32:51.176+0000","updated":"2017-05-08T18:32:51.176+0000","started":"2017-05-08T18:32:51.176+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42547","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42548","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115320329\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -49,10 +51,14 @@ public OffsetManager(TopicPartition tp, long initialFetchOffset) {\n             LOG.debug(\"Instantiated {}\", this);\n         }\n     \n    -    public void add(KafkaSpoutMessageId msgId) {          // O(Log N)\n    +    public void ack(KafkaSpoutMessageId msgId) {          // O(Log N)\n    --- End diff --\n    \n    Isn't add more ambiguous now that there are two different methods for adding offsets (emit())?\n","created":"2017-05-08T18:33:42.987+0000","updated":"2017-05-08T18:33:42.987+0000","started":"2017-05-08T18:33:42.987+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42548","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42568","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user askprasanna commented on the issue:\n\n    https://github.com/apache/storm/pull/2104\n  \n    Want to add the following note. This issue could potentially happen with non-compacted topics also. We had multiple topologies getting stuck due to this issue including a topic with \"delete\" config. Based on the learnings from the debugging myself and @vivekmittal did, even \"delete\" topics could encounter this issue under the following circumstance\n    \n    - A Kafka topic with relatively short retention period\n    - A Storm topology that consumes from such a topic with a slow processing rate\n    - A fallback strategy to earliest offset OR uncommitted_earliest\n    \n    Given the above, it is possible that while the spout/consumer is busy processing messages fetched from a particular partition, the async cleaner has run and cleaned up expired logs on the Kafka broker managing that partition. Now when the spout fetches the next batch during a subsequent poll it is likely to see message offsets that are not sequential to the ones it received in the previous batch.\n","created":"2017-05-09T02:53:33.335+0000","updated":"2017-05-09T02:53:33.335+0000","started":"2017-05-09T02:53:33.334+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42568","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42571","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user vivekmittal commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115405683\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -68,13 +74,34 @@ public OffsetAndMetadata findNextCommitOffset() {\n             KafkaSpoutMessageId nextCommitMsg = null;     // this is a convenience variable to make it faster to create OffsetAndMetadata\n     \n             for (KafkaSpoutMessageId currAckedMsg : ackedMsgs) {  // complexity is that of a linear scan on a TreeMap\n    -            if ((currOffset = currAckedMsg.offset()) == nextCommitOffset + 1) {            // found the next offset to commit\n    +            currOffset = currAckedMsg.offset();\n    --- End diff --\n    \n    Using the currOffset at multiple places, so just extracted it in a variable.\n","created":"2017-05-09T04:36:56.761+0000","updated":"2017-05-09T04:36:56.761+0000","started":"2017-05-09T04:36:56.759+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42571","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42572","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user vivekmittal commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115406125\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -68,13 +74,34 @@ public OffsetAndMetadata findNextCommitOffset() {\n             KafkaSpoutMessageId nextCommitMsg = null;     // this is a convenience variable to make it faster to create OffsetAndMetadata\n     \n             for (KafkaSpoutMessageId currAckedMsg : ackedMsgs) {  // complexity is that of a linear scan on a TreeMap\n    -            if ((currOffset = currAckedMsg.offset()) == nextCommitOffset + 1) {            // found the next offset to commit\n    +            currOffset = currAckedMsg.offset();\n    +            if (currOffset == nextCommitOffset + 1) {            // found the next offset to commit\n                     found = true;\n                     nextCommitMsg = currAckedMsg;\n                     nextCommitOffset = currOffset;\n    -            } else if (currAckedMsg.offset() > nextCommitOffset + 1) {    // offset found is not continuous to the offsets listed to go in the next commit, so stop search\n    -                LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    -                break;\n    +            } else if (currOffset > nextCommitOffset + 1) {\n    +                if (emittedOffsets.contains(nextCommitOffset + 1)) {\n    +                    LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    +                    break;\n    +                } else {\n    +                    /*\n    +                        This case will arise in case of non contiguous offset being processed.\n    +                        So, if the queue doesn't contain offset = committedOffset + 1 (possible\n    +                        if the queue is compacted or deleted), the consumer should jump to\n    +                        the next logical point in the queue. Next logical offset should be the\n    +                        first element after committedOffset in the ascending ordered emitted set.\n    +                     */\n    +                    LOG.debug(\"Processed non contiguous offset, the previously committed offset has been deleted from the topic. Committed: [{}], Processed: [{}]\", committedOffset, currOffset);\n    --- End diff --\n    \n    Yes the offset is there because it was part of the topic, but there is no guarantee that it will always be there. The offsets might be wiped off owing to compaction/deletion process in a kafka topic. This case will only arrive when the previously (committedOffset + 1) is no longer present in the topic. I will rephrase the message to explicitly specify (committedOffset+1) is no longer part of the topic.\n","created":"2017-05-09T04:41:58.803+0000","updated":"2017-05-09T04:41:58.803+0000","started":"2017-05-09T04:41:58.800+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42572","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42573","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user vivekmittal commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115406299\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -49,10 +51,14 @@ public OffsetManager(TopicPartition tp, long initialFetchOffset) {\n             LOG.debug(\"Instantiated {}\", this);\n         }\n     \n    -    public void add(KafkaSpoutMessageId msgId) {          // O(Log N)\n    +    public void ack(KafkaSpoutMessageId msgId) {          // O(Log N)\n    --- End diff --\n    \n    The OffsetManager now maintains acked as well as emitted set. As @srdo  pointed **add** will be a little ambiguous.\n    I can make them more verbose if needed. Something like **addAck** and **addEmit**\n","created":"2017-05-09T04:44:47.094+0000","updated":"2017-05-09T04:44:47.094+0000","started":"2017-05-09T04:44:47.094+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42573","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42575","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user vivekmittal commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115406854\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -68,13 +74,34 @@ public OffsetAndMetadata findNextCommitOffset() {\n             KafkaSpoutMessageId nextCommitMsg = null;     // this is a convenience variable to make it faster to create OffsetAndMetadata\n     \n             for (KafkaSpoutMessageId currAckedMsg : ackedMsgs) {  // complexity is that of a linear scan on a TreeMap\n    -            if ((currOffset = currAckedMsg.offset()) == nextCommitOffset + 1) {            // found the next offset to commit\n    +            currOffset = currAckedMsg.offset();\n    +            if (currOffset == nextCommitOffset + 1) {            // found the next offset to commit\n                     found = true;\n                     nextCommitMsg = currAckedMsg;\n                     nextCommitOffset = currOffset;\n    -            } else if (currAckedMsg.offset() > nextCommitOffset + 1) {    // offset found is not continuous to the offsets listed to go in the next commit, so stop search\n    -                LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    -                break;\n    +            } else if (currOffset > nextCommitOffset + 1) {\n    +                if (emittedOffsets.contains(nextCommitOffset + 1)) {\n    +                    LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    +                    break;\n    +                } else {\n    +                    /*\n    +                        This case will arise in case of non contiguous offset being processed.\n    +                        So, if the queue doesn't contain offset = committedOffset + 1 (possible\n    +                        if the queue is compacted or deleted), the consumer should jump to\n    +                        the next logical point in the queue. Next logical offset should be the\n    +                        first element after committedOffset in the ascending ordered emitted set.\n    +                     */\n    +                    LOG.debug(\"Processed non contiguous offset, the previously committed offset has been deleted from the topic. Committed: [{}], Processed: [{}]\", committedOffset, currOffset);\n    +                    final Long nextEmittedOffset = emittedOffsets.ceiling(nextCommitOffset);\n    --- End diff --\n    \n    Will fix it.\n","created":"2017-05-09T04:52:07.031+0000","updated":"2017-05-09T04:52:07.031+0000","started":"2017-05-09T04:52:07.030+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42575","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42586","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user harshach commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115412857\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -68,13 +74,34 @@ public OffsetAndMetadata findNextCommitOffset() {\n             KafkaSpoutMessageId nextCommitMsg = null;     // this is a convenience variable to make it faster to create OffsetAndMetadata\n     \n             for (KafkaSpoutMessageId currAckedMsg : ackedMsgs) {  // complexity is that of a linear scan on a TreeMap\n    -            if ((currOffset = currAckedMsg.offset()) == nextCommitOffset + 1) {            // found the next offset to commit\n    +            currOffset = currAckedMsg.offset();\n    +            if (currOffset == nextCommitOffset + 1) {            // found the next offset to commit\n                     found = true;\n                     nextCommitMsg = currAckedMsg;\n                     nextCommitOffset = currOffset;\n    -            } else if (currAckedMsg.offset() > nextCommitOffset + 1) {    // offset found is not continuous to the offsets listed to go in the next commit, so stop search\n    -                LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    -                break;\n    +            } else if (currOffset > nextCommitOffset + 1) {\n    +                if (emittedOffsets.contains(nextCommitOffset + 1)) {\n    +                    LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    +                    break;\n    +                } else {\n    +                    /*\n    +                        This case will arise in case of non contiguous offset being processed.\n    +                        So, if the queue doesn't contain offset = committedOffset + 1 (possible\n    +                        if the queue is compacted or deleted), the consumer should jump to\n    --- End diff --\n    \n    Minor nit: \"queue\" => \"topic\"\n","created":"2017-05-09T06:05:11.098+0000","updated":"2017-05-09T06:05:11.098+0000","started":"2017-05-09T06:05:11.097+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42586","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42587","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user vivekmittal commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2104#discussion_r115413017\n  \n    --- Diff: external/storm-kafka-client/src/main/java/org/apache/storm/kafka/spout/internal/OffsetManager.java ---\n    @@ -68,13 +74,34 @@ public OffsetAndMetadata findNextCommitOffset() {\n             KafkaSpoutMessageId nextCommitMsg = null;     // this is a convenience variable to make it faster to create OffsetAndMetadata\n     \n             for (KafkaSpoutMessageId currAckedMsg : ackedMsgs) {  // complexity is that of a linear scan on a TreeMap\n    -            if ((currOffset = currAckedMsg.offset()) == nextCommitOffset + 1) {            // found the next offset to commit\n    +            currOffset = currAckedMsg.offset();\n    +            if (currOffset == nextCommitOffset + 1) {            // found the next offset to commit\n                     found = true;\n                     nextCommitMsg = currAckedMsg;\n                     nextCommitOffset = currOffset;\n    -            } else if (currAckedMsg.offset() > nextCommitOffset + 1) {    // offset found is not continuous to the offsets listed to go in the next commit, so stop search\n    -                LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    -                break;\n    +            } else if (currOffset > nextCommitOffset + 1) {\n    +                if (emittedOffsets.contains(nextCommitOffset + 1)) {\n    +                    LOG.debug(\"topic-partition [{}] has non-continuous offset [{}]. It will be processed in a subsequent batch.\", tp, currOffset);\n    +                    break;\n    +                } else {\n    +                    /*\n    +                        This case will arise in case of non contiguous offset being processed.\n    +                        So, if the queue doesn't contain offset = committedOffset + 1 (possible\n    +                        if the queue is compacted or deleted), the consumer should jump to\n    --- End diff --\n    \n    Thanks for pointing it out. Will change the text.\n","created":"2017-05-09T06:06:54.910+0000","updated":"2017-05-09T06:06:54.910+0000","started":"2017-05-09T06:06:54.910+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42587","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42588","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user harshach commented on the issue:\n\n    https://github.com/apache/storm/pull/2104\n  \n    @vivekmittal can you squash your commits into singe one.\n    \"Topology stopped processing (or died) & topic got compacted (cleanup.policy=compact) leaving offset voids in the topic.\n    \n    Topology stopped processing (or died) & Topic got cleaned up (cleanup.policy=delete) and the offset.\"\n    \n    In both of these cases are we not getting OffsetOutofRange exception?\n","created":"2017-05-09T06:06:57.483+0000","updated":"2017-05-09T06:06:57.483+0000","started":"2017-05-09T06:06:57.482+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42588","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42592","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user askprasanna commented on the issue:\n\n    https://github.com/apache/storm/pull/2104\n  \n    We have set the auto.offset.reset property to 'latest' which is the default value in Kafka. The exception is thrown only when it is set to 'none'. Verified the same in Fetcher.java in Kafka clients library.\n    \n    We do see kafka client log message indicating offset being reset.\n","created":"2017-05-09T06:16:59.630+0000","updated":"2017-05-09T06:16:59.630+0000","started":"2017-05-09T06:16:59.629+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42592","issueId":"13069876"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13069876/worklog/42595","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user vivekmittal commented on the issue:\n\n    https://github.com/apache/storm/pull/2104\n  \n    Squashed the commits into one.\n","created":"2017-05-09T06:18:56.363+0000","updated":"2017-05-09T06:18:56.363+0000","started":"2017-05-09T06:18:56.363+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"42595","issueId":"13069876"}]},"customfield_12311820":"0|i3em5b:"}}