{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13089108","self":"https://issues.apache.org/jira/rest/api/2/issue/13089108","key":"STORM-2652","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":21000,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12314820","id":"12314820","key":"STORM","name":"Apache Storm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/13260","id":"13260","description":"Apache Storm Related","name":"Storm"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12339656","id":"12339656","name":"1.1.1","archived":false,"released":true,"releaseDate":"2017-08-01"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12341047","id":"12341047","name":"1.2.0","archived":false,"released":true,"releaseDate":"2018-02-15"}],"aggregatetimespent":21000,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2017-07-23T02:38:56.449+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Sun Jul 23 02:38:56 UTC 2017","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_99979663_*|*_3_*:*_1_*:*_1893158_*|*_4_*:*_1_*:*_78114124_*|*_5_*:*_2_*:*_1380574","customfield_12310420":"9223372036854775807","customfield_12312321":null,"resolutiondate":"2017-07-23T19:38:00.935+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2652/watchers","watchCount":2,"isWatching":false},"created":"2017-07-21T17:15:13.469+0000","priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":0,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12334657","id":"12334657","name":"2.0.0","archived":false,"released":false},{"self":"https://issues.apache.org/jira/rest/api/2/version/12335748","id":"12335748","name":"1.1.0","archived":false,"released":true,"releaseDate":"2017-03-29"}],"customfield_12312339":null,"issuelinks":[],"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=omerhadari","name":"omerhadari","key":"omerhadari","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Omer Hadari","active":true,"timeZone":"Asia/Jerusalem"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-07-23T19:38:20.990+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12332927","id":"12332927","name":"storm-jms"}],"timeoriginalestimate":null,"description":"Due to a bug, the message timeout configuration property is read as an integer even though it is of type long.\n\n```\n7317 [Thread-18-a-executor[2 2]] ERROR o.a.s.util - Async loop died!\njava.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Integer\n\tat org.apache.storm.jms.spout.JmsSpout.open(JmsSpout.java:175) ~[storm-jms-1.1.0.jar:1.1.0]\n\tat org.apache.storm.daemon.executor$fn__4976$fn__4991.invoke(executor.clj:600) ~[storm-core-1.1.0.jar:1.1.0]\n\tat org.apache.storm.util$async_loop$fn__557.invoke(util.clj:482) [storm-core-1.1.0.jar:1.1.0]\n\tat clojure.lang.AFn.run(AFn.java:22) [clojure-1.7.0.jar:?]\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_131]\n7320 [Thread-18-a-executor[2 2]] ERROR o.a.s.d.executor - \njava.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Integer\n\tat org.apache.storm.jms.spout.JmsSpout.open(JmsSpout.java:175) ~[storm-jms-1.1.0.jar:1.1.0]\n\tat org.apache.storm.daemon.executor$fn__4976$fn__4991.invoke(executor.clj:600) ~[storm-core-1.1.0.jar:1.1.0]\n\tat org.apache.storm.util$async_loop$fn__557.invoke(util.clj:482) [storm-core-1.1.0.jar:1.1.0]\n\tat clojure.lang.AFn.run(AFn.java:22) [clojure-1.7.0.jar:?]\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_131]\n```","customfield_10010":null,"timetracking":{"remainingEstimate":"0h","timeSpent":"5h 50m","remainingEstimateSeconds":0,"timeSpentSeconds":21000},"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"attachment":[],"customfield_12312340":null,"aggregatetimeestimate":0,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Exception thrown in JmsSpout open method","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=omerhadari","name":"omerhadari","key":"omerhadari","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Omer Hadari","active":true,"timeZone":"Asia/Jerusalem"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=omerhadari","name":"omerhadari","key":"omerhadari","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Omer Hadari","active":true,"timeZone":"Asia/Jerusalem"},"customfield_12310291":null,"customfield_12310290":null,"aggregateprogress":{"progress":21000,"total":21000,"percent":100},"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":21000,"total":21000,"percent":100},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/comment/16097429","id":"16097429","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=omerhadari","name":"omerhadari","key":"omerhadari","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Omer Hadari","active":true,"timeZone":"Asia/Jerusalem"},"body":"For assigning to reporter \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=omerhadari","name":"omerhadari","key":"omerhadari","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10438","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10438","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10438","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10438"},"displayName":"Omer Hadari","active":true,"timeZone":"Asia/Jerusalem"},"created":"2017-07-22T21:24:33.691+0000","updated":"2017-07-22T21:24:33.691+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/comment/16097482","id":"16097482","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vesense","name":"vesense","key":"vesense","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=vesense&avatarId=25513","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=vesense&avatarId=25513","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=vesense&avatarId=25513","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=vesense&avatarId=25513"},"displayName":"Xin Wang","active":true,"timeZone":"Asia/Shanghai"},"body":"[~omerhadari] I assigned the Jira to you and added you to the Jira contributors.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vesense","name":"vesense","key":"vesense","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=vesense&avatarId=25513","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=vesense&avatarId=25513","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=vesense&avatarId=25513","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=vesense&avatarId=25513"},"displayName":"Xin Wang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-07-23T02:38:56.449+0000","updated":"2017-07-23T02:38:56.449+0000"}],"maxResults":2,"total":2,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/STORM-2652/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":36,"worklogs":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48408","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user omerhadari commented on the issue:\n\n    https://github.com/apache/storm/pull/2234\n  \n    Done, and done\n    https://issues.apache.org/jira/browse/STORM-2652\n","created":"2017-07-21T17:17:25.139+0000","updated":"2017-07-21T17:17:25.139+0000","started":"2017-07-21T17:17:25.139+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48408","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48410","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user omerhadari commented on the issue:\n\n    https://github.com/apache/storm/pull/2234\n  \n    This still fails due to stylecheck because of numerous error regarding lines I have not touched.\n    I do not mind fixing them, but I don't know if it is within the scope of this PR. What do you think?\n\n","created":"2017-07-21T17:31:17.802+0000","updated":"2017-07-21T17:31:17.802+0000","started":"2017-07-21T17:31:17.802+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48410","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48413","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2234\n  \n    @omerhadari I don't think you need to fix all violations for the module, but of course wouldn't complain if you did ;) If you do I think it should go in another PR though. \n    \n    Check the pom.xml for storm-jms. It has a count of ignored violations If the build fails now it's because the diff here adds some new checkstyle violations. If you build storm-jms locally, you should get a checkstyle-violations.xml in storm-jms/target. I think it would be good to either fix the new violations (check out master and diff checkstyle-violations with yours), or just fix all violations for the two modified files. If you're up for fixing the violations for the two files, please reduce the number of ignored errors in pom.xml to match. \n","created":"2017-07-21T17:44:38.609+0000","updated":"2017-07-21T17:44:38.609+0000","started":"2017-07-21T17:44:38.607+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48413","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48419","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user omerhadari commented on the issue:\n\n    https://github.com/apache/storm/pull/2234\n  \n    Well I have fixed all violations for the files I touched, but it still over many style violations in other files. I'd be more than happy to fix them in a separate PR, but for the scope of this one I pushed and changed my fixes.\n","created":"2017-07-21T19:12:04.791+0000","updated":"2017-07-21T19:12:04.791+0000","started":"2017-07-21T19:12:04.789+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48419","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48423","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user omerhadari commented on the issue:\n\n    https://github.com/apache/storm/pull/2234\n  \n    I fixed all style issues reported in `checkstyle-violations.xml` regarding the files I touched, and it still failed. I check out master and ran `mvn checkout:check`, it failed there. Too - with even more errors.\n    I would be happy to improve the style of other classes in a separate PR. In the meantime, I fixed all style issues regarding `JmsSpout` and `JmsSpoutTest` and updated `pom.xml` to a working allowed violations value.\n","created":"2017-07-21T19:35:54.689+0000","updated":"2017-07-21T19:35:54.689+0000","started":"2017-07-21T19:35:54.688+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48423","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48425","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on the issue:\n\n    https://github.com/apache/storm/pull/2234\n  \n    @omerhadari It is showing 232 violations for me now, and no violations in JmsSpout. I believe that running checkstyle:check will run checkstyle with the default configuration (and ruleset) rather than the one we have set in the pom, which is why the count is inconsistent. If you want to see how many errors there are, you can set the max violations to 0 and run mvn clean validate. \n","created":"2017-07-21T19:49:09.026+0000","updated":"2017-07-21T19:49:09.026+0000","started":"2017-07-21T19:49:09.025+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48425","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48427","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user omerhadari commented on the issue:\n\n    https://github.com/apache/storm/pull/2234\n  \n    I see, Fixed that as well.\n    See if you think someone needs to take a look and verify that my style fixes are the correct ones :)\n","created":"2017-07-21T20:10:04.197+0000","updated":"2017-07-21T20:10:04.197+0000","started":"2017-07-21T20:10:04.197+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48427","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48428","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128847943\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -30,65 +35,110 @@\n     import javax.jms.MessageListener;\n     import javax.jms.Session;\n     \n    -import org.apache.storm.topology.base.BaseRichSpout;\n    -import org.apache.storm.utils.Utils;\n    -import org.slf4j.Logger;\n    -import org.slf4j.LoggerFactory;\n    -\n    +import org.apache.storm.Config;\n     import org.apache.storm.jms.JmsProvider;\n     import org.apache.storm.jms.JmsTupleProducer;\n     import org.apache.storm.spout.SpoutOutputCollector;\n     import org.apache.storm.task.TopologyContext;\n     import org.apache.storm.topology.OutputFieldsDeclarer;\n    +import org.apache.storm.topology.base.BaseRichSpout;\n     import org.apache.storm.tuple.Values;\n    +import org.apache.storm.utils.Utils;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +\n     \n     /**\n    - * A Storm <code>Spout</code> implementation that listens to a JMS topic or queue\n    - * and outputs tuples based on the messages it receives.\n    - * <p>\n    - * <code>JmsSpout</code> instances rely on <code>JmsProducer</code> implementations\n    - * to obtain the JMS <code>ConnectionFactory</code> and <code>Destination</code> objects\n    - * necessary to connect to a JMS topic/queue.\n    - * <p>\n    - * When a <code>JmsSpout</code> receives a JMS message, it delegates to an\n    - * internal <code>JmsTupleProducer</code> instance to create a Storm tuple from the\n    - * incoming message.\n    - * <p>\n    - * Typically, developers will supply a custom <code>JmsTupleProducer</code> implementation\n    - * appropriate for the expected message content.\n    + * A Storm <code>Spout</code> implementation that listens to a JMS topic or\n    + * queue and outputs tuples based on the messages it receives.\n    + *\n    + * <p><code>JmsSpout</code> instances rely on <code>JmsProducer</code>\n    + * implementations to obtain the JMS\n    + * <code>ConnectionFactory</code> and <code>Destination</code> objects necessary\n    + * to connect to a JMS topic/queue.\n    + *\n    + * <p>When a <code>JmsSpout</code> receives a JMS message, it delegates to an\n    + * internal <code>JmsTupleProducer</code> instance to create a Storm tuple from\n    + * the incoming message.\n    + *\n    + * <p>Typically, developers will supply a custom <code>JmsTupleProducer</code>\n    + * implementation appropriate for the expected message content.\n      */\n     @SuppressWarnings(\"serial\")\n     public class JmsSpout extends BaseRichSpout implements MessageListener {\n    +\n    +    /** The logger object instance for this class. */\n         private static final Logger LOG = LoggerFactory.getLogger(JmsSpout.class);\n     \n    -    // JMS options\n    +    /** The logger of the recovery task. */\n    +    private static final Logger RECOVERY_TASK_LOG =\n    +            LoggerFactory.getLogger(RecoveryTask.class);\n    +\n    +    /** Time to sleep between queue polling attempts. */\n    +    private static final int POLL_INTERVAL = 50;\n    +\n    +    /**\n    +     * The default value the {@link Config#TOPOLOGY_MESSAGE_TIMEOUT_SECS}.\n    --- End diff --\n    \n    Nit: \"The default value for {@link Config#TOPOLOGY_MESSAGE_TIMEOUT_SECS}\", and it would be good to rename to DEFAULT_MESSAGE_TIMEOUT_SECS\n","created":"2017-07-21T20:16:37.314+0000","updated":"2017-07-21T20:16:37.314+0000","started":"2017-07-21T20:16:37.313+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48428","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48429","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128850697\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -268,18 +366,25 @@ public void ack(Object msgId) {\n                         LOG.warn(\"Error acknowldging JMS message: \" + msgId, e);\n                     }\n                 } else {\n    -                LOG.warn(\"Couldn't acknowledge unknown JMS message ID: \" + msgId);\n    +                LOG.warn(\"Couldn't acknowledge unknown JMS message ID: \"\n    +                        + msgId);\n                 }\n             } else {\n                 this.toCommit.remove(msgId);\n             }\n     \n         }\n     \n    -    /*\n    -     * Will only be called if we're transactional or not AUTO_ACKNOWLEDGE\n    +    /**\n    +     * Fail an unsuccessfully handled message by the its {@link JmsMessageID}.\n    --- End diff --\n    \n    Nit: the its\n","created":"2017-07-21T20:16:37.401+0000","updated":"2017-07-21T20:16:37.401+0000","started":"2017-07-21T20:16:37.401+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48429","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48430","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128851000\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -288,19 +393,28 @@ public void fail(Object msgId) {\n             }\n         }\n     \n    -    public void declareOutputFields(OutputFieldsDeclarer declarer) {\n    +    /**\n    +     * {@inheritDoc}\n    --- End diff --\n    \n    Nit: I think javadoc does this automagically. I think inheritDoc is in case you want to add some extra javadoc and then inherit the rest\n","created":"2017-07-21T20:16:37.489+0000","updated":"2017-07-21T20:16:37.489+0000","started":"2017-07-21T20:16:37.488+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48430","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48431","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128850445\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -30,65 +35,110 @@\n     import javax.jms.MessageListener;\n     import javax.jms.Session;\n     \n    -import org.apache.storm.topology.base.BaseRichSpout;\n    -import org.apache.storm.utils.Utils;\n    -import org.slf4j.Logger;\n    -import org.slf4j.LoggerFactory;\n    -\n    +import org.apache.storm.Config;\n     import org.apache.storm.jms.JmsProvider;\n     import org.apache.storm.jms.JmsTupleProducer;\n     import org.apache.storm.spout.SpoutOutputCollector;\n     import org.apache.storm.task.TopologyContext;\n     import org.apache.storm.topology.OutputFieldsDeclarer;\n    +import org.apache.storm.topology.base.BaseRichSpout;\n     import org.apache.storm.tuple.Values;\n    +import org.apache.storm.utils.Utils;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +\n     \n     /**\n    - * A Storm <code>Spout</code> implementation that listens to a JMS topic or queue\n    - * and outputs tuples based on the messages it receives.\n    - * <p>\n    - * <code>JmsSpout</code> instances rely on <code>JmsProducer</code> implementations\n    - * to obtain the JMS <code>ConnectionFactory</code> and <code>Destination</code> objects\n    - * necessary to connect to a JMS topic/queue.\n    - * <p>\n    - * When a <code>JmsSpout</code> receives a JMS message, it delegates to an\n    - * internal <code>JmsTupleProducer</code> instance to create a Storm tuple from the\n    - * incoming message.\n    - * <p>\n    - * Typically, developers will supply a custom <code>JmsTupleProducer</code> implementation\n    - * appropriate for the expected message content.\n    + * A Storm <code>Spout</code> implementation that listens to a JMS topic or\n    + * queue and outputs tuples based on the messages it receives.\n    + *\n    + * <p><code>JmsSpout</code> instances rely on <code>JmsProducer</code>\n    + * implementations to obtain the JMS\n    + * <code>ConnectionFactory</code> and <code>Destination</code> objects necessary\n    + * to connect to a JMS topic/queue.\n    + *\n    + * <p>When a <code>JmsSpout</code> receives a JMS message, it delegates to an\n    + * internal <code>JmsTupleProducer</code> instance to create a Storm tuple from\n    + * the incoming message.\n    + *\n    + * <p>Typically, developers will supply a custom <code>JmsTupleProducer</code>\n    + * implementation appropriate for the expected message content.\n      */\n     @SuppressWarnings(\"serial\")\n     public class JmsSpout extends BaseRichSpout implements MessageListener {\n    +\n    +    /** The logger object instance for this class. */\n         private static final Logger LOG = LoggerFactory.getLogger(JmsSpout.class);\n     \n    -    // JMS options\n    +    /** The logger of the recovery task. */\n    +    private static final Logger RECOVERY_TASK_LOG =\n    +            LoggerFactory.getLogger(RecoveryTask.class);\n    +\n    +    /** Time to sleep between queue polling attempts. */\n    +    private static final int POLL_INTERVAL = 50;\n    +\n    +    /**\n    +     * The default value the {@link Config#TOPOLOGY_MESSAGE_TIMEOUT_SECS}.\n    +     */\n    +    private static final int DEFAULT_MESSAGE_TIMEOUT = 30;\n    +\n    +    /** Time to wait before queuing the first recovery task (in seconds). */\n    +    private static final int RECOVERY_DELAY = 10;\n    --- End diff --\n    \n    Nit: RECOVERY_DELAY_SECS\n","created":"2017-07-21T20:16:37.572+0000","updated":"2017-07-21T20:16:37.572+0000","started":"2017-07-21T20:16:37.572+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48431","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48432","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128849546\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -30,65 +35,110 @@\n     import javax.jms.MessageListener;\n     import javax.jms.Session;\n     \n    -import org.apache.storm.topology.base.BaseRichSpout;\n    -import org.apache.storm.utils.Utils;\n    -import org.slf4j.Logger;\n    -import org.slf4j.LoggerFactory;\n    -\n    +import org.apache.storm.Config;\n     import org.apache.storm.jms.JmsProvider;\n     import org.apache.storm.jms.JmsTupleProducer;\n     import org.apache.storm.spout.SpoutOutputCollector;\n     import org.apache.storm.task.TopologyContext;\n     import org.apache.storm.topology.OutputFieldsDeclarer;\n    +import org.apache.storm.topology.base.BaseRichSpout;\n     import org.apache.storm.tuple.Values;\n    +import org.apache.storm.utils.Utils;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +\n     \n     /**\n    - * A Storm <code>Spout</code> implementation that listens to a JMS topic or queue\n    - * and outputs tuples based on the messages it receives.\n    - * <p>\n    - * <code>JmsSpout</code> instances rely on <code>JmsProducer</code> implementations\n    - * to obtain the JMS <code>ConnectionFactory</code> and <code>Destination</code> objects\n    - * necessary to connect to a JMS topic/queue.\n    - * <p>\n    - * When a <code>JmsSpout</code> receives a JMS message, it delegates to an\n    - * internal <code>JmsTupleProducer</code> instance to create a Storm tuple from the\n    - * incoming message.\n    - * <p>\n    - * Typically, developers will supply a custom <code>JmsTupleProducer</code> implementation\n    - * appropriate for the expected message content.\n    + * A Storm <code>Spout</code> implementation that listens to a JMS topic or\n    + * queue and outputs tuples based on the messages it receives.\n    + *\n    + * <p><code>JmsSpout</code> instances rely on <code>JmsProducer</code>\n    + * implementations to obtain the JMS\n    + * <code>ConnectionFactory</code> and <code>Destination</code> objects necessary\n    + * to connect to a JMS topic/queue.\n    + *\n    + * <p>When a <code>JmsSpout</code> receives a JMS message, it delegates to an\n    + * internal <code>JmsTupleProducer</code> instance to create a Storm tuple from\n    + * the incoming message.\n    + *\n    + * <p>Typically, developers will supply a custom <code>JmsTupleProducer</code>\n    + * implementation appropriate for the expected message content.\n      */\n     @SuppressWarnings(\"serial\")\n     public class JmsSpout extends BaseRichSpout implements MessageListener {\n    +\n    +    /** The logger object instance for this class. */\n         private static final Logger LOG = LoggerFactory.getLogger(JmsSpout.class);\n     \n    -    // JMS options\n    +    /** The logger of the recovery task. */\n    +    private static final Logger RECOVERY_TASK_LOG =\n    +            LoggerFactory.getLogger(RecoveryTask.class);\n    +\n    +    /** Time to sleep between queue polling attempts. */\n    +    private static final int POLL_INTERVAL = 50;\n    --- End diff --\n    \n    Nit: POLL_INTERVAL_MS. I'm also wondering why this spout is sleeping manually instead of using the built in functionality for this https://github.com/apache/storm/blob/64168037fbf383a350c5be7e220ae137d4317411/conf/defaults.yaml#L247 (you don't need to do anything about this, I'm just asking if we should file an issue for it?). \n","created":"2017-07-21T20:16:37.607+0000","updated":"2017-07-21T20:16:37.607+0000","started":"2017-07-21T20:16:37.607+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48432","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48433","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128850623\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -250,10 +341,17 @@ public void nextTuple() {\n     \n         }\n     \n    -    /*\n    -     * Will only be called if we're transactional or not AUTO_ACKNOWLEDGE\n    +    /**\n    +     * Ack a successfully handled message by the matching {@link JmsMessageID}.\n    +     *\n    +     * <p>Acking means removing the message from the pending messages\n    +     * collections,and if it was the oldest pending message -\n    --- End diff --\n    \n    Nit: Missing space at the comma\n","created":"2017-07-21T20:16:37.616+0000","updated":"2017-07-21T20:16:37.616+0000","started":"2017-07-21T20:16:37.612+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48433","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48434","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128849355\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -205,6 +277,12 @@ public void open(Map<String, Object> conf, TopologyContext context,\n     \n         }\n     \n    +    /**\n    +     * Close the {@link #session} and {@link #connection}.\n    +     *\n    +     * <p>When overridden, should always call {@code super} for handling the\n    --- End diff --\n    \n    Nit: call `{@code super}` to finalize the active connections\n","created":"2017-07-21T20:16:37.895+0000","updated":"2017-07-21T20:16:37.895+0000","started":"2017-07-21T20:16:37.895+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48434","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48435","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128852007\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -352,27 +478,46 @@ private static final String toDeliveryModeString(int deliveryMode) {\n             }\n         }\n     \n    +    /**\n    +     * @return The currently active session.\n    +     */\n         protected Session getSession() {\n             return this.session;\n         }\n     \n    +    /**\n    +     * Check if there is a pending messages state.\n    --- End diff --\n    \n    Nit: Rephrase as Check if the subscription requires messages to be acked. \n","created":"2017-07-21T20:16:37.997+0000","updated":"2017-07-21T20:16:37.997+0000","started":"2017-07-21T20:16:37.997+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48435","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48436","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128847982\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -30,65 +35,110 @@\n     import javax.jms.MessageListener;\n     import javax.jms.Session;\n     \n    -import org.apache.storm.topology.base.BaseRichSpout;\n    -import org.apache.storm.utils.Utils;\n    -import org.slf4j.Logger;\n    -import org.slf4j.LoggerFactory;\n    -\n    +import org.apache.storm.Config;\n     import org.apache.storm.jms.JmsProvider;\n     import org.apache.storm.jms.JmsTupleProducer;\n     import org.apache.storm.spout.SpoutOutputCollector;\n     import org.apache.storm.task.TopologyContext;\n     import org.apache.storm.topology.OutputFieldsDeclarer;\n    +import org.apache.storm.topology.base.BaseRichSpout;\n     import org.apache.storm.tuple.Values;\n    +import org.apache.storm.utils.Utils;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +\n     \n     /**\n    - * A Storm <code>Spout</code> implementation that listens to a JMS topic or queue\n    - * and outputs tuples based on the messages it receives.\n    - * <p>\n    - * <code>JmsSpout</code> instances rely on <code>JmsProducer</code> implementations\n    - * to obtain the JMS <code>ConnectionFactory</code> and <code>Destination</code> objects\n    - * necessary to connect to a JMS topic/queue.\n    - * <p>\n    - * When a <code>JmsSpout</code> receives a JMS message, it delegates to an\n    - * internal <code>JmsTupleProducer</code> instance to create a Storm tuple from the\n    - * incoming message.\n    - * <p>\n    - * Typically, developers will supply a custom <code>JmsTupleProducer</code> implementation\n    - * appropriate for the expected message content.\n    + * A Storm <code>Spout</code> implementation that listens to a JMS topic or\n    + * queue and outputs tuples based on the messages it receives.\n    + *\n    + * <p><code>JmsSpout</code> instances rely on <code>JmsProducer</code>\n    + * implementations to obtain the JMS\n    + * <code>ConnectionFactory</code> and <code>Destination</code> objects necessary\n    + * to connect to a JMS topic/queue.\n    + *\n    + * <p>When a <code>JmsSpout</code> receives a JMS message, it delegates to an\n    + * internal <code>JmsTupleProducer</code> instance to create a Storm tuple from\n    + * the incoming message.\n    + *\n    + * <p>Typically, developers will supply a custom <code>JmsTupleProducer</code>\n    + * implementation appropriate for the expected message content.\n      */\n     @SuppressWarnings(\"serial\")\n     public class JmsSpout extends BaseRichSpout implements MessageListener {\n    +\n    +    /** The logger object instance for this class. */\n         private static final Logger LOG = LoggerFactory.getLogger(JmsSpout.class);\n     \n    -    // JMS options\n    +    /** The logger of the recovery task. */\n    +    private static final Logger RECOVERY_TASK_LOG =\n    +            LoggerFactory.getLogger(RecoveryTask.class);\n    +\n    +    /** Time to sleep between queue polling attempts. */\n    +    private static final int POLL_INTERVAL = 50;\n    +\n    +    /**\n    +     * The default value the {@link Config#TOPOLOGY_MESSAGE_TIMEOUT_SECS}.\n    +     */\n    +    private static final int DEFAULT_MESSAGE_TIMEOUT = 30;\n    +\n    +    /** Time to wait before queuing the first recovery task (in seconds). */\n    +    private static final int RECOVERY_DELAY = 10;\n    +\n    +    /**\n    +     * The acknowledgment mode used for this instance.\n    +     *\n    +     * @see Session\n    +     */\n         private int jmsAcknowledgeMode = Session.AUTO_ACKNOWLEDGE;\n     \n    +    /** Indicates whether or not this spout should run as a singleton. */\n         private boolean distributed = true;\n     \n    +    /** Used to generate tuples from incoming messages. */\n         private JmsTupleProducer tupleProducer;\n     \n    +    /** Encapsulates jms related classes needed to communicate with the mq. */\n         private JmsProvider jmsProvider;\n     \n    +    /** Stores incoming messages for later sending. */\n         private LinkedBlockingQueue<Message> queue;\n    +\n    +    /** Contains all message ids of messages that were not yet acked. */\n         private TreeSet<JmsMessageID> toCommit;\n    +\n    +    /** Maps between message ids of not-yet acked messages, and the messages. */\n         private HashMap<JmsMessageID, Message> pendingMessages;\n    +\n    +    /** Counter of handled messages. */\n         private long messageSequence = 0;\n     \n    +    /** The collector used to emit tuples. */\n         private SpoutOutputCollector collector;\n     \n    +    /** Connection to the jms queue. */\n         private transient Connection connection;\n    +\n    +    /** The active jms session. */\n         private transient Session session;\n     \n    +    /** Indicates whether or not a message failed to be processed. */\n         private boolean hasFailures = false;\n    -    public final Serializable recoveryMutex = \"RECOVERY_MUTEX\";\n    +\n    +    /** Used to safely recover failed JMS sessions across instances. */\n    +    private final Serializable recoveryMutex = \"RECOVERY_MUTEX\";\n    +\n    +    /** Schedules recovery tasks periodically. */\n         private Timer recoveryTimer = null;\n    +\n    +    /** To to wait between recovery attempts. */\n    --- End diff --\n    \n    Nit: Time to wait. Also could you rename recoveryPeriod to recoveryPeriodMs?\n","created":"2017-07-21T20:16:38.405+0000","updated":"2017-07-21T20:16:38.405+0000","started":"2017-07-21T20:16:38.404+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48436","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48437","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user omerhadari commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128853255\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -30,65 +35,110 @@\n     import javax.jms.MessageListener;\n     import javax.jms.Session;\n     \n    -import org.apache.storm.topology.base.BaseRichSpout;\n    -import org.apache.storm.utils.Utils;\n    -import org.slf4j.Logger;\n    -import org.slf4j.LoggerFactory;\n    -\n    +import org.apache.storm.Config;\n     import org.apache.storm.jms.JmsProvider;\n     import org.apache.storm.jms.JmsTupleProducer;\n     import org.apache.storm.spout.SpoutOutputCollector;\n     import org.apache.storm.task.TopologyContext;\n     import org.apache.storm.topology.OutputFieldsDeclarer;\n    +import org.apache.storm.topology.base.BaseRichSpout;\n     import org.apache.storm.tuple.Values;\n    +import org.apache.storm.utils.Utils;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +\n     \n     /**\n    - * A Storm <code>Spout</code> implementation that listens to a JMS topic or queue\n    - * and outputs tuples based on the messages it receives.\n    - * <p>\n    - * <code>JmsSpout</code> instances rely on <code>JmsProducer</code> implementations\n    - * to obtain the JMS <code>ConnectionFactory</code> and <code>Destination</code> objects\n    - * necessary to connect to a JMS topic/queue.\n    - * <p>\n    - * When a <code>JmsSpout</code> receives a JMS message, it delegates to an\n    - * internal <code>JmsTupleProducer</code> instance to create a Storm tuple from the\n    - * incoming message.\n    - * <p>\n    - * Typically, developers will supply a custom <code>JmsTupleProducer</code> implementation\n    - * appropriate for the expected message content.\n    + * A Storm <code>Spout</code> implementation that listens to a JMS topic or\n    + * queue and outputs tuples based on the messages it receives.\n    + *\n    + * <p><code>JmsSpout</code> instances rely on <code>JmsProducer</code>\n    + * implementations to obtain the JMS\n    + * <code>ConnectionFactory</code> and <code>Destination</code> objects necessary\n    + * to connect to a JMS topic/queue.\n    + *\n    + * <p>When a <code>JmsSpout</code> receives a JMS message, it delegates to an\n    + * internal <code>JmsTupleProducer</code> instance to create a Storm tuple from\n    + * the incoming message.\n    + *\n    + * <p>Typically, developers will supply a custom <code>JmsTupleProducer</code>\n    + * implementation appropriate for the expected message content.\n      */\n     @SuppressWarnings(\"serial\")\n     public class JmsSpout extends BaseRichSpout implements MessageListener {\n    +\n    +    /** The logger object instance for this class. */\n         private static final Logger LOG = LoggerFactory.getLogger(JmsSpout.class);\n     \n    -    // JMS options\n    +    /** The logger of the recovery task. */\n    +    private static final Logger RECOVERY_TASK_LOG =\n    +            LoggerFactory.getLogger(RecoveryTask.class);\n    +\n    +    /** Time to sleep between queue polling attempts. */\n    +    private static final int POLL_INTERVAL = 50;\n    --- End diff --\n    \n    It probably should use this. There is generally a lot to do in this package, regarding this and also the handling of acked and failed messages in a better way. I intend to go over it and open issues when I get to it (if that's ok?)\n","created":"2017-07-21T20:27:00.975+0000","updated":"2017-07-21T20:27:00.975+0000","started":"2017-07-21T20:27:00.974+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48437","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48438","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128854811\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -30,65 +35,110 @@\n     import javax.jms.MessageListener;\n     import javax.jms.Session;\n     \n    -import org.apache.storm.topology.base.BaseRichSpout;\n    -import org.apache.storm.utils.Utils;\n    -import org.slf4j.Logger;\n    -import org.slf4j.LoggerFactory;\n    -\n    +import org.apache.storm.Config;\n     import org.apache.storm.jms.JmsProvider;\n     import org.apache.storm.jms.JmsTupleProducer;\n     import org.apache.storm.spout.SpoutOutputCollector;\n     import org.apache.storm.task.TopologyContext;\n     import org.apache.storm.topology.OutputFieldsDeclarer;\n    +import org.apache.storm.topology.base.BaseRichSpout;\n     import org.apache.storm.tuple.Values;\n    +import org.apache.storm.utils.Utils;\n    +import org.slf4j.Logger;\n    +import org.slf4j.LoggerFactory;\n    +\n    +\n     \n     /**\n    - * A Storm <code>Spout</code> implementation that listens to a JMS topic or queue\n    - * and outputs tuples based on the messages it receives.\n    - * <p>\n    - * <code>JmsSpout</code> instances rely on <code>JmsProducer</code> implementations\n    - * to obtain the JMS <code>ConnectionFactory</code> and <code>Destination</code> objects\n    - * necessary to connect to a JMS topic/queue.\n    - * <p>\n    - * When a <code>JmsSpout</code> receives a JMS message, it delegates to an\n    - * internal <code>JmsTupleProducer</code> instance to create a Storm tuple from the\n    - * incoming message.\n    - * <p>\n    - * Typically, developers will supply a custom <code>JmsTupleProducer</code> implementation\n    - * appropriate for the expected message content.\n    + * A Storm <code>Spout</code> implementation that listens to a JMS topic or\n    + * queue and outputs tuples based on the messages it receives.\n    + *\n    + * <p><code>JmsSpout</code> instances rely on <code>JmsProducer</code>\n    + * implementations to obtain the JMS\n    + * <code>ConnectionFactory</code> and <code>Destination</code> objects necessary\n    + * to connect to a JMS topic/queue.\n    + *\n    + * <p>When a <code>JmsSpout</code> receives a JMS message, it delegates to an\n    + * internal <code>JmsTupleProducer</code> instance to create a Storm tuple from\n    + * the incoming message.\n    + *\n    + * <p>Typically, developers will supply a custom <code>JmsTupleProducer</code>\n    + * implementation appropriate for the expected message content.\n      */\n     @SuppressWarnings(\"serial\")\n     public class JmsSpout extends BaseRichSpout implements MessageListener {\n    +\n    +    /** The logger object instance for this class. */\n         private static final Logger LOG = LoggerFactory.getLogger(JmsSpout.class);\n     \n    -    // JMS options\n    +    /** The logger of the recovery task. */\n    +    private static final Logger RECOVERY_TASK_LOG =\n    +            LoggerFactory.getLogger(RecoveryTask.class);\n    +\n    +    /** Time to sleep between queue polling attempts. */\n    +    private static final int POLL_INTERVAL = 50;\n    --- End diff --\n    \n    Yes, that sounds good. I just wanted to remark on it.\n","created":"2017-07-21T20:30:07.872+0000","updated":"2017-07-21T20:30:07.872+0000","started":"2017-07-21T20:30:07.871+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48438","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48439","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user srdo commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128855363\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -72,19 +72,18 @@\n         private static final Logger LOG = LoggerFactory.getLogger(JmsSpout.class);\n     \n         /** The logger of the recovery task. */\n    -    private static final Logger RECOVERY_TASK_LOG =\n    -            LoggerFactory.getLogger(RecoveryTask.class);\n    +    private static final Logger RECOVERY_TASK_LOG = LoggerFactory.getLogger(RecoveryTask.class);\n     \n         /** Time to sleep between queue polling attempts. */\n    -    private static final int POLL_INTERVAL = 50;\n    +    private static final int POLL_INTERVAL_MS = 50;\n     \n         /**\n    -     * The default value the {@link Config#TOPOLOGY_MESSAGE_TIMEOUT_SECS}.\n    +     * The default value for {@link Config#TOPOLOGY_MESSAGE_TIMEOUT_SECS}.\n          */\n    -    private static final int DEFAULT_MESSAGE_TIMEOUT = 30;\n    +    private static final int DEFAULT_MESSAGE_TIMEOUT_SECS = 30;\n     \n    -    /** Time to wait before queuing the first recovery task (in seconds). */\n    -    private static final int RECOVERY_DELAY = 10;\n    +    /** Time to wait before queuing the first recovery task. */\n    +    private static final int RECOVERY_DELAY_SECS = 10;\n    --- End diff --\n    \n    Sorry, I think this is actually milliseconds going by the usage in L262\n","created":"2017-07-21T20:32:48.538+0000","updated":"2017-07-21T20:32:48.538+0000","started":"2017-07-21T20:32:48.538+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48439","issueId":"13089108"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13089108/worklog/48440","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"comment":"Github user omerhadari commented on a diff in the pull request:\n\n    https://github.com/apache/storm/pull/2234#discussion_r128855869\n  \n    --- Diff: external/storm-jms/src/main/java/org/apache/storm/jms/spout/JmsSpout.java ---\n    @@ -72,19 +72,18 @@\n         private static final Logger LOG = LoggerFactory.getLogger(JmsSpout.class);\n     \n         /** The logger of the recovery task. */\n    -    private static final Logger RECOVERY_TASK_LOG =\n    -            LoggerFactory.getLogger(RecoveryTask.class);\n    +    private static final Logger RECOVERY_TASK_LOG = LoggerFactory.getLogger(RecoveryTask.class);\n     \n         /** Time to sleep between queue polling attempts. */\n    -    private static final int POLL_INTERVAL = 50;\n    +    private static final int POLL_INTERVAL_MS = 50;\n     \n         /**\n    -     * The default value the {@link Config#TOPOLOGY_MESSAGE_TIMEOUT_SECS}.\n    +     * The default value for {@link Config#TOPOLOGY_MESSAGE_TIMEOUT_SECS}.\n          */\n    -    private static final int DEFAULT_MESSAGE_TIMEOUT = 30;\n    +    private static final int DEFAULT_MESSAGE_TIMEOUT_SECS = 30;\n     \n    -    /** Time to wait before queuing the first recovery task (in seconds). */\n    -    private static final int RECOVERY_DELAY = 10;\n    +    /** Time to wait before queuing the first recovery task. */\n    +    private static final int RECOVERY_DELAY_SECS = 10;\n    --- End diff --\n    \n    Right, nice catch\n","created":"2017-07-21T20:35:17.929+0000","updated":"2017-07-21T20:35:17.929+0000","started":"2017-07-21T20:35:17.928+0000","timeSpent":"10m","timeSpentSeconds":600,"id":"48440","issueId":"13089108"}]},"customfield_12311820":"0|i3huy7:"}}