{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "description": "Core storm daemons and APIs including trident",
            "id": "12327950",
            "name": "storm-core",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12327950"
        }],
        "created": "2015-02-18T16:24:18.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=miguno&avatarId=26959",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=miguno&avatarId=26959",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=miguno&avatarId=26959",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=miguno&avatarId=26959"
            },
            "displayName": "Michael Noll",
            "key": "miguno",
            "name": "miguno",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=miguno",
            "timeZone": "Europe/Amsterdam"
        },
        "customfield_10010": null,
        "customfield_12310220": "2015-02-18T18:52:35.874+0000",
        "customfield_12310222": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i25rpj:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Feb 20 15:14:52 UTC 2015",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "h3. Background\n\nStorm currently supports the configuration setting storm.messaging.netty.max_retries.  This setting is supposed to limit the number of reconnection attempts a Netty client will perform in case of a connection loss.\n\nUnfortunately users have run into situations where this behavior will result in data loss:\n\n{quote}\nhttps://github.com/apache/storm/pull/429/files#r24681006\n\nThis could be a separate JIRA, but we ran into a situation where we hit the maximum number of reconnection attempts, and the exception was eaten because it was thrown from a background thread and it just killed the background thread. This code appears to do the same thing.\n{quote}\n\nThe problem can be summarized by the following example:  Once a Netty client hits the maximum number of connection retries, it will stop trying to reconnect (as intended) but will also continue to run forever without being able to send any messages to its designated remote targets.  At this point data will be lost because any messages that the Netty client is supposed to send will be dropped (by design).  And since the Netty client is still alive and thus considered \"functional\", Storm is not able to do something about this data loss situation.\n\nFor a more detailed description please take a look at the discussion in https://github.com/apache/storm/pull/429/files#r24742354.\n\nh3. Possible solutions\n\n(Most of this section is copy-pasted from an [earlier discussion on this problem|https://github.com/apache/storm/pull/429/files#r24742354].)\n\nThere are at least three approaches we may consider:\n\n# Let the Netty client die if max retries is reached, so that the Storm task has the chance to re-create a client and thus break out of the client's discard-messages-forever state.\n# Let the \"parent\" Storm task die if (one of its possibly many) Netty clients dies, so that by restarting the task we'll also get a new Netty client.\n# Remove the max retries semantics as well as the corresponding setting from Storm's configuration. Here, a Netty client will continue to reconnect to a remote destination forever. The possible negative impact of these reconnects (e.g. number of TCP connection attempts in a cluster) are kept in check by our exponential backoff policy for such connection retries.\n\nMy personal opinion on these three approaches:\n\n- I do not like (1) because I feel it introduces potentially confusing semantics: We keep having a max retries setting, but it is not really a hard limit anymore. It rather becomes a \"max retries until we recreate a Netty client\", and would also reset any exponential backoff strategy of the \"previous\" Netty client instance (cf. StormBoundedExponentialBackoffRetry). If we do want such resets (but I don't think we do at this point), then a cleaner approach would be to implement such resetting inside the retry policy (again, cf. StormBoundedExponentialBackoffRetry).\n- I do not like (2) because a single \"bad\" Netty client would be able to take down a Storm task, which among other things would also impact any other, working Netty clients of the Storm task.\n- Option (3) seems a reasonable approach, although it breaks backwards compatibility with regard to Storm's configuration (because we'd now ignore storm.messaging.netty.max_retries).\n\n\nHere's initial feedback from other developers:\n\n{quote}\nhttps://github.com/apache/storm/pull/429/files#r24824540\n\nrevans2: I personally prefer option 3, no maximum number of reconnection attempts. Having the client decide that it is done, before nimbus does feels like it is asking for trouble.\n{quote}\n\n{quote}\nhttps://github.com/ptgoetz\n\nptgoetz: I'm in favor of option 3 as well. I'm not that concerned about storm.messaging.netty.max_retries being ignored. We could probably just log a warning that that configuration option is deprecated and will be ignored if the value is set.\n{quote}\n\n{quote}\nhttps://github.com/apache/storm/pull/429#issuecomment-74914806\n\nnathanmarz: Nimbus only knows a worker is having trouble when it stops sending heartbeats. If a worker gets into a bad state, the worst thing to do is have it continue trying to limp along in that bad state. It should instead suicide as quickly as possible. It seems counterintuitive, but this aggressive suiciding behavior actually makes things more robust as it prevents processes from getting into weird, potentially undefined states. This has been a crucial design principle in Storm from the beginning. One consequence of it is that any crucial system thread that receives an unrecoverable exception must suicide the process rather than die quietly.\n\nFor the connection retry problem, it's a tricky situation since it may not be able to connect because the other worker is still getting set up. So the retry policy should be somehow related to the launch timeouts for worker processes specified in the configuration. Not being able to connect after the launch timeout + a certain number of attempts + a buffer period would certainly qualify as a weird state, so the process should suicide in that case. Suiciding and restarting gets the worker back to a known state.\n\nSo in this case, I am heavily in favor of Option 2. I don't care about killing the other tasks in the worker because this is a rare situation. It is infinitely more important to get the worker back to a known, robust state than risk leaving it in a weird state permanently.\n{quote}\n\nIf we decide to go with option 3, then the essence of the fix is the following modification of Client.java:\n\n{code}\n    private boolean reconnectingAllowed() {\n        // BEFORE:\n        // return !closing && connectionAttempts.get() <= (maxReconnectionAttempts + 1);\n        return !closing;\n    }\n{code}",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [{
            "id": "12408420",
            "inwardIssue": {
                "fields": {
                    "issuetype": {
                        "avatarId": 21140,
                        "description": "An improvement or enhancement to an existing feature or task.",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                        "id": "4",
                        "name": "Improvement",
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                        "subtask": false
                    },
                    "priority": {
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "id": "3",
                        "name": "Major",
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                    },
                    "status": {
                        "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                        "id": "5",
                        "name": "Resolved",
                        "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                        "statusCategory": {
                            "colorName": "green",
                            "id": 3,
                            "key": "done",
                            "name": "Done",
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                        }
                    },
                    "summary": "Fix cascading Storm failure by improving reconnection strategy and buffering messages"
                },
                "id": "12715654",
                "key": "STORM-329",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/12715654"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12408420",
            "type": {
                "id": "10030",
                "inward": "is related to",
                "name": "Reference",
                "outward": "relates to",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
            }
        }],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": ["Netty"],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "id": "4",
            "name": "Minor",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12314820&avatarId=21667",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12314820&avatarId=21667",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12314820&avatarId=21667",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12314820&avatarId=21667"
            },
            "id": "12314820",
            "key": "STORM",
            "name": "Apache Storm",
            "projectCategory": {
                "description": "Apache Storm Related",
                "id": "13260",
                "name": "Storm",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13260"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12314820"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=miguno&avatarId=26959",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=miguno&avatarId=26959",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=miguno&avatarId=26959",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=miguno&avatarId=26959"
            },
            "displayName": "Michael Noll",
            "key": "miguno",
            "name": "miguno",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=miguno",
            "timeZone": "Europe/Amsterdam"
        },
        "resolution": null,
        "resolutiondate": null,
        "status": {
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "id": "1",
            "name": "Open",
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "statusCategory": {
                "colorName": "blue-gray",
                "id": 2,
                "key": "new",
                "name": "To Do",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
            }
        },
        "subtasks": [],
        "summary": "Maximum retries strategy may cause data loss",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2015-12-08T16:53:41.000+0000",
        "versions": [
            {
                "archived": false,
                "id": "12327112",
                "name": "0.9.3",
                "releaseDate": "2014-11-25",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12327112"
            },
            {
                "archived": false,
                "description": "security feature branch",
                "id": "12327123",
                "name": "0.10.0",
                "releaseDate": "2015-11-05",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12327123"
            },
            {
                "archived": false,
                "id": "12333021",
                "name": "0.9.6",
                "releaseDate": "2015-11-05",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12333021"
            }
        ],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/STORM-677/votes",
            "votes": 2
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/STORM-677/watchers",
            "watchCount": 8
        },
        "workratio": -1
    },
    "id": "12775904",
    "key": "STORM-677",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12775904"
}