{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "percent": 0,
            "progress": 0,
            "total": 1814400
        },
        "aggregatetimeestimate": 1814400,
        "aggregatetimeoriginalestimate": 1814400,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [],
        "created": "2011-06-21T04:04:17.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Alberto Andreotti",
            "key": "albertoandreotti@gmail.com",
            "name": "albertoandreotti@gmail.com",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=albertoandreotti%40gmail.com",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2011-06-21T04:23:10.703+0000",
        "customfield_12310222": "1_*:*_1_*:*_1133030_*|*_5_*:*_1_*:*_0",
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310320": null,
        "customfield_12310420": "15166",
        "customfield_12310920": "113770",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0jtvj:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jun 21 14:37:35 UTC 2011",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "The more nodes I add to this application, the slower it goes. This is the app's map,\n\n public void map(IntWritable linearPos, FloatWritable heat, Context context\n                            ) throws IOException, InterruptedException {\n\n       int myLinearPos = linearPos.get();\n       //Distribute my value to the previous and the next\n       linearPos.set(myLinearPos - 1);\n       context.write(linearPos, heat);\n       linearPos.set(myLinearPos + 1);\n       context.write(linearPos, heat);\n       //Distribute my value to the cells above and below\n       linearPos.set(myLinearPos - MatrixData.Length());\n       context.write(linearPos, heat);\n       linearPos.set(myLinearPos + MatrixData.Length());\n       context.write(linearPos, heat);\n    }//end map\n\nand this is the reduce,\n\npublic void reduce(IntWritable linearPos, Iterable<FloatWritable> fwValues,\n                     Context context) throws IOException, InterruptedException {\n\n       //Handle first and last \"cold\" boundaries\n       if(linearPos.get()<0 || linearPos.get()>MatrixData.LinearSize()){\n          return;\n       }\n\n       if(linearPos.get()==MatrixData.HeatSourceLinearPos()){\n          context.write(linearPos, new FloatWritable(MatrixData.HeatSourceTemperature()));\n          return;\n       }\n\n       float result = 0.0f;\n       //Add all the values\n       for(FloatWritable heat : fwValues) {\n          result += heat.get();\n       }\n\n      context.write(linearPos, new FloatWritable(result/4) );\n}\n\nFor example, with 6 nodes I get a running time of 15minutes, and with 4 nodes I get a running time of 8minutes!.\nThis is how I generated the input,\n\n public static void main(String[] args) throws IOException {\n     //Write file in the local dir\n     String uri = \"/home/beto/mySeq\";\n\n     Configuration conf = new Configuration();\n     FileSystem fs = FileSystem.get(URI.create(uri), conf);\n     Path path = new Path(uri);\n\n     IntWritable key = new IntWritable();\n     FloatWritable value = new FloatWritable(0.0f);\n\n     SequenceFile.Writer writer = null;\n     try {\n       writer = SequenceFile.createWriter(fs, conf, path, key.getClass(), value.getClass());\n\n     int step = MatrixData.LinearSize()/10;\n     int limit = step;\n     for (int i = 0; i <= MatrixData.LinearSize(); i++) {\n        key.set(i);\n        if(i>limit){\n             System.out.println(\"*\");\n             limit +=step;\n        }\n          if(i==MatrixData.HeatSourceLinearPos()) {\n            writer.append(key, new FloatWritable(MatrixData.HeatSourceTemperature()));\n            continue;\n          }\n\n        writer.append(key, value);\n\n      }\n    } finally {\n      IOUtils.closeStream(writer);\n    }\n  }\n\n\nI'm basically solving a heat transfer problem in a squared section. Pretty simple. The input data is being stored as a (key, value) pairs, read in this way, processed, and written again in the same format.\nAny thoughts?\n\nAlberto.\n",
        "duedate": null,
        "environment": "Linux, 8 nodes.",
        "fixVersions": [],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "percent": 0,
            "progress": 0,
            "total": 1814400
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310942&avatarId=10094",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310942&avatarId=10094",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310942&avatarId=10094",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310942&avatarId=10094"
            },
            "id": "12310942",
            "key": "HDFS",
            "name": "Hadoop HDFS",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310942"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Alberto Andreotti",
            "key": "albertoandreotti@gmail.com",
            "name": "albertoandreotti@gmail.com",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=albertoandreotti%40gmail.com",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "The problem isn't valid and it can't be fixed.",
            "id": "6",
            "name": "Invalid",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/6"
        },
        "resolutiondate": "2011-06-21T04:23:10.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Hadoop does not scale as expected",
        "timeestimate": 1814400,
        "timeoriginalestimate": 1814400,
        "timespent": null,
        "updated": "2011-06-21T14:37:35.000+0000",
        "versions": [],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HDFS-2091/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HDFS-2091/watchers",
            "watchCount": 0
        },
        "workratio": 0
    },
    "id": "12511042",
    "key": "HDFS-2091",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12511042"
}