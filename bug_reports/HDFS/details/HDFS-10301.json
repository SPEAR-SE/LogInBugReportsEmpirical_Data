{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12959486","self":"https://issues.apache.org/jira/rest/api/2/issue/12959486","key":"HDFS-10301","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310942","id":"12310942","key":"HDFS","name":"Hadoop HDFS","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310942&avatarId=10094","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310942&avatarId=10094","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310942&avatarId=10094","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310942&avatarId=10094"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329057","id":"12329057","description":"2.8.0 release","name":"2.8.0","archived":false,"released":true,"releaseDate":"2017-03-22"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12334863","id":"12334863","description":"2.7.4 release","name":"2.7.4","archived":false,"released":true,"releaseDate":"2017-08-04"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12337976","id":"12337976","name":"3.0.0-alpha2","archived":false,"released":true,"releaseDate":"2017-01-25"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2016-04-18T15:40:31.431+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue Oct 18 02:09:57 UTC 2016","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_2_*:*_555489174_*|*_4_*:*_1_*:*_598008238_*|*_5_*:*_2_*:*_157240549_*|*_10002_*:*_3_*:*_14521572132","customfield_12312321":null,"resolutiondate":"2016-10-18T01:42:34.255+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HDFS-10301/watchers","watchCount":32,"isWatching":false},"created":"2016-04-17T19:50:44.843+0000","customfield_12310192":null,"customfield_12310191":[{"self":"https://issues.apache.org/jira/rest/api/2/customFieldOption/10343","value":"Reviewed","id":"10343"}],"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"21.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329018","id":"12329018","description":"2.6.1 release","name":"2.6.1","archived":false,"released":true,"releaseDate":"2015-09-23"}],"issuelinks":[{"id":"12483164","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12483164","type":{"id":"10032","name":"Blocker","inward":"is blocked by","outward":"blocks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"},"outwardIssue":{"id":"13009377","key":"HDFS-10953","self":"https://issues.apache.org/jira/rest/api/2/issue/13009377","fields":{"summary":"Remove single-rpc block reports.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12463865","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12463865","type":{"id":"12310050","name":"Regression","inward":"is broken by","outward":"breaks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310050"},"inwardIssue":{"id":"12783422","key":"HDFS-7960","self":"https://issues.apache.org/jira/rest/api/2/issue/12783422","fields":{"summary":"The full block report should prune zombie storages even if they're not empty","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-10-18T02:09:57.770+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312926","id":"12312926","name":"namenode"}],"timeoriginalestimate":null,"description":"When NameNode is busy a DataNode can timeout sending a block report. Then it sends the block report again. Then NameNode while process these two reports at the same time can interleave processing storages from different reports. This screws up the blockReportId field, which makes NameNode think that some storages are zombie. Replicas from zombie storages are immediately removed, causing missing blocks.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12329057","id":"12329057","description":"2.8.0 release","name":"2.8.0","archived":false,"released":true,"releaseDate":"2017-03-22"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12334863","id":"12334863","description":"2.7.4 release","name":"2.7.4","archived":false,"released":true,"releaseDate":"2017-08-04"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12337976","id":"12337976","name":"3.0.0-alpha2","archived":false,"released":true,"releaseDate":"2017-01-25"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12338280","id":"12338280","description":"2.6.6 release","name":"2.6.6","archived":false,"released":false}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12800061","id":"12800061","filename":"HDFS-10301.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-21T20:17:55.605+0000","size":11718,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12800061/HDFS-10301.002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12800128","id":"12800128","filename":"HDFS-10301.003.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-21T23:45:59.297+0000","size":16056,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12800128/HDFS-10301.003.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12805798","id":"12805798","filename":"HDFS-10301.004.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-24T02:06:48.163+0000","size":29972,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12805798/HDFS-10301.004.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12805931","id":"12805931","filename":"HDFS-10301.005.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-24T17:31:24.941+0000","size":16056,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12805931/HDFS-10301.005.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12810994","id":"12810994","filename":"HDFS-10301.006.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-06-16T05:39:41.278+0000","size":31577,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12810994/HDFS-10301.006.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12812962","id":"12812962","filename":"HDFS-10301.007.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-06-23T23:38:46.874+0000","size":32880,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12812962/HDFS-10301.007.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12817774","id":"12817774","filename":"HDFS-10301.008.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-13T18:17:03.784+0000","size":32798,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12817774/HDFS-10301.008.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12818632","id":"12818632","filename":"HDFS-10301.009.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-18T20:00:03.821+0000","size":32957,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12818632/HDFS-10301.009.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12799446","id":"12799446","filename":"HDFS-10301.01.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-04-19T06:33:08.796+0000","size":16362,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12799446/HDFS-10301.01.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12818684","id":"12818684","filename":"HDFS-10301.010.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-18T22:48:00.761+0000","size":32962,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12818684/HDFS-10301.010.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12818943","id":"12818943","filename":"HDFS-10301.011.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-19T22:02:00.602+0000","size":32878,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12818943/HDFS-10301.011.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12819238","id":"12819238","filename":"HDFS-10301.012.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-21T00:54:33.368+0000","size":32859,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12819238/HDFS-10301.012.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12822408","id":"12822408","filename":"HDFS-10301.013.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-06T01:21:49.878+0000","size":38937,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12822408/HDFS-10301.013.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12828153","id":"12828153","filename":"HDFS-10301.014.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-13T01:21:48.845+0000","size":25650,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12828153/HDFS-10301.014.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12833187","id":"12833187","filename":"HDFS-10301.015.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-13T19:36:38.360+0000","size":26606,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12833187/HDFS-10301.015.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12833481","id":"12833481","filename":"HDFS-10301.branch-2.015.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-15T01:35:38.352+0000","size":24652,"mimeType":"application/force-download","content":"https://issues.apache.org/jira/secure/attachment/12833481/HDFS-10301.branch-2.015.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12833810","id":"12833810","filename":"HDFS-10301.branch-2.7.015.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-17T21:27:15.953+0000","size":20668,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12833810/HDFS-10301.branch-2.7.015.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12821107","id":"12821107","filename":"HDFS-10301.branch-2.7.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-29T22:57:47.944+0000","size":28742,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12821107/HDFS-10301.branch-2.7.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12820078","id":"12820078","filename":"HDFS-10301.branch-2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-26T02:07:26.000+0000","size":31108,"mimeType":"application/force-download","content":"https://issues.apache.org/jira/secure/attachment/12820078/HDFS-10301.branch-2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12802218","id":"12802218","filename":"HDFS-10301.sample.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-05-04T16:13:59.222+0000","size":4165,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12802218/HDFS-10301.sample.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12799158","id":"12799158","filename":"zombieStorageLogs.rtf","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-17T20:35:54.280+0000","size":33057,"mimeType":"text/rtf","content":"https://issues.apache.org/jira/secure/attachment/12799158/zombieStorageLogs.rtf"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"BlockReport retransmissions may lead to storages falsely being declared zombie if storage report processing happens out of order","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15244876","id":"15244876","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"More details.\n# My DataNode has 6 storages. It sends a block report and times out, then it sends the same block report five more times with different blockReportIds.\n# The NameNode starts executing all six reports around the same time, and interleaves them, that is it processes the first storage of BR2 before it process the last storage of BR1. (Color coded logs are coming)\n# While processing storages from BR2 NameNode changes the lastBlockReportId field to the id of BR2. This messes with processing storages from BR1, which have not been processed yet. Namely these storages are considered zombie, and all replicas are removed from those storages along with the storage itself.\n# The storage is then reconstructed by the NameNode when it receives a heartbeat from the DataNode, but this storage is marked as \"stale\", but the replicas will not be reconstructed until the next block report, which in my case is a few hours later.\n# I noticed missing blocks because several DataNodes exhibited the same behavior and all replicas of the same block were lost.\n# The replicas eventually reappeared (several hours later), because DataNodes do not physically remove the replicas and report them in the next block report.\n\nThe behavior was introduced by HDFS-7960 as a part of hot-swap feature. I did not do hot-swap, and did not failover the NameNode.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-17T20:09:57.095+0000","updated":"2016-04-17T20:09:57.095+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15244890","id":"15244890","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"My DN has the following six storages:\n{code}\nDS-019298c0-aab9-45b4-8b62-95d6809380ff:NORMAL:kkk.sss.22.105\nDS-0ea95238-d9ba-4f62-ae18-fdb9333465ce:NORMAL:kkk.sss.22.105\nDS-191fc04b-90be-42c9-b6fb-fdd1517bf4c7:NORMAL:kkk.sss.22.105\nDS-4a2e91c7-cdf0-408b-83a6-286c3534d673:NORMAL:kkk.sss.22.105\nDS-5b2941f7-2b52-45a8-b135-dcbe488cc65b:NORMAL:kkk.sss.22.105\nDS-6849f605-fd83-462d-97c3-cb6949383f7e:NORMAL:kkk.sss.22.105\n{code}\nHere are the logs for its block reports. All throw the same exception, but I pasted it only once.\n{code}\n2016-04-12 22:31:58,931 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Unsuccessfully sent block report 0x283d25423fb64d,  containing 6 storage report(s), of which we sent 0. The reports had 81565 total blocks and used 0 RPC(s). This took 19 msec to generate and 60078 msecs for RPC and NN processing. Got back no commands.\n2016-04-12 22:31:58,931 WARN org.apache.hadoop.hdfs.server.datanode.DataNode: IOException in offerService\njava.net.SocketTimeoutException: Call From dn-hcl1264.my.cluster.com/kkk.sss.22.105 to namenode-ha1.my.cluster.com:9000 failed on socket timeout exception: java.net.SocketTimeoutException: 60000 millis timeout while waiting for channel to be ready for read. ch : java.nio.channels.SocketChannel[connected local=/kkk.sss.22.105:10101 remote=namenode-ha1.my.cluster.com/10.150.1.56:9000]; For more details see:  http://wiki.apache.org/hadoop/SocketTimeout\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:408)\n        at org.apache.hadoop.net.NetUtils.wrapWithMessage(NetUtils.java:791)\n        at org.apache.hadoop.net.NetUtils.wrapException(NetUtils.java:750)\n        at org.apache.hadoop.ipc.Client.call(Client.java:1473)\n        at org.apache.hadoop.ipc.Client.call(Client.java:1400)\n        at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:232)\n        at com.sun.proxy.$Proxy12.blockReport(Unknown Source)\n        at org.apache.hadoop.hdfs.protocolPB.DatanodeProtocolClientSideTranslatorPB.blockReport(DatanodeProtocolClientSideTranslatorPB.java:178)\n        at org.apache.hadoop.hdfs.server.datanode.BPServiceActor.blockReport(BPServiceActor.java:494)\n        at org.apache.hadoop.hdfs.server.datanode.BPServiceActor.offerService(BPServiceActor.java:732)\n        at org.apache.hadoop.hdfs.server.datanode.BPServiceActor.run(BPServiceActor.java:872)\n        at java.lang.Thread.run(Thread.java:745)\nCaused by: java.net.SocketTimeoutException: 60000 millis timeout while waiting for channel to be ready for read. ch : java.nio.channels.SocketChannel[connected local=/kkk.sss.22.105:10101 remote=namenode-ha1.my.cluster.com/10.150.1.56:9000]\n        at org.apache.hadoop.net.SocketIOWithTimeout.doIO(SocketIOWithTimeout.java:164)\n        at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:161)\n        at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:131)\n        at java.io.FilterInputStream.read(FilterInputStream.java:133)\n        at java.io.FilterInputStream.read(FilterInputStream.java:133)\n        at org.apache.hadoop.ipc.Client$Connection$PingInputStream.read(Client.java:514)\n        at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)\n        at java.io.BufferedInputStream.read(BufferedInputStream.java:265)\n        at java.io.DataInputStream.readInt(DataInputStream.java:387)\n        at org.apache.hadoop.ipc.Client$Connection.receiveRpcResponse(Client.java:1072)\n        at org.apache.hadoop.ipc.Client$Connection.run(Client.java:967)\n\n2016-04-12 22:32:59,179 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Unsuccessfully sent block report 0x283d334a100bde,  containing 6 storage report(s), of which we sent 0. The reports had 81565 total blocks and used 0 RPC(s). This took 17 msec to generate and 60066 msecs for RPC and NN processing. Got back no commands.\n2016-04-12 22:33:59,311 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Unsuccessfully sent block report 0x283d414ae386b2,  containing 6 storage report(s), of which we sent 0. The reports had 81565 total blocks and used 0 RPC(s). This took 16 msec to generate and 60055 msecs for RPC and NN processing. Got back no commands.\n2016-04-12 22:34:59,409 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Unsuccessfully sent block report 0x283d4f4a605732,  containing 6 storage report(s), of which we sent 0. The reports had 81565 total blocks and used 0 RPC(s). This took 16 msec to generate and 60032 msecs for RPC and NN processing. Got back no commands.\n2016-04-12 22:35:59,585 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Unsuccessfully sent block report 0x283d5d4ca9bf5c,  containing 6 storage report(s), of which we sent 0. The reports had 81565 total blocks and used 0 RPC(s). This took 15 msec to generate and 60040 msecs for RPC and NN processing. Got back no commands.\n2016-04-12 22:36:47,307 INFO org.apache.hadoop.hdfs.server.datanode.DataNode: Successfully sent block report 0x283d6b4ac1b50a,  containing 6 storage report(s), of which we sent 6. The reports had 81565 total blocks and used 1 RPC(s). This took 17 msec to generate and 47664 msecs for RPC and NN processing. Got back one command: FinalizeCommand/5.\n{code}\n\nI'll attache the logs for processing these six block reports on the NameNode. Each color represents single report. You can see how the colors are interleaving, and zombie storage messages in the middle.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-17T20:29:16.561+0000","updated":"2016-04-17T20:29:16.561+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15245867","id":"15245867","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Enabling HDFS-9198 will fifo process BRs.  It doesn't solve this implementation bug but virtually eliminates it from occurring.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-04-18T15:40:31.431+0000","updated":"2016-04-18T15:40:31.431+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15246571","id":"15246571","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Hey Daryn, not sure how HDFS-9198 eliminates it from occurring. DataNodes are still waiting for NN to process each BR, so they can timeout and send the same block report multiple times. On the NN side, BR ops processing is multi-threaded, so it can still interleave processing storages from different reports. Could you please clarify, what am I missing?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-18T21:22:06.423+0000","updated":"2016-04-18T21:22:06.423+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15246996","id":"15246996","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"body":"1. IPC reader is single-thread by default. If it's multi-threaded, The order of putting rpc requests into {{callQueue}} is unspecified.\n1. IPC {{callQueue}} is fifo.\n2. IPC Handler is multi-threaded. If 2 handlers are both waiting the fsn lock, the entry order depends on the fairness of the lock.\nbq. When constructed as fair, threads contend for entry using an *approximately* arrival-order policy. When the currently held lock is released either the longest-waiting single writer thread will be assigned the write lock... (quore from https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/locks/ReentrantReadWriteLock.html)\n\nI think if DN can't get acked from NN, it shouldn't assume the arrival/processing order(esp when reestablish a connection). Well, I'm still curious about how the interleave happened. Any thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-04-19T02:16:51.957+0000","updated":"2016-04-19T02:16:51.957+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15247129","id":"15247129","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"body":"Oh, I see. In this case, the reports are not splitted. And because the for-loop is outside the lock, the 2 for-loops interleaved.\n{code}\nfor (int r = 0; r < reports.length; r++) {\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-04-19T03:51:41.023+0000","updated":"2016-04-19T03:51:41.023+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15247255","id":"15247255","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"body":"Upload a patch. Kindly review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-04-19T06:34:52.757+0000","updated":"2016-04-19T06:34:52.757+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15247390","id":"15247390","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 11s {color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 3 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 6m 29s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 38s {color} | {color:green} trunk passed with JDK v1.8.0_77 {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 41s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 23s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 50s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 13s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 51s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 5s {color} | {color:green} trunk passed with JDK v1.8.0_77 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 43s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 46s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 38s {color} | {color:green} the patch passed with JDK v1.8.0_77 {color} |\n| {color:red}-1{color} | {color:red} javac {color} | {color:red} 6m 15s {color} | {color:red} hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_77 with JDK v1.8.0_77 generated 1 new + 32 unchanged - 1 fixed = 33 total (was 33) {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 38s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 39s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |\n| {color:red}-1{color} | {color:red} javac {color} | {color:red} 6m 54s {color} | {color:red} hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95 with JDK v1.7.0_95 generated 1 new + 34 unchanged - 1 fixed = 35 total (was 35) {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 39s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 22s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 49s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 11s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red} 2m 15s {color} | {color:red} hadoop-hdfs-project/hadoop-hdfs generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 4s {color} | {color:green} the patch passed with JDK v1.8.0_77 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 46s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 55m 36s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.8.0_77. {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 52m 52s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.7.0_95. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 21s {color} | {color:green} Patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 133m 26s {color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| FindBugs | module:hadoop-hdfs-project/hadoop-hdfs |\n|  |  Synchronization performed on java.util.concurrent.ArrayBlockingQueue in org.apache.hadoop.hdfs.server.blockmanagement.BlockManager$BlockReportProcessingThread.enqueue(List)  At BlockManager.java:org.apache.hadoop.hdfs.server.blockmanagement.BlockManager$BlockReportProcessingThread.enqueue(List)  At BlockManager.java:[line 4495] |\n| JDK v1.8.0_77 Failed junit tests | hadoop.hdfs.shortcircuit.TestShortCircuitLocalRead |\n|   | hadoop.hdfs.server.namenode.ha.TestRetryCacheWithHA |\n|   | hadoop.hdfs.TestSafeMode |\n|   | hadoop.hdfs.server.namenode.TestNamenodeRetryCache |\n|   | hadoop.hdfs.server.datanode.fsdataset.impl.TestFsDatasetImpl |\n| JDK v1.7.0_95 Failed junit tests | hadoop.hdfs.shortcircuit.TestShortCircuitLocalRead |\n|   | hadoop.hdfs.server.namenode.ha.TestRetryCacheWithHA |\n|   | hadoop.hdfs.server.namenode.TestNamenodeRetryCache |\n|   | hadoop.hdfs.TestHFlush |\n|   | hadoop.hdfs.server.namenode.ha.TestPendingCorruptDnMessages |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:fbe3e86 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12799446/HDFS-10301.01.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 7a855cb48a3c 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / be0bce1 |\n| Default Java | 1.7.0_95 |\n| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_77 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |\n| findbugs | v3.0.0 |\n| javac | hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_77: https://builds.apache.org/job/PreCommit-HDFS-Build/15194/artifact/patchprocess/diff-compile-javac-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_77.txt |\n| javac | hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95: https://builds.apache.org/job/PreCommit-HDFS-Build/15194/artifact/patchprocess/diff-compile-javac-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |\n| findbugs | https://builds.apache.org/job/PreCommit-HDFS-Build/15194/artifact/patchprocess/new-findbugs-hadoop-hdfs-project_hadoop-hdfs.html |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/15194/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_77.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/15194/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |\n| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/15194/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_77.txt https://builds.apache.org/job/PreCommit-HDFS-Build/15194/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |\n| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/15194/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/15194/console |\n| Powered by | Apache Yetus 0.2.0   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-04-19T08:52:27.868+0000","updated":"2016-04-19T08:52:27.868+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15251275","id":"15251275","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for the bug report.  This is a tricky one.\n\nOne small correction-- HDFS-7960 was not introduced as part of DataNode hotswap.  It was originally introduced to solve issues caused by HDFS-7575, although it fixed issues with hotswap as well.\n\nIt seems like we should be able to remove existing DataNode storage report RPCs with the old ID from the queue when we receive one with a new block report ID.  This would also avoid a possible congestion collapse scenario caused by repeated retransmissions after the timeout.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-21T04:58:02.929+0000","updated":"2016-04-21T04:58:27.423+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15252377","id":"15252377","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Hey Walter, your patch looks good by itself, but it does not address the bug in the zombie storage recognition.\nTook me some time to review your patch, would have been easier if you explained your approach.\nSo your patch is reordering block reports for different storages in such a way that storages from the same report are placed as a contiguous segment in the block report queue, so that processing of different BRs is not interleaved. This addresses Daryn's comment rather than solving the reported bug, as BTW Daryn correctly stated.\nIf you want to go forward with reordering of BRs you should probably do it in another issue. I personally am not a supporter because\n# It introduces an unnecessary restriction on the order of execution of block reports, and\n# adds even more complexity to BR processing logic.\n\nI see the main problem here that block reports used to be idempotent per storage, but HDFS-7960 made execution of a subsequent storage dependent on the state produced during execution of the previous ones. I think idempotent is good, and we should keep it. I think we can mitigate the problem by one of the following\n# Changing the criteria of zombie storage recognition. Why should it depend on block report IDs?\n# Eliminating the notion of zombie storage altogether. E.g., NN can DN to run {{DirectoryScanner}} if NN thinks DN's state is outdated.\n# Try to move {{curBlockReportId}} from {{DatanodeDescriptor}} to {{StorageInfo}}, which will eliminate global state between storages.\n\nAlso if we cannot come up with a quick solution, then we should probably roll back HDFS-7960 for now and revisit it later, because this is a critical bug effecting all of our latest releases. And that is a lot of clusters and PBs out there.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-21T18:08:16.915+0000","updated":"2016-04-21T18:08:16.915+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15252475","id":"15252475","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Hmm.  This is a challenging one.  [~walter.k.su], I think I agree that the queue added in HDFS-9198 might be part of the problem here.  In CDH, we haven't yet backported the deferred queuing stuff implemented in HDFS-9198, which might explain why we never saw this.  Since we don't have a queue, and since NN RPCs are almost always handled in the order they arrive, CDH5 doesn't implement \"reordering\" of resent storage reports.\n\nIndependently of this bug, I do think it's concerning that the DN keeps piling on retransmissions of FBRs even before the old ones were processed and acknowledged.  This kind of behavior will obviously lead to congestion collapse if congestion is what caused the original FBRs to be processed but not acknowledged.\n\n{code}\n    void enqueue(List<Runnable> actions) throws InterruptedException {\n      synchronized (queue) {\n        for (Runnable action : actions) {\n          if (!queue.offer(action)) {\n            if (!isAlive() && namesystem.isRunning()) {\n              ExitUtil.terminate(1, getName() + \" is not running\");\n            }\n            long now = Time.monotonicNow();\n            if (now - lastFull > 4000) {\n              lastFull = now;\n              LOG.info(\"Block report queue is full\");\n            }\n            queue.put(action);\n          }\n        }\n      }\n    }\n  }\n{code}\nThis is going to be problematic when contention gets high, because threads will spend a long time waiting to enter the {{synchronized (queue)}} section.  And this will not be logged or reflected back to the admin in any way.  Unfortunately, the operation that you want here, the ability to atomically add a bunch of items to the {{BlockingQueue}}, simply is not provided by {{BlockingQueue}}.  The solution also seems somewhat brittle since reordering could happen because of network issues in a multi-RPC BlockReport.\n\nI'm thinking about this a little more, and it seems like the root of the problem is that in the single-RPC case, we're throwing away the information about how many storages were in the original report.  We need to find a way to include that information in there...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-21T19:02:47.952+0000","updated":"2016-04-21T19:02:47.952+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15252612","id":"15252612","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"I have posted a new patch, which I posted as HDFS-10301.002.patch.  The idea here is that we know the number of storage reports we expect to see in the block report.  We should not be removing any storages as zombies unless we have seen this number of storages and marked these storages with the ID of the latest block report.\n\nI feel that this approach is better than the one used in 001.patch, since it correctly handles the \"interleaved\" case.  It is very difficult to prove that we can never get interleaved storage reports for the DataNode.  This is because of issues like queuing inside the RPCs system, packets getting reordered or delayed by the network, and queuing inside the deferred work mechanism added by HDFS-9198.  So we should handle this case correctly.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-21T20:27:52.351+0000","updated":"2016-04-21T20:27:52.351+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15252937","id":"15252937","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 12s {color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 6m 39s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 43s {color} | {color:green} trunk passed with JDK v1.8.0_77 {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 41s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 23s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 52s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 13s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 55s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 7s {color} | {color:green} trunk passed with JDK v1.8.0_77 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 51s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 45s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 37s {color} | {color:green} the patch passed with JDK v1.8.0_77 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 37s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 38s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 38s {color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 21s {color} | {color:red} hadoop-hdfs-project/hadoop-hdfs: patch generated 3 new + 217 unchanged - 0 fixed = 220 total (was 217) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 48s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 11s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 10s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 4s {color} | {color:green} the patch passed with JDK v1.8.0_77 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 45s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 60m 10s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.8.0_77. {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 59m 18s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.7.0_95. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 23s {color} | {color:green} Patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 144m 44s {color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| JDK v1.8.0_77 Failed junit tests | hadoop.hdfs.server.datanode.TestFsDatasetCache |\n| JDK v1.7.0_95 Failed junit tests | hadoop.hdfs.shortcircuit.TestShortCircuitCache |\n|   | hadoop.hdfs.server.namenode.TestEditLog |\n|   | hadoop.hdfs.server.datanode.TestFsDatasetCache |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:fbe3e86 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12800061/HDFS-10301.002.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 92e06b70f89b 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / a749ba0 |\n| Default Java | 1.7.0_95 |\n| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_77 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/15245/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/15245/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_77.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/15245/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |\n| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/15245/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_77.txt https://builds.apache.org/job/PreCommit-HDFS-Build/15245/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |\n| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/15245/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/15245/console |\n| Powered by | Apache Yetus 0.2.0   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-04-21T22:45:54.129+0000","updated":"2016-04-21T22:45:54.129+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15253014","id":"15253014","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"added a unit test","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-21T23:45:59.307+0000","updated":"2016-04-21T23:45:59.307+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15253181","id":"15253181","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"body":"bq. Enabling HDFS-9198 will fifo process BRs. It doesn't solve this implementation bug but virtually eliminates it from occurring.\nbq. This addresses Daryn's comment rather than solving the reported bug, as BTW Daryn correctly stated.\nthat's incorrect. Please run the test in 001 patch with-and-without the fix, you'll see the difference. It does solve the issue. Because, \n\nThe bug only exists when reports are contained in one rpc. If they are splitted into multiple RPCs, it's not problem, because the {{rpcsSeen}} guard prevent it from happening. So, my approach is to process reports contained in one rpc contiguously, by putting them into the queue atomically.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-04-22T02:07:14.665+0000","updated":"2016-04-22T02:07:14.665+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15253204","id":"15253204","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"body":"The handler threads will wait anyway, either waiting the queue monitor or the fsn writeLock. The queue processingThread will contend for fsn writeLock. In the end, there's no difference.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-04-22T02:23:21.692+0000","updated":"2016-04-22T02:23:21.692+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15253236","id":"15253236","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"body":"I like your idea of counting storages with same reportId, and no purge if there's any interleaving. I guest {{rpcsSeen}} can be removed or replaced by {{storagesSeen}}?\n\nProcessing the retransmissioned reports is kind of wasting resource. I think the best approach is as Colin said, \"to remove existing DataNode storage report RPCs with the old ID from the queue when we receive one with a new block report ID.\" Let's consider it as an optimization in another jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-04-22T02:57:15.317+0000","updated":"2016-04-22T02:57:15.317+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15253309","id":"15253309","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 15s {color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 8m 52s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 9s {color} | {color:green} trunk passed with JDK v1.8.0_77 {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 54s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 25s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 10s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 17s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 22s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 27s {color} | {color:green} trunk passed with JDK v1.8.0_77 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 2m 26s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 1m 1s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 1m 0s {color} | {color:green} the patch passed with JDK v1.8.0_77 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 1m 0s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 50s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 50s {color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 23s {color} | {color:red} hadoop-hdfs-project/hadoop-hdfs: patch generated 3 new + 217 unchanged - 0 fixed = 220 total (was 217) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 3s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 13s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 27s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 26s {color} | {color:green} the patch passed with JDK v1.8.0_77 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 2m 3s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 94m 38s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.8.0_77. {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 90m 50s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.7.0_95. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 26s {color} | {color:green} Patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 218m 14s {color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| JDK v1.8.0_77 Failed junit tests | hadoop.hdfs.TestDFSUpgradeFromImage |\n|   | hadoop.hdfs.server.namenode.web.resources.TestWebHdfsDataLocality |\n|   | hadoop.hdfs.server.namenode.ha.TestEditLogTailer |\n|   | hadoop.hdfs.server.datanode.TestDataNodeMultipleRegistrations |\n|   | hadoop.hdfs.security.TestDelegationTokenForProxyUser |\n|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |\n|   | hadoop.hdfs.TestRollingUpgrade |\n|   | hadoop.hdfs.server.namenode.TestEditLog |\n|   | hadoop.hdfs.server.datanode.TestDirectoryScanner |\n| JDK v1.7.0_95 Failed junit tests | hadoop.hdfs.server.namenode.TestNameNodeMetadataConsistency |\n|   | hadoop.hdfs.server.datanode.TestDataNodeMultipleRegistrations |\n|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |\n|   | hadoop.hdfs.server.namenode.TestEditLog |\n|   | hadoop.hdfs.server.datanode.TestDataNodeHotSwapVolumes |\n|   | hadoop.hdfs.TestFileCreationDelete |\n|   | hadoop.hdfs.server.namenode.TestDecommissioningStatus |\n|   | hadoop.hdfs.server.datanode.TestDirectoryScanner |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:fbe3e86 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12800128/HDFS-10301.003.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux e43756b29eca 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 14ab7a8 |\n| Default Java | 1.7.0_95 |\n| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_77 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/15249/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/15249/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_77.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/15249/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |\n| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/15249/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_77.txt https://builds.apache.org/job/PreCommit-HDFS-Build/15249/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |\n| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/15249/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/15249/console |\n| Powered by | Apache Yetus 0.2.0   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-04-22T04:12:01.415+0000","updated":"2016-04-22T04:12:01.415+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15254350","id":"15254350","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Yeah, perhaps we should file a follow-on JIRA to optimize by removing the storage reports with an older ID when a newer one was received.  The challenge will be implementing it efficiently-- we probably need to move away from BlockingQueue and towards something with our own locking.  And probably something other than plain Runnables.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-22T18:10:34.111+0000","updated":"2016-04-22T18:10:34.111+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15254668","id":"15254668","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Hey [~walter.k.su], sorry let me rephrase my wording.\nYour patch \"eliminates\" current behavior, but it doesn't directly address the \"implementation bug\" in zombie storage detection.\nSo your patch is correct and you did solve the problem, but indirectly, by reordering reports from the same RPC into a contiguous segment, which in a sense validates the zombie storage bug.\nAlso you add a stronger requirement for block report processing, that the entire block-report-PRCs must be processed in the order they are received, vs. current requirement that individual storage reports must be processed in the order received. The latter allows interleaving, while yours does not, and your unit test enforces the new order. I am in favor of weaker requirements when possible.\nHope this makes more sense.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-22T20:58:05.711+0000","updated":"2016-04-22T20:58:05.711+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15254673","id":"15254673","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"[~cmccabe] I don't think that HDFS-9198 breaks this issue. I am seeing this in 2.6.1, which also doesn't have the queues. You may not observe this behavior until you put substantial write load on the NameNode. Looking at your patch now.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-22T20:59:15.442+0000","updated":"2016-04-22T20:59:15.442+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15254740","id":"15254740","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jingzhao","name":"jingzhao","key":"jingzhao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jing Zhao","active":true,"timeZone":"America/Los_Angeles"},"body":"As an optimization, maybe we can have a retry-cache similar mechanism on the NN for block reports? We can let the retry of the same FBR share the same block report ID, and based on the lease ID and the report ID the NN can recognize the retry. Then instead of always putting the detailed reports into the queue, we can either directly return the existing response (if the first request has been processed), or let the retry wait till the current on-going FBR process finishes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jingzhao","name":"jingzhao","key":"jingzhao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jing Zhao","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-22T21:35:12.344+0000","updated":"2016-04-22T21:35:12.344+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15254994","id":"15254994","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Colin I ran your unit test and verified that it fails on current code base, but succeeds with your patch.\nLooking at the patch. Counting {{storagesSeen}} does work for your test case. But it is somewhat confusing, as the count is changing with interleaving reports.\nSuppose you have 3 storages (s1, s2, s3) and two block reports br1, br2 interleaving in the following way:\n|| reoprtId-strorage || storagesSeen ||\n| br1-s1 | 0 |\n| br1-s2 | 1 |\n| br2-s1 | 0 |\n| br2-s2 | 1 |\n| br1-s3 | 0 |\nThe last line is confusing, because it should have been 2, but its is 0 since br2 overridden {{lastBlockReportId}} for s1 and s2 .\nThis brought me to an idea. BR ids are monotonically increasing. What if in {{BlockManager.processReport()}} (before processing but under the lock) we check {{lastBlockReportId}} for all storages, and if we see one greater than {{context.getReportId()}} we through an {{IOExcpetion}} indicating that the next block report is in progress and we do not need to continue with this one. The exception is not expected to be passed back to the DataNode, as it has already timed out, but even if it gets passed, the DataNode will just send another block report.\nI think this could be a simple fix for this jira, and we can discuss other approaches to zombie storage detection in the next issue. Current approach seems to be error prone. One way is to go with the retry cache as [~jingzhao] suggested. Or there could be other ideas.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-23T01:07:24.737+0000","updated":"2016-04-23T01:07:24.737+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15255772","id":"15255772","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"body":"Thank you for your explanation. I learned a lot.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-04-25T01:30:06.545+0000","updated":"2016-04-25T01:30:06.545+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15255787","id":"15255787","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"body":"bq. BR ids are monotonically increasing.\nThe id values are random intially, if it starts with a large value it could overflow after a long run? If DN restarts, the value randomized again. We should be careful in case NN rejects all following BRs.\nIf BR is splitted into multipe RPCs, there's no interleaving natually because DN get the acked before it sends next RPC. Interleaving only exists if BR is not splitted. I agree bug need to be fixed from inside, It's just eliminating interleaving for good maybe not a bad idea, as it simplifies the problem, and is also a simple workaround for this jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=walter.k.su","name":"walter.k.su","key":"walter.k.su","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Walter Su","active":true,"timeZone":"Asia/Shanghai"},"created":"2016-04-25T02:14:45.823+0000","updated":"2016-04-25T02:14:45.823+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15256791","id":"15256791","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. [~shv] wrote: The last line is confusing, because it should have been 2, but its is 0 since br2 overridden lastBlockReportId for s1 and s2 .\n\nIt's OK for it to be 0 here.  It just means that we will not do the zombie storage elimination for these particular full block reports.  Remember that interleaved block reports are an extremely rare case, and so are zombie storages.  We can wait for the next FBR to do the zombie elimination.\n\nbq. I think this could be a simple fix for this jira, and we can discuss other approaches to zombie storage detection in the next issue. Current approach seems to be error prone. One way is to go with the retry cache as Jing Zhao suggested. Or there could be other ideas.\n\nThe problem with a retry cache is that it uses up memory.  We don't have an easy way to put an upper bound on the amount of memory that we need, except through adding complex logic to limit the number of full block reports accepted for a specific DataNode in a given time period.\n\nbq. This brought me to an idea. BR ids are monotonically increasing...\nThe code for generating block report IDs is here:\n{code}\n  private long generateUniqueBlockReportId() {\n    // Initialize the block report ID the first time through.\n    // Note that 0 is used on the NN to indicate \"uninitialized\", so we should\n    // not send a 0 value ourselves.\n    prevBlockReportId++;\n    while (prevBlockReportId == 0) {\n      prevBlockReportId = ThreadLocalRandom.current().nextLong();\n    }     \n    return prevBlockReportId;\n  } \n{code}\n\nIt's not monotonically increasing in the case where rollover occurs.  While this is an extremely rare case, the consequences of getting it wrong would be extremely severe.  So this might be possible as an incompatible change, but not a change in branch-2.\n\nEdit: another reason not to do this is because on restart, the DN could get a number lower than its previous one.  We can't use IDs as epoch numbers unless we actually persist them to disk, like Paxos transaction IDs or HDFS edit log IDs.\n\nbq. [~walter.k.su] wrote: If BR is splitted into multipe RPCs, there's no interleaving natually because DN get the acked before it sends next RPC. Interleaving only exists if BR is not splitted. I agree bug need to be fixed from inside, It's just eliminating interleaving for good maybe not a bad idea, as it simplifies the problem, and is also a simple workaround for this jira.\n\nWe don't document anywhere that interleaving doesn't occur.  We don't have unit tests that it doesn't occur, and if we did, those unit tests might accidentally pass because of race conditions.  Even if we eliminated interleaving for now, anyone changing the RPC code or the queuing code could easily re-introduce interleaving and this bug would come back.  That's why I agree with [~shv]-- we should not focus on trying to remove interleaving.\n\nbq. [~shv] wrote: I think this could be a simple fix for this jira, and we can discuss other approaches to zombie storage detection in the next issue.\n\nYeah, let's get in this fix and then talk about potential improvements in a follow-on jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-25T18:55:55.597+0000","updated":"2016-04-25T18:58:43.363+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15257164","id":"15257164","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Yes, on trunk {{generateUniqueBlockReportId()}} starts from random. I was looking at it in a previous version where it is still {{nanoTime()}}.\n\n??Remember that interleaved block reports are an extremely rare case??\n\nNot really. On a busy cluster with a lot of blocks to report it happens all the time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-25T22:21:36.037+0000","updated":"2016-04-25T22:21:36.037+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15259278","id":"15259278","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Hey Colin, I reviewed your patch more thoroughly. There is still a problem with interleaving reports. See {{updateBlockReportContext()}}. Suppose that block reports interleave like this: <br1-s1, br2-s1, br1-s2, br2-s2>. Then br1-s2 will reset {{curBlockReportRpcsSeen}} since {{curBlockReportId}} is not the same as in the report, which will discard the bit set for s1 in br2-s1, and the count of {{rpcsSeen = 0}} will be wrong for br2-s2. So possibly unreported (zombie) storages will not be removed. LMK if you see what I see.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-27T00:46:46.901+0000","updated":"2016-04-27T00:46:46.901+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15259284","id":"15259284","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"May be we should go with a different approach for this problem.\n- *The problem.* NameNode thinks that the reporting DN has the following set of storages <s1, s2, s3>. But the DataNode reports  <s1, s2, s4>, because one of its drives was replaced, reformatted, or taken out of service. The NameNode should update the list of storages to the ones reported by the DataNode, potentially removing some of them.\n- *Constraints.* Single block report can be split into multiple RPCs. Within single block-report-RPC NameNode processes each storage under a lock, but then releases and re-acquires the lock for the next storage, so that multiple RPC reports can interleave due to multi-threading.\n- *Approach.* DN should report full list of its storages in the first block-report-RPC. The NameNode first cleans up unreported storages and replicas belonging them, then start processing the rest of block reports as usually.\nSo DataNodes explicitly report storages that they have, which eliminates NameNode guessing, which storage is the last in the block report RPC.\n\nI did not look if any changes in the RPC message structure are needed, but it think that all necessary fields should be already present.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-27T00:51:05.046+0000","updated":"2016-04-27T00:51:05.046+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15259529","id":"15259529","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. Hey Colin, I reviewed your patch more thoroughly. There is still a problem with interleaving reports. See updateBlockReportContext(). Suppose that block reports interleave like this: <br1-s1, br2-s1, br1-s2, br2-s2>. Then br1-s2 will reset curBlockReportRpcsSeen since curBlockReportId is not the same as in the report, which will discard the bit set for s1 in br2-s1, and the count of rpcsSeen = 0 will be wrong for br2-s2. So possibly unreported (zombie) storages will not be removed. LMK if you see what I see.\n\nThanks for looking at the patch.  I agree that in the case of interleaving, zombie storages will not be removed.  I don't consider that a problem, since we will eventually get a non-interleaved full block report that will do the zombie storage removal.  In practice, interleaved block reports are extremely rare (we have never seen the problem described in this JIRA, after deploying to thousands of clusters).\n\nbq. May be we should go with a different approach for this problem.  Single block report can be split into multiple RPCs. Within single block-report-RPC NameNode processes each storage under a lock, but then releases and re-acquires the lock for the next storage, so that multiple RPC reports can interleave due to multi-threading.\n\nMaybe I'm misunderstanding the proposal, but don't we already do all of this?  We split block reports into multiple RPCs when the storage reports grow beyond a certain size.\n\nbq. Approach. DN should report full list of its storages in the first block-report-RPC. The NameNode first cleans up unreported storages and replicas belonging them, then start processing the rest of block reports as usually. So DataNodes explicitly report storages that they have, which eliminates NameNode guessing, which storage is the last in the block report RPC.\n\nWhat does the NameNode do if the DataNode is restarted while sending these RPCs, so that it never gets a chance to send all the storages that it claimed existed?  It seems like you will get stuck and not be able to accept any new reports.  Or, you can take the same approach the current patch does, and clear the current state every time you see a new ID (but then you can't do zombie storage elimination in the presence of interleaving.)\n\nOne approach that avoids all these problems is to avoid doing zombie storage elimination during FBRs entirely, and do it instead during DN heartbeats (for example).  DN heartbeats are small messages that are never split, and their processing is not interleaved with anything.\n\nWe agree that the current patch solves the problem of storages falsely being declared as zombies, I hope.  I think that's a good enough reason to get this patch in, and then think about alternate approaches later.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-27T04:35:07.000+0000","updated":"2016-04-27T04:35:07.000+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15259688","id":"15259688","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"??Maybe I'm misunderstanding the proposal, but don't we already do all of this???\n\nYes you misunderstood. This part is not my proposal. This is what we already do, and therefore I call them *Constraints*, because they complicate the *Problem*. The proposal is in the third bullet point titled *Approach*.\n\n??What does the NameNode do if the DataNode is restarted while sending these RPCs, so that it never gets a chance to send all the storages that it claimed existed?  It seems like you will get stuck??\n\nNo, I will not get stuck. All br-RCPs are completely independent of each other. It's just that one of them has all storages, and indicates to the NameNode that it should update its storage list for the DataNode. NN processes as many of such RPCs, as DN sends. If the DN dies the NN will declare it dead in due time, or if DN restarts within 10 minutes it will send new set of block reports from scratch. I do not see any inconsistencies.\n\nYou can think of it as a new operation SyncStorages, which does just that - updates NameNode's knowledge of DN's storages. I combined this operation with the first br-RPC. One can combine it with any other call, same as you propose to combine it with the heartbeat. Except it seems a poor idea, since we don't want to wait for removal of thousands of replicas on a heartbeat.\n\n??interleaved block reports are extremely rare??\n\nYou keep saying this. But it is not rare for me. Are you convincing me not to believe my eyes or that you checked the logs on your thousands of clusters? I did check mine.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-27T07:17:49.656+0000","updated":"2016-04-27T07:17:49.656+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15264772","id":"15264772","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. You can think of it as a new operation SyncStorages, which does just that - updates NameNode's knowledge of DN's storages. I combined this operation with the first br-RPC. One can combine it with any other call, same as you propose to combine it with the heartbeat. Except it seems a poor idea, since we don't want to wait for removal of thousands of replicas on a heartbeat.\n\nThanks for explaining your proposal a little bit more.  I agree that enumerating all the storages in the first block report RPC is a fairly simple way to handle this, and shouldn't add too much size to the FBR.  It seems like a better idea than adding it to the heartbeat, like I proposed.  In the short term, however, I would prefer the current patch, since it involves no RPC changes, and doesn't require all the DataNodes to be upgraded before it can work.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-04-29T21:23:20.493+0000","updated":"2016-04-29T21:23:20.493+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15266715","id":"15266715","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Still catching up and need to review patch.  First question, how is this interleaving happening on a frequent basis?\n\nAn interesting observation (if I interpreted the logs correctly) is processing all 4 storages with ~14k blocks/storage appears to takes minutes to process?  Tens of seconds appear to elapse between processing each storage.  There's some serious contention that seems indicative of a nasty bug or suboptimal configuration exacerbating this bug.\n\nIs the DN rpc timeout set to something very low?  Has the number of RPC handlers been greatly increased?   Are there frequent deletes of massive trees?  Is there a lot of decomm'ing with a low check interval?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-05-02T14:48:11.567+0000","updated":"2016-05-02T14:48:11.567+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15270911","id":"15270911","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Here's a possibly simpler approach.  Throw a retriable exception if there's already a report being processed.  Completely untested, based on 2.7.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-05-04T16:13:59.225+0000","updated":"2016-05-04T16:13:59.225+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15270928","id":"15270928","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |\n| {color:red}-1{color} | {color:red} patch {color} | {color:red} 0m 4s {color} | {color:red} HDFS-10301 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12802218/HDFS-10301.sample.patch |\n| JIRA Issue | HDFS-10301 |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/15359/console |\n| Powered by | Apache Yetus 0.2.0   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-04T16:18:42.363+0000","updated":"2016-05-04T16:18:42.363+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15271737","id":"15271737","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"??In the short term, however, I would prefer the current patch, since it involves no RPC changes, and doesn't require all the DataNodes to be upgraded before it can work.??\n\n* I don't think my approach requires RPC change, since the block-report RPC message already has all required structures in place. It should require only the processing logic change.\n* DataNodes will need to be upgraded indeed, but only in the case if they split its block-reports into multiple RPC, because full report lists all storages already. But even multi-RPC case it will only mean that zombie storages will not be removed until they are upgraded.\n* Colin, it would have been good to have an interim solution, but it does not seem reasonable to commit a patch, which fixes one bug, while introducing another.\nI traced back a series of jiras related to this problem. It looks like that multiple storages were not thoroughly thought through in the beginning and that people were trying to solve problems as they appear for a while. Feels like the time for the right fix.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-05T01:04:19.598+0000","updated":"2016-05-05T01:04:19.598+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15271743","id":"15271743","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Daryn, I also proposed throwing an Exception if there is a block report already in progress as a interim fix.\nBut in your patch you add current node to {{activeReports}} before processing each storage, and then remove it right after. So for the next storage {{activeReports}} will be empty, whether the reports are interleaving or not. And the exception is never thrown. LMK if I missed something.\nAlso looks like your patch is against 2.7, not applying to trunk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-05T01:11:47.247+0000","updated":"2016-05-05T01:11:47.247+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15271863","id":"15271863","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for looking at this, [~daryn].  I'm not sure about the approach you proposed, though.  If interleaved full block reports really are very common for [~shv], it seems like throwing an exception when these are received would be problematic.  It sounds like there might be some implementation concerns as well, although I didn't look at the patch.\n\nbq. [~shv] wrote: I don't think my approach requires RPC change, since the block-report RPC message already has all required structures in place. It should require only the processing logic change.\n\nJust to be clear.  If what is being sent over the wire is changing, I would consider that an \"RPC change.\"  We can create an RPC change without modifying the {{.proto}} file-- for example, by choosing not to fill in some optional field, or filling in some other field.\n\nbq. Colin, it would have been good to have an interim solution, but it does not seem reasonable to commit a patch, which fixes one bug, while introducing another.\n\nThe patch doesn't introduce any bugs.  It does mean that we won't remove zombie storages when interleaved block reports are received.  But we are not handling this correctly right now either, so that is not a regression.\n\nLike I said earlier, I think your approach is a good one, but I think we should get in the patch I posted here.  It is a very small and non-disruptive change which doesn't alter what is sent over the wire.  It can easily be backported to stable branches.  Why don't we commit this patch, and then work on a follow-on with the RPC change and simplification that you proposed?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-05T04:15:20.729+0000","updated":"2016-05-05T04:15:20.729+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15297526","id":"15297526","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Assigning the ticket to myself so that I can upload a patch. Please review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-24T02:06:01.529+0000","updated":"2016-05-24T02:06:01.529+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15297563","id":"15297563","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"I uploaded the patch HDFS-10301.004.patch. I have implemented the idea that Konstantin suggested, i.e, DNs explicitly report storages that they have. This eliminates NN guessing which storage is the last in the block report RPC. In the case of FBR, NameNodeRPCServer can retrieve the list of storages from the storage block report array. In the case that block reports are split, DNs send an additional StorageReportOnly RPC after sending the block reports for each individual storage. This StorageReportOnly RPC is sent as a FBR. This rpc contains all the storages that the DN has with -1 number of blocks. A new enum STORAGE_REPORT_ONLY is introduced in BlockListsAsLong for this purpose.\n\nZombie storage removal is triggered from the NameNodeRPCServer instead of the BlockManager since the RPCServer now has all the information required to construct the list of storages that the DN is reporting. After processing the block reports as usual, zombie storages are removed by comparing the list of storages in the block report and the list of storages that the NN is aware of for that DN.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-24T02:47:50.591+0000","updated":"2016-05-24T02:47:50.591+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15297592","id":"15297592","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 14s {color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 3 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 6m 22s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 42s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 30s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 50s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 12s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 38s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 4s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 46s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 39s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 39s {color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 27s {color} | {color:red} hadoop-hdfs-project/hadoop-hdfs: patch generated 25 new + 371 unchanged - 7 fixed = 396 total (was 378) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 47s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 9s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 45s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 1s {color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 58m 26s {color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 23s {color} | {color:green} Patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 77m 11s {color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.namenode.TestAddOverReplicatedStripedBlocks |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:2c91fd8 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12805798/HDFS-10301.004.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux d79544c47ce6 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / b4078bd |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/15531/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/15531/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/15531/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/15531/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/15531/console |\n| Powered by | Apache Yetus 0.2.0   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-24T03:26:14.751+0000","updated":"2016-05-24T03:26:14.751+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15298565","id":"15298565","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~redvine],\n\nThanks for your interest in this.  I wish I could get more people interested in this JIRA-- it has been hard to raise interest, unfortunately.\n\nJust to clarify, you don't need to assign a JIRA to yourself in order to post a patch or suggest a solution.  In general, when someone is actively working on a patch, you should ask before reassigning their JIRAs to yourself.\n\nA whole separate RPC just for reporting the storages which are present seems excessive.  It will add additional load to the namenode.\n\n{code}\n     if (node.leaseId == 0) {\n-      LOG.warn(\"BR lease 0x{} is not valid for DN {}, because the DN \" +\n-               \"is not in the pending set.\",\n-               Long.toHexString(id), dn.getDatanodeUuid());\n-      return false;\n+      LOG.debug(\"DN {} is not in the pending set because BR with lease 0x{} was processed out of order\",\n+          dn.getDatanodeUuid(), Long.toHexString(id));\n+      return true;\n{code}\nThe leaseId being 0 doesn't mean that the block report was processed out of order.  If you manually trigger a block report with the {{hdfs dfsadmin \\-triggerBlockReport}} command, it will also have lease id 0.  Legacy block reports will also have lease ID 0.\n\nIn general, your solution doesn't fix the problem during upgrade and is a much bigger patch, which is why I think HDFS-10301.003.patch should be committed and the RPC changes should be done in a follow-on JIRA.  I do not see us backporting RPC changes to all the stable branches.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-24T17:29:57.174+0000","updated":"2016-05-24T17:29:57.174+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15298569","id":"15298569","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Rebasing patch 003 on trunk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-24T17:31:24.946+0000","updated":"2016-05-24T17:31:24.946+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15298604","id":"15298604","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zhz","name":"zhz","key":"zhz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zhz&avatarId=20493","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zhz&avatarId=20493","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zhz&avatarId=20493","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zhz&avatarId=20493"},"displayName":"Zhe Zhang","active":true,"timeZone":"America/Los_Angeles"},"body":"[~cmccabe] Just a quick note that it's a new JIRA rule that you have to be either the assignee or a committer to attach a patch. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zhz","name":"zhz","key":"zhz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zhz&avatarId=20493","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zhz&avatarId=20493","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zhz&avatarId=20493","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zhz&avatarId=20493"},"displayName":"Zhe Zhang","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-24T17:48:12.976+0000","updated":"2016-05-24T17:48:12.976+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15298675","id":"15298675","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Oh, sorry!  I didn't realize we had added a new rule about attaching patches.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-24T18:25:57.587+0000","updated":"2016-05-24T18:25:57.587+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15298742","id":"15298742","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 17s {color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 6m 47s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 44s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 28s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 49s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 11s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 37s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 6s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 46s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 40s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 40s {color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 26s {color} | {color:red} hadoop-hdfs-project/hadoop-hdfs: patch generated 6 new + 293 unchanged - 0 fixed = 299 total (was 293) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 47s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 10s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 43s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 2s {color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 76m 2s {color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 19s {color} | {color:green} Patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 95m 7s {color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.namenode.TestNameNodeMetadataConsistency |\n|   | hadoop.hdfs.TestSafeMode |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:2c91fd8 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12805931/HDFS-10301.005.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 26dc17f5173c 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 57c31a3 |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/15548/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/15548/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/15548/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/15548/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/15548/console |\n| Powered by | Apache Yetus 0.2.0   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-24T19:13:58.409+0000","updated":"2016-05-24T19:13:58.409+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15299255","id":"15299255","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Thanks for your review [~cmccabe]. By legacy reports do you mean block reports from DNs before the concept of leases was introduced for block reports? \n\n{code}\npublic synchronized boolean checkLease(DatanodeDescriptor dn,\n                                         long monotonicNowMs, long id) {\n    if (id == 0) {\n      LOG.debug(\"Datanode {} is using BR lease id 0x0 to bypass \" +\n          \"rate-limiting.\", dn.getDatanodeUuid());\n      return true;\n    }\n    NodeData node = nodes.get(dn.getDatanodeUuid());\n    if (node == null) {\n      LOG.info(\"BR lease 0x{} is not valid for unknown datanode {}\",\n          Long.toHexString(id), dn.getDatanodeUuid());\n      return false;\n    }\n    if (node.leaseId == 0) {\n      LOG.warn(\"BR lease 0x{} is not valid for DN {}, because the DN \" +\n               \"is not in the pending set.\",\n               Long.toHexString(id), dn.getDatanodeUuid());\n      return false;\n    }\n{code}\n\nIsn't {{id}} equal to 0 for legacy block reports and when block reports are manually triggered? My understanding is that {{node.leaseId}} is set to zero only when the lease is removed. In my patch, the lease is removed by looking at the current rpc index in the block report context.\n\n{code}\nif (context != null) {\n        if (context.getTotalRpcs() == context.getCurRpc() + 1) {\n          long leaseId = this.getBlockReportLeaseManager().removeLease(node);\n          BlockManagerFaultInjector.getInstance().removeBlockReportLease(node, leaseId);\n        }\n{code}\n\nWhen processing of storage report happens out of order, we may set {{node.leaseId=0}} before all DN storage reports are processed. Therefore, we log a message and continue to process the storage report even if {{node.leaseId=0}}. Please let me know if you see any issue with this approach.\n\nDuring upgrades, we do not remove zombie storages. Once the upgrade is finalized, we go ahead and remove the zombie storages. \n{code}\nif (nn.getFSImage().isUpgradeFinalized() && noStaleStorages) {\n      Set<String> storageIDsInBlockReport = new HashSet<>();\n      if (context.getTotalRpcs() == 1) {\n        for (StorageBlockReport report : reports) {\n          storageIDsInBlockReport.add(report.getStorage().getStorageID());\n        }\n        bm.removeZombieStorages(nodeReg, context, storageIDsInBlockReport);\n      }\n    }\n{code}\n\nCan you please elaborate on what you meant by \"In general, your solution doesn't fix the problem during upgrade\". What problems do you foresee?\n\nI am currently investigating why the test {{TestAddOverReplicatedStripedBlocks}} failed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-25T00:48:48.811+0000","updated":"2016-05-25T00:48:48.811+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15299313","id":"15299313","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Hey Colin, let's decide on the way to move forward. I do not see a point in making this change in two steps.\n* Your changes will essentially be completely removed by Vinitha's patch.\n* I do not see her patch introducing incompatible changes. So it can and should be backported through to branch 2.6.\n\nA thorough review is needed and will be quite helpful. I think the [004 patch|https://issues.apache.org/jira/secure/attachment/12805798/HDFS-10301.004.patch] covers \n* the upgrade case, that is, it works consistently for both old (pre-patch) and new (patched) DataNodes block reports\n* the case when the entire block report is sent in a single RPC and\n* the case when block reports are split into multiple RPCs\n* the leases\n\nSo apart from the failed test I do not see any issues. It would be good if you could take a fresh look, see if any corner cases were missed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-25T01:47:47.348+0000","updated":"2016-05-25T01:47:47.348+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15302426","id":"15302426","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"I never said that patch 004 introduced incompatible changes.  I just argued that it was a bigger change than was necessary to fix the problem.  All other things being equal, we would prefer a smaller change to a bigger one.  The only argument you have given against my change is that it doesn't fix the problem in the case where full block reports are interleaved.  But this is an extremely, extremely rare case, to the point where nobody else has even seen this problem in their cluster.\n\nI still think that patch 005 is an easier way to fix the problem.  It's basically a simple bugfix to my original patch.  However, if you want to do something more complex, I will review it.  But I don't want to add any additional RPCs.  We already have problems with NameNode performance and we should not be adding more RPCs when it's not needed.  We can include the storage information in the first RPC of the block report as an optional field.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-26T16:55:44.328+0000","updated":"2016-05-26T16:55:44.328+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15303272","id":"15303272","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"I looked into why the test {{TestAddOverReplicatedStripedBlocks}} fails with patch 004. I don't completely understand why the test relies on the fact that zombie storages should be removed when the DN has stale storages. Probably the test needs to be modified. Here are my findings:\n\nWith the patch, the test fails with the following error:\n{code}\njava.lang.AssertionError: expected:<10> but was:<11>\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.junit.Assert.failNotEquals(Assert.java:743)\n\tat org.junit.Assert.assertEquals(Assert.java:118)\n\tat org.junit.Assert.assertEquals(Assert.java:555)\n\tat org.junit.Assert.assertEquals(Assert.java:542)\n\tat org.apache.hadoop.hdfs.server.namenode.TestAddOverReplicatedStripedBlocks.testProcessOverReplicatedAndMissingStripedBlock(TestAddOverReplicatedStripedBlocks.java:281)\n{code}\n\nIn the test, {{DFSUtil.createStripedFile}} is invoked in the beginning.\n{code}\n /**\n   * Creates the metadata of a file in striped layout. This method only\n   * manipulates the NameNode state without injecting data to DataNode.\n   * You should disable periodical heartbeat before use this.\n   *  @param file Path of the file to create\n   * @param dir Parent path of the file\n   * @param numBlocks Number of striped block groups to add to the file\n   * @param numStripesPerBlk Number of striped cells in each block\n   * @param toMkdir\n   */\n  public static void createStripedFile(MiniDFSCluster cluster, Path file, Path dir,\n      int numBlocks, int numStripesPerBlk, boolean toMkdir) throws Exception {\n{code}\n\nThis internally calls the {{DFSUtil.addBlockToFile}} method that mimics block reports. While processing these incremental storages, we update the datanode storages. In the test output, you can see the storages being added.\n{code}\n2016-05-26 17:10:03,330 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 9505a2ad-78f4-45d7-9c13-2ecd92a06866 for DN 127.0.0.1:60835\n2016-05-26 17:10:03,331 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID d4bb2f70-4a1e-451f-9d47-a2967f819130 for DN 127.0.0.1:60839\n2016-05-26 17:10:03,332 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 841fc92f-fa15-4ced-8487-96ca4e6996d0 for DN 127.0.0.1:60844\n2016-05-26 17:10:03,332 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 304aaeeb-e2d0-4427-81c6-c79e4d0b6a4e for DN 127.0.0.1:60849\n2016-05-26 17:10:03,332 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 2d046d66-26fc-448f-938c-04dda2ecf34a for DN 127.0.0.1:60853\n2016-05-26 17:10:03,333 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 381d3151-e75e-434a-86f8-da5c83f22b19 for DN 127.0.0.1:60857\n2016-05-26 17:10:03,333 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 71f72bc9-9c66-478f-a0d7-3f0c7fc23964 for DN 127.0.0.1:60861\n2016-05-26 17:10:03,333 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 4dc539f3-b7a9-4145-a313-fa99ca1dd779 for DN 127.0.0.1:60865\n2016-05-26 17:10:03,333 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 734ea366-e635-4715-97d5-196bfcdccb18 for DN 127.0.0.1:60869\n2016-05-26 17:10:03,334 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID c639de06-e85c-4e93-92d2-506a49d4e41c for DN 127.0.0.1:60835\n2016-05-26 17:10:03,343 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID a82ff231-d630-4799-907d-f0a72ff06b38 for DN 127.0.0.1:60839\n2016-05-26 17:10:03,343 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 328c3467-0507-45fd-9aac-73a38165f741 for DN 127.0.0.1:60844\n2016-05-26 17:10:03,343 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 0b2a3b7f-e065-4e9a-9908-024091393738 for DN 127.0.0.1:60849\n2016-05-26 17:10:03,344 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 3654a0ce-8389-40bf-b8d3-08cc49895a7d for DN 127.0.0.1:60853\n2016-05-26 17:10:03,344 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 8072cc31-5567-4c04-8f71-7a8ee03c2fe0 for DN 127.0.0.1:60857\n2016-05-26 17:10:03,344 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 0202860d-4aad-4996-a325-23a34f052cb2 for DN 127.0.0.1:60861\n2016-05-26 17:10:03,345 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 5415d95d-c173-4458-be78-d3fa95652589 for DN 127.0.0.1:60865\n2016-05-26 17:10:03,345 [Thread-0] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(912)) - Adding new storage ID 14570c81-1dc1-4479-a65a-5b61944d4b94 for DN 127.0.0.1:60869\n2016-05-26 17:10:03,359 [IPC Server handler 9 on 60834] INFO  hdfs.StateChange (FSNamesystem.java:completeFile(2663)) - DIR* completeFile: /striped/file is closed by DFSClient_NONMAPREDUCE_865500748_10\n{code}\n\nWhen these storages are added, the lastBlockReportId is set to zero and the storage is considered as a stale storage. Since the DN doesn't know about these storages, these storages are not reported in the next block report. These storages are considered as zombie storages and are removed. One of these zombie storages has a replica. Relevant logs:\n{code}\n2016-05-26 17:10:03,383 [Block report processor] WARN  blockmanagement.BlockManager (BlockManager.java:removeZombieReplicas(2239)) - processReport 0x6aedc669a6437553: removing zombie storage c639de06-e85c-4e93-92d2-506a49d4e41c, which no longer exists on the DataNode.\n2016-05-26 17:10:03,384 [Block report processor] WARN  blockmanagement.BlockManager (BlockManager.java:removeZombieReplicas(2263)) - processReport 0x6aedc669a6437553: removed 0 replicas from storage c639de06-e85c-4e93-92d2-506a49d4e41c, which no longer exists on the DataNode.\n\n2016-05-26 17:10:03,416 [Block report processor] WARN  blockmanagement.BlockManager (BlockManager.java:removeZombieReplicas(2239)) - processReport 0xf7e24bf2690ca946: removing zombie storage 0202860d-4aad-4996-a325-23a34f052cb2, which no longer exists on the DataNode.\n2016-05-26 17:10:03,416 [Block report processor] WARN  blockmanagement.BlockManager (BlockManager.java:removeZombieReplicas(2263)) - processReport 0xf7e24bf2690ca946: removed 0 replicas from storage 0202860d-4aad-4996-a325-23a34f052cb2, which no longer exists on the DataNode.\n\n2016-05-26 17:10:04,217 [Block report processor] WARN  blockmanagement.BlockManager (BlockManager.java:removeZombieReplicas(2239)) - processReport 0xe361b2d0f2b49c0c: removing zombie storage 14570c81-1dc1-4479-a65a-5b61944d4b94, which no longer exists on the DataNode.\n2016-05-26 17:10:04,219 [Block report processor] WARN  blockmanagement.BlockManager (BlockManager.java:removeZombieReplicas(2263)) - processReport 0xe361b2d0f2b49c0c: removed 1 replicas from storage 14570c81-1dc1-4479-a65a-5b61944d4b94, which no longer exists on the DataNode.\n{code}\n\nIn patch 004, zombie storages are not removed when there are stale storages. Are there scenarios where this could happen? Since the zombie storages are not removed and one of the zombie storages has a replica, the assertion fails. This test was introduced in HDFS-8827.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-27T00:50:21.522+0000","updated":"2016-05-27T00:50:21.522+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15303287","id":"15303287","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":" If we do have the check for stale storages before zombie storage removal, {{noStaleStorages}} in NameNodeRpcServer should be set to true when {{isStorageReport}} is true.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-05-27T01:00:56.870+0000","updated":"2016-05-27T01:00:56.870+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15304357","id":"15304357","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Catching up, in my sample patch I think the logic should have been in {{fsn#blockReport}} instead of {{bm#processReport}}.  I had hastily created it for example.\n\nNow consider that we are really trying to bandaid an edge case caused by multi-storage reports.  I think we should also change the DN to going forward always send per-storage reports.  We had to switch to per-storage reports a long time ago to avoid all kinds of issues, particularly at startup.  Ex. callq overflows, extremely high gc rate/time, full GCs, etc.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-05-27T17:11:07.121+0000","updated":"2016-05-27T17:11:07.121+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15304702","id":"15304702","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"[~redvine], the fact that you are having trouble with stale storages versus zombie storages is because your patch uses a separate mechanism to detect what storages exist on the DN.  The existing code doesn't have this problem because the full block report itself acted as the record of what storages existed.  This is one negative side effect of the more complex approach.  Another negative side effect is that you are transmitting the same information about which storages are present multiple times.\n\nDespite these negatives, I'm still willing to review a patch that uses the more complicated method as long as you don't introduce extra RPCs.  I agree that we should remove a stale storage if it doesn't appear in the full listing that gets sent.  Just to be clear, I am -1 on a patch which adds extra RPCs.  Perhaps you can send this listing in an optional field in the first RPC.\n\n[~daryn], I don't like the idea of \"band-aiding\" this issue rather than fixing it at the root.  Throwing an exception on interleaved storage reports, or forbidding combined storage reports, seem like very brittle work-arounds that could easily be undone by someone making follow-on changes.  I came up with patch 005 and the earlier patches as a very simple fix that could easily be backported.  If you are interested in something simple, then please check it out... or at least give a reason for not checking it out.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-27T20:22:04.919+0000","updated":"2016-05-27T20:22:04.919+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15306941","id":"15306941","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Vinitha's patch adds one RPC only in the case when block reports are sent in multiple RPCs. If you choose to send the entire block report in one RPC, then it will be a single RPC call with her patch as well. It seems logical to have an extra RPC because you have chosen to split block reports into multiple RPCs. We are well aware of the NameNode performance problems.\nCould you please review the patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-05-30T20:41:06.993+0000","updated":"2016-05-30T20:41:06.993+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15308997","id":"15308997","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. Vinitha's patch adds one RPC only in the case when block reports are sent in multiple RPCs.\n\nThe case where block reports are sent in multiple RPCs is exactly the case where scalability is the most important, since it indicates that we have a large number of blocks.  My patch adds no new RPCs.  If we are going to take an alternate approach, it should not involve a performance regression.\n\nbq. Could you please review the patch.\n\nI did review the patch.  I suggested adding an optional field in an existing RPC rather than adding a new RPC, and stated that I was -1 on adding new RPC load to the NN.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-06-01T01:02:20.139+0000","updated":"2016-06-01T01:02:20.139+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15313112","id":"15313112","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zhz","name":"zhz","key":"zhz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zhz&avatarId=20493","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zhz&avatarId=20493","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zhz&avatarId=20493","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zhz&avatarId=20493"},"displayName":"Zhe Zhang","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for the discussions [~cmccabe], [~shv],[~redvine]\n\nI think the challenge here is that different deployments have different levels of 1) BR split; 2) BRs interleaving; 3) zombie storages. E.g. BR split might be completely turned off in configuration, and BR interleaving heavily depends on how busy the NN is.\n\n*a)* Patch v5 (from Colin) works well when BRs rarely interleave. In the worst case, a zombie storage could remain on NN for several full-BR cycles.\n*b)* Patch v4 (from Vinitha) works well when BRs are rarely split (or split into many RPCs). The worst case is where each BR is split into a small number of RPCs -- if each full BR is split into {{n}} RPCs, the relative overhead is 1 / n, in terms of # of RPCs.\n*c)* As Colin suggested, we can also extend first / last RPC in a full BR with the list of storages. By doing that we are adding overhead to every BR RPC (it needs to mark whether it has the list). Theoretically, the worst-case-overhead is to add this to an empty BR.\n\nSo overall, I think c) is the best long term solution, because its worst case scenario is the least likely to happen, and the consequence is the most tolerable. It is more complex than b) though. Given the size of the v4 patch, are we OK to go with b) (v4 patch) first and do c) as a follow-on?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zhz","name":"zhz","key":"zhz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zhz&avatarId=20493","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zhz&avatarId=20493","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zhz&avatarId=20493","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zhz&avatarId=20493"},"displayName":"Zhe Zhang","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-06-02T21:34:48.941+0000","updated":"2016-06-02T21:34:48.941+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15317644","id":"15317644","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"Sorry for the slow reply.  I was on vacation.\n\nLike I said earlier, I am -1 on patch v4 because adding new RPCs is bad for NN scalability.  I also think it's a much larger patch than needed.  It doesn't make sense as an interim solution.\n\nWhy don't we commit v5 and discuss improvements in a follow-on JIRA?  So far there is no concrete argument against it other than the fact that it doesn't remove zombie storages in the case where BRs are interleaved.  But we already know that BR interleaving is an extremely rare corner case-- otherwise you can bet that this JIRA would have attracted a lot more attention.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-06-07T01:45:47.048+0000","updated":"2016-06-07T01:45:47.048+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15321613","id":"15321613","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Sounds like you were on -1 spree lately, [~cmccabe]. Hope you are alright.\n\nHere is why I think we should not commit your patch.\n# The whole approach of keeping the state for the block report processing on the NameNode is error-prone. It assumes at-once execution, and therefore when block reports interleave the BR-state gets _messed up_. Particularly, the BitSet used to mark storages, which have been processed, can be reset during interleaving multiple times and cannot be used to count storages in the report. In current implementation the _messing-up_ of BR-state leads to false positive detection of a zombie storage and removal of a perfectly valid one.\n# Your patch leaves the _messing-up_ of the BR-state in place (the BitSet is still inconsistent). It only tweaks it to avoid the false-positive. It still allows false-negatives, which lead to not detecting a zombie when it actually is present.\n# So the correct solution for the problem is to remove the BR-state altogether, which is achieved in Vinita's patch. And if we have a better solution why settle on a temporary work-around. It may be a bigger change, but only because it removes the invalid logic related to the BR-state.\n\nIt seems that you don't or don't want to understand reasoning around adding separate storage reporting RPC call. At least you addressed it only by repeating your -1. For the third time. And did not respond to [~zhz]'s proposal to merge the storage reporting RPC into one of the storage reports in the next jira.\nGiven that and in order to move forward, we should look into making changes to the last BR RPC call, which should now also report all storages.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-06-08T22:58:41.739+0000","updated":"2016-06-08T22:58:41.739+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15322994","id":"15322994","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"[~shv], comments about me \"being on a -1 spree\" are not constructive and they don't do anything to help the tone of the discussion.  We've been talking about this since April and my views have been consistent the whole time.  I have a solution, but I am open to other solutions as long as they don't have big disadvantages.\n\nbq. The whole approach of keeping the state for the block report processing on the NameNode is error-prone. It assumes at-once execution, and therefore when block reports interleave the BR-state gets messed up. Particularly, the BitSet used to mark storages, which have been processed, can be reset during interleaving multiple times and cannot be used to count storages in the report. In current implementation the messing-up of BR-state leads to false positive detection of a zombie storage and removal of a perfectly valid one.\n\nBlock report processing is inherently about state.  It is inherently stateful.  It is a mechanism for the DN to synchronize its entire block state with the block state on the NN.  Interleaved block reports are very bad news, even if this bug didn't exist, because they mean that the state on the NN will go \"back in time\" for some storages, rather than monotonically moving forward in time.  This may lead the NN to make incorrect (and potentially irreversible) decisions like deleting a replica somewhere because it appears to exist on an old stale interleaved block report.  Keep in mind that these old stale interleaved FBRs will override any incremental BRs that were sent in the meantime!\n\nInterleaved block reports also potentially indicate that the DNs are sending new full block reports before the last ones have been processed.  So either our FBR retransmission mechanism is screwed up and is spewing a firehose of FBRs at an unresponsive NameNode (making it even more unresponsive, no doubt), or the NN can't process an FBR in the extremely long FBR sending period.  Both of these explanations mean that you've got a cluster which has serious, serious problems and you should fix it right now.\n\nThat's the reason why people are not taking this JIRA as seriously as they otherwise might-- because they know that interleaved FBRs mean that something is very wrong.  And you are consistently ignoring this feedback and telling us how my patch is bad because it doesn't perform zombie storage elimination when FBRs get interleaved.\n\nbq. It seems that you don't or don't want to understand reasoning around adding separate storage reporting RPC call. At least you addressed it only by repeating your -1. For the third time. And did not respond to Zhe Zhang's proposal to merge the storage reporting RPC into one of the storage reports in the next jira.  Given that and in order to move forward, we should look into making changes to the last BR RPC call, which should now also report all storages.\n\nI am fine with adding storage reporting to any of the existing FBR RPCs.  What I am not fine with is adding another RPC which will create more load.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-06-09T17:59:31.905+0000","updated":"2016-06-09T17:59:31.905+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15330667","id":"15330667","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Colin, you seem to imply that I ignored some of your questions. I don't see which. Could you please formulate your question so that I could answer it, if you have any.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-06-14T21:34:53.082+0000","updated":"2016-06-14T21:34:53.082+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15333146","id":"15333146","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"I uploaded another patch (006) that is similar to 005 but doesn't add any new RPCs. Please review it. \nIn the case that block reports are split, information about other storages in the DN is sent along with the last storage BR RPC.  {{TestAddOverReplicatedStripedBlocks}} test passes with this patch since zombie storages are removed even if there are stale storages. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-06-16T05:39:17.456+0000","updated":"2016-06-16T05:39:17.456+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15333297","id":"15333297","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 32s {color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 24s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 48s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 32s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 1m 1s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 12s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 51s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 2s {color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 49s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 41s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 41s {color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 27s {color} | {color:red} hadoop-hdfs-project/hadoop-hdfs: The patch generated 4 new + 368 unchanged - 12 fixed = 372 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 56s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 9s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 5s {color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 3s {color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 90m 27s {color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 17s {color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 112m 3s {color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.TestAsyncHDFSWithHA |\n|   | hadoop.metrics2.sink.TestRollingFileSystemSinkWithHdfs |\n| Timed out junit tests | org.apache.hadoop.hdfs.TestLeaseRecovery2 |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:e2f6409 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12810994/HDFS-10301.006.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 0eace52e9fa4 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 2449db5 |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/15794/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/15794/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/15794/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/15794/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/15794/console |\n| Powered by | Apache Yetus 0.3.0   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-06-16T07:40:39.253+0000","updated":"2016-06-16T07:40:39.253+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15334862","id":"15334862","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Failed tests don't seem to be introduced by the patch. These tests pass locally with the patch. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-06-16T22:43:58.706+0000","updated":"2016-06-16T22:43:58.706+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15335100","id":"15335100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"{code}\n+        if (context.getTotalRpcs() == context.getCurRpc() + 1) {\n+          long leaseId = this.getBlockReportLeaseManager().removeLease(node);\n+          BlockManagerFaultInjector.getInstance().\n+              removeBlockReportLease(node, leaseId);\n         }\n+        LOG.debug(\"Processing RPC with index \" + context.getCurRpc()\n+            + \" out of total \" + context.getTotalRpcs() + \" RPCs in \"\n+            + \"processReport 0x\" +\n+            Long.toHexString(context.getReportId()));\n       }\n{code}\nThis won't work in the presence of reordered RPCs.  If the RPCs are reordered so that curRpc 1 arrives before curRpc 0, the lease will be removed and RPC 0 will be rejected.\n\n{code}\n    for (int r = 0; r < reports.length; r++) {\n      final BlockListAsLongs blocks = reports[r].getBlocks();\n      if (blocks != BlockListAsLongs.STORAGE_REPORT_ONLY) {\n{code}\nUsing object equality to compare two {{BlockListAsLongs}} objects is very surprising to anyone reading the code.  In general, I find the idea of overloading the block list to sometimes not be a block list to be very weird and surprising.  If we are going to do it, it certainly needs a lot of comments in the code to explain what's going on.  I think it would be clearer and less error-prone just to add an optional list of storage ID strings in the {{.proto}} file.\n\n{code}\n    if (nn.getFSImage().isUpgradeFinalized()) {\n      Set<String> storageIDsInBlockReport = new HashSet<>();\n      if (context.getTotalRpcs() == context.getCurRpc() + 1) {\n        for (StorageBlockReport report : reports) {\n          storageIDsInBlockReport.add(report.getStorage().getStorageID());\n        }\n        bm.removeZombieStorages(nodeReg, context, storageIDsInBlockReport);\n      }\n    }\n{code}\nThis isn't going to work in the presence of reordered RPCs, is it?  If curRpc 1 appears before curRpc 0, we'll never get into this clause at all and so zombies won't be removed.  Considering you are so concerned that my patch didn't solve the interleaved and/or reordered RPC case, this seems like something you should solve.  I also don't understand what the rationale for ignoring zombies during an upgrade is.  Keep in mind zombie storages can lead to data loss under some conditions (see HDFS-7960 for details).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-06-17T00:43:19.553+0000","updated":"2016-06-17T00:43:19.553+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15337302","id":"15337302","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Colin, let me introduce to you [~redvine]. She works in Hadoop team at LinkedIn. This is her first encounter with HDFS community. Let's try to make it pleasant enough so that she wished to come back and work with us more.\n\n??Considering you are so concerned that my patch didn't solve ...??\n\nI think this grumbling is referred to me [~shv]. Colin, just to clarify, the last patch was submitted by [~redvine]. She is a different person, not [~shv]. If you have issues with me let's try to keep it separate.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-06-18T00:26:12.969+0000","updated":"2016-06-18T00:26:12.969+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15340868","id":"15340868","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"The \"you\" in that sentence was targetted at you, [~shv].  I realized that [~redvine] wrote the patch, but I spoke imprecisely.  Sorry for the confusion.\n\nbq. This is her first encounter with HDFS community. Let's try to make it pleasant enough so that she wished to come back and work with us more.\n\nTo be honest, I don't think this is a very good newbie JIRA.  It is clearly a very controversial issue, and it's also a very difficult piece of code with a lot of subtlety.  Since you clearly have strong opinions about this JIRA, I believe it would be more appropriate for you to post patches implementing your ideas yourself.  But that is up to you, of course.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-06-21T01:43:26.555+0000","updated":"2016-06-21T01:43:26.555+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15347427","id":"15347427","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Thanks for the review Colin. I have addressed your comments below:\n{quote}\nThis won't work in the presence of reordered RPCs. If the RPCs are reordered so that curRpc 1 arrives before curRpc 0, the lease will be removed and RPC 0 will be rejected.\n{quote}\n\nIf curRpc 1 arrives before curRpc 0, the lease will be removed and {{node.leaseId}} will be set to zero. I have modified BlockReportLeaseManager to return true when  {{node.leaseId = 0}}. I explained the same in my previous comment:\nhttps://issues.apache.org/jira/browse/HDFS-10301?focusedCommentId=15299255&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15299255\nPlease let me know if you see any issues with this approach.\n\n{quote}\nUsing object equality to compare two BlockListAsLongs objects is very surprising to anyone reading the code.\n{quote}\n \nI uploaded a new patch (007) to address this issue. I have added a method {{isStorageReportOnly()}} to BlockListsAsLongs that returns true only for STORAGE_REPORT_ONLY BlockListsAsLong.\n\nIn the upgrade case, there is no way to detect the zombie storages since the old DNs do not send the information about the storages in the BR in the last RPC. In practice, hot-swapping of DN drives and upgrading the DN may not happen at the same time. \n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-06-23T23:34:22.542+0000","updated":"2016-06-23T23:34:22.542+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15347525","id":"15347525","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 43s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 29s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 49s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 41s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 54s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 42s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 42s{color} | {color:green} the patch passed {color} |\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 29s{color} | {color:orange} hadoop-hdfs-project/hadoop-hdfs: The patch generated 2 new + 368 unchanged - 12 fixed = 370 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 47s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 55s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 71m 23s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 19s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 90m  9s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.datanode.TestBpServiceActorScheduler |\n|   | hadoop.hdfs.tools.offlineEditsViewer.TestOfflineEditsViewer |\n|   | hadoop.hdfs.server.datanode.TestLargeBlockReport |\n|   | hadoop.hdfs.server.namenode.TestEditLog |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:85209cc |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12812962/HDFS-10301.007.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 30154e0a37c6 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 0b9edf6 |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/15898/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/15898/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/15898/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/15898/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-06-24T01:18:52.471+0000","updated":"2016-06-24T01:18:52.471+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15371327","id":"15371327","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"[~cmccabe] this jira needs some action from you, because you are blocking it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-11T18:13:52.408+0000","updated":"2016-07-11T18:13:52.408+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15371697","id":"15371697","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"I apologize for the delays in reviewing.  I am looking at HDFS-10301.007.patch.  Is this the latest patch?\n\nI don't understand the purpose behind {{BlockListAsLongs#isStorageReportOnly}}.  This function is never called.  This state doesn't seem to be stored anywhere in what is sent over the wire, either.  Is this an idea that was half-implemented, or did I miss something?\n\n{code}\n      if (blocks != BlockListAsLongs.STORAGE_REPORT_ONLY) {\n{code}\nAgain, this is comparing by object reference equality not deep equality.  This is comment I also made in the last review that wasn't addressed.\n\nMy comment earlier is that I didn't want to overload block reports to be storage reports.  A storage report is not a kind of block report.  They shouldn't be using the same protobuf objects or Java data structures.  This isn't addressed in the current patch, which continues the confusing practice of using the same data structure for both.\n\nbq. In the upgrade case, there is no way to detect the zombie storages since the old DNs do not send the information about the storages in the BR in the last RPC. In practice, hot-swapping of DN drives and upgrading the DN may not happen at the same time.\n\nThe set of storages that the DN reports can change for a variety of reasons, most of which are not hotswap related.  One reason is because a drive has become bad and got kicked out of the set of currently active volumes.  Another reason is because the DN got taken down by the administrator, a volume got removed, and the DN was brought back up.  It's rather frustrating that your patch doesn't support zombie storage removal during upgrade, and mine does, and yet [~shv] is blocking my patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-11T21:41:59.354+0000","updated":"2016-07-11T21:41:59.354+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15375518","id":"15375518","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"I apologize for attaching a wrong patch. Thanks for pointing it out [~cmccabe]. I uploaded the correct patch now (008) that calls the isStorageReport method. Adding an optional list of storage ID strings in the .proto file would add more overhead since these optional parameters would have to be sent with default values for all other block report RPCs in addition to the last RPC of the block report. I can add more comments in the code to explain what's going on. Thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-13T18:41:43.547+0000","updated":"2016-07-13T18:41:43.547+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15375617","id":"15375617","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 35s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 49s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 30s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 47s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 28s{color} | {color:orange} hadoop-hdfs-project/hadoop-hdfs: The patch generated 2 new + 368 unchanged - 12 fixed = 370 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 51s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 55s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 61m 58s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 82m 35s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.metrics2.sink.TestRollingFileSystemSinkWithHdfs |\n|   | hadoop.hdfs.server.namenode.TestEditLog |\n|   | hadoop.hdfs.TestFileChecksum |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12817774/HDFS-10301.008.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux f991214eeeeb 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / eb47163 |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/16045/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16045/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16045/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16045/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-13T19:46:18.357+0000","updated":"2016-07-13T19:46:18.357+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15380310","id":"15380310","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Reviewed latest patch. Got a few nits:\n# In {{BlockManager.removeZombieStorages()}} you should add a check {{if(node == null)}}. The node could have been deleted while we were not holding {{writeLock}}.\n# {{DatanodeDescriptor.removeZombieStorages()}} methods does not need to be public. Should be package private.\n# Remove empty line change in {{BPServiceActor.blockReport()}}.\nAlso the comment here is confusing. You might want to clarify it.\n# checkstyle warning tells that either {{STORAGE_REPORT}} should be declared {{final}} or it should not be all-capital. I think {{final}} makes sense.\n\nAlso I think that [~cmccabe]'s veto, formulated as\n??I am -1 on a patch which adds extra RPCs.??\nis fully addressed now. The storage report was added to the last RPC representing a single block report. The last patch does not add extra RPCs.\nSo I plan to commit this three days from today. Given of course the nits above are fixed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-15T23:40:55.274+0000","updated":"2016-07-15T23:40:55.274+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15382959","id":"15382959","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Attached a new patch (009) addressing Konstantin's comments. I cannot make STORAGE_REPORT final since it needs to be referenced from a static context. Instead, I renamed it to 'Storage_Report'. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-18T20:02:18.329+0000","updated":"2016-07-18T20:02:18.329+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15383161","id":"15383161","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"All-capital identifiers are reserved for constants, that is {{static final STORAGE_REPORT}}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-18T22:00:54.548+0000","updated":"2016-07-18T22:00:54.548+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15383224","id":"15383224","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"I have made STORAGE_REPORT {{static final}} in the 010 patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-18T22:47:44.823+0000","updated":"2016-07-18T22:47:44.823+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15383300","id":"15383300","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 13m  6s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 29s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 52s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 33s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 14s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 53s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 59s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 49s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 49s{color} | {color:green} the patch passed {color} |\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 30s{color} | {color:orange} hadoop-hdfs-project/hadoop-hdfs: The patch generated 4 new + 368 unchanged - 12 fixed = 372 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 56s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  1s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 59m 54s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 19s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 93m 49s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.TestFileCreationDelete |\n|   | hadoop.hdfs.server.namenode.TestEditLog |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818632/HDFS-10301.009.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 2c2af2824bb8 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / c2bcffb |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/16081/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16081/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16081/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16081/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-18T23:37:59.723+0000","updated":"2016-07-18T23:37:59.723+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15383413","id":"15383413","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockReportLeaseManager.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockReportLeaseManager.java\n{code}\n@@ -308,10 +308,10 @@ public synchronized boolean checkLease(DatanodeDescriptor dn,\n       return false;\n     }\n     if (node.leaseId == 0) {\n-      LOG.warn(\"BR lease 0x{} is not valid for DN {}, because the DN \" +\n-               \"is not in the pending set.\",\n-               Long.toHexString(id), dn.getDatanodeUuid());\n-      return false;\n+      LOG.debug(\"DN {} is not in the pending set because BR with \"\n+              + \"lease 0x{} was processed out of order\",\n+          dn.getDatanodeUuid(), Long.toHexString(id));\n+      return true;\n     }\n{code}\n\nThere are other reasons why {{node.leaseId}} might be 0, besides block reports getting processed out of order.  For example, an RPC could have gotten duplicated by something in the network.  Let's not change the existing error message.\n\n{code}\n            StorageBlockReport[] lastSplitReport =\n                new StorageBlockReport[perVolumeBlockLists.size()];\n            // When block reports are split, the last RPC in the block report\n            // has the information about all storages in the block report.\n            // See HDFS-10301 for more details. To achieve this, the last RPC\n            // has 'n' storage reports, where 'n' is the number of storages in\n            // a DN. The actual block replicas are reported only for the\n            // last/n-th storage.\n{code}\nWhy do we have to use such a complex and confusing approach?  Like I commented earlier, a report of the existing storages is not the same as a block report.  Why are we creating {{BlockListAsLongs}} objects that aren't lists of blocks?\n\nThere is a much simpler approach, which is just adding a list of storage IDs to the block report RPC by making a backwards-compatible protobuf change.  It's really easy:\n\n{code}\n+repeated String allStorageIds = 8;\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-19T01:03:44.300+0000","updated":"2016-07-19T01:03:44.300+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15383447","id":"15383447","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (/) *{color:green}+1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 24s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 25s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 49s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 30s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 45s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 27s{color} | {color:orange} hadoop-hdfs-project/hadoop-hdfs: The patch generated 2 new + 368 unchanged - 12 fixed = 370 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 51s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 58m 58s{color} | {color:green} hadoop-hdfs in the patch passed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 19s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 79m 20s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818684/HDFS-10301.010.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux d118fdcd3ae4 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 92fe2db |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/16082/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16082/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16082/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-19T01:31:11.769+0000","updated":"2016-07-19T01:31:11.769+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15383461","id":"15383461","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"> adding a list of storage IDs to the block report RPC by making a backwards-compatible protobuf change.\n\nThe storage ids are already there in current BR protobuf. Why would you want a new field for that. You will need to duplicate all storage ids in case of full block report, when it is not split into multiple RPCs. Seems confusing and inefficient to me.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-19T01:50:18.987+0000","updated":"2016-07-19T01:50:18.987+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15384609","id":"15384609","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Hey [~redvine], \n# looks like checkstyle found two long lines in {{BlockManager}}.\n# Also makes sense to keep the log message unchanged as [~cmccabe] suggested.\n\nI am +1 on the patch after this is fixed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-19T18:05:42.562+0000","updated":"2016-07-19T18:05:42.562+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15384611","id":"15384611","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"> For example, an RPC could have gotten duplicated by something in the network. \n[~cmccabe] Doesn't TCP ignore duplicate packets? Can you explain how this can happen? If the RPC does get duplicated, then we shouldn't return true right when {{node.leaseId == 0}} ?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-19T18:06:43.756+0000","updated":"2016-07-19T18:06:43.756+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15384955","id":"15384955","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Patch 011 fixes the two checkstyle issues and the log message.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-19T22:01:39.738+0000","updated":"2016-07-19T22:01:39.738+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15385100","id":"15385100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"This looks good to me. +1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-20T00:15:59.502+0000","updated":"2016-07-20T00:15:59.502+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15385120","id":"15385120","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=liuml07","name":"liuml07","key":"liuml07","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=liuml07&avatarId=29203","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=liuml07&avatarId=29203","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=liuml07&avatarId=29203","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=liuml07&avatarId=29203"},"displayName":"Mingliang Liu","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for the patch, [~redvine]. I'm catching up all the insightful discussions here and learned a lot.\n\n1. {{FSImage#isUpgradeFinalized}} is not volatile and {{nn.getFSImage().isUpgradeFinalized()}} is not holding the read lock in {{NameNodeRpcServer#blockReport()}}. Is this a problem? This is not very related to this issue though.\n\n2. {code:title=TestNameNodePrunesMissingStorages.java}\n   for (Future<IOException> future: futureList) {\n     try {\n       future.get();\n     } catch (Exception e) {\n       LOG.error(\"Processing block report failed due to {}\", e);\n     }\n   }\n{code}\nI think we need to interpret the return value of the future.get()?\nIf you’re gonna process exceptions thrown by the task, I think we don’t need to return it explicitly as {{Callable.call()}} is permitted to throw checked exceptions which get propagated back to the calling thread (wrapped as {{ExecutionException}} IIRC).\n\n3. {code:title=TestNameNodePrunesMissingStorages.java}\n      DatanodeStorageInfo[] newStorageInfos = dnDescriptor.getStorageInfos();\n      Assert.assertEquals(storageInfos.length, newStorageInfos.length);\n      for (int i = 0; i < storageInfos.length; i++) {\n        Assert.assertTrue(storageInfos[i] == newStorageInfos[i]);\n      }\n{code}\ndo you mean \n{code}\nAssert.assertArrayEquals(storageInfos, dnDescriptor.getStorageInfos());\n{code}\n\nh6. Minor comments:\n# We should add javadoc for {{STORAGE_REPORT}} as it’s not that straightforward defined in {{BlockListAsLongs}} abstract class.\n# {{assert (blockList.getNumberOfBlocks() == -1);}} I believe we don’t need to use assert statement along with {{Assert.asserEquals()}}?\n# Always use slf4j placeholder in the code as you are doing int he latest patch. Specifically \n{code:title=BlockManager.java}\n        LOG.debug(\"Processing RPC with index \" + context.getCurRpc()\n\t            + \" out of total \" + context.getTotalRpcs() + \" RPCs in \"\n\t            + \"processReport 0x\" +\n\t            Long.toHexString(context.getReportId()));\n{code}\nWe MUST use placeholder here to avoid string construction if the log level is INFO and above.\nMore examples are:{{LOG.info(\"Block pool id: \" + blockPoolId);}} can be simplified as {{LOG.info(\"Block pool id: {}“, blockPoolId);}}\nAnd for exceptions we don’t need placeholder if it’s the last parameter. So {{LOG.error(\"Processing block report failed due to {}\", e);}} can be {{LOG.error(\"Processing block report failed due to \", e);}}\n# I see unnecessary blank lines in the v11 patch.\n# I see not addressed long line checkstyle warnings in {{BlockManager}}\n# {code}\nif (nn.getFSImage().isUpgradeFinalized()\n  Set<String> storageIDsInBlockReport = new HashSet<>();\n   if (context.getTotalRpcs() == context.getCurRpc() + 1) {\n{code}\ncan be \n{code} if (nn.getFSImage().isUpgradeFinalized() &&\n    context.getTotalRpcs() == context.getCurRpc() + 1) {\n  Set<String> storageIDsInBlockReport = new HashSet<>();\n{code}\n# {code:title=BPServiceActor.java}\nDatanodeCommand cmd;\nif () {\n  cmd = …\nelse {\n  cmd = …\n}\n{code}\nLet’s make {{cmd}} final.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=liuml07","name":"liuml07","key":"liuml07","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=liuml07&avatarId=29203","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=liuml07&avatarId=29203","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=liuml07&avatarId=29203","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=liuml07&avatarId=29203"},"displayName":"Mingliang Liu","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-20T00:30:14.718+0000","updated":"2016-07-20T00:30:14.718+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15385631","id":"15385631","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 31s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m  4s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 52s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 44s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  1s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 30s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 368 unchanged - 12 fixed = 368 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 49s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 72m  6s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 18s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 92m 28s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.datanode.TestDataNodeMXBean |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818943/HDFS-10301.011.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 0cd8f805076b 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 8fbe6ec |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16094/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16094/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16094/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-20T09:52:57.124+0000","updated":"2016-07-20T09:52:57.124+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15385763","id":"15385763","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 20s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 34s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 48s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 32s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  2s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 15s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 51s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 55s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 27s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 368 unchanged - 12 fixed = 368 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 54s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 55s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 59m 47s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 21s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 80m 52s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.namenode.TestEditLog |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818943/HDFS-10301.011.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 1dc89d76ac9d 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 9ccf935 |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16095/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16095/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16095/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-20T12:25:15.986+0000","updated":"2016-07-20T12:25:15.986+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15385954","id":"15385954","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 22s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 40s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 47s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 30s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 54s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 44s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 54s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 28s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 368 unchanged - 12 fixed = 368 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 48s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 47s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 69m 17s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 18s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 88m 25s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.namenode.TestReconstructStripedBlocks |\n|   | hadoop.metrics2.sink.TestRollingFileSystemSinkWithHdfs |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818943/HDFS-10301.011.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 0abbdfa64137 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 37362c2 |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16096/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16096/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16096/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-20T14:33:25.163+0000","updated":"2016-07-20T14:33:25.163+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15386156","id":"15386156","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 28s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 57s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 47s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 42s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 55s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 48s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 27s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 368 unchanged - 12 fixed = 368 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 49s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 53s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 69m 27s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 20s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 89m 17s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.namenode.TestEditLog |\n|   | hadoop.hdfs.server.datanode.TestDataNodeErasureCodingMetrics |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818943/HDFS-10301.011.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 2d088f995b16 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 37362c2 |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16097/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16097/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16097/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-20T16:31:46.386+0000","updated":"2016-07-20T16:31:46.386+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15386262","id":"15386262","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 48s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 51s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 32s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 59s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 14s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  3s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  0s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 27s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 368 unchanged - 12 fixed = 368 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 49s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 46s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 62m 57s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 40s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 85m 20s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.namenode.ha.TestBootstrapStandby |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818943/HDFS-10301.011.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 1697f8ceb2a6 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 1c9d2ab |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16099/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16099/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16099/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-20T17:36:35.449+0000","updated":"2016-07-20T17:36:35.449+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15386306","id":"15386306","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. [~redvine] asked: Colin P. McCabe Doesn't TCP ignore duplicate packets? Can you explain how this can happen? If the RPC does get duplicated, then we shouldn't return true right when node.leaseId == 0 ?\n\nThat is a fair point.  However, the retry logic in the RPC system could resend the message if the NN did not respond within a certain amount of time.  Or there could just be a bug which leads to the DN sending full block reports when it shouldn't.  In any case, we cannot assume that reordered messages are the problem.\n\nbq. [~shv] wrote:  Also I think that Colin P. McCabe's veto, formulated as I am -1 on a patch which adds extra RPCs. is fully addressed now. The storage report was added to the last RPC representing a single block report. The last patch does not add extra RPCs.\n\nYes, this patch addresses my concerns.  I withdraw my -1.\n\nbq. [~shv] wrote: The storage ids are already there in current BR protobuf. Why would you want a new field for that. You will need to duplicate all storage ids in case of full block report, when it is not split into multiple RPCs. Seems confusing and inefficient to me.\n\nA new field would be best because we would avoid creating fake BlockListAsLong objects with length -1, and re-using protobuf fields for purposes they weren't intended for.  A list of storage IDs is not a block report or a list of blocks, and using the same data structures is very confusing.  If you want to optimize by not sending the list of storage reports separately when the block report has only one RPC, that's easy to do.  Just check if numRpcs == 1 and don't set or check the optional list of strings in that case.  I'm not going to block the patch over this, but I do think people reading this will wonder what you were thinking if you overload the PB fields in this way.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-20T17:57:29.449+0000","updated":"2016-07-20T17:57:29.449+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15386342","id":"15386342","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 22s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 11s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 49s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 53s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 13s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 48s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 49s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 27s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 368 unchanged - 12 fixed = 368 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 50s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 60m 44s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 21s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 80m 49s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.namenode.ha.TestBootstrapStandby |\n|   | hadoop.hdfs.server.balancer.TestBalancer |\n|   | hadoop.hdfs.server.namenode.ha.TestHAFsck |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818943/HDFS-10301.011.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 6d72422a28d7 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 1c9d2ab |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16101/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16101/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16101/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-20T18:12:40.112+0000","updated":"2016-07-20T18:12:40.112+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15386538","id":"15386538","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 57s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 53s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 36s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  1s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 11s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 50s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 27s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 368 unchanged - 12 fixed = 368 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 58s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 55s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 60m 55s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 21s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 81m 27s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.namenode.TestEditLog |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818943/HDFS-10301.011.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux c29b1d2b82aa 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 38128ba |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16106/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16106/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16106/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-20T20:13:02.918+0000","updated":"2016-07-20T20:13:02.918+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15386601","id":"15386601","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"I am canceling patch available, because Jenkins is spinning the build all over again. Some bug there?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-20T20:54:50.774+0000","updated":"2016-07-20T20:54:50.774+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15386644","id":"15386644","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 19s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 28s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 52s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 55s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 58s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 28s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 368 unchanged - 12 fixed = 368 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 49s{color} | {color:red} patch/hadoop-hdfs-project/hadoop-hdfs no findbugs output file (hadoop-hdfs-project/hadoop-hdfs/target/findbugsXml.xml) {color} |\n| {color:red}-1{color} | {color:red} javadoc {color} | {color:red}  1m  1s{color} | {color:red} hadoop-hdfs-project_hadoop-hdfs generated 7 new + 0 unchanged - 0 fixed = 7 total (was 0) {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 17m 30s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 18s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 37m 48s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Timed out junit tests | org.apache.hadoop.hdfs.TestLeaseRecovery2 |\n|   | org.apache.hadoop.hdfs.TestDatanodeDeath |\n|   | org.apache.hadoop.hdfs.TestPread |\n|   | org.apache.hadoop.hdfs.TestBlockStoragePolicy |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818943/HDFS-10301.011.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux ea46cbba5d17 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 38128ba |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| findbugs | https://builds.apache.org/job/PreCommit-HDFS-Build/16112/artifact/patchprocess/patch-findbugs-hadoop-hdfs-project_hadoop-hdfs.txt |\n| javadoc | https://builds.apache.org/job/PreCommit-HDFS-Build/16112/artifact/patchprocess/diff-javadoc-javadoc-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16112/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16112/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16112/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-20T21:16:13.951+0000","updated":"2016-07-20T21:16:13.951+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15386656","id":"15386656","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 17s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 54s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 30s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 55s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 46s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 28s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 368 unchanged - 12 fixed = 368 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 49s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 49s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 61m 39s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 81m 18s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.namenode.TestEditLog |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12818943/HDFS-10301.011.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux c1a40f43f99c 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 38128ba |\n| Default Java | 1.8.0_91 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16111/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16111/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16111/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-20T21:24:09.460+0000","updated":"2016-07-20T21:24:09.460+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15386702","id":"15386702","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"My general approach to protobuf structures is to minimize changes, especially with redundant fields.\nIt is very easy to add fields, as you demonstrated, but you can never remove them.\nSo add them only if you absolutely must.\nBut different people can of course have different approaches.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-20T22:00:35.224+0000","updated":"2016-07-20T22:00:35.224+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15386782","id":"15386782","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andrew.wang","name":"andrew.wang","key":"andrew.wang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=andrew.wang&avatarId=19230","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andrew.wang&avatarId=19230","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andrew.wang&avatarId=19230","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andrew.wang&avatarId=19230"},"displayName":"Andrew Wang","active":true,"timeZone":"America/Los_Angeles"},"body":"My understanding of PB is that we have a fixed 4 bits for tags, so there isn't really overhead to adding more PB fields as long as they are optional or repeated. See: https://developers.google.com/protocol-buffers/docs/encoding\n\nGiven that, I'd err on the side of readability rather than trying to reuse existing fields. Since block reports are a pretty infrequent operation, I wouldn't stress over a few bytes if we end up filling a required field with a dummy value. I agree with Colin that the current overloading of BlockListAsLongs is confusing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andrew.wang","name":"andrew.wang","key":"andrew.wang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=andrew.wang&avatarId=19230","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andrew.wang&avatarId=19230","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andrew.wang&avatarId=19230","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andrew.wang&avatarId=19230"},"displayName":"Andrew Wang","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-20T23:12:31.773+0000","updated":"2016-07-20T23:12:31.773+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15386845","id":"15386845","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"As I commented earlier I am not in favor of adding redundant fields. The readability argument is also quite questionable, because you end up either filling storage information in two fields, or sending it in different fields for different types of block report messages.\nIn more details:\n- Suppose we introduced {{repeated String allStorageIds}}.\n- In full report (which is not split into multiple RPCs) we already have all storage ids listed in StorageBlockReports. And we don't need {{allStorageIds}}. If we nevertheless fill {{allStorageIds}} it will be confusing.\n- In a report that is split into multiple RPCs we fill {{allStorageIds}}, because only one storage is reported. So in this case we will use a different field to pass storageIDs.\n- I think code is more _readable_ when the same information is passed via the same fields, and is not duplicated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-20T23:55:50.568+0000","updated":"2016-07-20T23:55:50.568+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15386922","id":"15386922","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Thanks for the review [~liuml07]. I have attached a new patch (012) that addresses your comments.\n\n> FSImage#isUpgradeFinalized is not volatile and nn.getFSImage().isUpgradeFinalized() is not holding the read lock in NameNodeRpcServer#blockReport(). Is this a problem? This is not very related to this issue though.\n\nMy patch does not make any changes to the isUpgradeFinalized method. If this is a problem, we should open another JIRA to address it.\n\n> If you’re gonna process exceptions thrown by the task, I think we don’t need to return it explicitly as Callable.call()is permitted to throw checked exceptions\n\nThanks for the good suggestion! I have modified the Callable.call() to return a DataNodeCommand and throw IOException. I don't explicitly catch the exception since junit will take care of it.\n\n> I think we need to interpret the return value of the future.get()?\n\n future.get() returns DataNodeCommand which we don’t take care about and don’t need to interpret. \n\n> do you mean Assert.assertArrayEquals(storageInfos, dnDescriptor.getStorageInfos());\n\nYes, thanks for that! I have made the change.\n\n> We should add javadoc for STORAGE_REPORT as it’s not that straightforward defined in BlockListAsLongsabstract class.\n\nAdded the doc\n\n> assert (blockList.getNumberOfBlocks() == -1); I believe we don’t need to use assert statement along with Assert.asserEquals()?\n\nI changed the assert to Assert.assertEquals. However, the existing test does use assert as well {{assert(numBlocksReported >= expectedTotalBlockCount);}}\n\n> Always use slf4j placeholder in the code as you are doing int he latest patch. \n\nThanks for the tip! I noticed that placeholders were not used consistently. I tried to maintain the logging style that was already used in that particular file. I have modified all the log messages in my patch to use placeholders wherever possible. Sl4j was not used in some places,  for instance in TestNameNodePrunesMissingStorages.\n\n> I see unnecessary blank lines in the v11 patch.I see not addressed long line checkstyle warnings in BlockManager\n\nI noticed two blank lines in TestNameNodePrunesMissingStorages inv11 patch. I removed that. I do not see any checkstyle warnings.\n\n> if (nn.getFSImage().isUpgradeFinalized() &&\n    context.getTotalRpcs() == context.getCurRpc() + 1) {\n  Set<String> storageIDsInBlockReport = new HashSet<>();\n\nCombined as suggested.\n\n> BPServiceActor.java Let’s make cmd final.\n\nSince cmd was not final previously, I have left it unchanged. \n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-21T00:53:22.111+0000","updated":"2016-07-21T00:53:22.111+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15392845","id":"15392845","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 10m 58s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 45s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 33s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 54s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 19s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 49s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 27s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 368 unchanged - 12 fixed = 368 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 48s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 65m  0s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 23s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 88m 51s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.web.TestWebHdfsTimeouts |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12819238/HDFS-10301.012.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux b189d80c0730 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 703fdf8 |\n| Default Java | 1.8.0_101 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16171/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16171/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16171/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-25T23:30:03.383+0000","updated":"2016-07-25T23:30:03.383+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15392868","id":"15392868","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"{{TestWebHdfsTimeouts}} failure does not look to be related to the changes.\nThe last patch looks good.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-25T23:45:35.154+0000","updated":"2016-07-25T23:45:35.154+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15393058","id":"15393058","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"I just committed this trunk. Congratulations [~redvine]!\nAlso ported to branch-2 and branch-2.8.\nWill keep it open while a port to branch-2.7 / 6 is in the works.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-26T02:07:26.004+0000","updated":"2016-07-26T02:07:26.004+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15393060","id":"15393060","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |\n| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  6s{color} | {color:red} HDFS-10301 does not apply to branch-2. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12820078/HDFS-10301.branch-2.patch |\n| JIRA Issue | HDFS-10301 |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16182/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-26T02:08:37.534+0000","updated":"2016-07-26T02:08:37.534+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15393073","id":"15393073","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Hadoop-trunk-Commit #10148 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/10148/])\nHDFS-10301. Interleaving processing of storages from repeated block (shv: rev 85a20508bd04851d47c24b7562ec2927d5403446)\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java\n* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestBlockManager.java\n* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDnRespectsBlockReportSplitThreshold.java\n* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestNNHandlesBlockReportPerStorage.java\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeDescriptor.java\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockReportLeaseManager.java\n* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestNameNodePrunesMissingStorages.java\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-26T02:20:59.569+0000","updated":"2016-07-26T02:20:59.569+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15400179","id":"15400179","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Added a patch for branch-2.7.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-29T22:58:24.875+0000","updated":"2016-07-29T22:58:24.875+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15400357","id":"15400357","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 19s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 12m  8s{color} | {color:green} branch-2.7 passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  2s{color} | {color:green} branch-2.7 passed with JDK v1.8.0_101 {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  2s{color} | {color:green} branch-2.7 passed with JDK v1.7.0_101 {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 31s{color} | {color:green} branch-2.7 passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  1s{color} | {color:green} branch-2.7 passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 17s{color} | {color:green} branch-2.7 passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 10s{color} | {color:green} branch-2.7 passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  8s{color} | {color:green} branch-2.7 passed with JDK v1.8.0_101 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 55s{color} | {color:green} branch-2.7 passed with JDK v1.7.0_101 {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 10s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 11s{color} | {color:green} the patch passed with JDK v1.8.0_101 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 11s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  7s{color} | {color:green} the patch passed with JDK v1.7.0_101 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m  7s{color} | {color:green} the patch passed {color} |\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 29s{color} | {color:orange} hadoop-hdfs-project/hadoop-hdfs: The patch generated 3 new + 405 unchanged - 5 fixed = 408 total (was 410) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  0s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 14s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 7892 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  3m 14s{color} | {color:red} The patch 196 line(s) with tabs. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 14s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 57s{color} | {color:green} the patch passed with JDK v1.8.0_101 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 38s{color} | {color:green} the patch passed with JDK v1.7.0_101 {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 58m 42s{color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.7.0_101. {color} |\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 24s{color} | {color:red} The patch generated 3 ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black}154m 32s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| JDK v1.8.0_101 Failed junit tests | hadoop.hdfs.server.namenode.snapshot.TestRenameWithSnapshots |\n|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |\n|   | hadoop.hdfs.TestSafeMode |\n|   | hadoop.hdfs.server.namenode.snapshot.TestOpenFilesWithSnapshot |\n| JDK v1.7.0_101 Failed junit tests | hadoop.hdfs.server.namenode.snapshot.TestRenameWithSnapshots |\n|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |\n|   | hadoop.hdfs.TestRollingUpgrade |\n|   | hadoop.hdfs.server.datanode.TestBlockReplacement |\n|   | hadoop.hdfs.server.namenode.TestFileTruncate |\n|   | hadoop.hdfs.server.namenode.snapshot.TestOpenFilesWithSnapshot |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:c420dfe |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12821107/HDFS-10301.branch-2.7.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 995eee067a99 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | branch-2.7 / 6cb2e97 |\n| Default Java | 1.7.0_101 |\n| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_101 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/16261/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |\n| whitespace | https://builds.apache.org/job/PreCommit-HDFS-Build/16261/artifact/patchprocess/whitespace-eol.txt |\n| whitespace | https://builds.apache.org/job/PreCommit-HDFS-Build/16261/artifact/patchprocess/whitespace-tabs.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16261/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_101.txt |\n| JDK v1.7.0_101  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16261/testReport/ |\n| asflicense | https://builds.apache.org/job/PreCommit-HDFS-Build/16261/artifact/patchprocess/patch-asflicense-problems.txt |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16261/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-07-30T01:33:10.633+0000","updated":"2016-07-30T01:33:10.633+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15400883","id":"15400883","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"The patch for branch-2.7 looks good.\nI just committed this. Thank you Vinitha.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-07-31T00:06:45.103+0000","updated":"2016-07-31T00:06:45.103+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15402341","id":"15402341","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"body":"[~shv], this breaks TestDataNodeVolumeFailure.testVolumeFailure(). blockReport() is called with context = null. Then inside of blockReport we try to call methods on context with it still set to null\n\n{noformat}\njava.lang.NullPointerException: null\n\tat org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.blockReport(NameNodeRpcServer.java:1342)\n\tat org.apache.hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure.testVolumeFailure(TestDataNodeVolumeFailure.java:189)\n{noformat}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ebadger","name":"ebadger","key":"ebadger","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Eric Badger","active":true,"timeZone":"America/Chicago"},"created":"2016-08-01T16:20:43.197+0000","updated":"2016-08-01T16:20:43.197+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15402697","id":"15402697","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"-1  This needs to be reverted and I'm too git-ignorant to to do.  Our sandbox clusters won't come out of safemode because the NN thinks the DNs are reporting -1 blocks.  I see this patch is return -1 blocks for a \"storage report\".  I need to catch up on this jira but in the meantime it must be reverted.\n\nI find it odd this patch was committed with so many failed tests.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-08-01T19:48:17.461+0000","updated":"2016-08-01T19:48:17.461+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15402734","id":"15402734","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"[~ebadger] Thanks for reporting this. TestDataNodeVolumeFailure does not call blockReport() with context=null on trunk. This was fixed as a part of HDFS-9260. We need to modify TestDataNodeVolumeFailure.testVolumeFailure() for branch-2.7 as well:\n{code}\n-    cluster.getNameNodeRpc().blockReport(dnR, bpid, reports, null);\n+    cluster.getNameNodeRpc().blockReport(dnR, bpid, reports,\n+        new BlockReportContext(1, 0, System.nanoTime()));\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-01T20:12:19.789+0000","updated":"2016-08-01T20:12:19.789+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15402747","id":"15402747","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"And the rest of the tests are passing locally.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-08-01T20:22:20.908+0000","updated":"2016-08-01T20:22:20.908+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15402784","id":"15402784","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Looks like we need to fix {{TestDataNodeVolumeFailure}} for all 2 branches. Will open a jira for that promptly.\nSorry guys for breaking your build.\n\n[~daryn], it seems that you are overreacting a bit. Only one test is broken. I rerun other tests reported by Jenkins. They all pass.\nCould you please elaborate on the problem with the sandbox cluster. If NN doesn't come out of safe mode, then wouldn't that be caught by unit tests.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-08-01T20:47:25.561+0000","updated":"2016-08-01T20:47:25.561+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15402795","id":"15402795","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Block report processing does need to be so complicated.  Just ban single-rpc reports and the problem goes away.  At most the DN is retransmitting the same storage report.  Reprocessing it should not be a problem.\n\nIf the only objection is multiple RPCs are a scalability issue, I completely disagree.\n# A single RPC is not scalable.  It will not work on clusters with many hundreds of millions of blocks.\n# The size of the RPC quickly becomes an issue.  The memory pressure and pre-mature promotion rate - even with a huge young gen (8-16G) - is not sustainable.\n# The time to process the RPC becomes an issue.  The DN timing out and retransmitting (and causing this jira's bug) becomes an issue.\n\nPer-storage block reports eliminated multiple full GCs (2-3 for 5-10mins each) during startup on large clusters.\n\nPlease revert or I'll grab someone here to help me do it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-08-01T20:52:21.879+0000","updated":"2016-08-01T20:52:21.879+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15402798","id":"15402798","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"bq. If NN doesn't come out of safe mode, then wouldn't that be caught by unit tests.\n\nYou have more faith in the unit tests than I do. :)  I do not have time to fully debug why sandbox clusters are DOA when I object to the implementation anyway.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-08-01T20:53:48.503+0000","updated":"2016-08-01T20:53:48.503+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15402826","id":"15402826","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Daryn, I do not understand what you disagree with. And what is the problem with the implementation, which you object to?\nNobody is taking away per-storage block reports.\n\nIf you don't have time to understand the jira and don't have time to look at your own sandbox cluster, then how I can help you.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-08-01T21:10:08.919+0000","updated":"2016-08-01T21:10:08.919+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15402951","id":"15402951","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"I've read this jira as I said I would, and I've looked at the patch.\n\nOur nightly build & deploy for 2.7 is broken.  DNs claim to report thousands of blocks, NN says nope, -1.  This should be reason enough to revert until we get to the bottom of it.  We're reverting internally.  If that fixes it, I will have someone help me revert tomorrow morning if not already.\n\nWhy is this patch changing per-storage reports when it's the single-rpc report that is the problem?  Is this change compatible?\n# What does an old NN do if it gets this pseudo-report?  Will it forget about all the blocks on the non-last storage?\n# What does a new NN do when it gets old style reports?  Will it remove all but the last storage?\n\nThis zombie detection, report context, etc is getting out of hand.  I don't understand why the zombie detection isn't based on the healthy storages in the heartbeat.  Anything else gets flagged as failed and the heartbeat monitor disposes of them.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-08-01T22:35:43.010+0000","updated":"2016-08-01T22:35:43.010+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15403045","id":"15403045","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"We are actively looking into possible problem with this change. LMK if the revert fixes the problem. Just to clarify you are using per-storage reports on your cluster?\nIn the meantime answering your questions Daryn.\n\n??Why is this patch changing per-storage reports when it's the single-rpc report that is the problem???\nThe problem is both with single-rpc and per-storage reports. In multi-rpc case DNs can send repeated RPCs for each storage and this will cause incorrect zombie detection if RPCs processed out of order.\n\n??Is this change compatible???\nYes. The compatibility issues were discussed here above.\n\n??What does an old NN do if it gets this pseudo-report???\nAccording to [Rolling upgrade documentation|https://hadoop.apache.org/docs/r2.7.2/hadoop-project-dist/hadoop-hdfs/HdfsRollingUpgrade.html] we first upgrade NameNodes, then DataNodes. So in practice new DNs don't talk to old NNs.\n\n??What does a new NN do when it gets old style reports? Will it remove all but the last storage???\nAs mentioned in [this comment|https://issues.apache.org/jira/browse/HDFS-10301?focusedCommentId=15271737&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15271737] old DataNodes reports will be processed as regular reports, only zombie storages will not be removed until DNs upgraded.\nDuring upgrade no storages are removed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-08-01T23:41:09.230+0000","updated":"2016-08-01T23:41:09.230+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15403325","id":"15403325","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Unfortunately, there seems to be a problem with the patch. Storage report is not recognized in certain cases.\nWill revert the commits.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-08-02T04:28:20.470+0000","updated":"2016-08-02T04:28:20.470+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15403447","id":"15403447","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Hadoop-trunk-Commit #10189 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/10189/])\nRevert \"HDFS-10301. Interleaving processing of storages from repeated (shv: rev c4463f2ef20d2cb634a1249246f83c451975f3dc)\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java\n* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDnRespectsBlockReportSplitThreshold.java\n* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestBlockManager.java\n* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestNameNodePrunesMissingStorages.java\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java\n* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestNNHandlesBlockReportPerStorage.java\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockReportLeaseManager.java\n* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeDescriptor.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-02T06:20:42.049+0000","updated":"2016-08-02T06:20:42.049+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15404168","id":"15404168","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kihwal","name":"kihwal","key":"kihwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kihwal&avatarId=34594","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kihwal&avatarId=34594","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kihwal&avatarId=34594","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kihwal&avatarId=34594"},"displayName":"Kihwal Lee","active":true,"timeZone":"America/Chicago"},"body":"[~shv], thanks for the revert, but I think you missed branch-2.7.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kihwal","name":"kihwal","key":"kihwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kihwal&avatarId=34594","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kihwal&avatarId=34594","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kihwal&avatarId=34594","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kihwal&avatarId=34594"},"displayName":"Kihwal Lee","active":true,"timeZone":"America/Chicago"},"created":"2016-08-02T15:20:00.848+0000","updated":"2016-08-02T15:20:00.848+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15404413","id":"15404413","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"bq. According to Rolling upgrade documentation we first upgrade NameNodes, then DataNodes. So in practice new DNs don't talk to old NNs.\n\nAlthough the docs claim downgrading the NN requires full downtime, or rolling downgrade DNs first, we should make an effort to ensure DNs are compatible when possible.  An emergency NN downgrade shouldn't require full downtime when a failover to the prior release would suffice.\n-- \n\nI don't like the idea of BRs triggering pruning of storages.  That aside, the patch doesn't appear to close the race.  The lock is released after the storage report is processing and re-acquired to find to find the \"zombies\".  We're back to out of order processing of heartbeats, which I think is the real problem, causing false-positives.\n\nHow about something like this?  {{DatanodeDescriptor}} descriptor tracks the last {{BlockReportContext#reportId}}.  The value is updated when processing a BR - which has latest value if BR lease let it in.  Heartbeat now includes the last used {{reportId}}.  On the NN, if the heartbeat contains this field, NN will ignore heartbeart if not equal to DND.  There's little details like DN re-registration resetting the field, etc, but wouldn't something simple like this work?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-08-02T17:17:21.539+0000","updated":"2016-08-02T17:17:21.539+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15404477","id":"15404477","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Just pushed branch-2.7","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-08-02T17:58:22.184+0000","updated":"2016-08-02T17:58:22.184+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15410364","id":"15410364","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"The real problem is the state associated with the Datanode (curBlockReportRpcsSeen, curBlockReportId) to figure out when to remove zombie storages. This state gets messed up when block reports are processed out of order. The current patch still allows out of order processing of block reports but gets rid of this state associated with the Datanode. \n\nIn patch 012, although isStorageReport method returns true for STORAGE_REPORT BlockListsAsLong, this method gets overridden to return false in the BufferDecoder. I have attached a new patch (013) that fixes this issue. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-06T01:21:35.364+0000","updated":"2016-08-06T01:21:35.364+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15411076","id":"15411076","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"??the patch doesn't appear to close the race.??\nIt does. The problem is not that we release the lock, but that there is block-report-related state in different places, particularly the BitSet in {{DatanodeDescriptor}}, see e.g. [this comment|https://issues.apache.org/jira/browse/HDFS-10301?focusedCommentId=15321613&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15321613] under (1). The state can be reset by interleaving reports. So if we don't have the state there is no race condition, because block reports are independent and can be processed in any order.\nThe path does just that it removes the block-report-tracking state. [See here|https://issues.apache.org/jira/browse/HDFS-10301?focusedCommentId=15259284&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15259284] under Approach. In earlier version of the patch Vinitha introduced storage report as a separate RPC, which was opposed by Colin. The latest patch incorporates the storage report with the RPC for the last storage report. But the processing of all reports is still independent, therefore releasing the lock is not a problem.\nJust adding more details to Vinithas response.\n\n??wouldn't something simple like this work???\nI don't see how it will work. Not simple. The heartbeats can come at any time between reports or between storages and update the reportId.\n\n[~daryn], I think removing br-state substantially simplifies report processing and makes reports independent (or idempotent), which is important by itself and solves the problem of interleaving reports. The last patch solves the bug you reported (thanks) and provides a unit test for it. As you see this jira was under development for quite a while. Would be good to commit it soon. Do you still stand behind your veto given the latest patch?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-08-07T21:18:42.222+0000","updated":"2016-08-07T21:18:42.222+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15412341","id":"15412341","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 13s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 43s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  2s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 32s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 10s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 14s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 57s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 54s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 48s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 28s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 368 unchanged - 12 fixed = 368 total (was 380) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 51s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 58m 53s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 25s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 81m  7s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.tracing.TestTracing |\n|   | hadoop.security.TestRefreshUserMappings |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12822408/HDFS-10301.013.patch |\n| JIRA Issue | HDFS-10301 |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux b164d05d4a39 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 6255859 |\n| Default Java | 1.8.0_101 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16340/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16340/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16340/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-08T19:51:10.149+0000","updated":"2016-08-08T19:51:10.149+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15413046","id":"15413046","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"I think [~daryn]'s veto above was addressed. The reason was not clearly formulated, but was understandably related to a bug in the previous version of the patch. The bug is fixed, and the unit test is provided.\nI will plan to commit this on Wednesday 08/10, if there are no further objections.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-08-09T06:46:48.712+0000","updated":"2016-08-09T06:46:48.712+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15413554","id":"15413554","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"I'll review today.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-08-09T14:04:06.571+0000","updated":"2016-08-09T14:04:06.571+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15413846","id":"15413846","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"My main objections (other than the fatal bug) are the incompatible change to the protocol coupled with essentially a malformed block report buffer.  It's an attempt to shoehorn into the block report processing what should be handled by a heartbeat's storage reports.\n\nI think when you say my compatibility concern was addressed, it wasn't code fixed, but stated as don't-do-that?  Won't the empty storage reports in the last rpc cause an older NN to go into a replication storm?  Full downtime on a ~5k cluster to rollback, then ~40 mins to go active, is unacceptable when a failover to the prior release would have worked if not for this patch.\n\nThis approach will also negate asynchronously processing FBRs (like I did with IBRs).\n\nZombies should be handled by the heartbeat's pruning of excess storages.  As an illustration, shouldn't something close to this work?\n{code}\n--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeDescriptor.java\n+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeDescriptor.java\n@@ -466,11 +466,16 @@ public void updateHeartbeatState(StorageReport[] reports, long cacheCapacity,\n     setLastUpdateMonotonic(Time.monotonicNow());\n     this.volumeFailures = volFailures;\n     this.volumeFailureSummary = volumeFailureSummary;\n+\n+    boolean storagesUpToDate = true;\n     for (StorageReport report : reports) {\n       DatanodeStorageInfo storage = updateStorage(report.getStorage());\n       if (checkFailedStorages) {\n         failedStorageInfos.remove(storage);\n       }\n+      // don't prune unless block reports for all the storages in the\n+      // heartbeat have been processed\n+      storagesUpToDate &= (storage.getLastBlockReportId() == curBlockReportId);\n \n       storage.receivedHeartbeat(report);\n       totalCapacity += report.getCapacity();\n@@ -492,7 +497,8 @@ public void updateHeartbeatState(StorageReport[] reports, long cacheCapacity,\n     synchronized (storageMap) {\n       storageMapSize = storageMap.size();\n     }\n-    if (storageMapSize != reports.length) {\n+    if (curBlockReportId != 0\n+        ? storagesUpToDate : storageMapSize != reports.length) {\n       pruneStorageMap(reports);\n     }\n   }\n@@ -527,6 +533,7 @@ private void pruneStorageMap(final StorageReport[] reports) {\n           // This can occur until all block reports are received.\n           LOG.debug(\"Deferring removal of stale storage {} with {} blocks\",\n               storageInfo, storageInfo.numBlocks());\n+          storageInfo.setState(DatanodeStorage.State.FAILED);\n         }\n       }\n     }\n{code}\n\nThe next heartbeat after all reports are sent triggers the pruning.    Other changes are required, such as removal of much of the context processing code similar to the current patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-08-09T17:00:54.122+0000","updated":"2016-08-09T17:00:54.122+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15416357","id":"15416357","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"[~daryn] That is a good suggestion. Zombies should be handled by the heartbeat's pruning of excess storages.\nWhy do we need to wait until block reports for all the storages in the heartbeat are processed? \nDo you want to submit a patch for this?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-11T01:55:52.050+0000","updated":"2016-08-11T01:55:52.050+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15419823","id":"15419823","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"I don't think the heartbeat is the right place to handle reconciling the block storages.  One reason is because this adds extra complexity and time to the heartbeat, which happens far more frequently than an FBR.  We even talked about making the heartbeat lockless-- clearly you can't do that if you are traversing all the block storages.  Taking the FSN lock is expensive and heartbeats are sent quite frequently from each DN-- every few seconds.  Another reason reconciling storages in heartbeats is bad is because if the heartbeat tells you about a new storage, you won't know what blocks are in it until the FBR arrives.  So the NN may end up assigning a bunch of new blocks to a storage which looks empty, but really is full.\n\nI came up with what I believe is the correct patch to fix this problem months ago.  It's here as https://issues.apache.org/jira/secure/attachment/12805931/HDFS-10301.005.patch .  It doesn't modify any RPCs or add any new mechanisms.  Instead, it just fixes the obvious bug in the HDFS-7960 logic.  The only counter-argument to applying patch 005 that anyone ever came up with is that it doesn't eliminate zombies when FBRs get interleaved.  But this is not a good counter-argument, since FBR interleaving is extremely, extremely rare in well-run clusters.  The proof should be obvious-- if FBR interleaving happened on more clusters, more people would hit this serious data loss bug.\n\nThis JIRA has been extremely frustrating.  It seems like most, if not all, of the points that I brought up in my reviews were ignored.  I talked about the obvious problems with compatibility with [~shv]'s solution and even explicitly asked him to test the upgrade case.  I told him that this JIRA was a bad one to give to a promising new contributor such as [~redvine], because it required a lot of context and was extremely tricky.  Both myself and [~andrew.wang] commented that overloading BlockListAsLongs was confusing and not necessary.  The patch confused \"not modifying the .proto file\" with \"not modifying the RPC content\" which are two very separate concepts, as I commented over and over.  Clearly these comments were ignored.  If anything, I think [~shv] got very lucky that the bug manifested itself quickly rather than creating a serious data loss situation a few months down the road, like the one I had to debug when fixing HDFS-7960.\n\nAgain I would urge you to just commit patch 005.  Or at least evaluate it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-08-13T06:17:19.459+0000","updated":"2016-08-13T06:17:19.459+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15427386","id":"15427386","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Hey [~cmccabe], I agree with you this jira is frustrating. And I find it hard to overestimate your contribution to this. All points that you brought up here were addressed. And on multiple occasions. If you choose or fail to hear and understand other people arguments then there is little one could do to help this. So I will ignore (now for real) all but one of your meta-comments, because they were answered multiple times. Should you have a question please formulate it for me to answer.\n_I do not think you are in a position to judge qualifications of a community member to fix a bug on public lists without knowing him or her. I find it unprofessional, rude._\nWorking with Vinitha I can say she is no newbie in Hadoop, at all, even though she was not directly involved with the community until recently. You owe here an apology.\nNow to the subject of this issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-08-19T00:03:05.648+0000","updated":"2016-08-19T00:03:05.648+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15427387","id":"15427387","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Took some time to look into heartbeat processing and consulting with Vinitha.\nSo heartbeats currently have logic to remove failed storages reported by DNs via {{VolumeFailureSummary}}. This happens in three steps\n# If DN reports a failed volume in a heartbeat (HDFS-7604), NN marks the corresponding {{DatanodeStorageInfo}} as FAILED. See {{DatanodeDescriptor.updateFailedStorage()}}.\n# When the {{HeartbeatManager.Monitor}} kicks in it checks the FAILED flag on the storage and does {{removeBlocksAssociatedTo(failedStorage)}}. But it does not remove the storage itself. HDFS-7208\n# On next heartbeat the DN will not report the storage that was previously reported as failed. This triggers NN to prune the storage {{DatanodeDescriptor.pruneStorageMap()}} because it doesn't contain replicas. HDFS-7596\n\nEssentially we already have dual mechanism of deleting storages - one through heartbeats another via block reports. So we can remove the redundancy. [~daryn]'s idea simplifies a lot of code, does not require changes in any RPCs, is fully backward compatible, and eliminates the notion of zombie storage, which solves the interleaving report problem. I think we should go for it.\n\nInitially I was concerned about removing storages in heartbeats, but\n# We already do it anyway\n# All heartbeats hold FSN.readLock whether with failed storages or not. The scanning of the storages takes a lock on the corresponding {{DatanodeDescriptor.storageMap}}, which is fine-grain.\n# Storages are not actually removed in a heartbeat, only flagged as FAILED. The replica removal is performed by a background Montor.\n# If we decide to implement lock-less heartbeats we can move the storage reporting logic into a separate RPC periodically sent by DNs independently of and less frequently than regular heartbeats.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-08-19T00:04:56.484+0000","updated":"2016-08-19T00:04:56.484+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15427460","id":"15427460","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Thanks [~shv] for summarizing how zombies can be detected and appropriately handled using the existing mechanism in heartbeat. I am working on a patch that implements this. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-08-19T01:29:11.530+0000","updated":"2016-08-19T01:29:11.530+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15472194","id":"15472194","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zhz","name":"zhz","key":"zhz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zhz&avatarId=20493","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zhz&avatarId=20493","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zhz&avatarId=20493","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zhz&avatarId=20493"},"displayName":"Zhe Zhang","active":true,"timeZone":"America/Los_Angeles"},"body":"Some more background about {{TestAddOverReplicatedStripedBlocks}}. We developed the EC feature starting from NameNode. To test NameNode EC logic without the client ready, we added several test methods to emulate blocks such as {{createStripedFile}} and {{addBlockToFile}}. In this case, those \"fake\" block reports confused the NN.\n\nIn this particular test, the below sequence happens:\n# Client creates file on NameNode\n# Client adds blocks to the file on NameNode without really creating the blocks on DN\n# DN sends \"fake\" block reports to NN, with randomly generated storage IDs.\n{code}\n      DatanodeStorage storage = new DatanodeStorage(UUID.randomUUID().toString());\n      StorageReceivedDeletedBlocks[] reports = DFSTestUtil\n          .makeReportForReceivedBlock(block,\n              ReceivedDeletedBlockInfo.BlockStatus.RECEIVED_BLOCK, storage);\n      for (StorageReceivedDeletedBlocks report : reports) {\n        ns.processIncrementalBlockReport(dn.getDatanodeId(), report);\n      }\n{code}\n# The above code (unintentionally) triggers the zombie storage logic because those randomly generated storages will not be in the next real BR.\n# We inject real blocks onto the DNs. But out of 9 blocks in the group, we only injected 8. So when NN receives block report {{cluster.triggerBlockReports();}} at L257, it should delete internal block #8, which was reported in the \"fake\" BR but not in the real BR. The log for that is:\n{code}\n[Block report processor] WARN  blockmanagement.BlockManager (BlockManager.java:removeZombieReplicas(2282)) - processReport 0xf79050ce694c3bfa: removed 1 replicas from storage 6c834645-8aec-48f2-ace8-122344e07e96, which no longer exists on the DataNode.\n{code}\n{{6c834645-8aec-48f2-ace8-122344e07e96}} is one of the randomly generated storages.\n\nI haven't fully understood how the above caused the test to fail. Hope it helps.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zhz","name":"zhz","key":"zhz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zhz&avatarId=20493","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zhz&avatarId=20493","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zhz&avatarId=20493","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zhz&avatarId=20493"},"displayName":"Zhe Zhang","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-08T00:00:36.610+0000","updated":"2016-09-08T00:00:36.610+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15482454","id":"15482454","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"IIUC we need to fix this logic not just for pruning storages but also deciding when to remove the block report lease.\n\nFrom BPServiceActor.java, we can assume at line 399 that the storage report just sent was processed successfully by the NameNode. i.e. DataNode getting back success is sufficient to conclude the report was successfully processed.\n{code}\n 393         for (int r = 0; r < reports.length; r++) {\n 394           StorageBlockReport singleReport[] = { reports[r] };\n 395           DatanodeCommand cmd = bpNamenode.blockReport(\n 396               bpRegistration, bpos.getBlockPoolId(), singleReport,\n 397               new BlockReportContext(reports.length, r, reportId,\n 398                   fullBrLeaseId, true));\n 399           blockReportSizes.add(\n 400               calculateBlockReportPBSize(useBlocksBuffer, singleReport));\n 401           numReportsSent++;\n 402           numRPCs++;\n 403           if (cmd != null) {\n 404             cmds.add(cmd);\n 405           }\n{code}\n\nThe DN can include a flag in the last RPC message i.e. when {{r == reports.length - 1}} that tells the NameNode it is the last report in this batch and all previous ones were successfully processed. So it's safe to drop the lease and prune zombies.\n\nAlso +1 for [~daryn]'s idea to ban single-RPC reports, as this approach cannot be used for single-RPC reports.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-11T21:44:11.948+0000","updated":"2016-09-11T21:44:11.948+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15485884","id":"15485884","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Upon thorough investigation of heartbeat logic I have verified that unreported storages do get removed without any code change. Attached patch 014 eliminates the state and the zombie storage removal logic introduced in HDFS-7960. \nI have added a unit test that verifies that when a DN storage with blocks is removed, this storage is removed from the DatanodeDescriptor as well and does not linger forever. Unreported storages are marked as FAILED in  {{updateHeartbeatState}} method when {{checkFailedStorages}} is true. Thus when a DN storage is removed, it will be marked as FAILED in the next heartbeat. \nThe storage removal happens in 2 steps after that (Refer Step 2 & 3 in https://issues.apache.org/jira/browse/HDFS-10301?focusedCommentId=15427387&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15427387). \nThe test {{testRemovingStorageDoesNotProduceZombies}} introduced in HDFS-7960 passes by reducing the heartbeat recheck interval so that the test doesn't timeout. By default, the Heartbeat Manager removes blocks associated with failed storages every 5 minutes.\nI have ignored {{testProcessOverReplicatedAndMissingStripedBlock}} in this patch. Please refer to HDFS-10854 for more details.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-13T01:21:03.366+0000","updated":"2016-09-13T01:21:03.366+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15485956","id":"15485956","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"[~arpiagariu] In the latest patch, BR lease is removed when {{context.getTotalRpcs() == context.getCurRpc() + 1}}. If BRs are processed out of order/interleaved, the BR lease for the DN will be removed before all the BRs from the DN are processed. So, I have modified the {{checkLease}} method in {{BlockReportLeaseManager}} to return true when {{node.leaseId == 0}}. Please let me know if you see any issues with this approach.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-13T01:55:30.168+0000","updated":"2016-09-13T01:55:30.168+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15486056","id":"15486056","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 20s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 36s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 50s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 32s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  0s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 13s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 55s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  1s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 30s{color} | {color:orange} hadoop-hdfs-project/hadoop-hdfs: The patch generated 3 new + 379 unchanged - 7 fixed = 382 total (was 386) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 55s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 12s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  8s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 58s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 64m 26s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 17s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 87m  4s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.TestCrcCorruption |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Issue | HDFS-10301 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12828153/HDFS-10301.014.patch |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 25ecab498dc4 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 72dfb04 |\n| Default Java | 1.8.0_101 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/16726/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/16726/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/16726/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16726/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-13T02:55:55.848+0000","updated":"2016-09-13T02:55:55.848+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15488796","id":"15488796","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Vinitha, thanks for your thorough research. Minor things:\n# In {{DatanodeDescriptor}} you should also remove 3 imports and {{EMPTY_STORAGE_INFO_LIST}}, which were used in removed methods only.\n# Take a look at checkstyle something about a long line there.\n# Checked that TestCrcCorruption does not fail for me.\n\nDid you try to setup a sandbox cluster with {{dfs.blockreport.split.threshold = 1}}?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-13T23:26:22.607+0000","updated":"2016-09-13T23:26:22.607+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15489223","id":"15489223","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. I have modified the checkLease method in BlockReportLeaseManager to return true when node.leaseId == 0. Please let me know if you see any issues with this approach.\n[~redvine], IIUC this workaround bypasses the lease checks but the last report detection logic still remains broken. I am no longer sure zombie removal in heartbeats is safe and I was probably wrong to add it in HDFS-7596. Zombie removal is safe just after processing all storage reports from a full block report. So I think we should fix \"last report detection\".\n\nI believe the following two changes will fix this problem (same suggestion as my previous comment):\n# The DataNode sends a flag with the last RPC message that indicates all the previous reports have been successfully processed. This is guaranteed to be correct and removes the burden from the NN.\n# Eliminate single-RPC reports as Daryn suggested.\n\nAny thoughts on this?\n\nThanks Konstantin and Vinitha for reporting this problem and your marathon efforts to fix it. It is a hard problem so I request we aim for consensus before committing a fix. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-14T03:12:58.447+0000","updated":"2016-09-14T03:12:58.447+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15491142","id":"15491142","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"[~arpiagariu]  Storage reports are anyway sent in heartbeats and these reports have the information required to prune zombie storages. These storages are only marked as FAILED in the heartbeat. The replicas are removed in background by the HeartbeatManager. Why exactly do you think zombie removal in heartbeats is not safe? Why do we need to wait for all storage block reports from a FBR?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-14T18:34:16.532+0000","updated":"2016-09-14T18:34:16.532+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15491507","id":"15491507","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"I don't think it is safe to remove storages (and hence block replicas from memory) when the NameNode doesn't have up to date block replica state because the block->storage mapping on the NameNode can be stale e.g. due to disk balancer moving replicas; or due to the way VolumeChoosingPolicy picks storages for new blocks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-14T21:34:10.212+0000","updated":"2016-09-14T21:34:32.856+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15492546","id":"15492546","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Still not clear what scenario concerns you. Arpit, could you please clarify.\n* Balancer copies a replica from a source DN to a target DN and when finished sends IBR with the target as a new replica location and a hint to remove old replica from the source DN. If the source or the target storage fails during this the transfer fails and Balancer moves on. If either of the storages fail after the transfer it is the same as the regular failure, the block will become under-replicated and recovered in due time.\n* For VolumeChoosingPolicy it is even more important to know early which storages failed in order to avoid choosing them as targets.\n\nIn fact the code path of zombie storage removal via FBRs (introduced by HDFS-7960) is practically never triggered. Because heartbeats are much more often, the removal of zombies goes through heartbeats. So if this is unsafe as you assume we should have the evidence as it is happening right now.\nI agree this is complex, but we've learned a lot and now have a very good understanding of the workflow. Let's reach the consensus. I thought we had a silent one because nobody commented until the patch was submitted. It takes a lot of time and testing, on multiple branches, so waiting till the last moment is not productive.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-15T06:41:59.913+0000","updated":"2016-09-15T06:41:59.913+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15494623","id":"15494623","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. Balancer copies a replica from a source DN to a target DN and when finished sends IBR with the target as a new replica location and a hint to remove old replica from the source DN. If the source or the target storage fails during this the transfer fails and Balancer moves on. If either of the storages fail after the transfer it is the same as the regular failure, the block will become under-replicated and recovered in due time.\nWe've seen IBRs are often delayed when the NN is overloaded so the NN's view of the replica map can lag. But I agree leaving zombie removals to heartbeats only fixes this bug and leaves us no worse than where we are today. The FBR vs heartbeat discussion can be separate. If we go this way let's fix the detection properly though. The last patch just no-ops the lease ID checks.\n\nbq. For VolumeChoosingPolicy it is even more important to know early which storages failed in order to avoid choosing them as targets.\nBy the way, the storage chosen by the NN is never used. The DN always uses the result of running volume choosing policy locally.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-15T21:53:18.648+0000","updated":"2016-09-15T21:53:18.648+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15494992","id":"15494992","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jingzhao","name":"jingzhao","key":"jingzhao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jing Zhao","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for all the effort on this tricky issue, [~redvine]. One question about the latest patch: in {{updateHeartbeatState}}, {{checkFailedStorages}} is set to true only when either the DN reports failed storage or the heartbeat is the first one since registration. Then can this cover DN hotswap case? For DN hotswap, I think the DN only sends FBR to notify NN about the change? Then if a fresh disk is used to replace a slow disk (but not failed) in hotswap, will we still hit HDFS-7960?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jingzhao","name":"jingzhao","key":"jingzhao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Jing Zhao","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-16T00:48:50.273+0000","updated":"2016-09-16T00:48:50.273+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15495211","id":"15495211","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"[~jingzhao] \n??Then can this cover DN hotswap case??\nYes, I will explain how it does below.\n\n??For DN hotswap, I think the DN only sends FBR to notify NN about the change??\nThat is right.\n\nDuring hotswap {{DataNode.reconfigurePropertyImpl()}} is invoked which identifies the newly added/removed volumes. For all the volumes to be removed, {{FsDatasetImpl.removeVolumes()}} is called. This also removes the block infos from the FsDataset. It does so by adding these blocks to the {{blkToInvalidate}} map. Then the {{FsDatasetImpl.invalidate()}} method is invoked for all the blocks in the map.\n{code}\n   * Invalidate a block but does not delete the actual on-disk block file.\n   *\n   * It should only be used when deactivating disks.\n   *\n   * @param bpid the block pool ID.\n   * @param block The block to be invalidated.\n   */\n  public void invalidate(String bpid, ReplicaInfo block) {\n    // If a DFSClient has the replica in its cache of short-circuit file\n    // descriptors (and the client is using ShortCircuitShm), invalidate it.\n    datanode.getShortCircuitRegistry().processBlockInvalidation(\n        new ExtendedBlockId(block.getBlockId(), bpid));\n\n    // If the block is cached, start uncaching it.\n    cacheManager.uncacheBlock(bpid, block.getBlockId());\n\n    datanode.notifyNamenodeDeletedBlock(new ExtendedBlock(bpid, block),\n        block.getStorageUuid());\n  }\n{code}\n\nAs you can see, these blocks are reported to the NN as deleted. So, the NN eventually removes all the blocks associated with this volume. Once this is done, the volume is actually pruned by {{DatanodeDescriptor.pruneStorageMap()}} in the subsequent heartbeat.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-16T02:58:26.451+0000","updated":"2016-09-16T02:58:26.451+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15495541","id":"15495541","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Sounds like we are making progress. [~arpitagarwal] could you please clarify on the detection properly and lease ID checks.\nWhat needs to be fixed?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-16T06:32:37.960+0000","updated":"2016-09-16T06:32:37.960+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15497381","id":"15497381","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sjlee0","name":"sjlee0","key":"sjlee0","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sjlee0&avatarId=16831","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sjlee0&avatarId=16831","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sjlee0&avatarId=16831","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sjlee0&avatarId=16831"},"displayName":"Sangjin Lee","active":true,"timeZone":"America/Los_Angeles"},"body":"Moving this issue to 2.6.6. Please move back if you feel otherwise.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sjlee0","name":"sjlee0","key":"sjlee0","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sjlee0&avatarId=16831","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sjlee0&avatarId=16831","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sjlee0&avatarId=16831","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sjlee0&avatarId=16831"},"displayName":"Sangjin Lee","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-16T21:11:42.256+0000","updated":"2016-09-16T21:11:42.256+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15497634","id":"15497634","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"[~shv], I am referring to this delta. This workaround just bypasses the leaseID check.\n\n{code}\n     if (node.leaseId == 0) {\n-      LOG.warn(\"BR lease 0x{} is not valid for DN {}, because the DN \" +\n+      LOG.warn(\"BR lease 0x{} is not found for DN {}, because the DN \" +\n                \"is not in the pending set.\",\n                Long.toHexString(id), dn.getDatanodeUuid());\n-      return false;\n+      return true;\n     }\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-16T22:46:55.283+0000","updated":"2016-09-16T22:46:55.283+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15504561","id":"15504561","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"[~arpiagariu]  I understand that we may bypass the leaseID check if the storage report processing happens out of order. Are there any issues with this workaround? What needs to be modified?\nWe do not need to detect the last storage report in this implementation as the pruning of storages happens in the heartbeat. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-19T20:15:51.042+0000","updated":"2016-09-19T20:15:51.042+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15507610","id":"15507610","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Besides, what is the last report? Reports can come to the NameNode in arbitrary order, can get lost, or can be repeated.\nLooks like this is the last remaining issue. Can we please resolve it soon.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-20T19:52:36.546+0000","updated":"2016-09-20T19:52:36.546+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15513924","id":"15513924","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"I guess we should assume silent consensus here.\nThe patch is still applying.\n+1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-22T17:37:55.900+0000","updated":"2016-09-22T17:37:55.900+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15513976","id":"15513976","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Let me catch up.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-09-22T17:51:00.065+0000","updated":"2016-09-22T17:51:00.065+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15514358","id":"15514358","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"[~shv], it's not consensus. I pointed out a specific issue that needs fixing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-22T20:12:55.862+0000","updated":"2016-09-22T20:12:55.862+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15514418","id":"15514418","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"But you did not explain what needs to be fixed, or explained the problem, or answered direct questions to you.\nCould you please clarify what the specific issue is. Is there a unit test for it?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-22T20:37:16.943+0000","updated":"2016-09-22T20:37:16.943+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15517231","id":"15517231","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. But you did not explain what needs to be fixed\nI responded [in this comment|https://issues.apache.org/jira/browse/HDFS-10301?focusedCommentId=15497634&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15497634]. Looks like the workaround was added as a substitute for correctly detecting the last report. Why can't we just fix the last-report detection instead? It's okay to do so in a separate Jira and just remove zombie processing here. My objection is only to the checkLease change.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-23T18:43:03.020+0000","updated":"2016-09-23T18:43:03.020+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15517992","id":"15517992","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Why do we need to detect the last-report? I don't see any potential problems with the checkLease change. Like Konstantin mentioned, what exactly do you mean by the last-report? It will be helpful if you can give a scenario where this particular change can cause problems.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-24T00:29:05.426+0000","updated":"2016-09-24T00:29:05.426+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15518035","id":"15518035","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"Let me ask - why do you think we need this workaround? In what situation do you see it being useful?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-24T00:55:37.139+0000","updated":"2016-09-24T00:55:37.139+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15518131","id":"15518131","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"i) When BRs are split into multiple RPCS: Say 2 BRs from the same DN are processed at the same time. If we process the last storage report of the second BR before processing all the storage reports in the first BR, then the remaining storage reports in the first BR will be ignored as checkLease would return false.\n{code}\nif (context != null) {\n        if (context.getTotalRpcs() == context.getCurRpc() + 1) {\n          long leaseId = this.getBlockReportLeaseManager().removeLease(node);\n          BlockManagerFaultInjector.getInstance().\n              removeBlockReportLease(node, leaseId);\n        }\n{code}\nii) For single RPC BRs: As all storage reports in the single RPC BR satisfy the condition that triggers removal of the lease, all storage reports after the first storage report will be ignored without the change.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-09-24T01:58:56.065+0000","updated":"2016-09-24T01:58:56.065+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15524968","id":"15524968","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"bq.  As all storage reports in the single RPC BR satisfy the condition that triggers removal of the lease, all storage reports after the first storage report will be ignored without the change.\nIsn't that because the patch also removes the lastStorageInRpc check? If that check was not removed then the workaround wouldn't be necessary.\n\nbq. When BRs are split into multiple RPCS: Say 2 BRs from the same DN are processed at the same time.\nWe should make a more resilient fix that doesn't require the lease ID workaround. In the interests of making forward progress, can we just remove the zombie processing for now and fix the other issues separately?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-27T03:50:44.016+0000","updated":"2016-09-27T03:50:44.016+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15526429","id":"15526429","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Everyone appeared to agree on removing single-rpc FBRs.  Are we going to remove it?\n\nAgree with Konstantin and Vinitha about concerns over \"last\" BR detection.  With no guaranteed order of processing, there is no \"last\" FBR but rather \"all\" FBRs processed.  We just need to safely know the NN is sufficiently in sync with the DN for a specific point in time.  The race to consider is apparently a BR for a new volume is processed prior to receiving/processing a heartbeat which includes a storage report for the new volume.\n\nIf we fix the detection, then agree on completely removing all the zombie processing.\n\nI like the existing behavior of flagging a storage as failed for deferred removal by the heartbeat monitor.  The default 10 minute lag is concerning.  A failure detected at runtime sends IBRs (wasn't aware DN did that, has it always?) which alleviates the concern. However a failure detected at startup, ex. rolling upgrade, will reduce durability for 10 minutes.  Perhaps the DN detects failed volumes quickly enough this shouldn't be a concern?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-09-27T15:14:52.550+0000","updated":"2016-09-27T15:14:52.550+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15527821","id":"15527821","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Talking to Arpit, I think I understood the problem with the {{checkLease()}} change in the patch. This will allow DNs send BRs without first obtaining a lease from NN.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-27T23:53:01.604+0000","updated":"2016-09-27T23:53:01.604+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15527890","id":"15527890","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"??removing single-rpc FBRs.??\nDaryn, do you suggest to remove it in this jira? I thought we can do it in a different one.\n\n??The race to consider is apparently a BR for a new volume is processed prior to receiving/processing a heartbeat which includes a storage report for the new volume.??\nDon't see a race here. New storage is created via {{DatanodeDescriptor.updateStorage()}}, which is invoked whenever a new storage is reported. New storage can be reported via a heartbeat, IBR, or FBR. What do I miss?\n\n??The default 10 minute lag is concerning.??\nThe patch does not change storage removal logic. If it is a concern, it is with or without the patch as this is how it works right now. I agree during rolling upgrades storage failures are more likely and durability can be an issue, but it should be addressed in a different jira?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-28T00:21:02.948+0000","updated":"2016-09-28T00:21:02.948+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15536676","id":"15536676","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"I think the solution for the {{checkLease()}} problem is \n# to restore returning {{false}} in  {{checkLease()}}. That way \"bad\" DNs will not be able to send FBRs without obtaining a lease.\n# Move release lease logic from per-storage {{BM.processReport()}} to {{NameNodeRpcServer.blockReport()}} just after all storages in the report are processed. That way we will not need to track the order of processing per-storage reports by FutureTask threads, but just release the lease once all storages are done, that is when {{curRpc + 1 == totalRpcs}} .\n\nThis will exactly match the current behavior of br-leases. It does not solve the race between a timed out BR and the repeating BR in multi-RPC BR case. But the race exists in current code as well, and I would prefer to address this in another issue.\n\nSo before going to testing this on multiple versions and configurations I would like to confirm with you guys that this is the only problem remaining, and we have a consensus on the solution. Please confirm.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-09-30T18:34:02.368+0000","updated":"2016-09-30T18:34:02.368+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15543509","id":"15543509","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Regarding removing single-rpcs, I'm ok with doing it on another jira.\n\nI don't see {{curRpc + 1 == totalRpcs}} as a reliable detection.  I think I mentioned before I intended for FBRs & IBRs to be async processed by the BM report thread.  IBRs are async, but FBRs are sync because I didn't have time to make all the changes.\n\nAttempting to use a conditional based on cur/total RPCs will prevent that feature from every being implemented.  The order in which the handlers add the FBRs to the queue is nondeterministic.  Hence my earlier suggestion to sync the heartbeat storage reports against the storage's FBR received state.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-10-03T21:40:18.682+0000","updated":"2016-10-03T21:40:18.682+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15543660","id":"15543660","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Just created HDFS-10953 for removing 1-rpc BRs.\n\n??I don't see {{curRpc + 1 == totalRpcs}} as a reliable detection.??\nI agree. There is clearly a problem with BR-leases and of the same nature as with removing storages. The problem exists in current code base independently of storage removal. With the solution I proposed above we will retain current behavior for leases: not making it worse or better. We should open another jira to fix leases. But let's fix the removal of storages here. Would that work?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-03T22:51:57.736+0000","updated":"2016-10-03T22:51:57.736+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15546390","id":"15546390","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Patch 15 has the changes mentioned in https://issues.apache.org/jira/browse/HDFS-10301?focusedCommentId=15536676&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15536676. Kindly review.\n\n??It does not solve the race between a timed out BR and the repeating BR in multi-RPC BR case.??\nWhen there is a race, the per-storage BRs that arrive after the removal of the node lease would not be processed. I think that is okay. BR retransmissions are handled by the underlying RPC layer. The same RPC request is retried as per the specified Retry policy. Since these retransmitted BRs are identical, it is sufficient if we process all the per-storage BRs once. It seems okay to ignore the subsequent retransmitted BRs from the same node once {{curRpc + 1 == totalRpcs}} is satisfied. Does that sound reasonable?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-04T19:27:01.744+0000","updated":"2016-10-04T19:27:01.744+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15546626","id":"15546626","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 16s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 12s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 44s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 51s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 13s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 49s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 49s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 28s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 372 unchanged - 7 fixed = 372 total (was 379) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 48s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 51s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 56s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 62m 55s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 18s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 82m 52s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.namenode.ha.TestRetryCacheWithHA |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Issue | HDFS-10301 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12831599/HDFS-10301.015.patch |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 1540124de803 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 88b9444 |\n| Default Java | 1.8.0_101 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/17005/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/17005/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/17005/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-04T20:51:18.477+0000","updated":"2016-10-04T20:51:18.477+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15546645","id":"15546645","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"The test failure seems unrelated. It passes locally.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-04T20:58:02.268+0000","updated":"2016-10-04T20:58:02.268+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15547365","id":"15547365","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"The patch looks good. Tests pass for me. Will give people a day or so to review. LMK if you need more.\n\nAgree with Vinitha, as it is currently implemented for per-storage-BRs the race is only between last BR RPCs. But because they are identical there is no difference which one will be processed and which one discarded. It is actually good that only one is processed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-05T02:02:06.530+0000","updated":"2016-10-05T02:02:06.530+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15547529","id":"15547529","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"Konst, please hold off committing for a day or two. The approach in the latest patch sounds reasonable but I'd like to review it once.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-05T03:59:52.082+0000","updated":"2016-10-05T03:59:52.082+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15556790","id":"15556790","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Hey [~arpitagarwal], how is the review going? Should we wrap this up? I understand [~shahrs87] is waiting for us to proceed with HDFS-10953.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-08T00:43:46.580+0000","updated":"2016-10-08T00:43:46.580+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15563049","id":"15563049","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~shv], the v15 patch lgtm. Thank you for waiting. Assuming Daryn is okay with this approach we can commit it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-10T18:20:05.362+0000","updated":"2016-10-10T18:20:05.362+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15563305","id":"15563305","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Will take a look this afternoon.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-10-10T19:55:05.269+0000","updated":"2016-10-10T19:55:05.269+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15566746","id":"15566746","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"It appears to be generally fine.  One small comment is that I don't think the {{lastBlockReportId}} code needs to all be gutted.  It's being sent so why not store it?  Since I think the correct solution to releasing the BR lease probably involves all storages in a heartbeat having a matching lastBlockReportId, that's another reason to not remove it.\n\nI think the new location of {{curRpc + 1 == totalRpcs}} is arguably worse than the current location.  I might be overlooking a detail and can be swayed, so please correct me.  I've often stated how I intended/do-intend to make FBRs async.  It could be done today with some minor pain.  The meat of the change would be {{bm#blockReport}} calling async {{bm#enqueueBlockOp}} instead of the blocking {{bm#runBlockOp}}.  The rpc comparison currently occurs after reports are actually processed.  There are small out of order races that can occur.  However, by hoisting the check into {{bm#blockReport}} via {{removeBRLeaseIfNeeded}}, as soon the report is queued the lease will be released and spoil everything.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2016-10-11T22:00:41.528+0000","updated":"2016-10-11T22:00:41.528+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15569580","id":"15569580","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"??I don't think the lastBlockReportId code needs to all be gutted.??\n{{lastBlockReportId}} was a part of the state introduced by HDFS-7960. It was removed for two reasons:\n# It is not used anywhere after removing the state, so if we retain the field it causes a warning.\n# The value of the field is non-deterministic and therefore not reliable.\n   In case of competing reports with different IDs from the same DN there is no guarantee which value will be recorded in the field.\n\n??the new location of {{curRpc + 1 == totalRpcs}} is arguably worse than the current location. I might be overlooking a detail??\nThe patch places the condition so that it is checked *_after_* all storage reports in the rpc are processed. That way the result (lease removal) does not depend on the order of processing storages within the block report processing queue. This is more important for single-RPC block reports, not so for per-storage-reports. It is intended to address [~arpitagarwal]'s concern.\n\n??I've often stated how I intended/do-intend to make FBRs async.??\nI don't think the patch prevents or makes it harder to implement async BRs. It removes dependency on the order of execution of reports by removing the BR-state. I think it benefits async BRs, because in current (sync case) the out of order reports is an abnormality, while in the async case it should be by design.\n\n[~daryn], you don't seem to object the latest patch. Please correct me if you do, and then indicate what you propose to move it forward.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-12T18:57:12.710+0000","updated":"2016-10-12T18:57:12.710+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15572595","id":"15572595","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Plan to commit this tonight, if there are no objections.\n[~redvine], could you please update the patch. There is a minor conflict in import section of TestNameNodePrunesMissingStorages.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-13T17:22:55.083+0000","updated":"2016-10-13T17:22:55.083+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15572936","id":"15572936","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Updated the patch. The conflict was due to a recent patch pushed upstream.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-13T19:35:53.629+0000","updated":"2016-10-13T19:35:53.629+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15573170","id":"15573170","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 17s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 4 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 37s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 43s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 50s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 13s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 46s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 43s{color} | {color:green} trunk passed {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 32s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 372 unchanged - 7 fixed = 372 total (was 379) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  0s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  3s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 63m 46s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 20s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black} 83m 14s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| Failed junit tests | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |\n|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure190 |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:9560f25 |\n| JIRA Issue | HDFS-10301 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12833187/HDFS-10301.015.patch |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 868a8bc615f2 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | trunk / 332a61f |\n| Default Java | 1.8.0_101 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/17140/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/17140/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/17140/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-13T21:01:47.374+0000","updated":"2016-10-13T21:01:47.374+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15577106","id":"15577106","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"My formal +1 for the latest patch.\nAttaching a patch for branch-2.\nVinitha, could you please add a patch for branch-2.7.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-15T01:35:38.357+0000","updated":"2016-10-15T01:35:38.357+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15577150","id":"15577150","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Committed to trunk, branch-2, and branch-2.8\nLeave it open while waiting for branch-2.7 patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-15T02:09:49.711+0000","updated":"2016-10-15T02:09:49.711+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15577170","id":"15577170","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #10619 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/10619/])\nHDFS-10301. Remove FBR tracking state to fix false zombie storage (shv: rev 391ce535a739dc92cb90017d759217265a4fd969)\n* (edit) hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeDescriptor.java\n* (edit) hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java\n* (edit) hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestBlockManager.java\n* (edit) hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/BlockReportTestBase.java\n* (edit) hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAddOverReplicatedStripedBlocks.java\n* (edit) hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestNameNodePrunesMissingStorages.java\n* (edit) hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java\n* (edit) hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeStorageInfo.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-15T02:20:37.699+0000","updated":"2016-10-15T02:20:37.699+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15577323","id":"15577323","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 24s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 27s{color} | {color:green} branch-2 passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 53s{color} | {color:green} branch-2 passed with JDK v1.8.0_101 {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 47s{color} | {color:green} branch-2 passed with JDK v1.7.0_111 {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 33s{color} | {color:green} branch-2 passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 57s{color} | {color:green} branch-2 passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 16s{color} | {color:green} branch-2 passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 11s{color} | {color:green} branch-2 passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  5s{color} | {color:green} branch-2 passed with JDK v1.8.0_101 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 40s{color} | {color:green} branch-2 passed with JDK v1.7.0_111 {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 37s{color} | {color:green} the patch passed with JDK v1.8.0_101 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 42s{color} | {color:green} the patch passed with JDK v1.7.0_111 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 42s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 30s{color} | {color:green} hadoop-hdfs-project/hadoop-hdfs: The patch generated 0 new + 384 unchanged - 9 fixed = 384 total (was 393) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 10s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 54s{color} | {color:green} the patch passed with JDK v1.8.0_101 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 37s{color} | {color:green} the patch passed with JDK v1.7.0_111 {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 66m  2s{color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.7.0_111. {color} |\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black}158m 43s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| JDK v1.7.0_111 Failed junit tests | hadoop.hdfs.TestEncryptionZones |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:b59b8b7 |\n| JIRA Issue | HDFS-10301 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12833481/HDFS-10301.branch-2.015.patch |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 950dee13fddd 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | branch-2 / 78cb79f |\n| Default Java | 1.7.0_111 |\n| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |\n| findbugs | v3.0.0 |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/17171/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_111.txt |\n| JDK v1.7.0_111  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/17171/testReport/ |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/17171/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-15T04:17:16.175+0000","updated":"2016-10-15T04:17:16.175+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15583534","id":"15583534","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"body":"Attached the patch for branch-2.7.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=redvine","name":"redvine","key":"redvine","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vinitha Reddy Gankidi","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-17T21:27:38.935+0000","updated":"2016-10-17T21:27:38.935+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15583944","id":"15583944","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\n\\\\\n\\\\\n|| Vote || Subsystem || Runtime || Comment ||\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 15m 28s{color} | {color:blue} Docker mode activated. {color} |\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 3 new or modified test files. {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 11s{color} | {color:green} branch-2.7 passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  3s{color} | {color:green} branch-2.7 passed with JDK v1.8.0_101 {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  3s{color} | {color:green} branch-2.7 passed with JDK v1.7.0_111 {color} |\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 28s{color} | {color:green} branch-2.7 passed {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  1s{color} | {color:green} branch-2.7 passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 17s{color} | {color:green} branch-2.7 passed {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 10s{color} | {color:green} branch-2.7 passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  9s{color} | {color:green} branch-2.7 passed with JDK v1.8.0_101 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 56s{color} | {color:green} branch-2.7 passed with JDK v1.7.0_111 {color} |\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  5s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 12s{color} | {color:green} the patch passed with JDK v1.8.0_101 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 12s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 14s{color} | {color:green} the patch passed with JDK v1.7.0_111 {color} |\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 14s{color} | {color:green} the patch passed {color} |\n| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 31s{color} | {color:orange} hadoop-hdfs-project/hadoop-hdfs: The patch generated 1 new + 336 unchanged - 4 fixed = 337 total (was 340) {color} |\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  7s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 15s{color} | {color:green} the patch passed {color} |\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  0m  0s{color} | {color:red} The patch has 10483 line(s) that end in whitespace. Use git apply --whitespace=fix <<patch_file>>. Refer https://git-scm.com/docs/git-apply {color} |\n| {color:red}-1{color} | {color:red} whitespace {color} | {color:red}  4m  1s{color} | {color:red} The patch 295 line(s) with tabs. {color} |\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 24s{color} | {color:green} the patch passed {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  8s{color} | {color:green} the patch passed with JDK v1.8.0_101 {color} |\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 52s{color} | {color:green} the patch passed with JDK v1.7.0_111 {color} |\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 56m 28s{color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.7.0_111. {color} |\n| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 20s{color} | {color:red} The patch generated 3 ASF License warnings. {color} |\n| {color:black}{color} | {color:black} {color} | {color:black}174m 59s{color} | {color:black} {color} |\n\\\\\n\\\\\n|| Reason || Tests ||\n| JDK v1.8.0_101 Failed junit tests | hadoop.hdfs.web.TestWebHdfsTimeouts |\n|   | hadoop.hdfs.server.namenode.ha.TestDNFencing |\n|   | hadoop.hdfs.server.namenode.snapshot.TestRenameWithSnapshots |\n|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |\n|   | hadoop.hdfs.server.datanode.TestBlockReplacement |\n| JDK v1.7.0_111 Failed junit tests | hadoop.hdfs.server.namenode.snapshot.TestRenameWithSnapshots |\n|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |\n\\\\\n\\\\\n|| Subsystem || Report/Notes ||\n| Docker |  Image:yetus/hadoop:c420dfe |\n| JIRA Issue | HDFS-10301 |\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12833810/HDFS-10301.branch-2.7.015.patch |\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |\n| uname | Linux 2b8c1c76c4d7 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |\n| Build tool | maven |\n| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |\n| git revision | branch-2.7 / 8eb0b6f |\n| Default Java | 1.7.0_111 |\n| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_101 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_111 |\n| findbugs | v3.0.0 |\n| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/17186/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |\n| whitespace | https://builds.apache.org/job/PreCommit-HDFS-Build/17186/artifact/patchprocess/whitespace-eol.txt |\n| whitespace | https://builds.apache.org/job/PreCommit-HDFS-Build/17186/artifact/patchprocess/whitespace-tabs.txt |\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/17186/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_111.txt |\n| JDK v1.7.0_111  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/17186/testReport/ |\n| asflicense | https://builds.apache.org/job/PreCommit-HDFS-Build/17186/artifact/patchprocess/patch-asflicense-problems.txt |\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/17186/console |\n| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |\n\n\nThis message was automatically generated.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2016-10-18T00:23:28.177+0000","updated":"2016-10-18T00:23:28.177+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15584077","id":"15584077","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"All failed tests pass locally on branch-2.7. Checkstyle, ASF licence, and white spaces seem to be old.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-18T01:31:08.183+0000","updated":"2016-10-18T01:31:08.183+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15584100","id":"15584100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"I just committed this to branch-2.7. Thank you, Vinitha.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2016-10-18T01:42:34.400+0000","updated":"2016-10-18T01:42:34.400+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12959486/comment/15584151","id":"15584151","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brahmareddy","name":"brahmareddy","key":"brahmareddy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=brahmareddy&avatarId=24624","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=brahmareddy&avatarId=24624","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=brahmareddy&avatarId=24624","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=brahmareddy&avatarId=24624"},"displayName":"Brahma Reddy Battula","active":true,"timeZone":"Asia/Kolkata"},"body":"CHANGES.txt is not updated in branch-2.7, can you please update..?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brahmareddy","name":"brahmareddy","key":"brahmareddy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=brahmareddy&avatarId=24624","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=brahmareddy&avatarId=24624","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=brahmareddy&avatarId=24624","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=brahmareddy&avatarId=24624"},"displayName":"Brahma Reddy Battula","active":true,"timeZone":"Asia/Kolkata"},"created":"2016-10-18T02:09:57.770+0000","updated":"2016-10-18T02:09:57.770+0000"}],"maxResults":189,"total":189,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HDFS-10301/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2w8en:"}}