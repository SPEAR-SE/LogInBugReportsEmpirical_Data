{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13165555","self":"https://issues.apache.org/jira/rest/api/2/issue/13165555","key":"HDFS-13672","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310942","id":"12310942","key":"HDFS","name":"Hadoop HDFS","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310942&avatarId=10094","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310942&avatarId=10094","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310942&avatarId=10094","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310942&avatarId=10094"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/2","id":"2","description":"The problem described is an issue which will never be fixed.","name":"Won't Fix"},"customfield_12312322":null,"customfield_12310220":"2018-06-19T17:57:07.874+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Fri Aug 24 15:06:50 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_622652549_*|*_3_*:*_2_*:*_1798148710_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_2_*:*_1215567336","customfield_12312321":null,"resolutiondate":"2018-07-24T15:05:59.071+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HDFS-13672/watchers","watchCount":8,"isWatching":false},"created":"2018-06-12T12:59:50.499+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-08-24T15:06:50.175+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"I started a NameNode on a pretty large fsimage. Since the NameNode is started without any DataNodes, all blocks (100 million) are \"corrupt\".\r\n\r\nAfterwards I observed FSNamesystem#clearCorruptLazyPersistFiles() held write lock for a long time:\r\n\r\n{noformat}\r\n18/06/12 12:37:03 INFO namenode.FSNamesystem: FSNamesystem write lock held for 46024 ms via\r\njava.lang.Thread.getStackTrace(Thread.java:1559)\r\norg.apache.hadoop.util.StringUtils.getStackTrace(StringUtils.java:945)\r\norg.apache.hadoop.hdfs.server.namenode.FSNamesystemLock.writeUnlock(FSNamesystemLock.java:198)\r\norg.apache.hadoop.hdfs.server.namenode.FSNamesystem.writeUnlock(FSNamesystem.java:1689)\r\norg.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber.clearCorruptLazyPersistFiles(FSNamesystem.java:5532)\r\norg.apache.hadoop.hdfs.server.namenode.FSNamesystem$LazyPersistFileScrubber.run(FSNamesystem.java:5543)\r\njava.lang.Thread.run(Thread.java:748)\r\n        Number of suppressed write-lock reports: 0\r\n        Longest write-lock held interval: 46024\r\n{noformat}\r\n\r\nHere's the relevant code:\r\n\r\n{code}\r\n      writeLock();\r\n\r\n      try {\r\n        final Iterator<BlockInfo> it =\r\n            blockManager.getCorruptReplicaBlockIterator();\r\n\r\n        while (it.hasNext()) {\r\n          Block b = it.next();\r\n          BlockInfo blockInfo = blockManager.getStoredBlock(b);\r\n          if (blockInfo.getBlockCollection().getStoragePolicyID() == lpPolicy.getId()) {\r\n            filesToDelete.add(blockInfo.getBlockCollection());\r\n          }\r\n        }\r\n\r\n        for (BlockCollection bc : filesToDelete) {\r\n          LOG.warn(\"Removing lazyPersist file \" + bc.getName() + \" with no replicas.\");\r\n          changed |= deleteInternal(bc.getName(), false, false, false);\r\n        }\r\n      } finally {\r\n        writeUnlock();\r\n      }\r\n{code}\r\nIn essence, the iteration over corrupt replica list should be broken down into smaller iterations to avoid a single long wait.\r\n\r\nSince this operation holds NameNode write lock for more than 45 seconds, the default ZKFC connection timeout, it implies an extreme case like this (100 million corrupt blocks) could lead to NameNode failover.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12928461","id":"12928461","filename":"HDFS-13672.001.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"created":"2018-06-20T10:17:59.190+0000","size":4735,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12928461/HDFS-13672.001.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12929414","id":"12929414","filename":"HDFS-13672.002.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"created":"2018-06-27T13:53:06.905+0000","size":8155,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12929414/HDFS-13672.002.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12932727","id":"12932727","filename":"HDFS-13672.003.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"created":"2018-07-23T15:47:07.384+0000","size":8467,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12932727/HDFS-13672.003.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"clearCorruptLazyPersistFiles could crash NameNode","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16517378","id":"16517378","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"body":"Hi [~jojochuang],\r\nWhat would be a reasonable amount of elements that could be iterated through at one pass?\r\nShould this be number (number of iterations per pass) configurable from outside? \r\n\r\nThanks,\r\nGabor","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"created":"2018-06-19T17:57:07.874+0000","updated":"2018-06-19T17:57:07.874+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16517514","id":"16517514","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"body":"I've given it some thoughts.\r\nInstead of breaking down the iteration by the number of blocks, would it make sense to have a time-based configuration? For example, break out from the loop after 1 second?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jojochuang","name":"jojochuang","key":"jojochuang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=jojochuang&avatarId=25508","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jojochuang&avatarId=25508","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jojochuang&avatarId=25508","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jojochuang&avatarId=25508"},"displayName":"Wei-Chiu Chuang","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-19T20:34:18.247+0000","updated":"2018-06-19T20:34:18.247+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16518008","id":"16518008","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"body":"In my v001 patch, I'm solving the issue with the limited number of block per iteration.\r\n\r\n[~jojochuang], do you mean _break out from the loop after 1 second_  by breaking out of the whole clearCorruptLazyPersistFiles function or just releasing a lock and continue the interation? If the {{LazyPersistFileScrubber}} runs periodically we don't even have to remove all the corrupt replica blocks in one run.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"created":"2018-06-20T10:26:08.825+0000","updated":"2018-06-20T10:26:34.511+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16518158","id":"16518158","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 25s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 27m 13s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 57s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 13s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  3s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 12s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 56s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  1s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  0s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m  5s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  0s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 94m 33s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 30s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}158m  8s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.hdfs.TestDFSStripedOutputStreamWithFailureWithRandomECPolicy |\r\n|   | hadoop.hdfs.server.balancer.TestBalancer |\r\n|   | hadoop.hdfs.server.namenode.TestReencryptionWithKMS |\r\n|   | hadoop.hdfs.client.impl.TestBlockReaderLocal |\r\n|   | hadoop.hdfs.TestDFSClientRetries |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | HDFS-13672 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12928461/HDFS-13672.001.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 1a5051bc4e08 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 2d87592 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24480/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24480/testReport/ |\r\n| Max. process+thread count | 2874 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\r\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24480/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-20T13:52:24.988+0000","updated":"2018-06-20T13:52:24.988+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16525113","id":"16525113","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"body":"I've uploaded my v002 patch with the time-based configuration.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"created":"2018-06-27T13:54:17.645+0000","updated":"2018-06-27T13:54:17.645+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16525272","id":"16525272","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 21s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 55s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 59s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 12s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  6s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 31s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  5s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 51s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  3s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 58s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m  5s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  0s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 46s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 96m 24s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 30s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}160m 14s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.tools.TestHdfsConfigFields |\r\n|   | hadoop.hdfs.server.datanode.fsdataset.impl.TestLazyPersistFiles |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | HDFS-13672 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12929414/HDFS-13672.002.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux b78656d4af6a 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / bedc4fe |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24507/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24507/testReport/ |\r\n| Max. process+thread count | 3249 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\r\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24507/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-27T16:40:53.678+0000","updated":"2018-06-27T16:40:53.678+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16531371","id":"16531371","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andrew.wang","name":"andrew.wang","key":"andrew.wang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=andrew.wang&avatarId=19230","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andrew.wang&avatarId=19230","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andrew.wang&avatarId=19230","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andrew.wang&avatarId=19230"},"displayName":"Andrew Wang","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi Gabor, thanks for working on this,\r\n\r\nI don't think it's thread safe to drop the lock while holding onto an iterator like this. This is a LinkedSetIterator and will throw a ConcurrentModificationException if the set is changed underneath it. We need a way to safely resume at a mid-point, and that seems a bit hard with LinkedSetIterator as it is.\r\n\r\nSince I think the common case here is that there are zero lazy persist files, a better (though different) change would be to skip running this scrubber entirely if there aren't any lazy persist files. I'm hoping there's an easy way to add a counter for this (or some existing way to query if there are any lazy persist files).\r\n\r\nWe also need unit tests for new changes like this. I think you also typo'd the config key name with \"sec\" instead of \"millis\" or \"ms\". Config keys also needed to be added to hdfs-default.xml with a description for documentation purposes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andrew.wang","name":"andrew.wang","key":"andrew.wang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=andrew.wang&avatarId=19230","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andrew.wang&avatarId=19230","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andrew.wang&avatarId=19230","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andrew.wang&avatarId=19230"},"displayName":"Andrew Wang","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-07-03T13:16:15.235+0000","updated":"2018-07-03T13:16:15.235+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16531389","id":"16531389","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"body":"Thanks for the review [~andrew.wang]!\r\n\r\nBased on what you've said that can't happen *or* it's not likely to happen to have that many corrupt lazy persist files? It's a really good idea to have a counter on this, but I still feel like we need to handle the case when a long-running operation like this can time out and crash the namenode.\r\n\r\nIn my next patch I will\r\n* check if there's a counter for the lazy persist files, and if there's not, I will create one. \r\n* modify the clearCorruptLazyPersistFiles to re-create the iterator after every lock release\r\n* fix the typos (sorry for that)\r\n* add the config key documentation to hdfs-default.xml","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"created":"2018-07-03T13:36:15.520+0000","updated":"2018-07-03T13:36:15.520+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16531431","id":"16531431","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andrew.wang","name":"andrew.wang","key":"andrew.wang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=andrew.wang&avatarId=19230","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andrew.wang&avatarId=19230","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andrew.wang&avatarId=19230","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andrew.wang&avatarId=19230"},"displayName":"Andrew Wang","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi Gabor, to respond to your question, I think the very common case will be zero lazy persist files, the rare case being \"some\" (~thousands), and the very very rare case lots (~millions).\r\n\r\nI agree that holding the lock for a long time is an anti-pattern. I actually had a patch I was working on a while ago for a different feature that added a safe way of iterating over the block map.\r\n\r\nHowever, for this case I don't know if it's worth spending a lot of time optimizing, since the # of corrupt blocks in the system is normally not that large. It's a rare situation that a NameNode is transitioned to active while missing a lot of DNs like this (and why we have startup safemode checks). This probably only happens during debugging, in which case we could also solve this problem by setting the scrubber interval to 0 to disable it.\r\n\r\n[~jojochuang] what do you think?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andrew.wang","name":"andrew.wang","key":"andrew.wang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=andrew.wang&avatarId=19230","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andrew.wang&avatarId=19230","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andrew.wang&avatarId=19230","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andrew.wang&avatarId=19230"},"displayName":"Andrew Wang","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-07-03T13:51:54.038+0000","updated":"2018-07-03T13:51:54.038+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16553029","id":"16553029","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"body":"We had an offline discussion with [~andrew.wang] on this topic with the following outcome:\r\n* I upload a new patch for this issue with the iterator created inside the loop inside the writelock. If this patch is accepted, then this will be the proposed solution for this issue, so it can be committed.\r\n* Another solution for this would be to disable the scrubber interval when debugging. In the real world/customer environments, there are no cases when there are so many corrupted *lazy* persist files.\r\n* The open question about this is that should we disable the clearCorruptLazyPersistFiles by default?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"created":"2018-07-23T15:58:49.915+0000","updated":"2018-07-23T15:58:49.915+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16553150","id":"16553150","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andrew.wang","name":"andrew.wang","key":"andrew.wang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=andrew.wang&avatarId=19230","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andrew.wang&avatarId=19230","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andrew.wang&avatarId=19230","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andrew.wang&avatarId=19230"},"displayName":"Andrew Wang","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi Gabor, I took a quick look. It doesn't look like the iterator will make forward progress between iterations since it's starting from the beginning each time. What we need here is a tail iterator that starts at the last processed element.\r\n\r\nI recommend we close this as wontfix and then open a new JIRA to figure out if want to disable this feature (which is incompatible) or do some kind of smarter detection as to whether it's necessary. As an example, we check if encryption is being used by seeing if there are any encryption zones created.\r\n\r\nIt's also worth asking if it's worth making a behavior change at all, since this long blocking scan probably will only happen during debugging situations (and we have a workaround).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=andrew.wang","name":"andrew.wang","key":"andrew.wang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=andrew.wang&avatarId=19230","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andrew.wang&avatarId=19230","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andrew.wang&avatarId=19230","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andrew.wang&avatarId=19230"},"displayName":"Andrew Wang","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-07-23T17:32:55.010+0000","updated":"2018-07-23T17:32:55.010+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16553250","id":"16553250","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 11s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 47s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  4s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 13s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  7s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 21s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 51s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 51s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 10s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 59s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 59s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m  8s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 58s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m  1s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  6s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 49s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 80m 15s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 32s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}143m 49s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.hdfs.TestDFSStripedOutputStreamWithFailureWithRandomECPolicy |\r\n|   | hadoop.tools.TestHdfsConfigFields |\r\n|   | hadoop.hdfs.server.datanode.fsdataset.impl.TestLazyPersistFiles |\r\n|   | hadoop.hdfs.server.namenode.ha.TestEditLogTailer |\r\n|   | hadoop.hdfs.client.impl.TestBlockReaderLocal |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |\r\n| JIRA Issue | HDFS-13672 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12932727/HDFS-13672.003.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |\r\n| uname | Linux 6d7229b49206 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / bbe2f62 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24636/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24636/testReport/ |\r\n| Max. process+thread count | 4007 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |\r\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24636/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-23T18:44:30.989+0000","updated":"2018-07-23T18:44:30.989+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16553830","id":"16553830","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks all for the discussion here. I tend to agree with Andrew: since the scrubber has safemode checks to , this probably doesn't worth the effort to do a behavior change.\r\n\r\nThe idea of adding counters for lazy persist sounds good, can do that as an improvement jira if interested. :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-07-24T05:43:23.105+0000","updated":"2018-07-24T05:43:23.105+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16554351","id":"16554351","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"body":"Adding lazy persist would be a great idea. [~xiaochen] if you can create a follow-up jira if you want to.\r\nAnother good idea is to create a service where you can iterate through a list of elements with a gained writeLock - and each element can be run through a lambda function. We may want to create a jira for that. (kudos for [~andrew.wang])\r\n\r\nSo to summarize this issue:\r\n* It's not worth making a behavior change for this since this long blocking scan probably will only happen during debugging situations (and we have a workaround)\r\n* The workaround is to disable the scrubber interval when debugging. In the real world/customer environments, there are no cases when there are so many corrupted lazy persist files.\r\n* I will close this jira as won't fix and if there's no follow-up jiras, I'll create one tomorrow CET.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"created":"2018-07-24T15:05:48.110+0000","updated":"2018-07-24T15:05:48.110+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13165555/comment/16591771","id":"16591771","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"body":"With some delay, I've created HDFS-13864 as a follow-up.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"created":"2018-08-24T15:06:50.175+0000","updated":"2018-08-24T15:06:50.175+0000"}],"maxResults":15,"total":15,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HDFS-13672/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3urnz:"}}