{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12828364","self":"https://issues.apache.org/jira/rest/api/2/issue/12828364","key":"HDFS-8353","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310942","id":"12310942","key":"HDFS","name":"Hadoop HDFS","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310942&avatarId=10094","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310942&avatarId=10094","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310942&avatarId=10094","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310942&avatarId=10094"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"2015-05-08 13:35:18.391","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HDFS-8353/watchers","watchCount":3,"isWatching":false},"created":"2015-05-08T13:35:18.391+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326143","id":"12326143","description":"2.4.0 release","name":"2.4.0","archived":false,"released":true,"releaseDate":"2014-04-07"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12327181","id":"12327181","description":"2.6.0 release","name":"2.6.0","archived":false,"released":true,"releaseDate":"2014-11-18"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-11-24T19:47:46.570+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12327021","id":"12327021","name":"fs"}],"timeoriginalestimate":null,"description":"FileSystem.resolvePath() fails with Windows UNC path. This has a knock-on effect with Parquet file access in local filesystem, because Parquet has no open-using-stream API that we've been able to find. Take this simple test: \n\npublic class Scratch {\n  public static void main(String[] args) {\n    // Note that this path must exist\n    java.net.URI uriWithAuth = java.net.URI.create(\"file://host/share/file\");\n    try {\n      FileSystem fs = FileSystem.get(uriWithAuth, new Configuration());\n      fs.resolvePath(new Path(uriWithAuth));\n    } catch (Exception ex) {\n      ex.printStackTrace();\n    }\n  }\n}\n\nThe resolvePath() call will fail in FileSystem.checkPath():\n  protected void checkPath(Path path) {\n    URI uri = path.toUri();\n    String thatScheme = uri.getScheme();\n    if (thatScheme == null)                // fs is relative\n      return;\n    URI thisUri = getCanonicalUri();\n    String thisScheme = thisUri.getScheme();\n    //authority and scheme are not case sensitive\n    if (thisScheme.equalsIgnoreCase(thatScheme)) {// schemes match\n      String thisAuthority = thisUri.getAuthority();\n      String thatAuthority = uri.getAuthority();\n      if (thatAuthority == null &&                // path's authority is null\n          thisAuthority != null) {                // fs has an authority\n        URI defaultUri = getDefaultUri(getConf());\n        if (thisScheme.equalsIgnoreCase(defaultUri.getScheme())) {\n          uri = defaultUri; // schemes match, so use this uri instead\n        } else {\n          uri = null; // can't determine auth of the path\n        }\n      }\n      if (uri != null) {\n        // canonicalize uri before comparing with this fs\n        uri = canonicalizeUri(uri);\n        thatAuthority = uri.getAuthority();\n        if (thisAuthority == thatAuthority ||       // authorities match\n            (thisAuthority != null &&\n             thisAuthority.equalsIgnoreCase(thatAuthority)))\n          return;\n      }\n    }\n    throw new IllegalArgumentException(\"Wrong FS: \"+path+\n                                       \", expected: \"+this.getUri());\n  }\n\n\nThe problem is that thisAuthority is null, and thatAuthority gets \"host\". There is no logic for dealing with that case. In fact, this method seems broken in several ways. There are at least two problems: \n-- For UNC paths like file://host/share/... , the authority does not need to match, at least for Windows UNC paths. All of these paths are the same file system: \"file:///F:/folder/file\", \"file://host1/share/file\", \"file://host2/share/file\". \n-- The test thisAuthority == thatAuthority violates Java 101. It should be thisAuthority.equals(thatAuthority) \n-- hostnames are case-independent, so I think that the authority comparison should also be case-insensitive, at least for UNC paths. \n-- I don't see any attempt to resolve hostnames to IP addresses, but that may simply be beyond the scope of this method.\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"FileSystem.resolvePath() fails for Windows UNC paths","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=john.lilley%40redpoint.net","name":"john.lilley@redpoint.net","key":"john.lilley@redpoint.net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"john lilley","active":true,"timeZone":"America/Denver"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=john.lilley%40redpoint.net","name":"john.lilley@redpoint.net","key":"john.lilley@redpoint.net","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"john lilley","active":true,"timeZone":"America/Denver"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":"Windows 8, x64\nJava 1.7","customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[],"maxResults":0,"total":0,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HDFS-8353/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2ehbj:"}}