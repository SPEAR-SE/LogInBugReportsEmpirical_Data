{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12631775","self":"https://issues.apache.org/jira/rest/api/2/issue/12631775","key":"HDFS-4489","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310942","id":"12310942","key":"HDFS","name":"Hadoop HDFS","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310942&avatarId=10094","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310942&avatarId=10094","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310942&avatarId=10094","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310942&avatarId=10094"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324031","id":"12324031","description":"2.1.0-beta release","name":"2.1.0-beta","archived":false,"released":true,"releaseDate":"2013-08-22"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2013-03-15T18:26:59.415+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Apr 10 16:45:22 UTC 2014","customfield_12310420":"312271","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_5723553758_*|*_5_*:*_2_*:*_593326136_*|*_4_*:*_1_*:*_30223099899","customfield_12312321":null,"resolutiondate":"2014-04-10T16:45:22.204+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HDFS-4489/watchers","watchCount":17,"isWatching":false},"created":"2013-02-11T18:45:42.450+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[{"id":"12367766","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12367766","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"outwardIssue":{"id":"12430436","key":"HADOOP-6149","self":"https://issues.apache.org/jira/rest/api/2/issue/12430436","fields":{"summary":"FileStatus can support a fileid per path","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/2","id":"2","description":"A new feature of the product, which has yet to be developed.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype","name":"New Feature","subtask":false,"avatarId":21141}}}},{"id":"12367764","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12367764","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"outwardIssue":{"id":"12430121","key":"HDFS-487","self":"https://issues.apache.org/jira/rest/api/2/issue/12430121","fields":{"summary":"HDFS should expose a fileid to uniquely identify a file","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/2","id":"2","description":"A new feature of the product, which has yet to be developed.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype","name":"New Feature","subtask":false,"avatarId":21141}}}},{"id":"12531969","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12531969","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"13153150","key":"HDFS-13469","self":"https://issues.apache.org/jira/rest/api/2/issue/13153150","fields":{"summary":"RBF: Support InodeID in the Router","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}}},{"id":"12364554","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12364554","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12618468","key":"HDFS-4258","self":"https://issues.apache.org/jira/rest/api/2/issue/12618468","fields":{"summary":"Rename of Being Written Files","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-04-17T21:43:20.473+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312926","id":"12312926","name":"namenode"}],"timeoriginalestimate":null,"description":"The benefit of using InodeID to uniquely identify a file can be multiple folds. Here are a few of them:\n\n1. uniquely identify a file cross rename, related JIRAs include HDFS-4258, HDFS-4437.\n2. modification checks in tools like distcp. Since a file could have been replaced or renamed to, the file name and size combination is no t reliable, but the combination of file id and size is unique.\n3. id based protocol support (e.g., NFS)\n4. to make the pluggable block placement policy use fileid instead of filename (HDFS-385).\n\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324031","id":"12324031","description":"2.1.0-beta release","name":"2.1.0-beta","archived":false,"released":true,"releaseDate":"2013-08-22"}],"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12580860","id":"12580860","filename":"4434.optimized.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-27T23:55:54.491+0000","size":84260,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12580860/4434.optimized.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"312617","customfield_12312823":null,"summary":"Use InodeID as as an identifier of a file in HDFS protocols and APIs","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[{"id":"12625063","key":"HDFS-4334","self":"https://issues.apache.org/jira/rest/api/2/issue/12625063","fields":{"summary":"Add a unique id to each INode","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}},{"id":"12625356","key":"HDFS-4339","self":"https://issues.apache.org/jira/rest/api/2/issue/12625356","fields":{"summary":"Persist inode id in fsimage and editlog","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}},{"id":"12625403","key":"HDFS-4346","self":"https://issues.apache.org/jira/rest/api/2/issue/12625403","fields":{"summary":"Refactor INodeId and GenerationStamp","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}},{"id":"12628980","key":"HDFS-4434","self":"https://issues.apache.org/jira/rest/api/2/issue/12628980","fields":{"summary":"Provide a mapping from INodeId to INode","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}},{"id":"12642475","key":"HDFS-4694","self":"https://issues.apache.org/jira/rest/api/2/issue/12642475","fields":{"summary":"The SecondaryNameNode may change the inode id of root while doing checkpoint","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}},{"id":"12645563","key":"HDFS-4784","self":"https://issues.apache.org/jira/rest/api/2/issue/12645563","fields":{"summary":"NPE in FSDirectory.resolvePath()","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}},{"id":"12645661","key":"HDFS-4785","self":"https://issues.apache.org/jira/rest/api/2/issue/12645661","fields":{"summary":"Concat operation does not remove concatenated files from InodeMap","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}}],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13603642","id":"13603642","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"h2. Introduction\nThis jira proposes to introduce InodeID in HDFS. InodeID uniquely identifies an instance of an inode such as directory, file, symbolic links etc. independent of the file path name. This helps in several use cases:\n# HDFS can evolve to support ID based protocols such as NFS. We plan to add an experimental NFS V3 gateway to HDFS using this mechanism. Will post a github link soon.\n# InodeID can be used by the tools to track a single instance of a file, for cacheing data or tracking and checking for modification based on INodeID, in tools like distcp.\n# Path cannot identify a unique instance of a file. This causes issues as described in HDFS-4258 and HDFS-4437. It has also been a requirement of many other jiras such as HDFS-385.\n# Using InodeID as an identifier instead of path can be more efficient than path bases accesses. \n\nh4. New Inode identifier\nIt is 64 bit long number and has the following properties:\n# Number 0 is reserved and would be used for identifying invalid/default value.\n# Numbers 1-1023 are reserved for some unforeseen future requirements. The InodeID starts from 1024.\n# An InodeID is never re-used in a single namenode namespace.\n\nh3. General overview of the changes required\nApplications discover the InodeID by getting the FileStatus for an Inode or when an Inode is created or opened for append. FileStatus will be changed to include InodeID. Create and append will be changed to return FileStatus as well.\n\nFor other APIs that use path (Path or String) to identify a file we have two choices:\n# *API Change*: Add another variant of the API that uses InodeID to identify a file or add additional parameter InodeID to the API.\n# *No API Change*: Use the path to send the InodeID and keep the API changes to a minimum. Example, one could use path {{/.inodes/<inodesID>}}, where \".inodes\" is a reserved name to identify the path that pass InodeID instead of regular path. This similar to /proc used for special purposes on *nix.\n\nh4. InodeID to Inode map\nA new map (based on GSet) will be introduced in the namenode to map a given InodeID to an Inode. This is in addition to existing map of BlockID to BlockInfo.\n\nh4. Additional memory consumption\nAdding all this will require additional memory in the namenode.\n\n* 8 byte InodeID into Inode object results in a cost of 8 bytes per Inode. As proposed in HDFS-4258, this can be folded into existing modification and access time.\n* Introducing InodeID to Inode GSet results in additional memory of 16 bytes per Inode:\n** 8 * size of Gset (where size of GSet could be as big as number of Inodes)\n** 8 bytes per Inode for a java reference (pointer to next element as required by GSet)\n\nInodes and related objects consume approximately 1/3 of the JVM heap in a system that is full. Inode size is ~180 bytes and this proposal adds 16-24 bytes per Inode. With change the JVM heap needs to be increased by 3% to 4.5%. While further optimizations are possible to reduce this size further, it adds needless code complexity.\n\nh4. Security concerns\nInodeID is an alternate name similar to path. All the existing security mechanism that applies to path (that is ensuring permissions are checked from the root to the Inode) will also be done for InodeID based access.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-15T18:26:59.415+0000","updated":"2013-03-15T18:26:59.415+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13613236","id":"13613236","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"Given that the subtasks do not break the trunk, I plan to start reviewing individual jiras and committing the patches attached to subtasks. Some of these patches are already committed to trunk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-25T22:31:08.590+0000","updated":"2013-03-25T22:31:08.590+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13613240","id":"13613240","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"Why not do this on a branch? That makes the most sense to me, given that the individual patches themselves don't make a lot of sense when considered individually.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-25T22:34:40.440+0000","updated":"2013-03-25T22:34:40.440+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13613261","id":"13613261","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"[~atm] Can you describe which of the individual patches do not make sense to you? I thought the previous comments indicated that it was not clear how the overall design is and how the pieces fit together. Now that this jiras describes the over all motivation, approach being taken, I hope there is more clarity.\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-25T22:51:29.053+0000","updated":"2013-03-25T22:51:29.053+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13613269","id":"13613269","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"Sorry if I wasn't clear - all the patches make sense to me, it's just that several of them don't really stand on their own, so it seems like we should work on the whole work on a separate branch, get the feature in shape there, and then merge it back to trunk once the whole project is completed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-25T22:55:09.501+0000","updated":"2013-03-25T22:55:09.501+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13613293","id":"13613293","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. all the patches make sense to me, it's just that several of them don't really stand on their own\nI am not sure I understand this. One of the main reasons for a feature branch (at least for me), while during development, we may break trunk. But in this case that is not the case. \n\nI have cleaned up the list of subtasks in this jira. Hopefully the subtasks should make it more clear.\n\nLet me add some details about individual jiras and that should help in understanding them better:\n# HDFS-4334 - Adds unique ID to each INode.\n# HDFS-4346 - Refactored the code to remove code duplication between INode generation and block ID generation\n# HDFS-4339 - Persist the INode in fsimage.\n# HDFS-4434 - Introduce a map of inode ID to inode so that inodeid/fileid can be used as an identifier to address a file\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-25T23:19:46.772+0000","updated":"2013-03-25T23:19:46.772+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13613300","id":"13613300","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. One of the main reasons for a feature branch (at least for me), while during development, we may break trunk. But in this case that is not the case.\n\nAt one point in time I believe the INodeID work did indeed break WebHDFS on trunk.\n\nAnother reason for using a development branch is because the feature isn't necessarily complete without certain patches having been committed. The fact that HDFS-4339 (persist INodeIDs in the fsimage) isn't committed yet suggests that this feature won't really work as-intended until that's committed, but yet we've already committed other patches involving INodeIDs to trunk. That doesn't make much sense to me.\n\nI don't understand the resistance to doing this on a feature branch. What's the concern with doing so?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-25T23:28:44.137+0000","updated":"2013-03-25T23:28:44.137+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13613338","id":"13613338","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. At one point in time I believe the INodeID work did indeed break WebHDFS on trunk.\nThat is because of a bug introduced in the change. When I say *break* in my previous comment, it is breaking the functionality because incomplete set of changes where HDFS is not functional and not a bug in the code committed.\n\nbq. I don't understand the resistance to doing this on a feature branch. What's the concern with doing so?\nI am not resisting it, I do not see a need for it. I believe we have two more jiras to go in. Other jiras are already in. I think moving those commits to a separate branch, adding mere two more commits in that branch, calling for merge vote is unnecessary waste of time and I want to avoid it.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-26T00:21:08.709+0000","updated":"2013-03-26T00:21:08.709+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13613343","id":"13613343","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. I am not resisting it, I do not see a need for it. I believe we have two more jiras to go in. Other jiras are already in. I think moving those commits to a separate branch, adding mere two more commits in that branch, calling for merge vote is unnecessary waste of time and I want to avoid it.\n\nAlright, go for it. I'll repeat my claim that this work should have been done on a branch to begin with, but c'est la vie.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-26T00:29:16.480+0000","updated":"2013-03-26T00:29:16.480+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13614692","id":"13614692","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"body":"bq. Inode size is ~180 bytes and this proposal adds 16-24 bytes per Inode.\n\nHow is this calculated? I see the following 5 fields:\n\n{code}\n  private byte[] name = null;\n  private long permission = 0L;\n  protected INodeDirectory parent = null;\n  protected long modificationTime = 0L;\n  protected long accessTime = 0L;\n{code}\n\nfor a total of 40 bytes on a 64-bit JVM. So, adding 16-24 bytes is a pretty substantial new memory use.\n\nI agree with ATM that this should go on a branch since it's fairly invasive. Once the branch is working, we can evaluate the benefit of the new feature vs the measured cost (both memory and additional CPU to manage this new structure)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"created":"2013-03-26T23:47:56.432+0000","updated":"2013-03-26T23:47:56.432+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13614694","id":"13614694","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"body":"(I guess I should add the subclass fields, in which case INodeFile has another two 8-byte fields, plus the associated array object for BlockInfo, etc)... but still seems to come in a lot less than 180 bytes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"created":"2013-03-26T23:49:21.041+0000","updated":"2013-03-26T23:49:21.041+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13614721","id":"13614721","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. for a total of 40 bytes on a 64-bit JVM. So, adding 16-24 bytes is a pretty substantial new memory use.\nHere are the things that goes into ~180 bytes:\nINode is an object. It comes with the cost of 16 bytes object header overhead. Members include:\n# byte[] name - I assume typically ~56 bytes for this. That is (16 bytes object overhead, 8 byte length + bytes that make up file name, say 32)\n# reference to byte[] name - 8 bytes\n# long permission at the cost of 8 bytes.\n# parent reference at 8 bytes cost\n# modification time at 8 bytes cost\n# accessTime at 8 bytes cost\n\nThat is roughly ~112 bytes.\n\nTypically most of the INodes are INode files (I will leave the other type of inodes as an exercise).\n# It has BlockInfo[]. This is again 16 bytes of object, 8 bytes length, say two blocks in a file with two references, with a cost of 40 bytes.\n# It has long header that adds another 8 bytes.\n\nTotal ~160 bytes. So it is not very far off and the number I had posted was based on what I had calculated long back.\n\nThat said, 16-24 might seem like a huge percentage (10 to 15%) of INode size. But what is the amount of memory in NN heap that is allocate for Inodes. Assuming Inodes make up for 1/3, blocks make up for another 1/3, remaining 1/3 for floating garbage, head room etc, the net impact on NN heap is 3 to 5%. That is not far off from the analysis posted above.\n\nI believe half of the work is already in trunk. Remaining two jiras need to go in. I believe doing a branch at this point in time is unnecessary work.\n\nIf you are concerned about memory usage of your installs, I can add a config option and not instantiate the map. \n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-27T00:19:00.540+0000","updated":"2013-03-27T00:19:00.540+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13614802","id":"13614802","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"One more thing I forgot to add. There are many optimizations that are possible to reduce the memory consumed. It comes at the cost of code complexity and not so clean abstractions. I would rather avoid it and go for additional memory given newer machines are coming with more memory, than make the code unclean.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-27T01:57:00.104+0000","updated":"2013-03-27T01:57:00.104+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13615575","id":"13615575","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"body":"bq. byte[] name - I assume typically ~56 bytes for this. That is (16 bytes object overhead, 8 byte length + bytes that make up file name, say 32)\n\nAccording to your comment here: https://issues.apache.org/jira/browse/HDFS-1110?focusedCommentId=12861548&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12861548 a typical image with ~50M files will only need ~5M unique name byte[] objects, so I think it's unfair to count the above against the inode.\n\nI think you're also adding an extra 8 bytes on the arrays -- the array length as I understand it is a field within the 16byte object header (occupying the second half of the klassId field).\n\nRegardless, this seems like something that's very easy to test rather than try to solve analytically. Do you have results for the additional memory overhead of this map on a large production image? If it's truly 3-5%, seems reasonably, but I'm afraid it may look closer to 10+% in practice.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"created":"2013-03-27T18:12:28.413+0000","updated":"2013-03-27T18:12:28.413+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13615665","id":"13615665","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. I think you're also adding an extra 8 bytes on the arrays – the array length as I understand it is a field within the 16byte object header (occupying the second half of the klassId field).\nIf you have an authoritative source, please send me that. I cannot understand how 16 byte object header have spare of say possible 8 bytes to track array length. Some of of my previous instrumentation had led me to conclude the the array length is 4 bytes for 32bit JVM and 8 bytes for 64 bit JVM. See discussion here - http://www.javamex.com/tutorials/memory/object_memory_usage.shtml.\n\nbq. a typical image with ~50M files will only need ~5M unique name byte[] objects, so I think it's unfair to count the above against the inode.\nThat is a fair point. But my own inodes occupies 1/3rd of java heap is also an approximation and in practice I would think it inodes occupy smaller than that.\n\nI would like to run an experiment on a large production image. But I do not have ready access to it and will have to spend time getting to it. Do you have any?\n\nbq. but I'm afraid it may look closer to 10+% in practice.\nI do not think it will be close to 10%, but lets say it is. I do not see much issues with it. When we did some of the optimizations earlier, we were not sure how JVM would do if goes closes to 64G and hence wanted to keep the heap size down. But since then many large installations have successfully, without any issues gone beyond that size. Smaller installations should be able to spare, say, 10% extra heap. But if that is not acceptable, here are the alternatives I see:\n# Add configuration options to turn this feature off. Not instantiating GSet will reduce the overhead by 1/3rd. This is simple to do.\n# Make more optimizations at the expense of code complexity. I would like to avoid this. But if it is deemed very important, with some optimizations, we can get it close to 0%.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-27T19:49:20.078+0000","updated":"2013-03-27T19:49:20.078+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13615677","id":"13615677","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"body":"bq. If you have an authoritative source, please send me that\n\nSure, from the JDK7 source code hotspot/src/share/vm/oops/arrayOop.hpp:\n\n{code}\n// The layout of array Oops is:\n//\n//  markOop\n//  klassOop  // 32 bits if compressed but declared 64 in LP64.\n//  length    // shares klass memory or allocated after declared fields.\n{code}\n\nImportant to note that the length of arrays is 32-bit, since array.length is an int rather than a long. So given a 64-bit field for klassId, it can use 32-bits for the actual class and 32 bits for the array length.\n\nbq. I would like to run an experiment on a large production image. But I do not have ready access to it and will have to spend time getting to it. Do you have any?\n\nYes, I can run the experiment on a large image. Is HDFS-4434's patch ready to apply so I can test it?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"created":"2013-03-27T20:00:01.905+0000","updated":"2013-03-27T20:00:01.905+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13615709","id":"13615709","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. or allocated after declared fields.\nNot sure what this means though.\n\nHDFS-4434 patch is ready. Thanks in advance for running the tests.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-27T20:23:44.994+0000","updated":"2013-03-27T20:23:44.994+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13615749","id":"13615749","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"body":"  // The _length field is not declared in C++.  It is allocated after the\n  // declared nonstatic fields in arrayOopDesc if not compressed, otherwise\n  // it occupies the second half of the _klass field in oopDesc.\n  static int length_offset_in_bytes() {\n    return UseCompressedOops ? klass_gap_offset_in_bytes() :\n                               sizeof(arrayOopDesc);\n  }\n\nBasically if CompressedOops are on, then klassids are only 32-bits, but there's already a 64-bit field for it, so it just uses the latter 4 bytes for the array length. Otherwise it's an extra 4 bytes that comes after the standard oop header (oopDesc). So, without compressed oops, arrays take 20 bytes base. With them (on by default on heaps <32GB since 6u18 I believe), the array header is the same size as normal objects (16 bytes).\n\nWill take a look at loading a big image with that patch now.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"created":"2013-03-27T20:58:51.727+0000","updated":"2013-03-27T20:58:51.727+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13615755","id":"13615755","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"Ran some quick tests for object sizes, using https://github.com/dweiss/java-sizeof (pretty neat stuff!)\n{code}\n  public static void main(String[] args) {\n    System.out.println(RamUsageEstimator.sizeOf(new Object()));\n    System.out.println(RamUsageEstimator.sizeOf(new Object[0]));\n    System.out.println(RamUsageEstimator.sizeOf(new Object[1000000]));\n  }\n{code}\n\nWith compressed oops on I get:\n16\n16\n4000016\n\nAfter turning it off:\n16\n24\n8000024\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-27T21:09:48.922+0000","updated":"2013-03-27T21:09:48.922+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13615760","id":"13615760","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"body":"Neat. I'm setting up those tests now... taking a while to clone/build hadoop onto the right machine that has enough RAM.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"created":"2013-03-27T21:15:13.747+0000","updated":"2013-03-27T21:15:13.747+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13616634","id":"13616634","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"body":"Here's the results from the latest patch:\n\nh2. Setup\n- Java 6u31 convigured with a 24gb heap (-Xms24g -Xmx24g)\n- fsimage is 4.1GB on disk, snapshot from a mid size production cluster which runs both hbase and some MR workloads.\n- 31249022 files and directories, 26525575 blocks = 57774597 total filesystem objects.\n\nIn each test, I started the NameNode, waited until it had loaded the image and opened its IPC port, and then used \"jmap -histo:live\", which issues a full GC and reports heap usage statistics.\n\nh2. 2.0.3-beta release\nTotal heap: 7069MB\n\nTop consumers\n{code}\n num     #instances         #bytes  class name\n----------------------------------------------\n   1:      38421509     2049194112  [Ljava.lang.Object;\n   2:      26525179     1485410024  org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo\n   3:      19134601     1071537656  org.apache.hadoop.hdfs.server.namenode.INodeFile\n   4:      16228949      753517120  [B\n   5:      12113580      581451840  org.apache.hadoop.hdfs.server.namenode.INodeDirectory\n   6:      19135442      484175352  [Lorg.apache.hadoop.hdfs.server.blockmanagement.BlockInfo;\n   7:       1621399      403948560  [I\n   8:      11895039      285480936  java.util.ArrayList\n   9:             1      268435472  [Lorg.apache.hadoop.hdfs.util.LightWeightGSet$LinkedElement;\n{code}\n\nh2. Patched trunk with the map turned off\nTotal heap: 7528MB (6.5% increase from 2.0.3)\n\nTop consumers\n{code}\n num     #instances         #bytes  class name\n----------------------------------------------\n   1:      38421427     2049187584  [Ljava.lang.Object;\n   2:      26525179     1485410024  org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo\n   3:      19134601     1377691272  org.apache.hadoop.hdfs.server.namenode.INodeFile\n   4:      12113580      775269120  org.apache.hadoop.hdfs.server.namenode.INodeDirectory\n   5:      16228690      753509864  [B\n   6:      19135442      484175352  [Lorg.apache.hadoop.hdfs.server.blockmanagement.BlockInfo;\n   7:       1654298      384726200  [I\n   8:      11895040      285480960  java.util.ArrayList\n   9:             1      268435472  [Lorg.apache.hadoop.hdfs.util.LightWeightGSet$LinkedElement;\n{code}\n\nh2. Patched trunk with the map turned on\nTotal heap: 7696MB (8.9% increase from 2.0)\n\nTop consumers\n{code}\n num     #instances         #bytes  class name\n----------------------------------------------\n   1:      38421429     2049187632  [Ljava.lang.Object;\n   2:      26525179     1485410024  org.apache.hadoop.hdfs.server.blockmanagement.BlockInfo\n   3:      19134601     1377691272  org.apache.hadoop.hdfs.server.namenode.INodeFile\n   4:      12113580      775269120  org.apache.hadoop.hdfs.server.namenode.INodeDirectory\n   5:      16228746      753515976  [B\n   6:      19135442      484175352  [Lorg.apache.hadoop.hdfs.server.blockmanagement.BlockInfo;\n   7:       1499494      426158720  [I\n   8:             2      402653216  [Lorg.apache.hadoop.hdfs.util.LightWeightGSet$LinkedElement;\n   9:      11895040      285480960  java.util.ArrayList\n{code}\n\n\nI don't think this increased memory is necessarily unacceptable, I just wanted to see true measurement of the overhead instead of hypotheses. It looks like the increased memory cost is about twice what was estimated above.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"created":"2013-03-28T20:51:16.892+0000","updated":"2013-03-28T20:51:16.892+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13616645","id":"13616645","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"[~tlipcon] Thanks for running the tests.\n\nI personally am not concerned about this increased memory. If there are others with concerns, I can try reducing memory consumption further at the expense more complex code. Thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-28T21:00:26.018+0000","updated":"2013-03-28T21:00:26.018+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13616652","id":"13616652","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"BTW my calculations of increased memory is against the total java heap allocated to the process than memory used in old generation alone. That is a better way to quantify the impact on users, right?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-28T21:04:28.591+0000","updated":"2013-03-28T21:04:28.591+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13616658","id":"13616658","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. BTW my calculations of increased memory is against the total java heap allocated to the process than memory used in old generation alone. That is a better way to quantify the impact on users, right?\n\nSorry my previous comments may not be clear to every one. Increases of 625MB from 7069MB to 7696MB is 8.9%, the way I was quantifying was percentage of entire java heap memory. That is 625MB out of 24G, that is 2.6%.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-28T21:10:23.175+0000","updated":"2013-03-28T21:10:23.175+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13617328","id":"13617328","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"Any further comments? I plan to wrap up HDFS-4334 soon. If there are no further concerns, I do not plan on optimizing memory further at the expense of code complexity.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-29T13:27:28.149+0000","updated":"2013-03-29T13:27:28.149+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13625918","id":"13625918","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"I've only skimmed this jira, but a 9% increase is fairly substantial for large namespaces.  Are there any performance metrics available?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-04-08T22:37:31.937+0000","updated":"2013-04-08T22:37:31.937+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13625969","id":"13625969","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. 9% increase is fairly substantial for large namespaces.\nPlease look at the overall increase in memory usage instead of increase over used memory. As I said that is close 2.6%.\n\nbq. Are there any performance metrics available?\nI do not see much concern here. In fact I removed the flag to turn this feature on or off. If you think based on the code this is a concern, I could add the flag back. What metrics would you like to see?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-08T23:17:21.448+0000","updated":"2013-04-08T23:17:21.448+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13626799","id":"13626799","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Maybe something simple like GridMix to get a rough feel for the overhead of the extra resolution.  I don't expect it to be much, but it'd be nice to know.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-04-09T16:44:39.581+0000","updated":"2013-04-09T16:44:39.581+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13626868","id":"13626868","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kihwal","name":"kihwal","key":"kihwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kihwal&avatarId=34594","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kihwal&avatarId=34594","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kihwal&avatarId=34594","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kihwal&avatarId=34594"},"displayName":"Kihwal Lee","active":true,"timeZone":"America/Chicago"},"body":"bq. Please look at the overall increase in memory usage instead of increase over used memory. \nYour point would be valid only if the overhead was entirely a fixed amount (e.g. GSet).  Since the extra memory consumption increases as the size of namespace grows, factoring the arbitrary max heap size into this can be misleading.  But I agree that the 9% figure does not have an absolute meaning either. If the inode-to-block ratio is different, the number will be different. For the clusters I have seen, it will be a lower number. The GSet used for InodeID to INode map is also semi-fixed. Is it allocated similarly to BlocksMap? \n\nIn any case, I would not call this insignificant. We have a namenode which will not work well if we upgrade to a release with this feature since it will need extra 4-6GB for the steady-state operation. Even if it could absorb the extra memory requirement, we would have to tell users that the namespace limit is X% worse.  \n\nSimply saying the overhead is insignificant won't convince users. We should explain why the benefit from having this feature justifies the overhead.  I don't think on/off switch is necessary. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kihwal","name":"kihwal","key":"kihwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kihwal&avatarId=34594","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kihwal&avatarId=34594","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kihwal&avatarId=34594","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kihwal&avatarId=34594"},"displayName":"Kihwal Lee","active":true,"timeZone":"America/Chicago"},"created":"2013-04-09T17:44:12.118+0000","updated":"2013-04-09T17:44:12.118+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13626881","id":"13626881","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. The GSet used for InodeID to INode map is also semi-fixed. Is it allocated similarly to BlocksMap?\nYes. Please see the patch in HDFS-4434. About 1% of heap is used for the GSet.\n\nbq. Simply saying the overhead is insignificant won't convince users. We should explain why the benefit from having this feature justifies the overhead. I don't think on/off switch is necessary.\nI think the assertion here is not overhead is insignificant. Depending on details of how the namespace of a system is laid out, I would think this would be anywhere from 2 to 5%.\n\nAs far the benefits, in the main description I laid this out:\n\n---\nThis helps in several use cases:\n# HDFS can evolve to support ID based protocols such as NFS. We plan to add an experimental NFS V3 gateway to HDFS using this mechanism. Will post a github link soon.\n# InodeID can be used by the tools to track a single instance of a file, for cacheing data or tracking and checking for modification based on INodeID, in tools like distcp.\n# Path cannot identify a unique instance of a file. This causes issues as described in HDFS-4258 and HDFS-4437. It has also been a requirement of many other jiras such as HDFS-385.\n# Using InodeID as an identifier instead of path can be more efficient than path bases accesses.\n---\n\nbq. We have a namenode which will not work well if we upgrade to a release with this feature since it will need extra 4-6GB for the steady-state operation. Even if it could absorb the extra memory requirement, we would have to tell users that the namespace limit is X% worse.\nIs this because namenode does not have RAM? With this change, it is expected that NN is allocated more memory, say 5%. If this is done I am not sure why users should be told namespace limit is X% worse?\n\nMy rationale, repeating what I said earlier is,  machines are becoming available with more RAM. Adding 5% JVM heap should not be a problem. In fact most of the namenodes are configured with enough head room already and might not even need a change. But if this is a big concern, I am okay making additional change to bring down the memory consumption close to zero. \n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-09T17:54:49.991+0000","updated":"2013-04-09T17:54:49.991+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13627920","id":"13627920","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Perhaps ASN.1 encoding the long for the inode id will significantly decrease the memory consumption?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-04-10T15:43:44.948+0000","updated":"2013-04-10T15:43:44.948+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13628050","id":"13628050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. Perhaps ASN.1 encoding the long for the inode id will significantly decrease the memory consumption?\nCan you add more details on how this would decrease memory consumption? BTW inodeID was added as a part of HDFS-4334. See the discussion about how reduce the impact of adding inode ID - https://issues.apache.org/jira/browse/HDFS-4258?focusedCommentId=13508432&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13508432.\n\nBut I am not sure if that optimization is necessary at the expense of code. Thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-10T18:03:05.582+0000","updated":"2013-04-10T18:03:05.582+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13628057","id":"13628057","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kihwal","name":"kihwal","key":"kihwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kihwal&avatarId=34594","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kihwal&avatarId=34594","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kihwal&avatarId=34594","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kihwal&avatarId=34594"},"displayName":"Kihwal Lee","active":true,"timeZone":"America/Chicago"},"body":"bq. With this change, it is expected that NN is allocated more memory, say 5%. If this is done I am not sure why users should be told namespace limit is X% worse?\n\nIn many use cases, allocating more heap may not be a problem since machines typically have more memory available. But if you approach from the view point of owners of existing hardware that was spec'ed to hold certain size of namespace, it can be viewed as a decrease of capacity. I am not saying it is a showstopper. I just felt it should be given more thought.  \n\nI will review the implementation and try to understand your concerns about more memory efficient design.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kihwal","name":"kihwal","key":"kihwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=kihwal&avatarId=34594","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kihwal&avatarId=34594","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kihwal&avatarId=34594","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kihwal&avatarId=34594"},"displayName":"Kihwal Lee","active":true,"timeZone":"America/Chicago"},"created":"2013-04-10T18:15:22.075+0000","updated":"2013-04-10T18:15:22.075+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13628197","id":"13628197","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. But if you approach from the view point of owners of existing hardware that was spec'ed to hold certain size of namespace, it can be viewed as a decrease of capacity.\nAgain I do not believe anyone runs with NN very tightly configured given the nature garbage collection. That said, to make further progress, the following optimizations can be done:\n\n# Initialize the map only when this feature is enabled. Should take away roughly 1/3 of extra memory.\n# Reuse existing bits in INodeId - https://issues.apache.org/jira/secure/EditComment!default.jspa?id=12618468&commentId=13508432. Should take away roughly 1/3 of extra memory.\n# Use first block ID of the file (after ensuring even empty file has an associated block) as the InodeID. This is very ugly and mixing two abstractions that should not be mixed. I am reluctant to make this optimization.\n\nMy vote is to keep the code simple, abstractions clean. If folks think the above optimizations is worth pursuing, I will update the patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-10T20:16:12.262+0000","updated":"2013-04-10T20:16:12.262+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13628217","id":"13628217","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}I am not saying it is a showstopper. I just felt it should be given more thought. {quote}\nIn many cases, a trade-off is involved with the introduction of a new feature or enhancement. \nThis JIRA was forked from HDFS-4258 and the discussion/experiment has been going on for more than 4 months. \n\nAs shown in the theory analysis and experiment results, the memory overhead of this change is not significant. It doesn't seems to be worthwhile for now to complicate NameNode code to do the extra optimizations. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-10T20:40:11.673+0000","updated":"2013-04-10T20:40:11.673+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13628931","id":"13628931","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"bq. {quote}Perhaps ASN.1 encoding the long for the inode id will significantly decrease the memory consumption?{quote}\nbq. Can you add more details on how this would decrease memory consumption?\n\nIf the long is encoded as a variable length byte array, it should take a long time to exceed 4-5 bytes.  With minimal effort & complexity, the memory increase would nominally be cut in half for many deployments.  Just a suggestion.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-04-11T13:44:58.001+0000","updated":"2013-04-11T13:44:58.001+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13629197","id":"13629197","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nIf the long is encoded as a variable length byte array, it should take a long time to exceed 4-5 bytes. With minimal effort & complexity, the memory increase would nominally be cut in half for many deployments.\n{quote}\nThis would save space when serializing the fsImage. I am not sure if we can reduce in-memory usage below the size of a primitive long since the byte array is an object.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-11T18:18:16.713+0000","updated":"2013-04-11T18:18:16.713+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13633360","id":"13633360","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"For people who are following this jira, HDFS-4434 is now ready for review and commit. Please provide any feedback you have soon. otherwise the comments that come late will have to be incorporated in a subsequent jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-16T21:03:19.133+0000","updated":"2013-04-16T21:03:19.133+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13635891","id":"13635891","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"body":"Close this JIRA since all its sub-issues have been resolved. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-19T00:38:16.202+0000","updated":"2013-04-19T00:38:16.202+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13640438","id":"13640438","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"I am planning to push the subtasks of this jira to release 2.0.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-24T13:36:05.134+0000","updated":"2013-04-24T13:36:05.134+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13641003","id":"13641003","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"I have merged the subtasks of this jira into branch-2.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-24T21:47:22.838+0000","updated":"2013-04-24T21:47:22.838+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13642118","id":"13642118","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Posted a request for the bases for porting this to branch 2.0.5 in HDFS-4434.\n\nsuresh> What is the concern?\n\nMy concern is that you committed incompatible change, which is a new feature and a large change, into the stabilization branch without a vote or a release plan discussed with the community.\nBeing a bad practice in general, I think it is a wrong move now in particular, because people are discussing the stabilization of 2.0.5.\nThis feature totals about 150K of code in patches (counting subtasks only). Not helping stabilization. And you didn't give any reasons for the merge.\n\nI would like to ask to revert this merge from branch 2.0.5 and follow the procedures for merging features into new release branches if you decide to proceed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-25T19:30:36.353+0000","updated":"2013-04-25T19:30:36.353+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13642185","id":"13642185","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. My concern is that you committed incompatible change\nKonstantin, not sure if you looked at the release notes. This change disallows a file or directory name called .reserved under root. That is the only reason why I marked it as incompatible. This is not related to wire or API incompatibility. That said, one of the goal for 2.0.5 is drive towards a state where incompatible changes are not allowed after it.\n\nbq. which is a new feature and a large change, into the stabilization branch without a vote or a release plan discussed with the community.\nI agree that this is a new features. Committers routinely promote changes that they consider are okay to branch-2. I believe this does not add to the instability. Let me know if you disagree based on a code review/testing.\n\nAlso merging to branch-2 in a lot of cases is done based on a committer's judgement. Please look various other jiras that are merged in without vote thread into branch-2. I do not consider this as a large feature. However for Snapshot feature, I would have brought up that in a release thread.\n\nbq. . And you didn't give any reasons for the merge.\nI think there is enough motivation for the feature posted in the jira. \n\nbq. I would like to ask to revert this merge from branch 2.0.5 and follow the procedures for merging features into new release branches if you decide to proceed.\nI have spent more than 12 hours merging the chain of jiras required and resolving conflict before getting to 4 changes that introduced file id. Is your concern about HDFS-4434 or all the related changes?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-25T20:40:09.968+0000","updated":"2013-04-25T20:40:09.968+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13642212","id":"13642212","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nroberts","name":"nroberts","key":"nroberts","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nathan Roberts","active":true,"timeZone":"America/Chicago"},"body":"Sorry this is a really late comment but I'd really like to see some performance numbers before and after. While 6.5% increase in overall heap size is not massive, my main concern is the 25% increase in a very core data structure within the NN (1.07G->1.37G in Todd's measurement of INodeFile). This could cause significant cache pollution and therefore could have a very measurable impact on performance. I don't know for sure that it will, but it seems it would be reasonable to verify.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nroberts","name":"nroberts","key":"nroberts","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nathan Roberts","active":true,"timeZone":"America/Chicago"},"created":"2013-04-25T21:01:20.413+0000","updated":"2013-04-25T21:01:20.413+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13642225","id":"13642225","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"[~nroberts] What performance test would you like to see run with and without this change? NNBench?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-25T21:13:05.799+0000","updated":"2013-04-25T21:14:24.535+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13642242","id":"13642242","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"I have reverted HDFS-4434 from branch-2. Will post the performance numbers and then commit the change to branch-2, based on that discussion.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-25T21:28:46.434+0000","updated":"2013-04-25T21:28:46.434+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13642290","id":"13642290","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"body":"Nathan. A question.\nSuresh is willing to do the performance benchmark, but I am trying to understand where you are coming from.  Yahoo and FB create very large namespaces by simply buying more memory and increasing the size of the heap. Do you worry about cache pollution when you create 50K more files? Given that the NN heap (many GBs) is so much larger than the cache, does the additional inode and inode-map size impact the overall system performance? Suresh has argued that a 24GB heap grows by 625MB. Looking at the growth in memory of this feature as a percentage of the total heap size is a more realistic way of looking at the impact of the growth than the growth of an individual data structure like the inode.\n\nIMHO, not having an inode-map and inode number was a serious limitation in the original implementation of NN. I am willing to pay for the extra memory given the value inode-id and inode-map brings (as described by suresh in the beginning of this Jira). Permissions, access time, etc   added to the memory cost of the the NN and were accepted because of the value they bring. \n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sanjay.radia","name":"sanjay.radia","key":"sanjay.radia","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sanjay Radia","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-25T22:12:36.095+0000","updated":"2013-04-25T22:12:36.095+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13642355","id":"13642355","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Suresh whatever reason for incompatibility it should go through approval process.\nYou also committed the LayoutVersion change HDFS-4296. Now it requires an upgrade.\n\n> one of the goal for 2.0.5 is drive towards a state where incompatible changes are not allowed after it.\n\nThat was the goal for Hadoop 0.20.\nI thought the goal for 2.0.5 is stabilization.\n\n> Also merging to branch-2 in a lot of cases is done based on a committer's judgement.\n\nI think it is wrong. Especially for the stabilization release.\n\n> I think there is enough motivation for the feature posted in the jira. \n\nNot arguing about the value of the feature. But about its necessity for 2.0.5\n\n> Is your concern about HDFS-4434 or all the related changes?\n\nMost of them. I would have reviewed if I had a proper warning.\nSo again why is it necessary for 2.0.5?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-25T23:07:39.694+0000","updated":"2013-04-25T23:07:39.694+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13642455","id":"13642455","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nThat was the goal for Hadoop 0.20.\nI thought the goal for 2.0.5 is stabilization.\n{quote}\nI am not sure if 0.20 is a typo. If it is not, I have hard time parsing that statement. See the previous discussion about 2.0.4-beta (now called 2.0.5) in this thread:\nhttp://hadoop.markmail.org/thread/v44nqp466p76jpkj\n\n\nbq. I think it is wrong. Especially for the stabilization release.\nI disagree. I want to get some of the features I have been working on into this release. I think the goal of this release is to get API and wire compatibility stable.\n\nbq. Most of them. I would have reviewed if I had a proper warning.\nI am not sure what kind of warning you are talking about. HDFS-4434 has been in development for a long time with more than 32 iterations of the patch.\n\nbq. So again why is it necessary for 2.0.5?\nSnapshot and NFS feature depends on this. I would like see it become available in 2.0.5.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-26T00:58:27.762+0000","updated":"2013-04-26T00:58:27.762+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13642887","id":"13642887","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"I don't think Nathan and I are questioning the utility of the feature, but need to get a feel for the possible performance impact.  _If_ there is a significant degradation then it will delay our adoption of 2.x until it's optimized.\n\nI think a good performance test is to create a namespace of 150M paths.  Flood the NN with thousands of concurrent file & directory add/deletes per second throughout the namespace.  Hopefully there is existing benchmark with those properties.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-04-26T14:26:04.797+0000","updated":"2013-04-26T14:26:04.797+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13642895","id":"13642895","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. I think a good performance test is to create a namespace of 150M paths. Flood the NN with thousands of concurrent file & directory add/deletes per second throughout the namespace. Hopefully there is existing benchmark with those properties.\nI think we are talking about hashmap entry addition and deletion during adds and delete of files, other than increased memory. I am not sure I understand the cache pollution part of performance impact, given namenode core objects run into GBs in a large setup.\n\nI am currently running some slive tests. But I do not currently have bandwidth to setup a namenode with 150M paths (that would require more than 64GB of JVM heap). Do you have some bandwidth to do these tests? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-26T14:32:59.210+0000","updated":"2013-04-26T14:32:59.210+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13642907","id":"13642907","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Suresh,\n0.20 is not  typo. You should parse it as a sarcasm, sorry. Wire compatibility was a target for many previous releases and the train is still there.\nWe clearly have a disagreement about what should be in the release. Other people may have other opinions. And that is my point.\nAll I ask is to play by the rules. Make a release plan and put it into vote. See bylaws under \"Release Plan\". I'll be glad to discuss your plan.\nHere you act like its your own branch where you commit what you want and nobody else cares.\nDoes it make sense?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-26T14:49:13.184+0000","updated":"2013-04-26T14:49:13.184+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13642996","id":"13642996","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. Here you act like its your own branch where you commit what you want and nobody else cares.\nI fail to understand the need for such hostile tone. That said, please look at many small features, improvements and numerous bug fixes that are committed by me and other committers into many of the 2.0.x releases, without any discussion or need for vote, entirely based on their judgement. \n\nTo be clear, a committer can commit to any branch. It is up to the release manager to include it or not in a release.\n\nInstead of stating your objection to a change as it is big, 150K lines of code etc., it would be great if you can really look at the patch and express more concrete technical concerns related to stability.\n\nI have reverted HDFS-4434. I have also responded on the thread related to 2.0.5 on including the features that many have been working for many months.\n\nIt seems to me that suddenly in past week or so you have decided that stability is the only paramount thing, disregarding all the discussions that have happened. Please see my earlier comment on discussion related to API and wire protocol stability that we had months ago.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-26T16:30:44.608+0000","updated":"2013-04-26T16:36:13.314+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13643025","id":"13643025","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nroberts","name":"nroberts","key":"nroberts","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nathan Roberts","active":true,"timeZone":"America/Chicago"},"body":"bq. Suresh is willing to do the performance benchmark, but I am trying to understand where you are coming from. Yahoo and FB create very large namespaces by simply buying more memory and increasing the size of the heap. \n\nThis is not always possible. Some of our namenodes are running at the maximum configuration for the box (maximum memory, maximum heap, near maximum namespace). For these clusters, upgrading to this feature will require new boxes. \n\nbq. Do you worry about cache pollution when you create 50K more files? \nI don't worry about cache pollution when I create 50K more files. What's important is the size of the working set. Inodes are a very popular object within the NN, if inodes make up a significant part of our working set, then it matters. I don't know whether this is the case or not, that's why I think it makes sense to run some benchmarks to make sure we don't see any ill-effects. With the introduction of YARN, the central RM is rarely the bottleneck. Now it's much more common for the NN to be the bottleneck of the cluster, and slowing down the bottleneck always needs to be looked at carefully.\n\nbq. Given that the NN heap (many GBs) is so much larger than the cache, does the additional inode and inode-map size impact the overall system performance? \nGood question. Let's find out.\n\nbq. Suresh has argued that a 24GB heap grows by 625MB. \nI was using the numbers Todd gathered where a 7G heap grew by 600MB. When we looked at one of our key clusters, we calculated something like 7.5% increase.\n\nbq. Looking at the growth in memory of this feature as a percentage of the total heap size is a more realistic way of looking at the impact of the growth than the growth of an individual data structure like the inode.\nMaybe.   \n\n\nbq. IMHO, not having an inode-map and inode number was a serious limitation in the original implementation of NN. I am willing to pay for the extra memory given the value inode-id and inode-map brings (as described by suresh in the beginning of this Jira). Permissions, access time, etc added to the memory cost of the the NN and were accepted because of the value they bring. \nCertainly agree it is a limitation. We just need to make sure we fully quantify all of the costs.  \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nroberts","name":"nroberts","key":"nroberts","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nathan Roberts","active":true,"timeZone":"America/Chicago"},"created":"2013-04-26T16:59:31.004+0000","updated":"2013-04-26T16:59:31.004+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13643404","id":"13643404","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"> hostile tone.\n\nI apologize.\nI guess what I really wanted to say that it is hostile to commit incompatible changes in a stabilization branch before the release plan is proposed.\n\n>  would be great if you can really look at the patch\n\nYou know I did.\nThanks for responding on the thread related to 2.0.5. I understand the plan much better.\nI appreciate your reverting HDFS-434.\n\nThere is still an incompatible change HDFS-4296. It is listed in new features for some reason.\nDo you still need HDFS-4296 once HDFS-434 is reverted?\nWe did not change LayoutVersion since branch 0.23.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-27T00:07:17.532+0000","updated":"2013-04-27T00:07:17.532+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13643424","id":"13643424","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. There is still an incompatible change HDFS-4296. It is listed in new features for some reason.\nIt is not incompatible and hence not marked as incompatible in jira or CHANGES.txt. It is currently listed as New Feature in CHANGES.txt. I do not think it should be listed under New Features section (though it does not qualify for Improvement, Bug fix any of that). I will move it to bug fix section.\n\nbq. Do you still need HDFS-4296 once HDFS-434 is reverted?\nIt is needed because it corresponds to a layout version reserved in branch-1 for concat. It is not related to HDFS-4434.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-27T00:30:40.987+0000","updated":"2013-04-27T00:30:40.987+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13643745","id":"13643745","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"I ran Slive tests. Even with very small size data written, I could not find perceptible difference between the test runs given any additional time in NN methods is dwarfed by the overall time of calling NN over RPC etc.\n\nSo I decided to run NNThroughputBenchmark. For folks new to it, it is a micro benchmark that does not use RPC and directly executes operations on the namenode class. Hence it gives comparisons sharply limited to NN method calls alone. I ran NNThroughputBenchmark command run to create 100K files using 100 threads in each iteration, using the command below:\n{noformat}\nbin/hadoop jar share/hadoop/hdfs/hadoop-hdfs-2.0.5-SNAPSHOT-tests.jar org.apache.hadoop.hdfs.server.namenode.NNThroughputBenchmark -op create -threads 100 -files 100000 -filesPerDir 100 \n{noformat}\n\n*Without this patch:*\n||Opertaions||Elapsed||OpsPerSec||AvgTime||\n|100000| 20327| 4919.565110444237| 20|\n|100000| 19199| 5208.604614823688| 19|\n|100000| 19287| 5184.839529216571| 19|\n|100000| 19128| 5227.9381012128815| 19|\n|100000| 19082| 5240.540823813018| 19|\n|100000| 18785| 5323.396326856535| 18|\n|100000| 18947| 5277.880403230063| 18|\n|100000| 18963| 5273.427200337499| 18|\n|100000| 19206| 5206.706237634073| 19|\n|100000| 19434| 5145.621076463929| 19|\n|Average|19235.8|5200.851942|18.8|\n\n*With this patch:*\n||Opertaions||Elapsed||OpsPerSec||AvgTime||\n|100000| 20104| 4974.134500596896| 19|\n|100000| 19498| 5128.731151913017| 19|\n|100000| 19449| 5141.652527122217| 19|\n|100000| 19530| 5120.327700972863| 19|\n|100000| 20067| 4983.305925150745| 19|\n|100000| 19703| 5075.369233111709| 19|\n|100000| 19595| 5103.342689461598| 19|\n|100000| 19418| 5149.860953754249| 19|\n|100000| 19932| 5017.057997190447| 19|\n|100000| 20596| 4855.311711011847| 20|\n|Average|19789.2|5054.909439|19.1|\n\n*With this patch + an additional change to turn off INodeMap:*\n||Opertaions||Elapsed||OpsPerSec||AvgTime||\n|100000| 19615| 5098.139179199592| 19|\n|100000| 19349| 5168.225748100677| 19|\n|100000| 19136| 5225.752508361204| 19|\n|100000| 19347| 5168.760014472528| 19|\n|100000| 20096| 4976.114649681529| 19|\n|100000| 19248| 5195.344970906068| 19|\n|100000| 18916| 5286.529921759357| 18|\n|100000| 19217| 5203.7258677212885| 19|\n|100000| 20105| 4973.887092762994| 20|\n|100000| 19882| 5029.675082989639| 19|\n|Average|19491.1|5132.615504|19|\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-27T17:43:47.919+0000","updated":"2013-04-27T17:43:47.919+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13643839","id":"13643839","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"I made changes to the code to reuse the byte[][] pathComponents for file creation (made some optimizations in that method. There are other optimizations available in terms of permission checks that I did not venture to do). The throughput with those partial optimizations is:\n||Opertaions||Elapsed||OpsPerSec||AvgTime||\n|100000| 19591| 5104.384666428462| 19|\n|100000| 18969| 5271.759186040382| 18|\n|100000| 19206| 5206.706237634073| 19|\n|100000| 18652| 5361.35535063264| 18|\n|100000| 19218| 5203.455094182537| 19|\n|100000| 19179| 5214.036185411127| 19|\n|100000| 19302| 5180.810278727593| 19|\n|100000| 19388| 5157.829585310501| 19|\n|100000| 19099| 5235.876223886067| 19|\n|100000| 19591| 5104.384666428462| 19|\n|Average|19219.5|5204.059747|18.8|\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-27T23:53:59.725+0000","updated":"2013-04-27T23:53:59.725+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13643840","id":"13643840","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"Attaching patch to given an idea on how to reuse path components added in HDFS-4434.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-27T23:55:54.496+0000","updated":"2013-04-27T23:55:54.496+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13644880","id":"13644880","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"Here is NNBench for delete operations (run with 100 threads simultaneously running:\n||Opertaions||Elapsed||OpsPerSec||AvgTim||\n|100000|19243|5196.694902|19|\n|100000|18598|5376.92225|18|\n|100000|17819|5611.987205|17|\n|100000|17953|5570.099705|17|\n|100000|18077|5531.891354|18|\n|100000|17948|5571.651437|17|\n|100000|18080|5530.973451|18|\n|100000|18032|5545.696539|18|\n|100000|18431|5425.641582|18|\n|100000|17735|5638.567804|17|\n|100000|1819|5500.01262|17.7|\n\t\t\n||Opertaions||Elapsed||OpsPerSec||AvgTim||\n|100000|18029|5546.619336|17|\n|100000|18527|5397.527932|18|\n|100000|18164|5505.395287|18|\n|100000|18486|5409.49908|18|\n|100000|18053|5539.245555|18|\n|100000|18313|5460.601758|18|\n|100000|18299|5464.779496|18|\n|100000|17878|5593.466831|17|\n|100000|18178|5501.155243|18|\n|100000|18084|5529.750055|18|\n|100000|1820.1|5494.804057|17.7|\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-29T21:24:25.965+0000","updated":"2013-04-29T21:25:35.312+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13644898","id":"13644898","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"Summary of results in the tests:\n# File create tests- perform additional reserved name processing, inode map addition and reserved name check. This is where maximum additional work from the patch is being done.\n#* In the mirco benchmark by just calling create file related methods, the time went from 19235.8 to 19789.2 roughly 2.8% different. This can be further reduced by turning off map to 1.3%. The patch moves splitting paths into components outside the lock. Based on this, further optimizations are possible that improves throughput by reducing the synchronized sections. The end result with that optimizations can make running times much smaller that what it is today.\n#* I would also point out that, this is a micro benchmark. The % difference observed in this will be dwarfed by RPC times, network round trip time etc. Also the system will spend time on other operations which should not be affected by this patch.\n# File delete tests - performs reseved name processing and only inode map deletion.\n#* There very little difference in bench mark results.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-29T21:33:12.073+0000","updated":"2013-05-02T06:26:08.987+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13644907","id":"13644907","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"Given the above tests, here are all the issues that are brought up:\n# Introducing incompatible change\n#* This is not a major incompatibility. As I said earlier, creating file or directory /.reserved is not allowed. That said, this should get into 2.0.5 given its main goal is compatibility.\n# This patch could be destabilizing\n#* This patch is adding an Inode map and support for path scheme which allows addressing files by inodes. Most of the code added in this patch is to support the new addressing mechanisms and extensive unit tests associated with it. The regular code path should largely be unaffected by this, with exception of adding and deleting entries in inode map. Please bring up any concerns that I might have overlooked.\n# Performance impact - based on the results, there is a very little performance impact. I have two options:\n#* The difference observed in microbenchmarks amounts to much smaller difference in a real system. That too only associated with a few write operations such as create. Hence is it acceptable?\n#* Make further optimizations to reduce synchronized section size based on the mechanism added in this patch. [~nroberts] if you feel this is important, I will undertake the work of optimizing this. [~daryn] also had expressed interest in it. Not sure if he has the bandwidth.\n\nGiven this, I would like to merge this in branch-2.0.5. I hope concerns expressed by people are addressed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-29T21:39:55.905+0000","updated":"2013-04-30T14:31:10.714+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13645090","id":"13645090","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"body":"The performance numbers look good.  Since the rpc time is not counted, a small percentage difference is nothing.  Beside, the Inode ID feature is very useful.  It also helps implementing the Snapshot feature.\n\n+1 on merging it to branch-2.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-30T00:28:42.631+0000","updated":"2013-04-30T00:28:42.631+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13645624","id":"13645624","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"[~shv] [~nroberts] [~daryn], please let me know if your concerns are addressed. If I do not hear, I plan on committing this change by today or tomorrow.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-04-30T14:29:40.917+0000","updated":"2013-04-30T14:29:40.917+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13645635","id":"13645635","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nroberts","name":"nroberts","key":"nroberts","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nathan Roberts","active":true,"timeZone":"America/Chicago"},"body":"Thanks for running some basic performance tests! Looks like minimal impact.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=nroberts","name":"nroberts","key":"nroberts","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Nathan Roberts","active":true,"timeZone":"America/Chicago"},"created":"2013-04-30T14:43:05.622+0000","updated":"2013-04-30T14:43:05.622+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13645924","id":"13645924","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"100K files via 100 threads seems like a very small sampling when we're running namespaces well over 100M.  I think the only detail that might make performance worse is how well the inode map performs as the bucket chains get longer.  If it's a problem we can probably fix it later.\n\nI did notice that unprotectedConcat appears to leak inodes in the map - it unlinks the concat'ed files but doesn't remove them from the map.  The business logic for keeping the inode map in sync with the namespace is high enough up the call stack that it makes it a bit tough to prove all delete paths are safe, so you may want to double check.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-04-30T20:14:09.268+0000","updated":"2013-04-30T20:14:09.268+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13645932","id":"13645932","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Might want to correct the misspelling: *remvoed* AllFromInodesFromMap :)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-04-30T20:21:08.023+0000","updated":"2013-04-30T20:21:08.023+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13646745","id":"13646745","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~nroberts] and [~daryn] for commenting back.\n\nbq. 100K files via 100 threads seems like a very small sampling when we're running namespaces well over 100M. I think the only detail that might make performance worse is how well the inode map performs as the bucket chains get longer. If it's a problem we can probably fix it later.\n100 threads is quite considerable and matches well with typical big cluster RPC handler count. Also inodeMap size is created as a percentage of total memory. That means it is sized based on the namenode size. I agree that this performance impact should be minimal and we should be able to fix if we find any issues.\n\nbq. I did notice that unprotectedConcat appears to leak inodes in the map - it unlinks the concat'ed files but doesn't remove them from the map. \nNice catch. Created HDFS-4785.\n\nbq. ...so you may want to double check.\nYes. I will run through one more review.\n\nbq. Might want to correct the misspelling: remvoed AllFromInodesFromMap\nWill be addressed in another jira.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-05-01T17:41:33.535+0000","updated":"2013-05-01T17:41:33.535+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13647345","id":"13647345","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"I have merged HDFS-4434 back into branch-2.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-05-02T06:36:31.963+0000","updated":"2013-05-02T06:36:31.963+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12631775/comment/13965521","id":"13965521","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"body":"Resolving to avoid spurious version updates.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arpitagarwal","name":"arpitagarwal","key":"arpitagarwal","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arpit Agarwal","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-04-10T16:45:22.229+0000","updated":"2014-04-10T16:45:22.229+0000"}],"maxResults":70,"total":70,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HDFS-4489/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1hw13:"}}