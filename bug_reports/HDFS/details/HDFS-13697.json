{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13167988","self":"https://issues.apache.org/jira/rest/api/2/issue/13167988","key":"HDFS-13697","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310942","id":"12310942","key":"HDFS","name":"Hadoop HDFS","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310942&avatarId=10094","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310942&avatarId=10094","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310942&avatarId=10094","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310942&avatarId=10094"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2018-06-25T10:20:37.190+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Sep 06 18:16:24 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HDFS-13697/watchers","watchCount":12,"isWatching":false},"created":"2018-06-25T08:09:35.414+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"11.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-09-06T18:16:24.355+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/10002","description":"A patch for this issue has been uploaded to JIRA by a contributor.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/document.png","name":"Patch Available","id":"10002","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/4","id":4,"key":"indeterminate","colorName":"yellow","name":"In Progress"}},"components":[],"timeoriginalestimate":null,"description":"While calling KeyProviderCryptoExtension decryptEncryptedKey the call stack might not have doAs privileged execution call (in the DFSClient for example). This results in loosing the proxy user from UGI as UGI.getCurrentUser finds no AccessControllerContext and does a re-login for the login user only.\r\n\r\nThis can cause the following for example: if we have set up the oozie user to be entitled to perform actions on behalf of example_user but oozie is forbidden to decrypt any EDEK (for security reasons), due to the above issue, example_user entitlements are lost from UGI and the following error is reported:\r\n\r\n{code}\r\n[0] \r\nSERVER[xxx] USER[example_user] GROUP[-] TOKEN[] APP[Test_EAR] JOB[0020905-180313191552532-oozie-oozi-W] ACTION[0020905-180313191552532-oozie-oozi-W@polling_dir_path] Error starting action [polling_dir_path]. ErrorType [ERROR], ErrorCode [FS014], Message [FS014: User [oozie] is not authorized to perform [DECRYPT_EEK] on key with ACL name [encrypted_key]!!]\r\norg.apache.oozie.action.ActionExecutorException: FS014: User [oozie] is not authorized to perform [DECRYPT_EEK] on key with ACL name [encrypted_key]!!\r\n at org.apache.oozie.action.ActionExecutor.convertExceptionHelper(ActionExecutor.java:463)\r\n at org.apache.oozie.action.ActionExecutor.convertException(ActionExecutor.java:441)\r\n at org.apache.oozie.action.hadoop.FsActionExecutor.touchz(FsActionExecutor.java:523)\r\n at org.apache.oozie.action.hadoop.FsActionExecutor.doOperations(FsActionExecutor.java:199)\r\n at org.apache.oozie.action.hadoop.FsActionExecutor.start(FsActionExecutor.java:563)\r\n at org.apache.oozie.command.wf.ActionStartXCommand.execute(ActionStartXCommand.java:232)\r\n at org.apache.oozie.command.wf.ActionStartXCommand.execute(ActionStartXCommand.java:63)\r\n at org.apache.oozie.command.XCommand.call(XCommand.java:286)\r\n at org.apache.oozie.service.CallableQueueService$CompositeCallable.call(CallableQueueService.java:332)\r\n at org.apache.oozie.service.CallableQueueService$CompositeCallable.call(CallableQueueService.java:261)\r\n at java.util.concurrent.FutureTask.run(FutureTask.java:262)\r\n at org.apache.oozie.service.CallableQueueService$CallableWrapper.run(CallableQueueService.java:179)\r\n at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\n at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\n at java.lang.Thread.run(Thread.java:744)\r\nCaused by: org.apache.hadoop.security.authorize.AuthorizationException: User [oozie] is not authorized to perform [DECRYPT_EEK] on key with ACL name [encrypted_key]!!\r\n at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\r\n at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n at java.lang.reflect.Constructor.newInstance(Constructor.java:526)\r\n at org.apache.hadoop.util.HttpExceptionUtils.validateResponse(HttpExceptionUtils.java:157)\r\n at org.apache.hadoop.crypto.key.kms.KMSClientProvider.call(KMSClientProvider.java:607)\r\n at org.apache.hadoop.crypto.key.kms.KMSClientProvider.call(KMSClientProvider.java:565)\r\n at org.apache.hadoop.crypto.key.kms.KMSClientProvider.decryptEncryptedKey(KMSClientProvider.java:832)\r\n at org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider$5.call(LoadBalancingKMSClientProvider.java:209)\r\n at org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider$5.call(LoadBalancingKMSClientProvider.java:205)\r\n at org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider.doOp(LoadBalancingKMSClientProvider.java:94)\r\n at org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider.decryptEncryptedKey(LoadBalancingKMSClientProvider.java:205)\r\n at org.apache.hadoop.crypto.key.KeyProviderCryptoExtension.decryptEncryptedKey(KeyProviderCryptoExtension.java:388)\r\n at org.apache.hadoop.hdfs.DFSClient.decryptEncryptedDataEncryptionKey(DFSClient.java:1440)\r\n at org.apache.hadoop.hdfs.DFSClient.createWrappedOutputStream(DFSClient.java:1542)\r\n at org.apache.hadoop.hdfs.DFSClient.createWrappedOutputStream(DFSClient.java:1527)\r\n at org.apache.hadoop.hdfs.DistributedFileSystem$6.doCall(DistributedFileSystem.java:408)\r\n at org.apache.hadoop.hdfs.DistributedFileSystem$6.doCall(DistributedFileSystem.java:401)\r\n at org.apache.hadoop.fs.FileSystemLinkResolver.resolve(FileSystemLinkResolver.java:81)\r\n at org.apache.hadoop.hdfs.DistributedFileSystem.create(DistributedFileSystem.java:401)\r\n at org.apache.hadoop.hdfs.DistributedFileSystem.create(DistributedFileSystem.java:344)\r\n at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:923)\r\n at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:904)\r\n at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:801)\r\n at org.apache.hadoop.fs.FileSystem.create(FileSystem.java:790)\r\n at org.apache.oozie.action.hadoop.FsActionExecutor.touchz(FsActionExecutor.java:519){code}\r\n\r\nThe operation should have succeeded as [example_user] is the owner of the [encrypted_key]","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12929005","id":"12929005","filename":"HDFS-13697.01.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-06-25T08:56:12.339+0000","size":13467,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12929005/HDFS-13697.01.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12929013","id":"12929013","filename":"HDFS-13697.02.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-06-25T10:27:38.943+0000","size":13469,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12929013/HDFS-13697.02.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12929171","id":"12929171","filename":"HDFS-13697.03.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-06-26T10:04:30.580+0000","size":14165,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12929171/HDFS-13697.03.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12933240","id":"12933240","filename":"HDFS-13697.04.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-07-26T18:15:53.699+0000","size":36230,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12933240/HDFS-13697.04.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12933377","id":"12933377","filename":"HDFS-13697.05.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-07-27T15:14:29.652+0000","size":37403,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12933377/HDFS-13697.05.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12933481","id":"12933481","filename":"HDFS-13697.06.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-07-28T16:34:03.250+0000","size":33711,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12933481/HDFS-13697.06.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12934477","id":"12934477","filename":"HDFS-13697.07.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-08-06T12:56:31.806+0000","size":33718,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12934477/HDFS-13697.07.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12935362","id":"12935362","filename":"HDFS-13697.08.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-08-13T12:16:55.619+0000","size":54348,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12935362/HDFS-13697.08.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12937641","id":"12937641","filename":"HDFS-13697.09.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-08-29T15:28:12.981+0000","size":111453,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12937641/HDFS-13697.09.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12937911","id":"12937911","filename":"HDFS-13697.10.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-08-31T12:16:37.470+0000","size":111316,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12937911/HDFS-13697.10.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12934556","id":"12934556","filename":"HDFS-13697.prelim.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-08-06T22:29:43.329+0000","size":42634,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12934556/HDFS-13697.prelim.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"DFSClient should instantiate and cache KMSClientProvider using UGI at creation time for consistent UGI handling","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16522118","id":"16522118","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"body":"Thanks for creating the issue and submitting the patch [~zvenczel]!\r\n\r\nThere are two things I've noticed during the review:\r\n* Using string constant field instead of local variable {{kmsAcls}} in TestSecureEncryptionZoneWithKMS#init()\r\n{code:java}\r\n234\t    // set up KMS not to allow oozie service to decrypt encryption keys\r\n235\t    String kmsAcls = \"kms-acls-oozie-blacklist-decrypt.xml\";\r\n236\t    InputStream is = ThreadUtil.getResourceAsStream(kmsAcls);\r\n{code}\r\nI think kmsAcls is important enough to be extracted as a constant even if it will be private and used only locally in this test.\r\n* The test will pass even if other files are not patched in {{hadoop-hdfs-project/hadoop-hdfs-client}}\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"created":"2018-06-25T10:20:37.190+0000","updated":"2018-06-25T10:20:37.190+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16522126","id":"16522126","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"body":"Thanks for the review [~gabor.bota] and good catch. I've updated the patch to fix the test related issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-06-25T10:28:22.434+0000","updated":"2018-06-25T10:28:22.434+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16522220","id":"16522220","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 32s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 27s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 57s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 16m 38s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 14s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 48s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m  9s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 30s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 15s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 44s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 16m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 16m 38s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 40s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 11s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m  4s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 38s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 98m 43s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 29s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}203m 22s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.hdfs.TestDFSStripedOutputStreamWithFailureWithRandomECPolicy |\r\n|   | hadoop.hdfs.client.impl.TestBlockReaderLocal |\r\n|   | hadoop.hdfs.server.namenode.TestDecommissioningStatus |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | HDFS-13697 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12929005/HDFS-13697.01.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |\r\n| uname | Linux c0450e744a00 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 440140c |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24487/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24487/testReport/ |\r\n| Max. process+thread count | 3368 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project |\r\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24487/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-25T12:28:13.371+0000","updated":"2018-06-25T12:28:13.371+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16522322","id":"16522322","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 27s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 34s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 30m 26s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 20m 14s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 20s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 19s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 15m  3s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m 10s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 31s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  2m  0s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 20m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 20m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 14s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 19s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  3s{color} | {color:green} The patch has no ill-formed XML file. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 14m 46s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m 18s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 13s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 33s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 94m 39s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 31s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}216m 55s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.hdfs.TestReconstructStripedFileWithRandomECPolicy |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | HDFS-13697 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12929013/HDFS-13697.02.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |\r\n| uname | Linux 726db4cf2025 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 440140c |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24488/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24488/testReport/ |\r\n| Max. process+thread count | 3243 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project |\r\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24488/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-25T14:08:19.931+0000","updated":"2018-06-25T14:08:19.931+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16522799","id":"16522799","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~zvenczel], thanks for reporting the issue and providing a fix. Great work on identifying this!\r\n\r\nRCA and fix makes sense to me, some comments mainly on test:\r\n - It looks like we can just setup the test by setting {{hadoop.kms.blacklist.DECRYPT_EEK}} to oozie on the {{kmsConf}} object, eliminating the need for a customized xml.\r\n - I agree having the doAs in {{HdfsKMSUtil#decryptEncryptedDataEncryptionKey}} is cleaner than doing this in the callers. Let's have the test to cover both the input and output stream though. This can be done by doing open on the file once it's created.\r\n - Let's use the least number of parameters for objection construction. I guess the {{DFSClient}} ctor is to bypass the client cache? Please comment about it if so. We can cast the stream returned by {{DFSClient#create}} to a {{DFSOutputStream}}, then pass it in to {{createWrappedOutputStream}}.\r\n - No need to really write to the stream to trigger decrypt.\r\n - The comment {{set up KMS not to allow oozie service to decrypt encryption keys}} is technically not accurate. 'encryption keys' is a vague term, we can call it edeks (hdfs term) or eek (kms term). Suggest to use {{set up KMS but blacklist oozie service to decrypt EDEKs}}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-06-25T20:53:59.936+0000","updated":"2018-06-25T20:53:59.936+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16523510","id":"16523510","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"body":"Hi [~xiaochen]!\r\n Thank you very much for the thorough review it's much appreciated!\r\n\r\nMy answers below:\r\n{quote}It looks like we can just setup the test by setting hadoop.kms.blacklist.DECRYPT_EEK to oozie on the kmsConf object, eliminating the need for a customized xml.\r\n{quote}\r\nIt was my initial intention to do so but the MiniKMS always picks up ACL related configs from the kms-site.xml by checking whether there is one present already. If there isn't, it copies one from it's own resources having the defaults.\r\n{quote}I agree having the doAs in HdfsKMSUtil#decryptEncryptedDataEncryptionKey is cleaner than doing this in the callers. Let's have the test to cover both the input and output stream though. This can be done by doing open on the file once it's created.\r\n{quote}\r\nThanks for the suggestion, in the latest patch I added the input stream check as well. In my understanding open does not trigger a wrapped input stream creation so I added one. Please correct me if my approach is missing something.\r\n{quote}Let's use the least number of parameters for objection construction. I guess the DFSClient ctor is to bypass the client cache? Please comment about it if so. We can cast the stream returned by DFSClient#create to a DFSOutputStream, then pass it in to createWrappedOutputStream.\r\n{quote}\r\nYes, exactly, it bypasses the client cache. I added the comment and modified the code based on your suggestions.\r\n{quote}No need to really write to the stream to trigger decrypt.\r\n{quote}\r\nTo test the entire workflow (encryption and decryption does happen as expected) I added write and read operation with some dummy data in the latest patch. An assert also checks the validity of the data. What do you think?\r\n{quote}The comment set up KMS not to allow oozie service to decrypt encryption keys is technically not accurate. 'encryption keys' is a vague term, we can call it edeks (hdfs term) or eek (kms term). Suggest to use set up KMS but blacklist oozie service to decrypt EDEKs\r\n{quote}\r\nThanks so much for the clarification, I updated the comment as you suggested.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-06-26T09:59:55.391+0000","updated":"2018-06-26T10:05:29.762+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16523824","id":"16523824","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 24s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 31s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 29m 19s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 17m 46s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 15s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m  2s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 28s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 57s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 23s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 12s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  2m 11s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 20m  4s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 20m  4s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m  5s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 30s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m 26s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 31s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 47s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}104m 56s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 32s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}220m 29s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.hdfs.TestDFSStripedOutputStreamWithFailureWithRandomECPolicy |\r\n|   | hadoop.hdfs.server.namenode.TestReencryptionWithKMS |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:abb62dd |\r\n| JIRA Issue | HDFS-13697 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12929171/HDFS-13697.03.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |\r\n| uname | Linux d2693d4b10b4 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 238fe00 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24493/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24493/testReport/ |\r\n| Max. process+thread count | 3231 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project |\r\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24493/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-06-26T14:46:17.908+0000","updated":"2018-06-26T14:46:17.908+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16537510","id":"16537510","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~zvenczel] for revving and clarifications. All makes sense to me. Also verified the test fails-before, passes-after, with the difference being {{DFSClient$ugi}} was not used for the calls to create crypto streams.\r\n\r\nFailed tests doesn't look related, +1 on patch 3.\r\n\r\n[~daryn], [~xyao] would you like to take a look? I plan to commit this by end of Tuesday if no concerns from you.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-07-09T20:17:33.829+0000","updated":"2018-07-09T20:17:33.829+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16537538","id":"16537538","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"No, this is wrong, I've grumbled about the kms client and ugi in other jiras.  I'll provide full details this afternoon.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2018-07-09T20:39:42.123+0000","updated":"2018-07-09T20:39:42.123+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16537565","id":"16537565","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~daryn],\r\nThanks for the prompt response and looking forward to the full details.\r\n\r\n1 thing I'd like to clarify first to save communication is that, I tried {{dfsClient.getBlockLocations}} from within the unit test would make the NN (FSN#getBlockLocations) having currentUser being the proxy ugi. We'd essentially need the same end-result for KMS, but sadly it doesn't use Hadoop RPC :(","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-07-09T20:57:45.399+0000","updated":"2018-07-09T20:57:45.399+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16537759","id":"16537759","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"This is a concrete use case to illustrate how/why the kms client's ugi handling is broken.  +Clients must always retain the identity of the context in which it was created+.  Unlike other clients, the kms client \"morphs\" into being whatever the current user context happens to be (it's actually worse than that) which will continue to cause problems and possible attack vectors.\r\n\r\nPonder: why was the file created in hdfs with the correct owner, despite being in a different jaas context?  Why do the dfsclient and webhdfs clients have a ugi which allowed this patch to pass it the kms client?  They retained their identity.\r\n\r\nPatching up {{decryptEncryptedDataEncryptionKey}} to take a ugi is only a partial fix for one specific method.  It's the kms client's responsibility to retain/use its ugi for _all_ operations – not rely on its callers to perform a doAs or pass in the ugi.  The problem appears to stem from what was likely a premature optimization to use a singleton kms client in a client cache.  A singleton obviously has to morph which leads to all these issues.\r\n\r\nbq.  1 thing I'd like to clarify first to save communication is that, I tried dfsClient.getBlockLocations from within the unit test would make the NN (FSN#getBlockLocations) having currentUser being the proxy ugi. We'd essentially need the same end-result for KMS, but sadly it doesn't use Hadoop RPC\r\n\r\nUnless I'm misunderstanding, yes, the getBlockLocations call should be the proxy user since it was created in that context.  Every call via that client should be the proxy user.\r\n\r\nProperly tracking the ugi in the kms client will ensure it works whether via rpc, rest, or any other client.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2018-07-09T23:04:45.797+0000","updated":"2018-07-09T23:04:45.797+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16538047","id":"16538047","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"I believe the question then, is whether we should consider do a partial revert of HADOOP-13749 and fix the kms client cache. There were some comments close to the the above comment, namely [~jnp]'s comment here and [~xyao]'s comment following it.\r\n\r\nI think that's the right thing to do, since before HADOOP-13749 the provider did retain the UGI from creation. But redoing that and the client cache feels pretty tricky, and I propose we do the 'fix' here for this specific case for .x.y releases, and have a follow-on Jira to do the redesign targeting trunk.\r\n\r\nThoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-07-10T05:04:34.720+0000","updated":"2018-07-10T05:04:34.720+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16538933","id":"16538933","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xyao","name":"xyao","key":"xyao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xiaoyu Yao","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~zvenczel] for reporting the issue and providing the patch,  [~xiaochen] for the heads up and [~daryn] for the discussion. \r\n\r\nAfter reading the thread and the test case, it's not clear to me why we are using the oozieUgi to doAs at TestSecureEncryptionZoneWithKMS line 367.\r\n\r\nCorrect me if I'm wrong, HADOOP-13749 and other HDFS calls like getBlockLocations assume the proxy user UGI to be used for doAs. This is what we have supported and validated with HADOOP-13749 in the test case TestSecureEncryptionZoneWithKMS#testSecureEncryptionZoneWithKMS. \r\n\r\n[~xiaochen], [~daryn], [~zvenczel], [~gabor.bota], we can schedule a call tomorrow to discuss the issue. cc: [~jnpandey]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xyao","name":"xyao","key":"xyao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xiaoyu Yao","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-07-10T16:53:06.890+0000","updated":"2018-07-10T16:53:06.890+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16539206","id":"16539206","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"I have sent out an invite for Thursday (July 12) 10AM PST, let me know the preferred time slot if this isn't a good time. Ping me if anyone wants to join but didn't receive the meeting invite.\r\n\r\nFWIW, the case we want to support here is the client should use the creation ugi regardless of the context. The oozie ugi callstack is from a real cluster usage out of oozie.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-07-10T20:33:04.788+0000","updated":"2018-07-12T04:12:51.257+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16542246","id":"16542246","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks all for joining the discussion today! Here's the discussion notes:\r\n\r\nAttendees: [~zvenczel], [~xiaochen], [~daryn], [~xyao], [~jnp].\r\n - We reviewed the history of changes that landed us to where we are today (chronological order):\r\n-# HADOOP-10698 (proxy support, which first stored the ugi at kmscp creation ) \r\n-# HADOOP-11176 (bug 1)\r\n-# HADOOP-11368 (sslfactory truststore reloader thread leak)\r\n-# HDFS-7718 (keyprovider cache implemented)\r\n-# HADOOP-11482 (bug 2)\r\n-# HADOOP-12787 (bug 3) \r\n-# HADOOP-13381 (bug 4) \r\n-# HADOOP-13749 (bug 5, which has many discussions) \r\n - We discussed and had consensus on the following:\r\n-# the client should retain the identity at client creation time. The current way of jumping among UGIs at method invocation should be changed.\r\n-# the difficulty in caching the ugi at KMSCP creation time is that, the KeyProviderCache would make different callers sharing the same KMSCP.\r\n- If we can figure out a way for {{KMSCP$sslfactory}} and its underlying {{KeyStoresFactory}} to be shared, then HDFS-7718 is a non-issue and we can revert the KeyProviderCache. This will restore the world to the state that each DFSClient will cache its own KMSCP. \r\n- It's probably still worth caching the KMSCP per DFSClient, since creating a KMSCP is not cheap. \r\n- No 'actual ugi' need to be figured out at KMSCP ctor. {{UGI#getCurrentUser}} should suffice.\r\n- Daryn also brought up the point that it may be possible to use a shared/periodic method to check the truststore files, eliminating the need for the trust reloader manager to be created at all.\r\n- Discussed about the possibility of doing all the above in a separate jira, and commit this one for now (then revert when the separate jira is done in the future). But this feels fragile and would incur more maintenance costs.\r\n\r\n[~zvenczel], would you mind changing this jira to the more general, bigger issue? I'm thinking something like KMSClientProvider should cache and use the UGI at creation time.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-07-12T22:04:57.216+0000","updated":"2018-07-12T22:04:57.216+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16558750","id":"16558750","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"body":"The latest patch contains:\r\n* Revert of HDFS-7718 and HADOOP-13749.\r\n* DFSClient creates and caches the KeyProvider using the ugi at construction time.\r\n* KMSClientProvider holds on to the UGI at creation time and also supports HADOOP-10698 efforts.\r\n* HADOOP-11368 resolves the sslfactory truststore reloader thread leak\r\n\r\nThis patch does not cover the shared, periodic method for checking the truststore files. If you agree it could be covered in a separate jira.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-07-26T18:49:55.186+0000","updated":"2018-07-27T15:06:02.140+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16558993","id":"16558993","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 28s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 8 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 43s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 24m 48s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 28m 27s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 22s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  3m 25s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 14m 15s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  5m 45s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 11s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 21s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  2m 49s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 26m 45s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 26m 45s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  3m 30s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 21s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  6m 26s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 45s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 29s{color} | {color:green} hadoop-common in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 10s{color} | {color:green} hadoop-kms in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 47s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}105m 18s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 40s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}254m 25s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |\r\n|   | hadoop.hdfs.server.datanode.TestDataNodeMXBean |\r\n|   | hadoop.fs.viewfs.TestViewFileSystemHdfs |\r\n|   | hadoop.hdfs.web.TestWebHdfsTimeouts |\r\n|   | hadoop.hdfs.client.impl.TestBlockReaderLocal |\r\n|   | hadoop.hdfs.TestErasureCodingExerciseAPIs |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |\r\n| JIRA Issue | HDFS-13697 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12933240/HDFS-13697.04.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |\r\n| uname | Linux e34878f12754 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / be150a1 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24662/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24662/testReport/ |\r\n| Max. process+thread count | 3729 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: . |\r\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24662/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-26T22:34:52.885+0000","updated":"2018-07-26T22:34:52.885+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16560170","id":"16560170","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 17s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 8 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 20s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m 13s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 28m 34s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 25s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  3m 37s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 14m 10s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  5m 56s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 50s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 21s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  2m 43s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 27m  3s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 27m  3s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 27s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  3m 48s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 43s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  6m 39s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 12s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 24s{color} | {color:green} hadoop-common in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  4m 11s{color} | {color:green} hadoop-kms in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 49s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 99m 23s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 50s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}249m 12s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |\r\n|   | hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewer |\r\n|   | hadoop.hdfs.TestHdfsAdmin |\r\n|   | hadoop.hdfs.security.TestDelegationToken |\r\n|   | hadoop.hdfs.web.TestWebHdfsTimeouts |\r\n|   | hadoop.hdfs.server.namenode.ha.TestDelegationTokensWithHA |\r\n|   | hadoop.hdfs.security.TestDelegationTokenForProxyUser |\r\n|   | hadoop.hdfs.server.namenode.TestFSImage |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |\r\n| JIRA Issue | HDFS-13697 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12933377/HDFS-13697.05.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |\r\n| uname | Linux afbd9a90824d 4.4.0-130-generic #156-Ubuntu SMP Thu Jun 14 08:53:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 3cc7ce8 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24669/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24669/testReport/ |\r\n| Max. process+thread count | 3894 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: . |\r\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24669/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-27T19:25:18.258+0000","updated":"2018-07-27T19:25:18.258+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16560500","id":"16560500","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~zvenczel] for taking up this large piece of work! I think it's fair to leave the research work for future, as long as we manually test the case that motivated HDFS-7718 isn't a problem.\r\n\r\nSome comments from my review:\r\n- I like the fact we're respecting the lazy creation of keyprovider in DFSClient, nice work!\r\n\r\n*KMSCP*:\r\n- Per our discussion, we should be just caching UGI#getCurrentUser() at ctor. \r\n- Because doAsUser depends on the UGI, I think it would also make sense to cache that String at ctor.\r\n\r\n*DFSClient*:\r\n- Do we really need the supplier? It seems for each client the keyprovider will only be created once. If so I'd suggest we avoid caching the Supplier here.\r\n- {code}\r\n  public KeyProvider getKeyProvider() {\r\n    return provider==null ? keyProviderSupplier.get() : provider;\r\n   }\r\n{code} need to handle the race condition here that multiple threads calling this method may end up creating more than 1 provider.\r\n- trivial, {{SafeModeAction}} changes are unrelated\r\n- can do a VisibleForTesting setKeyProvider method, so {{TestEncryptionZones}} and {{TestReservedRawPaths}} don't have to be modified.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-07-27T23:56:04.465+0000","updated":"2018-07-27T23:56:23.413+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16560799","id":"16560799","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"body":"Thank you [~xiaochen] for doing the review, much appreciated!\r\n Please find my answers below:\r\n{quote} * Per our discussion, we should be just caching UGI#getCurrentUser() at ctor.\r\n * Because doAsUser depends on the UGI, I think it would also make sense to cache that String at ctor.{quote}\r\nIn order to support proxy users and functionalities introduced by HADOOP-10698 the current user and the doAsUser string cannot be cached. HADOOP-10698 does an in flight calculation as well at line 385 that I was trying to consolidate in the getDoAsUser function to reuse logic. Also, this feature requirement is being double checked by TestKMS#testProxyUserKerb and TestKMS#testProxyUserSimple tests.\r\n\r\nPlease let me know if I misunderstood the intentions in the code.\r\n{quote} * Do we really need the supplier? It seems for each client the keyprovider will only be created once. If so I'd suggest we avoid caching the Supplier here.\r\n * \r\n{code:java}\r\npublic KeyProvider getKeyProvider() {\r\n  return provider==null ? keyProviderSupplier.get() : provider;\r\n}\r\n{code}\r\nneed to handle the race condition here that multiple threads calling this method may end up creating more than 1 provider.\r\n{quote}\r\nSuppliers#memoize caches the output (the KeyProvider instance in this case) of the supplier and not the supplier. Also does this in a thread safe way not to create more than 1 provider.\r\n{quote} * trivial, SafeModeAction changes are unrelated{quote}\r\nThanks for checking I've removed it in the latest patch.\r\n{quote}\r\n can do a VisibleForTesting setKeyProvider method, so TestEncryptionZones and TestReservedRawPaths don't have to be modified.\r\n{quote}\r\nThanks for the hint, it was a remnant of a revert commit. I updated the patch as you suggested.\r\n\r\n \r\n\r\nIn the latest patch I added a check to close the keyProvider only if it was created and also made the test key provider more explicit by renaming it to \"testKeyProvider\".","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-07-28T16:33:14.064+0000","updated":"2018-07-28T16:33:14.064+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16560874","id":"16560874","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 13s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 5 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 19s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 25m 45s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 27m 30s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 22s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  3m 41s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 15m 10s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  5m 46s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 51s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 17s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  2m 47s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 26m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 26m 41s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  3m 40s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  1s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 24s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  6m 15s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 50s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m 25s{color} | {color:green} hadoop-common in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 58s{color} | {color:green} hadoop-kms in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 39s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 76m 33s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 44s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}226m 16s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.hdfs.TestDFSClientRetries |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |\r\n| JIRA Issue | HDFS-13697 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12933481/HDFS-13697.06.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |\r\n| uname | Linux ba0cc848d4d6 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / 6b038f8 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24672/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24672/testReport/ |\r\n| Max. process+thread count | 3945 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: . |\r\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24672/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-07-28T20:26:52.689+0000","updated":"2018-07-28T20:26:52.689+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16563911","id":"16563911","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"body":"Seems like test failure {{hadoop.hdfs.TestDFSClientRetries}} unrelated - tried it locally with the patch applied and it passes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=gabor.bota","name":"gabor.bota","key":"gabor.bota","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=gabor.bota&avatarId=33034","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=gabor.bota&avatarId=33034","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=gabor.bota&avatarId=33034","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=gabor.bota&avatarId=33034"},"displayName":"Gabor Bota","active":true,"timeZone":"Europe/Budapest"},"created":"2018-07-31T16:19:14.756+0000","updated":"2018-07-31T16:19:14.756+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16567537","id":"16567537","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi [~zvenczel], thanks for revving. I tried to explore a few options this week but still have only done a partial review. Posting here and looking forward to discuss this with you offline later when you're back from vacation.\r\n\r\n- Ideally we want to do the same as DFSClient, where a ugi of {{UGI#getCurrentUser}} is just cached at construction time, and used for later auths. I tried that but it caused test failures in TestKMS with the {{doWebHDFSProxyUserTest}} tests and {{testTGTRenewal}} - for the sake of compatibility I think we can do something like this to allow the tests to pass.\r\n{code}\r\n// in KMSCP ctor\r\n    ugi = UserGroupInformation.getCurrentUser().getRealUser() == null ?\r\n UserGroupInformation.getCurrentUser() : \r\n UserGroupInformation.getCurrentUser().getRealUser();\r\n{code}\r\n[~daryn] [~xyao] [~jnp] what do you think?\r\n\r\nOther smaller review comments:\r\n- We don't need {{cachedProxyUgi}}, and {{getDoAsUser}} can figure things out from the ugi cached if we do the above\r\n- {{ugiToUse}} doesn't seem necessary\r\n- Could you explain why the {{setLoginUser}} lines were removed in TestKMS? I'd like to make sure existing tests pass as-is, if possible. \r\n\r\nDFSClient:\r\n- thanks for the explanation above! Good to learn about the guava Suppliers. I think your previous patch was fine. I was hoping we don't have to cache the Supplier object in my last comment, but it simplifies the code so let's go with it.\r\n- the new com.google imports should be placed next to other existing imports of that module.\r\n- I would not call the KeyProvider variable {{testKeyProvider}} - it's used for all purposes. Just the {{VisibleForTesting}} annotation on {{setKeyProvider}} would be enough, which you already have.\r\n- The new patch's {{KeyProviderSupplier#isKeyProviderCreated}} doesn't seem necessary. We can't prevent the caller calling {{getKeyProvider}} after calling {{close}} here from that check. (We probably can add a guard in DFSClient to prevent all API calls after {{close}}, but that's separate from this jira.)\r\n- Although callers seem to have check about nullity of the provider, if DFSClient failed to create a key provider, it's preferred to throw immediately. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-08-02T22:17:47.329+0000","updated":"2018-08-02T22:17:47.329+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16570178","id":"16570178","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"body":"Thanks a lot [~xiaochen] for the support on this task. It's a challenging one indeed :)\r\n\r\nPlease find my answers below:\r\n{quote}Ideally we want to do the same as DFSClient, where a ugi of {{UGI#getCurrentUser}} is just cached at construction time, and used for later auths. I tried that but it caused test failures in TestKMS with the {{doWebHDFSProxyUserTest}} tests and {{testTGTRenewal}} - for the sake of compatibility I think we can do something like this to allow the tests to pass.\r\n{code:java}\r\n// in KMSCP ctor\r\n    ugi = UserGroupInformation.getCurrentUser().getRealUser() == null ?\r\n UserGroupInformation.getCurrentUser() : \r\n UserGroupInformation.getCurrentUser().getRealUser();\r\n{code}\r\n[~daryn] [~xyao] [~jnp] what do you think?\r\n{quote}\r\nThe tests are failing because with the above approach we are not supporting the scenario when the user component provides new entitlements for KMS interactions through a doAs call (eg. calls the 'createConnection' function implicitly having a proxy user provided in a doAs context). If we do want to be compatible, caching at construction time the UGI is not enough.\r\n{quote}\r\nWe don't need cachedProxyUgi, and getDoAsUser can figure things out from the ugi cached if we do the above\r\n{quote}\r\nI was trying to introduce some clean code here by defining explicitly under what circumstances can we have a cachedProxyUgi and by this I also moved one computation to the constructor level instead of having many on the getDoAsUser level. Does this make sense?\r\n{quote}\r\nugiToUse doesn't seem necessary\r\n{quote}\r\nI was trying to make the code more meaningful and also to support the above mentioned, proxy scenario we still need to check whether the current call (currentUgi) introduces any proxy ugi.\r\n{quote}\r\nCould you explain why the setLoginUser lines were removed in TestKMS? I'd like to make sure existing tests pass as-is, if possible.\r\n{quote}\r\nI've reverted HADOOP-13749 and these lines were introduced by it. I'm not sure if it makes sense to set the login user even after the revert. What do you think?\r\n{quote}\r\nthe new com.google imports should be placed next to other existing imports of that module.\r\n{quote}\r\nThanks for checking, I've fixed it in my latest patch.\r\n{quote}\r\nI would not call the KeyProvider variable testKeyProvider - it's used for all purposes. Just the VisibleForTesting annotation on setKeyProvider would be enough, which you already have.\r\n{quote}\r\nYes, it makes sense, I've fixed it in my latest patch. On a long run I might refactor these test cases to use Mockito to reduce production code complexity.\r\n{quote}\r\nThe new patch's KeyProviderSupplier#isKeyProviderCreated doesn't seem necessary. We can't prevent the caller calling getKeyProvider after calling close here from that check. (We probably can add a guard in DFSClient to prevent all API calls after close, but that's separate from this jira.)\r\n{quote}\r\nKeyProviderSupplier#isKeyProviderCreated is the only way to know for sure whether KeyProvider got instantiated or not. If we call keyProviderCache.get() in the close method we might end up with an unnecessary creation of a KeyProvider.\r\nI agree that we should take care of any post closure calls separately.\r\n{quote}\r\nAlthough callers seem to have check about nullity of the provider, if DFSClient failed to create a key provider, it's preferred to throw immediately.\r\n{quote}\r\nI was trying to reproduce the already available behavior present in the KeyProviderCache that had returned a null and had emitted warn level log messages. Should we change that?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-08-06T12:53:57.084+0000","updated":"2018-08-06T12:53:57.084+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16570472","id":"16570472","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 13s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 5 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 20s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 23s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 27m 42s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 23s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  3m 46s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 15m 33s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  5m 54s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 54s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 17s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  2m 48s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 27m  3s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 27m  3s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  3m 43s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 19s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  6m 23s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  2m 52s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  8m  8s{color} | {color:green} hadoop-common in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 58s{color} | {color:green} hadoop-kms in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 41s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 76m 16s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 46s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}226m 49s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.hdfs.TestDFSStripedOutputStreamWithFailureWithRandomECPolicy |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |\r\n| JIRA Issue | HDFS-13697 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12934477/HDFS-13697.07.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |\r\n| uname | Linux 41f8071570d5 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / bcfc985 |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24702/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24702/testReport/ |\r\n| Max. process+thread count | 3442 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: . |\r\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24702/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-08-06T16:47:23.012+0000","updated":"2018-08-06T16:47:23.012+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16570874","id":"16570874","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for the continued work and an offline discussion [~zvenczel].\r\n\r\nAs it turns out, this part may be better discussed with code than anything else. :)  I updated a [^HDFS-13697.prelim.patch]  which kinda shows what I'm getting at. (Only verified it can pass {{TestKMS}} and {{TestSecureEncryptionZoneWithKMS}})  The meta point is, we should no longer morph the UGI dynamically at method calls. {{testProxyUser}} fails with this, but with some debugging I think it's 2-folded: the test itself should create the provider within the doAs, otherwise it's all testing the 'clientUgi'. With the provider created, the test now fails with or without our change. Debugging into the authenticator, it's out from the {{ProxyUsers.authorize}} check inside {{DelegationTokenAuthenticationFilter#doFilter}}, and this becomes a test problem (which we should still look into).\r\n\r\nbq. I've reverted HADOOP-13749 and these lines were introduced by it. I'm not sure if it makes sense to set the login user even after the revert. What do you think?\r\nI think we should keep the change and not revert those lines, to make sure the test case HADOOP-13749 wanted to add still passes.\r\n\r\nbq. KeyProviderSupplier\r\nAs clarified offline, my only concern is that currently we have {{keyProvider}} and {{keyProviderSuplier}} variables in DFSClient class, which is a code smell. Some mechanisms to make sure we only have one would be good.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-08-06T22:40:25.886+0000","updated":"2018-08-06T22:40:25.886+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16571040","id":"16571040","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 12s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 5 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 17s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m  2s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 27m 43s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 24s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  4m 19s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 15m 56s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  6m 28s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 20s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 18s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m  9s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 26m 59s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 26m 59s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  4m 25s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m  2s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  0m 51s{color} | {color:red} hadoop-common-project/hadoop-auth generated 2 new + 0 unchanged - 0 fixed = 2 total (was 0) {color} |\r\n| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 44s{color} | {color:red} hadoop-common-project/hadoop-common generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 17s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 44s{color} | {color:green} hadoop-auth in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}  8m 32s{color} | {color:red} hadoop-common in the patch failed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}  3m 58s{color} | {color:red} hadoop-kms in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 45s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red} 76m 45s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 45s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}235m 32s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| FindBugs | module:hadoop-common-project/hadoop-auth |\r\n|  |  org.apache.hadoop.security.authentication.client.KerberosAuthenticator.LOG isn't final but should be  At KerberosAuthenticator.java:be  At KerberosAuthenticator.java:[line 57] |\r\n|  |  org.apache.hadoop.security.authentication.server.AuthenticationFilter.LOG isn't final but should be  At AuthenticationFilter.java:be  At AuthenticationFilter.java:[line 69] |\r\n| FindBugs | module:hadoop-common-project/hadoop-common |\r\n|  |  Dead store to ugiToUse in org.apache.hadoop.crypto.key.kms.KMSClientProvider.createConnection(URL, String)  At KMSClientProvider.java:org.apache.hadoop.crypto.key.kms.KMSClientProvider.createConnection(URL, String)  At KMSClientProvider.java:[line 505] |\r\n| Failed junit tests | hadoop.ha.TestZKFailoverController |\r\n|   | hadoop.crypto.key.kms.server.TestKMS |\r\n|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailureWithRandomECPolicy |\r\n|   | hadoop.hdfs.TestAclsEndToEnd |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |\r\n| JIRA Issue | HDFS-13697 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12934556/HDFS-13697.prelim.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |\r\n| uname | Linux e16b9e659a8a 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / ca20e0d |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_171 |\r\n| findbugs | v3.1.0-RC1 |\r\n| findbugs | https://builds.apache.org/job/PreCommit-HDFS-Build/24711/artifact/out/new-findbugs-hadoop-common-project_hadoop-auth.html |\r\n| findbugs | https://builds.apache.org/job/PreCommit-HDFS-Build/24711/artifact/out/new-findbugs-hadoop-common-project_hadoop-common.html |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24711/artifact/out/patch-unit-hadoop-common-project_hadoop-common.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24711/artifact/out/patch-unit-hadoop-common-project_hadoop-kms.txt |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24711/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24711/testReport/ |\r\n| Max. process+thread count | 3652 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-common-project/hadoop-auth hadoop-common-project/hadoop-common hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: . |\r\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24711/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-08-07T02:26:04.505+0000","updated":"2018-08-07T02:26:04.505+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16578191","id":"16578191","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"body":"Hi [~xiaochen],\r\n\r\nThanks a lot for working on this and providing your solution in the prelim patch.\r\n\r\nWhile investigating the proposal to cache the ugi and prevent morphing I came across the same set of failing tests your approach touched. The most interesting one is HDFS-9295 (full spectrum test by [~templedf]) in org.apache.hadoop.hdfs.TestAclsEndToEnd. This test suite does a test on all possible, expected variations about morphing and I found that the following tests are not compatible with the cached ugi approach: testGoodWithWhitelistWithoutBlacklist, testGoodWithKeyAcls, testGoodWithWhitelist, testGoodWithKeyAclsWithoutBlacklist\r\n\r\nAs these use cases are around for a while I'd expect them to be used widely and hard to avoid. What do you think?\r\n\r\nI've uploaded a new patch (v08) where I factored out the keyProvider injection for the DFSClient to happen via Mockito only.\r\n\r\nAlso reverted the TestKMS as you suggested leaving the HADOOP-13749 changes in.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-08-13T12:16:37.424+0000","updated":"2018-08-13T12:16:37.424+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16578647","id":"16578647","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"body":"| (x) *{color:red}-1 overall{color}* |\r\n\\\\\r\n\\\\\r\n|| Vote || Subsystem || Runtime || Comment ||\r\n| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |\r\n|| || || || {color:brown} Prechecks {color} ||\r\n| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |\r\n| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 16 new or modified test files. {color} |\r\n|| || || || {color:brown} trunk Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 23s{color} | {color:blue} Maven dependency ordering for branch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 29m 57s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 32m 53s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 21s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  4m 58s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 16m 29s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  7m 56s{color} | {color:green} trunk passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 21s{color} | {color:green} trunk passed {color} |\r\n|| || || || {color:brown} Patch Compile Tests {color} ||\r\n| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 21s{color} | {color:blue} Maven dependency ordering for patch {color} |\r\n| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  3m 58s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} compile {color} | {color:green} 31m 27s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javac {color} | {color:green} 31m 27s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 21s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  4m 49s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |\r\n| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |\r\n| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m  4s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |\r\n| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  8m 32s{color} | {color:green} the patch passed {color} |\r\n| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  3m 23s{color} | {color:green} the patch passed {color} |\r\n|| || || || {color:brown} Other Tests {color} ||\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green} 10m 49s{color} | {color:green} hadoop-common in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 50s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |\r\n| {color:red}-1{color} | {color:red} unit {color} | {color:red}120m 26s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  5m 21s{color} | {color:green} hadoop-hdfs-httpfs in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m  1s{color} | {color:green} hadoop-hdfs-nfs in the patch passed. {color} |\r\n| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 48s{color} | {color:green} The patch does not generate ASF License warnings. {color} |\r\n| {color:black}{color} | {color:black} {color} | {color:black}299m 55s{color} | {color:black} {color} |\r\n\\\\\r\n\\\\\r\n|| Reason || Tests ||\r\n| Failed junit tests | hadoop.tracing.TestTracing |\r\n|   | hadoop.hdfs.TestReadStripedFileWithMissingBlocks |\r\n|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailureWithRandomECPolicy |\r\n|   | hadoop.hdfs.server.datanode.TestDirectoryScanner |\r\n\\\\\r\n\\\\\r\n|| Subsystem || Report/Notes ||\r\n| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |\r\n| JIRA Issue | HDFS-13697 |\r\n| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12935362/HDFS-13697.08.patch |\r\n| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |\r\n| uname | Linux d511c0ddd6ef 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |\r\n| Build tool | maven |\r\n| Personality | /testptch/patchprocess/precommit/personality/provided.sh |\r\n| git revision | trunk / a13929d |\r\n| maven | version: Apache Maven 3.3.9 |\r\n| Default Java | 1.8.0_181 |\r\n| findbugs | v3.1.0-RC1 |\r\n| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24761/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |\r\n|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24761/testReport/ |\r\n| Max. process+thread count | 2659 (vs. ulimit of 10000) |\r\n| modules | C: hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs hadoop-hdfs-project/hadoop-hdfs-httpfs hadoop-hdfs-project/hadoop-hdfs-nfs U: . |\r\n| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24761/console |\r\n| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |\r\n\r\n\r\nThis message was automatically generated.\r\n\r\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=genericqa","name":"genericqa","key":"genericqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=genericqa&avatarId=33630","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=genericqa&avatarId=33630","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=genericqa&avatarId=33630","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=genericqa&avatarId=33630"},"displayName":"genericqa","active":true,"timeZone":"Etc/UTC"},"created":"2018-08-13T17:20:38.473+0000","updated":"2018-08-13T17:20:38.473+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16578717","id":"16578717","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"body":"Test failures seem to be unrelated, I could not reproduce locally with or without my patch: \r\n{code:java}\r\n[INFO] -------------------------------------------------------\r\n[INFO]  T E S T S\r\n[INFO] -------------------------------------------------------\r\n[INFO] Running org.apache.hadoop.hdfs.TestReadStripedFileWithMissingBlocks\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 132.276 s - in org.apache.hadoop.hdfs.TestReadStripedFileWithMissingBlocks\r\n[INFO] Running org.apache.hadoop.hdfs.TestDFSStripedOutputStreamWithFailureWithRandomECPolicy\r\n[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 54.574 s - in org.apache.hadoop.hdfs.TestDFSStripedOutputStreamWithFailureWithRandomECPolicy\r\n[INFO] Running org.apache.hadoop.hdfs.server.datanode.TestDirectoryScanner\r\n[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 129.645 s - in org.apache.hadoop.hdfs.server.datanode.TestDirectoryScanner\r\n[INFO] Running org.apache.hadoop.tracing.TestTracing\r\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.591 s - in org.apache.hadoop.tracing.TestTracing\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0\r\n[INFO] \r\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-08-13T17:59:58.054+0000","updated":"2018-08-13T18:00:16.887+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16580737","id":"16580737","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for the hard work on this [~zvenczel]!\r\n\r\nbq. As these use cases are around for a while I'd expect them to be used widely and hard to avoid. What do you think?\r\nThis is the part that's really head-scratching. On one hand I really think there should be no morphing, but OTOH the existing {{TestAclsEndToEnd}} to 'work'.\r\n\r\nIf userA creates the KMSCP, then proxies as userB and calls the KMSCP method, our test case is expecting this to be coming from userB. I'm not sure if we should deem this as a test issue - anyone knows any downstream usage this way?\r\n\r\n[~daryn] [~xyao] what are your thoughts on this? I don't see any other code changes that can satisfy these cases without dynamically checking the ugi at method invocation time. So it seems there's no way for this to be 'compatible' and satisfy the 'just use the ugi at construction time', due to the historical morphing nature of the KMSCP...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-08-15T05:24:41.383+0000","updated":"2018-08-15T05:24:41.383+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16587762","id":"16587762","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"ping [~xyao] / [~jnp], could you see if the above dynamic ugi morph logic is required in downstream, like reported in HADOOP-13749?\r\n\r\nAlso ping [~daryn] for a compat comment as well.\r\n\r\nAs noted above, if we want to strictly retain compatibility, we'd have to keep the morph here. :( We can still cache the ugi at creation to be better, but no way the TestAclsEndtoEnd tests would pass without KMSCP morphing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-08-21T17:14:56.859+0000","updated":"2018-08-21T17:14:56.859+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16592036","id":"16592036","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"{quote}If userA creates the KMSCP, then proxies as userB and calls the KMSCP method, our test case is expecting this to be coming from userB. I'm not sure if we should deem this as a test issue - anyone knows any downstream usage this way?\r\n{quote}\r\nI think that is a completely invalid test case.  It smells like writing the test to match the bug.  There is no security conscious use case where you want a client using the kms to retain its identity but let the kms morph.\r\n\r\nJust think if you were to hand off a client to another thread for processing.  Why would morphing into the user of the other thread by desirable?\r\n{quote}if we want to strictly retain compatibility, we'd have to keep the morph here.\r\n{quote}\r\nChallenge: name another hadoop core client that behaves this way?  I vote no on morphing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2018-08-24T18:29:51.365+0000","updated":"2018-08-24T18:29:51.365+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16595499","id":"16595499","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"I whipped up a patch to retain identity and avoid the x509 thread leak. {{TestAclsEndToEnd}} is just plain broken for other reasons. Creating a EZ requires the NN getting the key's metadata which requires ACL access. The ACLs don't include hdfs but seemingly pass. Why?\r\n\r\nThe kms client's bizarre ugi handing ensures that when used in the context of the NN, it will always auth to the KMS as the login user (hdfs superuser). Proxy users get interesting. Ie. \"daryn\" becomes \"hdfs\" to the kms and my identity is lost. \"daryn via proxy\" becomes \"daryn via hdfs\" and my identity retained. Huh? That's odd. Think about the ACLs again.\r\n\r\nNotice the tests don't start the mini cluster as the hdfs user – it's the user with proxy and ACL privs. Tests always use proxy users – propagates the user with ACL privs. Sets the login user to the proxy ugi before each call – makes the NN/KMS believe they are the caller. Tricks to make tests pass since the ACLs won't allow the NN to query metadata.\r\n\r\nBack to the inconsistency in how proxy + login user works. The NN should not pass through proxy users to the kms as proxy users. It should always make the request as itself. EZ is purported to ensure encrypted data is safe when the hdfs user is compromised. Ie. hdfs should only be able to verify key exists and request EDEKs. If you allow the hdfs user to proxy, well, you just granted decrypt privs. Game over.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2018-08-28T19:35:01.466+0000","updated":"2018-08-28T19:35:01.466+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16596512","id":"16596512","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"body":"Thanks [~daryn] for the investigation and explanation and thanks [~xiaochen] for the continuous work and discussion!\r\n\r\nIn my latest patch (09) I addressed the following:\r\n * *KMSClientProvider*\r\n No more morphing... The doAsUser is calculated at construction time and that's it.\r\n * *TestKMS*\r\n Based on Xiao's findings I fixed the key provider creation in the doProxyUserTest function to correctly test key creation by proxy users.\r\n * *TestAclsEndToEnd*\r\n I think the main issue with this test suite was that it was using the mini cluster dfs client for all of its operations. As we stopped morphing the problem had surfaced therefore I refactored it to use a truly end-to-end approach by having a proper client and a proper, client side key provider. The fat part of the changes are due to introducing a service user that needed the appropriate ACLs for the various testing scenarios.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-08-29T15:47:58.798+0000","updated":"2018-08-29T15:47:58.798+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16598669","id":"16598669","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"body":"Thanks [~xiaochen] for pointing out that KMSClientProvider.createConnection still had morphing. I removed it with patch 10.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=zvenczel","name":"zvenczel","key":"zvenczel","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=zvenczel&avatarId=33404","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zvenczel&avatarId=33404","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zvenczel&avatarId=33404","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zvenczel&avatarId=33404"},"displayName":"Zsolt Venczel","active":true,"timeZone":"Europe/Budapest"},"created":"2018-08-31T12:19:28.573+0000","updated":"2018-08-31T12:20:14.656+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16602633","id":"16602633","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"body":"I think the KMSCP code in patch 10 looks pretty close to what we wanted (not checked whether the conditional assignment in ctor is necessary, or how that can be simplified, or why we cannot directly use currentUgi which is the dfsclient behavior.).\r\nI'll do a more thorough code review soon, but [~xyao] please comment if you think this would be problematic.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xiaochen","name":"xiaochen","key":"xiaochen","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=xiaochen&avatarId=24893","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xiaochen&avatarId=24893","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xiaochen&avatarId=24893","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xiaochen&avatarId=24893"},"displayName":"Xiao Chen","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-09-04T06:00:42.175+0000","updated":"2018-09-04T06:00:42.175+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16604892","id":"16604892","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xyao","name":"xyao","key":"xyao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xiaoyu Yao","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks [~xiaochen] for the heads up. Looking at the patch now...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xyao","name":"xyao","key":"xyao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xiaoyu Yao","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-09-05T20:17:24.496+0000","updated":"2018-09-05T20:17:24.496+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13167988/comment/16606199","id":"16606199","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xyao","name":"xyao","key":"xyao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xiaoyu Yao","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}, could you see if the above dynamic ugi morph logic is required in downstream, like reported in HADOOP-13749?\r\n{quote}\r\nThe original issue reported by HADOOP-13749 is mainly caused by the KP cache which mix match KP and DFSClient. With KP removed, I don't see the requirement for dynamic ugi.\r\n\r\n \r\n\r\nThe patch v10 looks pretty good to me. Just a few comments:\r\n\r\nKMSClientProvider.java\r\n\r\n \r\n\r\nLine 408: The KMSCP is used by both client (DFSClient) and server (NN). authMethod ==PROXY is not a reliable way to cover all the proxy user cases. We could change line 408-409 to if (UserGroupInformation.getCurrentUser().getRealUser()!=null)\r\n\r\n \r\n\r\nLine 412: authMethod=TOKEN case\r\n\r\nDo we use the login user even if the current UGI has KMS delegation token?\r\n\r\n \r\n\r\nLine 484: NIT: can we wrap this with getCachedUgi() similar to getDoAsUser() to make future change easier?\r\n\r\n \r\n\r\nTestEncryptionZones.java\r\n\r\nLine 1340-1341: can be replaced with DFSTestUtil.mockDFSClientKeyProvider","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xyao","name":"xyao","key":"xyao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xiaoyu Yao","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-09-06T18:16:24.355+0000","updated":"2018-09-06T18:16:24.355+0000"}],"maxResults":39,"total":39,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HDFS-13697/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3v6pr:"}}