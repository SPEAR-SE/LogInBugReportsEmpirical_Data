{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12618468","self":"https://issues.apache.org/jira/rest/api/2/issue/12618468","key":"HDFS-4258","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310942","id":"12310942","key":"HDFS","name":"Hadoop HDFS","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310942&avatarId=10094","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310942&avatarId=10094","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310942&avatarId=10094","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310942&avatarId=10094"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/3","id":"3","description":"The problem is a duplicate of an existing issue.","name":"Duplicate"},"customfield_12312322":null,"customfield_12310220":"2012-12-03T01:23:19.770+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon May 12 18:20:27 UTC 2014","customfield_12310420":"293272","customfield_12312320":null,"customfield_12310222":"10002_*:*_6_*:*_43887357112_*|*_1_*:*_6_*:*_1627283033_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2014-05-12T18:20:27.187+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HDFS-4258/watchers","watchCount":14,"isWatching":false},"created":"2012-12-01T23:23:07.086+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"4.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12335732","id":"12335732","description":"3.0.0-alpha1 release","name":"3.0.0-alpha1","archived":false,"released":true,"releaseDate":"2016-09-03"}],"issuelinks":[{"id":"12387885","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12387885","type":{"id":"12310000","name":"Duplicate","inward":"is duplicated by","outward":"duplicates","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"},"outwardIssue":{"id":"12710981","key":"HDFS-6294","self":"https://issues.apache.org/jira/rest/api/2/issue/12710981","fields":{"summary":"Use INode IDs to avoid conflicts when a file open for write is renamed","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12361104","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12361104","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12618327","key":"HDFS-4248","self":"https://issues.apache.org/jira/rest/api/2/issue/12618327","fields":{"summary":"Renames may remove file leases","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}}},{"id":"12364554","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12364554","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12631775","key":"HDFS-4489","self":"https://issues.apache.org/jira/rest/api/2/issue/12631775","fields":{"summary":"Use InodeID as as an identifier of a file in HDFS protocols and APIs","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12387161","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12387161","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12710981","key":"HDFS-6294","self":"https://issues.apache.org/jira/rest/api/2/issue/12710981","fields":{"summary":"Use INode IDs to avoid conflicts when a file open for write is renamed","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12386727","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12386727","type":{"id":"10001","name":"dependent","inward":"is depended upon by","outward":"depends upon","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"},"inwardIssue":{"id":"12635325","key":"HADOOP-9361","self":"https://issues.apache.org/jira/rest/api/2/issue/12635325","fields":{"summary":"Strictly define the expected behavior of filesystem APIs and write tests to verify compliance","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2016-05-12T18:13:21.203+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312928","id":"12312928","name":"hdfs-client"},{"self":"https://issues.apache.org/jira/rest/api/2/component/12312926","id":"12312926","name":"namenode"}],"timeoriginalestimate":null,"description":"When a being written file or it's ancestor directories is renamed, the path in the file lease is also renamed.  Then the writer of the file usually will fail since the file path in the writer is not updated.\n\nMoreover, I think there is a bug as follow:\n\n# Client writes 0's to F_0=\"/foo/file\" and writes 1's to F_1=\"/bar/file\" at the same time.\n# Rename /bar to /baz\n# Rename /foo to /bar\n\nThen, writing to F_0 will fail since /foo/file does not exist anymore but writing to F_1 may succeed since /bar/file exits as a different file.  In such case, the content of /bar/file could be partly 0's and partly 1's.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12562477","id":"12562477","filename":"HDFS-4258.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-27T15:44:05.153+0000","size":105252,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12562477/HDFS-4258.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12562438","id":"12562438","filename":"HDFS-4258.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-27T04:50:06.628+0000","size":105252,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12562438/HDFS-4258.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12562367","id":"12562367","filename":"HDFS-4258.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-26T03:46:24.104+0000","size":91281,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12562367/HDFS-4258.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12561964","id":"12561964","filename":"HDFS-4258.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-20T19:19:57.546+0000","size":86109,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12561964/HDFS-4258.patch"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"166707","customfield_12312823":null,"summary":"Rename of Being Written Files","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[{"id":"12625357","key":"HDFS-4340","self":"https://issues.apache.org/jira/rest/api/2/issue/12625357","fields":{"summary":"Update addBlock() to inculde inode id as additional argument","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}},{"id":"12632442","key":"HDFS-4502","self":"https://issues.apache.org/jira/rest/api/2/issue/12632442","fields":{"summary":"WebHdfsFileSystem handling of fileld breaks compatibility","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}}],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13508429","id":"13508429","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"body":"I'm not sure if this is actually a bug: I can see some applications requiring the semantics that moving (or deleting) a file underneath an active writer would break the writer's ability to continue to add new blocks.\n\nRegarding the scenario of the \"mixed up\" blocks, I'm not sure that can happen, since {{getAdditionalBlock()}} takes the previous block as an argument. In this case, the previous block would not match up, and the request to allocate a new block on the 'wrong' file would fail, right?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"created":"2012-12-03T01:23:19.770+0000","updated":"2012-12-03T01:23:19.770+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13508432","id":"13508432","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"body":"One way to solve this problem is to add INode ID.  We could add INode ID without increasing memory usage since both modification time and access time are currently 8 bytes, which supports\n{noformat}\n2^64 / (1000 * 3600 * 24 * 365.25) = 584542046 years,\n{noformat}\n which is way too much.  If only 5 bytes is used, it supports\n{noformat}\n2^40/(1000 * 3600 * 24 * 365.25) = 34.84 years.\n{noformat}\nIt may already good enough.  We may also change the accuracy from milliseconds to hundredth or tenth seconds.  Then, 5 bytes supports 348.4 years and 3484 years respectively.  The INode ID is stored in the remaining 6 bytes, which supports 2^48 = 281 trillion of INodes. We may play around with the parameters more and have the following table.\n|| atime/mtime || Time period supported (with milliseconds accuracy) || INode ID || \\# INodes supported |\n| 40 bits | 34.84 years | 48 bits | 281.47 trillions |\n| 41 bits | 69.68 years | 46 bits |  70.37 trillions |\n| 42 bits | 139.37 years | 44 bits |  17.59 trillions |\n| 43 bits | 278.73 years | 42 bits |  4.40 trillions |\n| 44 bits | 557.46 years | 40 bits |  1.10 trillions |\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-03T01:27:24.094+0000","updated":"2012-12-03T01:27:24.094+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13508434","id":"13508434","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"body":"> ..., the previous block would not match up, and the request to allocate a new block on the 'wrong' file would fail, right?\n\nI think it can allocate a new block in this case that the previous block is null and the last block is full and complete.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-03T01:42:29.391+0000","updated":"2012-12-03T01:42:29.391+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13508468","id":"13508468","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"body":"Adding INode IDs seems like a very reasonable idea to me. It can be a source for many optimizations besides fixing the problem described here.\nDon't like squeezing the INode id between m&a times. Just adding a field should be fine.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=shv","name":"shv","key":"shv","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Konstantin Shvachko","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-03T04:51:11.447+0000","updated":"2012-12-03T04:51:11.447+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13510863","id":"13510863","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"+1 for the idea. I prefer optimizing m&a fields than adding new field. However, we can start with adding a new field and do the optimization later. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-05T22:40:08.864+0000","updated":"2012-12-05T22:40:08.864+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13510865","id":"13510865","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"body":"Sounds good.  Let's start with adding a new field first.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-05T22:41:46.904+0000","updated":"2012-12-05T22:41:46.904+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13537283","id":"13537283","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"body":"Upload the initial patch. Will split it into smaller ones later for easier review.\n\nThe basic idea is:\n1. add inode id, which is a 64bit number. Root's inode id is 1 and others start from 2. We don't recycle inode id. \n2. add new addBlock interface which takes the id as an additional field. The id is checked by checkLease(). If it doesn't match current id in the found inode, NN fails the request.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-20T19:19:57.548+0000","updated":"2012-12-20T19:19:57.548+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13538312","id":"13538312","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"body":"resubmit patch to trigger tests.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-21T19:15:20.776+0000","updated":"2012-12-21T19:15:20.776+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13539474","id":"13539474","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12562367/HDFS-4258.patch\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 7 new or modified test files.\n\n      {color:red}-1 javac{color}.  The applied patch generated 2022 javac compiler warnings (more than the trunk's current 2015 warnings).\n\n    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:\n\n                  org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewer\n                  org.apache.hadoop.hdfs.TestLease\n                  org.apache.hadoop.hdfs.tools.offlineEditsViewer.TestOfflineEditsViewer\n                  org.apache.hadoop.hdfs.TestDFSClientRetries\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-HDFS-Build/3690//testReport/\nJavac warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/3690//artifact/trunk/patchprocess/diffJavacWarnings.txt\nConsole output: https://builds.apache.org/job/PreCommit-HDFS-Build/3690//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2012-12-26T05:56:03.552+0000","updated":"2012-12-26T05:56:03.552+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13539994","id":"13539994","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"body":"fixed the unit tests and upload the new patch again to trigger the build.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-27T15:44:05.156+0000","updated":"2012-12-27T15:44:05.156+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13540075","id":"13540075","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12562477/HDFS-4258.patch\n  against trunk revision .\n\n    {color:green}+1 @author{color}.  The patch does not contain any @author tags.\n\n    {color:green}+1 tests included{color}.  The patch appears to include 12 new or modified test files.\n\n    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.\n\n    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.\n\n    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.\n\n    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.\n\n    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.\n\n    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:\n\n                  org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOIVCanReadOldVersions\n                  org.apache.hadoop.hdfs.tools.offlineEditsViewer.TestOfflineEditsViewer\n\n    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.\n\nTest results: https://builds.apache.org/job/PreCommit-HDFS-Build/3697//testReport/\nConsole output: https://builds.apache.org/job/PreCommit-HDFS-Build/3697//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2012-12-27T17:55:31.342+0000","updated":"2012-12-27T17:55:31.342+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13560052","id":"13560052","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"We're running into problems with parent directories being renamed and leases being held on the new pathnames.  As long as a long-running process/daemon continues to renew its lease\n\nThis is a big patch, but does the file id present any security issues?  Can I brute force access to files by guessing file ids?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-01-22T21:39:22.468+0000","updated":"2013-01-22T21:39:22.468+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13560080","id":"13560080","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"I misread, didn't realize it's another sanity check, not another way to reference the file.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-01-22T21:55:24.664+0000","updated":"2013-01-22T21:55:24.664+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13572059","id":"13572059","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"Hey guys, given that the scope of this work seems to be expanding a bit, and there are now several sub-tasks to complete the final goal, can I ask that this work be moved to a branch? I'd also really like to see a little design doc about how all of this will fit together in the end, the extent of the changes that are required, etc.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-06T01:48:02.938+0000","updated":"2013-02-06T01:48:02.938+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13572819","id":"13572819","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"body":"Maybe the sub-JIRA number makes it look a bigger code modification than it actually is. :-)\n\nThe esential change here is to add inode id as an additional sanity check for file modification.\n\nSince it adds one more field in INode, it has to involve a few things like persistence and RPC changes. The idea and implementation is still very strait-forward.\n\nA few of the sub-JIRAs are low priority incremental changes, such as HDFS-4454(enable offline-viewer to show the id) and HDFS-4398(Change WebHDFS to support file ID). \n\nHDFS-4434(Provide a mapping from INodeId to INode) is not closed only because I want to use it to discuss the possibility/beneifit of having such a functionality.\nFor HDFS-4466(include fileid in other related RPC calls), if you think it's not neceissary a sub-JIRA, I can move it out. Nevertheless, I will update its description with more details. \n\n\nIf you still think we should do the rest of the work in a branch, I am OK with it too. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-06T21:01:46.369+0000","updated":"2013-02-06T21:01:46.369+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13572842","id":"13572842","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"I would still prefer this work be moved to a branch.\n\nI'd also like to see if we can address the motivation for this issue (rename of being written files) without introducing an INode ID like this. It may well be that introducing a unique INode ID as has been described here is a good architectural change, but I suspect it's not actually necessary to address the bug described by this JIRA. I say this mostly because it seems this JIRA has already concluded that the appropriate thing to do is to error out if a file which is actively being written is renamed, as mentioned in this comment:\n\n{quote}\n2. add new addBlock interface which takes the id as an additional field. The id is checked by checkLease(). If it doesn't match current id in the found inode, NN fails the request.\n{quote}\n\nWouldn't checking the path in the lease along with the clientName be sufficient to detect that a being-written file had been renamed, and thus the NN should fail the request?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-06T21:18:42.711+0000","updated":"2013-02-06T21:18:42.711+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13572854","id":"13572854","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. I say this mostly because it seems this JIRA has already concluded that the appropriate thing to do is to error out if a file which is actively being written is renamed\nWhere?\n\nbq. It may well be that introducing a unique INode ID as has been described here is a good architectural change, but I suspect it's not actually necessary to address the bug described by this JIRA.\nIs the concern you are expressing that InodeID introduction is not a part of this jira? I fail to understand the concern you have. As Brandon has earlier commented, InodeID has been added and related changes are being made.\n\nI also think HDFS-4434 is some thing that we may consider doing in the future with a switch to turn it off for folks who do not want the memory impact.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-06T21:30:21.448+0000","updated":"2013-02-06T21:30:21.448+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13572855","id":"13572855","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}Wouldn't checking the path in the lease along with the clientName be sufficient to detect that a being-written file had been renamed, and thus the NN should fail the request? {quote}\nThe example given in the description shows the clientName is not sufficient.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-06T21:30:47.842+0000","updated":"2013-02-06T21:30:47.842+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13572926","id":"13572926","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"body":"I'm not sure the example given in the description can actually happen -- HDFS-3031 may have already fixed this case in its patch. The block comment that patch added describes the three possible cases on addBlock():\n\n{code}\n+        // The block that the client claims is the current last block\n+        // doesn't match up with what we think is the last block. There are\n+        // three possibilities:\n+        // 1) This is the first block allocation of an append() pipeline\n+        //    which started appending exactly at a block boundary.\n+        //    In this case, the client isn't passed the previous block,\n+        //    so it makes the allocateBlock() call with previous=null.\n+        //    We can distinguish this since the last block of the file\n+        //    will be exactly a full block.\n+        // 2) This is a retry from a client that missed the response of a\n+        //    prior getAdditionalBlock() call, perhaps because of a network\n+        //    timeout, or because of an HA failover. In that case, we know\n+        //    by the fact that the client is re-issuing the RPC that it\n+        //    never began to write to the old block. Hence it is safe to\n+        //    abandon it and allocate a new one.\n+        // 3) This is an entirely bogus request/bug -- we should error out\n+        //    rather than potentially appending a new block with an empty\n+        //    one in the middle, etc\n{code}\n\nand it has code to detect case 3, which is what we seem to be talking about here.\n\nAlso, it seems like, if the main goal is to deal with this issue, you don't need anything nearly as complex -- you only would need inode IDs in the FileUnderConstruction structure - just a UUID for each open file. That wouldn't have the memory concerns, and would address the problem as it's been described, right?\n\nTo be clear, I'm not against adding inode numbers, but I agree it would be nice to write up what the use cases are and make sure that the benefits outweigh the cost. I agree we can squeeze the inum into some extra bits in our memory, but there are plenty of other things that would be nice to squeeze in as well (eg xattrs, hierarchical storage classes, etc) - if we put all of them in, it could really hurt.\n\nAnother use case that I see for inums, if they're guaranteed to not recycle (not sure if that's the case) would be for modification checks in tools like distcp. We currently can't rely on just the file name and size, since the file could have been replaced, but the combination of inum and size would be unique.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=tlipcon","name":"tlipcon","key":"tlipcon","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=tlipcon&avatarId=26804","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tlipcon&avatarId=26804","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tlipcon&avatarId=26804","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tlipcon&avatarId=26804"},"displayName":"Todd Lipcon","active":true,"timeZone":"America/Tijuana"},"created":"2013-02-06T22:23:18.280+0000","updated":"2013-02-06T22:23:18.280+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13572935","id":"13572935","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. Where?\n\nIn [this comment|https://issues.apache.org/jira/browse/HDFS-4258?focusedCommentId=13537283&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13537283] where Brandon says the following:\n\nbq. add new addBlock interface which takes the id as an additional field. The id is checked by checkLease(). *If it doesn't match current id in the found inode, NN fails the request.*\n\nbq. Is the concern you are expressing that InodeID introduction is not a part of this jira?\n\nThe concern that I have is that introducing INode IDs doesn't seem like it's strictly required to address the bug described by this JIRA, and seems like a much heavier-weight solution than possible alternatives, for example something like what Todd proposed.\n\nAs I said previously, I can imagine several motivations for wanting unique INode IDs, but I don't think the bug described by this JIRA is necessarily one of them.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-06T22:30:16.579+0000","updated":"2013-02-06T22:30:16.579+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13572954","id":"13572954","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"Sorry I misunderstood the previous comment you had posted. So you are okay using INodeID in checkLease() to solve this bug.\n\nbq. The concern that I have is that introducing INode IDs doesn't seem like it's strictly required to address the bug described by this JIRA,\nIf I understand it correctly, I agree with moving some of the subtasks to another umbrella jira that goes some thing like \"Use InodeID as as an identifier of a file in HDFS protocols and APIs\" and move some of the subtasks of this jira under that. We could also add description of what needs to be done and motivations.\n\nAgree?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-06T22:43:49.130+0000","updated":"2013-02-06T22:44:48.892+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13572962","id":"13572962","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. Sorry I misunderstood the previous comment you had posted. \n\nNo problem. :)\n\nbq. So you are okay using INodeID in checkLease() to solve this bug.\n\nRegarding this particular JIRA, given Todd's last comment, I'm not convinced that this is in fact currently a bug, since it seems like the current code may already handle this case properly. Let's investigate that separately from introducing INode IDs, perhaps by just writing up a little test case that exposes the bug.\n\nbq. If I understand it correctly, I agree with moving some of the subtasks to another umbrella jira that goes some thing like \"Use InodeID as as an identifier of a file in HDFS protocols and APIs\" and move some of the subtasks of this jira under that. We could also add description of what needs to be done and motivations.\n\nThat sounds great, and I think that all of the INode ID work should be done on a branch off of trunk so that it can reasonably be done incrementally. Description of the design and motivations for the change would go into the new umbrella JIRA you propose.\n\nThanks a lot for your understanding, Suresh.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-06T22:52:38.615+0000","updated":"2013-02-06T22:52:38.615+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13572974","id":"13572974","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"BTW, I filed a related jira before I knew of this one, HDFS-4437, where I intended to simply revoke leases after a rename.  Even with this fileId sanity check, it doesn't address the larger issue of long running processes are left holding unusable leases for the renamed paths.  We may want to re-consider that jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-02-06T23:04:38.112+0000","updated":"2013-02-06T23:04:38.112+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13573160","id":"13573160","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}...perhaps by just writing up a little test case that exposes the bug.{quote}\nThe new test TestINodeFile.testWriteToRenamedFile in HDFS-4340 validate the fix to problem. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-07T04:03:42.344+0000","updated":"2013-02-07T04:03:42.344+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13573185","id":"13573185","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks a lot for the pointer to the test, Brandon. Two things:\n\n# It looks to me like that test doesn't actually exercise the scenario described in the description of this JIRA, since the test doesn't write to the file before the rename. It creates a file, then a parent of that empty file is renamed, then a new empty file is created with the same name, and then the first client writes to the recreated file. I suppose we can consider that a bug as well, since the first FSOutputStream can now still write to the empty file, but it's not nearly so bad as was first described by this JIRA, since we're not ending up with data in the file from two different clients.\n# I think Daryn makes a really good point - to address this issue of clients still writing to renamed files, can't we just revoke the relevant leases at rename time? That seems like a way simpler way to fix this bug than adding an INode ID and threading that through a bunch of RPCs in the ClientProtocol, and has the other advantage Daryn mentioned.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-07T04:48:07.370+0000","updated":"2013-02-07T04:48:07.370+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13574041","id":"13574041","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"body":"Linux and Unix allow users to continue writing to a file even it is renamed/moved. What do you think if we support the same behavior in HDFS?  I asked Daryn this question earlier.  What do you think?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=szetszwo","name":"szetszwo","key":"szetszwo","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=szetszwo&avatarId=23156","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=szetszwo&avatarId=23156","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=szetszwo&avatarId=23156","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=szetszwo&avatarId=23156"},"displayName":"Tsz Wo Nicholas Sze","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-07T23:12:48.176+0000","updated":"2013-02-07T23:12:48.176+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13575857","id":"13575857","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"I think FD-like behavior is a good idea, although we'd have to carefully test that MR and other components aren't intentionally or unintentionally relying on renaming a file breaking a lease.  Or if something is writing a log and assumes a broken write due to the file missing means that log rotation has occurred.  In both cases, renamed files that were assumed to become immutable will now continue to mutate.\n\nWe'll also have to carefully ensure that security cannot be bypassed by knowing or guessing fileIds.\n\nIn the meantime, can we implement HDFS-4437?  We've been running into issues with daemons holding leases to renamed files.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-02-11T15:58:11.678+0000","updated":"2013-02-11T15:58:11.678+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13575962","id":"13575962","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"I think I agree with Daryn. How about this:\n\n* Let's implement HDFS-4437 and back-port that to branch-2 to fix the bug(s) that have been described here and on HDFS-4437.\n* Move the INode ID-related work to a branch off of trunk.\n* Once the INode ID work is completed, merge it to trunk.\n* At a later date when we're fairly confident nothing is relying on the rename-breaks-leases semantics, we consider merging INode IDs to branch-2. Or, perhaps, the INode ID changes could be a good foundation for a useful Hadoop 3.x release.\n\nThoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-11T18:54:04.139+0000","updated":"2013-02-11T18:54:04.139+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13576076","id":"13576076","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"body":"I've moved the INodeId related work to HDFS-4489. \n\nAs in my comment in HDFS-4437, one concern with rename-breaks-leases semantics is the client is over-powered.\n\"one random client renames one of the top directories. It basically revokes all the leases granted to other clients under this directory. That is, for any client wants to gain a lease of any file, it could just rename it and then open it. Most likely it could get the lease immediately as long as it has write permission.\" \n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=brandonli","name":"brandonli","key":"brandonli","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Brandon Li","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-11T20:12:53.004+0000","updated":"2013-02-11T20:12:53.004+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13576273","id":"13576273","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. As in my comment in HDFS-4437, one concern with rename-breaks-leases semantics is the client is over-powered. \"one random client renames one of the top directories. It basically revokes all the leases granted to other clients under this directory. That is, for any client wants to gain a lease of any file, it could just rename it and then open it. Most likely it could get the lease immediately as long as it has write permission.\"\n\nIf the client has write permission on the file, couldn't it just use the {{DistributedFileSystem#recoverLease()}} API on the file, and then reopen it for append?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-12T01:10:28.847+0000","updated":"2013-02-12T01:10:28.847+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13576733","id":"13576733","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"bq. As in my comment in HDFS-4437, one concern with rename-breaks-leases semantics is the client is over-powered. \"one random client renames one of the top directories. It basically revokes all the leases granted to other clients under this directory. That is, for any client wants to gain a lease of any file, it could just rename it and then open it. Most likely it could get the lease immediately as long as it has write permission.\"\n\nIsn't that behavior better than an over-powered client retaining the lease on the renamed file, blocking everyone else, yet is unable to do another with the file because it doesn't know where it is?  For daemons, it may retain the lease indefinitely.  I think it was hbase testing that was encountering  this issue.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-02-12T16:19:07.446+0000","updated":"2013-02-12T16:19:07.446+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13581845","id":"13581845","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"Brandon, how do you feel about my previous proposal to move the INode ID work to a branch and implement HDFS-4437 as described by Daryn in trunk in the meantime? If you're OK with it, I'll volunteer to create the branch, revert the commits from trunk, and replay the work done so far on the dev branch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-20T01:26:46.584+0000","updated":"2013-02-20T01:26:46.584+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13581970","id":"13581970","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. If the client has write permission on the file, couldn't it just use the DistributedFileSystem#recoverLease() API on the file, and then reopen it for append?\nThe main reason why recoverLease() was added was to essentially take over a lease from an active writer. Loosely speaking fence the other writer. That is the purpose of that method. I have hard time understanding the relationship of that with rename in this jira. In fact when recoverLease is done an active writer will not be able to write whether rename has occurred or not. That behavior is not being changed with the changes done as a part of this.\n\nThere are other ideas that have been proposed about revoking the lease on rename. I am -1 on it for the following reasons:\n# Current behavior is when a rename occurs the current writer continues to write to the block that is currently allocated but fails to allocate new blocks.\n# New rename behavior will be incompatible where the current writer is fenced from writing. Given that a lot of files in HDFS are less than a block in length, this could result in strange behaviors for some applications.\n# I agree with the point Brandon raised above. Renaming a directory means walking through all the files open under it and revoking the leases. Rename already is a complicated operation. Doing this additional work during rename makes it even more heavier and the operation unpredictably large.\n\nI actually like the direction Brandon and Nicholas have taken. We can continue the existing behavior. In fact with this change, we can allow current writer to continue to allocated new blocks (based on file ID) and continue to write, if we want. But that could be done in another jira.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-20T05:31:28.143+0000","updated":"2013-02-20T05:31:28.143+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13583638","id":"13583638","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. I have hard time understanding the relationship of that with rename in this jira. In fact when recoverLease is done an active writer will not be able to write whether rename has occurred or not. That behavior is not being changed with the changes done as a part of this.\n\nI wasn't implying that this proposed change has anything to do with the recoverLease API. I was just using it as a counterpoint to Brandon's claim that clients would be overpowered since \"for any client wants to gain a lease of any file, it could just rename it and then open it. Most likely it could get the lease immediately as long as it has write permission.\" i.e. that should not be a concern, since a client can already do that today with the recoverLease API.\n\n{quote}\nThere are other ideas that have been proposed about revoking the lease on rename. I am -1 on it for the following reasons:\n# Current behavior is when a rename occurs the current writer continues to write to the block that is currently allocated but fails to allocate new blocks.\n# New rename behavior will be incompatible where the current writer is fenced from writing. Given that a lot of files in HDFS are less than a block in length, this could result in strange behaviors for some applications.\n# I agree with the point Brandon raised above. Renaming a directory means walking through all the files open under it and revoking the leases. Rename already is a complicated operation. Doing this additional work during rename makes it even more heavier and the operation unpredictably large.\n\nI actually like the direction Brandon and Nicholas have taken. We can continue the existing behavior. In fact with this change, we can allow current writer to continue to allocated new blocks (based on file ID) and continue to write, if we want. But that could be done in another jira.\n{quote}\n\nI agree with Daryn's reasoning as stated in HDFS-4437:\n\n{quote}\nI think supporting file descriptor behavior is a great idea (we've internally talked about this). Until we do, I think the lease should be revoked. My concerns with fd behavior would be the ever pervasive \"two wrongs make a right\" where users are relying unintentionally on renames breaking writers, and ensuring we get the security right to avoid attacks probing for fileids.\n{quote}\n\nRegardless of whether or not we implement HDFS-4437 as Daryn proposed, I still think we should move the INode ID stuff to a branch. It's a fairly involved change with several sub-task JIRAs, which indicates to me that it would be better done incrementally on a branch and then merged to trunk once it's a completely functional whole.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=atm","name":"atm","key":"atm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=atm&avatarId=14136","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=atm&avatarId=14136","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=atm&avatarId=14136","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=atm&avatarId=14136"},"displayName":"Aaron T. Myers","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-02-21T22:51:03.618+0000","updated":"2013-02-21T22:51:03.618+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13603869","id":"13603869","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"body":"bq. I think supporting file descriptor behavior is a great idea (we've internally talked about this). Until we do, I think the lease should be revoked. My concerns with fd behavior would be the ever pervasive \"two wrongs make a right\" where users are relying unintentionally on renames breaking writers, and ensuring we get the security right to avoid attacks probing for fileids.\n\nAaron and Daryn, there is no security issue related to being able to guess fileids. It is nothing different from being able to guess valid paths in HDFS.\n\nI posted a proposal to HDFS-4489. Please take a look.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sureshms","name":"sureshms","key":"sureshms","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10450","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10450","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10450","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10450"},"displayName":"Suresh Srinivas","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-03-15T21:23:31.117+0000","updated":"2013-03-15T21:23:31.117+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13625905","id":"13625905","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"body":"Sorry for the delay, I've been preoccupied.  There are security issues to consider: guessing a path won't bypass permission checks.  Whereas using an inode mapping will bypass permissions if the apis and implementation are not carefully considered.  I'll check out the referenced jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daryn","name":"daryn","key":"daryn","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daryn Sharp","active":true,"timeZone":"America/Chicago"},"created":"2013-04-08T22:19:41.762+0000","updated":"2013-04-08T22:19:41.762+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13975287","id":"13975287","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"{color:red}-1 overall{color}.  Here are the results of testing the latest attachment \n  http://issues.apache.org/jira/secure/attachment/12562477/HDFS-4258.patch\n  against trunk revision .\n\n    {color:red}-1 patch{color}.  The patch command could not apply the patch.\n\nConsole output: https://builds.apache.org/job/PreCommit-HDFS-Build/6685//console\n\nThis message is automatically generated.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2014-04-20T21:26:10.551+0000","updated":"2014-04-20T21:26:10.551+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12618468/comment/13995383","id":"13995383","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"body":"I think this JIRA / patch has gotten a bit stale, since INode IDs are already in, as well as HDFS-6294, which addressed the issues we had with moving files that were open for write.  I'm marking this as a dupe of HDFS-6294.  Feel free to reopen if there's something more we should do here.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cmccabe","name":"cmccabe","key":"cmccabe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=cmccabe&avatarId=29060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cmccabe&avatarId=29060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cmccabe&avatarId=29060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cmccabe&avatarId=29060"},"displayName":"Colin P. McCabe","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-05-12T18:20:27.223+0000","updated":"2014-05-12T18:20:27.223+0000"}],"maxResults":38,"total":38,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HDFS-4258/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i0swa7:"}}