{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "id": "12312928",
            "name": "hdfs-client",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12312928"
        }],
        "created": "2010-06-17T05:57:23.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thanhdo&avatarId=22565",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thanhdo&avatarId=22565",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thanhdo&avatarId=22565",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=thanhdo&avatarId=22565"
            },
            "displayName": "Thanh Do",
            "key": "thanhdo",
            "name": "thanhdo",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thanhdo",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2014-07-30T20:27:15.565+0000",
        "customfield_12310222": "1_*:*_1_*:*_129997792049_*|*_5_*:*_1_*:*_0",
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310320": null,
        "customfield_12310420": "15895",
        "customfield_12310920": "113413",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0jro7:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jul 30 20:27:15 UTC 2014",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "- Setup:\n+  # datanodes = 2\n+ replication factor = 2\n+ failure type = transient (i.e. a java I/O call that throws I/O Exception or returns false)\n+ # failures = 2\n+ When/where failures happen: (This is a subtle bug) The first failure is a transient failure at a datanode during the second phase. Due to the first failure, the DFSClient will call recoverBlock.  The second failure is injected during this recover block process (i.e. another failure during the recovery process).\n \n- Details:\n \nThe expectation here is that since the DFSClient performs lots of retries,\ntwo transient failures should be masked properly by the retries.\nWe found one case, where the failures are not transparent to the users.\n \nHere's the stack trace of when/where the two failures happen (please ignore the line number).\n \n1. The first failure:\nException is thrown at\n    call(void java.io.DataOutputStream.flush())\n    SourceLoc: org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java(252)\nStack Trace:\n      [0] datanode.BlockReceiver (flush:252)\n      [1] datanode.BlockReceiver (receivePacket:660)\n      [2] datanode.BlockReceiver (receiveBlock:743)\n      [3] datanode.DataXceiver (writeBlock:468)\n      [4] datanode.DataXceiver (run:119)\n \n2. The second failure:\nFalse is returned at\n   call(boolean java.io.File.renameTo(File))\n   SourceLoc: org/apache/hadoop/hdfs/server/datanode/FSDataset.java(105)\nStack Trace:\n      [0] datanode.FSDataset (tryUpdateBlock:1008)\n      [1] datanode.FSDataset (updateBlock:859)\n      [2] datanode.DataNode (updateBlock:1780)\n      [3] datanode.DataNode (syncBlock:2032)\n      [4] datanode.DataNode (recoverBlock:1962)\n      [5] datanode.DataNode (recoverBlock:2101)\n \nThis is what we found out:\nThe first failure causes the DFSClient to somehow calls recoverBlock,\nwhich will force us to see the 2nd failure. The 2nd failure makes\nrenameTo returns false, which then causes an IOException to be thrown\nfrom the function that calls renameTo.\nBut this IOException is not propagated properly!\nIt is dropped inside DN.syncBlock(). Specifically DN.syncBlock\ncalls DN.updateBlock() which gets the exception. But syncBlock\nonly catches that and prints a warning without propagating the exception\nproperly.  Thus syncBlock returns without any exception,\nand thus recoverBlock returns without executing the finally{} block\n(see below).\n \nNow, the client will retry recoverBlock for 3-5 more times,\nbut this retries always see exceptions! The reason is that the first\ntime we call recoverBlock(blk), this blk is being put into\nan ongoingRecovery list inside DN.recoverBlock().\nNormally, blk is only removed (ongoingRecovery.remove(blk)) inside the finally{} block.\nBut since the exception is not propagated properly, this finally{}\nblock is never called, thus the blk is stuck\nforever inside the ongoingRecovery list, and hence the next time\nclient performs the retry, it gets this error message\n\"Block ... is already being recovered\" and recoverBlock() throws\nIOException.  As a result, the client which calls this whole\nprocess in the context of processDatanodeError will return\nfrom the pde function with closed = true, and hence it never\nretries the whole thing again from the beginning, and instead\njust returns error.\n\n\nThis bug was found by our Failure Testing Service framework:\nhttp://www.eecs.berkeley.edu/Pubs/TechRpts/2010/EECS-2010-98.html\nFor questions, please email us: Thanh Do (thanhdo@cs.wisc.edu) and\nHaryadi Gunawi (haryadi@eecs.berkeley.edu)\n",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310942&avatarId=10094",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310942&avatarId=10094",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310942&avatarId=10094",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310942&avatarId=10094"
            },
            "id": "12310942",
            "key": "HDFS",
            "name": "Hadoop HDFS",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310942"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thanhdo&avatarId=22565",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thanhdo&avatarId=22565",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thanhdo&avatarId=22565",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=thanhdo&avatarId=22565"
            },
            "displayName": "Thanh Do",
            "key": "thanhdo",
            "name": "thanhdo",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thanhdo",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "The problem is not completely described.",
            "id": "4",
            "name": "Incomplete",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/4"
        },
        "resolutiondate": "2014-07-30T20:27:15.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "A block is stuck in ongoingRecovery due to exception not propagated ",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2014-07-30T20:27:15.000+0000",
        "versions": [{
            "archived": false,
            "description": "",
            "id": "12314048",
            "name": "0.20.1",
            "releaseDate": "2009-09-01",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12314048"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HDFS-1238/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HDFS-1238/watchers",
            "watchCount": 3
        },
        "workratio": -1
    },
    "id": "12467190",
    "key": "HDFS-1238",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12467190"
}