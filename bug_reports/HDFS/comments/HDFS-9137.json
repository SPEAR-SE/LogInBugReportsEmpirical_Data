[Thanks Uma, agree with that it's potential risk that can cause deadlock.  
It's dangerous to have lock in {{toString()}} implementation, this function is called sometimes but you may not notice., Thanks for filing this [~umamaheswararao]. I suspect it applies to branch-2 as well, could you please confirm?, Yes [~jnp], this applies to branch-2 as well.
, Attached a patch for fixing this issue., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  27m 14s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |  12m 16s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  16m 22s | There were no new javadoc warning messages. |
| {color:red}-1{color} | release audit |   0m 20s | The applied patch generated 1 release audit warnings. |
| {color:red}-1{color} | checkstyle |   1m 55s | The applied patch generated  1 new checkstyle issues (total was 142, now 142). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 43s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 35s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   2m 46s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | native |   3m 36s | Pre-build of native portion |
| {color:red}-1{color} | hdfs tests | 185m 52s | Tests failed in hadoop-hdfs. |
| | | 252m 45s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.hdfs.server.namenode.ha.TestEditLogTailer |
|   | hadoop.hdfs.server.namenode.TestFSNamesystem |
| Timed out tests | org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyCheckpoints |
|   | org.apache.hadoop.hdfs.TestDFSStripedOutputStreamWithFailure000 |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12764836/HDFS-9137.00.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / fdf02d1 |
| Release Audit | https://builds.apache.org/job/PreCommit-HDFS-Build/12777/artifact/patchprocess/patchReleaseAuditProblems.txt |
| checkstyle |  https://builds.apache.org/job/PreCommit-HDFS-Build/12777/artifact/patchprocess/diffcheckstylehadoop-hdfs.txt |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HDFS-Build/12777/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/12777/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf907.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/12777/console |


This message was automatically generated., Thanks Uma for the patch. I agree we don't need synchronization of {{DataNode}} for Datanode#triggerBlockReport, so the current fix looks good overall. My comment is:

{code}
+      IOException exception = null;
       try {
         LOG.info("Reconfiguring " + property + " to " + newVal);
         this.refreshVolumes(newVal);
       } catch (IOException e) {
-        throw new ReconfigurationException(property, newVal,
-            getConf().get(property), e);
+        exception = e;
+      } finally {
+        // Send a full block report to let NN acknowledge the volume changes.
+        try {
+          triggerBlockReport(
+              new BlockReportOptions.Factory().setIncremental(false).build());
+        } catch (IOException e) {
+          LOG.warn("Exception while sending the block report after refresh"
+              + " volumes " + property + " to " + newVal, e);
+        } finally {
+          if (exception != null) {
+            throw new ReconfigurationException(property, newVal,
+                getConf().get(property), exception);
+          }
+        }
{code}

I think for the IOException of {{refreshVolumes}}, we just need to wrap it to ReconfigurationException then throw as original. For the exception of {{triggerBlockReport}}, we also need to wrap it and throw.  I see you just log warn for the IOException of {{triggerBlockReport}} in the patch and ignore it, any reason to do this?  If we want to do this, we don't need to save the IOException of refreshVolumns and throw it in the finally clause of triggerBlockReport, we just need to throw it directly, since the {{finally }} cause is executed before the throwing happens., I agree with [~hitliuyi], exception could be thrown directly. I think Uma trying not to hide the original exception, in case triggerBlockReport throws any exception.

And I see, triggering block reports may not be required in case of unchanged configurations. Currently w/ or w/o patch, blockreports are getting triggered when there is nothing changed.
This also could be considered, to reduce the load on NameNode on unnecessary block report processing?, In an another thought.. How about updating the BPOS#toString() itself, without holding any lock. The return value of tostring() could be some string field which could be updated when registrationSucceeded() call comes., bq. In an another thought.. How about updating the BPOS#toString() itself, without holding any lock. The return value of tostring() could be some string field which could be updated when registrationSucceeded() call comes.

Good idea., Thanks for the comments, Yi , Vinay and Colin. Here actually me and Yi discussed initially to cleanup toString and later I found triggerBlockReport itself unnecessary inside lock and me and Yi concluded we work on toString separately. So removing whole BR under lock can fix this deadlock. I just filed HDFS-9200 for tracking toString issue. 

Coming to comments, Yes I was trying to avoid suppressing root exceptions but it turning to have more if check. Let me throw directly then. Also above patch missed to copy the triggerBR exception, which will miss to throw exception out if there is any exception only in BR., Attached the patch with small fix in my previous patch. Generally finally clauses are having the risk of suppressing root exceptions. So, here I was trying retain root exception as is. Hope this patch make it more clear.  I had offline chat with Yi to explain my thought on this and he agreed to that now.
-Thanks, I think it's OK to do the fix using this approach and update the {{BPOS#toString()}} in a follow-on.
The new patch looks good to me, +1 pending Jeninks, thanks Uma, Vinay, Colin. 
How do you think [~vinayrpet], [~cmccabe]?, {code}
512	          LOG.warn("Exception while sending the block report after refresh"
513	              + " volumes " + property + " to " + newVal, e);
{code}
Should be "refreshing"

+1 pending that fix and jenkins, Thanks, Colin and Yi for for the reviews. I have attached a patch here to address log message., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  18m 23s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  1s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 53s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  10m 35s | There were no new javadoc warning messages. |
| {color:red}-1{color} | release audit |   0m 17s | The applied patch generated 1 release audit warnings. |
| {color:red}-1{color} | checkstyle |   1m 23s | The applied patch generated  1 new checkstyle issues (total was 142, now 142). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 29s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 36s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   2m 31s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | native |   3m 11s | Pre-build of native portion |
| {color:red}-1{color} | hdfs tests | 189m 28s | Tests failed in hadoop-hdfs. |
| | | 235m 50s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.hdfs.TestRecoverStripedFile |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12765432/HDFSS-9137.02.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 99e5204 |
| Release Audit | https://builds.apache.org/job/PreCommit-HDFS-Build/12838/artifact/patchprocess/patchReleaseAuditProblems.txt |
| checkstyle |  https://builds.apache.org/job/PreCommit-HDFS-Build/12838/artifact/patchprocess/diffcheckstylehadoop-hdfs.txt |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HDFS-Build/12838/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/12838/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf904.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/12838/console |


This message was automatically generated., +1, thanks Uma, Colin and Vinay., Committed to trunk and branch-2., FAILURE: Integrated in Hadoop-trunk-Commit #8592 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8592/])
HDFS-9137. DeadLock between DataNode#refreshVolumes and (yliu: rev 35affec38e17e3f9c21d36be111171476072c03f)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #497 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/497/])
HDFS-9137. DeadLock between DataNode#refreshVolumes and (yliu: rev 35affec38e17e3f9c21d36be111171476072c03f)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk-Java8 #506 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/506/])
HDFS-9137. DeadLock between DataNode#refreshVolumes and (yliu: rev 35affec38e17e3f9c21d36be111171476072c03f)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #1234 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/1234/])
HDFS-9137. DeadLock between DataNode#refreshVolumes and (yliu: rev 35affec38e17e3f9c21d36be111171476072c03f)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2441 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2441/])
HDFS-9137. DeadLock between DataNode#refreshVolumes and (yliu: rev 35affec38e17e3f9c21d36be111171476072c03f)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2408 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2408/])
HDFS-9137. DeadLock between DataNode#refreshVolumes and (yliu: rev 35affec38e17e3f9c21d36be111171476072c03f)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #470 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/470/])
HDFS-9137. DeadLock between DataNode#refreshVolumes and (yliu: rev 35affec38e17e3f9c21d36be111171476072c03f)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
]