[When the threshold value is 0. The maxSizeToMove for overUtilizedDatanodes and UnderUtilizedDatanodes will be calculated to 0.
{code}
if (utilization >= avgUtil + threshold
    || utilization <= avgUtil - threshold) {
   maxSizeToMove = (long) (threshold * datanode.getCapacity() / 100);
} else {
{code}

When maxSizeToMove is 0, we end up with no source datanode, hence bytesToMove will be equal to 0 and the following message is displayed., To fix this with 0 threshold value:
 0 threshold value may not work all the times because, cluster may not have the space to balance exactly equal spaces in DNs right?, @Uma: Yes you are right.
I tried this by the following code modification,
{code}
-      if (utilization >= avgUtil+threshold
-          || utilization <= avgUtil-threshold) { 
-        maxSizeToMove = (long)(threshold*datanode.getCapacity()/100);
+      if (utilization >= avgUtil + threshold
+          || utilization <= avgUtil - threshold) {
+        if (threshold != 0){
+          maxSizeToMove = (long) (threshold * datanode.getCapacity() / 100);
+        } else {
+          maxSizeToMove = (long) (datanode.getCapacity() / 100);
+        }
       } else {
{code}

Is this modification of code, ok ?
But with 0 threshold, balancer keeps iterating because it is very difficult to produce a threshold of 0% between the datanodes.

I wrote a test case, cluster with 1DN then filled it 30% and then starting one more say DN2. This will take very large to get terminate.
One possible way would be to have a cluster with 1DN fill it 30% and then starting one more say DN2 with the same usage as DN1. Then it will terminate within very less time with ReturnStatus.SUCCESS. Is it ok to have a test case like that ?, It does make sense to set threshold to 0 since it won't work in many case as Uma mentioned.  How about throw an IllegalArgumentException when threshold < 1?, {quote}
How about throw an IllegalArgumentException when threshold < 1?
{quote}
Make sense to me. +1

@Ashish, Could you please update the patch as per this suggestion?, Uploaded the patch based on the above comments.
Uma/Nicholas, can u please review the patch., Ashish, patch looks good. Some comments.

1) doTest javadoc may need to update with parameters?

2) 'If null Balancer will take the default values.' --- may be typo here?

3) Since the CLI is static class, we can access directly parse api. Why can't we add the tests directly to it. May be with all boundary values. As a unit test, that should be sufficient for this change and also will ensure all boundary conditions satisfied. So, we need not start cluster, balancer right.



, @Nicholas, do we need to mark this as incompatible change? As we are throwing IllegalArgumentException instead of NumberFormatException now., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12523929/HDFS-3286.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2318//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2318//console

This message is automatically generated., Thanks Uma for reviewing it.
Will upload a patch addressing your comments in some time., @Uma: Can u pls review it once again., Marking it as Incompatible change. As now we are throwing IllegalArgumentException instead of NumberFormatException., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12524442/HDFS-3286.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.fs.TestUrlStreamHandler

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2333//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2333//console

This message is automatically generated., {code}
-1 core tests. The patch failed these unit tests:
org.apache.hadoop.fs.TestUrlStreamHandler
{code}
Not related to this fix., Hi Ashish, Patch looks pretty good. One comment:

{code}
	  try {
+		  Balancer.Cli.parse(parameters);
+		  fail(reason);
+	  }
+	  catch (IllegalArgumentException e) {
+		  assertEquals("Number out of range: threshold = 0.0", e.getMessage());
+	  }
+	  parameters = new String[]{"-threshold", "101"};
+	  try {
+		  Balancer.Cli.parse(parameters);
+		  fail(reason);
+	  }
{code}

Patch contains tabs, could you please format propertly., Minor nit: Please also put catch clauses on the same line as the closing brace of the try block., Thanks Uma and Aaron for taking a look at the patch.
Uploaded a patch addressing all your comments., Correct patch HDFS-3286-1, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12524968/HDFS-3286-1.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2349//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2349//console

This message is automatically generated., +1, looks good., I have just committed to trunk and branch-2. Thanks Ashish., Integrated in Hadoop-Common-trunk-Commit #2162 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2162/])
    HDFS-3286. When the threshold value for balancer is zero, unexpected output is displayed. Contributed by Ashish Singhi. (Revision 1332531)

     Result = SUCCESS
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1332531
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/balancer/TestBalancer.java
, Integrated in Hadoop-Hdfs-trunk-Commit #2236 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2236/])
    HDFS-3286. When the threshold value for balancer is zero, unexpected output is displayed. Contributed by Ashish Singhi. (Revision 1332531)

     Result = SUCCESS
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1332531
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/balancer/TestBalancer.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #2179 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2179/])
    HDFS-3286. When the threshold value for balancer is zero, unexpected output is displayed. Contributed by Ashish Singhi. (Revision 1332531)

     Result = ABORTED
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1332531
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/balancer/TestBalancer.java
, Integrated in Hadoop-Hdfs-trunk #1031 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1031/])
    HDFS-3286. When the threshold value for balancer is zero, unexpected output is displayed. Contributed by Ashish Singhi. (Revision 1332531)

     Result = FAILURE
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1332531
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/balancer/TestBalancer.java
, Integrated in Hadoop-Mapreduce-trunk #1066 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1066/])
    HDFS-3286. When the threshold value for balancer is zero, unexpected output is displayed. Contributed by Ashish Singhi. (Revision 1332531)

     Result = FAILURE
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1332531
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/balancer/TestBalancer.java
]