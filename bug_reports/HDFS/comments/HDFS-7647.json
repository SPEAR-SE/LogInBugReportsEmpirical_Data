[There are a couple of ways to go about fixing this. The simplest is to map the DatanodeIDs to storageIDs and use the map to regenerate the arrays after sorting the DatanodeIDs. A more efficient solution may be to have LocatedBlock store an array of data structures that wrap a DatanodeID and a DatanodeStorage, but that would be a massive change., Thanks for reporting this [~milandesai] and listing potential solutions. A third solution is sorting the three arrays simultaneously via an index array.

Your suggested solution of modifying LocatedBlock sounds best to me. The code change should be limited if the public interface of LocatedBlock is preserved. We don't need to change the wire message {{LocatedBlockProto}} either. Do you want to take a crack at it? If not, feel free to assign it to me., Yes, I would go with simple. That is, sort DatanodeIDs, then use the mapping to reorganize storages. The mapping of course could be an index array as Arpit suggested., Thanks [~shv] and [~arpitagarwal]. I was unable to use the index arrays method as that would require changing the way networktopology.sortByDistance works. In the attached a patch I create a map to associate the DatanodeInfos with StorageIDs/Types and use the map after the sorting., Hi Milan, while this solution would work I'd prefer the other approach you suggested. We should fix LocatedBlock to group the three fields in a new class. Existing code (except sortLocatedBlocks) can be shielded from the change by keeping public the interface the same. What do you think?, Hi [~arpitagarwal], sounds good - I will give it a shot., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12693747/HDFS-7647.patch
  against trunk revision 0742591.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.TestCacheDirectives

                                      The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.TestLazyPersistFiles

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9299//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9299//console

This message is automatically generated., {quote}
We should fix LocatedBlock to group the three fields in a new class. Existing code (except sortLocatedBlocks) can be shielded from the change by keeping public the interface the same. What do you think?
{quote}
+1 for this approach., Attaching a patch that creates a class, DatanodeInfosWithStorage, that extends DatanodeInfo but contains additional fields for StorageID and StorageType. LocatedBlock's public interface was kept the same, and the wire protocol should not be affected. By extending DatanodeInfo, as opposed to creating a wrapper class, I am able to avoid changing any code in DatanodeManager.sortLocatedBlocks and NetworkTopology.sortByDistance; the only changes are in LocatedBlock., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12693798/HDFS-7647-2.patch
  against trunk revision 5f124ef.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.blockmanagement.TestHeartbeatHandling
                  org.apache.hadoop.hdfs.TestDataTransferKeepalive
                  org.apache.hadoop.hdfs.TestDecommission
                  org.apache.hadoop.hdfs.shortcircuit.TestShortCircuitCache
                  org.apache.hadoop.hdfs.TestBlockReaderFactory
                  org.apache.hadoop.hdfs.server.namenode.web.resources.TestWebHdfsDataLocality

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9308//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9308//console

This message is automatically generated., Thanks for the patch [~milandesai], this looks like a good change.

Couple of comments:
# {{LocatedBlocks.getStorageTypes}} and {{.getStorageIDs}} should cache the generated arrays on first invocation since existing callers expect these calls to be cheap. Except for the sorting code the content of {{locs}} is not modified once the object is initialized.
# The sorting code must invalidate the cached arrays from 1.
# We should add a unit test for sortLocatedBlocks specifically for the invalidation.
# Also it would be good to add a comment to {{LocatedBlocks}} stating the assumption that {{locs}} must not be modified by the caller, with the exception of {{sortLocatedBlocks}}.

In a separate Jira it would be good to make {{locs}} an unmodifiable list or a Guava {{ImmutableList}}. The source of the issue is that an external function reaches into the LocatedBlock object and modifies its private fields. It doesn't help that Java lacks support for C++-style const arrays., Thanks [~arpitagarwal] for the review, and sorry about the delay.

1. I returned the fields for {{storageIDs}} and {{storageTypes}} to store their cached versions.
2. Introduced method {{invalidateCachedStorageInfos}} to invalidate the arrays for {{storageIDs}} and {{storageTypes}}. It is called by {{sortLocatedBlocks}} after the sorting.
3. Added unit test {{TestDatanodeManager.testSortLocatedBlocks}}.
4. I added a comment to {{getLocations()}} saying the returned array is not expected to be modified, and if it is, caller must immediately invoke {{invalidateCachedStorageInfos}} from (2)

Will open a separate Jira for making {{locs}} an immutable list., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12695696/HDFS-7647-3.patch
  against trunk revision 09ad9a8.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.blockmanagement.TestHeartbeatHandling
                  org.apache.hadoop.hdfs.server.blockmanagement.TestBlockTokenWithDFS
                  org.apache.hadoop.hdfs.shortcircuit.TestShortCircuitCache
                  org.apache.hadoop.hdfs.TestDataTransferKeepalive
                  org.apache.hadoop.hdfs.TestDecommission
                  org.apache.hadoop.hdfs.TestBlockReaderFactory

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9387//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/9387//artifact/patchprocess/patchReleaseAuditProblems.txt
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9387//console

This message is automatically generated., Hi [~milandesai],

Thank for incorporating the feedback. The patch looks great for the most part. However I think it breaks the topology-based sorting. I caught it by adding the following checks at the end of your test case:

{code}
    // Ensure the local node is first.
    final DatanodeInfoWithStorage[] sortedLocs = block.getLocations();
    assertThat(sortedLocs[0].getIpAddr(), is(targetIp));

    // Ensure the two decommissioned DNs were moved to the end.
    assertThat(sortedLocs[sortedLocs.length-1].getAdminState(),
               is(DatanodeInfo.AdminStates.DECOMMISSIONED));
    assertThat(sortedLocs[sortedLocs.length-2].getAdminState(),
               is(DatanodeInfo.AdminStates.DECOMMISSIONED));
{code}

where targetIp was used as follows:
{code}
    final String targetIp = locs[4].getIpAddr(); 

    // sort block locations
    dm.sortLocatedBlocks(targetIp, blocks);
{code}

The first assert kept failing for me, so I spent some time debugging it. The root cause is the following check in {{NetworkTopology#getWeight}}.

{code}
      if (reader == node) {
        weight = 0;
{code}

The check for local node is via a simple object ID comparison which worked before but breaks now because the LHS is a DatanodeDescriptor while the RHS is DatanodeInfoWithStorage. We'll need to fix that.

Also a nitpick:
{code}
    if(!hasStorageTypes)
      return null;
    if(storageTypes != null)
      return storageTypes;
...
    if(!hasStorageIDs)
      return null;
    if(storageIDs != null)
      return storageIDs;
{code}
Please add curly braces for the ifs., We can replace _(reader == node)_ with _(reader.equals(node))_ in {{NetworkTopology#getWeight}}. Also {{NetworkTopologyWithNodeGroup.getWeight}}. 

This defaults to object reference equality unless {{Object.equals}} is overriden. Although there are no other callers of this method so the change looks safe., Thanks for your review [~arpitagarwal], and good catch. I added the test cases, change to reader.equals in both classes, and fixed the nit. I also realized that when constructing a new DatanodeInfo from an old one, the dependentHostNames, level, and parent fields are not copied, which can affect the sort. Revised patch manually copies these fields when constructing a DatanodeInfoWithStorage. However, any changes to the level and parent in the datanode map will not be reflected on the DatanodeInfoWithStorage object., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12697012/HDFS-7647-4.patch
  against trunk revision 644548f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.shortcircuit.TestShortCircuitCache
                  org.apache.hadoop.hdfs.TestDecommission
                  org.apache.hadoop.hdfs.server.namenode.web.resources.TestWebHdfsDataLocality
                  org.apache.hadoop.hdfs.TestBlockReaderFactory
                  org.apache.hadoop.hdfs.TestDataTransferKeepalive
                  org.apache.hadoop.hdfs.server.blockmanagement.TestHeartbeatHandling

                                      The following test timeouts occurred in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.http.TestHttpCookieFlag

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9456//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9456//console

This message is automatically generated., Thanks for your patience [~milandesai], the latest patch look good.

There are a few reproducible test failures flagged by Jenkins we'll need to address before committing., Some of the tests were failing because the .equals() and .hashCode() method in DatanodeInfoWithStorage also checked for storage equality, and tests like TestShortCircuitCache relied on the ability to identify DatanodeInfos in a map using a DatanodeInfoWithStorage object. The fix was to remove the equals() and hashCode() overrides so that they rely on the super.

TestDecomission.testDecomissionWithOpenfile is failing because the test is waiting for the DatanodeInfoWithStorage object to become decommissioned, but it won't ever be decommissioned because it is not the same reference as the DatanodeInfo in the datanode map. This poses a larger problem in that the client may expect changes to the datanode state to be reflected in the output of LocatedBlock.getLocations(), but they won't be because we create a new DatanodeInfoWithStorage object during construction and return it in getLocations().

Instead of having DatanodeInfoWithStorage be a subclass of DatanodeInfo, we could make it be a wrapper for DatanodeInfo, StorageID, and StorageType. Then to make NetworkTopology.sortByDistance work, we would have to make it implement Node and/or DatanodeInfo., bq. This poses a larger problem in that the client may expect changes to the datanode state to be reflected in the output of LocatedBlock.getLocations(), but they won't be because we create a new DatanodeInfoWithStorage object during construction and return it in getLocations().
I think this is a test specific problem. Clients will never get access to the NameNode object, instead they will have a replica constructed from the wire message. The test case directly calls the FSNameSystem.getBlockLocations. The test should be fixed to not poll the cached object but query a new one periodically., Attached patch should resolve the failing unit tests., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12697191/HDFS-7647-5.patch
  against trunk revision 8de80ff.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshotDeletion
                  org.apache.hadoop.cli.TestHDFSCLI

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9479//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/9479//artifact/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9479//console

This message is automatically generated., Fixed the findbugs warning by overriding equals() in DatanodeInfoWithStorage to invoke the super with an explanatory comment. The TestHDFSCLI failure is related to HDFS-7720. The other test failures are unrelated shutdown errors and those tests pass on my system., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12697237/HDFS-7647-6.patch
  against trunk revision cfb829e.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 2 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.cli.TestHDFSCLI

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9488//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/9488//artifact/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9488//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12697285/HDFS-7647-7.patch
  against trunk revision 1382ae5.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencing

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9495//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/9495//artifact/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9495//console

This message is automatically generated., Test failure and findbugs warning are unrelated; test passes locally on my machine., Hi [~milandesai], thank you again for your patience with the patch revisions!

The latest version looks good. Just a nitpick, and I do feel bad having you upload another patch revision -
- I think {{DatanodeInfoWithStorage#equals}} and {{#hashCode}} are unnecessary since they just forward to the superclass versions with no additional work. I removed them and verified the test case still passes. Do you think we could eliminate them?, Hi [~arpitagarwal], I added those in because Findbugs was complaining that a subclass (DatanodeInfoWithStorage) didn't override equals() and hashCode() and recommending that I call the super and add an explanatory comment if I didn't want to override. Revision 5 is the same exact as Revision 7 but without the equals and hashCode overridden, so we can commit that one, but there will be two additional FindBugs warnings., Thanks for the explanation - I missed that. The warning looks overaggressive but +1 for the v7 patch to avoid future findbugs warnings.

I will commit it today., Committed to trunk and branch-2. Thanks for the contribution [~milandesai]., Thanks [~arpitagarwal] for the help and review, DatanodeInfoWithStorage doesn't have audience annotation. Is it Private ?

Can DatanodeInfoWithStorage reside in org.apache.hadoop.hdfs.protocol as DatanodeInfo does ?, Yes it is Private by default but we should tag it. [~ted_yu], Do you want to file a Jira to fix both points? Thanks., Sure.
I am testing a patch - will log JIRA momentarily., SUCCESS: Integrated in Hadoop-trunk-Commit #7053 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7053/])
HDFS-7647. DatanodeManager.sortLocatedBlocks sorts DatanodeInfos but not StorageIDs. (Contributed by Milan Desai) (arp: rev ab934e85947dcf2092050023909dd81ae274ff45)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/protocol/DatanodeInfoWithStorage.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestDatanodeManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlock.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDecommission.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #100 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/100/])
HDFS-7647. DatanodeManager.sortLocatedBlocks sorts DatanodeInfos but not StorageIDs. (Contributed by Milan Desai) (arp: rev ab934e85947dcf2092050023909dd81ae274ff45)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestDatanodeManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDecommission.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/protocol/DatanodeInfoWithStorage.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlock.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2031 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2031/])
HDFS-7647. DatanodeManager.sortLocatedBlocks sorts DatanodeInfos but not StorageIDs. (Contributed by Milan Desai) (arp: rev ab934e85947dcf2092050023909dd81ae274ff45)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestDatanodeManager.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlock.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/protocol/DatanodeInfoWithStorage.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDecommission.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2050 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2050/])
HDFS-7647. DatanodeManager.sortLocatedBlocks sorts DatanodeInfos but not StorageIDs. (Contributed by Milan Desai) (arp: rev ab934e85947dcf2092050023909dd81ae274ff45)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDecommission.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/protocol/DatanodeInfoWithStorage.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestDatanodeManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlock.java
, FAILURE: Integrated in HBase-1.1 #159 (See [https://builds.apache.org/job/HBase-1.1/159/])
HBASE-12998 Compilation with Hdfs-2.7.0-SNAPSHOT is broken after HDFS-7647 (enis: rev 66ccc22117beb9908057f941c9e3ea3fbd6880c0)
* hbase-server/src/test/java/org/apache/hadoop/hbase/fs/TestBlockReorder.java
, FAILURE: Integrated in HBase-TRUNK #6108 (See [https://builds.apache.org/job/HBase-TRUNK/6108/])
HBASE-12998 Compilation with Hdfs-2.7.0-SNAPSHOT is broken after HDFS-7647 (enis: rev f97c00fd99609214830e68f52c1ec48c4e506c1c)
* hbase-server/src/test/java/org/apache/hadoop/hbase/fs/TestBlockReorder.java
, FAILURE: Integrated in HBase-1.0 #724 (See [https://builds.apache.org/job/HBase-1.0/724/])
HBASE-12998 Compilation with Hdfs-2.7.0-SNAPSHOT is broken after HDFS-7647 (enis: rev ea431871db5a99eb64eb742558e2cccb867c355f)
* hbase-server/src/test/java/org/apache/hadoop/hbase/fs/TestBlockReorder.java
, SUCCESS: Integrated in HBase-0.98 #842 (See [https://builds.apache.org/job/HBase-0.98/842/])
HBASE-12998 Compilation with Hdfs-2.7.0-SNAPSHOT is broken after HDFS-7647 (enis: rev 433672a67b2589bc77d80007c219d03f6a6bf656)
* hbase-server/src/test/java/org/apache/hadoop/hbase/fs/TestBlockReorder.java
, FAILURE: Integrated in HBase-0.98-on-Hadoop-1.1 #800 (See [https://builds.apache.org/job/HBase-0.98-on-Hadoop-1.1/800/])
HBASE-12998 Compilation with Hdfs-2.7.0-SNAPSHOT is broken after HDFS-7647 (enis: rev 433672a67b2589bc77d80007c219d03f6a6bf656)
* hbase-server/src/test/java/org/apache/hadoop/hbase/fs/TestBlockReorder.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #100 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/100/])
HDFS-7647. DatanodeManager.sortLocatedBlocks sorts DatanodeInfos but not StorageIDs. (Contributed by Milan Desai) (arp: rev ab934e85947dcf2092050023909dd81ae274ff45)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDecommission.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/protocol/DatanodeInfoWithStorage.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlock.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestDatanodeManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #834 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/834/])
HDFS-7647. DatanodeManager.sortLocatedBlocks sorts DatanodeInfos but not StorageIDs. (Contributed by Milan Desai) (arp: rev ab934e85947dcf2092050023909dd81ae274ff45)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestDatanodeManager.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlock.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/protocol/DatanodeInfoWithStorage.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDecommission.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java
, Sorry for coming late, I took a look at this patch again when committing HDFS-7756 this morning and find few nits.
I make some cleanup for {{LocatedBlock}} in HDFS-7761 after the patch of this JIRA, and details are as following. 
# The usage of following two variables is unnecessary. We can remove them to make code a bit brief.
{quote}
private final boolean hasStorageIDs;
private final boolean hasStorageTypes;
{quote}
# In this JIRA, no need to modify {{LocatedBlock#getStorageTypes}} and {{LocatedBlock#getStorageIDs}}, we just need to update the cached {{storageIDs}} and {{storageTypes}} after *sort*.
# Another thing is we'd better setSoftwareVersion when constructing {{DatanodeInfoWithStorage}} from {{DatanodeInfo}}, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #97 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/97/])
HDFS-7647. DatanodeManager.sortLocatedBlocks sorts DatanodeInfos but not StorageIDs. (Contributed by Milan Desai) (arp: rev ab934e85947dcf2092050023909dd81ae274ff45)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDecommission.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestDatanodeManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/protocol/DatanodeInfoWithStorage.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/LocatedBlock.java
]