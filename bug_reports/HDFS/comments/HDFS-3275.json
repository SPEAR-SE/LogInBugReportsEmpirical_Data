[Updating the numbering of the steps. (The original numbering had two step 2's.), I think we have to deal with protocol type and check the directory consistencies based on that. Currently, confirmation check will check only namespace dirs. 
To check the shared edits, we can not use this logic. We have to do it depending on the shared journal type. for: bk jouranal..etc

Also currently initialization of shareEditsDirs option also assumes that as file protocol. If we configure any other type it may not work., I agree with uma.

Currently I have created a patch which work with shared dir configured with file protocol.
If any bookeeper related directory is configured then my patch will not fail the format.
{code}
for(Iterator<URI> it = dirsToFormat.iterator(); it.hasNext();) {
      File curDir = new File(it.next().getPath());
      // Its alright for a dir not to exist, or to exist (properly accessible)
      // and be completely empty.
      if (!curDir.exists() ||
          (curDir.isDirectory() && FileUtil.listFiles(curDir).length == 0))
        continue;
{code}
curDir.exist() (which will check locally and return false) and user is not prompted for formatting this shared dir.


I have another doubt If I format the HDFS cluster which used Bookeeper for shared storage, then ./hdfs namenode -format will not format the shared dir(bookeeper dir). Then how cluster works with older version details?, I think that for this JIRA we should punt on the other types of shared dirs besides file-based. I think we should make format look at the journal type and print something like "not formatting non-file journal manager..."

How does that sound? At a later point in a different JIRA we can work on a more general initialization system which is totally agnostic to the type of journal manager., Thanks Aaron,

I accept your view, If Uma also accept I will provide a patch as Aaron described. :)

Any one as any other views ?, {quote}
How does that sound? At a later point in a different JIRA we can work on a more general initialization system which is totally agnostic to the type of journal manager.
{quote}
Sounds good to me. +1

Here is the JIRA to support shared edits dirs(other than file based). HDFS-3287

@Amith, you can go ahead with this change as a limitation of non-file based shared dirs., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12523215/HDFS-3275.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2297//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2297//console

This message is automatically generated., Amith, thanks a lot for working on this issue.

I just reviewed your patch! Some comments:

1){quote} File base_dir = new File(System.getProperty("test.build.data",
+        "build/test/data"), "dfs/");
{quote}
can't we use getBaseDirectory from minidfs cluster?

2) {quote}
NameNode.format(conf); // Namenode should not format dummy or any other
+      // non file schemes
{quote}
instead of wrapping the comment into two lines, can we add it above to the foamt call?

3){code}
System.err
+            .println("Storage directory "
+                + dirUri
+                + " is not in file scheme currently formatting is not supported for this scheme");
{code}
can you please  format this correctly?

ex:
{code}
 System.err.println("Storage directory "
        + " is not in file scheme currently "
        + "formatting is not supported for this scheme");
{code}

4) File curDir = new File(dirUri.getPath());
  File will take uri also, so need not cnvert it to string right?

5) Also message can be like, 'Formatting supported only for file based storage directories. Current directory scheme is "+scheme+" .  So, ignoring it for format"

6) HATestUtil#setFailoverConfigurations would do almost similar setup as in test. is it possible to use it by passing mock cluster or slightly changed HATestUtil#setFailoverConfigurations?

7)you mean "Could not delete hdfs directory '" -> "Could not delete namespace directory '"

8) testOnlyFileSchemeDirsAreFormatted -> testFormatShouldBeIgnoredForNonFileBasedDirs  ?
, Thanks for your comments uma
Surely I will work on it and provide a patch, Corrected the comments, Patch looks good. Assert has been added in format api. So, test ensures that there is no exceptions out of it when we include non-file based journals.

+1

Re-attaching the same patch as Amith to trigger Jenkins., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12523911/HDFS-3275_1.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified test files.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2316//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2316//console

This message is automatically generated., Patch looks pretty good to me. Just a few little comments. +1 once these are addressed:

# Don't declare the "DEFAULT_SCHEME" constant in the NameNode class. Instead, use the NNStorage.LOCAL_URI_SCHEME constant, which is used in FSEditLog to identify local edits logs.
# I think it's better to include the URI of the dir we're skipping, and the scheme we expect. So, instead of this:
{code}
System.err.println("Formatting supported only for file based storage"
  + " directories. Current directory scheme is \""
  + dirUri.getScheme() + "\". So, ignoring it for format");
{code}
How about something like this:
{code}
System.err.println("Skipping format for directory \"" + dirUri
  + "\". Can only format local directories with scheme \""
  + NNStorage.LOCAL_URI_SCHEME + "\".");
{code}
# {{"supported for" + dirUri;}} - put a space after "for"
# Odd javadoc formatting, and typo "with out" -> "without":
{code}
+  /** Sets the required configurations for performing failover.
+   *  with out any dependency on MiniDFSCluster
+   *  */
{code}
# Recommend adding a comment to the assert in NameNode#confirmFormat that the presence of the assert is necessary for the validity of the test., Thanks Aaron, for taking a look. Amith, could you please address these comments as well for commit?, Thanks for the comments Aaron Will provide the patch soon
, Aaron all the comments are addressed can u review once more, This comment still isn't formatted correctly, and I think you can remove the "." in this sentence.

{code}
+  /** Sets the required configurations for performing failover.
+   *  without any dependency on MiniDFSCluster
+   */
{code}

Otherwise it looks good. +1., Thanks Aaron for a thorough review resubmitting the patch, latest is HDFS-3275_2.patch 24/Apr/12 17:55, Hey Amith,

The comment still isn't formatted correctly. Instead of this:

{code}
+  /** Sets the required configurations for performing failover
+   *  without any dependency on MiniDFSCluster
+   */
{code}

It should be like this:

{code}
+  /**
+   * Sets the required configurations for performing failover
+   * without any dependency on MiniDFSCluster
+   */
{code}, Corrected javadoc, +1, Amith, small comment 

{quote}
+   * Sets the required configurations for performing failover
+   * without any dependency on MiniDFSCluster
{quote}

Why do we need to mention that 'no dependancy on MiniDFSCluster'? Since this is a Util method, we need not mention this right?

very sorry for not figuring out to you in my previous review.
Thanks for your work!
, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12524011/HDFS-3275_2.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified test files.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAWebUI
                  org.apache.hadoop.hdfs.TestDFSClientFailover
                  org.apache.hadoop.hdfs.server.namenode.TestEditLogRace
                  org.apache.hadoop.hdfs.server.namenode.TestNNThroughputBenchmark
                  org.apache.hadoop.hdfs.server.namenode.TestStartup
                  org.apache.hadoop.hdfs.server.namenode.ha.TestNNHealthCheck
                  org.apache.hadoop.hdfs.server.namenode.ha.TestInitializeSharedEdits
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAStateTransitions
                  org.apache.hadoop.hdfs.server.namenode.ha.TestGetGroupsWithHA
                  org.apache.hadoop.hdfs.server.namenode.TestNameEditsConfigs
                  org.apache.hadoop.hdfs.server.namenode.ha.TestEditLogsDuringFailover
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDFSUpgradeWithHA
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAFsck
                  org.apache.hadoop.hdfs.TestDFSUpgrade
                  org.apache.hadoop.hdfs.server.namenode.ha.TestBootstrapStandby
                  org.apache.hadoop.hdfs.TestDFSStorageStateRecovery
                  org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyIsHot
                  org.apache.hadoop.hdfs.server.namenode.TestCheckpoint
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDelegationTokensWithHA
                  org.apache.hadoop.hdfs.server.blockmanagement.TestReplicationPolicy
                  org.apache.hadoop.hdfs.TestDFSRollback
                  org.apache.hadoop.hdfs.server.namenode.ha.TestFailureOfSharedDir
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencingWithReplication
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAMetrics
                  org.apache.hadoop.hdfs.server.namenode.ha.TestQuotasWithHA
                  org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyCheckpoints
                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithHANameNodes
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHASafeMode
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover
                  org.apache.hadoop.hdfs.TestDFSFinalize
                  org.apache.hadoop.hdfs.server.namenode.TestValidateConfigurationSettings
                  org.apache.hadoop.hdfs.server.namenode.ha.TestEditLogTailer
                  org.apache.hadoop.hdfs.TestDFSStartupVersions
                  org.apache.hadoop.hdfs.tools.TestDFSHAAdminMiniCluster
                  org.apache.hadoop.hdfs.TestHDFSServerPorts
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHarFileSystemWithHA
                  org.apache.hadoop.hdfs.server.namenode.ha.TestFailureToReadEdits
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencing
                  org.apache.hadoop.hdfs.tools.offlineEditsViewer.TestOfflineEditsViewer
                  org.apache.hadoop.hdfs.server.namenode.TestClusterId

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2320//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2320//console

This message is automatically generated., Amith, seems test failures related to this patch.

{quote}
java.util.NoSuchElementException
	at java.util.AbstractList$Itr.next(AbstractList.java:350)
	at org.apache.hadoop.hdfs.server.namenode.NameNode.confirmFormat(NameNode.java:731)
	at org.apache.hadoop.hdfs.server.namenode.NameNode.format(NameNode.java:685)
	at org.apache.hadoop.hdfs.server.namenode.NameNode.format(NameNode.java:228)
	at org.apache.hadoop.hdfs.DFSTestUtil.formatNameNode(DFSTestUtil.java:122)
	at org.apache.hadoop.hdfs.MiniDFSCluster.createNameNodesAndSetConf(MiniDFSCluster.java:680)

{quote}, Reason is, two time you are taking the element in one iteration.

{code}
+      URI dirUri = *it.next()*;
+      if (!dirUri.getScheme().equals(NNStorage.LOCAL_URI_SCHEME)) {
+        System.err.println("Skipping format for directory \"" + dirUri
+            + "\". Can only format local directories with scheme \""
+            + NNStorage.LOCAL_URI_SCHEME + "\".");
+        continue;
+      }
+      // To validate only file based schemes are formatted
+      assert dirUri.getScheme().equals(NNStorage.LOCAL_URI_SCHEME) :
+        "formatting is not supported for " + dirUri;
+
       File curDir = new File(*it.next()*.getPath());
{code}, Looks you have missed one line in HDFS-3275_2.patch and HDFS-3275_3.patch


Below code from HDFS-3275_1.patch
{code}
+      assert dirUri.getScheme().equals(DEFAULT_SCHEME) : "formatting is not "
+          + "supported for" + dirUri;
+
+      File curDir = new File(dirUri.getPath());
       // Its alright for a dir not to exist, or to exist (properly accessible)
{code}

Please take care in next version of the patch., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12524017/HDFS-3275_2.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified test files.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyCheckpoints
                  org.apache.hadoop.hdfs.server.namenode.ha.TestBootstrapStandby
                  org.apache.hadoop.hdfs.server.blockmanagement.TestReplicationPolicy
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHASafeMode
                  org.apache.hadoop.hdfs.server.namenode.ha.TestFailureOfSharedDir
                  org.apache.hadoop.hdfs.server.namenode.TestNameEditsConfigs
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHarFileSystemWithHA
                  org.apache.hadoop.hdfs.TestDFSFinalize
                  org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyIsHot
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAFsck
                  org.apache.hadoop.hdfs.server.namenode.ha.TestNNHealthCheck
                  org.apache.hadoop.hdfs.TestDFSStartupVersions
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAMetrics
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAWebUI
                  org.apache.hadoop.hdfs.tools.offlineEditsViewer.TestOfflineEditsViewer
                  org.apache.hadoop.hdfs.server.namenode.TestClusterId
                  org.apache.hadoop.hdfs.server.namenode.ha.TestFailureToReadEdits
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDelegationTokensWithHA
                  org.apache.hadoop.hdfs.TestDFSRollback
                  org.apache.hadoop.hdfs.TestDFSClientFailover
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencingWithReplication
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDFSUpgradeWithHA
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencing
                  org.apache.hadoop.hdfs.server.namenode.ha.TestQuotasWithHA
                  org.apache.hadoop.hdfs.TestFileAppend4
                  org.apache.hadoop.hdfs.server.namenode.TestStartup
                  org.apache.hadoop.hdfs.server.namenode.ha.TestInitializeSharedEdits
                  org.apache.hadoop.hdfs.server.namenode.TestCheckpoint
                  org.apache.hadoop.hdfs.server.namenode.TestEditLogRace
                  org.apache.hadoop.hdfs.server.namenode.TestNNThroughputBenchmark
                  org.apache.hadoop.hdfs.TestDFSStorageStateRecovery
                  org.apache.hadoop.hdfs.server.namenode.ha.TestEditLogTailer
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAStateTransitions
                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithHANameNodes
                  org.apache.hadoop.hdfs.server.namenode.ha.TestGetGroupsWithHA
                  org.apache.hadoop.hdfs.tools.TestDFSHAAdminMiniCluster
                  org.apache.hadoop.hdfs.TestHDFSServerPorts
                  org.apache.hadoop.hdfs.server.namenode.ha.TestEditLogsDuringFailover
                  org.apache.hadoop.hdfs.server.namenode.TestValidateConfigurationSettings
                  org.apache.hadoop.hdfs.TestDFSUpgrade

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2321//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2321//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12524019/HDFS-3275_3.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified test files.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAWebUI
                  org.apache.hadoop.hdfs.TestDFSClientFailover
                  org.apache.hadoop.hdfs.server.namenode.TestEditLogRace
                  org.apache.hadoop.hdfs.server.namenode.TestNNThroughputBenchmark
                  org.apache.hadoop.hdfs.server.namenode.TestStartup
                  org.apache.hadoop.hdfs.server.namenode.ha.TestNNHealthCheck
                  org.apache.hadoop.hdfs.server.namenode.ha.TestInitializeSharedEdits
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAStateTransitions
                  org.apache.hadoop.hdfs.server.namenode.ha.TestGetGroupsWithHA
                  org.apache.hadoop.hdfs.server.namenode.TestNameEditsConfigs
                  org.apache.hadoop.hdfs.server.namenode.ha.TestEditLogsDuringFailover
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDFSUpgradeWithHA
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAFsck
                  org.apache.hadoop.hdfs.TestDFSUpgrade
                  org.apache.hadoop.hdfs.server.namenode.ha.TestBootstrapStandby
                  org.apache.hadoop.hdfs.TestDFSStorageStateRecovery
                  org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyIsHot
                  org.apache.hadoop.hdfs.server.namenode.TestCheckpoint
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDelegationTokensWithHA
                  org.apache.hadoop.hdfs.server.blockmanagement.TestReplicationPolicy
                  org.apache.hadoop.hdfs.TestDFSRollback
                  org.apache.hadoop.hdfs.server.namenode.ha.TestFailureOfSharedDir
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencingWithReplication
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAMetrics
                  org.apache.hadoop.hdfs.server.namenode.ha.TestQuotasWithHA
                  org.apache.hadoop.hdfs.TestDatanodeBlockScanner
                  org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyCheckpoints
                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithHANameNodes
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHASafeMode
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover
                  org.apache.hadoop.hdfs.TestDFSFinalize
                  org.apache.hadoop.hdfs.server.namenode.TestValidateConfigurationSettings
                  org.apache.hadoop.hdfs.server.namenode.ha.TestEditLogTailer
                  org.apache.hadoop.hdfs.TestDFSStartupVersions
                  org.apache.hadoop.hdfs.tools.TestDFSHAAdminMiniCluster
                  org.apache.hadoop.hdfs.TestHDFSServerPorts
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHarFileSystemWithHA
                  org.apache.hadoop.hdfs.server.namenode.ha.TestFailureToReadEdits
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencing
                  org.apache.hadoop.hdfs.tools.offlineEditsViewer.TestOfflineEditsViewer
                  org.apache.hadoop.hdfs.server.namenode.TestClusterId

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2322//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2322//console

This message is automatically generated., Attached the patch same as Amith and corrected the failures. Let's run the Jenkins., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12524985/HDFS-3275-4.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified test files.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2350//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2350//console

This message is automatically generated., +1, Looks good, I will commit this patch., thanks uma, Integrated in Hadoop-Hdfs-trunk-Commit #2235 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2235/])
    HDFS-3275. Skip format for non-file based directories. Contributed by Amith D K. (Revision 1332527)

     Result = SUCCESS
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1332527
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAllowFormat.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/HATestUtil.java
, Integrated in Hadoop-Common-trunk-Commit #2161 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2161/])
    HDFS-3275. Skip format for non-file based directories. Contributed by Amith D K. (Revision 1332527)

     Result = SUCCESS
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1332527
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAllowFormat.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/HATestUtil.java
, I have just committed this to trunk and branch-2. Thanks Amith., Integrated in Hadoop-Mapreduce-trunk-Commit #2178 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2178/])
    HDFS-3275. Skip format for non-file based directories. Contributed by Amith D K. (Revision 1332527)

     Result = ABORTED
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1332527
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAllowFormat.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/HATestUtil.java
, Integrated in Hadoop-Hdfs-trunk #1031 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1031/])
    HDFS-3275. Skip format for non-file based directories. Contributed by Amith D K. (Revision 1332527)

     Result = FAILURE
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1332527
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAllowFormat.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/HATestUtil.java
, Integrated in Hadoop-Mapreduce-trunk #1066 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1066/])
    HDFS-3275. Skip format for non-file based directories. Contributed by Amith D K. (Revision 1332527)

     Result = FAILURE
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1332527
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAllowFormat.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/HATestUtil.java
]