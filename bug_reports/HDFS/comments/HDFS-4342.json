[trunk patch attached. Patch for trunk-win to follow., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12568058/HDFS-4342.trunk.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.cli.TestHDFSCLI
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAStateTransitions
                  org.apache.hadoop.hdfs.TestQuota

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3945//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3945//console

This message is automatically generated., Updated patch to fix TestHAStateTransitions. The remaining two test failures look unrelated to the patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12568119/HDFS-4342.trunk.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.cli.TestHDFSCLI
                  org.apache.hadoop.hdfs.TestQuota

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3950//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3950//console

This message is automatically generated., The two test failures are unrelated to the patch. HDFS-4468 seems to be the likely cause., Hi, Arpit.

{code}
     } else if (dirNames.isEmpty()) {
-      dirNames = Collections.singletonList("file:///tmp/hadoop/dfs/name");
+      dirNames = Collections.singletonList(
+          DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_DEFAULT);
     }
{code}

It seems odd that {{FSNamesystem#getStorageDirs}} defaults to file:///tmp/hadoop/dfs/name.  For example, if the method is called with "dfs.namenode.edits.dir" for the property name, then looking at the definitions in hdfs-default.xml and core-default.xml, the default value is $\{dfs.namenode.name.dir\}, which expands to file://${hadoop.tmp.dir\}/dfs/name, which expands to /tmp/hadoop-$\{user.name\}/dfs/name.  The default here doesn't match the default defined in the XML files.  I wonder if it's a bug.  (Your patch doesn't really change this logic though, so it would be a separate issue.)

{code}
-  
+
+  /**
+   * Initialize target directories for the edit logs. Validates the list of
+   * required directories.
+   * @param dirs Target directories for the edit logs.
+   * @throws IllegalArgumentException.
+   */
   private synchronized void initJournals(List<URI> dirs) {
{code}

A potential weakness of doing the check here is that the operator has to wait for the fsimage load and checkpoint (potentially lengthy) before receiving the misconfiguration error and failing to start the namenode.  Perhaps we could do the check in {{FSEditLog#init}}, which occurs before actually loading the namespace.

{code}
+    final Collection<URI> requiredDirs =
+        FSNamesystem.getRequiredNamespaceEditsDirs(conf);
+    final Collection<URI> sharedEditsDirsLocal  =
+        FSNamesystem.getSharedEditsDirs(conf);
...
+      if (!dirs.contains(u) && !sharedEditsDirsLocal.contains(u)) {
{code}

When {{FSEditLog#initJournals}} gets called from {{FSEditLog#initSharedJournalsForRead}}, then both {{dirs}} and {{sharedEditsDirsLocal}} would contain the value of dfs.namenode.shared.edits.dir.  I think it would then fail always if someone had a required directory configured in dfs.namenode.edits.dir (instead of dfs.namenode.shared.edits.dir).

Maybe this logic would be easier in {{FSEditLog#init}} if we gathered up all of the relevant properties in one place: dfs.namenode.edits.dir, dfs.namenode.shared.edits.dir, and dfs.namenode.edits.dir.required.

{code}
+      Thread.dumpStack();
+      if (u.toString().compareTo(
+              DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_DEFAULT) == 0) {
+        continue;
+      }
{code}

I assume the {{Thread#dumpStack}} was for debugging help and can be removed now.

The need for the extra if check here makes me think that {{FSNamesystem#getStorageDirs}} does have an existing bug in the defaulting behavior.  (See earlier comment.)  Because of this, a user would not receive the error if they were legitimately trying to use /tmp/hadoop/dfs/name in dfs.namenode.edits.dir.required.

Thank you for the very clear and well-commented tests.  There is one small typo ("coniguration" instead of "configuration"):

{code}
+    // Good coniguration. Adds a directory to dfs.namenode.edits.dir but not to
{code}

Perhaps we need to add a test for the HA case, using dfs.namenode.shared.edits.dir, based on some of the comments earlier.
, Thanks for the feedback Chris! I have addressed most of it.

I moved the check to FSNameSystem instead of keeping it in FSEditLog. FSNameSystem seems to be a more natural place to check it.

As for the default under /tmp - it will likely need some refactoring of FSNameSystem. I can file a separate Jira to address it., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12568517/HDFS-4342.trunk.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3957//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3957//console

This message is automatically generated., +1 patch looks good., I have committed this.  Thanks, Arpit!, Integrated in Hadoop-trunk-Commit #3347 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3347/])
    HDFS-4342. Directories configured in dfs.namenode.edits.dir.required but not in dfs.namenode.edits.dir are silently ignored.  Contributed by Arpit Agarwal (Revision 1445006)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1445006
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameEditsConfigs.java
, Thanks for committing, Nicholas!, Integrated in Hadoop-Yarn-trunk #125 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/125/])
    HDFS-4342. Directories configured in dfs.namenode.edits.dir.required but not in dfs.namenode.edits.dir are silently ignored.  Contributed by Arpit Agarwal (Revision 1445006)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1445006
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameEditsConfigs.java
, Integrated in Hadoop-Hdfs-trunk #1314 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1314/])
    HDFS-4342. Directories configured in dfs.namenode.edits.dir.required but not in dfs.namenode.edits.dir are silently ignored.  Contributed by Arpit Agarwal (Revision 1445006)

     Result = FAILURE
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1445006
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameEditsConfigs.java
, Integrated in Hadoop-Mapreduce-trunk #1342 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1342/])
    HDFS-4342. Directories configured in dfs.namenode.edits.dir.required but not in dfs.namenode.edits.dir are silently ignored.  Contributed by Arpit Agarwal (Revision 1445006)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1445006
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameEditsConfigs.java
]