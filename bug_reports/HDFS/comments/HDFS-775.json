[Here's the code

{code}
    long getCapacity() throws IOException {
      if (reserved > usage.getCapacity()) {        //FIRST CALL
        return 0;
      }

      return usage.getCapacity()-reserved;         //SECOND CALL
    }
{code}

It looks like the method intends to return capacity as a number >=0, but if the second invocation triggers a shell exec the capacity could decrease and the return value could then be negative, which could have implications elsewhere.

Looking at the usages, FSVolumeSet can get confused by this, as it adds the capacities of all volumes together, no checks for being below zero. 
{code}
    long getCapacity() throws IOException {
      long capacity = 0L;
      for (int idx = 0; idx < volumes.length; idx++) {
        capacity += volumes[idx].getCapacity();
      }
      return capacity;
    }
{code}
A negative capacity from one volume would make the entire datanode capacity appear smaller than it is. 

, minor defect; its transient and nothing will actually break. , This is a patch for this; I am using this defect to understand how to work with git/github for patches, so apologies if it does not apply properly - the path looks odd and may need a -p1 to take, patch with corrected path, No tests; this is a race condition being eliminated here. Proofs of correctness only are sufficient, and I don't do those., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12427479/HDFS-775-2.patch
  against trunk revision 888538.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    -1 contrib tests.  The patch failed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/139/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/139/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/139/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/139/console

This message is automatically generated., +1. Patch looks good to me., committed., Integrated in Hadoop-Hdfs-trunk-Commit #156 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/156/])
     FSDataset calls getCapacity() twice
, Hi Steve, forgot to update CHANGE.txt?, Integrated in Hdfs-Patch-h5.grid.sp2.yahoo.net #159 (See [http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/159/])
     FSDataset calls getCapacity() twice
, Integrated in Hadoop-Hdfs-trunk #182 (See [http://hudson.zones.apache.org/hudson/job/Hadoop-Hdfs-trunk/182/])
    , Integrated in Hdfs-Patch-h2.grid.sp2.yahoo.net #94 (See [http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/94/])
    ]