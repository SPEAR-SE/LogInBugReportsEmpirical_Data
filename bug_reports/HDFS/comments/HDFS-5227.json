[Attach a patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12603934/HDFS-5227-trunk.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.datanode.TestDeleteBlockPool
                  org.apache.hadoop.hdfs.TestDFSShell
                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithNodeGroup

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4999//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4999//console

This message is automatically generated., bq. -1 core tests. The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:
I will take a look at the failures.
, I noticed we have the following code in {{Namenode.initializeGenericKeys()}} method. This method is executed before {{Namenode.initialize()}} method in the namenode constructor. Our problem should be fixed with the following code. I think we run into failure previously because "dfs.namenode.rpc-address" is not properly configured.
{code:java}
    // If the RPC address is set use it to (re-)configure the default FS
    if (conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY) != null) {
      URI defaultUri = URI.create(HdfsConstants.HDFS_URI_SCHEME + "://"
          + conf.get(DFS_NAMENODE_RPC_ADDRESS_KEY));
      conf.set(FS_DEFAULT_NAME_KEY, defaultUri.toString());
      LOG.debug("Setting " + FS_DEFAULT_NAME_KEY + " to " + defaultUri.toString());
    }
{code}
As for the unit test failure above, the federated namenode addresses of MiniDFSCluster will be wrong in TestDeleteBlockPool if the {{getAddress()}} is modified according to the patch.

Resolve this one as "not a problem" because the behavior is the same as desired, i.e. getAddress() will return "dfs.namenode.rpc-address" if namenode is initialized and "dfs.namenode.rpc-address" is configured. ]