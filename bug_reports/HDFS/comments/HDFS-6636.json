[IMO, NameNode should check the corrupted block map when adding block under construction.
If the reported block has been marked as corrupted before, NameNode should remove the reported block from the corrupted block map. It is possible that the under construction replica is marked as corrupted.
I have 2 reasons for the proposal
# Because as long as the reported block triggers the method addStoredBlockUnderConstruction, this means this reported block is not corrupt. The block has passed the check of checkReplicaCorrupt.
# In the code of method addStoredBlock,  when adding a reported block, NameNode checks the corrupted block map and remove the block in the corrupted block map. This kind of logic should be consistent in addStoredBlock and addStoredBlockUnderConstruction.

I can reproduce this issue with a Unit Test. The unit test is a simple scenario to mimic the situation I met., attach the UT for reproducing this issue.]