[On a standby name node, the persistent state (i.e. things saved to fsimage) is updated only by replaying edits once it is started.  
- During checkpointing do not allow any state changes that will be persisted. (I.e. edit log replaying)
- During checkpointing do not allow any RPC calls that may affect checkpointing itself. (saveNamespace, restoreFailedStorage, etc.)

A new {{ReentrantLock}},{{nsLock}}, is introduced to coordinate checkpointing and other activities.  Any thing that requires both {{nsLock}} and {{fsLock}}, {{nsLock}} is to be locked first. Otherwise it can block other RPC calls that do not require {{nsLock}}, not to mention deadlock.  These locks are all locked interruptibly, so that the threads can be stopped during HA transition.

Also improved {{FSImageFormat.Saver}} on cancellation checking, by making the check interval counter a class-level variable and following the PB format's threshold variable name. This only matters if the legacy oiv image saving is enabled., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670009/HDFS-7097.patch
  against trunk revision bf27b9c.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs-nfs:

org.apache.hadoop.hdfs.nfs.nfs3.TTests
org.apache.hadoop.hdfs.nfs.nfs3.TestOpenFilTests

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8106//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8106//console

This message is automatically generated., The pre-commit didn't seem to do the right thing. It did apply the patch, but somehow thought the change is in hadoop-hdfs-nfs. 

{panel}
Running tests in hadoop-hdfs-project/hadoop-hdfs-nfs
  /home/jenkins/tools/maven/latest/bin/mvn clean install -fn -Pnative -Drequire.test.libhadoop -DHadoopPatchProcess
{panel}

, Thanks, Kihwal. This is quite useful. Good idea to use another lock for coordination.

1. Does FSNameSystem.saveNamespace still need to take its readLock if it is called in Standby?
2. It will be useful to add some unit test to verify BR can still be processed when checkpoint is in progress.

, Thanks Kihwal, Changes looks good.

I too have the same question as [~mingma].
1. though its not frequent, saveNamespace RPC on standby will create the same problem as mentioned in description. 
   can we have different locks for saveNamespace based on HA state?, bq. Does FSNameSystem.saveNamespace still need to take its readLock if it is called in Standby?
If we want external invocations of {{saveNamespace()}} to be remain as blocking, then yes.  I don't think we want it like this, but then it becomes a bit complicated and something beyond the scope of this jira.

- External invocations of saveNamespace should be cancellable.
- May be block report processing should be allowed even on active when saveNamespace is going on. Otherwise the rpc handlers will all be tied up up quickly and even if it acquires the read lock, no read ops (e.g. heartbeat) will go through. Incremental BRs are not much of a problem on active NN, since it needs to be in safe mode first. Incremental BR will settle down in a few seconds after going into safe mode. Full block reports can be a problem depending on the number of nodes, time it takes to save the name space and the full block report interval.  The rpc does timeout on DataNode, so full block reports can be resent multiple times if saveNamespace takes long. They will all take up a different handler or a call queue slot.
- Ongoing external invocation of saveNamespace should be cancelled during HA transition. Queued (in call queue or waiting on the lock) saveNamespace requests should also be rejected for a while just like checkpointing is not allowed for some time after a cancellation.
- Locking will be a bit tricky.

I agree that we need to address the saveNamespace issue, but prefer doing it in a separate jira., Modified a test case to also check whether block reports are processed during checkpointing on standby nn., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12672615/HDFS-7097.patch
  against trunk revision a56f3ec.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The test build failed in hadoop-hdfs-project/hadoop-hdfs 

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8303//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8303//artifact/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8303//console

This message is automatically generated., In the unit test, to get rid of possible flaky situation where SBN might not have received incremental BR after the file has been closed, maybe it can call MiniDFSCluster.triggerBlockReports? Otherwise, the patch looks good., I am not sure about calling triggerBlockReports(). The block finalization makes the IBR to be sent out right away, so this extra call will actually do nothing. It's a bug, if NNs are not getting it.  But your concern is valid.  Depending on the testing environment, things can get slow down and the delay of 1 second may not be enough.  I can make it periodically check for a longer period of time. The test will terminate sooner when it succeeds, but will take an extra time when fails., Made the change in the test case. It now checks the result every 100ms for up to 5 seconds., Thanks, Kihwal. LGTM., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12673911/HDFS-7097.patch
  against trunk revision 8d7c549.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 1272 javac compiler warnings (more than the trunk's current 1267 warnings).

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencingWithReplication
                  org.apache.hadoop.hdfs.TestDecommission
                  org.apache.hadoop.hdfs.server.balancer.TestBalancer

                                      The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.server.datanode.TestBlockHasMultipleReplicasOTests
org.apache.hadoop.hdfs.Tests
org.apache.hadoop.hdfs.server.blockmanagement.TestCorruptReplicaInfo
org.apache.hadoop.hTests
org.apache.hadoopTests
org.apache.hadoop.hdfs.server.Tests
org.apache.hadoop.hdfs.sTests
org.apache.hadooTests
org.apache.hadoop.hdfs.qjournal.client.TestIPCLoggerChanTests
org.apache.hadoop.traciTests
org.apache.hadoop.hdfs.TestFileCreationClient

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8378//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8378//artifact/patchprocess/patchReleaseAuditProblems.txt
Javac warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8378//artifact/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8378//console

This message is automatically generated., The patch looks pretty good, and in thinking about it a fair bit I think it won't regress the issue I was trying to address in HDFS-5064, though Kihwal I would appreciate if you could confirm that as well.

A few small comments:

# Does {{FSNamesystem#rollEditLog}} need to take the nsLock as well? Seems like it might, given that tailing edits no longer is taking the normal FSNS rw lock.
# Similarly for {{FSNamesystem#(start|end)Checkpoint}}, though that's less obvious to me.
# Seems a little strange to me to be calling this new lock the "nsLock", when that's also what we've been calling the main FSNS rw lock all this time. I'd suggest renaming this to the "checkpoint lock" or something, to more clearly distinguish its purpose.
# I think you can now remove some of the other stuff added as part of HDFS-5064, e.g. the entire {{longReadLock}} I believe was only actually being locked for read during checkpointing.

Thanks a lot for working on this, Kihwal., Thanks for the review, Aaron. 
The checkpoint lock is only meaningful on standby namenode. Some of the namenode methods that can be called on both active and standby do acquire the lock, but the locking has no correctness implications on active namenode. On active namenode, the regular namesystem lock (fsLock) takes care of everything.

1. {{FSNamesystem#rollEditLog}} : This is only allowed on active namenodes.
2. {{FSNamesystem#(start|end)Checkpoint}} : This is only for backup node. 
3. I am renaming it to {{cpLock}}.
4. I believe [~daryn] is eager to do that once this is in. :), Attaching a new patch with the lock name/comment changes., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12677893/HDFS-7097.patch
  against trunk revision ec63a3f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.qjournal.client.TestQuorumJournalManager

                                      The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.TestPread

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8580//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8580//console

This message is automatically generated., The test case failed because : {{java.net.BindException: Port in use: localhost:40123}}  We are getting this sort of failures more often nowadays from precommit.
Both test cases pass when run on my machine., [~atm], are you okay with the latest patch?, Sorry for the delay, Kihwal. Yes, the latest patch looks good to me.

+1, This patch has unfortunately gone a bit stale due to the RetryCache refactor. Kihwal, do you mind rebasing? I promise to +1/commit in a timely fashion :), Here is the updated patch., +1 LGTM as well, thanks Kihwal for the patch, ATM, Vinay, and Ming for reviewing. I'll commit this shortly., FAILURE: Integrated in Hadoop-trunk-Commit #6605 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6605/])
HDFS-7097. Allow block reports to be processed during checkpointing on standby name node. (kihwal via wang) (wang: rev f43a20c529ac3f104add95b222de6580757b3763)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestStandbyCheckpoints.java
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12683658/HDFS-7097.ultimate.trunk.patch
  against trunk revision 78f7cdb.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.fs.TestEnhancedByteBufferAccess

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8835//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8835//console

This message is automatically generated., FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #17 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/17/])
HDFS-7097. Allow block reports to be processed during checkpointing on standby name node. (kihwal via wang) (wang: rev f43a20c529ac3f104add95b222de6580757b3763)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestStandbyCheckpoints.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk #755 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/755/])
HDFS-7097. Allow block reports to be processed during checkpointing on standby name node. (kihwal via wang) (wang: rev f43a20c529ac3f104add95b222de6580757b3763)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestStandbyCheckpoints.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1945 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1945/])
HDFS-7097. Allow block reports to be processed during checkpointing on standby name node. (kihwal via wang) (wang: rev f43a20c529ac3f104add95b222de6580757b3763)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestStandbyCheckpoints.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #17 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/17/])
HDFS-7097. Allow block reports to be processed during checkpointing on standby name node. (kihwal via wang) (wang: rev f43a20c529ac3f104add95b222de6580757b3763)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestStandbyCheckpoints.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1969 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1969/])
HDFS-7097. Allow block reports to be processed during checkpointing on standby name node. (kihwal via wang) (wang: rev f43a20c529ac3f104add95b222de6580757b3763)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestStandbyCheckpoints.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk-Java8 #17 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/17/])
HDFS-7097. Allow block reports to be processed during checkpointing on standby name node. (kihwal via wang) (wang: rev f43a20c529ac3f104add95b222de6580757b3763)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestStandbyCheckpoints.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java
, The patch was committed to branch-2 and trunk. Updating the status.]