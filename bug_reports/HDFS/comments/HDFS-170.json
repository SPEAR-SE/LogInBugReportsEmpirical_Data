[Here's a log from a failed run., There are probably multiple issues :

# {{DFSTestUtil.waitReplication()}} does not actually wait, since HADOOP-1912
# Not sure why namenode could not find enough datanodes to replicate the blocks : {noformat}
2007-11-13 22:08:40,726 INFO  dfs.StateChange (FSNamesystem.java:allocateBlock(1153)) -
    BLOCK* NameSystem.allocateBlock:  /srcdat/four/3008492280703278769. blk_-2520229948653068441
2007-11-13 22:08:40,727 WARN  fs.FSNamesystem (ReplicationTargetChooser.java:chooseTarget(177)) -
    Not able to place enough replicas, still in need of 1
{noformat}

I will submit a patch for (1) separately.

, Regd (2) above, the test waits for both datanodes to register. Both datanodes register around 300 ms apart. The test creates files immediately after the second datanode registers. But for some reason Namenode does not consider second datanode for block placement for some time. Anyone knows what is happening? Has there been any change in this policy?

Note that fixing (1) might actually hide (2)., Like we discussed, the MiniDFSCluster.waitActive() should wait for two heartbeats (as it used to earlier). This should fix the problem you are seeing., I'm going to close this as stale.  ]