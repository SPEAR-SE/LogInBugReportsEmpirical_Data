[Thanks [~knanasi] for creating this issue, I think it's a great catch!

In the description the term "node" is a bit confusing to me. These are the "real data blocks" you are referring to right?

I like how you extended the already available mocking approach in the unit tests.
 When I applied the test it was failing but it did pass with your proposed fix therefore I think it should be valid.

Overall I think it's a valid change, +1 (non-binding) from me., Thanks you [~zvenczel] for reviewing this! Yes, when I wrote "the number of nodes containing the block" I meant "real data blocks"., Thanks Kitti for finding and fixing this, and Zsolt for reviewing!

This is a good find, and the patch looks pretty good overall. A few test comment:
- We can take out the magic number (dataBlockNum) 2 here, make it a constant and calculated from {{liveReplicas}}. {code}
when(blockInfo.getRealDataBlockNum()).thenReturn((short)2);
{code}
- The assertion part of {{testIncrementAndDecrementSafeBlockCount}} and {{testIncrementAndDecrementStripedSafeBlockCount}} can be refactored into a shared method., Thanks for the comments [~xiaochen]! I fixed them in patch v002., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 30s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 19m  6s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 51s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  3s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 58s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 54s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 49s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 56s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javac {color} | {color:red}  0m 56s{color} | {color:red} hadoop-hdfs-project_hadoop-hdfs generated 1 new + 530 unchanged - 0 fixed = 531 total (was 530) {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 56s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 94m 23s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 32s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}151m 17s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.server.namenode.TestCacheDirectives |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |
| JIRA Issue | HDFS-13846 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12937270/HDFS-13846.002.patch |
| Optional Tests |  dupname  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux e15cc814735e 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 91836f0 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_181 |
| findbugs | v3.1.0-RC1 |
| javac | https://builds.apache.org/job/PreCommit-HDFS-Build/24889/artifact/out/diff-compile-javac-hadoop-hdfs-project_hadoop-hdfs.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24889/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24889/testReport/ |
| Max. process+thread count | 3076 (vs. ulimit of 10000) |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24889/console |
| Powered by | Apache Yetus 0.9.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Great catch. Thanks for the patch. Here are some comments:
 # In {{BlockManagerSafeMode.decrementSafeBlockCount()}} the javadoc says it will, "decrement number of safe blocks if current block has fallen below minimal replication," but the conditional only tests for equality:
{code:java}
blockManager.countNodes(b).liveReplicas() == safe - 1{code}
Which one is wrong?

 # In {{BlockManagerSafeMode.decrementSafeBlockCount()}} I don't like the name {{safe}}. I see you copied it from another method, but it sounds like a boolean. Can you give it a name that's more obvious as to what it is?
 # In {{BlockManagerSafeMode.assertSafeModeIsLeftAtThreshold()}}, please add messages to the asserts.

Otherwise, looks good., Thanks [~templedf] for the comments! I fixed them in patch v003.

About the javadoc, BlockManagerSafeMode.decrementSafeBlockCount() method is invoked from BlockManager every time a block is removed, so it is enough to decrement the counter at the point when it is first less than the "safe" variable, and what it will do is exactly to decrement the counter when "current block has fallen below minimal replication"., I see.  That makes sense.  Might be nice to add a comment to explain that so that someone doesn't "fix" it later by making the conditional test {{<=}}.  Aside from that, LGTM.  Did you look at the deprecation warning that popped up?  The jenkins build is gone now, so I can't verify whether it was related to code you added., I modified the javadoc to say "it has just fallen below minimal replication", so it is more clear to the reader that it is only decremented once for a block. Do you have any other idea on how to state that?

The deprecation warning popped up because the Whitebox.setInternalState deprecated method is used in the new test, it is used to modify the extension field, which would come from configuration otherwise, note that all the other tests in this class sets that field like the new one.]