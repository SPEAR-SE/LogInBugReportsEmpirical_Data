[Testcase: testSecondaryNodePorts took 0.258 sec
        Caused an ERROR
Directory /test/dfs/namesecondary is in an inconsistent state: checkpoint directory does not exist or is not accessible.
org.apache.hadoop.hdfs.server.common.InconsistentFSStateException: Directory /test/dfs/namesecondary is in an inconsistent state: checkpoint directory does not exist or is not accessible.
        at org.apache.hadoop.hdfs.server.namenode.SecondaryNameNode$CheckpointStorage.recoverCreate(SecondaryNameNode.java:801)
        at org.apache.hadoop.hdfs.server.namenode.SecondaryNameNode.initialize(SecondaryNameNode.java:222)
        at org.apache.hadoop.hdfs.server.namenode.SecondaryNameNode.<init>(SecondaryNameNode.java:175)
        at org.apache.hadoop.hdfs.server.namenode.SecondaryNameNode.<init>(SecondaryNameNode.java:168)
        at org.apache.hadoop.hdfs.TestHDFSServerPorts.canStartSecondaryNode(TestHDFSServerPorts.java:224)
        at org.apache.hadoop.hdfs.TestHDFSServerPorts.testSecondaryNodePorts(TestHDFSServerPorts.java:350)
, The following tests are all failing on due to IOExceptions creating storage dirs:

    [junit] Test org.apache.hadoop.hdfs.TestHDFSServerPorts FAILED
    [junit] Test org.apache.hadoop.hdfs.server.blockmanagement.TestReplicationPolicy FAILED
    [junit] Test org.apache.hadoop.hdfs.server.namenode.TestCheckpoint FAILED
    [junit] Test org.apache.hadoop.hdfs.server.namenode.TestNNThroughputBenchmark FAILED
    [junit] Test org.apache.hadoop.hdfs.server.namenode.TestValidateConfigurationSettings FAILED
, Todd mentioned test.build.dir isn't getting set so MinIDFSCluster.getBaseDirectory is coming back as /test, triggered by switching common to maven. Alejandro is investigating. Thanks Alejandro!, See [this comment|https://issues.apache.org/jira/browse/HDFS-2240?focusedCommentId=13081475&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13081475] for more details., The issue is that the 'hadoop.tmp.dir' sys prop was not being set up for testcases, thus the checkpoint dir was being resolved to '/test/...' instead '$BUILD_TEST_DIR/test/..'. 

Still not sure how Mavenization affected this as HDFS is another build.xml or is some other change that came along at the same time.

Regardless, I've just fixed this in the HDFS-2096 'AH' patch.

Do we want to fix this pre-maven as well? (given that HDFS-2096 has been already +1)

Thanks.
, If HDFS-2096 is good to go and fixes this then let's commit it., I think the issue is that the "tests" jar didn't used to include the core-site.xml.

What's happening is:
common's core-site.xml has set:
{code}
<property>
  <name>hadoop.tmp.dir</name>
  <value>build/test</value>
  <final>true</final>
</property>
{code}

but then hdfs-default.xml sets:
{code}
<property>
  <name>dfs.namenode.name.dir</name>
  <value>file://${hadoop.tmp.dir}/dfs/name</value>
</property>
{code}

so, we're getting {{file://build/test/dfs/name}} there. Then, URI.getPath() on that returns /test/dfs/name.

I think the fix is to exclude core-site.xml from the -test jar assembly for common., These sets of tests seem to be fixed now.]