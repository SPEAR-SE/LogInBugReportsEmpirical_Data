[For {{ChecksumFileSystem}}, the rename operation succeeds iff both the file and checksum files are renamed successfully. However, in {{RawLocalFileSystem#rename}}, the employed Java rename API does not have a strongly defined behavior, which is largely platform-dependent. Specifically, the Javadoc states,
{quote}
* Many aspects of the behavior of this method are inherently
* platform-dependent: The rename operation might not be able to move a
* file from one filesystem to another, it might not be atomic, and it
* might not succeed if a file with the destination abstract pathname
* already exists.  The return value should always be checked to make sure
* that the rename operation was successful.
{quote}

It's good to wrap rename() logic here. +1 for the proposal., I'm wary of changing this behavior, especially in branch-2, because of backwards-compatibility concerns.  Even though the behavior differs from HDFS semantics, applications often have different expectations of the local file system.  There is a risk that downstream ecosystem components or user applications will start encountering errors, where previously the same calls to the local file system succeeded., Previously, I had a discussion with [~cnauroth] and [~stevel@apache.org] about changing rename behaviors and finally that JIRA was resolved with "Later" resolution. Please check the HADOOP-13082 for details. Even if we change behaviors it should be part of a bigger and more complex change because there are lot of differences between rename behaviors in different FS implementations. 
Based on that this should be closed either. What do you guys think?, [~boky01], I agree.  I'm generally reluctant to change behavior of the local file system classes in the 2.x line.  If it's helpful, we could consider possible changes for trunk/3.x and mark them as backwards-incompatible., Who can/should resolve this?

[~cnauroth],
I have a similar one. HADOOP-9819 also changes a rename behavior but it seems as a real bug.
Could you please check. I am confused whether we should do that change or not.]