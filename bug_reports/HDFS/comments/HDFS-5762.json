[{color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12622753/HDFS-5762.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5867//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5867//console

This message is automatically generated., Nice find. I'm a little annoyed that our read method doesn't follow POSIX (which says 0 length reads should return 0, not -1), but that ship has long since sailed. It's good to have a test that verifies this behavior.

Some review comments:

* WATERMELON print in the test
* In readWithoutBounceBuffer(ByteBuffer), instead of breaking on a 0-length read (which is valid for FileChannel), can we instead check for EOF and return before that?
{code}
      if (nRead <= 0) break;
{code}
* I think this could be clearer as:
{code}
    if (nRead <= 0) {
      if (dataPos == dataIn.size()) {
        return -1;
      }
    } else if (nRead > 0) {
      dataPos += nRead;
    }
    return nRead;
{code}
{code}
    if (nRead > 0) {
      dataPos += nRead;
    }
    if (nRead == 0 && dataPos == dataIn.size()) {
      return -1;
    }
    return nRead;
{code}
* Sprinkling some comments around the changes in BRL would be appreciated

These are all stylistic comments, so +1 once addressed., bq. WATERMELON print in the test

fixed

bq. In readWithoutBounceBuffer(ByteBuffer), instead of breaking on a 0-length read (which is valid for FileChannel), can we instead check for EOF and return before that?

would rather not, this is a rare case and I don't want more "ifs"

bq.I think this could be clearer as...

done.

bq. Sprinkling some comments around the changes in BRL would be appreciated

Added a comment about this (and JIRA number) in BlockReaderLocal.java
, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12623043/HDFS-5762.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5878//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5878//console

This message is automatically generated., committed to 2.4 and trunk.  Thanks, Andrew.

P.S. This bug was introduced by HDFS-5634, which was only committed to 2.4 and trunk., SUCCESS: Integrated in Hadoop-trunk-Commit #5003 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5003/])
HDFS-5762. BlockReaderLocal does not return -1 on EOF when doing zero-length reads (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1558526)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/BlockReader.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/BlockReaderLocal.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestBlockReaderLocal.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #454 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/454/])
HDFS-5762. BlockReaderLocal does not return -1 on EOF when doing zero-length reads (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1558526)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/BlockReader.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/BlockReaderLocal.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestBlockReaderLocal.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1671 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1671/])
HDFS-5762. BlockReaderLocal does not return -1 on EOF when doing zero-length reads (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1558526)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/BlockReader.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/BlockReaderLocal.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestBlockReaderLocal.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1646 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1646/])
HDFS-5762. BlockReaderLocal does not return -1 on EOF when doing zero-length reads (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1558526)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/BlockReader.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/BlockReaderLocal.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestBlockReaderLocal.java
]