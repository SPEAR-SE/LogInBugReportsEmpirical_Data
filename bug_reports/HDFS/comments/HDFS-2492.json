[The short term workaround is to document that regardless of how topology is determined, to make HDFS care about whether or not blocks are all on the same rack, you need to set this filename key.

The medium term workaround is to set the {{shouldCheckForEnoughRacks}} flag if the key is set or the switch mapping implementation class is anything other  than an instance of {{ScriptBasedMapping}}. That is somewhat inelegant.

Ideally the {{DNSToSwitchMapping}} interface should be extended so that it can declare whether there are multiple racks, and if there is more than one rack then the block mapper should go rack aware. Having knowledge of the expected number of racks could be of use for making other parts of the system multi-rack for better availability., an alternative to extending {{DNSToSwitchMapping}} would be to extend it with a {{MultiRackDNSToSwitchMapping}} interface that would have a boolean {{isMultiRack()}} condition to say whether or not the mapping was multirack; the script mapper would implement this and decide for itself whether or not a script existed and hence was multirack.

For backwards compatibility, any implementation that didn't implement the new interface would be viewed as some custom plug in and could be assumed to be multi-rack. why else would someone write a DNS mapper?
 , Seems like this should be a blocker given that it can cause blocks to be miss-replicated., I'm not sure it's quite so serious, as for the normal script based mapper it works; it looks for the script file and assumes the presence of the file means cross-rack.

It's only for people who have written their own DNS mapper that the problem will arise, and the problem isn't topology mapping, its that the replication logic that tries to ensure that replicas are spread across multiple racks.

The risk then is: if you have a custom DNS mapper, all your blocks may end up on the same rack, making you less resilient to rack failures. Your data is still spread across machines, and the actual placement code itself will work to place the blocks in multiple racks. The only issue is that at a switch or rack failure is slightly more likely to take all replicas of a block offline until the switch comes back up. 

It's easy to fix though, I will try and do something today.

Before then: who is running a custom DNS Mapper? Do you expect it to work unchanged on 0.23+, or is adding another method to an interface something you can handle? 
, first: document what we have in HADOOP-7772, HADOOP-7777 contains all the hadoop-common code to add a new predicate to the switch mappers (via a base class and a query method that handles mappers that are not subclasses of that); once that is in the change to block manager will be trivial.

reviews of that patch would be welcome, This is the patch to the block manager that uses HADOOP-7777 to state when a DNS mapper is explicitly single switch. 

It adds a public getter on the DatanodeManager to provide access to its DNS mapping; this could be downgraded to package-scope.

I'm not submitting this as a patch for automated review (yet) because of its dependencies., patch against trunk; only valid with HADOOP-7777 committed, patch is ready to be applied to trunk, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12504094/HDFS-2492-blockmanager.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.server.blockmanagement.TestBlockManager
                  org.apache.hadoop.fs.viewfs.TestViewFsHdfs
                  org.apache.hadoop.hdfs.server.datanode.TestBlockReport
                  org.apache.hadoop.hdfs.server.blockmanagement.TestBlocksWithNotEnoughRacks
                  org.apache.hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1609//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1609//console

This message is automatically generated., This patch gets the ! operator the right way round.

Without HADOOP-7878 it should pass all but one test; {{TestBlocksWithNotEnoughRacks}} needs that fix.

No new tests., resubmit now that HADOOP-7878 is in, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12505903/HDFS-2492-blockmanager.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 javadoc.  The javadoc tool appears to have generated 90 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 12 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.server.datanode.TestBlockReport
                  org.apache.hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure
                  org.apache.hadoop.hdfs.TestDfsOverAvroRpc
                  org.apache.hadoop.hdfs.server.namenode.TestBlockUnderConstruction
                  org.apache.hadoop.hdfs.server.namenode.TestDecommissioningStatus

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1688//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/1688//artifact/trunk/hadoop-hdfs-project/patchprocess/newPatchFindbugsWarningshadoop-hdfs-httpfs.html
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/1688//artifact/trunk/hadoop-hdfs-project/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1688//console

This message is automatically generated., waiting for the next common snapshot to submit, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12515086/HDFS-2492-blockmanager.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.server.common.TestDistributedUpgrade

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1884//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1884//console

This message is automatically generated., retrying to see if TestDistributedUpgrade works this time ; it seems brittle, resubmit, This is exactly the same patch as before, I am just trying to trigger jenkins to re-run this test as DistributedUpgrade is working happily locally on every test run, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12515926/HDFS-2492-blockmanager.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1900//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1900//console

This message is automatically generated., no tests because the tests for this are in hadoop common; the existing test suite are the regression test, and now that TestDistributedUpgrade is no longer (spuriously) failing, I plan to commit this unless anyone vetos it, Merge of HA branch obsoleted this patch; updated version., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12517085/HDFS-2492-blockmanager.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1950//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1950//console

This message is automatically generated., +1 for this; it's needed to complete the roll out of the (still optional) topology base class; all tests are working. , in sync w/ trunk, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12523415/HDFS-2492.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2305//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2305//console

This message is automatically generated., I'm +1 for this going in to trunk and 2.0; the test is that none of the minidfs tests fail. , cancelling until I tweak some (new) method names in the topo classes, holding off patch until HADOOP-8630 is done]