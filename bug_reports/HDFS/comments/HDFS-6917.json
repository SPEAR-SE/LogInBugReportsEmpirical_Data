[Please put the debug command in sorted order in the case statement., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12663808/HDFS-6917.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The test build failed in hadoop-hdfs-project/hadoop-hdfs 

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7734//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7734//console

This message is automatically generated., Is there any real benefit in hiding the debug option from usage?  If you don't want users to find it easily, probably better to not have it in the hdfs script at all and only call it via the full class.  (There are lots of these in Hadoop already)., Hi [~cmccabe], Thanks for the nice util, I ran the "verify" portion, and it works correctly for me. I agree with [~aw]'s comment above.

, One small comment,
{code}
$ hdfs debug -help
Usage: hdfs debug <command> [arguments]

verify [-meta <metadata-file>] [-block <block-file>]
recoverLease [-path <path>] [-retries <num-retries>]
{code}
can we add brief description about the individual command about what they do  in addition to their arguments, in the above help message?
Thanks.

, I did not see Allen's latest comment when I made my previous. Maybe we should make the "recoverLease" command a privileged one only accessible by admin?
, bq. Please put the debug command in sorted order in the case statement.

OK.

bq. Is there any real benefit in hiding the debug option from usage? If you don't want users to find it easily, probably better to not have it in the hdfs script at all and only call it via the full class. (There are lots of these in Hadoop already).

In a debugging scenario, it's really tedious to have to do all that typing... typing out full class names on an ssh connection that feels like it's over a 14.4 baud modem isn't fun.  I can change this if people feel very strongly, but I'd prefer to have it accessible via 'hdfs debug' if possible...

bq. [~yzhangal]: I did not see Allen's latest comment when I made my previous. Maybe we should make the "recoverLease" command a privileged one only accessible by admin?

The permission checking happens on the NameNode, so we shouldn't have to do it in the client.

bq. can we add brief description about the individual command about what they do in addition to their arguments, in the above help message?

You can get that by doing {{hdfs debug help verify}}.  I thought this was consistent with how the other commands work (you get detailed help by doing help <command>)... does it feel consistent?, HI [~cmccabe], thanks for addressing my comments. "hdfs debug" is fine to me. Thanks.
, * I made it so that if you run the commands with no arguments, you get a detailed help message about them.
* moved 'debug' command to sorted order in case statement, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12664213/HDFS-6917.002.patch
  against trunk revision .

    {color:red}-1 patch{color}.  Trunk compilation may be broken.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7751//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12664213/HDFS-6917.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The test build failed in hadoop-hdfs-project/hadoop-hdfs 

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7802//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7802//console

This message is automatically generated., Hey Colin, I like the idea of this a lot. These tools would have been really useful when I was debugging some cluster issues. Some review comments:

* Can clean up the imports in DebugAdmin, I can tell where it was copy pasted from ;)
* Missing some indentation in the super() calls in each command
* Need tests :)

VerifyBlock:
* Hardcoding 7 is okay, but slightly better would be {{2 + DataChecksum.HEADER_LEN}}.
* CHECKSUMS_PER_BUF seems kinda large. With 512B per checksum, we're allocating a 64MB data buffer. I figure 8MB would be enough to still get good disk perf.
* metaDidRead is unused

RecoverLease:
* Could print the current retry count when sleeping/looping
* I expected the default # of retries to be 0, so the command by default tries to do a single recoverLease, bq. Can clean up the imports in DebugAdmin, I can tell where it was copy pasted from 

ok

bq. Missing some indentation in the super() calls in each command

I wanted to keep it this way so that what was shown in the source file corresponded to what was displayed on the command-line.  At the same time, I didn't want to exceed 79 columns as per our coding standard.  You can see the dilemma here... if I use normal indentation, I either have to accept less than 79 columns for the command-line output, or exceed the limit for the source code.

bq. Need tests ï¿¼

Can we do this in a follow-up?

bq. Hardcoding 7 is okay, but slightly better would be 2 + DataChecksum.HEADER_LEN.

ok

bq. CHECKSUMS_PER_BUF seems kinda large. With 512B per checksum, we're allocating a 64MB data buffer. I figure 8MB would be enough to still get good disk perf.

ok

bq. metaDidRead is unused

removed

bq. Could print the current retry count when sleeping/looping

ok

bq. I expected the default # of retries to be 0, so the command by default tries to do a single recoverLease

ok, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670775/HDFS-6917.003.patch
  against trunk revision 3dc28e2.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The test build failed in hadoop-hdfs-project/hadoop-hdfs 

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8168//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8168//console

This message is automatically generated., I would like to see even just some basic tests here. We can defer the more tricky ones to a follow-on if you prefer, but even just calling the success cases has some value., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12678345/HDFS-6917.004.patch
  against trunk revision 81fe8e4.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.TestDFSClientRetries
org.apache.hadoop.hdfs.TestLeaseRecovery2

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8607//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8607//console

This message is automatically generated., +1 LGTM, thanks Colin!, Thanks for the review, Andrew.  The test wasn't that tough to add, I'm glad to we put it in.  Will commit shortly., FAILURE: Integrated in Hadoop-trunk-Commit #6412 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6412/])
HDFS-6917. Add an hdfs debug command to validate blocks, call recoverlease, etc. (cmccabe) (cmccabe: rev 7b026c50f1be399987d23e06b4ecfbffc51dc7b5)
* hadoop-hdfs-project/hadoop-hdfs/src/main/bin/hdfs
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/tools/TestDebugAdmin.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DebugAdmin.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk #730 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/730/])
HDFS-6917. Add an hdfs debug command to validate blocks, call recoverlease, etc. (cmccabe) (cmccabe: rev 7b026c50f1be399987d23e06b4ecfbffc51dc7b5)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/tools/TestDebugAdmin.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DebugAdmin.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/bin/hdfs
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1919 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1919/])
HDFS-6917. Add an hdfs debug command to validate blocks, call recoverlease, etc. (cmccabe) (cmccabe: rev 7b026c50f1be399987d23e06b4ecfbffc51dc7b5)
* hadoop-hdfs-project/hadoop-hdfs/src/main/bin/hdfs
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/tools/TestDebugAdmin.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DebugAdmin.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1944 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1944/])
HDFS-6917. Add an hdfs debug command to validate blocks, call recoverlease, etc. (cmccabe) (cmccabe: rev 7b026c50f1be399987d23e06b4ecfbffc51dc7b5)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DebugAdmin.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/bin/hdfs
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/tools/TestDebugAdmin.java
, [~cmccabe], these commands need documentation changes as well, right? Is it in another jira?, Thanks for the reminder.  I filed HDFS-7326 to add documentation for HDFS debug commands., I just committed HDFS-8039, which is a follow-on patch to fix one of the tests on Windows.]