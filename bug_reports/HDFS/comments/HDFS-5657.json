[Here is how the race happens:

{noformat}
  /** Invoked by AsynDataService to write back to HDFS */
  void executeWriteBack() {
    Preconditions.checkState(asyncStatus,
        "The openFileCtx has false async status");  <== check failed here
    try {
      while (activeState) {
        WriteCtx toWrite = offerNextToWrite();
        if (toWrite != null) {
          // Do the write
          doSingleWrite(toWrite);          <=== a synchronized method, which sets asyncStatus to false
          updateLastAccessTime();
        } else {
          break;
        }
      }
      
      if (!activeState && LOG.isDebugEnabled()) {
        LOG.debug("The openFileCtx is not active anymore, fileId: "
            + latestAttr.getFileId());
      }
    } finally {
      // make sure we reset asyncStatus to false
      asyncStatus = false;         <== before this line is executed, OpenFileCtx.checkAndStartWrite sets 
                                        asyncStatus to true and invokes a task. When that task calls 
                                        executeWriteBack() again the condition check failed.
    }
  }
{noformat}, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618341/HDFS-5657.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs-nfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5700//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/5700//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-hdfs-nfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5700//console

This message is automatically generated., Uploaded a new patch. The basic idea is to make sure there is "asyncStatus = false" is only set in final clause and with the object lock acquired., The solution looks good to me. Some comments:
# The writeAsync method can be deleted instead of commented out.
{code}
+/*  void writeAsync(OpenFileCtx openFileCtx) {
     if (LOG.isDebugEnabled()) {
       LOG.debug("Scheduling write back task for fileId: "
           + openFileCtx.getLatestAttr().getFileId());
@@ -103,7 +103,7 @@ void writeAsync(OpenFileCtx openFileCtx) {
     WriteBackTask wbTask = new WriteBackTask(openFileCtx);
     execute(wbTask);
   }
-
+*/
{code}
# The following section is very similar with the checkAndStartWrite method. You may want to modify checkAndStartWrite and try to reuse it here.
{code}
+        if (!pendingWrites.isEmpty()
+            && pendingWrites.firstKey().getMin() == nextOffset.get()) {
+          LOG.info("Race happened: a sequential write was just added."
+              + " Start another async task.");
+          asyncStatus = true;
+          try {
+            ads.execute(new AsyncDataService.WriteBackTask(this, ads));
+          } catch (Throwable t) {
+            activeState = false;
+            // Can't set asyncStatus to false since task might be in queue
+            LOG.error("Can't reinvoke async task, fileId=" + fileId, t);
+          }
+        }
{code}, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618485/HDFS-5657.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs-nfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5707//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5707//console

This message is automatically generated., [~jingzhao], as you pointed out offline, it may be an easier fix to just set a startOffset each time starting an async task, and when one async task finishes, it can check the startOffset to know whether a race happened.

Uploaded a new patch to implement this idea.  , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12618948/HDFS-5657.new.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:red}-1 eclipse:eclipse{color}.  The patch failed to build with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs-nfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5732//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/5732//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5732//console

This message is automatically generated., The patch looks good to me. One nit is that startOffset can be declared as final. +1 after addressing the comment.
{code}
long startOffset = asyncWriteBackStartOffset;
{code}, Uploaded a new patch to address Jing's last comment.
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12619147/HDFS-5657.new.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs-nfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5745//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5745//console

This message is automatically generated., It seems hard to add a valid unit test to validate the fix. The problem was found when we tested file uploading on VMs. Ran the same tests a few time, the problem was not reproduced., Thank you, Jing, for reviewing the patch and proposing the new solution.
I've committed the patch., SUCCESS: Integrated in Hadoop-trunk-Commit #4901 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4901/])
HDFS-5657. race condition causes writeback state error in NFS gateway. Contributed by Brandon Li (brandonli: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1551691)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/OpenFileCtx.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #425 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/425/])
HDFS-5657. race condition causes writeback state error in NFS gateway. Contributed by Brandon Li (brandonli: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1551691)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/OpenFileCtx.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1616 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1616/])
HDFS-5657. race condition causes writeback state error in NFS gateway. Contributed by Brandon Li (brandonli: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1551691)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/OpenFileCtx.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1642 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1642/])
HDFS-5657. race condition causes writeback state error in NFS gateway. Contributed by Brandon Li (brandonli: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1551691)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/OpenFileCtx.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
]