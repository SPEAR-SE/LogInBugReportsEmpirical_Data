[Seems like it might be enough to just re-initialize the NameCache in {{FSDirectory.reset()}}, and then ensure that after the image load is complete in the 2NN that we call {{NameCache.initialized()}}., Todd,

Are you working on a patch for this?  It seems critical enough that I really would like to get a patch in for 0.23.5.  But I also don't want to start working on something if you are already doing it., Hi Robert. Nope, I haven't started working on it, so feel free to pick it up. Thanks, The patch I am attaching does not include any tests yet.  I wanted to see if the direction I was going in seemed OK.  I changed FSDirectory.reset to also reset the NameCache and mark the directory as not ready.

Then in the SecondaryNameNode after loading the new image it informs the FSDirectory that the image was loaded.

I am going to run some manual tests and then see if I can write some unit tests for it. , Seems reasonable to me. I agree some tests would be nice., Seems fine to me. Alternatively we could just make the 2NN completely disable the NameCache. I don't think most folks are as concerned with their checkpointing time as they are concerned with their NN startup time. Either way is certainly fine though., Ya I thought about disabling the NameCache, because it is not really needed.  If you think that would be less of an impact I am happy to switch over to that instead. , It will probably be a little easier to implement, but I don't feel strongly about it. In ordinary operation a long-running 2NN doesn't actually load the fsimage every time it performs a checkpoint, so having the NameCache enabled won't actually do anything after the initial fsimage load., bq. Ya I thought about disabling the NameCache, because it is not really needed. If you think that would be less of an impact I am happy to switch over to that instead.
NameCache saves the memory used for repeated names in the namespace. Given most of the folks use same JVM heap sizes for primary and secondary, the optimizations from NameCache may be necessary. Secondary does not have block map related data and hence uses less java heap than primary. Despite this leaving it as is probably a good idea., This patch fixes an NPE that was found by the existing unit tests and adds in some more tests to validate that the changes are working.  I also manually brought up a cluster and saw that the NameCache moved out of initializing., +1 The patch looks good to me. This is minor, but you could add the {{VisibleForTesting}} annotation for the test-only method., Adds in requested annotation., +1 for the patch. Minor cmments:
# Remove commented line: // cond.signalAll();
# empty line in TestFSDirectory.java
, Updated to address Suresh's comments., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12553514/HDFS-4182.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3501//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3501//console

This message is automatically generated., Jenkins came back with a +1 and with a +1 for Suresh and a +1 for Kihwal, I will check this in., Integrated in Hadoop-trunk-Commit #3018 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3018/])
    HDFS-4182. SecondaryNameNode leaks NameCache entries (bobby) (Revision 1409311)

     Result = SUCCESS
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1409311
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameCache.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameCache.java
, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12553525/HDFS-4182.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3502//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3502//console

This message is automatically generated., The patch is in for trunk, and branch-2. I am working on a patch for branch-0.23 because there were merge conflicts. It looks like the leak exists there too., I am attaching the upmerged patch for review.  I am still running the unit tests and manual tests to be sure that the leak is plugged., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12553558/HDFS-4182-branch-0.23.txt
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3504//console

This message is automatically generated., +1 I think it looks ok relative to the trunk patch.  It seems like the image load notification shouldn't have to be duplicated in different places in the NN and 2NN, ie. pushed down lower, but given the current design I don't think that's possible., All of the unit tests for branch-0.23 passed, so with Daryn's +1 I'll check this into branch-0.23 too., I put this into trunk, branch-2, and branch-0.23, Integrated in Hadoop-Yarn-trunk #37 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/37/])
    HDFS-4182. SecondaryNameNode leaks NameCache entries (bobby) (Revision 1409311)

     Result = SUCCESS
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1409311
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameCache.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameCache.java
, Integrated in Hadoop-Hdfs-0.23-Build #436 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/436/])
    HDFS-4182. SecondaryNameNode leaks NameCache entries (bobby) (Revision 1409479)

     Result = SUCCESS
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1409479
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameCache.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameCache.java
, Integrated in Hadoop-Hdfs-trunk #1227 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1227/])
    HDFS-4182. SecondaryNameNode leaks NameCache entries (bobby) (Revision 1409311)

     Result = FAILURE
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1409311
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameCache.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameCache.java
, Integrated in Hadoop-Mapreduce-trunk #1258 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1258/])
    HDFS-4182. SecondaryNameNode leaks NameCache entries (bobby) (Revision 1409311)

     Result = FAILURE
bobby : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1409311
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameCache.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameCache.java
]