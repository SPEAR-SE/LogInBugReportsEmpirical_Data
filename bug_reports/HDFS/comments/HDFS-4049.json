[Attached patch should fix the issue. In my test, it dropped the test case from average hflush latency of 40ms to <2ms, when running with 3 DNs., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12549107/hdfs-4049.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3330//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3330//console

This message is automatically generated., Looks good.  It makes sense to use only one buffer for this.

It looks like Java doesn't expose {{writev}} in this case, which is what we would need to write multiple buffers as one packet with {{TCP_NODELAY}}.  (Although there is a multi-buffer write method in {{FileChannel}}, I didn't find one for {{DataOutputStream}}).

{code}
@@ -100,12 +102,17 @@ public void run() {
         }
       } catch (Throwable t) {
         thrown.compareAndSet(null, t);
+      } finally {
+        
       }
     }
{code}

Extra code?

Does it make sense to add a test for the numDataNodes = 1, repl = 1 case?, Looks good.  In the following lines, there is some repetition of the length calculations:

{code}
+    curPacketBuf.position(PacketHeader.PKT_LENGTHS_LEN + headerLen);
+    curPacketBuf.limit(PacketHeader.PKT_LENGTHS_LEN + headerLen + checksumsLen);

+    curPacketBuf.position(
+        PacketHeader.PKT_LENGTHS_LEN + headerLen + checksumsLen);
+    curPacketBuf.limit(
+        PacketHeader.PKT_LENGTHS_LEN + headerLen + checksumsLen + dataLen);

+    curPacketBuf.limit(
+        PacketHeader.PKT_LENGTHS_LEN + headerLen + checksumsLen + dataLen);
{code}

The method might read/maintain better if those calculations were captured in variables, like lenThroughHeader, lenThroughChecksums, and lenThroughData.
, Thanks for the reviews. Addressed both the suggestions above. I also added a new unit test specifically for PacketReceiver in isolation, since some of the buffer handling is tricky., +1

Thanks, Todd.  The additional comments and tests are very helpful too.
, BTW, the latency readout in the benchmark currently isn't very useful since SampleQuantiles doesn't have a toString(). I hacked it locally for the purposes of running the test, and just filed HADOOP-8929 to actually get that into the code., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12549185/hdfs-4049.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3333//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3333//console

This message is automatically generated., Patch looks really good to me. A few little comments on the test code. +1 once these are addressed:

# In TestMultiThreadedHflush, the repl 1 test is in fact also using repl 3:
{code}
+  public void testMultipleHflushersRepl1() throws Exception {
+    doTestMultipleHflushers(3);
+  }
+  
+  @Test
+  public void testMultipleHflushersRepl3() throws Exception {
+    doTestMultipleHflushers(3);
+  }
{code}
# I recommend changing the formal parameter name to "replication" or "numDatanodes" instead of "i" in the following:
{code}
+  private void doTestMultipleHflushers(int i) throws Exception {
{code}
# Not changed by your patch, but I think that the constants TestMultiThreadedHflush.numBlocks and TestMultiThreadedHflush.fileSize are unused. Mind removing them?

In addition to the code review, I also tested the patch on a 4 node physical cluster and confirmed it worked as expected.

Prior to HDFS-3721:

{noformat}
Finished in 58757ms
Latency quantiles (in microseconds):
50.00 %ile +/- 5.00%: 847
75.00 %ile +/- 2.50%: 954
90.00 %ile +/- 1.00%: 1074
95.00 %ile +/- 0.50%: 1203
99.00 %ile +/- 0.10%: 2073
{noformat}

Post HDFS-3721:

{noformat}
Finished in 1032220ms
Latency quantiles (in microseconds):
50.00 %ile +/- 5.00%: 1756
75.00 %ile +/- 2.50%: 41004
90.00 %ile +/- 1.00%: 41231
95.00 %ile +/- 0.50%: 41400
99.00 %ile +/- 0.10%: 42684
{noformat}

With the latest patch included here:

{noformat}
Finished in 58531ms
Latency quantiles (in microseconds):
50.00 %ile +/- 5.00%: 864
75.00 %ile +/- 2.50%: 970
90.00 %ile +/- 1.00%: 1096
95.00 %ile +/- 0.50%: 1237
99.00 %ile +/- 0.10%: 2131
{noformat}, Thanks for the review. Good catches above. New patch addresses all., +1 pending Jenkins.

Thanks a lot, Todd., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12549209/hdfs-4049.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.web.TestWebHDFS

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3335//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3335//console

This message is automatically generated., The failed test is due to HDFS-3948 (unrelated).

Will commit this momentarily. Thanks for the reviews, Chris, Colin and Aaron., Committed to branch-2 and trunk., Integrated in Hadoop-trunk-Commit #2862 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/2862/])
    HDFS-4049. Fix hflush performance regression due to nagling delays. Contributed by Todd Lipcon. (Revision 1398591)

     Result = SUCCESS
todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1398591
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestMultiThreadedHflush.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/datatransfer
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/datatransfer/TestPacketReceiver.java
, Integrated in Hadoop-Yarn-trunk #5 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/5/])
    HDFS-4049. Fix hflush performance regression due to nagling delays. Contributed by Todd Lipcon. (Revision 1398591)

     Result = FAILURE
todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1398591
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestMultiThreadedHflush.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/datatransfer
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/datatransfer/TestPacketReceiver.java
, Integrated in Hadoop-Mapreduce-trunk #1228 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1228/])
    HDFS-4049. Fix hflush performance regression due to nagling delays. Contributed by Todd Lipcon. (Revision 1398591)

     Result = FAILURE
todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1398591
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/PacketReceiver.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestMultiThreadedHflush.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/datatransfer
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/datatransfer/TestPacketReceiver.java
]