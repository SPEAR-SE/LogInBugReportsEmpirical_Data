[This problem is visible by running {{TestGlobPaths#pTestEscape}} on Windows.  On Windows, the backslash will get converted to forward slash before {{GlobExpander}} interprets it.  This problem was not caught on branch-1-win, because the test is commented out on that branch with a comment pointing to HADOOP-1995.  That jira contains a lot of discussion on this topic, so it would be good for anyone participating on this jira to review that one first.

This is particularly awkward, because {{FileSystem#globStatus}} is a public API accepting a {{Path}}.  We can't change the normalization behavior of {{Path}} without breaking a lot of things.  We can't change the API to accept a different kind of object (i.e. a new RawGlobPath class) without breaking backwards compatibility.  I can think of a few options:

# Accept this as a known limitation on Windows and skip running the failing test on Windows.  This is the conclusion of HADOOP-1995, so refer to that jira for the full justification.  This may in fact be the only viable short-term solution.
# Change {{Path}} to maintain a separate raw, unescaped copy of the path at construction time.  Change {{FileSystem#globStatus}} to use this raw copy of the path and allow all other clients of {{Path}} to continue using the escaped version.  The negative consequence is that this would effectively double the memory consumption of {{Path}} instances.
# Add a new overload of {{FileSystem#globStatus}} that accepts something different from {{Path}}.  Deprecate the old one and gradually phase it out.
, HADOOP-8139 is another JIRA that had a lot of discussion on it about this subject.  I believe that it was never resolved specifically because of the windows issue.  You probably want to read through the discussion there as well. , I tend to agree 1) is the only feasible solution in short term.

Is it possible to only use "file:///path/foo/a/b/c" format for local path? So we could effectively get rid of forward slash on Windows. I understand this breaks backward compatibility. But we will have a unified format for paths on different OS's. Users may be less confused of which format to use. Any thoughts on this?, Chris, I attached my patch in HDFS-5090 to simply disable the unit test case., +1 for the patch.  I'll commit this., I am also fine with Chris’ proposal #1 from above. Changing path behavior would indeed break many downstream projects. The fact that java.io.File converts all paths to backslash-paths on Windows additionally complicates things. 

I also did investigation on Windows paths in Hadoop a while back, and this issue came up. On top of the above 3 proposals, we have 2 other options:
4. Replace backslash with a forward slash only if the backslash is not followed by a meta-character ('*', '?', etc.). This can be achieved through a negative look ahead regular expression (regex = "\\\\(?!(\\*|\\?))"). 
5. Use '^' as an escape character on the Windows platform
 - On the negative side, this model would push the platform differences to platforms built on top of Hadoop instead of keeping them consistent. Hadoop documentation broadly available could still get someone to make a mistake described in HADOOP-8139. Just adding this for completeness, I don’t think we want to go this route.

#3 seems like a nice long term solution. We would have to do a deeper dive on what would it take to do it/prototyping, but seems like a good proposal from high-level. 
, I've committed this to trunk, branch-2, and branch-2.1-beta.  Thank you, Chuan., SUCCESS: Integrated in Hadoop-trunk-Commit #4266 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4266/])
HDFS-4632. globStatus using backslash for escaping does not work on Windows. Contributed by Chuan Liu. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1514168)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #302 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/302/])
HDFS-4632. globStatus using backslash for escaping does not work on Windows. Contributed by Chuan Liu. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1514168)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1492 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1492/])
HDFS-4632. globStatus using backslash for escaping does not work on Windows. Contributed by Chuan Liu. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1514168)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1519 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1519/])
HDFS-4632. globStatus using backslash for escaping does not work on Windows. Contributed by Chuan Liu. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1514168)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestGlobPaths.java
]