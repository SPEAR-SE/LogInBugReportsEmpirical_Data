[As so many people are facing this issue, it's better have one README( supporting patches) for win32 compilation., Following changes are required to make compilation successful
1.	hadoop-hdfs-project\hadoop-hdfs\src\main\native\libhdfs\os\windows\thread.c
Line 31: Add {color:red}WINAPI{color} to declaration
{code}31: static DWORD WINAPI runThread(LPVOID toRun) { {code}

2.	hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread_local_storage.c
Comment  lines 99 and 105
{code}
99: //#pragma comment(linker, "/INCLUDE:_tls_used")
105://#pragma comment(linker, "/INCLUDE:pTlsCallback")
{code}
, This a temporary patch to apply and make Win32 compilation successful.
This patch is not to be merged with trunk code.

Need to come up with better solution to make native code work on both 64bit and 32bit, There are many changes that are required during the process of win32 compilation. It would better if a minor release of hadoop is done with all these changes, instead of patches & README updates.

I am still in the process of compilation with many modules pending. Once I am done, I will be able to provide the list
of changes I made, if required.
, HDFS-7774-001.patch makes code compatible with Win32 TLS conventions.
In Win32 all TLS symbols are prefixed with underscore

So fix can be done as below

{code}
#ifdef _WIN64
#pragma comment(linker, "/INCLUDE:_tls_used")
#else
#pragma comment(linker, "/INCLUDE:__tls_used")
#endif

#ifdef _WIN64
#pragma comment(linker, "/INCLUDE:pTlsCallback")
#else
#pragma comment(linker, "/INCLUDE:_pTlsCallback")
#endif
{code}

I was not able to find a simple way to parametrize cmake build generator "Visual Studio 10 Win64" in hadoop-hdfs-project/hadoop-hdfs/pom.xml for Win32. One option is to add a new profile native-win32.
Till then user needs to modify pom.xml manually.


[~cnauroth], please review this patch. Let me know if you have any suggestions to parametrize win32 build. 
If no good option for 2.7 release, we can ask user to modify pom.xml manually. This can be added in readme.

How to build on win32 using this patch:
- Apply this patch
- Edit hadoop-hdfs-project/hadoop-hdfs/pom.xml  search and modify {{Visual Studio 10 Win64}} to {{Visual Studio 10}}
- Set env varibale Platform=Win32
- mvn install -Pnative-win -DskipTests, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700167/HDFS-7774-001.patch
  against trunk revision fe7a302.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9642//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9642//console

This message is automatically generated., Kiran, thank you for this patch.  It looks pretty good.

For parameterizing the CMake generator, I recommend using an ant condition to evaluate a generator property based on the value of the {{PLATFORM}} environment variable.  Then, that generator property can be used in place of the hard-coded string in the cmake call.  Something like this ought to work:

{code}
                    <condition property="generator" value="Visual Studio 10" else="Visual Studio 10 Win64">
                      <equals arg1="Win32" arg2="${env.PLATFORM}" />
	            </condition>
                    <mkdir dir="${project.build.directory}/native"/>
                    <exec executable="cmake" dir="${project.build.directory}/native"
                        failonerror="true">
			<arg line="${basedir}/src/ -DGENERATED_JAVAH=${project.build.directory}/native/javah -DJVM_ARCH_DATA_MODEL=${sun.arch.data.model} -DREQUIRE_LIBWEBHDFS=${require.libwebhdfs} -DREQUIRE_FUSE=${require.fuse} -G '${generator}'"/>
{code}

Are the libhdfs tests passing for you with a 32-bit build?  I consistently get {{OutOfMemoryError}} while trying to create a thread:

{code}
     [exec] nmdCreate: Builder#build error:
     [exec] java.lang.OutOfMemoryError: unable to create new native thread
     [exec]     at java.lang.Thread.start0(Native Method)
     [exec]     at java.lang.Thread.start(Thread.java:714)
     [exec]     at io.netty.util.concurrent.SingleThreadEventExecutor.shutdownGracefully(SingleThreadEventExecutor.java:557)
     [exec]     at io.netty.util.concurrent.MultithreadEventExecutorGroup.shutdownGracefully(MultithreadEventExecutorGroup.java:146)
     [exec]     at io.netty.util.concurrent.AbstractEventExecutorGroup.shutdownGracefully(AbstractEventExecutorGroup.java:69)
     [exec]     at org.apache.hadoop.hdfs.server.datanode.web.DatanodeHttpServer.close(DatanodeHttpServer.java:165)
     [exec]     at org.apache.hadoop.hdfs.server.datanode.DataNode.shutdown(DataNode.java:1632)
     [exec]     at org.apache.hadoop.hdfs.MiniDFSCluster.shutdownDataNodes(MiniDFSCluster.java:1740)
     [exec]     at org.apache.hadoop.hdfs.MiniDFSCluster.shutdown(MiniDFSCluster.java:1715)
     [exec]     at org.apache.hadoop.hdfs.MiniDFSCluster.shutdown(MiniDFSCluster.java:1699)
     [exec]     at org.apache.hadoop.hdfs.MiniDFSCluster.initMiniDFSCluster(MiniDFSCluster.java:836)
     [exec]     at org.apache.hadoop.hdfs.MiniDFSCluster.<init>(MiniDFSCluster.java:466)
     [exec]     at org.apache.hadoop.hdfs.MiniDFSCluster$Builder.build(MiniDFSCluster.java:425)
     [exec] TEST_ERROR: failed on ..\..\src\main\native\libhdfs\test_libhdfs_threaded.c:330 (errno: 12): got NULL from tlhCluster
{code}
, Thanks for the suggestion [~cnauroth]. Check the new patch, I have added ant condition to make cmake generator parametrized.

Tests passed for me. I had set {{-Xmx512M}}
I do not have access to pastebin from workplace to post full test logs.
Pasting some test output snippets here.

{code}
>hadoop-hdfs-project\hadoop-hdfs>mvn test -Dtest=test_libhdfs_threaded
.
.
main:
     [echo] Running test_libhdfs_threaded
.
.
.
     [exec] testHdfsOperations(threadIdx=0): starting
     [exec] testHdfsOperations(threadIdx=1): starting
     [exec] testHdfsOperations(threadIdx=2): starting.
.
.
.
     [exec] 2015-02-26 10:54:58,772 INFO  mortbay.log (Slf4jLog.java:info(67)) - Stopped SelectChannelConnector@127.0.0.1:0
     [exec] 2015-02-26 10:54:58,773 INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:stop(210)) - Stopping DataNode metrics system...
     [exec] 2015-02-26 10:54:58,774 INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:stop(216)) - DataNode metrics system stopped.
     [exec] 2015-02-26 10:54:58,774 INFO  impl.MetricsSystemImpl (MetricsSystemImpl.java:shutdown(600)) - DataNode metrics system shutdown complete.
     [echo] Finished test_native_mini_dfs
[INFO] Executed tasks
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1:42.793s
[INFO] Finished at: Thu Feb 26 10:54:59 GMT+05:30 2015
[INFO] Final Memory: 35M/494M
[INFO] ------------------------------------------------------------------------
{code}
 , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700994/HDFS-7774-002.patch
  against trunk revision 71385f9.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.TestFileTruncate

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9671//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9671//console

This message is automatically generated., I ran the failed test case {{ org.apache.hadoop.hdfs.server.namenode.TestFileTruncate.testTruncateWithDataNodesRestart}} locally. Its passing.

Testcase failure is not related to changes in the patch., +1 for the patch.  I committed this to trunk and branch-2.

There was a minor formatting issue in pom.xml indenting by 4 spaces instead of the standard 2.  I corrected that before committing.

Thanks for the tip about heap sizing.  I had forgotten that I had set {{MAVEN_OPTS=-Xmx1G}}, so I suspect the Maven processes were taking RAM on my VM that should have been dedicated to the test process.  After I set {{MAVEN_OPTS=-Xmx512M}} and {{LIBHDFS_OPTS=-Xmx512M}}, I got a clean test run.

bq. -1 tests included. The patch doesn't appear to include any new or modified tests.

There are no new tests required, because this patch was enabling a new build target., Thank you, Kiran, for another patch., FAILURE: Integrated in Hadoop-trunk-Commit #7212 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7212/])
HDFS-7774. Unresolved symbols error while compiling HDFS on Windows 7/32 bit. Contributed by Kiran Kumar M R. (cnauroth: rev c6d5b37a1c4c3acc190f5f4e27109594efb7be8c)
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread_local_storage.c
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/pom.xml
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread.c
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #117 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/117/])
HDFS-7774. Unresolved symbols error while compiling HDFS on Windows 7/32 bit. Contributed by Kiran Kumar M R. (cnauroth: rev c6d5b37a1c4c3acc190f5f4e27109594efb7be8c)
* hadoop-hdfs-project/hadoop-hdfs/pom.xml
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread_local_storage.c
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread.c
, SUCCESS: Integrated in Hadoop-Yarn-trunk #851 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/851/])
HDFS-7774. Unresolved symbols error while compiling HDFS on Windows 7/32 bit. Contributed by Kiran Kumar M R. (cnauroth: rev c6d5b37a1c4c3acc190f5f4e27109594efb7be8c)
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread_local_storage.c
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread.c
* hadoop-hdfs-project/hadoop-hdfs/pom.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2049 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2049/])
HDFS-7774. Unresolved symbols error while compiling HDFS on Windows 7/32 bit. Contributed by Kiran Kumar M R. (cnauroth: rev c6d5b37a1c4c3acc190f5f4e27109594efb7be8c)
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread_local_storage.c
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread.c
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/pom.xml
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #108 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/108/])
HDFS-7774. Unresolved symbols error while compiling HDFS on Windows 7/32 bit. Contributed by Kiran Kumar M R. (cnauroth: rev c6d5b37a1c4c3acc190f5f4e27109594efb7be8c)
* hadoop-hdfs-project/hadoop-hdfs/pom.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread.c
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread_local_storage.c
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #117 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/117/])
HDFS-7774. Unresolved symbols error while compiling HDFS on Windows 7/32 bit. Contributed by Kiran Kumar M R. (cnauroth: rev c6d5b37a1c4c3acc190f5f4e27109594efb7be8c)
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread.c
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread_local_storage.c
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/pom.xml
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2067 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2067/])
HDFS-7774. Unresolved symbols error while compiling HDFS on Windows 7/32 bit. Contributed by Kiran Kumar M R. (cnauroth: rev c6d5b37a1c4c3acc190f5f4e27109594efb7be8c)
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread_local_storage.c
* hadoop-hdfs-project/hadoop-hdfs/src/main/native/libhdfs/os/windows/thread.c
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/pom.xml
, Thanks for the review and committing the patch Chris.]