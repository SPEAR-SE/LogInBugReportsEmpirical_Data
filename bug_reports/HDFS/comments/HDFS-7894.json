[In {{FSNamesystem#getRollingUpgradeStatus()}}, we can have it update the rollback image state like {{queryRollingUpgrade()}} does., [~kihwal] Thanks for reporting this issue... Attached the patch, kindly review.., It won't work because of {{checkSuperuserPrivilege()}} and {{checkOperation()}}.
What do you think about something like following? I didn't try to compile or test this code. Adding a test case would be nice, if possible.
{code:java}
    if (!isRollingUpgrade()) {
      return null; // this is the common case.
    }
    readLock();
    // check again after acquiring the read lock.
    RollingUpgradeInfo upgradeInfo = getRollingUpgradeInfo();
    if (upgradeInfo == null) {
      return null;
    }
    try {
      boolean hasRollbackImage = this.getFSImage().hasRollbackFSImage();
      upgradeInfo.setCreatedRollbackImages(hasRollbackImage);
    } finally {
      readUnlock();
    }
    return new RollingUpgradeInfo.Bean(upgradeInfo);
{code}, Thanks a lot for your pointers,,Addressed your comments..:), I think you have to put the jira state to "patch available" for the precommit jenkins job to run against it., Thought of doing Once after your review..:)., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12703295/HDFS-7894-002.patch
  against trunk revision 82db334.

    {color:red}-1 patch{color}.  Trunk compilation may be broken.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9808//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12703295/HDFS-7894-002.patch
  against trunk revision d39bc90.

    {color:red}-1 patch{color}.  Trunk compilation may be broken.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9818//console

This message is automatically generated., I will re-kick the build once it is fixed., Thanks!!!, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12703295/HDFS-7894-002.patch
  against trunk revision 64eb068.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.TestFileTruncate

                                      The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.server.namenode.ha.TestHAAppend

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9825//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9825//console

This message is automatically generated., Test case failures are un-related to this patch.., [~brahmareddy] It will be nice if you post a manual test result showing the jmx/webUI works correctly with the patch., sure, I will update soon..thanks!!, Patch looks good.
Few nits:
below part also should be inside try block. otherwise lock will never be released.
{code}+    // check again after acquiring the read lock.
     RollingUpgradeInfo upgradeInfo = getRollingUpgradeInfo();
-    if (upgradeInfo != null) {
-      return new RollingUpgradeInfo.Bean(upgradeInfo);
+    if (upgradeInfo == null) {
+      return null;
     }{code}

2.
{code}+      boolean hasRollbackImage = this.getFSImage().hasRollbackFSImage();
+      upgradeInfo.setCreatedRollbackImages(hasRollbackImage);{code}
Here,  {{this.getFSImage().hasRollbackFSImage();}} will check for the image file presence on disk everytime query has passed. Actually this is required only if the flag is not set. Once its set, it will not be reset anyway until rollback/finalize.
It could be like 
{code}+      boolean hasRollbackImage = this.getFSImage().hasRollbackFSImage();
+      upgradeInfo.setCreatedRollbackImages(hasRollbackImage);{code}

IMO below changes would do needful.
{code}   @Override  // NameNodeMXBean
   public RollingUpgradeInfo.Bean getRollingUpgradeStatus() {
+    if (!isRollingUpgrade()) {
+      return null;
+    }
     RollingUpgradeInfo upgradeInfo = getRollingUpgradeInfo();
-    if (upgradeInfo != null) {
+    if (upgradeInfo.createdRollbackImages()) {
       return new RollingUpgradeInfo.Bean(upgradeInfo);
     }
-    return null;
+    readLock();
+    try {
+      // check again after acquiring the read lock.
+      upgradeInfo = getRollingUpgradeInfo();
+      if (upgradeInfo == null) {
+        return null;
+      }
+      if (!upgradeInfo.createdRollbackImages()) {
+        boolean hasRollbackImage = this.getFSImage().hasRollbackFSImage();
+        upgradeInfo.setCreatedRollbackImages(hasRollbackImage);
+      }
+    } catch (IOException ioe) {
+      LOG.warn("Encountered exception setting Rollback Image", ioe);
+    } finally {
+      readUnlock();
+    }
+    return new RollingUpgradeInfo.Bean(upgradeInfo);
   }{code}

Agree?, Thanks for taking a look into this issue,Yes, I will agree with you..Updated the patch,Please review the same.., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12705575/HDFS-7894-003.patch
  against trunk revision 93d0f4a.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.blockmanagement.TestDatanodeManager
                  org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery
                  org.apache.hadoop.tracing.TestTracing
                  org.apache.hadoop.hdfs.server.namenode.ha.TestRetryCacheWithHA

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9978//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9978//console

This message is automatically generated., Testcase failures are unrelated to this jira., +1. The patch looks good. We've been running with this for a while., Committed from trunk to branch-2.7. Thank you gentlemen for fixing and reviewing this., FAILURE: Integrated in Hadoop-trunk-Commit #7775 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7775/])
HDFS-7894. Rolling upgrade readiness is not updated in jmx until query command is issued. Contributed by Brahma Reddy Battula. (kihwal: rev 6f622672b62aa8d719060063ef0e47480cdc8655)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2137 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2137/])
HDFS-7894. Rolling upgrade readiness is not updated in jmx until query command is issued. Contributed by Brahma Reddy Battula. (kihwal: rev 6f622672b62aa8d719060063ef0e47480cdc8655)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk-Java8 #189 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/189/])
HDFS-7894. Rolling upgrade readiness is not updated in jmx until query command is issued. Contributed by Brahma Reddy Battula. (kihwal: rev 6f622672b62aa8d719060063ef0e47480cdc8655)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk-Java8 #191 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/191/])
HDFS-7894. Rolling upgrade readiness is not updated in jmx until query command is issued. Contributed by Brahma Reddy Battula. (kihwal: rev 6f622672b62aa8d719060063ef0e47480cdc8655)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #922 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/922/])
HDFS-7894. Rolling upgrade readiness is not updated in jmx until query command is issued. Contributed by Brahma Reddy Battula. (kihwal: rev 6f622672b62aa8d719060063ef0e47480cdc8655)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2120 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2120/])
HDFS-7894. Rolling upgrade readiness is not updated in jmx until query command is issued. Contributed by Brahma Reddy Battula. (kihwal: rev 6f622672b62aa8d719060063ef0e47480cdc8655)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #180 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/180/])
HDFS-7894. Rolling upgrade readiness is not updated in jmx until query command is issued. Contributed by Brahma Reddy Battula. (kihwal: rev 6f622672b62aa8d719060063ef0e47480cdc8655)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, [~sjlee0] backported this to 2.6.1, the patch applied cleanly.

I just pushed the commit to 2.6.1 after running compilation.]