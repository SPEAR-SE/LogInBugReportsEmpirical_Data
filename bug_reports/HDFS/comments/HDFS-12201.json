[Adding [~yzhangal], [~jojochuang], [~jingzhao], [~zhz] for more discussion., INodes instances should know absolutely nothing about an external attributes provider.  The provider is mainly a hook to work in conjunction with alternative permission checker.

What is the actual problem this jira is attempting to solve?, Thanks [~daryn] for the comment. Updated the description with problem statement. Please take a look. The problem boils down to the expectation for Snapshot Diff when there is an external attributes provider configured. Should the diff be w.r.t to local attributes or include the external attributes as well. Your thoughts are welcome., Attached a test patch to show ACL changes happening at external attribute provider are not detected by Snapshot diff., Initial feeling w/o studying the code is if the issue is specific to snapshot diffs, that is where calls to {{FSDirectory#getAttributes}} should occur.  That's for instance what file status does.

Intermingling inodes (model objects) with specific control logic of an external plugin attributes provider violates abstractions.  This could easily have unforeseen subtle problems (now or in the future).  One of the worst cases may be the NN inadvertently edit log the "fake" attributes., Thanks [~manojg] for working on this issue, and [~daryn] for commenting.

HI [~daryn],

{quote}
 One of the worst cases may be the NN inadvertently edit log the "fake" attributes.
{quote}
This is the issue that I try to solve with HDFS-12202: when we distcp from srcCluster to dstCluter, if external attribute provider is enabled in srcCluster, distcp would copy data from srcCluster's external attribute provider and save to tgtCluster's edit log and fsimage. The solution proposed in HDFS-12202 is to add new set of APIs to bypass external attribute provider when reading metadata, so distcp could use this set of API.

However, the change proposed in HDFS-12202 might be too disruptive because 1. it adds new API to stable FileSystem interface, 2. all downstream code will need to implement the APIs. But I don't see better/cleaner solution at this point. Would appreciate if you share your thoughts and comments there.

Thanks.
 , [~daryn],
  Thanks for the comments. Agreed, edit log and the fsimage could end up persisted with external attributes. FSDirectory seems to be right level to aggregate or transform the results with external attributes so as to keep the abstraction clean. Closing the bug.]