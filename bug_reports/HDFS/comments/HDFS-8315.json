[Can you elaborate how you debug the load issues based on the log?, If accesses to a small set of blocks create hot spots, namenode audit log may not tell the whole story. Without the read request logging, it is very difficult to know what caused saturation on particular datanodes. If we catch it in action, then jstack can show what is being served and how many dataXceiver threads are used, etc., but that is not always possible. Even if we get lucky, we may not get accurate information depending on how the state is sampled., Hi Kihwal, IIRC [~gopalv] had some data indicating the request logging was a bottleneck. Can we use an async appender?, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 36s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 27s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 32s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 15s | The applied patch generated  1 new checkstyle issues (total was 43, now 43). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 32s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   3m  3s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | native |   3m 14s | Pre-build of native portion |
| {color:green}+1{color} | hdfs tests | 166m 45s | Tests passed in hadoop-hdfs. |
| | | 209m 23s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12730219/HDFS-8315.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 8f65c79 |
| checkstyle |  https://builds.apache.org/job/PreCommit-HDFS-Build/10784/artifact/patchprocess/diffcheckstylehadoop-hdfs.txt |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HDFS-Build/10784/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/10784/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf909.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10784/console |


This message was automatically generated., [~kihwal]: the HDFS in-memory layer is IOPS bound on logging stream - because log4j uses a single sync block around each appender to maintain ordering of logs.

I was under the impression that you can always turn on DEBUG logging for a ClientTraceLog using {{hadoop daemonlog}} command?, Changing log level of ClientTraceLog to debug will work for now since there is nothing else logging at debug.]