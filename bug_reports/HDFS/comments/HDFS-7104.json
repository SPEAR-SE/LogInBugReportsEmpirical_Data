[# {{inodes}} is initialized with the number of patch components. After {{resolve}}, it contains both non-null and null elements (introduced by dot-snapshot dirs).
# When {{getINodes}} is called, an array is returned excluding all non elements, which is the correct behavior. Meanwhile, the {{inodes}} array is trimmed too, which shouldn't be done by a getter.
# Because of the above, the behavior of {{getINodesInPath}} depends on whether {{getINodes}} has been called, which is not correct.
# The name of {{getLastINodeInPath}} is confusing -- it actually returns the last non-null inode in the path. Also, shouldn't the return type be a single INode?, [~jingzhao] can you provide any insight to this behavior? Zhe's comments basically make sense to me (i.e. make the INodesInPath#getINodes getter just a getter, trim the nulls from .snapshot off immediately), but a second opinion would be great. We already have ways of knowing if an IIP refers to a snapshot, so I don't think the extra nulls add much information., The logic for INodesInPath containing null elements is actually not introduced by snapshot or dot-snapshot dirs. Instead, the null elements are mainly used by {{mkdirsRecursively}} to identify directories to create. Thus in this scenario the null elements must be retained.

In the meanwhile, the logic of trimming inodes array in {{getINodes}} is only used by a snapshot path, since only dot-snapshot path can cause {{capacity < inodes.length}}. Thus to move this part into the {{resolve}} function should be a good change.

For {{getLastINodeInPath}}, currently in several places we still expect both the last inode and the snapshot related information from this method. So the return type may still have to be INodeInPath., [~jingzhao] Thanks very much for the clarification. I also double checked and it seems {{capacity}} is only used to eliminate dot-snapshot elements in {{inodes}}. This patch basically removed {{capacity}} as a field and made it a counter inside {{resolve}}. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670747/HDFS-7104-20140923-v1.patch
  against trunk revision a1fd804.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestSnapshotCommands
                  org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8165//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8165//console

This message is automatically generated., {{TestSnapshotCommands}} failure reveals that {{FSDirectory#isDir()}} also relies on {{getLastINodeInPath()}} to return a null inode to indicate the path (e.g. /dir/.snapshot) is _not_ a directory. So I don't think we can simply eliminate null elements in {{resolve()}}. 

I think we need to keep {{resolve()}} as is and rename {{getINodes()}} to {{getNonNullINodes()}}, while making it a real getter (without changing {{inodes}} array). It might also be useful to write another {{getAllINodes()}} method to return both null and non-null inodes. 

Thoughts?, This patch reflects the above comment on refactoring {{getINodes()}}, Thanks for the analysis, [~zhz].

For all the callers of {{getINodes}}, we have the following two cases:
# The path is a non-snapshot path. In this case the {{getINodes}} returns inodes directly, which includes null elements.
# The path is a snapshot path (including paths ending with dot-snapshot). In this case, the current {{getINodes}} trims elements to make the length of {{inodes}} equal to the value of {{capacity}}. Note that in this case null elements may still be contained in {{inodes}} (otherwise we cannot identify non-existing files/directories in snapshots).

So I can see three options here. The first option is to keep the current {{getINodes}} unchanged, but adding more javadoc to explain the logic behind. The second option is to make it a real getter, but we cannot rename it to {{getNonNullINodes}} since null elements can still be included.

The third option is to also create an extra method {{INodesInPath#getINodesForWrite}} for the above case #1, which first does a sanity check to make sure {{capacity == inodes.length}}, and then returns {{inodes}} directly. This method can be called by write ops like mkdir, concat, delete, etc.

Since we do not usually call {{getINodes}} multiple times for the same INodesInPath instance, I think we may consider starting from option 2., [~jingzhao] Good point, we have to carefully distinguish _null inodes caused by snapshots_ and _null inodes caused by dirs not yet created_. 

bq. Since we do not usually call getINodes multiple times for the same INodesInPath instance, I think we may consider starting from option 2.

Sounds good to me. I prefer to make {{getINodes()}} a real getter. It's not easy to find it a descriptive name though. What it does is  _getting inodes for non-snapshot path components_. How about {{getINodesWithoutSnapshots()}}. Any suggestions to make it less ugly?, We can actually reuse the current name I guess. {{getINodesWithoutSnapshots}} is also not accurate since the method is actually used for snapshots. A thorough javadoc for this method should be helpful., Removing v2 patch to get v3 into Jenkins sooner. Thanks [~jingzhao] for the suggestion; v3 patch changed the method name back to {{getINodes()}} and expanded javadoc., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670821/HDFS-7104-20140923-v2.patch
  against trunk revision b93d960.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.TestSnapshotPathINodes
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover
                  org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8173//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8173//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670843/HDFS-7104-20140923-v3.patch
  against trunk revision b93d960.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover
                  org.apache.hadoop.hdfs.server.namenode.TestSnapshotPathINodes

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8175//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8175//console

This message is automatically generated., {{TestSnapshotPathINodes#testSnapshotPathINodes}} originally calls {{getINodes()}} to trim the {{inodes}} array, and then verifies that {{getLastINode}} returns the last _regular_ inode (not null inode introduced by dot-snapshot paths). This is the wrong way of using {{getINodes}}, which is only a getter., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670999/HDFS-7104-20140924-v1.patch
  against trunk revision 073bbd8.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 1264 javac compiler warnings (more than the trunk's current 1263 warnings).

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS

                                      The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.TestParallelUnixDomainRead

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8185//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8185//artifact/PreCommit-HADOOP-Build-patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8185//console

This message is automatically generated., The patch looks good. Some minors:
# looks like now we can declare {{inodes}} as final.
# For the new javadoc added for {{getINodes}}, it will be better to also point out that the new array's length will be equal to the value of {{capacity}}.
# Optional: there are also two javadoc errors in {{INodesInPath}} (for {{snapshotRootIndex}} and {{getSnapshotRootIndex}}). Maybe we can use this chance to fix them., [~jingzhao] Thanks for reviewing again. 

bq. looks like now we can declare inodes as final.

{{fromINode()}} is still used in a few places which tries to set the {{inodes}} array.

bq. Optional: there are also two javadoc errors in INodesInPath (for snapshotRootIndex and getSnapshotRootIndex). Maybe we can use this chance to fix them.

I agree. How about the below:
{code} index of the null inode introduced by the snapshot dir in {@link #inodes}, -1 for non-snapshot paths. {code}, bq. fromINode() is still used in a few places which tries to set the inodes array.

Thanks for pointing this out! Then we just leave it unchanged.

bq.  index of the null inode introduced by the snapshot dir in {@link #inodes}, -1 for non-snapshot paths. 

Actually it's not "null inode". For a snapshot path, it is the index of the {{@link Snapshot.Root}} node in the {{inodes}} array., Javadoc fixes and improvements., Sorry I should mention this in my last comment: 
{code}
E.g., for path /dir/.snapshot, an array of size 1 is returned, containing only the inode of dir."
{code}

Here an array of size 2 is actually returned, since the root ("/") node is also included :) 
We can change it to sth. like "E.g., for path /dir/.snapshot with inodes containing all the inodes involved in the path, an array of size 2 is returned, containing both the root("/") and the inode of dir"., Good catch! How about the below:
{code:java}
  /**
   * @return a new array of inodes excluding the null elements introduced by snapshot
   *  path elements. E.g., for path /dir/.snapshot, {@link #inodes} includes 3 elements,
   *  for "/", "dir", and ".snapshot", while the returned array only contains inodes of "/"
   *  and "dir". Note the length of the returned array is always equal to {@link #capacity}.
   */
{code}, Thanks for the fix!

bq. for path /dir/.snapshot, inodes includes 3 elements, for "/", "dir", and ".snapshot".

Maybe we can change it to "After resolving the path "/dir/.snapshot", {{inodes}} is {/, dir, null}." Other than this it looks good to me., Fixing example in Javadoc of {{getINodes()}}, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12671069/HDFS-7104-20140924-v2.patch
  against trunk revision 9fa5a89.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app hadoop-tools/hadoop-sls hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager:

                  org.apache.hadoop.yarn.server.resourcemanager.TestWorkPreservingRMRestart
                  org.apache.hadoop.yarn.server.resourcemanager.TestContainerResourceUsage

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8188//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8188//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12671088/HDFS-7104-20140924-v3.patch
  against trunk revision 3cde37c.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover
                  org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS
                  org.apache.hadoop.hdfs.web.TestWebHdfsFileSystemContract

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8191//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8191//console

This message is automatically generated., Those failed tests all passed on my local machine. , Hey Jing, do you want to take care of the final +1/commit here? I'm happy to take care of the commit mechanics if you like, but I'd like your confirmation on this latest patch rev too., Sorry I forgot to +1 for the latest patch.. Here is my +1. Thanks for working on this and addressing the comments, [~zhz]!, [~jingzhao] Thank you for reviewing! 

I did a quick check and the latest patch (HDFS-7104-20140924-v3.patch) still applies and passes related tests with the current trunk., Alright cool, I'll commit this shortly. Thanks Jing and Zhe!, Committed to trunk and branch-2, thanks again Zhe for the patch, Jing for reviewing., FAILURE: Integrated in Hadoop-trunk-Commit #6143 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6143/])
HDFS-7104. Fix and clarify INodeInPath getter functions. Contributed by Zhe Zhang. (wang: rev f0293f11a85176afc04d809574c9126a80b700cc)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestSnapshotPathINodes.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #696 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/696/])
HDFS-7104. Fix and clarify INodeInPath getter functions. Contributed by Zhe Zhang. (wang: rev f0293f11a85176afc04d809574c9126a80b700cc)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestSnapshotPathINodes.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1887 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1887/])
HDFS-7104. Fix and clarify INodeInPath getter functions. Contributed by Zhe Zhang. (wang: rev f0293f11a85176afc04d809574c9126a80b700cc)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestSnapshotPathINodes.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1912 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1912/])
HDFS-7104. Fix and clarify INodeInPath getter functions. Contributed by Zhe Zhang. (wang: rev f0293f11a85176afc04d809574c9126a80b700cc)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestSnapshotPathINodes.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INodesInPath.java
]