[Attaching a simple patch., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 33s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 32s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 13m  2s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 22s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 40s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 26s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 24s{color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 26s{color} | {color:red} hadoop-hdfs-project/hadoop-hdfs-client in trunk has 2 extant Findbugs warnings. {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 43s{color} | {color:red} hadoop-hdfs-project/hadoop-hdfs in trunk has 10 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  2s{color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  6s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m  5s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 55s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 12s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 64m  7s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 16s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 98m 23s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.web.TestWebHdfsTimeouts |
| Timed out junit tests | org.apache.hadoop.hdfs.TestLeaseRecovery2 |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ac17dc |
| JIRA Issue | HDFS-11702 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12865017/HDFS-11702.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 1155131d187c 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 475f933 |
| Default Java | 1.8.0_121 |
| findbugs | v3.1.0-RC1 |
| findbugs | https://builds.apache.org/job/PreCommit-HDFS-Build/19200/artifact/patchprocess/branch-findbugs-hadoop-hdfs-project_hadoop-hdfs-client-warnings.html |
| findbugs | https://builds.apache.org/job/PreCommit-HDFS-Build/19200/artifact/patchprocess/branch-findbugs-hadoop-hdfs-project_hadoop-hdfs-warnings.html |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/19200/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/19200/testReport/ |
| modules | C: hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/19200/console |
| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, [~shahrs87], the patch doesn't apply cleanly for me. 
- Deleting _DFSClient#keyProviderUri_ is breaking the code. It is accessed in many places besides _DFSClient#getKeyProviderUri_
- bq. After this change, the client will cache the value for an hour after which it will issue getServerDefaults call and will refresh the key provider uri.
Every time _DFSClient#getKeyProviderUri_ is called, _keyProviderUri_ is set to null and recalulated. There is no caching being done., Thanks [~hanishakoneru] for looking into this jira.
bq.  the patch doesn't apply cleanly for me.
Which branch are you applying on ?
This patch is for trunk. I haven't tested on 2.8 or 2.7.
Given that jenkins build didn't complain about applying/compiling, that makes me think maybe something wrong in your environment ?

bq. Every time DFSClient#getKeyProviderUri is called, keyProviderUri is set to null and recalulated. There is no caching being done.
If you notice, then there are mainly 2 places to get keyprovider uri other than local conf.
1.     byte[] keyProviderUriBytes = credentials.getSecretKey(getKeyProviderMapKey());
First if dfs client is in a task and if EZ was enabled during job submission then the keyprovider from which kms token was fetched is added to credentials object.

2.     FsServerDefaults serverDefaults = getServerDefaults();
If you notice the {{getServerDefaults}} carefully, then the caching is done there. The cache is good for an hour after which it will again call Namenode#getServerDefaults.
Relevant piece of code
{code:title=DFSClient.java|borderStyle=solid}
  public FsServerDefaults getServerDefaults() throws IOException {
    checkOpen();
    long now = Time.monotonicNow();
    if ((serverDefaults == null) ||
        (now - serverDefaultsLastUpdate > SERVER_DEFAULTS_VALIDITY_PERIOD)) {
      serverDefaults = namenode.getServerDefaults();
      serverDefaultsLastUpdate = now;
    }
    assert serverDefaults != null;
    return serverDefaults;
  }
{code}
Let me know if you I missed something., +1 Assuming no other objections.  W/o this patch when we changed the key provider for a cluster, we also had to restart multiple other services including but not limited to oozie, hive, etc.

On the original jira some concerns were expressed about the lockless rpc for server defaults (I wouldn't care if it was 1min...), so as a middle ground, I'd suggest making the server defaults refresh interval configurable.  It could be incorporated in this patch or a new one.  Up to you., Thanks [~daryn] for review.
bq. I'd suggest making the server defaults refresh interval configurable. It could be incorporated in this patch or a new one
Created HDFS-11754., Thanks for clarifying, [~shahrs87]. 
LGTM., LGTM, though is there a unit test for this new behavior?, Thanks [~hanishakoneru] [~andrew.wang] for the reviews.
bq. though is there a unit test for this new behavior?
The test case from HADOOP-14104 are still valid tests.
I was explicitly calling setKeyProvider(null) from test cases to make sure it doesn't cache indefinitely., Committed this to trunk, branch-2 and branch-2.8., Thanks all for reviews and [~kihwal] for committing the patch !, SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #11696 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/11696/])
HDFS-11702. Remove indefinite caching of key provider uri in DFSClient. (kihwal: rev cef2815cf48154fe82f44082dcbdce6373c81284)
* (edit) hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestEncryptionZones.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
]