[Marking this as a blocker. We also ran into this and it is hanging many MapReduce JobClients on unix machines., ShortCircuitRegistry closes DomainSocketWatcher in shutdown().

Patch v1 closes DomainSocketWatcher in DfsClientShmManager#shutdown(), [~cmccabe], some of the recent changes related to short circuits related work have caused few bugs. This has impacted some of the testing that we are doing in terms of stabilization. I have few questions:
# Does this need to go into release 2.4? I think currently 2.4 should either get changes related to previous feature we talked about, blocker bugs or any code changes (that involves refactoring) that makes future code merges harder.
# Can you please share the plan of what other work you are planning that will make it into 2.4?, bq. Does this need to go into release 2.4? I think currently 2.4 should either get changes related to previous feature we talked about, blocker bugs or any code changes (that involves refactoring) that makes future code merges harder.

HDFS-5182 and its subtasks have been targetted at 2.4 for a while.  Now that they're done (except for HDFS-6036), I don't really see a reason not to fix the bugs and move on.

bq. Can you please share the plan of what other work you are planning that will make it into 2.4?

I'm not planning any other work in 2.4, except bug fixes.  Let me update the target version on HDFS-6036., Thanks for looking at this, Eric.

bq. Also, tracing through the code, I don't see any code path where DomainSocketWatcher.close() is invoked (though this would seem to be a larger issue â€“ maybe I'm missing something...).

Both the {{DataNode}} and the {{DFSClient}} have instances of {{DomainSocketWatcher}}.  The {{DataNode}}'s resides inside {{ShortCircuitRegistry}}, which closes it when {{ShortCircuitRegistry#shutdown}} is called.

The {{DFSClient}}'s is inside {{ShortCircuitCache}}.  It should be closed during {{ShortCircuitCache#close}}, but it isn't due to an oversight.  This only affects unit tests, since we normally never close the cache.  It is similar to {{PeerCache}} in this regard.

bq. Marking the DomainSocketWatcher.watcherThread as a daemon thread would prevent \[it from keeping the JVM alive when we don't want\]

yes, I agree.  Let's make it a daemon thread.

{code}
--- hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/DfsClientShmManager.java	(revision 1574655)
+++ hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/DfsClientShmManager.java	(working copy)
@@ -370,6 +370,8 @@
       } catch (IOException e) {
         LOG.warn(this + ": error shutting down shm: got IOException calling " +
             "shutdown(SHUT_RDWR)", e);
+      } finally {
+        IOUtils.cleanup(LOG, domainSocketWatcher);
       }
     }
   }
{code}

This isn't the right place to do that.  That function is about closing a specific peer, not closing the whole {{DfsClientShmManager}}.

Let me post an updated patch..., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12632911/hdfs-6057-v1.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.cli.TestHDFSCLI

                                      The following test timeouts occurred in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.TestParallelShortCircuitReadUnCached

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6312//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6312//console

This message is automatically generated., * setDaemon on the DomainSocketWatcher thread.
* Calling {{DomainSocketWatcher#add}} after the DSW is closed no longer results in an exception; instead, we run the close callback immediately and close the socket.
* add a unit test to ensure that {{ShortCircuitCache#close}} closes the {{DomainSocketWatcher}}., A couple nits:

- In ShortCircuitCache, could put @VisibleForTesting and @Override annotations on {{close()}}.
- I don't see ShortCircuitCache#fromConf being called, dead code?

+1 pending Jenkins though, overall LGTM.

Let's wait to commit this until tomorrow in case someone wants to give it a spin in their test environment. I agree with the earlier assessments that the daemon thread should be the key fix., bq. In ShortCircuitCache, could put @VisibleForTesting and @Override annotations on close().

I added the Override annotation.  I don't think VisibleForTesting belongs, since the reason this method is public is because it's part of the Closeable interface which ShortCircuitCache implements.

bq. Let's wait to commit this until tomorrow in case someone wants to give it a spin in their test environment. I agree with the earlier assessments that the daemon thread should be the key fix.

It would be nice to get this in sometime tonight, to minimize the inconvenience to others.  If there's no objections I'll commit it an hour or two after Jenkins gets done tonight., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12632984/HDFS-6057.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.cli.TestHDFSCLI
                  org.apache.hadoop.hdfs.TestPread

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6317//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6317//console

This message is automatically generated., The TestHDFSCLI failure is HADOOP-8691, not related to this patch.

The {{TestPread.testMaxOutHedgedReadPool}} failure seems to be related to the new hedged read stuff, and doesn't have anything to do with DomainSocketWatcher as best as I can tell.  I ran it locally and it passed, so I have to assume this is a flaky test., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12633006/HDFS-6057.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestPread
                  org.apache.hadoop.cli.TestAclCLI
                  org.apache.hadoop.cli.TestHDFSCLI

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6321//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6321//console

This message is automatically generated., I filed HDFS-6063 for the TestAclCLI failure, which seems to be popping up in other JIRAs too.  I wasn't able to reproduce it locally., SUCCESS: Integrated in Hadoop-trunk-Commit #5273 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5273/])
HDFS-6057. DomainSocketWatcher.watcherThread should be marked as a daemon thread (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1574787)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/unix/DomainSocketWatcher.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/DfsClientShmManager.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/ShortCircuitCache.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestBlockReaderFactory.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1693 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1693/])
HDFS-6057. DomainSocketWatcher.watcherThread should be marked as a daemon thread (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1574787)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/unix/DomainSocketWatcher.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/DfsClientShmManager.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/ShortCircuitCache.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestBlockReaderFactory.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #501 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/501/])
HDFS-6057. DomainSocketWatcher.watcherThread should be marked as a daemon thread (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1574787)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/unix/DomainSocketWatcher.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/DfsClientShmManager.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/ShortCircuitCache.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestBlockReaderFactory.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1718 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1718/])
HDFS-6057. DomainSocketWatcher.watcherThread should be marked as a daemon thread (cmccabe) (cmccabe: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1574787)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/unix/DomainSocketWatcher.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/DfsClientShmManager.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/ShortCircuitCache.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestBlockReaderFactory.java
, Thanks for fixing this, everyone.]