[I am using libhdfs to import data into HDFS from different databases, and populate Hive tables. However, to manipulate HDFS I am using libhdfs; which has segmentation faults. 

However, even a sample program as above gives a memory leak!, Hi Shubhangi,

There were a bunch of memory leaks and other problems that I fixed in libhdfs.  Some of those fixes didn't make it back to branch-1.  If you want, you can check out the attached JIRA and consider a backport., Hello Colin,

Thank you for the reply and the link. 

Yes, that will be a good idea to backport it to the current version.
Are you planning to have a hadoop release sometime near, with the fixes back ported?
If there can be anything I can contribute from my side to the code, I am eager to do it.
Thanks.

, hi，Shubhangi Garg。 what is the situation of segmentation fault happened? In my program, if i use a byte with 1M stack space, it will cause the segmentation fault. Below is the code:
    #include "hdfs.h"
    
-   int main(int argc, char **argv) {
|       char b[1024000] = {0};
|       hdfsFS fs = hdfsConnect("default", 0); 
|-      if (!fs) {
||          fprintf(stderr, "Oops! Failed to connect to hdfs!\n");
||          exit(-1);
||      }   
|   
|       hdfsDisconnect(fs);
|       return 0;
|   }

the core file shows the core stack in JNI_CreateJavaVM

(gdb) where
#0  0x000000302af3f53e in vfprintf () from /lib64/tls/libc.so.6
#1  0x000000302af61f54 in vsnprintf () from /lib64/tls/libc.so.6
#2  0x000000302af48001 in snprintf () from /lib64/tls/libc.so.6
#3  0x0000002a95c6351b in os::dll_build_name () from ..//../java6/jre/lib/amd64/server/libjvm.so
#4  0x0000002a958caae2 in ClassLoader::load_zip_library () from ..//../java6/jre/lib/amd64/server/libjvm.so
#5  0x0000002a958cbe37 in ClassLoader::initialize () from ..//../java6/jre/lib/amd64/server/libjvm.so
#6  0x0000002a958cbfe9 in classLoader_init () from ..//../java6/jre/lib/amd64/server/libjvm.so
#7  0x0000002a95a03ef7 in init_globals () from ..//../java6/jre/lib/amd64/server/libjvm.so
#8  0x0000002a95d748b4 in Threads::create_vm () from ..//../java6/jre/lib/amd64/server/libjvm.so
#9  0x0000002a95a72180 in JNI_CreateJavaVM () from ..//../java6/jre/lib/amd64/server/libjvm.so
#10 0x0000002a9616b742 in getJNIEnv () at hdfsJniHelper.c:503
#11 0x0000002a96164fd7 in hdfsConnectAsUser (host=0x400900 "03" <Address 0x400906 out of bounds>, port=0, user=0x0, password=0x0) at hdfs.c:201
#12 0x00000000004007bf in main ()

Does any one meet this problem? I guess this may be a bug of JDK, i have no idea with it, Hi Suo Tong,

The problem still persists for me, and I get memory leaks using hdfsConnect() functions from libhdfs.

]