[The main reason is that the whole unit test class uses only one single Configuration object, so the configuration information in previous unit test will affect the rear unit test.In testGetFileCheckSum() function, it seems to be affected by DFSConfigKeys.DFS_CLIENT_BLOCK_WRITE_LOCATEFOLLOWINGBLOCK_RETRIES_KEY. So it should construct a clean Configuration object before each unit test begins., add patch against trunk, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12579664/HDFS-4709-trunk.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4279//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4279//console

This message is automatically generated., Any update for this patch?, Tian, is this patch intended to be any different from HDFS-4787, or do we need to resolve it as a duplicate?  I just reviewed HDFS-4787 and gave +1, pending resolution of a minor code formatting nitpick.  Thanks!, Yes, Chris, it's a duplicate of HDFS-4787. So resolve it as a duplicate.]