[Modified getBlockLocations to have the option to check safemode and throw exception.
A test is also added., Can you explain the use case for this change, please?, Todd,

Basically it's for better debug-ability and error handling.
 
When the client reads a file and fails because namenode is in safemode, throwing an exception explicitly makes the cause obvious and also gives the client option to handle it differently with real missing blocks.

Thanks,
Brandon, +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12531640/HDFS-3522.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified test files.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2634//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2634//console

This message is automatically generated., +1 patch looks good.

I have committed this.  Thanks, Brandon!, Integrated in Hadoop-Mapreduce-trunk-Commit #2365 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2365/])
    HDFS-3522. If a namenode is in safemode, it should throw SafeModeException when getBlockLocations has zero locations.  Contributed by Brandon Li (Revision 1349088)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1349088
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSafeMode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/NameNodeAdapter.java
, Marking as incompatible change, since this will now throw an exception for this where it didn't before. I think it's fine, but we should call it out., Integrated in Hadoop-Common-trunk-Commit #2343 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2343/])
    HDFS-3522. If a namenode is in safemode, it should throw SafeModeException when getBlockLocations has zero locations.  Contributed by Brandon Li (Revision 1349088)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1349088
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSafeMode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/NameNodeAdapter.java
, Integrated in Hadoop-Hdfs-trunk-Commit #2416 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2416/])
    HDFS-3522. If a namenode is in safemode, it should throw SafeModeException when getBlockLocations has zero locations.  Contributed by Brandon Li (Revision 1349088)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1349088
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSafeMode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/NameNodeAdapter.java
, Hi Todd, I think it is not incompatible since DFSClient throws IOException previously.  The message in IOException depends on the location it created.  Anyway, if the location is empty, user applications must get an exception when it tries to access the block.  The patch makes it fail fast., Integrated in Hadoop-Hdfs-trunk #1074 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1074/])
    HDFS-3522. If a namenode is in safemode, it should throw SafeModeException when getBlockLocations has zero locations.  Contributed by Brandon Li (Revision 1349088)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1349088
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSafeMode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/NameNodeAdapter.java
, Integrated in Hadoop-Mapreduce-trunk #1107 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1107/])
    HDFS-3522. If a namenode is in safemode, it should throw SafeModeException when getBlockLocations has zero locations.  Contributed by Brandon Li (Revision 1349088)

     Result = FAILURE
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1349088
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSafeMode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/NameNodeAdapter.java
, I don't get it. Doesn't this disable reads in safemode completely?

We've here only thought of safemode being toggled upon NN startup but there's a case of NN entering safemode manually by an admin and in this scenario reads *can* and *should* work fully. Please explain why we wish to cripple this scenario/feature too, we've had customers rely on it in past.

By definition of safemode, its always been to prevent edits (any edits to namespace) not reads (which do NOT touch namespace). This breaks the whole concept around that, going by the release note "getBlockLocations(), and hence open() for read, will now throw SafeModeException if the NameNode is still in safe mode and there are no replicas reported yet for one of the blocks in the file.".

If am grossly wrong, let me know. This may have also started failing the test {{TestFileLengthOnClusterRestart}}., Unsure why jenkins didn't catch it, but indeed the test fails:

{code}
Running org.apache.hadoop.hdfs.TestFileLengthOnClusterRestart
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 13.127 sec <<< FAILURE!
{code}

(Although it does test for a failure, the failure now is different, and is a regression).

To handle Brandon's specific requirement, we may choose to throw an exception *iff* NN is in safemode for threshold-not-reached reasons. We should not fail reads if an admin places NN manually in safemode for whatever reasons (i.e. blocks are all still known about). This way we're good on both sides. Thoughts?, It throws an exception only if the location is empty.  If the location is empty, how to read?, Reopening issue until comments and test are both addressed, just to have it noticed :), Ah I noticed that now and saw the impl. as well. Sorry, my bad Nicholas.

But please also fix the test here or in another JIRA (can file one). We can mark it as resolved., I am good with this change. Resolving. Thanks Nicholas for catching my blunder :), Thanks folks for reviewing the patch. :-), Integrated in Hadoop-Hdfs-trunk-Commit #2432 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2432/])
    HDFS-3524. Update TestFileLengthOnClusterRestart for HDFS-3522.  Contributed by Brandon Li (Revision 1350384)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1350384
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestFileLengthOnClusterRestart.java
, Integrated in Hadoop-Common-trunk-Commit #2360 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2360/])
    HDFS-3524. Update TestFileLengthOnClusterRestart for HDFS-3522.  Contributed by Brandon Li (Revision 1350384)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1350384
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestFileLengthOnClusterRestart.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #2379 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2379/])
    HDFS-3524. Update TestFileLengthOnClusterRestart for HDFS-3522.  Contributed by Brandon Li (Revision 1350384)

     Result = FAILURE
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1350384
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestFileLengthOnClusterRestart.java
, Integrated in Hadoop-Hdfs-trunk #1077 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1077/])
    HDFS-3524. Update TestFileLengthOnClusterRestart for HDFS-3522.  Contributed by Brandon Li (Revision 1350384)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1350384
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestFileLengthOnClusterRestart.java
, Integrated in Hadoop-Mapreduce-trunk #1110 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1110/])
    HDFS-3524. Update TestFileLengthOnClusterRestart for HDFS-3522.  Contributed by Brandon Li (Revision 1350384)

     Result = FAILURE
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1350384
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestFileLengthOnClusterRestart.java
, Test patch result for the patch to branch-1. The findbug warnings were not introduced by this patch. 
{noformat}
     [exec] 
     [exec] -1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 5 new or modified tests.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     -1 findbugs.  The patch appears to introduce 196 new Findbugs (version 2.0.0) warnings.
     [exec] 
     [exec] 
     [exec] 
     [exec] 
     [exec] ======================================================================
     [exec] ======================================================================
     [exec]     Finished build.
     [exec] ======================================================================
     [exec] ======================================================================
{noformat}, test-patch result for the patch to branch-1.0. The findbug and javadoc warnings were not introduced by this patch.
{noformat}
     [exec] -1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     +1 tests included.  The patch appears to include 5 new or modified tests.
     [exec] 
     [exec]     -1 javadoc.  The javadoc tool appears to have generated 2 warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     -1 findbugs.  The patch appears to introduce 200 new Findbugs (version 2.0.0) warnings.
{noformat}, Committed also to branch-1 and branch-1.1.]