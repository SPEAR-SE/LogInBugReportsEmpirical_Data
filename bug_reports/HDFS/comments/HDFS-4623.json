[patch converts args {{toLower()}} in {{Locale.EN_US}} before comparisons. No tests, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12574752/HDFS-4623.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.TestStartup
                  org.apache.hadoop.hdfs.server.namenode.TestCheckpoint

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4132//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4132//console

This message is automatically generated., {code}
-                clusterId.equalsIgnoreCase(StartupOption.FORCE.getName()) ||
-                clusterId.equalsIgnoreCase(
-                    StartupOption.NONINTERACTIVE.getName())) {
+                clusterId.equals(StartupOption.FORCE.getName()) ||
+                clusterId.equals(StartupOption.NONINTERACTIVE.getName())) {
{code}

Would this be a proper new way of comparison? Cause the former way would disable case checks for both objects if I'm right, while here we're transforming the clusterId to lower but aren't explicitly doing the same for the StartupOption (maybe implicitly relying on it instead perhaps)?

Looks good other than this., the startup options are all implicit: I checked that first., Actually I'm wrong: {{-nonInteractive}} and {{-importCheckpoint}} are both mixed case -and that letter "I" is the notorious troublespot for some locales. I do need to convert NONINTERACTIVE to lower before the check. cancelling the patch]