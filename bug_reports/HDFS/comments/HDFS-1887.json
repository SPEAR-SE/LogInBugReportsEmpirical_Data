[As I know this problem may come while datanode is getting formatted or by corruption of storage file manually or through some program.Can anyone comment on any of my proposed solutions.
1.Creating a new storage file when an EOFException is thrown in DataStorage.isConversionNeeded method while reading LAYOUT_VERSION from the storage file. OR
2.Sending the storage state as NOT_FORMATTED when this problem comes but this will be a problem if it is corrupted manually or through some program then this solution will not be appropriate as this will format the datadir., Solution:-I have fixed this in the corresponding way by catching the EOFException in the method DataStorage.isConversionNeeded and deleting the file and returning false.
Then the data node will be started successfully and there wont be any data loss also.I have tested this this looks fine for me.I can provide the patch or am I missing any point anywhere?

One More Scenario:-This problem will also come under normal data node restarts and if the storage file is not present then it will try to recreate the file, so before writing the the LAYOUT_VERSION if data node is killed then further restarts will be failing in the similar fashion., Hi, Can anyone suggest how to handle the same problem in case of VERSION file, I want to propose this solution:-

In order to avoid manual intervention of deleting the storage directory we can check for a file say "formatrequired" file if the file is present we will format the storage directory
The file will be created while formatting a storage directory is started and deleted once the version file is written successfully. This will ensure formatting has been done successfully. Whenever datanode is started the first step of the analyzing the storage directory is to check the "formatrequired" file is present or not if the file is present then we will set the start up option to format then the storage directory will be formatted and the datanode will be started successfully.]