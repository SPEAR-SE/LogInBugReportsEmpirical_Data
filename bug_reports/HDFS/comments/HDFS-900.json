[Todd, do you see this on 0.21.0?
Is this a bug of handling corrupt replicas at NN?, Yes, I believe this reproduces in 0.21 and 0.22 (the to-reproduce.patch was against trunk at the time though likely is out of date now), In discussion with Nigel, we'd like to mark this as blocker pending further investigation. If we determine it's not a regression since 0.20 we'll downgrade priority., Yes, this is indeed a bug in block report. After step 3 in Todd's description the NN has 3 good replicas and one corrupt. The corrupt replica is in recentInvalidatesSet, but not in the DatanodeDescriptor. That is the replica is scheduled for deletion from the DN. See blockReceived(). 
But before it is deleted from the DN, that same DN sends a block report, which contains the replica. DatanodeDescriptor.processReport() treats it as a new replica because it is not in the DatanodeDescriptor and a good one since its blockId, generationStamp, and the length are in order.
The fix is to ignore replicas that are scheduled for deletion from this DN.
I tested this patch with the test case attached by Todd, thanks. The test passes with the fix and fails without.
The test case is not exactly a unit test as it introduces changes to FSNamesystem class for testing. So I did not include it to the patch.
Todd, is it possible to convert your case into a real unit test., +1, test failures:
TestFileConcurrentReader - HDFS-1401
TestStorageRestore - HDFS-1496

test-patch results:
{code}
     [exec] -1 overall.  
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec]     -1 tests included.  The patch doesn't appear to include any new or modified tests.
     [exec]                         Please justify why no new tests are needed for this patch.
     [exec]                         Also please list what manual steps were performed to verify this patch.
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
     [exec]     +1 release audit.  The applied patch does not increase the total number of release audit warnings.
     [exec]     +1 system test framework.  The patch passed system test framework compile.
     [exec] ======================================================================
{code}
Testing of this patch have dome manually and using Todd's utility attached above., I just committed this., I'm a little concerned that this wasn't committed with a test. The fix looks good but manual testing won't prevent a regression, Integrated in Hadoop-Hdfs-trunk-Commit #539 (See [https://hudson.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/539/])
    , Integrated in Hadoop-Hdfs-trunk #643 (See [https://builds.apache.org/hudson/job/Hadoop-Hdfs-trunk/643/])
    , Integrated in Hadoop-Hdfs-22-branch #35 (See [https://builds.apache.org/hudson/job/Hadoop-Hdfs-22-branch/35/])
    ]