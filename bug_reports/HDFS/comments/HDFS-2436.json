[This is not webhdfs specific.  DistributedFileSystem.setTime(..) also won't work for directories.  FSNamesystem.setTimes(..) somehow expects the path is a file., Arpit also found that there is a NPE if calling getFileChecksum(..) with a directory.
{noformat}
2011-10-24 15:23:16,569 WARN org.apache.hadoop.hdfs.web.resources.ExceptionHandler: INTERNAL_SERVER_ERROR
java.lang.NullPointerException
	at org.apache.hadoop.hdfs.DFSClient.getFileChecksum(DFSClient.java:783)
	at org.apache.hadoop.hdfs.DFSClient.getFileChecksum(DFSClient.java:771)
	at org.apache.hadoop.hdfs.server.datanode.web.resources.DatanodeWebHdfsMethods$3.run(DatanodeWebHdfsMethods.java:259)
	...
{noformat}
, Also the delegation token rest api's throw a 500 stating a npe in the code. We should also see if we can better handle the case where the user tries to get the delegation token when security is off. 500 is not the ideal response as the user has no idea what they did wrong., Here is the patch for settimes on directories!, {quote}
Arpit also found that there is a NPE if calling getFileChecksum(..) with a directory.
{quote}
 This is because, getBlockLoactions will return null on dirs
{code}
 private synchronized LocatedBlocks getBlockLocationsInternal(String src,
                                                       long offset, 
                                                       long length,
                                                       int nrBlocksToReturn,
                                                       boolean doAccessTime, 
                                                       boolean needBlockToken)
                                                       throws IOException {
    INodeFile inode = dir.getFileINode(src);
    if(inode == null) {
      return null;
    }
{code}

Above code snippet is from 20Security branch.


Looks this is already handled in trunk code

{code}
 INodeFile inode = dir.getFileINode(src);
        if (inode == null) {
          throw new FileNotFoundException("File does not exist: " + src);
        }
{code}

I just verified in trunk, i did not find the null pointer exception. It throws FileNotFoundException.

20Security is throwing the NullPointerException. 

I am palnning to sync the behaviors with trunk! And will file separate JIRA for that.


Thanks,
Uma
 , {quote}
20Security is throwing the NullPointerException.

I am palnning to sync the behaviors with trunk! And will file separate JIRA for that.
{quote}
Filed the separate JIRA HDFS-2509, {quote}
Arpit also found that there is a NPE if calling getFileChecksum(..) with a directory.
{quote}
 it will throw the NullPointerException on non existing files/directories., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12501288/HDFS-2436.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.TestFileAppend2
                  org.apache.hadoop.hdfs.TestSetTimes
                  org.apache.hadoop.hdfs.TestBalancerBandwidth
                  org.apache.hadoop.cli.TestHDFSCLI

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1484//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1484//console

This message is automatically generated., TestSetTimes passing in my environment!
Looks source assertions has been triggered in hudson. Fixed the test., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12501318/HDFS-2436.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.TestFileAppend2
                  org.apache.hadoop.hdfs.TestBalancerBandwidth
                  org.apache.hadoop.cli.TestHDFSCLI

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1485//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1485//console

This message is automatically generated., Hi Uma, the patch looks good.

The new getINode(..) does not have to check null.  The existing getFileINode(..) should use getINode(..) and do not have to acquire the read lock, i.e.
{code}
  INodeFile getFileINode(String src) throws UnresolvedLinkException {
    INode inode = getINode(src);
    if (inode == null || inode.isDirectory())
      return null;
    assert !inode.isLink();      
    return (INodeFile)inode;
  }
{code}, Hi Nicholas, Thanks a lot for the review!

Yes, no use with that null check. I might missed while just removing the inode.isDirectory() check. Thanks for noticing.

Updated the patch with the comment fix.

Thanks
Uma, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12501353/HDFS-2436.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.TestFileAppend2
                  org.apache.hadoop.hdfs.TestBalancerBandwidth
                  org.apache.hadoop.cli.TestHDFSCLI

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1489//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1489//console

This message is automatically generated., I have committed this.  Thanks, Uma!, Integrated in Hadoop-Mapreduce-trunk-Commit #1219 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/1219/])
    HDFS-2436. Change FSNamesystem.setTimes(..) for allowing setting times on directories.  Contributed by Uma Maheswara Rao G

szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1190708
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSetTimes.java
, Integrated in Hadoop-Mapreduce-0.23-Commit #108 (See [https://builds.apache.org/job/Hadoop-Mapreduce-0.23-Commit/108/])
    svn merge -c 1190708 from trunk for HDFS-2436.

szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1190711
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSetTimes.java
, Integrated in Hadoop-Hdfs-0.23-Commit #101 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Commit/101/])
    svn merge -c 1190708 from trunk for HDFS-2436.

szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1190711
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSetTimes.java
, Integrated in Hadoop-Common-0.23-Commit #101 (See [https://builds.apache.org/job/Hadoop-Common-0.23-Commit/101/])
    svn merge -c 1190708 from trunk for HDFS-2436.

szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1190711
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSetTimes.java
, Integrated in Hadoop-Common-trunk-Commit #1194 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/1194/])
    HDFS-2436. Change FSNamesystem.setTimes(..) for allowing setting times on directories.  Contributed by Uma Maheswara Rao G

szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1190708
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSetTimes.java
, Integrated in Hadoop-Hdfs-trunk-Commit #1270 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/1270/])
    HDFS-2436. Change FSNamesystem.setTimes(..) for allowing setting times on directories.  Contributed by Uma Maheswara Rao G

szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1190708
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSetTimes.java
, Hi Nicholas,
 This issue applicable for 20 security as well. Arpit raised this issue against to 20.205 branch!
 I will post the patch for 205 as well. 
Please let me know, if you have any concerns with 20.205 for some reason.

Thanks,
Uma, Integrated in Hadoop-Hdfs-0.23-Build #54 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/54/])
    svn merge -c 1190708 from trunk for HDFS-2436.

szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1190711
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSetTimes.java
, Integrated in Hadoop-Hdfs-trunk #847 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/847/])
    HDFS-2436. Change FSNamesystem.setTimes(..) for allowing setting times on directories.  Contributed by Uma Maheswara Rao G

szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1190708
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSetTimes.java
, Integrated in Hadoop-Mapreduce-trunk #878 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/878/])
    HDFS-2436. Change FSNamesystem.setTimes(..) for allowing setting times on directories.  Contributed by Uma Maheswara Rao G

szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1190708
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSetTimes.java
, Integrated in Hadoop-Mapreduce-0.23-Build #72 (See [https://builds.apache.org/job/Hadoop-Mapreduce-0.23-Build/72/])
    svn merge -c 1190708 from trunk for HDFS-2436.

szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1190711
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestSetTimes.java
, {quote}
This issue applicable for 20 security as well. Arpit raised this issue against to 20.205 branch!
I will post the patch for 205 as well.
Please let me know, if you have any concerns with 20.205 for some reason.
{quote}

For 205, the patch will change the behavior.  I am not sure if it may break some application., Ok, since we are not sure that, applications may depend on current behaviour, we will not fix this on 20.205 branch.
, Guys, accesTime and modificationTime are not supported for directories. It would have been too expensive as any update of a file should trigger update of all directories on the path.
So making times settable for directories is controversial. It was intentionally implemented on files only. See discussions in HADOOP-1869 e.g. Dhruba's comment saying:
[Implements access time for files. Directories do not have access times.|https://issues.apache.org/jira/browse/HADOOP-1869?focusedCommentId=12624594&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-12624594]

Aren't we creating a confusion here by letting people setTimes() which generally are unsupported?
I agree though that the error message was bad. It should clearly say setTimes() is not supported for directories rather than throwing FileNotFoundException.
I saw this behavior in DistCp, which tries to setTimes() on directories, similar to WebHdfs., And sorry for coming late., > ... Directories do not have access times.

In our code, directories *do* have access times (and mtime) since the fields are defined in INode but not INodeFile.  Also atime and mtime are returned in getFileInfo(..) for directories.  It is quite confusing whether atime and mtime are supported for directories.    Let file a JIRA to fix it., Thanks Konstnatin,
I was not known about previos discussion and thought, that was a missing behaviour.
Also i did not find any test for not supporting on directories. :-(. 
And other point already mentioned by Nicholas.

{quote}
It is quite confusing whether atime and mtime are supported for directories. Let file a JIRA to fix it.
{quote}
You mean to move the fields(atime and mtime) to INodeFile if it supports only for files?

Thanks
Uma

, > You mean to move the fields(atime and mtime) to INodeFile if it supports only for files?

If mtime and atime are supported only for files, it makes sense to move the fields to INodeFile since it reduces memory usage., Thanks Nicholas, I just filed the JIRA HDFS-2712.
Goal for that JIRA is to move the atime and mtime fields down to iNodeFile as this will save the memory consumption with dirs and also support setTimes access only for directories. We can continue the further discussion in that JIRA.

Thanks
Uma]