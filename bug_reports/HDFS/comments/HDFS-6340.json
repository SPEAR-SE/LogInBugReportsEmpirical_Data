[CCing [~arpitagarwal] for comments., Good catch!  I think we can start with {{false}} as the initial value and use the simple assignment instead of AND operation.  After all, the last result must be up-to-date.  But there is another problem.

{{nn.isStandbyState()}} is not protected from HA state transitions. We could create a {{FSNamesystem}} method that acquires its read lock and checks the datanode storage staleness (calling down to {{BlockManager}}) and the HA state. This is preferred since we want to avoid making {{BlockManager}} lock {{FSNameSystem}}.  If we do this, we don't have to check the individual results from {{processReport()}}., Yes, good catch [~rahulsinghal.iitd]. The change looks fine to me but the patch won't apply in trunk.

The {{nn.isStandbyState()}} bug appears to have been there for a while. You could fix it here as Kihwal suggested or file a separate Jira for it and just fix the immediate regression here., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12643277/HDFS-6340-branch-2.4.0.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6828//console

This message is automatically generated., [~arpitagarwal]: I am fine with applying simple fix and addressing the HA state checking in a separate jira., Thanks [~kihwal].

[~rahulsinghal.iitd], could you please rebase the patch to trunk?, Rebased to branch 'trunk' with Kihwal's suggestions.

Sorry for the delay but I was trying to wrap my head around the {{nn.isStandbyState()}} issue. [~kihwal], can you please file new issue? (I feel you would do more justice to its description), One more question:

Currently, the {{FinalizeCommand}} will be sent with every block report even after the upgrade is finalized. Although it will have no effect, would it be better (& worth it) to have some kind of check to prevent this?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12643612/HDFS-6340.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6840//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6840//console

This message is automatically generated., I have modified the TestDFSFinalize test to also test for DN & BP previous directory removal upon finalize. But since these are asynchronous actions, I had to use sleep() to ensure that I got correct results. But this is obviously not completely correct, please let me know if this is not acceptable., How can I trigger another round of "Hadoop QA" testing?, It looks like the previous build aborted. I kicked off a new one., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12643737/HDFS-6340.02.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithNodeGroup

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6859//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6859//console

This message is automatically generated., +1 pending Jenkins results., The failure looks unrelated. I will commit the patch today., I committed this to trunk through branch-2.4.

Thanks [~rahulsinghal.iitd] for taking the time to debug and fix this. I added you as a contributor and looking forward to your future contributions.

Also thanks to [~kihwal] for reviewing., SUCCESS: Integrated in Hadoop-trunk-Commit #5599 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5599/])
HDFS-6340.DN can't finalize upgrade. (Contributed by Rahul Singhal) (arp: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1593436)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDFSFinalize.java
, Thanks for commiting this [~arpitagarwal]., SUCCESS: Integrated in Hadoop-Yarn-trunk #560 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/560/])
HDFS-6340.DN can't finalize upgrade. (Contributed by Rahul Singhal) (arp: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1593436)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDFSFinalize.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1778 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1778/])
HDFS-6340.DN can't finalize upgrade. (Contributed by Rahul Singhal) (arp: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1593436)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDFSFinalize.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1752 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1752/])
HDFS-6340.DN can't finalize upgrade. (Contributed by Rahul Singhal) (arp: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1593436)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNodeRpcServer.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDFSFinalize.java
, Is anyone aware of any way to work around this issue, with upgrading?, You can manually delete the 'previous' directory on each DN and also 'blocksBeingWritten', if it exists. This will effectively finalize the DN upgrade.]