[This JIRA is not related to HA.
I could reproduce this messsage on my 2 DN non-HA test cluster.

{code}
bash-3.2$ hdfs fsck /
FSCK started by sho (auth:SIMPLE) from /192.168.201.79 for path / at Sun May 20 18:55:39 JST 2012
.
/testa/pg108.txt:  Under replicated BP-210957554-192.168.201.79-1337507115020:blk_8582687168124870535_1014. Target Replicas is 3 but found 2 replica(s).
.
/testa/pg1661.txt:  Under replicated BP-210957554-192.168.201.79-1337507115020:blk_-8009085939862411594_1016. Target Replicas is 3 but found 2 replica(s).
.
/testa/pg244.txt:  Under replicated BP-210957554-192.168.201.79-1337507115020:blk_7209121692132347074_1018. Target Replicas is 3 but found 2 replica(s).
.
/testa/pg834.txt:  Under replicated BP-210957554-192.168.201.79-1337507115020:blk_2226449261498800521_1020. Target Replicas is 3 but found 2 replica(s).
Status: HEALTHY
 Total size:	2006616 B
 Total dirs:	2
 Total files:	4
 Total blocks (validated):	4 (avg. block size 501654 B)
 Minimally replicated blocks:	4 (100.0 %)
 Over-replicated blocks:	0 (0.0 %)
 Under-replicated blocks:	4 (100.0 %)
 Mis-replicated blocks:		0 (0.0 %)
 Default replication factor:	3
 Average block replication:	2.0
 Corrupt blocks:		0
 Missing replicas:		4 (50.0 %)
 Number of data-nodes:		2
 Number of racks:		1
FSCK ended at Sun May 20 18:55:39 JST 2012 in 12 milliseconds
{code}, Clarifying question: what should be the correct percentage returned here? For your example, I think 100% is accurate for "Under-replicated blocks", but "Missing replicas" should be (missing / total expected), thus (7 / 21) => 33%., Here I guess calculation it self is wrong, since by the definition missing replicas means there is no replica available in the available live DN.

But here we are calculating the in the wrongly, 
we are counting for more number if replicas required to reach expected replication which contradicts the definition

Thanks in Advance
Amith, Hey Andrew, I agree with your analysis. My hunch is that in the calculation we're using to compute this, the numerator is correct, but the denominator is using the total number or replicas that were found, instead of the total number of replicas that should exist., Patch submitted. Indeed, the numerator was correct, denominator was not., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12529263/HDFS-3442.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2514//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2514//console

This message is automatically generated., Andrew,

Patch looks great.  Mind adding a TestNameNodeFsck class that calls NameNodeFsck#check (can make that @VisibleForTesting) and asserts that Results is calculated correctly? Can just check numExpectedReplicas vs totalReplicas for now, can create a file and set replication factor > # DNs in order to create a discrepancy between these two values. We'll file another jira for checking the various other fsck calculations.

Thanks,
Eli
, I have most of a test case written, but I was thinking the right thing to do is refactor Result a bit to make it more testable. Right now it's calculating each of these numbers with math in toString(). Pulling these calculations out into testable methods seems like a much better approach than trying to parse the toString() output.

Sound good? I could latch it all on here, or maybe a new JIRA is the place for all this. I'd be happy to do tests for the other calculations too., Why not just make Result @VisibleForTesting and check it directly, eg..

{code}
Result r;
check(.., r);
assertEquals(1, r.missingReplicas);
{code}
, That works for checking the raw counts, but the issue here was that the displayed percentage was incorrect. The percentages aren't available directly in Result, since it calcs them on the fly in toString(). I guess you could just check the numerator and denominator that are supposed to be used, but nicer seems like making a e.g. getMissingReplicasPercentage() method in Result, and having both Result and the test call that.

The percentages might not even be worth testing at all, in which case I'll just do the simple count comparison like you showed., Yea, I'd start with just checking the raw values and we can check the output text in another jira (or refactor out the calculations so we can test them directly)., New patch with test case for # of missing replicas. Modified the fields in Result to be @VisibleForTesting., Latest patch looks pretty good to me, Andrew. Just a few small comments. +1 once these are addressed:

# I think you should probably move your test case to TestFsck, instead of creating a new TestNamenodeFsck class, unless there's some good reason to have a new class that I'm missing. If you do consolidate the test classes, it'd be great if you could convert TestFsck to Junit 4-style while you're in there.
# If there is some good reason for having a separate test class, you should put the Apache License header at the top of the file.
# I don't think there's any need to declare/create the Configuration object statically, and doing so might be asking for trouble. Just make it an instance variable and initialize it in the @Before method.
# Be sure to shut down the mini cluster in your test, either in a finally block in the actual test case, or in a method annotated with @After.
# Looks like some tab characters snuck into the patch, on the opening and closing lines of the testFsckMissingReplicas method., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12530079/HDFS-3442-2.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2534//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2534//console

This message is automatically generated., New patch addressing ATM's comments., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12530125/HDFS-3442-3.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.blockmanagement.TestBlocksWithNotEnoughRacks
                  org.apache.hadoop.hdfs.server.namenode.metrics.TestNameNodeMetrics
                  org.apache.hadoop.hdfs.TestReplaceDatanodeOnFailure
                  org.apache.hadoop.hdfs.TestDatanodeBlockScanner

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2536//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2536//console

This message is automatically generated., Thank You everyone for taking a look into the issue.

Had a clarification.
From Hadoop Definitive guide 3 we can see
 
"Missing Replicas
    These are blocks with no replicas anywhere in the cluster."

So in this case should under replicated blocks be counted in missing replica count. (This is what happens currently and the missing replica count comes down to 0 when the replication factor is met), I ran the tests that failed locally, and they passed for for me. TestBlocksWithNotEnoughRacks.testCorruptBlockRereplicatedAcrossRacks is flaky though, I got the same error when I tried it a few times on trunk.

@suja: I think the book is wrong on this one, or at least it differs from what's actually in the code. fsck will print the # of missing blocks (blocks with 0 replicas) only if it detects a corrupt file. The missing replicas count is the total number of replicas, e.g. 3x the number of blocks., +1, the latest patch looks good to me. I also ran the tests locally and they passed just fine. I also don't see how they could be related to this change.

I'm going to commit this momentarily., I've just committed this to trunk and branch-2. Thanks a lot for the contribution, Andrew., Integrated in Hadoop-Hdfs-trunk-Commit #2384 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2384/])
    HDFS-3442. Incorrect count for Missing Replicas in FSCK report. Contributed by Andrew Wang. (Revision 1345408)

     Result = SUCCESS
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1345408
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFsck.java
, Integrated in Hadoop-Common-trunk-Commit #2312 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2312/])
    HDFS-3442. Incorrect count for Missing Replicas in FSCK report. Contributed by Andrew Wang. (Revision 1345408)

     Result = SUCCESS
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1345408
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFsck.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #2330 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2330/])
    HDFS-3442. Incorrect count for Missing Replicas in FSCK report. Contributed by Andrew Wang. (Revision 1345408)

     Result = FAILURE
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1345408
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFsck.java
, Thank You Andrew for the clarification, Integrated in Hadoop-Hdfs-trunk #1064 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1064/])
    HDFS-3442. Incorrect count for Missing Replicas in FSCK report. Contributed by Andrew Wang. (Revision 1345408)

     Result = FAILURE
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1345408
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFsck.java
, Integrated in Hadoop-Mapreduce-trunk #1098 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1098/])
    HDFS-3442. Incorrect count for Missing Replicas in FSCK report. Contributed by Andrew Wang. (Revision 1345408)

     Result = FAILURE
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1345408
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFsck.java
, Integrated in Hadoop-Hdfs-0.23-Build #304 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/304/])
    svn merge -c 1345408 FIXES: HDFS-3442. Incorrect count for Missing Replicas in FSCK report. Contributed by Andrew Wang. (Revision 1356828)

     Result = SUCCESS
daryn : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1356828
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFsck.java
]