[I'm having trouble reproducing this.  I don't get this error when running {{test_libhdfs_threaded}}.

Here's what I'm running:

{code}
cmccabe@vm4:~/hadoop$ java -version
java version "1.7.0_09"
OpenJDK Runtime Environment (IcedTea7 2.3.3) (7u9-2.3.3-0ubuntu1~12.10.1)
OpenJDK 64-Bit Server VM (build 23.2-b09, mixed mode)

cmccabe@vm4:~/hadoop$ cat /etc/issue
Ubuntu 12.10 \n \l
{code}, After some investigation, it looks like this is a result of you using the {{libjvm.so}} from {{JamVM}}.

Although this isn't documented anywhere, some examination of the JamVM source (as well as empirical tests) shows that JamVM crashes if you call {{JNI_GetCreatedJavaVMs}} prior to calling {{JNI_CreateJavaVM}}.  Since we currently do this in {{libhdfs}}, we get the crash.

There is an argument to be made that {{libhdfs}} should not try to see if a VM is already running before we create one.  Since such a VM, presumably created by another shared library or the application itself, would probably not have the correct {{CLASSPATH}}, it would be unlikely to work anyway.  Still, it's unfortunate that we (apparently) have to take this step.

It looks like JamVM is installed by default on Ubuntu 12.10, even on the server spin-- for whatever reason.  So we probably do need to fix this.  It would also be nice if we avoided using JamVM by default., even after making this change, JamVM crashes in nmdShutdown.  This is a simple function that does nothing but call {{MiniDFSCluster#shutdown}}.

{code}
2013-01-11 15:46:06,003 INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:shutdown(1411)) - Shutting down the Mini HDFS Cluster
2013-01-11 15:46:06,004 INFO  hdfs.MiniDFSCluster (MiniDFSCluster.java:shutdownDataNodes(1438)) - Shutting down DataNode 0
2013-01-11 15:46:06,004 WARN  datanode.DirectoryScanner (DirectoryScanner.java:shutdown(289)) - DirectoryScanner: shutdown has been called
2013-01-11 15:46:06,015 INFO  mortbay.log (Slf4jLog.java:info(67)) - Stopped SelectChannelConnector@localhost:0
2013-01-11 15:46:06,016 INFO  ipc.Server (Server.java:stop(2096)) - Stopping server on 39373
2013-01-11 15:46:06,018 INFO  ipc.Server (Server.java:run(829)) - Stopping IPC Server Responder
2013-01-11 15:46:06,018 INFO  ipc.Server (Server.java:run(687)) - Stopping IPC Server listener on 39373
Segmentation fault (core dumped)
{code}

I really have no idea how to fix this, or even if it can be fixed.  It looks like something that shutdown itself is doing, rather than something in the C code.  Perhaps JamVM can't handle threads shutting down or the log source being closed?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12564522/01.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithNodeGroup

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3826//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3826//console

This message is automatically generated., Too chatty at startup. I would recommend replacing
{code}
LOG.info("I am the walrus");
{code}
with a log at debug level
{code}
if (LOG.isDebugEnabled()) {
  LOG.debug("I am the walrus");
}
{code}
, Thanks, Steve.  :)  That really made my day.

Last time I tried this, I couldn't get jamVM to stop crashing in {{nmdShutdown}}.  I have a suspicion (unproven) that this is a jamVM bug, since none of the other JVMs have this problem.  Someone will have to do a deep dive, possibly with JVM source, before this is resolved.  I don't think anyone is using jamVM in production, so it may be a while., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12564522/01.patch |
| Optional Tests | javac unit javadoc findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10540/console |


This message was automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12564522/01.patch |
| Optional Tests | javac unit javadoc findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10563/console |


This message was automatically generated., There has been no activity on this issue for 2 years, and I don't see anyone expressing a need to run on JamVM.  I'm going to close this as won't fix.]