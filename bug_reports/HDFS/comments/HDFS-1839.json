[{{moveLastCheckpoint()}} first 
- removes {{previous.checkpoint}}, then 
- renames {{lastcheckpoint.tmp}} to {{previous.checkpoint}}, if {{lastcheckpoint.tmp}} exists.

So if you call {{moveLastCheckpoint()}} twice in one session, then the first call will correctly rename {{lastcheckpoint.tmp}} to {{previous.checkpoint}}, but the second will only remove  {{previous.checkpoint}}, because {{lastcheckpoint.tmp}} does not exist anymore.

The two calls are done in {{SNN.doCheckpoint()}} - one comes from {{saveNamespace()}}, which is called by {{doMerge()}}, and another later from {{endCheckpoint()}}.
The solution is to remove {{endCheckpoint()}}, which seems to be a redundant operation., Seems like all version are affected. I haven't checked 0.20-append., Do we need to fix this for 0.23 if we assume that HDFS-1073 will get merged into the release? With 1073 I don't think this is necessary at all, since we have other ways of reverting faulty checkpoints (see design doc for details), This is a low priority for both 0.22 and 0.23 as a Checkpointer should be used instead of SNN. But if we need to patch 0.20, then we will have to go all the way from trunk., Is this issue valid for checkpointer also ? Theres two calls to moveLastCheckpoint in Checkpointer too : One during savecheckpoint() and another in convergeJournalSpool  .. . This second  call to MovelastCheckpoint in convergeJournalSpool ll also remove "previous.checkpoint" rite ??, BackupNode and Checkpointer are not affected. Only the SecondaryNameNode.]