[I'm attaching the patch.  Summary:
# {{SaslDataTransferClient/Server}}: Remove checks that had been enforcing requirement of SASL configuration.  This had been too strict to support use of {{ignore.secure.ports.for.testing}}.  Additionally, the client piece has new logic to support fallback when the cluster is unsecured but using block access tokens.  I think this is an unusual configuration, so I expect this code path would be executed only very rarely.
# {{DFSOutputStream}}: The new client fallback logic also needed some coordination at this layer.  If the client attempts a connection with SASL to a non-SASL DataNode, then the DataNode closes the socket after rejecting the unexpected message.  The coordination here in the {{DFSOutputStream}} reconnect loop ensures that we get another chance with an open socket.
# {{DataNode}}: There had been some mishandling in {{checkSecureConfig}} around checking the {{dfs.data.tranfser.protection}} property.  It's defined in hdfs-default.xml, so it always comes in with empty string as the default (not null).  I changed some of this logic to check for empty string instead of null.
# {{TestSaslDataTransfer}}: Tests have been updated for better coverage of {{DateNode#checkSecureConfig}}.  I also took the opportunity to apply a timeout., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12669155/HDFS-7073.1.patch
  against trunk revision 8e5d671.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.web.TestWebHDFS
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8039//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8039//console

This message is automatically generated., The test failures are unrelated., # We should be able to catch {{SaslDataTransferFallbackException}} instead of specifically checking the instance type.
# In {{SaslDataTransferClient}} and {{SaslDataTransferServer}}, I think it would be more precise if we specifically check for 'ignore.secure.ports.for.testing'. 

Overall, the patch looks good to me., [~jnp], thank you for taking a look.

Regarding the instanceof check, I don't see a way to avoid it.  There is a lot of existing logic in the catch clause checking for specific exception types and doing special handling.  When fallback fails, we need to be able to drive the original exception into this handling logic to preserve the existing error handling behavior.  Some of this logic controls the outer loop too ({{break}} vs. {{continue}}), so it's not logic that's trivial to refactor behind a reusable method.  Maybe this whole code path would benefit from a larger clean-up refactoring, but that would be too much to fold into this patch now.

Regarding checking {{ignore.secure.ports.for.testing}}, we can't make that change in the client.  {{ignore.secure.ports.for.testing}} has been a server-side property used by the DataNode only.  It's possible that the client would be running with different config files than the DataNode.  If an existing deployment defined {{ignore.secure.ports.for.testing}} in the DataNode configs, but not the client configs, then this wouldn't work.

On the server side, I'm unclear on exactly what we'd do with a check of {{ignore.secure.ports.for.testing}}.  If we do {{} else if (ignoreSecurePortsForTesting) {}}, then we'd still need a catch-all {{else}} block for when both {{dfs.data.transfer.protection}} and {{ignore.secure.ports.for.testing}} are off.  I suppose the only thing we can do there is to try a no-SASL connection, which is identical to the handling of the current patch.  Maybe it's actually clearer to leave the patch as is?

Let me know your thoughts.  Thanks again!, bq. ... Maybe this whole code path would benefit from a larger clean-up refactoring, but that would be too much to fold into this patch now.
I agree, that much of refactoring will be beyond this patch's scope. I am ok to leave it as it is.

bq. ... catch-all else block
The catch all else block should just throw an exception on the server side. If security is on, ports are not secured, and dfs.data.transfer.protection, ignore.secure.ports.for.testing are also off then we shouldn't allow a connection.
  I agree to leave it as it is on the client side., Hi [~cnauroth], nice work.

{quote}
DataNode: There had been some mishandling in checkSecureConfig around checking the dfs.data.tranfser.protection property. It's defined in hdfs-default.xml, so it always comes in with empty string as the default (not null). I changed some of this logic to check for empty string instead of null.
{quote}
That's great for this fix too, otherwise if cluster is security enabled and we still can start DN listened on an unprivileged port (> 1024) even {{dfs.data.transfer.protection}} is empty.

{quote}
Cluster is unsecured, but has block access tokens enabled. This is not something I've seen done in practice, but I've heard historically it has been allowed. The HDFS-2856 code relied on seeing an empty block access token to trigger fallback, and this doesn't work if the unsecured cluster actually is using block access tokens.
{quote}

In the patch, fallback for writeblock is handled, but fallback for readblock is not handled. 
The test case for this scenario is hard to write because {{UserGroupInformation#isSecurityEnabled()}} is static, so we can't configure client secured but server unsecured.
But I just have this environment and test this scenario, I configured: server(unsecured and block access tokens enabled), client (secure enabled, block access tokens enabled and fallback enabled). I see write file is successful, but *read file failed*., For the first comment, I want to add: even though follow-on sasl handshake would failed, but the error log user see is not explicit. So it's pretty good of the fix for *not* let DN start successful on unprivileged port if {{dfs.data.transfer.protection}} is empty., One security issue I can think is: If we allow this type of fallback, as discussed in HDFS-2856 about the attack vector, a malicious task can easily listen on the DN's port after it dies and steal the block access token. So we'd better not allow the fallback?, bq. In the patch, fallback for writeblock is handled, but fallback for readblock is not handled. 

Yes, I spotted the same thing in my testing yesterday and chose to cancel the patch to make it clear that it's not ready.  I'm working on a new patch.  Thank you for your testing too.

bq. The test case for this scenario is hard to write because UserGroupInformation#isSecurityEnabled() is static...

Yes, agreed.  Unfortunately, until we refactor some of the static stuff inside {{UserGroupInformation}}, it's going to be impossible to put tests covering these kinds of cross-cluster scenarios directly into the source tree.  We're having to rely on external system tests to cover this.  Last time I looked at refactoring {{UserGroupInformation}}, it looked like it was going to be a big effort, and possibly backwards-incompatible.

bq. If we allow this type of fallback, as discussed in HDFS-2856 about the attack vector, a malicious task can easily listen on the DN's port after it dies and steal the block access token.  So we'd better not allow the fallback?

Thanks, great catch.  The difficulty here is that {{ipc.client.fallback-to-simple-auth-allowed}} controls fallback globally regardless of which cluster the client is connecting to.  One of the big use cases motivating fallback is distcp between a secure cluster and a non-secure cluster.  In that scenario, setting {{ipc.client.fallback-to-simple-auth-allowed}} could accidentally trigger fallback during communication with the secured cluster, when we really only want it for the unsecured cluster.

I'm going to explore an alternative implementation that detects if fallback actually occurred during the corresponding NameNode interaction before the DataTransferProtocol call.  This would tell us unambiguously if the remote DataNode was unsecured.  Doing this would require some additional plumbing at the RPC layer., Thanks Chris.
{quote}
One of the big use cases motivating fallback is distcp between a secure cluster and a non-secure cluster. In that scenario, setting ipc.client.fallback-to-simple-auth-allowed could accidentally trigger fallback during communication with the secured cluster, when we really only want it for the unsecured cluster.
{quote}
Agree. 

At least in this JIRA we can fix the checking for {{dfs.data.transfer.protection}}, and for the fallback, we can continue in a new JIRA?
{quote}
I'm going to explore an alternative implementation that detects if fallback actually occurred during the corresponding NameNode interaction before the DataTransferProtocol call. This would tell us unambiguously if the remote DataNode was unsecured. Doing this would require some additional plumbing at the RPC layer.
{quote}, I'm attaching patch v2.  This takes a different approach.  We detect if the NameNode interaction falls back to simple auth.  If so, then we know we need to skip SASL for DataTransferProtocol too.

It's a bigger patch than v1, mostly due to mechanical method signature changes.  I needed to plumb through the various RPC client and proxy layers to pull back out a flag indicating if fallback to simple auth occurred.

In addition to the new tests and existing tests changed in the patch, I also manually tested file write and read from a client running secure configuration to a cluster running unsecure configuration.

Jitendra and Yi, how does this look?, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12669935/HDFS-7073.2.patch
  against trunk revision 6fe5c6b.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.mover.TestStorageMover
                  org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS
                  org.apache.hadoop.hdfs.web.TestWebHdfsFileSystemContract
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8104//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8104//artifact/PreCommit-HADOOP-Build-patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8104//console

This message is automatically generated., Chris, thanks for quick update for this bulk of work.

The new approach is good. Agree that if the NameNode interaction falls back to simple auth then we skip SASL for DataTransferProtocol too, that makes sense. This can also protect from in secured cluster and fallback allowed, malicious task listens on the DN's port and steal the block access token. Also in this way, we don't need fallback exception to trigger retry as in the patch.



The new patch looks good to me, only few comments:

*1.* I think we may not need to pass {{fallbackToSimpleAuth}} for each call. Since we do authentication for each connection, {{fallbackToSimpleAuth}} could be as a variable of connection, then in _ProtobufRpcEngine_ and other rpc engine, we can get _fallbackToSimpleAuth_ through the connection. Then the logic looks more straight and clear?

*2.* I see there are two {{TODO}} for HA case in NameNodeProxies.java., Thank you for looking again, Yi.  Here is patch v3.  This stops tracking the flag per {{Call}} instance.  I don't think we can make the flag a member of {{Connection}}.  Because of the {{ClientCache}} and the internal pooling of {{Connection}} instances, there could be a risk that one {{DFSClient}} instance shuts down, then another {{DFSClient}} instance connects to the same cluster, and it ends up pulling a pooled {{Connection}} that still contains the flag connected to the old {{DFSClient}}.  It's definitely a good simplification though to take your suggestion of not tracking it as a member of {{Call}}.  We can just pass it through to {{setupIOstreams}}.

Thanks also for catching the leftover TODOs.  These were already done in the prior patch by the code changes in {{AbstractNNFailoverProxyProvider}}, so I removed the comments., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670029/HDFS-7073.3.patch
  against trunk revision 25fd69a.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.crypto.random.TestOsSecureRandom
                  org.apache.hadoop.ha.TestZKFailoverControllerStress
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestUpdatePipelineWithSnapshots
                  org.apache.hadoop.fs.TestUrlStreamHandler
                  org.apache.hadoop.hdfs.server.namenode.TestFileLimit
                  org.apache.hadoop.hdfs.TestParallelShortCircuitRead
                  org.apache.hadoop.hdfs.server.namenode.TestEditLogAutoroll
                  org.apache.hadoop.TestRefreshCallQueue
                  org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyCheckpoints
                  org.apache.hadoop.cli.TestCryptoAdminCLI
                  org.apache.hadoop.hdfs.TestSetrepDecreasing
                  org.apache.hadoop.hdfs.server.datanode.TestDiskError
                  org.apache.hadoop.fs.viewfs.TestViewFsWithAcls
                  org.apache.hadoop.hdfs.server.datanode.TestDataNodeHotSwapVolumes
                  org.apache.hadoop.hdfs.server.namenode.TestFSEditLogLoader
                  org.apache.hadoop.hdfs.server.namenode.TestHostsFiles
                  org.apache.hadoop.hdfs.server.datanode.TestTransferRbw
                  org.apache.hadoop.fs.contract.hdfs.TestHDFSContractDelete
                  org.apache.hadoop.hdfs.server.namenode.TestFileContextAcl
                  org.apache.hadoop.fs.TestFcHdfsSetUMask
                  org.apache.hadoop.hdfs.server.namenode.TestDeleteRace
                  org.apache.hadoop.hdfs.server.namenode.TestFSDirectory
                  org.apache.hadoop.hdfs.server.namenode.TestLeaseManager
                  org.apache.hadoop.fs.contract.hdfs.TestHDFSContractOpen
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshotListing
                  org.apache.hadoop.hdfs.server.datanode.TestStorageReport
                  org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery
                  org.apache.hadoop.hdfs.TestReadWhileWriting
                  org.apache.hadoop.fs.contract.hdfs.TestHDFSContractMkdir
                  org.apache.hadoop.fs.contract.hdfs.TestHDFSContractAppend
                  org.apache.hadoop.hdfs.server.datanode.TestFsDatasetCache
                  org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.TestRbwSpaceReservation
                  org.apache.hadoop.hdfs.server.blockmanagement.TestPendingInvalidateBlock
                  org.apache.hadoop.hdfs.server.namenode.ha.TestQuotasWithHA
                  org.apache.hadoop.hdfs.server.namenode.ha.TestGetGroupsWithHA
                  org.apache.hadoop.hdfs.server.namenode.TestSecondaryWebUi
                  org.apache.hadoop.hdfs.server.namenode.TestAuditLogger
                  org.apache.hadoop.hdfs.server.blockmanagement.TestBlockTokenWithDFS
                  org.apache.hadoop.hdfs.TestWriteBlockGetsBlockLengthHint
                  org.apache.hadoop.hdfs.server.namenode.TestHDFSConcat
                  org.apache.hadoop.hdfs.server.datanode.TestCachingStrategy
                  org.apache.hadoop.hdfs.server.namenode.TestAddBlockRetry
                  org.apache.hadoop.fs.TestSymlinkHdfsFileSystem
                  org.apache.hadoop.fs.viewfs.TestViewFsDefaultValue
                  org.apache.hadoop.fs.TestSymlinkHdfsFileContext
                  org.apache.hadoop.hdfs.TestClientProtocolForPipelineRecovery
                  org.apache.hadoop.hdfs.TestFSInputChecker
                  org.apache.hadoop.hdfs.server.namenode.ha.TestBootstrapStandby
                  org.apache.hadoop.hdfs.server.datanode.TestDataNodeInitStorage
                  org.apache.hadoop.hdfs.server.mover.TestStorageMover
                  org.apache.hadoop.hdfs.server.datanode.TestBlockReplacement
                  org.apache.hadoop.hdfs.server.blockmanagement.TestHeartbeatHandling
                  org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.TestInterDatanodeProtocol
                  org.apache.hadoop.cli.TestAclCLI
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAMetrics
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshotBlocksMap
                  org.apache.hadoop.hdfs.server.blockmanagement.TestNodeCount
                  org.apache.hadoop.hdfs.tools.TestDFSHAAdminMiniCluster
                  org.apache.hadoop.hdfs.server.datanode.TestReadOnlySharedStorage
                  org.apache.hadoop.hdfs.TestEncryptedTransfer
                  org.apache.hadoop.hdfs.server.blockmanagement.TestBlocksWithNotEnoughRacks
                  org.apache.hadoop.hdfs.server.namenode.TestNNStorageRetentionFunctional
                  org.apache.hadoop.hdfs.server.datanode.TestHSync
                  org.apache.hadoop.hdfs.server.namenode.TestNameNodeRpcServer
                  org.apache.hadoop.fs.contract.hdfs.TestHDFSContractSeek
                  org.apache.hadoop.hdfs.web.TestWebHdfsFileSystemContract
                  org.apache.hadoop.hdfs.server.namenode.TestFileContextXAttr
                  org.apache.hadoop.hdfs.TestAbandonBlock
                  org.apache.hadoop.hdfs.server.namenode.TestAclConfigFlag
                  org.apache.hadoop.hdfs.server.namenode.TestSequentialBlockId
                  org.apache.hadoop.hdfs.TestFileCreationClient
                  org.apache.hadoop.hdfs.server.namenode.TestFSImageWithXAttr
                  org.apache.hadoop.hdfs.server.namenode.metrics.TestNameNodeMetrics
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestXAttrWithSnapshot
                  org.apache.hadoop.hdfs.server.namenode.TestFSImageWithAcl
                  org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyBlockManagement
                  org.apache.hadoop.hdfs.tools.TestDFSAdminWithHA
                  org.apache.hadoop.hdfs.TestDFSShellGenericOptions
                  org.apache.hadoop.tracing.TestTracing
                  org.apache.hadoop.hdfs.server.namenode.TestListCorruptFileBlocks
                  org.apache.hadoop.hdfs.server.namenode.ha.TestFailureOfSharedDir
                  org.apache.hadoop.hdfs.server.namenode.ha.TestRetryCacheWithHA
                  org.apache.hadoop.hdfs.server.datanode.TestDataNodeMultipleRegistrations
                  org.apache.hadoop.hdfs.server.namenode.TestParallelImageWrite
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestAclWithSnapshot
                  org.apache.hadoop.hdfs.TestFileConcurrentReader
                  org.apache.hadoop.hdfs.server.namenode.TestNameNodeResourceChecker
                  org.apache.hadoop.hdfs.server.namenode.TestGenericJournalConf
                  org.apache.hadoop.fs.viewfs.TestViewFsWithXAttrs
                  org.apache.hadoop.hdfs.TestClose
                  org.apache.hadoop.hdfs.server.datanode.TestDataNodeExit
                  org.apache.hadoop.hdfs.server.namenode.TestEditLogJournalFailures
                  org.apache.hadoop.hdfs.TestPersistBlocks
                  org.apache.hadoop.hdfs.TestDatanodeReport
                  org.apache.hadoop.tools.TestJMXGet
                  org.apache.hadoop.hdfs.server.namenode.TestNameNodeMXBean
                  org.apache.hadoop.hdfs.server.datanode.TestBlockHasMultipleReplicasOnSameDN
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshotDiffReport
                  org.apache.hadoop.fs.contract.hdfs.TestHDFSContractCreate
                  org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.TestDatanodeRestart
                  org.apache.hadoop.hdfs.server.namenode.TestCreateEditsLog
                  org.apache.hadoop.hdfs.server.namenode.TestFSNamesystemMBean
                  org.apache.hadoop.hdfs.TestWriteRead
                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithMultipleNameNodes
                  org.apache.hadoop.hdfs.TestBalancerBandwidth
                  org.apache.hadoop.hdfs.server.datanode.TestFsDatasetCacheRevocation
                  org.apache.hadoop.fs.TestEnhancedByteBufferAccess
                  org.apache.hadoop.fs.TestFcHdfsPermission
                  org.apache.hadoop.hdfs.server.namenode.TestEditLogRace
                  org.apache.hadoop.security.TestRefreshUserMappings
                  org.apache.hadoop.hdfs.server.namenode.TestAllowFormat
                  org.apache.hadoop.fs.viewfs.TestViewFsHdfs
                  org.apache.hadoop.hdfs.TestDFSRename
                  org.apache.hadoop.hdfs.TestIsMethodSupported
                  org.apache.hadoop.fs.TestResolveHdfsSymlink
                  org.apache.hadoop.hdfs.server.namenode.metrics.TestNNMetricFilesInGetListingOps
                  org.apache.hadoop.hdfs.server.namenode.web.resources.TestWebHdfsDataLocality
                  org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.TestWriteToReplica
                  org.apache.hadoop.tracing.TestTracingShortCircuitLocalRead
                  org.apache.hadoop.hdfs.server.namenode.TestDecommissioningStatus
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestCheckpointsWithSnapshots
                  org.apache.hadoop.hdfs.server.blockmanagement.TestRBWBlockInvalidation
                  org.apache.hadoop.hdfs.TestParallelShortCircuitReadNoChecksum
                  org.apache.hadoop.hdfs.server.namenode.ha.TestEditLogTailer
                  org.apache.hadoop.hdfs.server.datanode.TestDataNodeVolumeFailureToleration
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshotMetrics
                  org.apache.hadoop.hdfs.TestDecommission
                  org.apache.hadoop.hdfs.server.namenode.TestINodeFile
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover
                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithEncryptedTransfer
                  org.apache.hadoop.hdfs.server.namenode.TestNamenodeRetryCache
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDelegationTokensWithHA
                  org.apache.hadoop.hdfs.server.balancer.TestBalancer
                  org.apache.hadoop.fs.TestFcHdfsCreateMkdir
                  org.apache.hadoop.hdfs.TestAppendDifferentChecksum
                  org.apache.hadoop.hdfs.server.blockmanagement.TestReplicationPolicy
                  org.apache.hadoop.hdfs.server.namenode.ha.TestNNHealthCheck
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshotReplication
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshotNameWithInvalidCharacters
                  org.apache.hadoop.hdfs.server.namenode.ha.TestBootstrapStandbyWithQJM
                  org.apache.hadoop.hdfs.server.namenode.TestBlockUnderConstruction
                  org.apache.hadoop.hdfs.server.mover.TestMover
                  org.apache.hadoop.hdfs.server.namenode.TestDeadDatanode
                  org.apache.hadoop.hdfs.server.blockmanagement.TestComputeInvalidateWork
                  org.apache.hadoop.hdfs.server.namenode.TestNameNodeRetryCacheMetrics
                  org.apache.hadoop.hdfs.TestDFSFinalize
                  org.apache.hadoop.hdfs.server.namenode.TestCacheDirectives
                  org.apache.hadoop.hdfs.TestFileAppend2
                  org.apache.hadoop.hdfs.server.namenode.ha.TestInitializeSharedEdits
                  org.apache.hadoop.hdfs.server.datanode.TestIncrementalBlockReports
                  org.apache.hadoop.hdfs.server.namenode.ha.TestFailoverWithBlockTokensEnabled
                  org.apache.hadoop.hdfs.server.namenode.TestStorageRestore
                  org.apache.hadoop.hdfs.server.namenode.TestEditLog
                  org.apache.hadoop.fs.viewfs.TestViewFileSystemWithXAttrs
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAFsck
                  org.apache.hadoop.fs.viewfs.TestViewFileSystemWithAcls
                  org.apache.hadoop.hdfs.server.namenode.TestXAttrConfigFlag
                  org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewer
                  org.apache.hadoop.hdfs.TestFsShellPermission
                  org.apache.hadoop.hdfs.TestFileAppend3
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestINodeFileUnderConstructionWithSnapshot
                  org.apache.hadoop.hdfs.TestQuota
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestDisallowModifyROSnapshot
                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithHANameNodes
                  org.apache.hadoop.hdfs.server.namenode.TestNameNodeRespectsBindHostKeys
                  org.apache.hadoop.hdfs.server.datanode.TestDataNodeMXBean
                  org.apache.hadoop.hdfs.tools.offlineEditsViewer.TestOfflineEditsViewer
                  org.apache.hadoop.hdfs.server.blockmanagement.TestBlockManager
                  org.apache.hadoop.hdfs.server.datanode.TestDataNodeMetrics
                  org.apache.hadoop.hdfs.server.namenode.TestSnapshotPathINodes
                  org.apache.hadoop.hdfs.server.namenode.ha.TestStateTransitionFailure
                  org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyIsHot
                  org.apache.hadoop.security.TestPermission
                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithNodeGroup
                  org.apache.hadoop.fs.contract.hdfs.TestHDFSContractConcat
                  org.apache.hadoop.hdfs.server.namenode.TestLargeDirectoryDelete
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDFSZKFailoverController
                  org.apache.hadoop.hdfs.server.blockmanagement.TestOverReplicatedBlocks
                  org.apache.hadoop.hdfs.server.namenode.TestFsck
                  org.apache.hadoop.hdfs.server.namenode.TestAuditLogs
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestNestedSnapshots
                  org.apache.hadoop.hdfs.server.namenode.TestSecondaryNameNodeUpgrade
                  org.apache.hadoop.hdfs.server.blockmanagement.TestUnderReplicatedBlocks
                  org.apache.hadoop.security.TestPermissionSymlinks
                  org.apache.hadoop.net.TestNetworkTopology
                  org.apache.hadoop.fs.contract.hdfs.TestHDFSContractRootDirectory
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestOpenFilesWithSnapshot
                  org.apache.hadoop.hdfs.TestParallelUnixDomainRead
                  org.apache.hadoop.cli.TestXAttrCLI
                  org.apache.hadoop.hdfs.server.namenode.TestNameEditsConfigs
                  org.apache.hadoop.hdfs.TestEncryptionZonesWithHA
                  org.apache.hadoop.hdfs.server.datanode.TestRefreshNamenodes
                  org.apache.hadoop.hdfs.TestFileCreationEmpty
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDFSUpgradeWithHA
                  org.apache.hadoop.fs.contract.hdfs.TestHDFSContractRename
                  org.apache.hadoop.hdfs.server.namenode.TestSecurityTokenEditLog
                  org.apache.hadoop.hdfs.server.datanode.TestDirectoryScanner
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshotFileLength
                  org.apache.hadoop.hdfs.server.datanode.TestNNHandlesBlockReportPerStorage
                  org.apache.hadoop.fs.permission.TestStickyBit
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPendingCorruptDnMessages
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshotDeletion
                  org.apache.hadoop.hdfs.TestFileCreation
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHASafeMode
                  org.apache.hadoop.hdfs.TestMissingBlocksAlert
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshot
                  org.apache.hadoop.fs.viewfs.TestViewFileSystemAtHdfsRoot
                  org.apache.hadoop.hdfs.server.namenode.TestTransferFsImage
                  org.apache.hadoop.hdfs.server.namenode.TestStartup
                  org.apache.hadoop.hdfs.server.namenode.TestNameNodeRecovery
                  org.apache.hadoop.hdfs.TestRead
                  org.apache.hadoop.hdfs.server.namenode.ha.TestEditLogsDuringFailover
                  org.apache.hadoop.hdfs.server.namenode.TestDiskspaceQuotaUpdate
                  org.apache.hadoop.hdfs.server.datanode.TestDeleteBlockPool
                  org.apache.hadoop.hdfs.server.datanode.TestDataNodeVolumeFailureReporting
                  org.apache.hadoop.hdfs.server.datanode.TestNNHandlesCombinedBlockReport
                  org.apache.hadoop.hdfs.server.namenode.ha.TestXAttrsWithHA
                  org.apache.hadoop.hdfs.TestBlockReaderFactory
                  org.apache.hadoop.hdfs.server.namenode.TestFSImageWithSnapshot
                  org.apache.hadoop.hdfs.TestPipelines
                  org.apache.hadoop.fs.loadGenerator.TestLoadGenerator
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshotRename
                  org.apache.hadoop.cli.TestCacheAdminCLI
                  org.apache.hadoop.hdfs.server.namenode.TestProcessCorruptBlocks
                  org.apache.hadoop.hdfs.TestFileCorruption
                  org.apache.hadoop.hdfs.server.namenode.TestMetadataVersionOutput
                  org.apache.hadoop.hdfs.server.namenode.TestNamenodeCapacityReport
                  org.apache.hadoop.hdfs.server.namenode.ha.TestLossyRetryInvocationHandler
                  org.apache.hadoop.fs.TestHDFSFileContextMainOperations
                  org.apache.hadoop.hdfs.server.namenode.TestSaveNamespace
                  org.apache.hadoop.hdfs.server.datanode.TestMultipleNNDataBlockScanner
                  org.apache.hadoop.fs.TestGlobPaths
                  org.apache.hadoop.fs.viewfs.TestViewFsFileStatusHdfs
                  org.apache.hadoop.hdfs.server.namenode.TestMetaSave
                  org.apache.hadoop.hdfs.server.namenode.TestCheckPointForSecurityTokens
                  org.apache.hadoop.hdfs.server.blockmanagement.TestPendingReplication
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHarFileSystemWithHA
                  org.apache.hadoop.fs.viewfs.TestViewFsAtHdfsRoot
                  org.apache.hadoop.TestGenericRefresh
                  org.apache.hadoop.hdfs.server.datanode.TestIncrementalBrVariations
                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithSaslDataTransfer
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAAppend
                  org.apache.hadoop.hdfs.tools.TestGetGroups
                  org.apache.hadoop.hdfs.server.namenode.TestBackupNode
                  org.apache.hadoop.hdfs.server.namenode.TestNameNodeAcl
                  org.apache.hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure
                  org.apache.hadoop.fs.shell.TestHdfsTextCommand
                  org.apache.hadoop.hdfs.TestLargeBlock
                  org.apache.hadoop.cli.TestHDFSCLI
                  org.apache.hadoop.hdfs.TestReplaceDatanodeOnFailure
                  org.apache.hadoop.hdfs.server.namenode.TestFavoredNodesEndToEnd
                  org.apache.hadoop.fs.TestSymlinkHdfsDisable
                  org.apache.hadoop.hdfs.server.namenode.ha.TestHAStateTransitions
                  org.apache.hadoop.hdfs.server.namenode.TestFSImage
                  org.apache.hadoop.fs.viewfs.TestViewFileSystemHdfs
                  org.apache.hadoop.hdfs.server.namenode.TestAddBlock
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencingWithReplication
                  org.apache.hadoop.hdfs.server.namenode.ha.TestFailureToReadEdits
                  org.apache.hadoop.hdfs.TestDFSInotifyEventInputStream
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestRenameWithSnapshots
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshottableDirListing
                  org.apache.hadoop.hdfs.TestLease
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSetQuotaWithSnapshot
                  org.apache.hadoop.hdfs.server.namenode.TestNameNodeXAttr
                  org.apache.hadoop.hdfs.server.datanode.TestDnRespectsBlockReportSplitThreshold
                  org.apache.hadoop.hdfs.server.namenode.TestCheckpoint
                  org.apache.hadoop.hdfs.server.namenode.snapshot.TestSnapshotStatsMXBean
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencing
                  org.apache.hadoop.hdfs.server.datanode.TestDataNodeRollingUpgrade
                  org.apache.hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerForAcl

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8108//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8108//artifact/PreCommit-HADOOP-Build-patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8108//console

This message is automatically generated., Well, all the things broke in that test run.  :-)  This is clearly a pre-commit build problem.  The failures are caused by {{NoSuchMethodError}}.  I'm starting to think that pre-commit builds are colliding with each other on the Jenkins host's local Maven repository.  If you have a hadoop-hdfs change dependent on a hadoop-common change, then I suspect there is a race condition that can cause your build to pull a hadoop-common.jar that was built for some other patch.  I've triggered a fresh build., I am running into the same issue with HDFS-6581.

It may be more than just a race condition, I've run the build overnight when no other Jenkins builds were in progress and hit the same failure., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12670029/HDFS-7073.3.patch
  against trunk revision 9f03a7c.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 3 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.crypto.random.TestOsSecureRandom
                  org.apache.hadoop.hdfs.server.mover.TestStorageMover
                  org.apache.hadoop.hdfs.web.TestWebHdfsFileSystemContract
                  org.apache.hadoop.hdfs.qjournal.server.TestJournalNode
                  org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8114//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8114//artifact/PreCommit-HADOOP-Build-patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8114//console

This message is automatically generated., The test failures are unrelated and documented elsewhere., Thanks Chris, about {{ClientCache}}, you are right, I missed that.
The patch is OK for me, +1 (non-binding)., +1, I committed this to trunk and branch-2.  Jitendra and Yi, thanks very much for the very helpful code reviews., SUCCESS: Integrated in Hadoop-Yarn-trunk #686 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/686/])
HDFS-7073. Allow falling back to a non-SASL connection on DataTransferProtocol in several edge cases. Contributed by Chris Nauroth. (cnauroth: rev f85cc14eb49a46e81d2edcdc1ffe4d0852f193a5)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DNConf.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/NameNodeConnector.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestRetryCacheWithHA.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/WritableRpcEngine.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestRPC.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HAUtil.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/NameNodeProxies.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RpcEngine.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferServer.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/TestSaslDataTransfer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1877 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1877/])
HDFS-7073. Allow falling back to a non-SASL connection on DataTransferProtocol in several edge cases. Contributed by Chris Nauroth. (cnauroth: rev f85cc14eb49a46e81d2edcdc1ffe4d0852f193a5)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DNConf.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestRetryCacheWithHA.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HAUtil.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferServer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/NameNodeConnector.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RpcEngine.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/NameNodeProxies.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/TestSaslDataTransfer.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestRPC.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/WritableRpcEngine.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1902 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1902/])
HDFS-7073. Allow falling back to a non-SASL connection on DataTransferProtocol in several edge cases. Contributed by Chris Nauroth. (cnauroth: rev f85cc14eb49a46e81d2edcdc1ffe4d0852f193a5)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RpcEngine.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/TestSaslDataTransfer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java
* hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestRPC.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/NameNodeConnector.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferServer.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/HAUtil.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NamenodeFsck.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/NameNodeProxies.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/sasl/SaslDataTransferClient.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestRetryCacheWithHA.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DNConf.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/WritableRpcEngine.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/AbstractNNFailoverProxyProvider.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtobufRpcEngine.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, I missed a Findbugs warning in this patch.  I just submitted a subsequent patch on HDFS-7107 to fix this.]