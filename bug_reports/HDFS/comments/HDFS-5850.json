[I'm not sure this issue affects 2.x.  In 0.23, the client pre-constructs the kerberos service principal and caches it in the ConnectionId.  All subsequent connections use a cached Connection which in turn reuses the cached principal in the ConnectionId.  Thus, if the principal is misconstructed it will never recover.

RPCv9 in 2.x should recover.  The client no longer preconstructs and caches the principal.  It verifies the principal advertised by the server.  If a transient DNS resolve failure occurs, the _HOST substitution in the service principal key will indeed yield a principal with an IP.  The client will reject the advertised principal because it doesn't match (ip vs hostname).  However, subsequent connections will attempt to reverify the advertised principal which involves a new DNS resolve.  The client should recover when DNS recovers., I don't think we need to fix this in 0.23, if it is already fixed in 2.x.]