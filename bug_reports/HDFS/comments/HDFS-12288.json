[I'll send a patch soon., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 16m  5s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 14m 47s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 52s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 42s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 58s{color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 47s{color} | {color:red} hadoop-hdfs-project/hadoop-hdfs in trunk has 9 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 41s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 53s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 40s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 68m 46s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 17s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}112m 10s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailureReporting |
|   | hadoop.hdfs.web.TestWebHdfsFileSystemContract |
|   | hadoop.hdfs.server.datanode.TestDirectoryScanner |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | HDFS-12288 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12881316/HDFS-12288.001.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux d81228349eea 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 312e57b |
| Default Java | 1.8.0_144 |
| findbugs | v3.1.0-RC1 |
| findbugs | https://builds.apache.org/job/PreCommit-HDFS-Build/20645/artifact/patchprocess/branch-findbugs-hadoop-hdfs-project_hadoop-hdfs-warnings.html |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/20645/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/20645/testReport/ |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/20645/console |
| Powered by | Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Findbugs/unit test failures are unrelated to the change., Thanks for the fix, [~lukmajercak].
The patch LGTM. 
Just one NIT: In _TestNamenodeCapacityReport#testXceiverCountInternal_, can you please update the comment below.
{code}
        // the load for writers is 2 because both the write xceiver & packet
        // responder threads are counted in the load
        expectedTotalLoad += fileRepl;
        expectedInServiceLoad += fileRepl;
{code}, Sure [~hanishakoneru], do you mind if I just delete it?, Nope. Deleting should also be fine., Thanks [~lukmajercak] for reporting the bug and patch.
1.
{noformat}
        // the load for writers is 2 because both the write xceiver & packet
        // responder threads are counted in the load
        expectedTotalLoad += fileRepl;
        expectedInServiceLoad += fileRepl;
{noformat}
This comment is there for a reason.
When we receive a block, it creates 2 thread. One is DataXceiver thread and other is Packet Responder thread.
If we are using {{DataNodeMetrics#getDataNodeActiveXceiversCount}} as a replacement for {{activeThreadCount}} then we need to add {{PacketResponderThread}} to {{DataNodeMetrics#dataNodeActiveXceiversCount}} otherwise we will create twice number of threads compared to today.

2.
{noformat}
-    return threadGroup == null ? 0 : threadGroup.activeCount();
+    return metrics == null ? 0 : metrics.getDataNodeActiveXceiversCount();
{noformat}
Need to check once more that is there a possibility that datanode can start without initializing the metrics.
Looking at the code, I think its not possible but just need to make sure., Thanks for the review [~shahrs87].

# Do you mind explaining why would we start creating twice the number of threads compared to today with this change? I don't see a reason why.
# Not sure what else can we do here, metrics are initialized as long as they are not null afaik., Thanks for the review [~hanishakoneru], I've removed the comment in:
{code:java}
TestNamenodeCapacityReport#testXceiverCountInternal
{code}
, Thanks [~shahrs87] for the review.
[~lukmajercak], {{DataNode#threadGroup}} doesn't account for {{DataXceiver}} threads alone. It has the following daemons as well
- {{DataXceiverServer}}
- {{BlockRecoveryWorker#recoverBlocks()}}
- {{BlockReceiver#PacketResponder}}

So if we change the {{DataNodeMetrics#getDataNodeActiveXceiversCount}} to reflect only the DataXceiver thread count, we lose out on the count for other active threads in the thread group. 
I would say we need to have 3 metrics to capture all the thread counts:
- {{dataNodeActiveXceiversCount}} for active DataXceiver threads
- {{dataNodePacketResponderCount}} for active PacketResponder threads
- {{dataNodeActiveThreadCount}} for all the active threads in the datanode.

 [~shahrs87], please correct me if I am wrong., [~hkoneru]: yes, that's correct.
bq. DataXceiverServer
There is only 1 instance of this per datanode. So I don't care much about this.
But we need to accommodate {{BlockRecoveryWorker}} and {{PacketResponder}} threads in our calculation.
bq. I would say we need to have 3 metrics to capture all the thread counts:
Instead of having 3 different metrics, my suggestion would be having just one metric "NumActiveThreads"., bq. Do you mind explaining why would we start creating twice the number of threads compared to today with this change? I don't see a reason why.
Just look for who calls {{DataNode#threadGroup}} member variable., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 19s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 16m 25s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 57s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 43s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  1s{color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 57s{color} | {color:red} hadoop-hdfs-project/hadoop-hdfs in trunk has 9 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  1s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  4s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 41s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 73m 14s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 17s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}103m 18s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure080 |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure090 |
|   | hadoop.hdfs.TestEncryptionZones |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | HDFS-12288 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12881509/HDFS-12288.002.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 5244f140f52e 3.13.0-119-generic #166-Ubuntu SMP Wed May 3 12:18:55 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 582648b |
| Default Java | 1.8.0_144 |
| findbugs | v3.1.0-RC1 |
| findbugs | https://builds.apache.org/job/PreCommit-HDFS-Build/20669/artifact/patchprocess/branch-findbugs-hadoop-hdfs-project_hadoop-hdfs-warnings.html |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/20669/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/20669/testReport/ |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/20669/console |
| Powered by | Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Correct me if I'm wrong, but {{BlockReceiver}} and {{PacketResponder}} are created for each DataXceiver, therefore, I don't think it makes sense to include them in the calculation.

# DataXceiver.run() 
# addPeer (increase counter)
# processOp -> (write/replace)
# new BlockReceiver 
# receiveBlock 
# new PacketResponder
           , For {{BlockRecoveryWorker}} I agree, this should be included. But then, so should be {{DataNode.DataTransfer}} in my opinion, which is currently only represented by {{DataNode.xmitsInProgress}}. Note that this one is not even included in the current calculation using {{threadGroup}} afaik., bq. but BlockReceiver and PacketResponder are created for each DataXceiver, therefore, I don't think it makes sense to include them in the calculation.
Yes, you are right. Sorry missed it.

bq. But then, so should be DataNode.DataTransfer in my opinion, which is currently only represented by DataNode.xmitsInProgress.
Are you proposing to add this count also to {{dataNodeActiveXceiversCount}}? If yes, why as it is already being covered by {{DataNode.xmitsInProgress}}., My bad, i thought {{xmitsInProgress}} was not sent with heartbeats. In this case, I would not change that no., {quote}
Correct me if I'm wrong, but BlockReceiver and PacketResponder are created for each DataXceiver, therefore, I don't think it makes sense to include them in the calculation.
{quote}
Default number of {{DFS_DATANODE_MAX_RECEIVER_THREADS_KEY}} is 4096.
For each block receiver, we create 2 threads (DataXciever and PacketResponder).
Excluding all the other threads, we can have 2048 Block receiver threads at any time.
If you don't include PacketResponder thread in calculation, you will be able to create 4096 Block receiver threads running at a time.
Are you saying you will not create separate metric for PacketResponder but increment {{dataNodeActiveXceiversCount}} by 2 every you create a Block Receiver thread ?, No, what I would suggest here is to change the default to 2048., bq. No, what I would suggest here is to change the default to 2048.
For the correctness of the metrics, I would recommend increasing the thread count whenever you start a Dataxceiver thread as well as PacketResponder thread.
In addition to it, many clusters might have increased the conf value {{DFS_DATANODE_MAX_RECEIVER_THREADS_KEY}} considering DataXciever and PacketResponder for each block receiver.
This change will break them also. Now they will need to reconfigure that value.
So you _need_ to increment 2 for each Block receiver thread., I believe, that for the correctness of the metrics, we should avoid doing this as it just introduces confusion as to what does the xciever count actually mean. With this approach, all it expresses is the number of client requests., bq. I believe, that for the correctness of the metrics, we should avoid doing this as it just introduces confusion as to what does the xciever count actually mean. With this approach, all it expresses is the number of client requests.
fwiw I agree with this. However changing the meaning of the metric is an incompatible change.,  {quote}
I believe, that for the correctness of the metrics, we should avoid doing this as it just introduces confusion as to what does the xciever count actually mean.
{quote}

{code:title=DataNode.java|borderStyle=solid}
 /** Number of concurrent xceivers per node. */
  @Override // DataNodeMXBean
  public int getXceiverCount() {
    return threadGroup == null ? 0 : threadGroup.activeCount();
  }
{code}
All I can say is its a poorly named method.
What it actually represents is number of active threads in the datanode process.
So this patch is replacing {{number of active threads}} with just the {{number of xceiver threads}}.
, It does not represent number of active threads in the process either. I am currently looking at a DataNode that shows:
{{xceiverCount}} = 15 

and JVM metrics show:

"ThreadsRunnable" : 64,
"ThreadsBlocked" : 0,
"ThreadsWaiting" : 13,
"ThreadsTimedWaiting" : 54,
"ThreadsTerminated" : 0,, Currently there is a metric called {{xceiverCount}} which returns the number of threads in a particular threadpool.
We could have only one client connected to the Datanode but as we had 50 threads created at some point, we would claim that xceiverCount is 50.
[~rushabh.shah], is your argument that we should leave it as is? Do you mind elaborating?, bq. It does not represent number of active threads in the process either. 
I agree that the calculation is broken. I am +1 for fixing this broken behavior.
My only point is we can't change what the conf key {{DFS_DATANODE_MAX_RECEIVER_THREADS_DEFAULT}} actually signifies.
Because many admins have bumped up or down this value.
So we have to count 2 threads for each Block receiver to maintain backwards compatibility.
If you want to have a metric for Data Xceiver thread, then I am all in for fixing that.
But then we have to change the following method name. Lets call it as {{getActiveNumberOfThreads}} which will return sum of {{DataXceiver}}, {{PacketResponder}}, {{BlockRecoveryWorker}} threads.
{noformat}
DataNode.java
 /** Number of concurrent xceivers per node. */
  @Override // DataNodeMXBean
  public int getXceiverCount() {
    return threadGroup == null ? 0 : threadGroup.activeCount();
  }
{noformat}


The following code will be changed to
Old code:
{noformat}
       int curXceiverCount = datanode.getXceiverCount();

        if (curXceiverCount > maxXceiverCount) {
          throw new IOException("Xceiver count " + curXceiverCount
              + " exceeds the limit of concurrent xcievers: "
              + maxXceiverCount);
        }
{noformat}

After change, it should look like:
{noformat}
    int totalNumActiveThreads = datanode.getActiveNumberOfThreads();

        if (totalNumActiveThreads > conf.get(DFS_DATANODE_MAX_RECEIVER_THREADS_KEY, DFS_DATANODE_MAX_RECEIVER_THREADS_DEFAULT)) {
          throw new IOException("Total number of active threads count " + totalNumActiveThreads
              + " exceeds the limit of configured count: "
              + conf.get(DFS_DATANODE_MAX_RECEIVER_THREADS_KEY, DFS_DATANODE_MAX_RECEIVER_THREADS_DEFAULT));
        }
{noformat}

Hope it makes sense.
, Thanks [~shahrs87], I think that makes sense.
Just to confirm, the proposal would be:
# Change the JMX method {{DataNode#getXceiverCount()}} to report the right xceiver count as [~lukmajercak] proposes.
# Add a new method called {{DataNode#getActiveNumberOfThreads()}} which has the old behavior from {{DataNode#getXceiverCount()}} (using {{threadGroup.activeCount()}}).
# Use this new {{getActiveNumberOfThreads()}} for the configuration check and so on.

I like that solution.
[~lukmajercak], do you mind posting a patch with that?, bq. Add a new method called DataNode#getActiveNumberOfThreads() which has the old behavior from DataNode#getXceiverCount() (using threadGroup.activeCount()). 
{{thread group}} _was intended_ to hold the sum of {{Dataxceiver thread}}, {{Packet Responder thread}} and 
{{BlockRecoveryWorker#recoverBlocks()}} as [~hkoneru] mentioned in [this comment|https://issues.apache.org/jira/browse/HDFS-12288?focusedCommentId=16123794&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16123794]
Since  this is not accurate, we can fix this.
The method {{DataNode#getActiveNumberOfThreads()}} will be return the sum of {{new DataNode#getXceiverCount() * 2}} + {{Num of Block recovery threads}}.
We just need to have another metric or member variable to track currently running {{Block recovery threads}}.
The reason we have multiplier of 2 is for every {{Dataxceiver}} thread, we also create {{Packet Responder thread}}
This way, {{DataNode#getXceiverCount()}} will return the correct number of currently running num of DataXceiver threads and {{DataNode#getActiveNumberOfThreads()}} will fix the threadGroup.activeCount bug.
Hope this proposal makes sense.
If not, I can write a simple patch to make it clear.
I don't want to hijack this jira. So I will let Lukas work on this since he found the bug and did all the analysis.
, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 49s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 15m 35s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 52s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 53s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 56s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m  0s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 53s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 49s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 57s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green}  9m 54s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 56s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 48s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}155m 20s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}204m  8s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.qjournal.server.TestJournalNode |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure |
|   | hadoop.hdfs.server.namenode.ha.TestRetryCacheWithHA |
|   | hadoop.hdfs.web.TestWebHdfsTimeouts |
|   | hadoop.hdfs.server.datanode.TestDataNodeMXBean |
|   | hadoop.hdfs.server.balancer.TestBalancerWithMultipleNameNodes |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:d4cc50f |
| JIRA Issue | HDFS-12288 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12881509/HDFS-12288.002.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 5f054aae79e8 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / ac627f5 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/23415/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/23415/testReport/ |
| Max. process+thread count | 3548 (vs. ulimit of 10000) |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/23415/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 46s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 16m  7s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 51s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 44s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 57s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 33s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 48s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 50s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 55s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 54s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m  4s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 53s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red}140m  2s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 42s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}189m 23s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure |
|   | hadoop.hdfs.server.federation.router.TestRouterSafemode |
|   | hadoop.hdfs.server.namenode.ha.TestEditLogTailer |
|   | hadoop.hdfs.TestReadStripedFileWithMissingBlocks |
|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |
|   | hadoop.hdfs.server.datanode.TestDataNodeHotSwapVolumes |
|   | hadoop.hdfs.web.TestWebHdfsTimeouts |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:d4cc50f |
| JIRA Issue | HDFS-12288 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12881509/HDFS-12288.002.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 8352c7d1f238 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 39a5fba |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/23428/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/23428/testReport/ |
| Max. process+thread count | 3962 (vs. ulimit of 10000) |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/23428/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

]