[This is important for 2.6, given we are trying to get YARN web-services to be stable for production usage.., {quote}
3. When YARN tries to renew this delegation token, it fails because the token service is pointing to the RPC port but the token kind is WebHDFS.

I suspect the issue is that the Namenode generates a delegation token of kind WebHDFS but doesn't change the service port. When YARN tries to renew the delegation token, it ends up trying to contact WebHDFS on the RPC port.
{quote}

This is false. For WebHDFS, {{getDelegationToken/renewDelegationToken}} do rest call to NN http server, but finally NN http server calls into NameNodeRpcServer to get/renew delegation token.  Just WebHDFS will reset the token kind.

So the issue should not be {{it ends up trying to contact WebHDFS on the RPC port.}}
We can confirm this from the exception log: (it's indeed a rest call):
{quote}at org.apache.hadoop.hdfs.web.WebHdfsFileSystem.renewDelegationToken(WebHdfsFileSystem.java:1318){quote}

The issue should occur when NN rpc server renew the delegation token, and we need to see the NN log for the detail. Some possible reasons I can think are like: 1. the token is expired (exceed the max renew time) 2. the renewer is incorrect (I see you get the delegation token and specify the renewer 'yarn', but does your yarn server start using this user?) ..., [~hitliuyi] from the exception - 
{noformat}
java.io.IOException: Failed to renew token: Kind: WEBHDFS delegation, Service: NameNodeIP:8020, Ident: (WEBHDFS delegation token 2222 for hrt_qa)
{noformat}

If you look at the service, it's pointing to the RPC port and not the WebHDFS port., Hi [~vvasudev], that's just the exception msg, not meaning WebHDFS client renew delegation token through NN RPC server directly. It does rest call to NN http server, and just the NN http server calls to FSN to renew delegation token.  We can get correct information from the call stack.

In NN, for delegation token, there is only one place to generate/renew delegation token, that's in FSN.  NN Http server just receives the renew delegation token request, but it call into FSN (through NameNodeRpcServer method) to do real work.   , At a higher level, the issue is as follows:

It has been an assumption that a client gets a delegation token and sets the service and port at the client side. However, with a non java client using rest APIs, this assumption breaks down, because the delegation token is a base64 encoded, serialized java object. Therefore, client is unable to set the appropriate service in the token.

One possible solution:
  Provide another rest API in which the client can send a delegation token and a desired service, port and kind etc, which the server can set inside the token and return the updated token. 
  We have scenarios where a smart java client clones the token and sets different service and ports. This approach will allow a thin client as well to use tokens in a similar way.
, {quote}
Provide another rest API in which the client can send a delegation token and a desired service, port and kind etc, which the server can set inside the token and return the updated token. 
We have scenarios where a smart java client clones the token and sets different service and ports. This approach will allow a thin client as well to use tokens in a similar way.
{quote}

Why not provide another getDelegationToken API with additional parameters - desired server, port and kind? Server can generate a delegation token and set the information passed by the client. This is nothing different from what happens today - client gets delegation token and then it sets this information in the token. 

,  The attached patch adds optional parameters to the getDelegationToken API. The service and kind will be set in the token if these params are present. Otherwise, the API will behave exactly as before., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12671490/HDFS-6904.1.patch
  against trunk revision a6049aa.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

                                      The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.TestFileCreation

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8218//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8218//artifact/PreCommit-HADOOP-Build-patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8218//console

This message is automatically generated., Updated patch with updated docs and with appropriate classes defined for the new parameters., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12671571/HDFS-6904.2.patch
  against trunk revision 6b7673e.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8228//console

This message is automatically generated., Updated patch., The latest patch looks good to me. Some minor comments:
# The unit test should also check service name (currently we only checked token kind).
# In the document, currently the "Valid Values" for Token Kind only includes existing token kinds in HDFS. Looks like Yarn/MR also have their own token kinds. Theoretically I think the kind can be set to any value if this kind can be handled by a token renewer.

+1 after addressing the comments.

Besides, [~vvasudev], it will be great if you can test the patch in Yarn and post the results here., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12671823/HDFS-6904.3.patch
  against trunk revision 84b9c63.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS
                  org.apache.hadoop.hdfs.TestDFSClientRetries
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover
                  org.apache.hadoop.hdfs.TestRollingUpgrade

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8251//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8251//artifact/PreCommit-HADOOP-Build-patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8251//console

This message is automatically generated., Attached patch addresses [~jingzhao]'s comments., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12671948/HDFS-6904.4.patch
  against trunk revision 0577eb3.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

                                      The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.TestModTime

    {color:red}-1 contrib tests{color}.  The patch failed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8260//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8260//artifact/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8260//console

This message is automatically generated., +1 for the latest patch., I will commit it today, and port to branch-2 and 2.6 as well, as it is important for this yarn use case. The test failures are not related. The patch still applies cleanly., Sorry for the late comment but I did test the patch and it works as expected. Thanks Jitendra!, FAILURE: Integrated in Hadoop-trunk-Commit #6335 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6335/])
HDFS-6904. YARN unable to renew delegation token fetched via webhdfs due to incorrect service port. (jitendra: rev e2be3337448ec0f6772a2ba463da376e7089b1fa)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/web/TestWebHdfsTokens.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/site/apt/WebHDFS.apt.vm
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java
, I think the new {{TokenKindParam}} and {{TokenServiceParam}} classes were missed in this commit.  HDFS-7288 reports that compilation is failing in trunk.  [~jnp], could you please look?  Thank you., Committed to trunk, branch-2 and branch-2.6., Thank you!, Thanks Chris. Committed the missing files!, SUCCESS: Integrated in Hadoop-trunk-Commit #6336 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6336/])
HDFS-6904. Added files missing in previous commit. (jitendra: rev 86ac0d40b850069e9dc6a7930b75a45902803357)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/resources/TokenKindParam.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/resources/TokenServiceParam.java
]