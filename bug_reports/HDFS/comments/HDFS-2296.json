[.
Thanks Stack, for filing the JIRA.

Do we need to make all read operations wait till the recovery completes?
(or) Lets provide an API from DFS to tell any recovery is in progress.So that the Apps can make use of that API to know whether the given recovery request is completed or not. 

Any thoughts?

Todd & Jitendra, Any suggestions? Can you please give your opinions?


Thanks
Uma, How can you pause all readers?  The cluster doesn't know who the readers are, so the only approach is to pause reading from datanode.

If you want to make all datanode read operations wait until recovery completes, then you almost have to use some kind of two phase operation at the beginning of lease recovery.

Thus, 

- the new writer initiates recovery

- recovery-propose has to be sent to all containers of the file

- all readers will pause because of recovery-start, but the lease is not yet changed

- recovery-commit has to be sent to all containers of the file

- the new writer is notified that recovery has succeeded

- readers continue under the new lease structure

The major problem here is that failures will make this hideously complex as with all two-phase designs.  Unfortunately, there is little alternative given the basic stateful design of lease-oriented single-writer architecture.

A secondary problem is that committing the lease recover across all replicas of all blocks of a file could involve a large number of datanodes and checking for the recovery imposes complexity on the fundamental read path.

Some of the failure conditions can be "handled" by time outs on the recovery-propose, but timeouts are inherently very, very dangerous.]