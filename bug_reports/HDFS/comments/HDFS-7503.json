[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12686132/HDFS-7503.trunk.01.patch
  against trunk revision 03867eb.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

      {color:red}-1 javac{color}.  The applied patch generated 1247 javac compiler warnings (more than the trunk's current 1215 warnings).

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs-nfs:

org.apache.hadoop.hdfs.nfs.TTests
org.apache.hadoop.hdfs.nfs.nfs3.TeTests
org.apache.hadoop.hdfs.nfs.nfs3.TestClientAccessTests
org.apache.hadoop.hdfs.nfs.nfs3.TestNfs3HTests
org.apache.hadoop.hdfs.nfs.nfs3.TestRpcPrTests
org.apache.hadoop.hdfs.nfs.nfs3.TTests
org.apache.hadoop.hdfs.nfs.nfs3.TestOpenFilTests

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8983//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8983//artifact/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8983//console

This message is automatically generated., [~arpitagarwal], can you please describe the approach you are taking to solve this issue?, Hi [~sureshms], sure. The fix is pretty trivial. I just downgraded the logging level from info to trace (likely too noisy even for debug)., One concern I had was if this information is useful for debugging. During startup, namenode delays block deletion which is the place where this debug log was useful, albeit verbose. Given that, I am +1 on this patch. , Thanks for the review Suresh.

bq. One concern I had was if this information is useful for debugging.
Here is an alternate patch for trunk that logs invalidated blocks outside theNameSystem write lock.

Separately perhaps it is time to use async appenders for blockLog/blockStateChangeLog. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12686171/HDFS-7503.trunk.02.patch
  against trunk revision 2ed90a5.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 40 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.blockmanagement.TestDatanodeManager

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8987//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8987//artifact/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8987//console

This message is automatically generated., +1 for patch v2.  I also prefer that we preserve the current log level and defer it until after releasing the lock.

I don't think new tests are required for this patch.  The Findbugs warnings are unrelated and documented elsewhere.  The test failure is unrelated, and I couldn't repro it locally.

Thank you for the patch, Arpit., Thank you Chris! I just realized the v1 patch had failed to wrap the logging call in {{isTraceEnabled}}.

Attaching v2 patch for branch-1. I will hold off on committing the v2 trunk patch until tonight in case Suresh has any comments., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12686384/HDFS-7503.branch-1.02.patch
  against trunk revision 59cb8b9.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8997//console

This message is automatically generated., +1 for the branch-1 v2 patch too.  Thanks again, Arpit., FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #35 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/35/])
HDFS-7503. Namenode restart after large deletions can cause slow processReport (Arpit Agarwal) (arp: rev 390642acf35f3d599271617d30ba26c2f6406fc1)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1969 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1969/])
HDFS-7503. Namenode restart after large deletions can cause slow processReport (Arpit Agarwal) (arp: rev 390642acf35f3d599271617d30ba26c2f6406fc1)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #39 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/39/])
HDFS-7503. Namenode restart after large deletions can cause slow processReport (Arpit Agarwal) (arp: rev 390642acf35f3d599271617d30ba26c2f6406fc1)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1989 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1989/])
HDFS-7503. Namenode restart after large deletions can cause slow processReport (Arpit Agarwal) (arp: rev 390642acf35f3d599271617d30ba26c2f6406fc1)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
, Thanks for the reviews Suresh and Chris!

I committed this to branch-1, trunk, branch-2 and branch-2.6.

bq. -1 tests included. The patch doesn't appear to include any new or modified tests.
This is a logging change., A minor nit:
{code}
+        blockLog.info("BLOCK* processReport: " + b + " on " + node
+                          + " size " + b.getNumBytes()
+                          + " does not belong to any file");
{code}
We can print the repetitive node information and the information that block does not belong to any file outside the for loop. , Hi Suresh, that may cause the output from multiple threads to get interleaved since we're not synchronized any more and make it difficult to parse.]