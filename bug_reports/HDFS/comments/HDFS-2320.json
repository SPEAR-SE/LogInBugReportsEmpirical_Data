[h2. 0.20-append changes
h3. ClientProtocol.java - version changed from 61 to 63
# Added boolean ClientProtocol#recoverLease(String src, String clientName). DistributedFileSystem#recoverLease() exposes this method to Applications
# Added LocatedBlock addBlock(String src, String clientName, DatanodeInfo[] excludedNodes)

*Compatibility*
# recoverLease() - Only used by HBase current. HBase currently checks for existence of this method before calling it. No backward compatibility issues.
# addBlock() - DFSClient tracks the support for this method using a flag serverSupportsHDFS630. The flag is set to false on getting exception from server. No backward compatibility issue.

h3. DatanodeProtocol.java - version changed from 25 to 26
Changed method nextGenerationStamp(Block ) -> nextGenerationStamp(Block, boolean)

*Compatibility*
This method is used only by Datanode. Since the whole cluster is upgraded, datanodes will run newer version of the protocol. This does not affect client compatibility, as the client does not use this RPC call.

h3. ClientDatanodeProtocol.java - version changed from 4 to 5
Added a new method getBlockInfo(Block block) used by the client.

*Compatibility*
When new client talks to old server, to read a file that is being written to, this will result in debug logs that print this exception.

*Required change*
Add a flag in DFSClient to detect no support for this method and handle it accordingly. This avoids having to make a method call all the way to the server, catch an exception and print an exception.

h3. DataTransferProtocol.java - version changed from 17 to 19
The changes in this are compatible. The version change is unnecessary.

Given that the protocol changes does not affect the client, I propose reverting the changes to version number in the protocols.
, Your logic seems reasonable. Have you tested this somehow? eg running a TestDFSIO with the new client pointed at the old cluster and killing a node or two while it's going? And vice versa?, I plan to do that testing manually. Thanks for the validation Todd., I did the following manual test TestDFSIO write and read tests:
# From 204 client against 205 server with my change.
# From 205 client against 204 server

Both tests passed. Without my patch I see version mismatch failure., Updated patch to remove an unnecessary file change.

I also tested this, killing datanodes while running TestDFSIO, +1. The patch looks good to me., I committed this patch. This patch is only relevant to 0.20.205, due to merging 0.20-append changes and is not relevant to trunk which has a new implementation of append., Closed upon release of 0.20.205.0]