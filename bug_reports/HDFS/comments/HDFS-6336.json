[This webhdfs issue is similar to the namenode web UI problem reported in https://issues.apache.org/jira/browse/HDFS-4471 (which is fixed by [~andrew.wang]). I made a similar fix here. 

I attempted to create a unit test case by enabling wildcard address, but was not successful. I did the test on a cluster of 4 nodes before and after the fix, to see the fix resolve the problem.

Thanks Andrew for some consultation.

, Upload same version to trigger test.
, Somehow the test was still not triggered, uploaded the same patch to try again., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12643390/HDFS-6336.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithNodeGroup

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6822//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6822//console

This message is automatically generated., Since it is passing IP / port around, it looks to me that the patch does not allow the DN to fail over when HA is enabled., Thanks [~wheat9], I actually did test both HA and NonHA. For HA, rpcAddr.getAddress().isAnyLocalAddress() won't be true, thus it still works correctly.
, BTW, the TestBalancerWithNodeGroup failure appears to be https://issues.apache.org/jira/browse/HDFS-6250.
, I think you can get the host from the URL w/o duping it.  I believe you can get the actual bind address for the NN's rpc server instead of pulling it from the conf.  That should address the wildcard addr., Kihwal's HDFS-6329 should address the HA vs. non-HA issue., This is a config issue.  Are you setting {{fs.defaultFs}} to "0.0.0.0:8020"?  That will  causes a lot of problems.
If you want namenode to bind to a wildcard address, try following:
{{fs.defaultFs}} = hdfs://real_nn_host_name_or_ip_addr:8020
{{dfs.namenode.rpc-bind-host}} = 0.0.0.0

, Thank you all for the review and comments!

I guess I mistook Haohui's point a bit earlier. I tested HA/NonHA for this jira issue, but not failover, which issue is handled by HDFS-6329 as Daryn pointed out.

My {code}fs.defaultFs{code} was set to hdfs://real_nn_host_name:8020 as you suggested, however,  dfs.namenode.rpc-address was set to 0.0.0.0:8020 and I don't see dfs.namenode.rpc-bind-host was set, . I tried to set {code}rpc-address{code} to  nn_host_name:8020, and {code}rpc-bind-host{code} to 0.0.0.0, and the problem is gone. So this is a config issue. Thanks for pointing it out! 

I will do some more testing. 
, I did more tests and further confirmed that it's caused by mis-config pointed out by ~kihwal]. Thank you all again!
 ]