[Output DelegationKey fields keyId, expiryDate and keyBytes (Base64 encoded).  Looking into modifying TestOfflineImageViewer to test this patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12567299/HDFS-3627.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3915//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3915//console

This message is automatically generated., Added new DelegationKey constructor which takes a Base64 encoded string as the SecretKey parameter, and methods getBase64EncodedKey(), equals() and hashCode() methods.  Added unit test, TestDelegationKey.java, to test the equivalence of a DelegationKey object constructed from a SecretKey and a 2nd DelegationKey object constructed from the Base64 encoded string retrieved from the 1st object, using the getBase64EncodedKey() method.  

Now the DelegationKey fields (keyId, expiryDate and keyBytes as a Base64 encoded string) output by ImageLoaderCurrent.processDelegationTokens() are all retrieved by methods on DelegationKey.  

These changes and unit test allow for the verification that a DelegationKey can be reconstructed from its id, date and a base 64 encoded string.  , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12567897/HDFS-3627.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestQuota
                  org.apache.hadoop.cli.TestHDFSCLI

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3944//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3944//console

This message is automatically generated., hi,all

how could I unsubscribe from this mailing list?



, I have version effd177cb68d368309a19d836de619afb853687b of apache/trunk and I can run tests org.apache.hadoop.hdfs.TestQuota and org.apache.hadoop.cli.TestHDFSCLI with no errors.  Also, tests TestQuota and TestHDFSCLI do not test any of the classes (DelegationKey, ImageLoaderCurrent, ImageVisitor, TestDelegationKey) that were changed in my patch.  I am wondering if TestQuota and TestHDFSCLI could be flapper test cases, although I have scripts to run these tests repeatedly, and they have not failed after 50 iterations., Hi Scott,
The patch looks good to me, overall - just some nits about {{TestDelegationKey.java}}:

-java. imports should precede org.apache. imports.
-avoid use of "import <ns>.*" where possible.
(For correct {{import}} style, look at {{hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/security/token/delegation/TestDelegationToken.java}} (in the same directory as your test).

-whitespace indentation beginning at {{String nullString = null;}} is inconsistent.
-why use {{nullString}} and {{nullByte}} rather than just {{null}}? Can't you instead do by casting, i.e.
{{DelegationKey(keyId, expiryDate, (String)null);}}
-Make {{nullString}} and {{nullByte}} {{const}} (if you really need these null objects).
, Thanks for your input, Eugene.  I have the changes you suggested and have uploaded a new patch file., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12570897/HDFS-3627.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

  {color:red}-1 one of tests included doesn't have a timeout.{color}

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithNodeGroup

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4002//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4002//console

This message is automatically generated., Added timeout to unit test.  The failed test reported above, org.apache.hadoop.hdfs.server.balancer.TestBalancerWithNodeGroup.testBalancerWithNodeGroup, failed because of a timeout.  TestBalancerWithNodeGroup.java does not contain any of the classes that were changed in the patches, so its failure is independent of the patch changes., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12571104/HDFS-3627.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 tests included appear to have a timeout.{color}

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4007//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4007//console

This message is automatically generated., Hi, just wanted to ping the group about resolving this jira.  Ravi, have you been able to review the patch?  Does anyone have any comments?  Thanks., Hi Scott! Sorry for not reviewing earlier. Would outputting the bytes for the delegation key be a security risk? I am not sure. I've asked some security folks to review the patch. Hopefully they'll get back on this soon.
, Good question.  It's probably not an issue.  If you have access to the image to run the offline tool, then you have the means to get the bytes of the secret key anyway...

I do question the need to touch the {{DelegationKey}} class.  I think the patch can be confined to just the offline tool:
# While hashCode and equals seems reasonable, I have learned the hard way that innocuous changes can have unintended consequences.  I wouldn't be surprised if something somewhere is relying on keys to always appear un-equivalent.  I'd recommend being "better safe than sorry".
# I'm not sure we should be adding ctors and methods to the delegation key to support the presentation format chosen for the offline tool.  I'd prefer that the tool format the key in base64 itself.

, My initial patch (30/Jan/13) did not modify the DelegationKey class.  It had, as you suggested, the tool create the base64 representation of the encoded key.

But that solution made it very difficult to create a unit test, so that is what motivated me to modify the DelegationKey class to show that an equivalent DelegationKey could be constructed from the fields output by the offline tool.

I agree that it would be better to have the patch only touch the classes in the offline tool.  Could we use the initial patch, which does not provide a unit test?



, The original patch looks good.  The added tests will test the new, and arguably unnecessary, changes to {{DelegationKey}} as opposed to the real changes to the offline tool.  I think there are tests for the output of the offline image tool.  If so, you'd have to enable security will cause a master key roll and allow you to test the output.

Do you also need changes to allow the offline tools to read the new textual dump?  I think they are supposed to be able convert from binary to text and vice versa., I reverted back to the original patch, and added a new test to TestOfflineImageViewer.java to check that the output from the XML processor includes the DelegationKey fields labeled by DELEGATION_KEY_ID, DELEGATION_KEY_EXPIRY_DATE and DELEGATION_KEY_BYTES.

Also, while the OEV tool does have a binary processor to create the edits file from an XML textual dump, the OIV tool does not, so for my understanding, no other changes are required., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12574708/HDFS-3627.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

  {color:red}-1 one of tests included doesn't have a timeout.{color}

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4130//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4130//console

This message is automatically generated., bq. Also, while the OEV tool does have a binary processor to create the edits file from an XML textual dump, the OIV tool does not, so for my understanding, no other changes are required.

A few issues/questions:
# Most important: It appears this patch may break the ability for the OIV to convert from xml back to a binary image?
# For consistency, I think the other human-readable OIV output formats should similarly decode a delegation key.  It looks like {{IndentedImageVisitor}} may be the only one.
# It'd be nice for the OEV to also decode the delegation key instead of printing the class name.  This appears to require a similar change in {{FSEditLogOp.UpdateMasterKeyOp.toXml/fromXml}}.

As an aside, I'm somewhat surprised the xml encode/decode isn't common between OIV/OEV, but I'm not suggesting any changes there.

, Thanks for your comments, Daryn.
1. I believe that the changes in this patch enable OIV to convert from xml back to binary image.  Our group needed this functionality, and so we made this change.  Without these changes, the Delegation Keys in the binary image cannot be correctly composed. 
2. Latest patch modifies IndentedImageVisitor.java so that ImageElement.DELEGATION_KEY_EXPIRY_DATE is human-readable.  I checked the outputs for the other visitors, and only the IndentedImageVisitor and XmlImageVisitor output the Delegation Keys.
3. I believe the OEV does decode the delegation key, but it prints out the encoded key as a hex string.  So I changed the OIV to also print out the encoded key as a hex string.

I agree that it would be nice if the xml encode/decode code was common between OIV and OEV, but it would be a big change now.  It is also surprising that the OEV has a binary processor that allows the XML output to be converted to binary, but that the OIV does not.  We needed this functionality and hope to contribute it back soon., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12574930/HDFS-3627.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 tests included appear to have a timeout.{color}

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestDistributedFileSystem

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4133//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4133//console

This message is automatically generated., Daryn, the failed test, TestDistributedFileSystem.testGetFileBlockStorageLocationsError, must be a flapper as it has nothing to do with the changes I made.  I have a script to run the test repeatedly, but have not gotten it to fail after over 100 attempts.  Do you know if there is a way to get HadoopQA to rerun the test, without submitting another patch?  Also, do you have any comments on the last patch?  Thanks., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12574930/HDFS-3627.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10535/console |


This message was automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12574930/HDFS-3627.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10559/console |


This message was automatically generated., {{OfflineImageViewer}} is no more used now.
Its used only for the old Pre-protobuf images., bq. Its used only for the old Pre-protobuf images.

Yup but we seem to support writing a legacy copy for the OIV specifically, so this fix could still be useful to some., bq. Yup but we seem to support writing a legacy copy for the OIV specifically, so this fix could still be useful to some.
Oh, yes. 
May be we need a rebase of the patch, with test included for the legacy image.]