[Thanks for reporting this Zhe. Could you attach a failure log?

I ran the test a couple of times on branch-2.7 (hash=e6c162a39466755d35abed7faf2e00d28166553c), didn't meet the failure. (I remember HDFS-9888 and HDFS-10336 were created to fix the test failures in HDFS-9804, but they both are in branch-2.7.)

{noformat}
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hdfs.server.balancer.TestBalancer
Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 315.155 sec - in org.apache.hadoop.hdfs.server.balancer.TestBalancer

Results :

Tests run: 26, Failures: 0, Errors: 0, Skipped: 0
{noformat}, Thanks for chiming in Xiao. I'm attaching the {{testUnknownDatanodeSimple}} failure log. The keytab test actually failed due to below:
{code}
java.lang.NoClassDefFoundError: jdbm/helper/CachePolicy
{code}

I think it's related to my local Mac environment. , Aha! I bet that's the jdbm not found in .m2 issue. IDK the fix, but here's a workaround:
{noformat}
hadoop-common-project/hadoop-minikdc can pass unit test when running from command line, but fails with "NoClassDefFoundError: jdbm/helper/CachePolicy" Caused by: java.lang.ClassNotFoundException: jdbm.helper.CachePolicy on IntelliJ.
We can fix this in IntelliJ by:
  Go to hadoop-minikdc's Project Structure.
  Find the 'Maven: org.apache.directory.jdbm:apacheds-jdbm1:bundle:2.0.0-M2' under Dependencies tab.
  Replace the apacheds-jdbm1-2.0.0-M2.bundle to apacheds-jdbm1-2.0.0-M2.jar with the same parent directories.
{noformat}, Thanks! Any clue about the other failure?, Sorry... what other failure?, {{testBalancerWithKeytabs}} fails with {{java.lang.NoClassDefFoundError: jdbm/helper/CachePolicy}}.

{{testUnknownDatanodeSimple}} fails with the log I attached. Sorry about the confusion., Ah I see, testUnknownDatanodeSimple passed locally for me. I'm locally running on OSX with jdk1.7.79 FYI., I think that one is flaky. See the last 2 Jenkins reports from HDFS-8818, one reported {{testUnknownDatanodeSimple}} but one didn't., Actually {{testBalancerWithKeytabs}} seems flaky too. Getting below on CLI run:

{code}
Tests run: 26, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 283.892 sec <<< FAILURE! - in org.apache.hadoop.hdfs.server.balancer.TestBalancer
testBalancerWithKeytabs(org.apache.hadoop.hdfs.server.balancer.TestBalancer)  Time elapsed: 39.283 sec  <<< FAILURE!
java.lang.AssertionError: expected:<0> but was:<-3>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at org.junit.Assert.assertEquals(Assert.java:542)
	at org.apache.hadoop.hdfs.server.balancer.TestBalancer.testUnknownDatanode(TestBalancer.java:975)
	at org.apache.hadoop.hdfs.server.balancer.TestBalancer.access$000(TestBalancer.java:116)


Results :

Failed tests: 
  TestBalancer.testBalancerWithKeytabs:1571->access$000:116->testUnknownDatanode:975 expected:<0> but was:<-3>
{code}, Thanks Zhe!
Now I recall, the common method {{testUnkonwnDatanode}} is flaky, which turns out to be HDFS-10716. +1 on getting that into branch-2.7. :), Thanks for the pointer Xiao. HDFS-10716 indeed solves the problem.]