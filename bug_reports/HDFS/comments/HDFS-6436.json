[Odd. We aren't seeing this problem.  {{getAuthParameters}} will not encode the token into the uri if it's a get/renew/cancel token operation and instead rely on kerberos credentials.  If you enable debugging or check the jetty logs, do you actually see "delegation=blah" in the query string?  Is hoop or any other intermediate proxy involved?  Are you using a secure client against an insecure server?

I don't agree with the patch.  Please explain how enabling {{UrlConnectionFactory}}'s custom spnego support solves the problem.  The JDK transparently does spnego so the custom spnego implementation is effectively never used.  It's actually been very problematic for us.  The fallback authenticator causes double authentication attempts upon failure, causes sporadic kerberos replay attacks, and potentially causes the JDK to NPE.  For these reasons, I specifically changed the line awhile back that you are reverting.

Note that I should be posting a patch today that removes the use of the problematic (in other ways) TokenAspect, which appears in the stack trace but I'm not sure how it's related.  I'm just waiting on a final bit of integration testing on a live secure cluster., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12645782/HDFS-6436.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6941//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6941//console

This message is automatically generated., Hi Daryn，the {{getAuthParameters}} actually do not encode the token into the uri if it's a get/renew/cancel token operation, it actually rely on kerberos credentials, and i am sure that i am using a secure client against a {{secure server}}. I just forgot to say  that i am using {{HttpFSServer}} as the server, not WebHDFS Server, in debug mode i get this response:
{code:java}Server returned HTTP response code: 401 for URL: http://master75:14000/webhdfs/v1/?op=GETDELEGATIONTOKEN&user.name=bangtao{code}
The JDK did not does spnego transparently, bu when {{UrlConnectionFactory.openConnection(URL url, boolean isSpnego)}}，and set isSpnego true, the {{AuthenticatedURL.openConnection(url, authToken)}} will be called, then it will call {{KerberosAuthenticator.authenticate}}, in this function it will use the same url to send an {{OPTIONS}} request, thus the JDK will do spnego transparently. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12645782/HDFS-6436.patch
  against trunk revision 14e2639.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8024//console

This message is automatically generated., Since jira seems to be rebuilding really old patches, can you please retest and close if necessary?  If still an issue, then it's a httpfs server issue.  The JDK will do spnego w/o isSpnego set to true.  We've been using webhdfs under production workloads for a long time.  Perhaps httpfs server is configured to only initiate spnego upon an OPTIONS request which would be a bug in httpfs server., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12645782/HDFS-6436.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10662/console |


This message was automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | patch |   0m  0s | The patch command could not apply the patch during dryrun. |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12645782/HDFS-6436.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / f1a152c |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10667/console |


This message was automatically generated., Moving bugs out of previously closed releases into the next minor release 2.8.0., Based on [~daryn]'s comments, I'm closing this jira as cannot reproduce for now. Please feel free to reopen it if the issue still exist in trunk / branch-2.]