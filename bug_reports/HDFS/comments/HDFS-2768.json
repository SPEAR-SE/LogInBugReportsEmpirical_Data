[Problem here is EditLogBackupStream is not able to close the proxy.
Corrected in this patch.No tests included, Observed the above logs in TestBackupNode. No error logs with this patch., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12509846/HDFS-2768.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 javadoc.  The javadoc tool appears to have generated 21 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.server.namenode.TestNamenodeCapacityReport
                  org.apache.hadoop.hdfs.server.namenode.TestNameNodeMXBean
                  org.apache.hadoop.hdfs.server.namenode.TestEditLogFileOutputStream

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1767//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/1767//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/1767//artifact/trunk/hadoop-hdfs-project/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1767//console

This message is automatically generated., seems Test failures are unrelated to this path. They are due to time outs of TestBalancer. These tests are passing for me.
{quote}
Running org.apache.hadoop.hdfs.server.balancer.TestBalancer
Running org.apache.hadoop.hdfs.server.namenode.TestNameNodeMXBean
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 1.221 sec <<< FAILURE!
{quote}

findbugs, javadocs also unrelated., Would someone please take a look on this patch.?, The type of backupNode and namenode should be NamenodeProtocol not NamenodeProtocolTranslatorPB right? Otherwise looks great., Thanks a lot Eli, for the review.
Here NamenodeProtocolTranslatorPB  are delegating the calls to it and actual proxy maintained in NamenodeProtocolTranslatorPB class. And also NamenodeProtocol is not a closeable.

infact, the otherway could be to add the instanceOf closeable checks in close and keep the NamenodeProtocol as it is., Eli, I think in BPOfferSevice also we used DatanodeProtocolClientSideTranslatorPB directly instead of DatanodeProtocol. In that class many places already specialized to DatanodeProtocolClientSideTranslatorPB.
Do you think we can change that as well to DatanodeProtocol along with it ? (or) is it ok, as  **TranslatorPBs are mainly delegating calls to actual proxies? , Another way to fix this is to check if the proxy is closeable in RPC.stopProxy(). If it is, just close it. This way we just need to fix the problem in one place instead of multiple ones, e.g., BackupNode, EditLogOutputStream and etc. , @Brandon, Thanks for looking this issue. Please take a look at my previous comment., @Eli, Updated the patch. In this patch, I just moved the namenode connection close section to DFSUtil and reused every where. This patch will address your comment., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12510559/HDFS-2768.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 javadoc.  The javadoc tool appears to have generated 21 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1777//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/1777//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/1777//artifact/trunk/hadoop-hdfs-project/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1777//console

This message is automatically generated., Warnings are not related to this patch!, Hi Uma,

Doesn't seem like classes like BPOfferService need to call DFSUtil.closeConnectionToNamenode, since all the protocol references refer to underling *PB classes that will stop the proxy on close, ie just calling IOUtils#cleanup as they do currently is sufficient (don't need to close and stopProxy).  Ie howabout your latest patch but instead of factoring  closeConnectionToNamenode out of DFSClient keeping that as is (it DFSClient we don't always have a PB class) and just using calls to IOUtils#cleanup instead?

Thanks,
Eli, Hi Eli, Thanks for the review.
The classes like, ClinetProtocol, NamenodeProtocol..etc are not closeables. So, we can't call directly IOUtils.cleanUp. Anyway we need to add the closeable checks.
You mean, just need to remove, RPC.stopProxy invocation? and also no need to re-factor DFSClient#closeConnectionToNamenode to DFSUtil? ( this is re-factored because, i have seen similar piece of code in ConfiguredFailoverProxyProvider also, So, in future we can use this api to close the connection) , I see what you mean. Apologies for the confusion. I'm +1 on your 1st patch (agree test failures are unrelated). We can do refactoring in a separate change if necessary, seems like the PB classes are doing too much (handling both the PB proxying and the closing)., I've committed this. Thanks Uma., Integrated in Hadoop-Common-trunk-Commit #1557 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/1557/])
    HDFS-2768. BackupNode stop can not close proxy connections because it is not a proxy instance. Contributed by Uma Maheswara Rao G.

eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1233584
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java
, Integrated in Hadoop-Hdfs-trunk-Commit #1630 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/1630/])
    HDFS-2768. BackupNode stop can not close proxy connections because it is not a proxy instance. Contributed by Uma Maheswara Rao G.

eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1233584
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #1575 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/1575/])
    HDFS-2768. BackupNode stop can not close proxy connections because it is not a proxy instance. Contributed by Uma Maheswara Rao G.

eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1233584
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java
, Thanks a lot Eli for the review!, Integrated in Hadoop-Hdfs-trunk #931 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/931/])
    HDFS-2768. BackupNode stop can not close proxy connections because it is not a proxy instance. Contributed by Uma Maheswara Rao G.

eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1233584
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java
, Integrated in Hadoop-Mapreduce-trunk #964 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/964/])
    HDFS-2768. BackupNode stop can not close proxy connections because it is not a proxy instance. Contributed by Uma Maheswara Rao G.

eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1233584
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/BackupNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java
, I have merged this to 0.23., Seems this changes has been reverted with HA merge., Seems, this was already fixed in trunk as part of HADOOP-8202]