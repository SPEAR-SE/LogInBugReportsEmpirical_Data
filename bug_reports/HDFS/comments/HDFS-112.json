[Having to change the hosts file for a test is not great.

Perhaps we could instead just alter Java to resolve hostnames differently while testing?

http://forum.java.sun.com/thread.jspa?threadID=729300
, Well, THAT looks like a nice trick (hacking the name resolver in java). I'll have to try it. That would eliminate the need to change the hosts file.

Remember, these are long tests that nobody is currently running anyway. Running them is a deliberate act and you only need to change your hosts file once. 

, Here's the latest on this issue.

I have a new patch that fixes the two main DFS tests. I think it would be crazy for us to move onward without having good DFS tests. 

There is a 'name server' hack in the patch now. The requires the system property "sun.net.spi.nameservice.provider" to be set to "dns,mine".
It is not good enough to just call: 

System.setProperty("sun.net.spi.nameservice.provider.1","dns,mine");

in the code unless you can do it BEFORE anyone else initializes InetAddress.java. JUnit is bad this way so the property must be set in the ant script that calls JUnit. This is in the latest patch.

If you want to call the unit test from eclipse then you will need to pass 
-Dsun.net.spi.nameservice.provider.1=dns,mine
to the jvm. Or, you might define "127.0.0.1 localhost0" through "127.0.0.1 localhost15" in your hosts file and get the same result.

Speaking of build.xml, The definition of the 'test-cluster' target tries to run ANYTHING in the test directory as a unit test - this generates lots of failure messages (e.g. RandomDatum is not a TestCase so it fails). I changed it so that the test-cluster target only runs files of the form "ClusterTest*.java". ToCpp.java, FromCpp.java, and DistributedFSCheck.java are NOT being run. To include them we should either make a new ant target (preferred), or change their name to start with ClusterTest. Or change the ant script.

I changed several constants in the ClusterTest*.java tests to make them run faster. I divided all the timeouts by 10. I removed the 'already existing' file creation test from ClusterTestDFSNamespaceLogging because it fails by timing out and that takes 3 minutes. When we can override LEASE_PERIOD then we can put that test back in. The whole cluster-test target now runs in 4 min.

ClusterTestDFSNamespaceLogging and ClusterTestDFS have VERY similar DFS simulations. As does MiniDfsCluster. I think someone needs to factor-out the dfs sim from all three of these tests.
, patch to fix dfs cluster tests., This JIRA has grown stale over years and needs to be closed. The tests framework has changed considerably since '06.

With the current mini clusters, giving a hosts array is possible for different hostnamed daemons, and by all the tests it carries, it does appear to work alright if you wanna use it for such purposes.]