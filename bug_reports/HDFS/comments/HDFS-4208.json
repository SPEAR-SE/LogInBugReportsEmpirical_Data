[Hi Brandon,

  What about fsync'ed blocks. They may not be in completed state right?

Regards,
Uma, test-patch result:
{noformat}
-1 overall.  
    +1 @author.  The patch does not contain any @author tags.
    +1 tests included.  The patch appears to include 3 new or modified tests.
    +1 javadoc.  The javadoc tool did not generate any warning messages.
    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
    -1 findbugs.  The patch appears to introduce 200 new Findbugs (version 2.0.0) warnings.
{noformat}
This patch doesn't introduce new findbugs warnings., Hi Uma, thanks for reviewing the patch. Yes, fsync'ed blocks may not be in complete state. 
Let me update the JIRA title and description to better clarify the problem., Comments:
# getCompleteBlocksTotal()
#* Should we name this as getSafeBlockCount()?
#* javadoc could be "Get the total number of COMPLETE blocks in the system. The last block of files that are under construction that are zero length are not counted towards the COMPLETE blocks. This avoids newly created blocks that might "
#* Instead of adding assert, we should count under construction blocks only if the inode is not null and is underconstruction. The current code could have class cast exception or NPE and might results in namenode not coming up, in case some weird errors.
#* We should also add to the LOG.info number of safeblocks and total blocks.
# To make the test case more clear, please add safeblock threshold to the configuration.
, Updated the patch to address Suresh's feedbacks., Some minor edits:
# javadoc of the getSafeBlockCount() method:
#* "There are times when blocks are allocated by a client but was never used to" -> "There are times when a block is allocated by a client but is never used to"
#* "NameNode might get stuck in safemode waiting" -> "NameNode might get stuck in safemode in subsequent restart waiting"
#* "last blocks of file under construction" -> "last block of file under construction"
# In the log - "Number of blocks excluded by SafeMode" -> "Number of blocks excluded in safeblock count "
 

, With the above changes +1 for the patch., +1 patch looks good., Thanks a lot for the explanation Brandon. Good catch!
Latest revision looks great to me as well.

Some minor comments adding to Suresh points above, please take care of them in next revision.

- I think we can make getSafeBlockCount as private, as we are not using it anywhere as of now
- typo: numExculdedBlocks --> numExcludedBlocks 
- I am also having a suspect that, When there are no blocks added yet(just create a file), lease path will be there but blocks will be just 0. So, we are having only null check here, do you think we should have length check as well to avoid AIOBE? I did not check this in detail, please have a test and verify once. [ create a file and don't add any blocks, let's be emtry blocks list then restart NN ]

- BTW, please add licence header to test file as you are touching that file anyway.

Regards,
Uma
, nice catch Uma., Thanks folks for the review. I uploaded the patch addressing the new comments., +1 for the patch., I committed the patch to branch-1 and branch-1.1.

Thank you Brandon!, Looks like I committed the wrong version of the patch. I will revert the change and commit the right version of the patch., I committed the correct patch to branch-1., Closed upon successful release of 1.1.2.]