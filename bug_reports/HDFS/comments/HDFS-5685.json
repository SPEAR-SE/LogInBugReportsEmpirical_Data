[Do we know why it can't find the file? Is it because the file is already copied by a failed task?, Looks like it's a Hadoop/MR instead of HDFS issue., I've identified that the problem is in the implementation of DistCp, not because of MR.  It removes file prematurely 
and then try to remove again. Will provide patch soon.

It shows up in DistCp implemented with MR1, and I'm about the examine the DistCp implementation with MR2.
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12620397/HDFS-5685.001.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5792//console

This message is automatically generated., Analysis of the cause of the problem:

When we do distcp from one cluster to another, if the staging area for distcp (specified by config property mapreduce.jobtracker.staging.root.dir, also allled jobDir in the coding) happens to be in the target directory, distcp removes it before doing the copy when calling deleteNonexisting function,
if this staging area dir doesn't exist in the distcp source. The solution is to let distcp be aware of the jobDir it created and filter them out in deleteNonexisting function.

I attempted to create a unit test case for this bug, and found that with the current unit framework, it's not practical. What we need is a real deployment of Hadoop involves standalone jobtracker and tasktracker, and set the staging area to DFS. With the current unit test framework, the staging area can only be at local.

Thanks for reviewing the fix,



, I found the solution for creating unit test cases for this bug, will update the patch a bit later.
, Added unit testcases.
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12620997/HDFS-5685.002.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5808//console

This message is automatically generated., The fix is made on top of branch-1 and it's verified locally. It's not expected to pass the default jenkins test that runs against trunk.
Thanks ahead for reviewing the fix,
 , Hi Yongjun,

Patch looks pretty good to me. A few small comments:

# Do we really need doneFilteringJobDir and doneFilteringJobDirDstLsr? Seems like we could just always do the comparison and simplify the code a bit.
# Should camelCase variable names, not use underscores, e.g. "cmp_job_dir".
# I think this comment is incorrect: "// lsrpath does not exist, delete it if it's not jobDir or jobDir's ancestor". Really you should delete it only if it's "not jobDir or jobDir is its ancestor." I think you have the function call in the code correct, though.
# Can you refactor the test code into a single parameterized method that the two test cases call? Seems like the two test methods are identical except for the source and destination file systems., Hi Aaron,

Thanks a lot for reviewing the change! Some thoughts to share below (1-to-1 correspondence to your comments):

1. The reason that I introduced doneFilteringJobDir and doneFilteringJobDirDstLsr is for performance purpose. If the jobDir is already examined, you don't have to do it for the remaining paths. 
2. I introduced "cmp_job_dir" because I saw another similar existing var "dst_cmp_lsr" in the code neighborhood. I will change the one I introduced.
3. The comment "lsrpath does not exist" meant "lsr path that doesn't exist in source", I added "delete only if it's not jobDir or jobDir's ancestor" for this bug fix. I will make the correction.
4. I had one earlier version that is re-factored, but there are quite a few if-else' in the code, a bit trade-off here. Let me give another attempt to see if it will look better.

, HI Aaron,

I updated a new version with all your comments addressed, except the first one for performance reason. Would you please take a look again? 

Many thanks.
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12621252/HDFS-5685.003.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5817//console

This message is automatically generated., Hi ATM,

Many thanks for the review comments and suggestions. I uploaded a new version. would you please take a look again?  Thanks.
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12621445/HDFS-5685.004.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5824//console

This message is automatically generated., This latest patch looks really good to me, Yongjun. Thanks for making those changes.

Just a few little nits, +1 once these are addressed:

# Looks like you left in an old version of this method signature, commented out: "+  //private void stagingAreaTest(boolean stagingInSrc) throws Exception {"
# In {{stagingAreaTest(...)}}, looks to me like you don't ever use the {{destFiles}} variable. Recommend just calling the function, but dropping the return value.
# Generally in single line comments we put a space after the "{{//}}": "//check if lsrpath is in dst (represented here by dstsorted, which", Thanks a lot Aaron, good catches! just uploaded one version to address them all.
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12621703/HDFS-5685.005.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5829//console

This message is automatically generated., +1, the patch looks good to me. I'm going to commit this momentarily., I've just committed this to branch-1.

Thanks a lot for the contribution, Yongjun., Many thanks Aaron!
]