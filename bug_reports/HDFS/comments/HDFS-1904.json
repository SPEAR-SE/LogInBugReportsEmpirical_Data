[Oh and most importantly. This is happening because I am testing checkpointing. So in my hdfs-site.xml I have:

<configuration>
     <property>
         <name>dfs.replication</name>
         <value>1</value>
     </property>
     <property>
         <name>dfs.name.dir.restore</name>
         <value>false</value>
     </property>
     <property>
         <name>fs.checkpoint.period</name>
         <value>3</value>
     </property>
     <property>
         <name>dfs.namenode.resource.du.reserved</name>
         <value>0</value>
     </property>
</configuration>

(basically creating a checkpoint every 3 seconds. During the creation of the checkpoint is when the SNN crashes.)

I also replicated this on a friend's computer., Great find. I wonder how this got introduced! Would you be able to contribute a unit test and perhaps a fix?, Marking as 0.22 blocker. We should at least triage and see if this issue is in 0.22, Hi Todd,

Thanks for the attention. Were you able to reproduce this? I've only just started developing on Hadoop so I'm kind of curious if its a problem in my environment. I've tested this on atleast 3 other computers (environments).
Changing the interval to 10 seconds (more than the heartbeat interval) doesn't solve the problem. 
Also I might be hallucinating but it seems writing anything into HDFS crashes the SNN. e.g. creating the parent directory and then writing the file into the directory. Which is why I am more inclined to think that its a problem with the environments I am testing on. Can it really be that?

, Hi Ravi. Yes, I'm able to reproduce this on trunk. I wasn't able to repro on branch-0.22, but I'm still trying to figure out what's going on.

If instead of having the secondary node do checkpoints every 3 seconds, I manually start it with "hadoop secondarynamenode -checkpoint force" after each operation, the issue does not occur. So I think it might be related to HDFS-1458, Yes, I've verified that this is due to HDFS-1458. I applied the following change to disable the behavior from that JIRA:

{noformat}
diff --git a/src/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java b/src/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
index 0fc7167..f5bf4fc 100644
--- a/src/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
+++ b/src/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
@@ -348,7 +348,7 @@ public class SecondaryNameNode implements Runnable {
             Collection<File> list;
             File[] srcNames;
             boolean downloadImage = true;
-            if (sig.imageDigest.equals(
+            if (false && sig.imageDigest.equals(
                     checkpointImage.getStorage().imageDigest)) {
               downloadImage = false;
               LOG.info("Image has not changed. Will not download image.");
{noformat}

and cannot reproduce the problem. Good news is that this means it's only on trunk, not 0.22., Just found HDFS-1627 - this might be a duplicate of that.]