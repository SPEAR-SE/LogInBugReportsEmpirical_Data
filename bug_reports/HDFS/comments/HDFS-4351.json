[Fix attached.

Kind of a trivial test case, but it doesn't involve a new MiniDFSCluster so it's cheap. I also took the opportunity to fix the spelling mistake in the testcase name., Sorry for changing the patch again so quickly, but I wanted to make the surrounding comments a bit more clear too., Yeah, we should use an updated numOfReplicas for the chooseTarget when a NotEnoughReplicasException is thrown.
For the current patch, 

{noformat}
// Required since chooseRandom() is passed numOfReplicas by value,
// so it's not updated when returning a partial result
numOfReplicas = oldNumOfReplicas - results.size();
{noformat}
Because the value of the oldNumOfReplicas is set to the initial value of numOfReplicas, the above calculation may be wrong if the initial results list is not empty? Do we need to use "totalReplicasExpected - results.size()" instead?

Besides, for the new testcase, I think maybe it's better to reset AvoidStaleDataNodesForWrite to false in the end (so that it would not affect other possible new testcases added after testChooseTargetWithMoreThanAvailableNodesWithStaleness)?, Thanks for the review Jing! I addressed your comment on the test case in this version of the patch; good catch.

Regarding {{numOfReplicas}}, my reading is that it's the # of additional nodes that need to be added to the results list. I inferred this since {{totalReplicasExpected}} should be constant, and is set to {{numOfReplicas + results.size()}} in {{chooseTarget()}}., bq. Regarding numOfReplicas, my reading is that it's the # of additional nodes that need to be added to the results list. 

Yes. So I think the new numOfReplicas passed into the chooseTarget when a NotEnoughReplicasException is thrown should be calculated based on the change of the number of nodes in the results list. So it can be either "oldNumOfReplicas - (number of new nodes in results)" or "oldNumOfReplicas + (initial number of nodes in results) - (current number of nodes in results)"., Looking at it again, you're right on totalReplicasExpected. Patch now addresses both., Thanks Andrew! +1 pending Jenkins., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12562957/hdfs-4351.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3711//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3711//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12562986/hdfs-4351-4.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3713//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3713//console

This message is automatically generated., Hi Andrew, could you also post a patch for branch-1?, Hi Nicholas, branch-1 patch attached.

I couldn't run the added tests because my branch-1 environment is messed up, but maybe you could give it a spin for me., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12563083/hdfs-4351-branch-1-1.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3717//console

This message is automatically generated., > I couldn't run the added tests because my branch-1 environment is messed up, but maybe you could give it a spin for me.

Sure, Jing or I will test the branch-1 patch., Just wanted to note that I fixed my branch-1 env and the test passes., I also run test-patch for Andrew, and the result looks good:

{noformat}
-1 overall.  

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    -1 findbugs.  The patch appears to introduce 225 new Findbugs (version 2.0.1) warnings.
{noformat}, I have committed this.  Thanks, Andrew!

Also thanks Jing for reviewing and testing the patches., Integrated in Hadoop-trunk-Commit #3181 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3181/])
    HDFS-4351.  In BlockPlacementPolicyDefault.chooseTarget(..), numOfReplicas needs to be updated when avoiding stale nodes.  Contributed by Andrew Wang (Revision 1429653)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1429653
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestReplicationPolicy.java
, Integrated in Hadoop-Yarn-trunk #89 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/89/])
    HDFS-4351.  In BlockPlacementPolicyDefault.chooseTarget(..), numOfReplicas needs to be updated when avoiding stale nodes.  Contributed by Andrew Wang (Revision 1429653)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1429653
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestReplicationPolicy.java
, Integrated in Hadoop-Hdfs-trunk #1278 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1278/])
    HDFS-4351.  In BlockPlacementPolicyDefault.chooseTarget(..), numOfReplicas needs to be updated when avoiding stale nodes.  Contributed by Andrew Wang (Revision 1429653)

     Result = FAILURE
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1429653
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestReplicationPolicy.java
, Integrated in Hadoop-Mapreduce-trunk #1307 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1307/])
    HDFS-4351.  In BlockPlacementPolicyDefault.chooseTarget(..), numOfReplicas needs to be updated when avoiding stale nodes.  Contributed by Andrew Wang (Revision 1429653)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1429653
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestReplicationPolicy.java
]