[This looks very unusual, because the test failed on an assertion that the metrics didn't count any lifeline RPC calls.  However, if there really was an accidental lifeline RPC call, then this is not how the test would fail.  Instead, it would fail on the earlier line that verifies there were no lifeline RPC calls by directly looking at the RPC stub spy.  Maybe this is a race condition specific to the metrics?

I don't have a repro at this point, but I'll keep an eye on it., We just saw another occurrence in a pre-commit run for HDFS-9694.

https://builds.apache.org/job/PreCommit-HDFS-Build/14748/testReport/

The symptoms are the same., Another occurrence in a pre-commit for HDFS-10348
https://builds.apache.org/job/PreCommit-HDFS-Build/15347/testReport/
Posting here just for additional data point., Another precommit failure reported by [~brahmareddy]. https://builds.apache.org/job/PreCommit-HDFS-Build/17551/testReport/, Hi, [~cnauroth]. I looked into this issue.

When building {{MiniDFSCluster}} in the {{setup()}}, the datanode infrequently sends a lifeline. Then, {{lifelineNamenode}} is initialized, but {{LifelinesNumOps}} of the datanode is already 1. I think this is the situation.

We can simulate it by calling {{DataNodeMetrics#addLifeline}} in the {{setup()}}.
{code:java}
// Set up spies on RPC proxies so that we can inject failures.
DataNode dn = cluster.getDataNodes().get(0);
metrics = dn.getMetrics();
metrics.addLifeline(0);
{code}, I think analysis of [~tasanuma0829] makes sense. There is a chance that LifeLineSender sends the lifeline before BPServiceActor sends the heartbeat and postpones the next lifeline.
I think the problem is in {{BPServiceActor#Scheduler}} initial value of {{nextLifelineTime}} is same as {{nextHeartbeatTime}} and its {{monotonicNow()}}, so whichever thread starts first, will send its message. But first Lifeline should atleast wait for {{lifelineIntervalMs}} or {{heartbeatIntervalMs}}, so that heartbeat can go first. When the heartbeat sent successfully, then onwards lifeline messages will be scheduled properly.

So following change in {{BPServiceActor}} would do the needful I hope.
{code}@@ -1063,7 +1068,7 @@ private void sendLifeline() throws IOException {
     volatile long nextHeartbeatTime = monotonicNow();
 
     @VisibleForTesting
-    volatile long nextLifelineTime = monotonicNow();
+    volatile long nextLifelineTime;
 
     @VisibleForTesting
     volatile long lastBlockReportTime = monotonicNow();
@@ -1086,6 +1091,7 @@ private void sendLifeline() throws IOException {
       this.heartbeatIntervalMs = heartbeatIntervalMs;
       this.lifelineIntervalMs = lifelineIntervalMs;
       this.blockReportIntervalMs = blockReportIntervalMs;
+      scheduleNextLifeline(monotonicNow());
     }
 
     // This is useful to make sure NN gets Heartbeat before Blockreport
{code}
, Thanks [~tasanuma0829] and [~vinayrpet] for the great analysis. I think that's the root cause of the failure test. I did the test based the change as [~vinayrpet] commented, the results seemed ok. Hi [~cnauroth], are you preparing to work on this, if not, I am ready to post a patch here., Post a simple patch here, I hope Chris will not mind that since I see this JIRA has been opened for a long time.
Here I have two ways to fix this:

* Delay the {{nextLifelineTime}} time and to let heartbeat sended first.
* Use {{DataNode#setHeartbeatsDisabledForTests(true)}} to disabled the heratbeat in {{setup}} since this also makes sense to disabled lifeline send.

Here I am prefer to use the first way and I think this is enough to fix this. And that's will make the order of sending messages correct. Softly ping [~anu], could you please have a review? Thanks., [~linyiqun] Thanks for providing the patch. Thanks to [~tasanuma0829] and [~vinayrpet] for root causing the issue and suggesting the change that we needed to make.

+1, pending Jenkins.
, +1 (non-binding). Thanks, everyone!, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 27s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  9m 25s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 57s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 32s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  5s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 18s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  8s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 49s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 59s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 50s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 57s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  4s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 46s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}101m  1s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 20s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}124m 48s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |
|   | hadoop.hdfs.TestSecureEncryptionZoneWithKMS |
|   | hadoop.hdfs.TestTrashWithSecureEncryptionZones |
|   | hadoop.metrics2.sink.TestRollingFileSystemSinkWithHdfs |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:a9ad5d6 |
| JIRA Issue | HDFS-9911 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12843138/HDFS-9911.001.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux dc8692af7789 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / e24a923 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/17853/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/17853/testReport/ |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/17853/console |
| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, [~linyiqun], thank you for the analysis and volunteering to take over the patch.  I am reassigning this to you.

I suggest changing this to:

{code}
scheduleNextLifeline(nextHeartbeatTime);
{code}

This would make it consistent with other points in the code where the lifeline time is scheduled relative to the heartbeat time.  It could help avoid confusion if 2 separate calls to {{monotonicNow()}} return 2 different timestamps (one for initialization of {{nextHeartbeatTime}} and the other for {{scheduleNextLifeline}})., Thanks [~anu], [~tasanuma0829] and [~cnauroth] for the review!
{quote}
This would make it consistent with other points in the code where the lifeline time is scheduled relative to the heartbeat time.
{quote}
Agree with this. New patch attached., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 17s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red}  0m  0s{color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 48s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 54s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 31s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  5s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 14s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m  4s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 42s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 49s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 40s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 68m 43s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 18s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 90m 50s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.server.datanode.TestDataNodeUUID |
|   | hadoop.hdfs.TestSecureEncryptionZoneWithKMS |
|   | hadoop.hdfs.TestTrashWithSecureEncryptionZones |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:a9ad5d6 |
| JIRA Issue | HDFS-9911 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12843205/HDFS-9911.002.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux ed3c0265a896 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 72bff19 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/17857/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/17857/testReport/ |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/17857/console |
| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Hi [~anu], [~cnauroth], could you please help do the final commit of patch, I see there are no further comments from others now. Thanks., +1 on patch 2.,  [~cnauroth] Thanks for the code review comments. [~linyiqun] Thank you for the contribution. I have committed this to trunk., SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #11008 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/11008/])
HDFS-9911. TestDataNodeLifeline Fails intermittently. Contributed by (aengineer: rev a95639068c99ebcaefe8b6c4268449d12a6577d6)
* (edit) hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java
, [~linyiqun], thank you for the patch!, Thanks [~anu] for the commit and thanks every one!]