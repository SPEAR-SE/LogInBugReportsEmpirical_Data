[Attaching the html from the jenkins run, which has the complete log, It should be related with the chooseExcessReplicates behavior.
From log:
{code}
2014-07-02 21:23:30,083 INFO  balancer.Balancer (Balancer.java:logNodes(969)) - 0 over-utilized: []
2014-07-02 21:23:30,083 INFO  balancer.Balancer (Balancer.java:logNodes(969)) - 1 above-average: [Source[127.0.0.1:55922, utilization=28.0]]
2014-07-02 21:23:30,083 INFO  balancer.Balancer (Balancer.java:logNodes(969)) - 1 below-average: [BalancerDatanode[127.0.0.1:57889, utilization=16.0]]
2014-07-02 21:23:30,083 INFO  balancer.Balancer (Balancer.java:logNodes(969)) - 0 underutilized: []
The cluster is balanced. Exiting...
{code}
and 
{code}
2014-07-02 21:23:35,413 INFO  hdfs.TestBalancer (TestBalancer.java:runBalancer(381)) - Rebalancing with default ctor.    <--- will call waitForBalancer immediately then.
{code}
we can know that before it should be balanced already. because avgUtilization=0.2, so 0.28 - 0.2 < BALANCE_ALLOWED_VARIANCE which is 0.11, | 0.16 - 0.2 | < BALANCE_ALLOWED_VARIANCE.
but once gone to waitForBalancer, even retry getting a new DN report many times, the new added DN had a small nodeUtilization:0.08, since |0.08 - 02| > 0.11, so after retry then timeout then failed...

From those log we know that node removed a couple of blocks after balancing:
{code}
2014-07-02 21:23:30,136 INFO  BlockStateChange (BlockManager.java:addToInvalidates(1074)) - BLOCK* addToInvalidates: blk_1073741840_1016 127.0.0.1:55922 127.0.0.1:57889 
2014-07-02 21:23:30,136 INFO  BlockStateChange (BlockManager.java:addToInvalidates(1074)) - BLOCK* addToInvalidates: blk_1073741841_1017 127.0.0.1:57889 
2014-07-02 21:23:30,136 INFO  BlockStateChange (BlockManager.java:addToInvalidates(1074)) - BLOCK* addToInvalidates: blk_1073741842_1018 127.0.0.1:57889 
2014-07-02 21:23:34,305 INFO  BlockStateChange (BlockManager.java:invalidateWorkForOneNode(3262)) - BLOCK* BlockManager: ask 127.0.0.1:57889 to delete [blk_1073741840_1016, blk_1073741841_1017, blk_1073741842_1018]
{code}

so the root cause is after balancing, the added block ops will trigger excessReplicates checking, then the removing will change the used space statistic, then failed the testing.

Is there any quick setting for testing could bypass that checking? :), Moving bugs out of previously closed releases into the next minor release 2.8.0.]