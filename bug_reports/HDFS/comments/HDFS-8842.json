[bq. Error is something more serious and usually you could'nt recover easily (like ClassNotFoundError) so it doesn't make much sense to catch an Error

Yes,  but sometimes you may don't want to loose control over the stack for {{Error}} also. So, if there is a intention, it should be OK.

1) {{ShellCommandFencer.java#tryGetPid(..)}}, author may have kept to catch {{Throwable}} for extra safety as he is dealing with reflection. Anyways the return was checked against null & exception is logged. 

2) As mention in the comments by author {{"We don't want to not exit because of an issue with logging"}}, its for extra safety to avoid losing program control for logs.

IMO both the cases are not a problem. So you have any specific scenario/expectation failed due to these code flows?]