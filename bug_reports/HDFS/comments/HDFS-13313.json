[GitHub user glglwty opened a pull request:

    https://github.com/apache/hadoop/pull/355

    HDFS-13313. Fix NullPointerException in FSEditLogOp.toString().

    In some subclasses of FSEditLogOp, toString() uses dot(.) operator on
    some fields. Those fields could be set to null by resetSubFields() and a
    NullPointerException would be thrown in toString(). This patch fixes
    this bug by calling StringBuilder.append(field). Thus "null" would be
    printed in the field=null case, and field.toString() code is properly
    reused to avoid repetition.

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/glglwty/hadoop fix-null-pointer-tostring

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/hadoop/pull/355.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #355
    
----
commit 704f6cbbddac55f59d8ea560d8567d5756a196df
Author: Tianyi Wang <twang@...>
Date:   2018-03-19T19:15:04Z

    HDFS-13313: Fix NullPointerException in FSEditLogOp.toString()
    
    In some subclasses of FSEditLogOp, toString() uses dot(.) operator on
    some fields. Those fields could be set to null by resetSubFields() and a
    NullPointerException would be thrown in toString(). This patch fixes
    this bug by calling StringBuilder.append(field). Thus "null" would be
    printed in the field=null case, and field.toString() code is properly
    reused to avoid repetition.

----
, Github user lqjack commented on a diff in the pull request:

    https://github.com/apache/hadoop/pull/355#discussion_r175741498
  
    --- Diff: hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java ---
    @@ -3826,11 +3826,7 @@ void fromXml(Stanza st) throws InvalidXmlException {
         public String toString() {
           StringBuilder builder = new StringBuilder();
           builder.append("AddCacheDirectiveInfo [");
    -      builder.append("id=" + directive.getId() + ",");
    -      builder.append("path=" + directive.getPath().toUri().getPath() + ",");
    -      builder.append("replication=" + directive.getReplication() + ",");
    -      builder.append("pool=" + directive.getPool() + ",");
    -      builder.append("expiration=" + directive.getExpiration().getMillis());
    +      builder.append(directive);
    --- End diff --
    
    What if directive is null? 
, Github user glglwty commented on a diff in the pull request:

    https://github.com/apache/hadoop/pull/355#discussion_r175872822
  
    --- Diff: hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java ---
    @@ -3826,11 +3826,7 @@ void fromXml(Stanza st) throws InvalidXmlException {
         public String toString() {
           StringBuilder builder = new StringBuilder();
           builder.append("AddCacheDirectiveInfo [");
    -      builder.append("id=" + directive.getId() + ",");
    -      builder.append("path=" + directive.getPath().toUri().getPath() + ",");
    -      builder.append("replication=" + directive.getReplication() + ",");
    -      builder.append("pool=" + directive.getPool() + ",");
    -      builder.append("expiration=" + directive.getExpiration().getMillis());
    +      builder.append(directive);
    --- End diff --
    
    String "null" will be appended to the StringBuilder
, Github user bak12 commented on the issue:

    https://github.com/apache/hadoop/pull/355
  
    J
, Github user andelmad commented on a diff in the pull request:

    https://github.com/apache/hadoop/pull/355#discussion_r177067369
  
    --- Diff: hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java ---
    @@ -3891,22 +3887,8 @@ void fromXml(Stanza st) throws InvalidXmlException {
         @Override
         public String toString() {
    --- End diff --
    
    Null
]