[Attached patch, Please review., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12726137/HDFS-8147.patch
  against trunk revision 76e7264.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10299//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10299//console

This message is automatically generated., I think the problem is that when the Mover schedule the moves DN1 ARCHIVE does not has the block.  When dispatching the blocks, one of them is dispatched successfully but the other will fail.

We already have block.isLocatedOn(target) in isGoodBlockCandidate(..).  So I think the patch may not help.  Could you test it?, Thanks [~szetszwo] for comments

{quote}
I think the problem is that when the Mover schedule the moves DN1 ARCHIVE does not has the block. When dispatching the blocks, one of them is dispatched successfully but the other will fail.
{quote}

Based my understanding Mover will move only one replica for block at a time in one iteration. It will not move all replicas for same block concurrently, thatâ€™s why no chance of conflict in dispatching.	 
{quote}
We already have block.isLocatedOn(target) in isGoodBlockCandidate(..). So I think the patch may not help. Could you test it?
{quote}	

I already test this patch and its working for me.

Yes we have {{block.isLocatedOn(target)}} in {{isGoodBlockCandidate(..)}}, but Mover will not use this API.

After selecting target block, mover will call {{dispatcher.executePendingMove(..)}} and then {{executePendingMove(..)}} directly call  {{p.dispatch()}}.

{code}
public void executePendingMove(final PendingMove p) {
    // move the block
    moveExecutor.execute(new Runnable() {
      @Override
      public void run() {
        p.dispatch();
      }
    });
  }
{code}, > ... Mover will not use this API.

No, Mover does use it.  It calls source.addPendingMove(db, target) to create the PendingMove.
source.addPendingMove(db, target) 
=> target.addPendingMove(block, new PendingMove(this, target)
=> pm.markMovedIfGoodBlock(block, getStorageType())
=> isGoodBlockCandidate(source, target, targetStorageType, block)

If your patch is working, could you add a test to verify it?
, Ooh sorry I missed it...but {{block.isLocatedOn(target)}} always returning false.
{code}
    public synchronized boolean isLocatedOn(L loc) {
      return locations.contains(loc);
    }
{code}
    
The reason is {{locations}} is list of {{Dispatcher#Source}} objects and {{loc}} object of {{StorageGroup}}. So {{contains()}} always return false. It better to override {{equals()}} in StorageGroup. Attached patch with this fix.  

[~szetszwo]
Please review and give your suggestion.
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12726523/HDFS-8147_1.patch
  against trunk revision 8511d80.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 4 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10314//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/10314//artifact/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10314//console

This message is automatically generated., I will fix the findbugs and add test code soon.., > ... So contains() always return false. It better to override equals() in StorageGroup. ...

I see.  Thanks for pointing it out and working on it., >...  It better to override equals() in StorageGroup. ...
I don't think it'll work.
I closed HDFS-8204, and moved the patch of it here. Btw, I think Mover and Balancer should use the same guard {{isGoodBlockCandidate}}, [~walter.k.su] Pls check [~szetszwo] comment, mover will use {{isGoodBlockCandidate}}., Attached new patch, Please review.., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 37s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | javac |   7m 44s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 33s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   3m 59s | The applied patch generated  1  additional checkstyle issues. |
| {color:green}+1{color} | install |   1m 31s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   3m  7s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | native |   3m 18s | Pre-build of native portion |
| {color:green}+1{color} | hdfs tests | 164m 41s | Tests passed in hadoop-hdfs. |
| | | 209m 28s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12727159/HDFS-8147_3.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / b08908a |
| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/10343/artifact/patchprocess/checkstyle-result-diff.txt |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HDFS-Build/10343/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/10343/testReport/ |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10343//console |


This message was automatically generated., - For StorageGroup,
-* hashCode() should use getStorageType() and getDatanodeInfo() to compute hash code since equals(..) uses them.  Using super.hashCode() seems wrong since it is not consistent with equals(..).
-* The equal(..) method can be simplified as below:
{code}
      @Override
      public int hashCode() {
        return getStorageType().hashCode()
            ^ getDatanodeInfo().hashCode();
      }

      @Override
      public boolean equals(Object obj) {
        if (this == obj) {
          return true;
        } else if (obj == null || !(obj instanceof StorageGroup)) {
          return false;
        } else {
          final StorageGroup that = (StorageGroup) obj;
          return this.getStorageType() == that.getStorageType()
              && this.getDatanodeInfo().equals(that.getDatanodeInfo());
        }
      }
{code}
- For Source, we should simply use the super methods, i.e.
{code}
    @Override
    public int hashCode() {
      return super.hashCode();
    }

    @Override
    public boolean equals(Object obj) {
      return super.equals(obj);
    }
{code}
- For the test, why don't you use the same test case described in your description?  The current test case takes a long time since Mover has to try multiple times before exiting., Revised summary and description., [~szetszwo] Thanks for review. 
Fixed review comments and attached new patch, Please review.
, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 37s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | javac |   7m 26s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 34s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   7m 47s | The applied patch generated  1  additional checkstyle issues. |
| {color:green}+1{color} | install |   1m 33s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   3m  4s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | native |   3m 12s | Pre-build of native portion |
| {color:green}+1{color} | hdfs tests | 186m 38s | Tests passed in hadoop-hdfs. |
| | | 234m 50s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12727606/HDFS-8147_4.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / baf8bc6 |
| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/10358/artifact/patchprocess/checkstyle-result-diff.txt |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HDFS-Build/10358/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/10358/testReport/ |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10358/console |


This message was automatically generated., +1 the new patch looks good., I have committed this.  Thanks, surendra!, FAILURE: Integrated in Hadoop-trunk-Commit #7652 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7652/])
HDFS-8147. StorageGroup in Dispatcher should override equals nad hashCode.  Contributed by surendra singh lilhore (szetszwo: rev 416b84354ebcc6f6f23598a5a254e62eb606680d)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/mover/TestMover.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2105 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2105/])
HDFS-8147. StorageGroup in Dispatcher should override equals nad hashCode.  Contributed by surendra singh lilhore (szetszwo: rev 416b84354ebcc6f6f23598a5a254e62eb606680d)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/mover/TestMover.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #164 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/164/])
HDFS-8147. StorageGroup in Dispatcher should override equals nad hashCode.  Contributed by surendra singh lilhore (szetszwo: rev 416b84354ebcc6f6f23598a5a254e62eb606680d)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/mover/TestMover.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #173 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/173/])
HDFS-8147. StorageGroup in Dispatcher should override equals nad hashCode.  Contributed by surendra singh lilhore (szetszwo: rev 416b84354ebcc6f6f23598a5a254e62eb606680d)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/mover/TestMover.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk #907 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/907/])
HDFS-8147. StorageGroup in Dispatcher should override equals nad hashCode.  Contributed by surendra singh lilhore (szetszwo: rev 416b84354ebcc6f6f23598a5a254e62eb606680d)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/mover/TestMover.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #174 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/174/])
HDFS-8147. StorageGroup in Dispatcher should override equals nad hashCode.  Contributed by surendra singh lilhore (szetszwo: rev 416b84354ebcc6f6f23598a5a254e62eb606680d)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/mover/TestMover.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2123 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2123/])
HDFS-8147. StorageGroup in Dispatcher should override equals nad hashCode.  Contributed by surendra singh lilhore (szetszwo: rev 416b84354ebcc6f6f23598a5a254e62eb606680d)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/mover/TestMover.java
]