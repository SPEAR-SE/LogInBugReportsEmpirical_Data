[Since we wanted to avoid locks here, how about throwing FNFE if inode(traversed parent) is null in the second loop of  FSDirectory#getFullPathName? can catch the FNFE in computeReplicationWorkForBlocks specifically and ingnore? [ can check the block collection exist in blocks map or not. if not just skip from List<ReplicationWork>?]. Not sure whether I missed something here....
Thoughts?, Another option might be is, just retun null in such case and if the scrPath is null then return empty targets list. This will anyway will get skipped later while replicating right.., It seems odd that chooseTarget() needs full path. In fact, BlockPlacementPolicyDefault doesn't use srcPath at all.
, Hey Uma (or anyone), could someone please set the "affects versions" field appropriately? I'm not sure which branch you're seeing this issue on.

Thanks in advance., Here is a simple patch to solve this problem., @Kihwal, Agreed. Current implementation of default placement policy not using src path any where. I am not sure about the motivation in that API design, I think one point may be, that users may want to use that src path in their custom placement policy. Since that is exposed placemnet policy, user can write their own policy and plugin. In their implementation they might use that path for some purpose. So, I don't think, we can change that anyway now., I could reproduce this issues with debug points in eclipse. Since this is synchronization issue, I could not add any test for this change., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12568957/HDFS-4482.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.blockmanagement.TestBlockManager

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3963//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3963//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12569303/HDFS-4482.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3971//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3971//console

This message is automatically generated., Hi Uma,

If getFullPathName(..) returns null, we also need to update the code using it.  For example, the code below may throw NPE after the patch.
{code}
//FSNamesystem.listCorruptFileBlocks(String, String[])
          String src = FSDirectory.getFullPathName(inode);
          if (src.startsWith(path)){
{code}, Hi Nicholas, Thanks a lot for taking a look!
Yes, I have seen that. Why I did not add null check there is, the code patch of listCorruptFileBlocks is under read lock already. But we are returning null in second loop check case to ensure if there are any concurrent modifications to inode. But there should not be any concurrency here because this code already in namesystem lock right? am i missing?
{code}
    readLock();
    try {
{code}, I see.  Thanks for the explanation.  Have you also checked that null is also okay for the other use of getFullPathName(..)?  If yes, +1 on the patch., Yes, There is one place I found that, it is getting called without lock from JSP pages. updated the patch with that minor change as well., +1 the new patch looks good.  Thanks, Uma., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12570162/HDFS-4482-1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3989//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3989//console

This message is automatically generated., +1, Changes looks good Uma, Thanks., Thanks a lot, for the reviews Nicholas and Vinay!.
I will commit this patch in some time..., Thanks, Integrated in Hadoop-trunk-Commit #3373 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3373/])
    HDFS-4482. ReplicationMonitor thread can exit with NPE due to the race between delete and replication of same file. Contributed by Uma Maheswara Rao G. (Revision 1448708)

     Result = SUCCESS
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1448708
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
, I have committed this to trunk and branch-2., Integrated in Hadoop-Yarn-trunk #135 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/135/])
    HDFS-4482. ReplicationMonitor thread can exit with NPE due to the race between delete and replication of same file. Contributed by Uma Maheswara Rao G. (Revision 1448708)

     Result = SUCCESS
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1448708
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
, Integrated in Hadoop-Hdfs-trunk #1324 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1324/])
    HDFS-4482. ReplicationMonitor thread can exit with NPE due to the race between delete and replication of same file. Contributed by Uma Maheswara Rao G. (Revision 1448708)

     Result = FAILURE
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1448708
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
, Integrated in Hadoop-Mapreduce-trunk #1352 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1352/])
    HDFS-4482. ReplicationMonitor thread can exit with NPE due to the race between delete and replication of same file. Contributed by Uma Maheswara Rao G. (Revision 1448708)

     Result = SUCCESS
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1448708
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
, FAILURE: Integrated in Hadoop-Hdfs-0.23-Build #715 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/715/])
HDFS-4482. ReplicationMonitor thread can exit with NPE due to the race between delete and replication of same file. Contributed by Uma Maheswara Rao G. (kihwal: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1518834)
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/INode.java
]