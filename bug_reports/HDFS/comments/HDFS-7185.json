[Note that this bug isn't critical because edits continue to get written, and everything functions normally except transferring the fsimage from the standby to the primary prior to finalization.

I think we should consider updating the VERSION file of the NameNode as soon as it is started with the new software and "{{\-rollingUpgrade started}}"  This would avoid the weird situation we're in currently where we're writing edit logs and fsimages with version -59 (or whatever the upgraded, newer version is), but our VERSION is stuck at -55 (the previous, old version).  It is weird to have new edit logs when the VERSION is the old version, right?  Perhaps we can move the old VERSION file to a VERSION.prev which we can restore in the case of rollback.

I also noticed that the VERSION file on the standby namenode somehow changed to -59 (the newer version), even before I invoked {{\-rollingUpgrade finalize}}., Hi Colin, one question is that is the scenario where we hit this exception is only when we have upgraded the SBN with the new version of the software, while still leaving the ANN running with the old bits? If this is the case, to have this exception should be the correct behavior. This is because if we allow a checkpoint to happen at this time, a fsimage written by new bits is uploaded into the ANN, which may not be understood by the old software. Then we cannot normally restart the original ANN until we also upgrade it to the new version., bq. Hi Colin, one question is that is the scenario where we hit this exception is only when we have upgraded the SBN with the new version of the software, while still leaving the ANN running with the old bits?

Both NameNodes have been upgraded., Colin, do you have steps to reproduce the problem?, bq. Colin, do you have steps to reproduce the problem?

{code}
hdfs dfsadmin -rollingUpgrade prepare
kill SbNN
bring up SbNN with new software
fail over Active NN to former standby
kill former Active NN
bring up NN with new software
{code}

all fsimages sent after this point will be rejected.  The standby sends them with the latest fsimage version, and the active rejects them because they're too new (don't match VERSION, perhaps?  I have not looked into that.)

This is fixed when you finalize the upgrade with {{hdfs dfsadmin \-rollingUpgrade finalize}}, I guess this may be the similar issue with HDFS-6601. We should update the VERSION file after {{-rollingUpgrade started}}. Let me do some tests to confirm., This is a valid bug. The cause of the issue is that the ANN does not update the VERSION file for {{-rollingUpgrade started}}, while the SBN may do this while checkpointing. A simple fix may be calling {{FSImage#updateStorageVersion}} when finding the startup option is {{-rollingUpgrade started}} and the layoutversion change., Upload a simple patch to fix. Will do some tests later to verify., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12673502/HDFS-7185.000.patch
  against trunk revision 60f0f6f.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencingWithReplication

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8348//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8348//console

This message is automatically generated., Thanks, Jing.  I like the idea of updating VERSION immediately when the new NameNode is started during rolling upgrade.  But how does this patch handle the rollback case?

I'm curious what the reason was for the old behavior (where {{VERSION}} wasn't updated until {{rollingUpgrade \-finalize}}.  I didn't see any discussion of that on the HDFS-5535 design doc., hmm, in general we should update the VERSION file whenever we change the software version. This thus should include {{rollingUpgrade -started}}, {{rollingUpgrade -rollback}}, and even {{rollingUpgrade -downgrade}}. I will update the patch and do some tests later today., Upload a new patch. The patch overwrites the layoutversion for {{-rollingUpgrade}}. For {{-rollingUpgrade rollback}}, the patch overwrites the layoutversion in {{FSImage#recoverStorageDirs}}. Besides, the patch also fixes a bug for {{-rollingUpgrade downgrade}} so that the rollingUpgradeStatus object is set to null.

I tested the patch in my local cluster and looks like both the checkpoint and rollback can work., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12673811/HDFS-7185.001.patch
  against trunk revision 2a51494.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

        {color:red}-1 release audit{color}.  The applied patch generated 1 release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencingWithReplication

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8366//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8366//artifact/patchprocess/patchReleaseAuditProblems.txt
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8366//console

This message is automatically generated., - I think writing lv in FSImage.recoverStorageDirs(..) may be too early since it is checking each storage directory and some of them may fail.  Then we may end up with some directories updated but not all of them.  How about we change the version check and defer writing lv until the code below?
{code}
+        if (fsImage.getLayoutVersion() != HdfsConstants.NAMENODE_LAYOUT_VERSION
+            && StartupOption.ROLLINGUPGRADE == startOpt) {
+          fsImage.updateStorageVersion();
+        }
{code}

- I think the above code should be more strict:
-* for downgrade, we must have the same versions; otherwise, throw an exception.
-* for started, update lv only if current version is newer than the on-disk version.  If current version is older than the on-disk version, throw an exception.
-* for rollback, update lv only if current version is older than the on-disk version.  If current version is newer than the on-disk version, throw an exception., Thanks Nicholas for the review! Update the patch to address the comments.

Because {{readProperties}} is called in multiple places, to bypass the layoutversion mismatch while rolling rollback, the current patch passes in the startup option to {{readProperties}} and delay the layoutversion check until loading the fsimage.

I will do some more tests in my cluster later., +1 patch looks good.  Thanks!, Update the patch: in {{updateStorageVersionForRollingUpgrade}} we should not check the layout version number for rolling rollback case, because 1) we have done this check before/while loading the fsimage, and 2) we have already used the software's layout version number to set the storage directory's layout version.

I have tested the patch in a 3-node cluster and looks like the rolling upgrade (including rollback) works fine with the patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12674855/HDFS-7185.002.patch
  against trunk revision cdce883.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencingWithReplication
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencing

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8423//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8423//console

This message is automatically generated., After an offline discussion with Nicholas, this 004 patch adds more restrict check for rollingUpgrade rollback. Specifically, we check if the software's layout version is the same with the fsimage's layout version if we're doing rolling rollback., +1 the new patch looks good.  Thanks for the update., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12674875/HDFS-7185.003.patch
  against trunk revision cdce883.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.cli.TestAclCLI
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencingWithReplication
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDNFencing

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8426//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8426//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12674902/HDFS-7185.004.patch
  against trunk revision 0260231.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in .

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8427//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8427//console

This message is automatically generated., I've committed this to trunk, branch-2, and branch-2.6. Thanks for the review and discussion, Nicholas and Colin!, SUCCESS: Integrated in Hadoop-trunk-Commit #6265 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6265/])
HDFS-7185. The active NameNode will not accept an fsimage sent from the standby during rolling upgrade. Contributed by Jing Zhao. (jing9: rev 18620649f96d9e378fb7ea40de216284a9d525c7)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSImageWithSnapshot.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #713 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/713/])
HDFS-7185. The active NameNode will not accept an fsimage sent from the standby during rolling upgrade. Contributed by Jing Zhao. (jing9: rev 18620649f96d9e378fb7ea40de216284a9d525c7)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSImageWithSnapshot.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1903 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1903/])
HDFS-7185. The active NameNode will not accept an fsimage sent from the standby during rolling upgrade. Contributed by Jing Zhao. (jing9: rev 18620649f96d9e378fb7ea40de216284a9d525c7)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSImageWithSnapshot.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1928 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1928/])
HDFS-7185. The active NameNode will not accept an fsimage sent from the standby during rolling upgrade. Contributed by Jing Zhao. (jing9: rev 18620649f96d9e378fb7ea40de216284a9d525c7)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSImageWithSnapshot.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorage.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
]