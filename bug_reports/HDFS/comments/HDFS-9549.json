[From the log (https://builds.apache.org/job/Hadoop-Hdfs-trunk/2621/testReport/junit/org.apache.hadoop.hdfs.server.namenode/TestCacheDirectives/testExceedsCapacity/),
it is weird because pending cache can only be added by CacheManager.addNewPendingCached(), but the log did not show any pending cached added., Thanks a lot [~jojochuang] for reporting the issue. I'm working on it., This one is a bit tricky to me. IIUC:

- {{testExceedsCapacity}} waits for DNs to reach their cache capacity, then verify that there's no {{pendingCached}} left.
- Test fails because, although {{CacheReplicationMonitor#addNewPendingCached}} checks remaining bytes before adding, it's possible that datanode can have a pending to become cached on the {{CachingTask}} thread, which is no longer pending but not counted as cacheUsed yet. Then a new block will be added as {{pendingCached}}, which eventually will not succeed since the capacity is reached. (I'll attach a log I used to analyze this, 1073741826 is the one already transitioned to cached, and 1073741841 is the one that's been added later and never succeeded. I have a {{waitFor}} when getting this log, so the end of the log is just repeating and can be ignored)
- Given the above root cause, fixing it in {{CacheReplicationMonitor#addNewPendingCached}} would be difficult without some synchronization. Instead, I took another approach, to conditionally remove the extra blocks if a DN don't have enough resident to fit it in {{CacheReplicationMonitor#rescanCachedBlockMap}}. I understand that would make the scan slower, so I combined that with the current iteration  of {{pendingCached}}, hoping to minimize the impact.

[~andrew.wang] and [~cmccabe], could you please review? Thanks!, Below is the excerpt from the log, HTH.
{noformat}
-- cached initially 1073741826 --
2016-02-11 10:58:47,656 INFO  datanode.DataNode (BPOfferService.java:processCommandFromActive(671)) - DatanodeCommand action: DNA_CACHE for BP-92343436-localhost-1455217122700 of [1073741826, 1073741828, 1073741829, 1073741834]
2016-02-11 10:58:47,669 DEBUG impl.FsDatasetCache (FsDatasetCache.java:run(486)) - Successfully cached 1073741826_BP-92343436-localhost-1455217122700.  We are now caching 4096 bytes in total.
2016-02-11 10:58:47,673 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(984)) - Added block {blockId=1073741826, replication=1, mark=false} to CACHED list.
2016-02-11 10:58:47,674 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(988)) - Removed block {blockId=1073741826, replication=1, mark=false} from PENDING_CACHED list.
2016-02-11 10:58:47,674 DEBUG namenode.CacheManager (CacheManager.java:processCacheReport(953)) - Processed cache report from DatanodeRegistration(127.0.0.1:54112, datanodeUuid=1f194c3a-3103-467e-a239-6258d71785a9, infoPort=54114, infoSecurePort=0, ipcPort=54115, storageInfo=lv=-56;cid=testClusterID;nsid=513491009;c=1455217122700), blocks: 1, processing time: 2 msecs

-- innocent 1073741841 added --
2016-02-11 10:58:47,758 ERROR blockmanagement.CacheReplicationMonitor (CacheReplicationMonitor.java:addNewPendingCached(699)) - Adding Block 1073741841: DataNode 1f194c3a-3103-467e-a239-6258d71785a9 because the block has size 4096, but the DataNode only has 4096 bytes of cache remaining (-12288 pending bytes, 16384 already cached.)
2016-02-11 10:58:47,759 TRACE blockmanagement.CacheReplicationMonitor (CacheReplicationMonitor.java:addNewPendingCached(711)) - Block 1073741841: added to PENDING_CACHED on DataNode 1f194c3a-3103-467e-a239-6258d71785a9
2016-02-11 10:58:48,661 INFO  datanode.DataNode (BPOfferService.java:processCommandFromActive(671)) - DatanodeCommand action: DNA_CACHE for BP-92343436-localhost-1455217122700 of [1073741828, 1073741829, 1073741834, 1073741841]
2016-02-11 10:58:48,667 WARN  impl.FsDatasetCache (FsDatasetCache.java:run(441)) - Failed to cache 1073741841_BP-92343436-localhost-1455217122700: could not reserve 4096 more bytes in the cache: dfs.datanode.max.locked.memory of 16384 exceeded.
2016-02-11 10:58:48,666 DEBUG impl.FsDatasetCache (FsDatasetCache.java:cacheBlock(309)) - Initiating caching for Block with id 1073741841, pool BP-92343436-localhost-1455217122700
2016-02-11 10:58:48,668 DEBUG impl.FsDatasetCache (FsDatasetCache.java:run(499)) - Caching of 1073741841_BP-92343436-localhost-1455217122700 was aborted.  We are now caching only 16384 bytes in total.

-- eventually, 1073741841 fails forever --
2016-02-11 10:58:50,670 DEBUG impl.FsDatasetCache (FsDatasetCache.java:cacheBlock(309)) - Initiating caching for Block with id 1073741841, pool BP-92343436-localhost-1455217122700
2016-02-11 10:58:50,670 WARN  impl.FsDatasetCache (FsDatasetCache.java:run(441)) - Failed to cache 1073741841_BP-92343436-localhost-1455217122700: could not reserve 4096 more bytes in the cache: dfs.datanode.max.locked.memory of 16384 exceeded.
2016-02-11 10:58:50,672 DEBUG impl.FsDatasetCache (FsDatasetCache.java:run(499)) - Caching of 1073741841_BP-92343436-localhost-1455217122700 was aborted.  We are now caching only 16384 bytes in total.
 ....

-- and cache reports show this --
2016-02-11 10:58:49,675 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(966)) - Cache report from datanode 127.0.0.1:54112 has block 1073741826
2016-02-11 10:58:49,675 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(984)) - Added block {blockId=1073741826, replication=1, mark=false} to CACHED list.
2016-02-11 10:58:49,675 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(966)) - Cache report from datanode 127.0.0.1:54112 has block 1073741829
2016-02-11 10:58:49,676 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(984)) - Added block {blockId=1073741829, replication=1, mark=false} to CACHED list.
2016-02-11 10:58:49,676 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(988)) - Removed block {blockId=1073741829, replication=1, mark=false} from PENDING_CACHED list.
2016-02-11 10:58:49,676 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(966)) - Cache report from datanode 127.0.0.1:54112 has block 1073741828
2016-02-11 10:58:49,676 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(984)) - Added block {blockId=1073741828, replication=1, mark=false} to CACHED list.
2016-02-11 10:58:49,676 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(988)) - Removed block {blockId=1073741828, replication=1, mark=false} from PENDING_CACHED list.
2016-02-11 10:58:49,677 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(966)) - Cache report from datanode 127.0.0.1:54112 has block 1073741834
2016-02-11 10:58:49,677 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(984)) - Added block {blockId=1073741834, replication=1, mark=false} to CACHED list.
2016-02-11 10:58:49,677 TRACE namenode.CacheManager (CacheManager.java:processCacheReportImpl(988)) - Removed block {blockId=1073741834, replication=1, mark=false} from PENDING_CACHED list.
{noformat}, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 12s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 11s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 46s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 48s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 22s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 57s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 16s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 8s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 10s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 53s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 49s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 42s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 42s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 40s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 40s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 18s {color} | {color:red} hadoop-hdfs-project/hadoop-hdfs: patch generated 1 new + 10 unchanged - 1 fixed = 11 total (was 11) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 55s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 11s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 18s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 9s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 49s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 55m 44s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 50m 45s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.7.0_95. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 20s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 132m 28s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.fs.TestHdfsNativeCodeLoader |
|   | hadoop.hdfs.server.datanode.TestBlockScanner |
| JDK v1.7.0_95 Failed junit tests | hadoop.fs.TestHdfsNativeCodeLoader |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12787596/HDFS-9549.01.patch |
| JIRA Issue | HDFS-9549 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 2595a0f3039d 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 8fdef0b |
| Default Java | 1.7.0_95 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_72 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |
| findbugs | v3.0.0 |
| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/14471/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/14471/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_72.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/14471/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/14471/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_72.txt https://builds.apache.org/job/PreCommit-HDFS-Build/14471/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |
| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/14471/testReport/ |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Max memory used | 77MB |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/14471/console |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, This is a good find, [~xiaochen].  So, the root of the issue here is that we can have a block which is "pending cached" forever on a DataNode that we already know does not have space to cache any more blocks.  The patch you posted adds a loop for every block that is pending to be cached on any datanodes, to check for this condition.  Rather than doing that, it would be simpler and more efficient to just loop over all datanodes and make sure that pendingCached only contained blocks that we could realistically hope to cache, given the current values for {{DatanodeInfo#cacheCapacity}} and {{DatanodeInfo#cacheUsed}}., Thank you for the comment, and nicely summarizing the root cause [~cmccabe]! You definitely summarized it better than I did. :)
bq. Rather than doing that, it would be simpler and more efficient to just loop over all datanodes and make sure that pendingCached only contained blocks that we could realistically hope to cache
Could you further explain this? IIUC you're proposing to add the remove logic into DN's thread, instead of the {{CacheReplicationMonitor#rescanCachedBlockMap}}? I think there're 2 things we want to remove - the block from DN's pendingCached block, and the DN from {{cachedBlocks}}'s pendingCached list in the cache manager.
In the remove code, that's 
{code}
          datanode.getPendingCached().remove(cblock);    // remove from the DN
          iter.remove();      // remove the DN from the list of pendingCached DNs of that block from the cache manager.
{code}
I didn't find how to remove the latter in a DN context. Please advice. Thanks again!, I have talked with Colin offline, and my comment above misinterpreted his intent. He just meant to have the similar fix in a more optimized way. Sorry I misunderstood earlier. 

Patch 2 attached tries to remove the pendingCached blocks by first going through DNs, and ignoring the DNs that's not reached capacity watermark. 
The watermark is hardcoded - IMHO configuration would be an overkill.

One thing I think worth mentioning is that, due to the nature of the race, it is also possible that a block is in fact {{CACHED}}, but not yet removed from {{PENDING_CACHED}}. If the DN is beyond watermark, we may remove that early due to the added logic. I don't think we need special handling on that, since the state is still correct, just the removal happens in CRM instead of cache reporting., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 9s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 14s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 44s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 45s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 22s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 55s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 13s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 2s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 12s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 54s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 48s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 40s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 40s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 42s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 42s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 20s {color} | {color:red} hadoop-hdfs-project/hadoop-hdfs: patch generated 2 new + 59 unchanged - 0 fixed = 61 total (was 59) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 52s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 12s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 8s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 55s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 60m 3s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 54m 44s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.7.0_95. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 21s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 141m 41s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.hdfs.server.namenode.ha.TestHAAppend |
| JDK v1.7.0_95 Failed junit tests | hadoop.hdfs.qjournal.client.TestQuorumJournalManager |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12788544/HDFS-9549.02.patch |
| JIRA Issue | HDFS-9549 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 74aa5b7ae0e6 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 8ab7658 |
| Default Java | 1.7.0_95 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_72 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |
| findbugs | v3.0.0 |
| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/14536/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/14536/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_72.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/14536/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/14536/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_72.txt https://builds.apache.org/job/PreCommit-HDFS-Build/14536/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |
| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/14536/testReport/ |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/14536/console |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Patch 3 fixes checkstyle warnings.
[~cmccabe], could you take another look? Thanks a lot!, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 17s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 27s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 52s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 46s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 22s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 56s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 14s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 59s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 16s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 2m 0s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 50s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 52s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 52s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 43s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 43s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 19s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 55s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 13s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 16s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 18s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 57s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 80m 42s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 102m 22s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.7.0_95. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 35s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 211m 31s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.hdfs.server.namenode.ha.TestHAMetrics |
|   | hadoop.hdfs.server.blockmanagement.TestBlockManager |
|   | hadoop.hdfs.security.TestDelegationTokenForProxyUser |
|   | hadoop.hdfs.TestFileAppend |
|   | hadoop.hdfs.TestRollingUpgrade |
|   | hadoop.hdfs.server.namenode.ha.TestDFSUpgradeWithHA |
|   | hadoop.hdfs.server.datanode.fsdataset.impl.TestLazyPersistReplicaRecovery |
| JDK v1.7.0_95 Failed junit tests | hadoop.hdfs.server.namenode.ha.TestEditLogTailer |
|   | hadoop.hdfs.TestPersistBlocks |
|   | hadoop.hdfs.TestFileAppend |
|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |
|   | hadoop.hdfs.server.datanode.TestBlockReplacement |
|   | hadoop.hdfs.server.datanode.TestDirectoryScanner |
| JDK v1.7.0_95 Timed out junit tests | org.apache.hadoop.hdfs.TestLeaseRecovery2 |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12788582/HDFS-9549.03.patch |
| JIRA Issue | HDFS-9549 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux aa759661926e 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 8ab7658 |
| Default Java | 1.7.0_95 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_72 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/14539/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_72.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/14539/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/14539/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_72.txt https://builds.apache.org/job/PreCommit-HDFS-Build/14539/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |
| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/14539/testReport/ |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/14539/console |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks, [~xiaochen].

{code}
      if (dn.getCacheRemainingPercent() > watermark
          || dn.getPendingCached().isEmpty()) {
        continue;
      }
{code}
I can see why you want to do this, but it isn't quite correct.  We could have 10% of our DN's cache remaining, but a really big uncacheable block in its pending_cached list.  I would say just start with the current cacheUsed that the DN has reported in its latest heartbeat and keep adding to it as you add pendingCached blocks.  Drop any pendingCached blocks which would cause it to exceed cacheCapacity.  Perhaps we can optimize this more later (like by keeping a running total of pending cached), but for now that should make it correct., Thank you [~cmccabe].
You're right, I should not have made such assumption. Patch 4 attached to just calculate the remaining. I agree this should be sufficient for now, since we're only looping through the DNs., Patch 4 seems never triggered jenkins. Reattaching., hm, the latest run failed with seemingly env issues:
{noformat}
Build step 'Execute shell' marked build as failure
ERROR: Publisher 'Archive the artifacts' failed: no workspace for PreCommit-HDFS-Build #14557
ERROR: H3 is offline; cannot locate jdk-1.8.0
[description-setter] Description set: HDFS-9549
ERROR: Publisher 'Publish JUnit test result report' failed: no workspace for PreCommit-HDFS-Build #14557
Finished: FAILURE
{noformat}
https://builds.apache.org/job/PreCommit-HDFS-Build/14557/
Reattaching the same patch 4..., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 13s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green} 0m 0s {color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 6m 36s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 39s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 40s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 20s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 50s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 14s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 1m 55s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 6s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 45s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 45s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 38s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 38s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 38s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 38s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 19s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 48s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 11s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 5s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 0s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 47s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 54m 1s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.8.0_72. {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 51m 26s {color} | {color:green} hadoop-hdfs in the patch passed with JDK v1.7.0_95. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 22s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 130m 14s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.hdfs.TestDatanodeRegistration |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12789028/HDFS-9549.04.patch |
| JIRA Issue | HDFS-9549 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux c8b3abd20e66 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 3fab885 |
| Default Java | 1.7.0_95 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_72 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/14562/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_72.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/14562/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_72.txt |
| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/14562/testReport/ |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/14562/console |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Last jenkins succeeded, failed test looks unrelated.
[~cmccabe], may I ask you for another review? Thank you., +1.  Thanks, [~xiaochen]., Committed to 2.8, thanks!, Thank you so much [~cmccabe] for the patient reviews / offline talks and the commit!, FAILURE: Integrated in Hadoop-trunk-Commit #9352 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/9352/])
HDFS-9549. TestCacheDirectives#testExceedsCapacity is flaky (Xiao Chen (cmccabe: rev 211c78c09073e5b34db309b49d8de939a7a812f5)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestCacheDirectives.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CacheReplicationMonitor.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
]