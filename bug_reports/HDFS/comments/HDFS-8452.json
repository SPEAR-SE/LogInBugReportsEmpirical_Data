[ can you please try with {{overwrite=true}}..? like below
{noformat}
curl -i -X PUT -L "http://host1:50070/webhdfs/v1/new1?op=MKDIRS&overwrite=true" {noformat}, Hi Brahma ,Thanks for your reply , 
even with overwrite=true,the same will be returned 


HTTP/1.1 200 OK
Cache-Control: no-cache
Expires: Thu, 21 May 2015 15:31:14 GMT
Date: Thu, 21 May 2015 15:31:14 GMT
Pragma: no-cache
Content-Type: application/json
Transfer-Encoding: chunked, Hi Brahma ,Thanks for your reply , 
even with overwrite=true,the same will be returned 


HTTP/1.1 200 OK
Cache-Control: no-cache
Expires: Thu, 21 May 2015 15:31:14 GMT
Date: Thu, 21 May 2015 15:31:14 GMT
Pragma: no-cache
Content-Type: application/json
Transfer-Encoding: chunked, The behavior is expected. in HDFS {{mkdirs()}} is an idempotent operation, meaning executing multiple {{mkdirs()}} for the same directory will succeed., Are you sure that's true [~wheat9]?
https://hadoop.apache.org/docs/current2/hadoop-project-dist/hadoop-common/filesystem/filesystem.html 
{noformat}  if exists(FS, p) and not isDir(FS, p) :
     raise [ParentNotDirectoryException, FileAlreadyExistsException, IOException]{noformat}, Actually you are right! The exception should be raised only if one of the paths is a file (and not a directory), {{mkdirs()}} in HDFS is idempotent. Looks like we have a bug in the documentation. Please feel free to file a separate jira to address that.,         I have some queries regarding the same ., Iam confused with the” idempotent operation” as both are client side request to the server.,

a.	CLI :
1.	If this is an Idempotent Operation when same file name is given it is returning 1 ,ideally it should return 0 . 
2.	Check the documentation : http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-common/FileSystemShell.html#mkdir
  Exit Code:Returns 0 on success and -1 on error.

Query : a. Ideally -1 should return but in CLI 1 will get return for error message  
                b. if it is Idempotent function why error is there, I feel it should be consistent .
b.	Rest API : 
1.	Your comments  “ It should not overwrite ,should throw exception when any file is there inside folder”
https://hadoop.apache.org/docs/current2/hadoop-project-dist/hadoop-common/filesystem/filesystem.html
  if exists(FS, p) and not isDir(FS, p) :
     raise [ParentNotDirectoryException, FileAlreadyExistsException, IOException]

2.	I tried this scenario also ,but still the same 200 will be returned , no exception will be thrown, so the condition mentioned about for file is not working .Its overwriting but files still exists inside that folder.

3.	I didn’t get which document is not proper and where it needs to be changed ,the comment by Haohui Mai 

Please clarify me the above.
, please clarify on the above comments. , {quote}
1.	If this is an Idempotent Operation when same file name is given it is returning 1 ,ideally it should return 0 . 
2.	Check the documentation : http://hadoop.apache.org/docs/current/hadoop-project-dist/hadoop-common/FileSystemShell.html#mkdir
Exit Code:Returns 0 on success and -1 on error.
{quote}

Please do not confuse the {{mkdir()}} utility in the FSShell with the {{mkdirs()}} operation in HDFS. The utility checks whether the file exists to make its behavior closer to the POSIX one. The {{mkdirs()}} operation, however, is designed to be idempotent to simplify the process of handling failures. The {{mkdirs()}} operation in WebHDFS has the same semantic of the one in HDFS., Ok , Got you Haohui Mai ,Thanks for your clarification., FWIW {{java.io.File.mkdirs()}} doesn't throw an error if the destination exists and is a file; it returns 0 if there was anything at the path, be it file, directory or some OS-specific thing.

{{RawLocalFS() adds a check for the destination existing as something other than a dir, though there's a small race condition with the check and the dir creation being separate}}]