[I was looking into this yesterday. The issue is that we're calling it with a mock DataNode object in the test, but the mock isn't told what to return.

We need an Answer interface to use in this test that just returns the passed in block., I have that patch which fixes NPE issue, but I still see two testcases failing on the assertion in the same line where NPE used to happen., Looking somewhat more into this I see in a debugger that {{reply.getNumBytes()}} is 6000 {{newBlock.getNumBytes()}} is only 5000 (as set in the test class). So they are different which causes assertion to happen.

{noformat}
        if(rState == bestState) {
          minLength = Math.min(minLength, r.rInfo.getNumBytes());
          participatingList.add(r);
        }
{noformat}

The difference is set by the code above, apparently. I am not that well familiar with recovery process in particular, but it seems like there are some issues with this part of the code. Thoughts?
, With the patch only these two cases testRBWReplicas & testRWRReplicas keep failing., I'd suggest to commit and close NPE issue with this patch. For the failing tests we can open a separate one., Your fix caused the problem with testRBWReplicas & testRWRReplicas.
You mocked {{InterDatanodeProtocol.updateReplicaUnderRecovery(oldBlock, recoveryId, newLen)}} to return the {{oldBlock}}.
But {{updateReplicaUnderRecovery()}} is supposed to update the old replica with the {{newGS=recoveryId}} and {{newLen}}.
Good thing DataNode assert caught you., Oh, and there is a redundant import org.mockito.Matchers, This patch should be able to fix the problem., Thanks Hirong - all test cases are passing for me. I''l run the validation and will commit the patch if everything is Ok.

+1 on the patch., {noformat}
-1 overall.  

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    -1 release audit.  The applied patch generated 97 release audit warnings (more than the trunk's current 1 warnings).

    +1 system test framework.  The patch passed system test framework compile.
{noformat}

97 warnings are addressed by HDFS-1511. I'm going to commit this shortly., I have just committed it. Thanks Hairong!, This fix has been mistakenly [merged into branch-0.21|http://svn.apache.org/viewcvs?view=rev&rev=1042518]. It has been reversed., Integrated in Hadoop-Hdfs-trunk #643 (See [https://builds.apache.org/hudson/job/Hadoop-Hdfs-trunk/643/])
    , Integrated in Hadoop-Hdfs-22-branch #35 (See [https://builds.apache.org/hudson/job/Hadoop-Hdfs-22-branch/35/])
    ]