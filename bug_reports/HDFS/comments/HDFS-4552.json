[For these kind of issues, can you first ask a question on the user mailing list and file a Jira only when it is confirmed as a bug?, Sorry, I was unaware of the procedures. I will send a mail to user mailing list.
Thank you., Hello, [~shubhangi].

The reason for this problem is that Hadoop 2 started using wildcard syntax in the output of {{hadoop classpath}}.  Hadoop 1 used the full path to every jar without wildcards.  Unfortunately, Java does not expand the wildcards automatically when launching an embedded JVM via JNI, so your existing script may have stopped working.

In Hadoop 2.6.0, I shipped an enhancement to the {{hadoop classpath}} command in issue HADOOP-10903.  It now accepts command line arguments that expand all of the wildcards for you, or bundle the whole classpath into a jar file's manifest (very helpful on Windows, where our classpath can blow past the maximum command line length of 8191).  The new command line arguments are documented here:

http://hadoop.apache.org/docs/r2.6.0/hadoop-project-dist/hadoop-common/CommandsManual.html#classpath

I expect this gives you what you need to restore the functionality of your script, so I'm going to resolve this as a duplicate of HADOOP-10903.  Thank you!]