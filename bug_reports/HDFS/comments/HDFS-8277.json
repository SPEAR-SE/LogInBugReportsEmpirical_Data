[can you please try using following

 {code} hdfs dfsadmin -fs hdfs://<NN-IP>:<RPCPORT> -safemode enter{code}

 *Note :*  NN-IP can be standby or Active IP., Ah, I have both back up now so this command works regardless, won't be a great test.

Perhaps this should be labelled improvement instead of bug since other hdfs commands do auto-failover for HA setups., I would like to work on this. I will update the status soon, 
In {{DFSAdmin.java}} class {{setSafeMode()}} API will iterate on NN proxy list and one by one set NN in safe mode. 
If first namenode connection is failed then it will come out from loop.
{code}
     for (ProxyAndInfo<ClientProtocol> proxy : proxies) {
        ClientProtocol haNn = proxy.getProxy();
        boolean inSafeMode = haNn.setSafeMode(action, false);
        if (waitExitSafe) {
          inSafeMode = waitExitSafeMode(haNn, inSafeMode);
        }
        System.out.println("Safe mode is " + (inSafeMode ? "ON" : "OFF")
            + " in " + proxy.getAddress());
      }
{code}

Here we should catch the connection exception and continue for next NN., Attached patch , Please review..., [~surendrasingh] Thanks for working on this.. Patch LGTM,+1 ( non binding)..., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 35s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | javac |   7m 27s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 35s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   7m 48s | The applied patch generated  1  additional checkstyle issues. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   3m  2s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | native |   3m 15s | Pre-build of native portion |
| {color:green}+1{color} | hdfs tests | 165m 38s | Tests passed in hadoop-hdfs. |
| | | 213m 53s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12729103/HDFS-8277_1.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 8f82970 |
| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/10452/artifact/patchprocess/checkstyle-result-diff.txt |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HDFS-Build/10452/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/10452/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf902.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10452/console |


This message was automatically generated., Attached new patch with test case, Please review, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 52s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | javac |   8m 15s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  11m  7s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 25s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   4m 57s | There were no new checkstyle issues. |
| {color:green}+1{color} | install |   1m 56s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 41s | The patch built with eclipse:eclipse. |
| {color:red}-1{color} | findbugs |   3m 37s | The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | native |   3m 44s | Pre-build of native portion |
| {color:red}-1{color} | hdfs tests | 166m 39s | Tests failed in hadoop-hdfs. |
| | | 216m 18s | |
\\
\\
|| Reason || Tests ||
| FindBugs | module:hadoop-hdfs |
|  |  Class org.apache.hadoop.hdfs.DataStreamer$LastException is not derived from an Exception, even though it is named as such  At DataStreamer.java:from an Exception, even though it is named as such  At DataStreamer.java:[lines 177-201] |
| Failed unit tests | hadoop.hdfs.server.namenode.snapshot.TestSnapshot |
|   | hadoop.hdfs.TestMultiThreadedHflush |
|   | hadoop.hdfs.qjournal.TestSecureNNWithQJM |
|   | hadoop.hdfs.TestQuota |
|   | hadoop.hdfs.TestDFSClientRetries |
|   | hadoop.hdfs.TestFileLengthOnClusterRestart |
|   | hadoop.hdfs.server.namenode.TestDeleteRace |
|   | hadoop.hdfs.TestReplaceDatanodeOnFailure |
|   | hadoop.hdfs.tools.TestDFSAdminWithHA |
|   | hadoop.hdfs.TestClose |
| Timed out tests | org.apache.hadoop.hdfs.TestDataTransferProtocol |
|   | org.apache.hadoop.hdfs.TestClientProtocolForPipelineRecovery |
|   | org.apache.hadoop.hdfs.tools.offlineEditsViewer.TestOfflineEditsViewer |
|   | org.apache.hadoop.hdfs.server.namenode.TestNamenodeRetryCache |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12729456/HDFS-8277_2.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / e89fc53 |
| Findbugs warnings | https://builds.apache.org/job/PreCommit-HDFS-Build/10476/artifact/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HDFS-Build/10476/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/10476/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10476/console |


This message was automatically generated., Fixed test case failure, attached new patch.

Please review ., (!) The patch artifact directory has been removed! 
This is a fatal error for test-patch.sh.  Aborting. 
Jenkins (node H3) information at https://builds.apache.org/job/PreCommit-HDFS-Build/10771/ may provide some hints., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 41s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 27s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 40s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:red}-1{color} | checkstyle |   2m 13s | The applied patch generated  3 new checkstyle issues (total was 587, now 587). |
| {color:red}-1{color} | whitespace |   0m  0s | The patch has 1  line(s) that end in whitespace. Use git apply --whitespace=fix. |
| {color:green}+1{color} | install |   1m 32s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   3m  5s | The patch does not introduce any new Findbugs (version 2.0.3) warnings. |
| {color:green}+1{color} | native |   3m 14s | Pre-build of native portion |
| {color:red}-1{color} | hdfs tests | 169m  7s | Tests failed in hadoop-hdfs. |
| | | 212m  0s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.tracing.TestTraceAdmin |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12730903/HDFS-8277_4.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 185e63a |
| checkstyle |  https://builds.apache.org/job/PreCommit-HDFS-Build/10835/artifact/patchprocess/diffcheckstylehadoop-hdfs.txt |
| whitespace | https://builds.apache.org/job/PreCommit-HDFS-Build/10835/artifact/patchprocess/whitespace.txt |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HDFS-Build/10835/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/10835/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf900.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10835/console |


This message was automatically generated., Failed unit tests and check-style not related to this patch.., Need to think about this for a bit. I am not sure what was the contract around safe mode and HA. Succeeding the command if just one NN is transitioned successfully may lead to an unpredictable state if the other NN comes back and there is a failover for any reason. Looks like safe mode is not logged in the edit log either.

Perhaps someone with more knowledge of the expected contract can chime in.

In any case thanks for reporting this [~harisekhon] and the proposed fix [~surendrasingh].

, Thanks [~arpitagarwal] for looking in to this issue.

bq.  if the other NN comes back and there is a failover for any reason.

Same problem will come if both NN in safe mode and one namenode got restarted.

I think restart case we should handle in new Jira, but here safe mode command should not fail if one NN is down., bq. Same problem will come if both NN in safe mode and one namenode got restarted.
Agreed, and this is is because the manual safe mode transition is not logged in the edit log. That choice could have been intentional but it looks like the wrong choice in an HA setup. If it had been logged we would only have to contact the active NN. I agree your patch did not introduce this problem however I'd like to at least understand the reason for the original choice before changing any more behavior.

Surendra, feel free to kick off a thread on the dev mailing list. Also I'll ask someone with more background offline and post my findings here., I think, we no need to execute the safemode command on standby Node ( anyway it might not be useful also )..we can get Active Namenode IP and execute is enough..what do you think..?, Hi [~brahmareddy], you are right and that is part of the fix. It does not address the main issue that the administrator's intention is not preserved across failover and restart. Even a successful command guarantees nothing since failover just a few seconds later could put the filesystem back in read-write mode.

From a brief offline chat with [~sanjay.radia] and [~cnauroth] - the agreement was that manual safe mode transitions must be logged in NN persistent storage. We'll need edit log entries for manual safe mode transitions and a flag in the FsImage. [~surendrasingh], do you want to take a crack at fixing it as part of this jira? I'd be happy to help if you get stuck., Thanks [~arpitagarwal] and [~brahmareddy]..

Yes I will do this. I will update the status soon.. , Attached initial patch for safemode edits log..

Please review..., Sorry I have not been able to look at this so far. I will try to review it by early next week., Hi [~surendrasingh], thanks for taking up this change and I apologize again for the delay in reviewing it.

My comments:
# {{loadNameSystemSection}} should consume the {{safemode}} flag in the image.
# {{DFSAdmin#setSafeMode}} should send the RPC to the ANN only.
# SBN should fail {{setSafeMode}} via RPC call.  This will be an incompatible change so for now it can just log an error and ignore the call.
# {{leaveSafeMode}} should not leave the safe mode if it was entered manually.
# Nitpick: extra space in fsimage.proto declaration. Also a few places where spaces are missing around operators. checkstyle should flag these., Thanks [~arpitagarwal] for reviewing..
I will update the path soon with test cases.
, Hi [~arpitagarwal],

*My Suggestion :* 

bq. DFSAdmin#setSafeMode should send the RPC to the ANN only.
bq. SBN should fail setSafeMode via RPC call. This will be an incompatible change so for now it can just log an error and ignore the call.

I think we should send the RPC to both the namenode. Currently safemode API have one parameter {{isChecked}}
{code}
	@Override // ClientProtocol
	public boolean setSafeMode(SafeModeAction action, boolean isChecked)
{code}

If {{isChecked}} is true, RPC call will fail for SBN and it will throw StandbyException. I think we should not change anything in Namenode side {{setSafeMode()}} API. In {{DFSAdmin}} command now we are calling {{haNn.setSafeMode(action, false)}} with false, We can call it with true option for both the namenode like this.
{code}
        {
          //NN in standby we will get StandbyException
          inSafeMode = haNn.setSafeMode(action, true);
        } catch (StandbyException e) {
          System.out.println("Skipping safemode for standby NameNode " + proxy.getAddress());
          continue;
        } catch (IOException e) {
          System.out.println("Failed to connect " + proxy.getAddress());
          continue;
        }
{code}

For SBN we will catch the StandbyException and print the message. After this change we will get output like this.
{code}
Safe mode is ON in /10.19.92.73:8020
Skipping safemode for standby NameNode /10.19.92.74:8020
{code}

If my suggestion is not good then I think we need to remove {{boolean isChecked}} parameter, because no use of this parameter after adding check for SBN., Hi [~surendrasingh], if you mean including the above in addition to persisting the safe mode state in fsimage/editlog then yes that sounds like a good idea. Thanks!, bq. Agreed, and this is is because the manual safe mode transition is not logged in the edit log. That choice could have been intentional but it looks like the wrong choice in an HA setup. If it had been logged we would only have to contact the active NN. I agree your patch did not introduce this problem however I'd like to at least understand the reason for the original choice before changing any more behavior.

Hi [~arpitagarwal], Please check [this|https://issues.apache.org/jira/browse/HDFS-3507?focusedCommentId=13437134&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13437134] comment from [~atm] in HDFS-3507, where the {{isChecked}} parameter was introduced, and set to true only for {{dfs#isInSafemode()}}, since this is API is cares more about the User calls and required to get the Active NN state.
According to the comment, {{setSafeMode()}} meant to change the safemode state on the entire HDFS service, not just one NN. So changes in HDFS-6507 introduced these changes to call such APIs on both NNs.

And manually entering safemode, is not permanent action. NN stays in safemode until one more manual request is made to come out, or it gets restarted. So there is no need of edit logging for this. Right?

And as far as this Jira is concerned, IMO, I think its okay to go ahead with available NN for the execution, again since entering safemode is not a permanent operation.
But, if the setSafemode() is restricted to only Active NN, then saveNamespace(), which is very important regardless of NN state, fails in SNN because of not in safemode.

Any thoughts?, bq. if you mean including the above in addition to persisting the safe mode state in fsimage/editlog then yes that sounds like a good idea. Thanks!
BTW, This idea sounds good for me too. But this going to break the compatibility, by breaking the behaviour of keeping the NN in safemode even after restart. May break user's scripts/code which does simply restart NN, and think NNs will come out of manual safemode., bq. NN stays in safemode until one more manual request is made to come out, or it gets restarted. So there is no need of edit logging for this. Right?
Hi [~vinayrpet] unfortunately this is is a broken especially with HA. If the command succeeds on just one NN the state is unpredictable. E.g. if SBN is temporarily unavailable and then the primary NN crashes then we will no longer be in safe-mode after failover.

bq. But this going to break the compatibility, by breaking the behaviour of keeping the NN in safemode even after restart. 
Agreed that it will be incompatible. However the halfway fix to issue the command to just the active is worse. Perhaps we don't change anything for now., Thanks [~vinayrpet] and [~arpitagarwal] for comments.

What is the final conclusion, Do we need to fix this ??

Here the problem is , if Standby namenode is first namenode in configuration then we will not able to make active also in safemode. , Hi [~surendrasingh], while putting the safe mode status in the NN persistent state is the right solution I agree with [~vinayrpet] that it would be an incompatible change for 2.x. 

If we cannot make the change for 2.x I prefer not changing the current behavior of failing 'safemode enter' when SBN is down.

[~vinayrpet] - what do you think?, bq. If we cannot make the change for 2.x I prefer not changing the current behavior of failing 'safemode enter' when SBN is down.
In case, where SNN is down, may be for maintenance, but available in configuration, going ahead to next namenode on connectexception seems reasonable.

To avoid unexpected behavior, may be can add active/standby check for the next namenode before changing the safemode status and can change only if next namenode is active.?

Though this is kind of workaround instead of breaking compatibility, IMO proposal as in v1 patch seems reasonable. 

Any thoughts?
, The issue with that is the same. We sometimes see flip-flopping due to automatic failovers in overloaded clusters because the ZKFCs don't get a timely response from the local NN. Not ideal but it happens. I wouldn't trust the safe mode setting unless it was persisted in the edit log or set on both NNs., Hi, [~arpitagarwal] and [~vinayrpet]

Any conclusion on this issue ? Do we need to fix ?, Hi [~surendrasingh], the setting must be persisted in edit log but changing the behavior would be incompatible for 2.x. We should consider revisiting this for 3.x. I am not in favor the original proposal in the v1 patch., Hi [~arpitagarwal] and [~vinayrpet],

I feel keeping this issue open for 2.x is not good. We should fix this issue in 2.x and I think v1 patch is good for this.
For 3.x we will raise new jira and fix as per the [~arpitagarwal] suggestion. :), Hi [~surendrasingh], I am not convinced the v1 patch is a good idea. I've explained my reasoning in earlier comments., Just to make it explicit, I am -1 on that approach., Hi,

[~arpitagarwal], [~vinayrpet] and [~brahmareddy]

We got the same issue in production environment. Can we finalized the solution for this Jira ?., Hi

[~brahmareddy]

As the commands in DFSAdmin except safemode have been fixed in HDFS-12935 before some months. Safemode command has not been fixed for a long time, could we fix it now. I have uploaded HDFS-8277_5.patch like what I did in 12935. Hope to solve this issue asap as it is actually a bug in some cases., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 30s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 26m 25s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 57s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 52s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m  1s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m  1s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 55s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 47s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 59s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 52s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 49s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  0m 59s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  1s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 17s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  1m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 45s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 93m 54s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 32s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}158m 17s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.client.impl.TestBlockReaderLocal |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:ba1ab08 |
| JIRA Issue | HDFS-8277 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12935659/HDFS-8277_5.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 24c293498070 3.13.0-153-generic #203-Ubuntu SMP Thu Jun 14 08:52:28 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 7dc79a8 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_181 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/24787/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/24787/testReport/ |
| Max. process+thread count | 3068 (vs. ulimit of 10000) |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/24787/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

]