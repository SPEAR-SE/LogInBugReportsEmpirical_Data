[Didn't intend to assign this to myself., Patch which addresses the issue. I also took the liberty of removing the vestigial {{FSImage.getTimeFiles}} method., hmm, how did the dir end up with an empty or malformed one? Any idea? Maybe we should also address that problem (perhaps by backporting AtomicFileOutputStream from trunk?), I can't say for sure what caused the truncation, but with the current code there is a race between the fstime file being created and a value being written to it. If the NN were to crash in between the two, this would leave the file empty.

Updated patch addressing Todd's comments. This back-ports {{AtomicFileOutputStream}} from trunk. This patch also takes the further liberty of cleaning up some bad indentation in {{FSImage.incrementCheckpointTime}}., I should've also mentioned, I ran the newly-added test case as well as {{TestCheckpoint}}, both of which passed. I can't run test-patch at the moment because of the issues with Apache svn, but will once those are resolved., Results of test-patch:

{noformat}
+1 overall.  

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 2 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
{noformat}, hm, the change to fix this possible failure seems good. I'm a little nervous about charging on through the missing files at startup. Have you worked through the various conditions where this might be the case? Is there any time when it would be preferable to fail to start up, and make the user manually choose which storage dir to start from?

Maybe we should just add a config here that the user can use to acknowledge the corruption and move forward? See HDFS-2079, Aaron pointed out offline that we already treat non-existent fstime files like this. So, a truncated one should be treated the same as the non-existent one.

So, +1., Thanks a lot for the reviews, Todd. I just committed this to the security branch., Closed upon release of 0.20.205.0]