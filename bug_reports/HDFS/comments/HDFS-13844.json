[Could you review the code? [~elgoiri] , I get the error because EB is missing, I don't quite follow the change for not checking the i being smaller than the UNITS.length.
The screenshots you posted, show overflow and so on, can you post the fixed one.
In general, I would love to have a unit test but I don't think we have unit test infra for javascript., This patch has repaired two bugs.One bug is missing the EB. And another bug is unit overflow. For example, if you have the units ['B', 'KB', 'MB', 'GB'] with the 8192 GB capacity, you will get the "8 undefined" not better "8192 GB". 
Because according to the code,  when v equals 8192, the i equals units.length and UNITS[i]  will be undefined. 

{code:java}
while (Math.floor(v) > 0 && i < UNITS.length) { //when v = 8 and prev=8192, i = units.length
        prev = v;
        v /= 1024;
        i += 1;
      }
      if (i > 0 && i < UNITS.length) { //skip the step, because i = units.length
        v = prev;
        i -= 1;
      }
  return Math.round(v * 100) / 100 + ' ' + UNITS[i]; // units[i] will be undefined.
{code}

the overflow_unit.jpg is the fixed one, or the capacity will display undefined unit., bq. the overflow_unit.jpg is the fixed one, or the capacity will display undefined unit.

Shouldn't  !overflow_unit.jpg! show TB?, It is just an example because it is difficult to get the capacity in our environment with last unit ZB. We can decrease the units and simulate one situation overflowing the unit to explain this problem., As I said, I would really like to have unit tests for this code.
I'm even tempted to code the same in Java and unit test there.
Anyway, give it a thought and see if we could put a couple cases to test somehow.
Otherwise, +1., I don't know how to test the js easily. As [~elgoiri] said, it is better to provide some unit tests. So could you review the patch and give some comments? [~jingzhao] [~andrew.wang][~wheat9]]