[Hello [~scott_o].  Thank you for reporting this.  I can confirm that this is a bug.  (The design doc is correct, and the current code has a bug.)

To confirm this, I ran a test case on an ext4 file system with ACLs enabled.  See below for a transcript of my test case.  Executing a file requires both read and execute permissions (r-x).  In my test case, I defined the read permission on one named group entry and the execute permission on a second named group entry.  My user was able to execute the file.  This proves that on ext4, permissions can be defined on separate named group ACL entries, and the permission checks will treat the union of those entries as the effective permissions.

Scott, are you interested in coding a patch?  If not, then I'll assign this to myself for the fix.

{code}
> whoami
cnauroth

> groups
cnauroth sudo testgroup1

> getfacl test_HDFS-8748 
# file: test_HDFS-8748
# owner: root
# group: root
user::rwx
group::---
group:sudo:r--
group:testgroup1:--x
mask::r-x
other::---

> ./test_HDFS-8748 

> echo $?
0

> sudo setfacl -m group:sudo:r--,group:testgroup1:--- test_HDFS-8748 

> ./test_HDFS-8748 
-bash: ./test_HDFS-8748: Permission denied

> echo $?
126

> sudo setfacl -m group:sudo:---,group:testgroup1:--x test_HDFS-8748 

> ./test_HDFS-8748 
bash: ./test_HDFS-8748: Permission denied

> echo $?
126

> sudo setfacl -m group:sudo:r--,group:testgroup1:--x test_HDFS-8748 

> ./test_HDFS-8748 

> echo $?
0
{code}
, Hi Chris.

I actually was just able to get my hadoop environment setup and got a patch together.
However, in my explorations, I found that while the behavior outlined in the design document is mentioned in the POSIX spec, its not actually what they decided to go with. Check out page 272 of the pdf here for more details.
http://users.suse.com/~agruen/acl/posix/Posix_1003.1e-990310.pdf

So basically, the code matches POSIX and the design document doesn't. 
I submitted my patch, which should work if the project decides to go with the non-posix behavior.

I guess your OS doesn't fully comply with the 1003.1e draft., Thank you for the pointer to 1003.1e.  That's a very interesting find.  The high-level goal always has been POSIX adherence, which makes me inclined to leave the current code as is., As I stated in my last comment, the high level design goal of HDFS ACLs was to match POSIX semantics as closely as possible.  I'm going to resolve this as won't fix, because the current implemented behavior matches the latest quote from the POSIX spec, even though it doesn't match the HDFS-4685 design doc.

[~scott_o], I really appreciate your diligence tracking down the relevant spec.  Thank you!]