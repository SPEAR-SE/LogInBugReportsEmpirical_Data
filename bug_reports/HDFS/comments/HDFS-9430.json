[[~mingma] Uploaded the patch..Kindly Review..thanks, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 8m 3s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 43s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 48s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 18s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 56s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 14s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 9s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 17s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 2m 4s {color} | {color:green} trunk passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 55s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 53s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 53s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 47s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 47s {color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red} 0m 18s {color} | {color:red} Patch generated 2 new checkstyle issues in hadoop-hdfs-project/hadoop-hdfs (total was 248, now 248). {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 59s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 14s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 22s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 14s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 2m 1s {color} | {color:green} the patch passed with JDK v1.7.0_85 {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 64m 34s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.8.0_66. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 59m 38s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.7.0_85. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 20s {color} | {color:red} Patch generated 56 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 153m 52s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_66 Failed junit tests | hadoop.hdfs.TestBlockStoragePolicy |
|   | hadoop.hdfs.server.datanode.TestBlockScanner |
|   | hadoop.hdfs.server.namenode.ha.TestSeveralNameNodes |
|   | hadoop.hdfs.server.namenode.ha.TestDFSUpgradeWithHA |
| JDK v1.7.0_85 Failed junit tests | hadoop.hdfs.server.namenode.ha.TestStandbyCheckpoints |
|   | hadoop.hdfs.server.datanode.TestBlockReplacement |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure170 |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12775071/HDFS-9430.patch |
| JIRA Issue | HDFS-9430 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 55e9b8b427d2 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 485c346 |
| findbugs | v3.0.0 |
| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/13713/artifact/patchprocess/diff-checkstyle-hadoop-hdfs-project_hadoop-hdfs.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/13713/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_66.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/13713/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_85.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/13713/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_66.txt https://builds.apache.org/job/PreCommit-HDFS-Build/13713/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_85.txt |
| JDK v1.7.0_85  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/13713/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-HDFS-Build/13713/artifact/patchprocess/patch-asflicense-problems.txt |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Max memory used | 76MB |
| Powered by | Apache Yetus   http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/13713/console |


This message was automatically generated.

, Thanks [~brahmareddy]. Overall looks good. In addition, should we remove the tracking of {{FSNamesystem#imageLoaded}} altogether? [~wheat9] could clarify the intention of checking imageLoaded during RPC processing; it seems unnecessary given RPC server won't start up until fsimage has been loaded. [~vinayrpet] and [~szetszwo] might be able to confirm that {{checkNNStartup}} should be enough., bq. In addition, should we remove the tracking of FSNamesystem#imageLoaded altogether? 
I think tracking is used to decide to whether quota check is required or not. Quota check not required during editlog processing, during which {{FSNamesystem#imageLoaded}} will be false.
So, IMO, removing of this tracker not required. 
bq. Haohui Mai could clarify the intention of checking imageLoaded during RPC processing
IMO, waitForLoadingFsImage() was trying to ensure full loading of image before serving RPC requests. This was a movement one level  higher from FSDirectory to FSNameSystem in HDFS-6480 and included RPC requests as well. At the time this check was added, checkNNStartup() was not present. {{checkNNStartup()}} was added to ensure full services startup,(mainly transition RPCs which doesnt come under waitForLoadingFsImage() check), along with fsImage load in HDFS-3443 which committed in Jan-2015.
I think its fair to remove {{waitForLoadingFsImage()}} but leave the tracker  {{FSNamesystem#imageLoaded}} and get/setter for it as is., 
+1 for the current patch, unless [~szetszwo] or [~wheat9] doesnt agree with my above points., Thanks [~vinayrpet] for the explanation. Make sense to keep the {{FSNamesystem#imageLoaded}} get/setter around for quota check during edit log replay at NN startup.

My main question was around the order of fsimage loading and RPC server startup. In {NameNode}}'s {{initialize}} function, {{loadNamesystem}} sets {{imageLoaded}} to true and it is called before RPC server is started. Thus when RPC methods are processed, {{imageLoaded}} should have been set to true.

{noformat}
    loadNamesystem(conf);
    rpcServer = createRpcServer(conf);
{noformat}

I will wait until the end of the week for [~szetszwo] and [~wheat9] to provide any additional comments they might have before commit., It's okay to remove the {{waitForLoadingFsImage()}} function but I think it requires more refactoring to get things right.

bq. I think its fair to remove waitForLoadingFsImage() but leave the tracker FSNamesystem#imageLoaded and get/setter for it as is.

Today the paradigm is broken. We assume that when replaying editlogs that the NN ops will call functions (i.e., {{unprotected*}})that bypass all checks including quotas, etc. This is clearly broken for all callers of {{fsn.isImageLoaded()}} and {{fsd.shouldSkipQuotaChecks()}}. I think it's okay to file a follow-up jira to address this., waitForLoadingFSImage() and checkNNStartup() safeguards FSNamesystem and NameNodeRpcServer, respectively.  In namenode, waitForLoadingFSImage() is not needed as mentioned.

However, FSNamesystem is also used in SecondaryNameNode and BackupNode and they don't have checkNNStartup().  We may forget about BackupNode since it is not working for a long time anyway.  We need to make sure SecondaryNameNode still work correctly after the change., > My main question was around the order of fsimage loading and RPC server startup. ...

I agree that the RPC server is fine.  We should check the web interface:
- WebHDFS is fine since it uses rpc server.
- FsckServlet may not be okay.
- Also need to check the html and js files., bq. I agree that the RPC server is fine. We should check the web interface:
I have checked the call heirarchy of all FSNamesystem calls where {{waitForLoadingFsImage()}} is present. Everything goes through RPC server, except test calls and {{LeaseManager#checkLeases()}}.
1. TestCalls will be safe, as MiniDfsCluster ensures that it waits till complete startup of cluster.
2. {{LeaseManager#checkLeases()}} will be called only when NN is out of safemode, which inturn ensures that image is already loaded.

So IMO, nothing should be affected by removal of {{waitForLoadingFsImage()}}., bq. FsckServlet may not be okay.
{{NamenodeFsck#fsck}} also uses rpcserver for calls. So this also fine.
bq. Also need to check the html and js files.
html and js files completely depends on exposed jmx metrics. None of them call RPCs which have {{waitForLoadingFsImage()}}.
so thats also fine.

And as mentioned by brahma, all other calls are safeguarded in nnrpc server.
So its good to go., Thanks all. I agree with the above analysis and the patch is good to go. For the http scenario, {{NameNodeHttpServer}} is started up before fsimage load. So it seems possible for {{NamenodeFsck#fsck}} to get a NPE when it tries to access RPC server. But that is ok as the jetty thread will catch that exception and NN startup won't be impacted., Committed to trunk and branch-2. Thanks [~brahmareddy] for the contribution. Thanks [~vinayrpet] [~szetszwo] [~wheat9] for the review. , FAILURE: Integrated in Hadoop-trunk-Commit #8920 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8920/])
HDFS-9430 Remove waitForLoadingFSImage since checkNNStartup has ensured (mingma: rev 3fa33b5c2c289ceaced30c6c5451f3569110459d)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #665 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/665/])
HDFS-9430 Remove waitForLoadingFSImage since checkNNStartup has ensured (mingma: rev 3fa33b5c2c289ceaced30c6c5451f3569110459d)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
, Thanks a lot [~mingma] for review and commit,And thanks to others for additional review.]