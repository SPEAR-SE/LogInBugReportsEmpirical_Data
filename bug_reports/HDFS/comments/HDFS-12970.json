[This is by design. {{HdfsFileStatus}} needs to be qualified before it can be returned to the user, since the NameNode doesn't return fully qualified URIs. Prior to HDFS-12681, it was qualified as it was copied into a {{FileStatus}} object. Since {{HdfsFileStatus}} is now a subtype of {{FileStatus}}, the path is initialized as null in the constructor and set later by the client.

Are you observing the path is {{null}} when it's returned to the user?, bq. Are you observing the path is null when it's returned to the user?
No.
My use case: While working on HDFS-12811, I was issuing {{FSNamesystem#getFileInfo}} call from {{NamenodeFsck}} and trying to extract path from HdfsFileStatus.
Thats where it returned null.
bq. the path is initialized as null in the constructor and set later by the client.
If I understand your previous comment correctly, I have to cast the returned file status to either {{HdfsNamedFileStatus}} or {{HdfsLocatedFileStatus}} explicitly ?
, bq. While working on HDFS-12811, I was issuing FSNamesystem#getFileInfo call from NamenodeFsck and trying to extract path from HdfsFileStatus
I see. This would be {{null}} even before HDFS-12681.

bq. If I understand your previous comment correctly, I have to cast the returned file status to either HdfsNamedFileStatus or HdfsLocatedFileStatus explicitly ?
The caller needs to invoke {{makeQualified(URI defaultUri, Path parent)}} on the result to set the path., Thanks [~chris.douglas] for explanation.
Sorry for the false alarm., No worries, thanks for bringing it up. The historical baggage around these APIs has created some unintuitive, and occasionally bizarre patterns.]