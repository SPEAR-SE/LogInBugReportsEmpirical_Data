[hadoop fs is the recommended way to access files (because its file system agnostic). I think we should:
1. Update hadoop dfs to indicate "hadoop fs" should be used
2. Remove the dfs option from bin/hdfs (and deprecate in branch 22). It was introduced as part of HADOOP-4868, and is in 21 and 22, but it looks like by accident (eg not removed when copying bin/hadoop to create bin/hdfs) so don't think its actually used.
, Note that some places like hadoop-daemon.sh in common take the "dfs" command (and pass it onto bin/hdfs). Weird. , Attached patch for trunk. Did Eli's suggestions.

* "hdfs dfs" is removed
* "hadoop dfs" has a deprecation message that correctly points at "hadoop fs"
* hadoop-daemon.sh now passes the {{dfs}} command to {{hadoop}}, rather than {{hdfs}}. I grepped for other usages of "hdfs dfs", and I think we're okay.

If this looks good, I'll make a branch-2 patch as well., Err, I think I meant branch-1 patch. It'd be what Eli said with deprecating "hdfs dfs"., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12541169/hdfs-2745-1.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.ha.TestZKFailoverController
                  org.apache.hadoop.hdfs.server.namenode.metrics.TestNameNodeMetrics
                  org.apache.hadoop.hdfs.TestPersistBlocks

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3021//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3021//console

This message is automatically generated., Regarding testing, I ran the hadoop and hdfs scripts manually to verify that they're what we expect.

Test failures I think are unrelated. Open issues exist for TestZKFailoverController and TestNameNodeMetrics, I opened a new one for TestPersistBlocks since it passes for me locally., The changes look good to me +1, non-binding., The change looks pretty good to me, except that it looks like it introduced a tab character. +1 once that's addressed.

I do also find it a little odd that hadoop-daemon.sh could conceivably run dfsadmin/fsck, and arguably the balancer as well. Perhaps we should remove those from hadoop-daemon.sh as well, since we're removing dfs. Thoughts?, To be explicit: I'm unclear as to whether the balancer command should reasonably be run from hadoop-daemon.sh. Do users do that?, New patch fixing the whitespace.

I looked at branch-1, and it doesn't have a separate {{hdfs}} script. {{git log}} doesn't have HADOOP-4868 mentioned either. Is there another branch I should be doing this for too?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542164/hdfs-2745-2.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    -1 findbugs.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestHftpDelegationToken
                  org.apache.hadoop.hdfs.server.blockmanagement.TestBlocksWithNotEnoughRacks

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3078//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/3078//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3078//console

This message is automatically generated., {quote}
I do also find it a little odd that hadoop-daemon.sh could conceivably run dfsadmin/fsck, and arguably the balancer as well. Perhaps we should remove those from hadoop-daemon.sh as well, since we're removing dfs. Thoughts?
{quote}
I agree this seems odd to me.  I wasn't even aware of it before this patch.

I also propose that for branch-2 we don't actually remove hdfs dfs but deprecate and hide it, trunk actually removes it.   My reasoning is we have it in branch-0.23 and I know customers are using and want to give them one release to move off. Its also there is anyone who has started to use branch-2.  any objections? , Hadoop 0.23 shipped many versions with this confusing pointer to the hdfs command, and there may now be users who have coded scripts relying on the "hdfs dfs" command to keep working.  As those users move from 0.23 to 2.0, they may be surprised to find "hdfs dfs" simply doesn't work after this patch and no indication as to why.

Can we mark "hdfs dfs" as deprecated in 2.0 and remove it in trunk?  That provides a smoother migration path for users who tried to follow the original deprecation directions in 0.23 and coded their scripts to use "hdfs dfs" as directed.
, Ha, comment race.  What Tom said.  ;-), {quote}
I looked at branch-1, and it doesn't have a separate hdfs script. git log doesn't have HADOOP-4868 mentioned either. Is there another branch I should be doing this for too?
{quote}

I would say if we do anything on branch-1 it would be:  Update hadoop dfs to indicate "hadoop fs" should be used.  But I don't have strong opinion on that. As you found hdfs command doesn't exist there.
, I don't think we should remove {{hdfs dfs}} on branch-2.  I've used that by accident more than once, and somebody's law says that if a command worked in one release, someone has added it to a script that will break if it's removed., Canceling patch for now so that a new one can be posted which addresses the feedback from Jason, Tom, Andy, etc., {{hadoop dfs}} is already deprecated, so I'd think it'd be ok to remove in 2.x.  I'd say {{hdfs dfs}} should be deprecated in 1.x/2.x and removed in trunk., 
There has been a lot of changes since this JIRA was filed including a lot of finger memory around 'hdfs dfs'..., I'm going to close this as stale, given the doc changes, etc. that have happened.]