[It looks like {{removeDirectives}} needs to call {{makeQualified}} on the path.

I also added a test of using relative paths with {{removeDirectives}}., -listDirectives with a path filter has the same problem.  (See below.)

I think the fix needs to go in {{DistributedFileSystem#listPathBasedCacheDescriptors}}.  Before HDFS-5326, we had a call to {{FileSystem#fixRelativePart}} in there.  Fixing it in {{DistributedFileSystem#listPathBasedCacheDescriptors}} would cover both -listDirectives and -removeDirectives as well as potential future callers.

{code}
[cnauroth@ubuntu:pts/0] hadoop-deploy-trunk                                                                         
> hadoop-3.0.0-SNAPSHOT/bin/hdfs cacheadmin -addDirective -path relative1 -pool pool1
Added PathBasedCache entry 1
> hadoop-3.0.0-SNAPSHOT/bin/hdfs cacheadmin -listDirectives
Found 1 entry
ID  POOL   PATH                     
1   pool1  /user/cnauroth/relative1 
[cnauroth@ubuntu:pts/0] hadoop-deploy-trunk                                                                         
> hadoop-3.0.0-SNAPSHOT/bin/hdfs cacheadmin -listDirectives -path relative1
Exception in thread "main" java.lang.IllegalArgumentException: java.net.URISyntaxException: Relative path in absolute URI: hdfs://localhost:29000relative1/relative1
	at org.apache.hadoop.fs.Path.makeQualified(Path.java:470)
	at org.apache.hadoop.hdfs.DistributedFileSystem.listPathBasedCacheDirectives(DistributedFileSystem.java:1639)
	at org.apache.hadoop.hdfs.tools.CacheAdmin$ListPathBasedCacheDirectiveCommand.run(CacheAdmin.java:358)
	at org.apache.hadoop.hdfs.tools.CacheAdmin.run(CacheAdmin.java:82)
	at org.apache.hadoop.hdfs.tools.CacheAdmin.main(CacheAdmin.java:87)
Caused by: java.net.URISyntaxException: Relative path in absolute URI: hdfs://localhost:29000relative1/relative1
	at java.net.URI.checkPath(URI.java:1804)
	at java.net.URI.<init>(URI.java:752)
	at org.apache.hadoop.fs.Path.makeQualified(Path.java:467)
	... 4 more
{code}

, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12612866/HDFS-5482.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5361//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5361//console

This message is automatically generated., Yeah, you're absolutely right.  It looks like we already try to do that in {{DistributedFileSystem#listDirectives}} by calling {{makeQualified}}, but there is an error in the parameters given to that function which is preventing it from working as expected.  (It should be passing the working directory.)  We should probably just change it to use {{makeQualified}} for consistency with the other functions in {{DistributedFileSystem.java}}.  And you're right, this was a regression introduced by 5326.  It will be good to have a unit test for this., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12612894/HDFS-5482.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5363//console

This message is automatically generated., I'm not sure why this failed.  I found the following errors in the console:

{code}
/home/jenkins/jenkins-slave/workspace/PreCommit-HDFS-Build/trunk/dev-support/test-patch.sh: line 371: cd: /home/jenkins/jenkins-slave/workspace/PreCommit-HDFS-Build/trunk/conf: No such file or directory
...
cp: cannot stat `/home/jenkins/buildSupport/lib/*': No such file or directory
{code}

This looks like an automation issue, so I will re-trigger the build., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12612894/HDFS-5482.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5365//console

This message is automatically generated., fix compile problem, turns out the place to look for compile errors is:
https://builds.apache.org/job/PreCommit-HDFS-Build/5365/artifact/trunk/patchprocess/patchJavacWarnings.txt
not the console itself, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12612936/HDFS-5482.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5366//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5366//console

This message is automatically generated., +1 for the patch.  All of my tests were successful with patch version 3.  I'll commit this shortly., I committed this to trunk.  Thank you for the patch, Colin., SUCCESS: Integrated in Hadoop-trunk-Commit #4709 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4709/])
HDFS-5482. DistributedFileSystem#listPathBasedCacheDirectives must support relative paths. Contributed by Colin Patrick McCabe. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1540257)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testCacheAdminConf.xml
, SUCCESS: Integrated in Hadoop-Yarn-trunk #387 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/387/])
HDFS-5482. DistributedFileSystem#listPathBasedCacheDirectives must support relative paths. Contributed by Colin Patrick McCabe. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1540257)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testCacheAdminConf.xml
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1604 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1604/])
HDFS-5482. DistributedFileSystem#listPathBasedCacheDirectives must support relative paths. Contributed by Colin Patrick McCabe. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1540257)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testCacheAdminConf.xml
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1578 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1578/])
HDFS-5482. DistributedFileSystem#listPathBasedCacheDirectives must support relative paths. Contributed by Colin Patrick McCabe. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1540257)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testCacheAdminConf.xml
, Closing tickets that are already part of a release.]