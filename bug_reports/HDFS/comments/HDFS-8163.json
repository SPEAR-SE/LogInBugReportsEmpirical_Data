[Preliminary v01 patch for Jenkins. Not ready for review yet., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12725980/HDFS-8163.01.patch
  against trunk revision 9595cc0.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10292//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10292//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12726045/HDFS-8163.02.patch
  against trunk revision 9595cc0.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.util.TestByteArrayManager

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10293//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10293//console

This message is automatically generated., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12726045/HDFS-8163.02.patch
  against trunk revision 76e7264.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10295//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10295//console

This message is automatically generated., While working on more tests I found some more issues with the timestamp usage. The [System.nanotime|https://docs.oracle.com/javase/7/docs/api/java/lang/System.html#nanoTime()] docs state that it can return a negative value and can overflow between successive invocations. So two values should never be compared directly but diffed to handle overflow.

My guess is that negative values/overflow are unlikely on the platforms we care about but we should be handling them correctly anyway. I plan to split out the timestamp handling logic of BPServiceActor into a separate utility class for clarity and ease of unit testing. Will post an updated patch later today., Updated v03 patch to handle negative values and overflows. Split out the timestamp manipulation into a nested class Scheduler.

Reviews welcome!, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12726311/HDFS-8163.03.patch
  against trunk revision f47a576.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10308//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10308//console

This message is automatically generated., Thanks for working on this, [~arpitagarwal]! The patch looks pretty good to me. The only nits is that the following code can be reformatted:
{code}
+    @VisibleForTesting volatile long nextBlockReportTime = monotonicNow();
+    @VisibleForTesting volatile long nextHeartbeatTime = monotonicNow();
+    @VisibleForTesting boolean resetBlockReportTime = true;
{code}

I think you can address this while committing the patch. +1., Thanks for the review Jing.

Fixed the formatting and committed to trunk, branch-2 and branch-2.7. Here is the delta:

{code:java}
-    // assigned/read by the actor thread. Thus they should be declared as vol
-    // to make sure the "happens-before" consistency.
-    @VisibleForTesting volatile long nextBlockReportTime = monotonicNow();
-    @VisibleForTesting volatile long nextHeartbeatTime = monotonicNow();
-    @VisibleForTesting boolean resetBlockReportTime = true;
+    // assigned/read by the actor thread.
+    @VisibleForTesting
+    volatile long nextBlockReportTime = monotonicNow();
+
+    @VisibleForTesting
+    volatile long nextHeartbeatTime = monotonicNow();
+
+    @VisibleForTesting
+    boolean resetBlockReportTime = true;
{code}
, FAILURE: Integrated in Hadoop-trunk-Commit #7624 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7624/])
HDFS-8163. Using monotonicNow for block report scheduling causes test failures on recently restarted systems. (Arpit Agarwal) (arp: rev dfc1c4c303cf15afc6c3361ed9d3238562f73cbd)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestBpServiceActorScheduler.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2103 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2103/])
HDFS-8163. Using monotonicNow for block report scheduling causes test failures on recently restarted systems. (Arpit Agarwal) (arp: rev dfc1c4c303cf15afc6c3361ed9d3238562f73cbd)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestBpServiceActorScheduler.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #162 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/162/])
HDFS-8163. Using monotonicNow for block report scheduling causes test failures on recently restarted systems. (Arpit Agarwal) (arp: rev dfc1c4c303cf15afc6c3361ed9d3238562f73cbd)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestBpServiceActorScheduler.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #171 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/171/])
HDFS-8163. Using monotonicNow for block report scheduling causes test failures on recently restarted systems. (Arpit Agarwal) (arp: rev dfc1c4c303cf15afc6c3361ed9d3238562f73cbd)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestBpServiceActorScheduler.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #905 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/905/])
HDFS-8163. Using monotonicNow for block report scheduling causes test failures on recently restarted systems. (Arpit Agarwal) (arp: rev dfc1c4c303cf15afc6c3361ed9d3238562f73cbd)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestBpServiceActorScheduler.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #172 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/172/])
HDFS-8163. Using monotonicNow for block report scheduling causes test failures on recently restarted systems. (Arpit Agarwal) (arp: rev dfc1c4c303cf15afc6c3361ed9d3238562f73cbd)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestBpServiceActorScheduler.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2121 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2121/])
HDFS-8163. Using monotonicNow for block report scheduling causes test failures on recently restarted systems. (Arpit Agarwal) (arp: rev dfc1c4c303cf15afc6c3361ed9d3238562f73cbd)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestBpServiceActorScheduler.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java
]