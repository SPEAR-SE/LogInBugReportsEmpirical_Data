[Attached patch fixes the issue. It's not possible to write a unit test for this, since it relies on triggering the deleteOnExit hook. To test, I set up two NNs which pointed to the same dir. When I started the second, it failed with a lock error, but didn't delete the lock file., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12512884/hdfs-2877.txt
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in .

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1831//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1831//console

This message is automatically generated., Yes,I also mentioned this before in  
[https://issues.apache.org/jira/browse/HDFS-1690?focusedCommentId=13046348&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13046348] . Did not get the time to work in HDFS-1690 recently. Soon, i will upload patch for that as well.:-)
I just verified this patch. It works fine as expected.
Code changes looks good to me.

+1 from my side., Good catch. The fix looks good. Adding 0.22 to the targets., As for the unit test. I thought it should just start one NN and then another in the same directory twice. And both starts should fail. The bug now is that the second starts successfully, right? Why is it hard?, deleteOnExit will actually delete on JVM exit right. But here we opearete all restarts in same JVM.
I feel that should be the difficult here. Your proposed test will pass with out this fix as well, since that restarts are from same JVM and we will not exit. am i missing some thing?, Is it is possible for lock to linger for some reason even though the NN process was killed? If so, can we add descriptive error message that describes how an admin can get around it after ensuring no namenode process is running?

Isn't the patch as simple as:
{noformat}
      try {
        res = file.getChannel().tryLock();
+       lockF.deleteOnExit();
      } catch(OverlappingFileLockException oe) {
        ...
      } catch(IOException e) {
        ...
      }
{noformat}
, In my code in the prior comment, you still need the null check before deleteOnExit(). But checking if file exists etc. seems unnecessary., BTW is this not a duplicate of HDFS-2865? Should HDFS-2865 be closed as duplicate?, @Suresh, your proposed code looks good and simple. But that may not handle one cleanup case.i.e, we just created the lock file and try lock throws IOException due to some IO error. then we may not clean the file which we created here right.
Here mainly we are talking about deleteOnExit to clean the file which we created right. am i missing some thing?, Uma's got it -- the RandomAccessFile constructor will create the file, but then, if we fail to lock that file we just created, we wouldn't clean it up. (eg if the underlying system is an NFS mount without NLM), Also, in non-HA situation, if namenode dies and comes back up, will it require admin intervention always?, No, because on a local disk, if the process crashes, the file lock will be dropped, and the new one can re-lock it., +1, the patch looks good to me., Verified that the above situation is true by starting a NN, kill -9ing it, and starting it again. It properly comes up and acquires the lock. On a graceful shutdown it removes the lock.

Committed to trunk, 22, 23, and 1.1. Thanks for the reviews., Integrated in Hadoop-Hdfs-trunk-Commit #1718 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/1718/])
    HDFS-2877. If locking of a storage dir fails, it will remove the other NN's lock file on exit. Contributed by Todd Lipcon.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1239880
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java
, Integrated in Hadoop-Common-trunk-Commit #1647 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/1647/])
    HDFS-2877. If locking of a storage dir fails, it will remove the other NN's lock file on exit. Contributed by Todd Lipcon.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1239880
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java
, Integrated in Hadoop-Hdfs-0.23-Commit #464 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Commit/464/])
    HDFS-2877. If locking of a storage dir fails, it will remove the other NN's lock file on exit. Contributed by Todd Lipcon.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1239879
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java
, Integrated in Hadoop-Common-0.23-Commit #474 (See [https://builds.apache.org/job/Hadoop-Common-0.23-Commit/474/])
    HDFS-2877. If locking of a storage dir fails, it will remove the other NN's lock file on exit. Contributed by Todd Lipcon.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1239879
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #1662 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/1662/])
    HDFS-2877. If locking of a storage dir fails, it will remove the other NN's lock file on exit. Contributed by Todd Lipcon.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1239880
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java
, Integrated in Hadoop-Mapreduce-0.23-Commit #488 (See [https://builds.apache.org/job/Hadoop-Mapreduce-0.23-Commit/488/])
    HDFS-2877. If locking of a storage dir fails, it will remove the other NN's lock file on exit. Contributed by Todd Lipcon.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1239879
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java
, Integrated in Hadoop-Hdfs-22-branch #125 (See [https://builds.apache.org/job/Hadoop-Hdfs-22-branch/125/])
    HDFS-2877. If locking of a storage dir fails, it will remove the other NN's lock file on exit. Contributed by Todd Lipcon.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1239878
Files : 
* /hadoop/common/branches/branch-0.22/hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.22/hdfs/src/java/org/apache/hadoop/hdfs/server/common/Storage.java
, Integrated in Hadoop-Hdfs-trunk #945 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/945/])
    HDFS-2877. If locking of a storage dir fails, it will remove the other NN's lock file on exit. Contributed by Todd Lipcon.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1239880
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java
, Integrated in Hadoop-Hdfs-0.23-Build #158 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/158/])
    HDFS-2877. If locking of a storage dir fails, it will remove the other NN's lock file on exit. Contributed by Todd Lipcon.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1239879
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java
, Integrated in Hadoop-Mapreduce-0.23-Build #180 (See [https://builds.apache.org/job/Hadoop-Mapreduce-0.23-Build/180/])
    HDFS-2877. If locking of a storage dir fails, it will remove the other NN's lock file on exit. Contributed by Todd Lipcon.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1239879
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java
, Integrated in Hadoop-Mapreduce-trunk #978 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/978/])
    HDFS-2877. If locking of a storage dir fails, it will remove the other NN's lock file on exit. Contributed by Todd Lipcon.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1239880
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/Storage.java
, Closed upon release of Hadoop-1.1.0.]