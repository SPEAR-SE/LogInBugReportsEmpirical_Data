[Simple patch attached. [~kihwal] / [~vinayrpet] could you review?, Good catch Andrew. This patch should work.
+1 

As HDFS-7923(the Jira which introduced fullBlockReportLeaseId=4 earlier) is targeted for 2.8, luckily we found this before 2.8 out. Safely we can change at this time.
And we need not change in 2.7 versions ant thing as HDFS-9426(the JIRA which introduced differed numbering for rollingUpgradeStatusV2) was back ported with lower numbering already.So no compatibility issues there even though 2.7.2 out already.
I have a question here. What is the best solution for this kind of issues in the future to avoid? Example if fullBlockReportLeaseId change targeted in 2.8 and if 2.8 is out already. Then changing the numbering would not be easy as this. How could we control such cases?




, Thanks Uma. I think the rule is: never change the PB tag number when backporting. Tag numbers don't need to be monotonic, so we could have done {{rollingUpgradeStatusV2 = 5;}} in the branch-2.7 backport even though {{fullBlockReportLeaseId = 4;}} isn't present.

This is a good reminder to check the PBs very carefully for each release. I wonder if there is a way to automate this check? I see YARN-3330 which has a python script, but looks like it's not reviewed yet., Yeah. Got it. Actually minor version should not have incompatible changes, but  HDFS-9426 change merged with differed versioning. That change itself be an incompatible change I think. :-). By noticing that we could have avoided it.

{quote}
This is a good reminder to check the PBs very carefully for each release. I wonder if there is a way to automate this check? I see YARN-3330 which has a python script, but looks like it's not reviewed yet.
{quote}
Agree if we can find some better way to find this numbering differences automatically.  Big +1 for the ideas like in YARN-3330., Good catch. I don't think the YARN-3330 script would have caught it. We'd need to diff proto files across release lines to detect such issues., {quote}
I don't think the YARN-3330 script would have caught it. We'd need to diff proto files across release lines to detect such issues.
{quote}
Agreed. To catch this kind of issues, it has to run across versions. Not sure if we have better ways to achieve that automatically., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 11s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 7m 12s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 39s {color} | {color:green} trunk passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 40s {color} | {color:green} trunk passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 58s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 14s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 52s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 40s {color} | {color:green} the patch passed with JDK v1.8.0_72 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 0m 40s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 40s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 42s {color} | {color:green} the patch passed with JDK v1.7.0_95 {color} |
| {color:green}+1{color} | {color:green} cc {color} | {color:green} 0m 42s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 42s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 53s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 13s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 58m 24s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.8.0_72. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 53m 25s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.7.0_95. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green} 0m 27s {color} | {color:green} Patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 125m 50s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.8.0_72 Failed junit tests | hadoop.hdfs.TestFileAppend |
|   | hadoop.hdfs.server.datanode.TestBlockScanner |
|   | hadoop.fs.TestHdfsNativeCodeLoader |
| JDK v1.7.0_95 Failed junit tests | hadoop.hdfs.web.TestWebHDFS |
|   | hadoop.fs.TestHdfsNativeCodeLoader |
|   | hadoop.hdfs.TestReconstructStripedFile |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12787340/HDFS-9788.001.patch |
| JIRA Issue | HDFS-9788 |
| Optional Tests |  asflicense  compile  cc  mvnsite  javac  unit  |
| uname | Linux 1ce1b67f2313 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / c3641ed |
| Default Java | 1.7.0_95 |
| Multi-JDK versions |  /usr/lib/jvm/java-8-oracle:1.8.0_72 /usr/lib/jvm/java-7-openjdk-amd64:1.7.0_95 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/14444/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_72.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/14444/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/14444/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.8.0_72.txt https://builds.apache.org/job/PreCommit-HDFS-Build/14444/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_95.txt |
| JDK v1.7.0_95  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/14444/testReport/ |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Max memory used | 77MB |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/14444/console |
| Powered by | Apache Yetus 0.2.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks for the quick turnarounds on reviews Uma and Arpit, I'll be committing this shortly., Pushed to trunk, branch-2, branch-2.8. Thanks again all., FAILURE: Integrated in Hadoop-trunk-Commit #9279 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/9279/])
HDFS-9788. Incompatible tag renumbering in HeartbeatResponseProto. (wang: rev aeb13ef2ab657a1c2f9d9ed5f80783f788c4953a)
* hadoop-hdfs-project/hadoop-hdfs/src/main/proto/DatanodeProtocol.proto
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, Thanks [~andrew.wang] for the find and fix.]