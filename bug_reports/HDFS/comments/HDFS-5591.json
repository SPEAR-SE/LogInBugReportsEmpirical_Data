[Hey Charles, your patch looks good, just that similar change should also be made in SecondaryNameNode.java. Thanks!

================================ 
--- hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java (revision 1580757)
+++ hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java (working copy)
@@ -376,7 +376,7 @@
         if(UserGroupInformation.isSecurityEnabled())
           UserGroupInformation.getCurrentUser().checkTGTAndReloginFromKeytab();

-        long now = Time.now();
+        long now = Time.monotonicNow();

         if (shouldCheckpointBasedOnCount() ||
             now >= lastCheckpointTime + 1000 * checkpointConf.getPeriod()) {
================================= , Hi Charlie, thanks for taking on this JIRA!

Overall looks good, a few review comments though:

- In StandbyCheckpointer, we could take advantage of this patch to slap {{final}} on a few constants, e.g. {{now}}, {{uncheckpointed}}, {{secsSinceLast}}.
- In SecondaryNameNode, {{starttime}} we should actually leave as wall clock time, it's not used in calculating checkpoint duration.
- We also need to update {{SecondaryNameNode#toString}}, so "Last Checkpoint Time" is something like "Last Checkpoint: x seconds ago". This {{toString}} shows up on the 2NN's WebUI, but I sincerely hope no one is parsing this to determine the age of the fsimage., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12636800/HDFS-5591.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6502//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6502//console

This message is automatically generated., Abhiraj, Andrew,

Thanks for the review. I've attached a revised patch that addresses your comments -- please let me know if you see anything else.

One question, the automatic patch-testing tool called out that there is no @author tag. Is that ok?

, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12637097/HDFS-5591.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.TestSecondaryWebUi

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6528//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6528//console

This message is automatically generated., Looks like this test needs to be updated. It'd also be good to add an error message to the assert, so we get something more descriptive next time.

{code}
+      + "\nLast Checkpoint      : " + (lastCheckpointTime == 0? "--": new Date(lastCheckpointTime)) + " seconds ago"
{code}

Putting this into a Date also isn't quite right, we just want to print a duration in seconds (so time/1000).

+1 once these are addressed though., bq. One question, the automatic patch-testing tool called out that there is no @author tag. Is that ok?

Note that it said "*+1*, this patch has no @author tags." The patch test script is trying to ensure that there are _no_ author tags in the patch, so you're good on this front., Hi Andrew, this gives a slightly better unit test failure message, addresses the unit test failure, and eliminates use of Date in the toString() method.

Charles
, LGTM, +1 pending Jenkins. Thanks Charles., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12637547/HDFS-5591.004.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6548//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6548//console

This message is automatically generated., Latest patch looks pretty good to me. One question:

{code}
+      + "\nLast Checkpoint      : " + (lastCheckpointTime == 0? "--": (lastCheckpointTime / 1000)) + " seconds ago"
{code}

Shouldn't this be something like "{{(lastCheckpointTime - Time.monotonicNow()) / 1000}}? i.e. I think currently the value we're displaying is not actually the "seconds ago" value.

Please let me know if I'm missing something. +1 once this is addressed., You're right. But wouldn't Time.mNow be > than lastCheckpointTime 
meaning that it should be

Time.monotonicNow() - lastCheckpointTime instead of the opposite?

, bq. But wouldn't Time.mNow be > than lastCheckpointTime meaning that it should be.

Totally. My bad., Hi Aaron,

Hopefully this does the trick.

Charles
, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12638096/HDFS-5591.005.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6567//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6567//console

This message is automatically generated., LGTM, will commit shortly. Thanks Charles for the patch and ATM for reviewing., Committed to trunk and branch-2. Thanks again everyone!, SUCCESS: Integrated in Hadoop-trunk-Commit #5446 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5446/])
HDFS-5591. Checkpointing should use monotonic time when calculating period. Contributed by Charles Lamb. (wang: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1583926)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestSecondaryWebUi.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #527 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/527/])
HDFS-5591. Checkpointing should use monotonic time when calculating period. Contributed by Charles Lamb. (wang: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1583926)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestSecondaryWebUi.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1745 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1745/])
HDFS-5591. Checkpointing should use monotonic time when calculating period. Contributed by Charles Lamb. (wang: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1583926)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/StandbyCheckpointer.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestSecondaryWebUi.java
]