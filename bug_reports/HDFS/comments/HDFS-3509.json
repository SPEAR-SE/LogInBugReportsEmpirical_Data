[Do you happen to know what is in the malformed json response?  Or what the NN is logging?, actually it some HTML body coming back as part of the standard SC_UNAUTHORIZED respose, Shouldn't webhdfs verify the response's content type is json before trying to parse as such?  Has one bug exposed another?, agree, it seems webhdfs it is trying to json parse the response of an HTTP ERROR looking for additional error info but it fails to fallback into a generic IOException using the HTTP error code/message, There is a try-catch but it catches IOException since the [API of JSON.parse(Reader)|http://jetty.codehaus.org/jetty/jetty-6/apidocs/org/mortbay/util/ajax/JSON.html#parse%28java.io.Reader%29] said that it throws IOException.  We should change it to catch exception. Good catch!, Instead of solely relying on a better try/catch around the json decoding (which in and of itself is good), should we consider not even attempting to decode unless the "Content-Type" is json?, @Daryn, that sounds right, but fixing that should be another JIRA (this one is about proxyusers not working with webhdfs), Sure.  I'd suggest that maybe it should be considered a pre-req since even when this exact bug is fixed, it'll be confusing/difficult to debug a legitimate token fetch failure., Daryn, good point.  Created HDFS-3516., same solution as the private filesystem impl in httpfs. this patch requires HDFS-3113 (and dep JIRAs), not for the fix itself but for the testcases, httpfs is fully testing proxyuser stuff and kerberos., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12531348/HDFS-3509.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2618//console

This message is automatically generated., patch does not apply because it depends the following pending patches (in order):

    HDFS-3481
    HDSF-3428
    HADOOP-8458
    HADOOP-8465
    HDFS-3113
    HDFS-3291
    HDFS-3513
    HDFS-3291
, backport patch for branch-1. Note that the patch does not have a testcase, in trunk/branch-2 this is tested from HttpFS which is not present in branch-1., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12535720/HDFS-3509-branch1.patch
  against trunk revision .

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2770//console

This message is automatically generated., +1, the patch looks good to me., This patch should use a similar approach as HDFS-3553.  Namely that the connection should be using the real user of the current ugi.

A jira on fuse authentication brought to light that we can't assume the login user is the same as the real user.  It's possible to have multiple UGIs with a TGT, so this patch should use the real user of the current user to make the connection., We need to test this patch in conjunction with my HDFS-3553 change.  Since I don't have a working SPNEGO cluster as my disposal, could you please test them?  Also, I think this change should go into 1.x too., I think we need to see if the change to use real user needs to be pushed down lower, perhaps into {{SecurityUtil.openSecureHttpConnection}} or deeper.  Otherwise it looks like things such as fetchdt aren't going to work and will need a copy-n-paste (ick) of the logic.  I'm noticing this because the trunk patch for HDFS-3553 is intersecting with this patch., Is this still needed?  I think this has been fixed by the flurry of webhdfs jiras I recently worked on., [doing self-clean up of JIRAs] closing as invalid as this has been done]