[Patch 000
* Unit test only

Here is the test output.

{{Unbuffer}} placed the replace into evictable:
{noformat}
2017-10-23 17:19:37,189 [Thread-0] TRACE shortcircuit.ShortCircuitCache (ShortCircuitCache.java:unref(470)) - ShortCircuitCache(0x1d7b9bbe): 
unref replica ShortCircuitReplica{key=1073741825_BP-2140752653-10.16.1.161-1508804374205, metaHeader.version=1, metaHeader.checksum=DataChecksum(type=CRC32C, chunkSize=512), ident=0x54889b35, creationTimeMs=171553729}: 
added to evictable,  refCount 2 -> 1
{noformat}

{{trimEvictionMaps}} purged the replica immediately because the unit test sets the ShortCircuitCache size to 0:
{noformat}
2017-10-23 17:19:37,189 [Thread-0] TRACE shortcircuit.ShortCircuitCache (ShortCircuitCache.java:trimEvictionMaps(554)) - ShortCircuitCache(0x1d7b9bbe): 
trimEvictionMaps is purging ShortCircuitReplica{key=1073741825_BP-2140752653-10.16.1.161-1508804374205, metaHeader.version=1, metaHeader.checksum=DataChecksum(type=CRC32C, chunkSize=512), ident=0x54889b35, creationTimeMs=171553729}
{noformat}

The next read after append hit this error:
{noformat}
2017-10-23 17:19:37,250 [DataXceiver for client unix:/tmp/socks.1508804372834.-1113921213/testShortCircuitCacheUnbuffer.59920 [Passing file descriptors for block BP-2140752653-10.16.1.161-1508804374205:blk_1073741825_1001]] INFO  datanode.DataNode (DataXceiver.java:requestShortCircuitFds(419)) - 
Unregistering SlotId(a74d30c4ed858b5846649090e3d8929d:0) because the requestShortCircuitFdsForRead operation failed.
2017-10-23 17:19:37,250 [Thread-0] WARN  impl.BlockReaderFactory (BlockReaderFactory.java:requestFileDescriptors(647)) - BlockReaderFactory(fileName=/test_file, block=BP-2140752653-10.16.1.161-1508804374205:blk_1073741825_1001): 
unknown response code ERROR while attempting to set up short-circuit access. No data exists for block BP-2140752653-10.16.1
{noformat}

Forced to read from TCP:
{noformat}
2017-10-23 17:19:37,250 [Thread-0] WARN  shortcircuit.ShortCircuitCache (ShortCircuitCache.java:create(792)) - ShortCircuitCache(0x1d7b9bbe): 
failed to load 1073741825_BP-2140752653-10.16.1.161-1508804374205
2017-10-23 17:19:37,251 [Thread-0] TRACE impl.BlockReaderFactory (BlockReaderFactory.java:getRemoteBlockReaderFromTcp(733)) - BlockReaderFactory(fileName=/test_file, block=BP-2140752653-10.16.1.161-1508804374205:blk_1073741825_1001): 
trying to create a remote block reader from a TCP socket
{noformat}
, The unit test is subtly different from the original case in that there was no "Meta file for ... not found" message, even though there was "unknown response"., I believe we met the same issue, but triggered by a different cause. Our case a hbase regionserver is trying to SCR a block that has been moved away by balancer, it complains that the block replica not valid, but this is an unknown error

{noformat}
impl.BlockReaderFactory: BlockReaderFactory(fileName=xxx, block=BP-547663139-11.139.225.193-1497349178310:blk_2222386301_1148917283):
unknown response code ERROR while attempting to set up short-circuit access. Block BP-xxx:blk_2222386301_1148917283 is not valid
{noformat}

this causes the SCR been disabled for 10 minutes and impacted hbase performance a lot. [~jzhuge], how do you plan to fix this? I guess this long pause was in case something really bad happens. But in real use cases, we might keep seeing new exceptions (unknown) but don't prefer to disable SCR for so long (like here). Can we have this to be configurable length of time? And if we set it to 0, that gives us a way to NOT disable SCR at all.

Thanks, We hit the similar issue and created a jira : HDFS-12821

According to my understanding, some IOException, like block is not valid, doesn't mean the domain socket doesn't work. We should not disable it. So, key point is how we distinguish them from the exceptions with functional problem of the service.  Any idea?, create a patch for case when block is invalid by balancer, which also includes the UT. [https://issues.apache.org/jira/secure/attachment/12899764/HDFS-12821.patch], What's the risk if we don't disable the SCR at all when we get any IOException? , bq. What's the risk if we don't disable the SCR at all when we get any IOException?

This was some legacy code, I believe the purpose was to prevent something bad happens and SCR keeps failing. An alternative way to handle such case is to disable SCR when it fails with {{same unknown}} exception for a configurable number of times, with a default value e.g 5. And this also gives user a way to never disable it (by setting it to 0) if they want, like us., Thanks all for the discussions, and [~jzhuge] for a test patch.

Hi John,
I tried to run {{TestBlockReaderFactory}} with your patch on my mac, with freshly built native libs. Got:
{noformat}
java.net.SocketException: error computing UNIX domain socket path: path too long.  The longest UNIX domain socket path possible on this host is 103 bytes.

	at org.apache.hadoop.net.unix.DomainSocket.bind0(Native Method)
	at org.apache.hadoop.net.unix.DomainSocket.bindAndListen(DomainSocket.java:211)
	at org.apache.hadoop.hdfs.net.DomainPeerServer.<init>(DomainPeerServer.java:40)
	at org.apache.hadoop.hdfs.server.datanode.DataNode.getDomainPeerServer(DataNode.java:1189)
	at org.apache.hadoop.hdfs.server.datanode.DataNode.initDataXceiver(DataNode.java:1156)
	at org.apache.hadoop.hdfs.server.datanode.DataNode.startDataNode(DataNode.java:1401)
	at org.apache.hadoop.hdfs.server.datanode.DataNode.<init>(DataNode.java:497)
	at org.apache.hadoop.hdfs.server.datanode.DataNode.makeInstance(DataNode.java:2778)
	at org.apache.hadoop.hdfs.server.datanode.DataNode.instantiateDataNode(DataNode.java:2681)
	at org.apache.hadoop.hdfs.MiniDFSCluster.startDataNodes(MiniDFSCluster.java:1643)
	at org.apache.hadoop.hdfs.MiniDFSCluster.initMiniDFSCluster(MiniDFSCluster.java:885)
	at org.apache.hadoop.hdfs.MiniDFSCluster.<init>(MiniDFSCluster.java:497)
	at org.apache.hadoop.hdfs.MiniDFSCluster$Builder.build(MiniDFSCluster.java:456)
	at org.apache.hadoop.hdfs.client.impl.TestBlockReaderFactory.testShortCircuitCacheTemporaryFailure(TestBlockReaderFactory.java:241)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
{noformat}
Searched around and found HDFS-3296, but even with the patches there I still run into this error. Any ideas how to get over it?

Regarding the behavior, not sure who's the SCR expert we should ping. I'm inclined to agree with [~cheersyang] that we can make the disable behavior configurable, and not changing the default behavior. (Don't think there is a good way to differentiate between the Meta file not found IOE and other IOEs.) We can also make the 10 minute disable interval configurable as Andre suggested on the initial report., [~xiaochen] Puzzled. The hadoop-hdfs/pom.xml changes in HDFS-3296.004.patch should reduce the length of domain socket path string. What is the path string?, {{/var/folders/6l/7hfzdv912jvclwrzyfndwjn80000gp/T/socks.1513830184519.1944340260/testShortCircuitCacheUnbuffer._PORT}}

Is the intention of HDFS-3296 patch to make this {{/tmp/xxx}} ?, Yes, that would shorten the path greatly., Sorry, stupid me. I guess I didn't mvn clean when rebuilding with the HDFS-3296 patch... (Thanks for fixing that!)

Will play with the test and come back soon. BTW are you planning to work on this issue John?, Unfortunately I won't have time for a while. Unassign myself., No problem, I'll take a crack soon. Thanks John!, Looked at this again with the helpful unit test from John.

IMO we can do one or some of the following:
# Make the {{expireAfterWrite}} of {{DomainSocketFactory$pathMap}} configurable.
This is lowest risk and gives clients the freedom. {{getPathInfo}} will return {{VALID}} state if the entry is not found from {{pathMap}}, so setting it to 0 basically never disables the domain socket.
# Add a time based counter on {{DomainSocketFactory}} and only disable after a configurable number of errors seen within an interval (say, 10 errors in 10 mins?) for a given path.
This may be more smarter and wouldn't need the basic users to change the config.
Trade off is if a problematic block is read very frequently we'll still have this same issue.
# Add a field about exception type to {{BlockOpResponseProto}} (or something morphs). Anecdotally the reports here are all FNFE. We can update BlockReaderFactory to ignore unknown errors that are FNFE, but still disable other unknown errors.
This will change more stuff, and trivially change the behavior. Still compatible though.

In any case, upon the null {{BlockReader}} from SCR, the read will fall back to regular RPC.

I'm proposing we do #1 and #2. Thoughts?, Attaching a patch to do just #1, with enhanced unit tests from John to test behavior for the default (disable for 10 minutes) and the never disable (0). Reason didn't do #2 is I think the threshold is really a subjective thing, and it feels to me having #1 would be sufficient for the requests so far from this jira.

 (fat-fingered to upload a wrong file. now it's the real patch 1), IMO, how about to do both #1 and #3? #1 make sure that user can avoid overreaction when FNFE occur, but FNFE is just one of the exceptions which may happens in short-circuit reads,what if there were two type of exceptions happens in the same cluster, one is acceptable FNFE and the other is unacceptable that user should disable the short-circuit reads for a while?
Ignore the acceptable FNFE and set a appropriate disable time to handle the unacceptable exceptions seems better in this situation., BTW, [~xiaochen] in case if you don't have enough time to do #3, I'm willing to have a try on it. , | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 15m 42s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 10s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 18m 18s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 40s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 48s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 49s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 35s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 20s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 15s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 36s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 47s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  0m 42s{color} | {color:orange} hadoop-hdfs-project: The patch generated 7 new + 90 unchanged - 1 fixed = 97 total (was 91) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m 46s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 55s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 20s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 27s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}113m 27s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 25s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}192m 57s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.tools.TestHdfsConfigFields |
|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |
| JIRA Issue | HDFS-12528 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12907777/HDFS-12528.01.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  |
| uname | Linux 56262eec8b2e 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 16be42d |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/22820/artifact/out/diff-checkstyle-hadoop-hdfs-project.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/22820/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/22820/testReport/ |
| Max. process+thread count | 2973 (vs. ulimit of 5000) |
| modules | C: hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/22820/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks for looking at this [~GeLiXin] and offering to work on it.

I only did #1 because that's easiest and the most compatible way. Similar to #2 being subjective, #3 also varies based on the exception. It may turn out in the future that some other exceptions should not disable SCR too, which will require more change. But if you want to give #3 a try, please feel free to, I can help with reviews then. If that takes time we can also separate out a new jira.

[~jzhuge] and [~cheersyang], any thoughts from you?, Hi [~xiaochen], [~GeLiXin]

My side I think #1 is enough, but when we implement this approach, if an error triggers to disable SCR, can we give a message to user that by setting the configuration the SCR won't be disabled at all. So admins could check the issue and decide how to handle such issue case by case. It might be good to hear opinion from [~jzhuge] as well.

Thanks, Thanks [~cheersyang].

Attaching [^HDFS-12528.02.patch] to add the config name to logs as suggested. Also fixed pre-commit complaints.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  9m 34s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 29s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 17m 24s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 45s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 47s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 46s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 23s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 41s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 17s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 41s{color} | {color:green} hadoop-hdfs-project: The patch generated 0 new + 123 unchanged - 1 fixed = 123 total (was 124) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 35s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 10m 51s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 13s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 23s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 98m 34s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 24s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}170m  2s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.TestDFSClientRetries |
|   | hadoop.hdfs.server.namenode.TestReconstructStripedBlocks |
|   | hadoop.hdfs.TestReadStripedFileWithMissingBlocks |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure160 |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure130 |
|   | hadoop.hdfs.TestMaintenanceState |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure000 |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure180 |
|   | hadoop.hdfs.TestReplication |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure110 |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithRandomECPolicy |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure190 |
|   | hadoop.metrics2.sink.TestRollingFileSystemSinkWithHdfs |
|   | hadoop.hdfs.server.balancer.TestBalancer |
|   | hadoop.hdfs.TestDFSStripedOutputStream |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure |
|   | hadoop.hdfs.TestGetBlocks |
|   | hadoop.hdfs.tools.offlineImageViewer.TestOfflineImageViewerWithStripedBlocks |
|   | hadoop.hdfs.server.datanode.TestDirectoryScanner |
|   | hadoop.hdfs.server.blockmanagement.TestBlockStatsMXBean |
|   | hadoop.hdfs.TestFileCreation |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure010 |
|   | hadoop.hdfs.TestErasureCodingPoliciesWithRandomECPolicy |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure150 |
|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |
|   | hadoop.hdfs.TestReconstructStripedFile |
|   | hadoop.hdfs.TestLease |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |
| JIRA Issue | HDFS-12528 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12907930/HDFS-12528.02.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 19739da6dac2 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / e990904 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/22834/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/22834/testReport/ |
| Max. process+thread count | 3573 (vs. ulimit of 5000) |
| modules | C: hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/22834/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Hi [~xiaochen]

I still have some nits on the logging, giving if the config is set to 0 it will skip disabling SCR on error, can we add logic like following:

if (dfs.domain.socket.disable.interval.minutes == 0)

  ... {color:#d04437}Skip logging[1] as SCR is not going to be disabled{color}

else

  ... [1]Disabling short-circuit read for DataNode xxx temporarily for xxx minutes based on dfs.domain.socket.disable.interval.minutes, {color:#d04437}set this value to 0 will not disable short-circuit read at all{color}.

Thanks

 , Hi [~cheersyang], thanks for your suggestion.

{quote}

if (dfs.domain.socket.disable.interval.minutes == 0)

  ... {color:#d04437}Skip logging[1] as SCR is not going to be disabled{color}

{color:#333333}
{quote}

Another point to consider about this logging is that this logic may cause persistent and vast logs in the 
 situation that FNFE keep happening but no need to deal with it., Thanks for the review and comments.

Even though it's not disabled, I think having the log about the error is still helpful for debugging purposes. The details of the response can only be logged in {{requestFileDescriptors}}, and having it there is critical for troubleshooting. (It's true that currently if the same error happens repeatedly, we'll log them as such - doing #3 in the future may help on that.)

It also feels to me that knowing the config name, an average admin/user would be able to find it in hdfs-default and look at the explanation there. But if you feel strongly I can add the 'set to 0 to disable' message explicitly.

I do see your point about '0' being a special value though, we may tweak the message a bit to something like
{{value == 0 ? "not disabled" : "disabled for " + value + "minutes."}}., Hi [~xiaochen]

Sure we need those errors, I think you might misunderstand me. I was just suggesting to add the red part words to the log (To let people know we have an option to not disable SCR). I meant to use {{...}} to represent existing error messages, that no needs to change.
{quote} we may tweak the message a bit
{quote}
Yeah, that will be good as long as it gives user the correct info. Something like "disabling ... temporarily for 0 minutes" was a bit odd to me.

That was just a nit picky from me. Thanks for getting this to a closure., Thanks for the clarification [~cheersyang]. I indeed misunderstood - I read your comment as 'skip logging', as opposed to 'skip logging[1]'. :) 

Patch 3 to refine the logging for 0. The log message still only says about the config name, without further describing it. On the other hand, the xml description of this config explicitly says 0 will not disable SCR at all., Hi [~xiaochen], thanks for the update. LGTM, pending on jenkins., [~xiaochen], thanks for the great work! Patch 03 LGTM. Just a minor question: will we ever need to set dfs.domain.socket.disable.interval in seconds instead of minutes?, Thanks [~jzhuge] reviewing!
{quote}will we ever need to set dfs.domain.socket.disable.interval in seconds instead of minutes?
{quote}
Honestly I don't know. But good point, I don't see any downside by using a finer grained interval unit. [^HDFS-12528.04.patch] uses SECOND as the interval and defaults to 600., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 15s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 25s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 19m 17s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  2m  7s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 51s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m  2s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 13m 30s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 45s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 31s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  2m  6s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 48s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 48s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 47s{color} | {color:green} hadoop-hdfs-project: The patch generated 0 new + 124 unchanged - 1 fixed = 124 total (was 125) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 53s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  1s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 47s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m 13s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 30s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 37s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}125m 33s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 29s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}195m 42s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |
| JIRA Issue | HDFS-12528 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12908094/HDFS-12528.03.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 0bb90d8c2877 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 443523f |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/22851/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/22851/testReport/ |
| Max. process+thread count | 2842 (vs. ulimit of 5000) |
| modules | C: hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/22851/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 11s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 19m 11s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 46s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 51s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m 11s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 14m 26s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m  1s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 32s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 11s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  2m  8s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  2m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  2m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 53s{color} | {color:green} hadoop-hdfs-project: The patch generated 0 new + 124 unchanged - 1 fixed = 124 total (was 125) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m  5s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 30s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  4m 12s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 22s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 32s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red}112m 26s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 22s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}182m 55s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |
| JIRA Issue | HDFS-12528 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12908111/HDFS-12528.04.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux a358c34b71e3 3.13.0-135-generic #184-Ubuntu SMP Wed Oct 18 11:55:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / b63dcd5 |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/22853/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/22853/testReport/ |
| Max. process+thread count | 2938 (vs. ulimit of 5000) |
| modules | C: hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/22853/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Nice work, +1 non-binding. Only a trivial proposal which is not important:
{quote}String disableMsg = "disabled temporarily for " + clientContext.
 getDomainSocketFactory().getPathExpireSeconds() + " seconds";
 if (clientContext.getDomainSocketFactory().getPathExpireSeconds() == 0)
Unknown macro: \{ disableMsg = "not disabled"; }{quote}
{{BlockReaderFactory#requestFileDescriptors}} calls {{clientContext.getDomainSocketFactory().getPathExpireSeconds()}} two times in quick succession. Use a local variable to store the value of {{clientContext.getDomainSocketFactory().getPathExpireSeconds()}} may be a little more efficient.

BTW, whether it is necessary to open a new jira to implement #3? If any, I'm willing to have a try., [~GeLiXin], thanks for detailed review. Sure, patch 5 a local var for better readability.

bq.  #3
Sure, feel free to open a new jira and work on it. Thanks!, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  9s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 1 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 17m 32s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 39s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 46s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 45s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 12m 32s{color} | {color:green} branch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 28s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 20s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  8s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m 36s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m 36s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 44s{color} | {color:green} hadoop-hdfs-project: The patch generated 0 new + 124 unchanged - 1 fixed = 124 total (was 125) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 40s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} xml {color} | {color:green}  0m  2s{color} | {color:green} The patch has no ill-formed XML file. {color} |
| {color:green}+1{color} | {color:green} shadedclient {color} | {color:green} 11m  6s{color} | {color:green} patch has no errors when building and testing our client artifacts. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 44s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 17s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  1m 25s{color} | {color:green} hadoop-hdfs-client in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 95m 58s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 26s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}158m 11s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.TestWriteReadStripedFile |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure150 |
|   | hadoop.hdfs.server.blockmanagement.TestUnderReplicatedBlocks |
|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailureReporting |
|   | hadoop.hdfs.TestMiniDFSCluster |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailureWithRandomECPolicy |
|   | hadoop.metrics2.sink.TestRollingFileSystemSinkWithHdfs |
|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailure |
\\
\\
|| Subsystem || Report/Notes ||
| Docker | Client=17.05.0-ce Server=17.05.0-ce Image:yetus/hadoop:5b98639 |
| JIRA Issue | HDFS-12528 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12908203/HDFS-12528.05.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  shadedclient  findbugs  checkstyle  xml  |
| uname | Linux 07148968a19e 3.13.0-139-generic #188-Ubuntu SMP Tue Jan 9 14:43:09 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 7fd287b |
| maven | version: Apache Maven 3.3.9 |
| Default Java | 1.8.0_151 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/22868/artifact/out/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/22868/testReport/ |
| Max. process+thread count | 3999 (vs. ulimit of 5000) |
| modules | C: hadoop-hdfs-project/hadoop-hdfs-client hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/22868/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, precommit failures are unrelated to the change. [~cheersyang] / [~jzhuge], would you mind to give a final pass? Thanks a lot, Hi [~xiaochen], +1 to the latest patch, thanks for getting it done. I will commit this tomorrow if no body objects. Thanks!, Revised the Jira title a bit to describe the fix better., +1 LGTM, Thanks all, and thanks John for writing the initial unit test!, Thanks [~xiaochen] to provide the fix, thanks for [~jzhuge] for the UT and review, also reviews from [~GeLiXin]. I just committed this to trunk and branch-3.0. , SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #13584 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/13584/])
HDFS-12528. Add an option to not disable short-circuit reads on (wwei: rev 2e7331ca264dd366b975f3c8e610cf84eb8cc155)
* (edit) hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/HdfsClientConfigKeys.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/BlockReaderFactory.java
* (edit) hadoop-hdfs-project/hadoop-hdfs/src/main/resources/hdfs-default.xml
* (edit) hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/client/impl/TestBlockReaderFactory.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/DfsClientConf.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java
* (edit) hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/DomainSocketFactory.java
, Thanks for the commit [~cheersyang].

Cherry-picked to branch-2 as well.]