[I'm attaching a patch that overrides the datanode behavior to open the block and meta files with share delete permission via a JNI call on Windows.

This is a bit messy, so I'm curious to get feedback.  We've solved similar problems in the past by stopping the daemon that holds the file opened before corrupting the underlying files, but in this case, stopping the daemon would ruin the intent of the test.  I also didn't think it was correct in general to use share delete here, so I triggered the logic from a new config flag that is only set to true by this test.

I verified that the test passes on Mac and Windows.
, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12580499/HDFS-4752.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4317//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4317//console

This message is automatically generated., I'm canceling this patch for now, but leaving the issue opened, and leaving the patch here to point out where the file locking occurs.  On further investigation, we may need to allow share-delete access on the block and meta files anyway (not just in a testing mode).  I need to investigate more around potential interactions with concurrent deletBlockPool operations, i.e. HDFS-4768., On further reflection, I'm inclined to skip this test on Windows.  The file locking could actually be a desirable behavior for preventing accidental deletion of a replica.  I'm reluctant to introduce potentially dangerous configuration hooks just to satisfy the test, as was done in patch version 1.  Instead, I'm uploaing patch version 2 to skip the test on Windows.

My only other concern was around the potential for concurrent deleteBlockPool operations.  However, the CLI documentation for deleteBlockPool states that the operator must use refreshNamenodes first so that there is no live activity on the block pool.  This means that we have not committed to supporting a concurrent deleteBlockPool, and therefore we do not need share-delete semantics.

{code}
    String deleteBlockPool = "-deleteBlockPool: Arguments are datanodehost:port, blockpool id\n"+
                             "\t\t and an optional argument \"force\". If force is passed,\n"+
                             "\t\t block pool directory for the given blockpool id on the given\n"+
                             "\t\t datanode is deleted along with its contents, otherwise\n"+
                             "\t\t the directory is deleted only if it is empty. The command\n" +
                             "\t\t will fail if datanode is still serving the block pool.\n" +
                             "\t\t   Refer to refreshNamenodes to shutdown a block pool\n" +
                             "\t\t service on a datanode.\n";
{code}
, +1 for the updated patch.

Thanks for updating it. If any legitimate functionality is broken by the lack of share-delete semantics we'll fix it when we find out about it., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12584722/HDFS-4752.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4438//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4438//console

This message is automatically generated., Chris, I agree with your analys about disable the test on Windows, instead of adding complexity of config hooks. +1 for the patch., Integrated in Hadoop-trunk-Commit #3892 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3892/])
    HDFS-4752. TestRBWBlockInvalidation fails on Windows due to file locking. Contributed by Chris Nauroth. (Revision 1491631)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1491631
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestRBWBlockInvalidation.java
, Integrated in Hadoop-Yarn-trunk #237 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/237/])
    HDFS-4752. TestRBWBlockInvalidation fails on Windows due to file locking. Contributed by Chris Nauroth. (Revision 1491631)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1491631
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestRBWBlockInvalidation.java
, Integrated in Hadoop-Mapreduce-trunk #1454 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1454/])
    HDFS-4752. TestRBWBlockInvalidation fails on Windows due to file locking. Contributed by Chris Nauroth. (Revision 1491631)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1491631
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestRBWBlockInvalidation.java
, We are also seeing this failure in branch-2. The original fix should be able to directly apply., Resolving this. The fix was already in both trunk and branch-2.]