[Are you aware of [HDFS-8314]? Was it related to your concern? Thanks., Although not strictly HDFS-8314's fault, it's the other half of the "2 wrongs accidentally make a right".

Simplest answer is remove {{@InterfaceAudience.Private}} from {{HdfsConfiguration}} otherwise there's no clean way to trigger loading hdfs-site w/o explicitly adding the resource.

Spark complained about the visibility of this class when they encountered a similar problem.  In their case they pass serialized confs.   If a filesystem isn't accessed prior to serializing the conf  - because the fs service loader will trigger creation of {{DistributedFileSystem}}/{{DFSClient}}/{{HdfsConfiguration}} - hdfs parameters are missing.  Very confusing to debug., +[~wheat9] +[~stevel@apache.org] for making {{HdfsConfiguration}} audience public., [~daryn], [~wheat9], [~stevel@apache.org], any comments on this? , I think my stance on HdfsConfiguration is well documented: whether the HDFS team choose to accept it or not, it's a defacto part of the public API, its constants are imported downstream, hdfs-site is expected to be loaded â€”and if you change things without asking people downstream are unhappy. HDFS-9301 spells out my concerns in more detail.

+1 for for making it public. 

In YARN-679, my generic service launcher, I explicitly load in the hdfs-site and yarn-site XML files early, plus you can specify extra resources (hbase-site.xml) to also load. This gets everything pulled in before you go anywhere near a filesystem API *or UGI*.]