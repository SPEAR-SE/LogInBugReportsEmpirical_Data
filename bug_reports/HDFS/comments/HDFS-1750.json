[h1750_20110314.patch: use getFullPath(..) in ListPathsServlet., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12473616/h1750_20110314.patch
  against trunk revision 1080836.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.hdfs.TestFileConcurrentReader

    -1 contrib tests.  The patch failed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://hudson.apache.org/hudson/job/PreCommit-HDFS-Build/258//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-HDFS-Build/258//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-HDFS-Build/258//console

This message is automatically generated., Comments:
# Can you add a description why this problem happens and how you are fixing it?
# Should we create a bug for access and modification time mismatch between hftp access and direct hdfs access?

+1 for the patch., Suresh, thanks for the review.

bq. 1. Can you add a description why this problem happens and how you are fixing it?
The problem is that {{HdfsFileStatus.getLocalName()}} returns an empty string in some cases; see HDFS-1743.

The solution here is simply not to use {{HdfsFileStatus.getLocalName()}} in {{ListPathsServlet}}.  We use {{HdfsFileStatus.getFullPath(..)}} instead since the full path is required anyway.

bq. Should we create a bug for access and modification time mismatch between hftp access and direct hdfs access?
Will do., h1750_20110314_0.20-security.patch: for 0.20-security (the changes are the same), -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12473952/h1750_20110314_0.20-security.patch
  against trunk revision 1082263.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://hudson.apache.org/hudson/job/PreCommit-HDFS-Build/268//console

This message is automatically generated., +1 for the patch., +1 for the 20.security version of the patch., h1750_20110314_0.21.patch: for 0.21, I have committed this to trunk, 0.22, 0.21.1 and 0.20-security.

Thanks Suresh and Jitendra for the review., Integrated in Hadoop-Hdfs-trunk-Commit #569 (See [https://hudson.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/569/])
    , >> Should we create a bug for access and modification time mismatch between hftp access and direct hdfs access?
>
> Will do.

I filed HDFS-1772 for the access/modification time bug., I'm traveling and will return to the office on Monday, March 28th.

For urgent matters, please contact Aparna Ramani.

Thanks!

-- Philip
, Integrated in Hadoop-Hdfs-trunk #643 (See [https://builds.apache.org/hudson/job/Hadoop-Hdfs-trunk/643/])
    , Integrated in Hadoop-Hdfs-22-branch #35 (See [https://builds.apache.org/hudson/job/Hadoop-Hdfs-22-branch/35/])
    , Hadoop 0.20.204.0 was released.]