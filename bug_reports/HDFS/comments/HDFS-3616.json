[Nicholas, could this be due to the recent FsData* refactoring?, The refactoring actually was happened 3 months ago.  There were many more recent datanode changes after it.

BTW, is there a way to reproduce the ConcurrentModificationException?, This has been failing for a while the only reason we're catching it now is that with HDFS-3568 we've turned the test exit (the NPE resulted in System#exit which hides the test failure) we're actually exposing it.

Can reproduce by looping TestWebHdfsWithMultipleNameNodes., Then, this bug may be hidden for a long time.  I think is is not related to the refactoring since it only moved the code to packages but not changing the logic.  Anyway, I am happy to take a look., Also got this exception in HDFS-4106. Seems like the exception happens because a thread is iterating the hashmap bpSlices (FsVolumeImpl#shutdown) while another thread is remove entries from the same hashMap (FsVolumeImpl#shutdownBlockPool). A quick fix can be changing bpSlices from a HashMap to a ConcurrentHashMap., After checking the code, I guess the exception is caused by this process:

1. In DataNode#shutdown(), DataNode#shouldRun is set to false.

2. BPServiceActor#run() stops running, and runs BPServiceActor#cleanUp().

3. While executing BPServiceActor#cleanUp(), DataNode#shutdownBlockPool() is called, where blockPoolManager.remove(bpos) is executed before "this.blockPoolManager.shutDownAll();" is called in DataNode#shutdown(). Thus the corresponding BPOfferService cannot be seen and shutdown by blockPoolManager#shutDownAll() since it has been removed from BlockPoolManager#offerServices.

4. The actor thread continues running DataNode#shutdownBlockPool() which will finally tries to remove record from FsVolumeImpl#bpSlices, while the DataNode shutdown thread runs into FsVolumeImpl#shutdown() which iterates the bpSlices. Thus the ConcurrentModificationException may be thrown.

So to avoid changing other code, maybe we can simply change bpSlices from HashMap to ConcurrentHashMap? A simple patch based on this is attached., After discussing with Nicholas, we think to avoid the concurrentModificationException, we only need to keep a copy of BlockPoolManager#offerServices before we set DataNode#shouldRun to false. In that case, blockPoolManager#shutDownAll() can access and shutdown all the actor threads thus no concurrent access of the bpSlices will happen anymore.

Uploaded a patch based on this., Jing has dug up this bug that since DataNode.shouldRun is set to false, some BP actor threads start shutting down and get removed from the list.  Then, datanode won't be able to join those threads later on.  The proposed patch should fix the bug.

Uma and Eli, since you were able to reproduce the failure before, see if you could get a chance to help verifying the patch by trying to reproduce the failure with the patch.  I hope you fail :) and thank you in advance., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12550579/HDFS-3616.trunk.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.web.TestWebHDFS
                  org.apache.hadoop.hdfs.TestHDFSServerPorts

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3392//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3392//console

This message is automatically generated., Need to check if blockPoolManager is null before call getAllNamenodeThreads()., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12550587/HDFS-3616.trunk.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.balancer.TestBalancer

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3393//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3393//console

This message is automatically generated., +1 the patch looks good.  The failed test is not related., I have committed this.  Thanks, Jing!, Integrated in Hadoop-trunk-Commit #2931 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/2931/])
    HDFS-3616. Fix a ConcurrentModificationException bug that BP actor threads may not be shutdown properly in DataNode.  Contributed by Jing Zhao (Revision 1402608)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1402608
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolManager.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
, Integrated in Hadoop-Yarn-trunk #18 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/18/])
    HDFS-3616. Fix a ConcurrentModificationException bug that BP actor threads may not be shutdown properly in DataNode.  Contributed by Jing Zhao (Revision 1402608)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1402608
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolManager.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
, Integrated in Hadoop-Hdfs-trunk #1208 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1208/])
    HDFS-3616. Fix a ConcurrentModificationException bug that BP actor threads may not be shutdown properly in DataNode.  Contributed by Jing Zhao (Revision 1402608)

     Result = SUCCESS
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1402608
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolManager.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
, Integrated in Hadoop-Mapreduce-trunk #1238 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1238/])
    HDFS-3616. Fix a ConcurrentModificationException bug that BP actor threads may not be shutdown properly in DataNode.  Contributed by Jing Zhao (Revision 1402608)

     Result = FAILURE
szetszwo : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1402608
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolManager.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
]