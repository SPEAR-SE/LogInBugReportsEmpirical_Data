[We have an internal patch for namenode throwing retriable exception instead of making a synchronous call to kms in case of cache miss.
I can post the same patch if you don't mind., Here's a patch which breaks out the EDEKCacheLoader into its own class, and uses it to run the EDEK warm up in the background on createZone.

Rushabh, thanks for the offer. createZone still queries the KMS synchronously in {{ensureKeyIsInitialized}} to see if the key exists. Your proposed patch would still help with that. This JIRA is just to help with slow generation of EDEKs., [~xiaochen] could you review, since I think you worked on this warm-up code originally?, Thanks [~andrew.wang] for reporting the issue and providing a patch. I think this is a good fix.

[~shahrs87]'s comments addresses a similar but different problem, but also sounds like a good improvement. Rushabh, would you mind filing a jira and attach your patch? Thanks.

Back to this jira. It seems the proactive warming up was added by HDFS-7209, but now that we have EDEKloader thread, it makes sense to do it there. And most importantly, async.

Some small comments and 1 question. (Also thanks for the refactoring, looks pretty good!)

Comments:
- I feel the javadocs on those {{@VisibleForTesting}} methods are a bit redundant.
- This is existing code, {{EDEKCacheLoader.java}} line 112's param name should be "keyNames", not "edeks"
- precommit will likely catch this: FSN's {{edekCacheLoader}} should be private.
- I think the new test case's name should be warmup *Dont* block create zone.
- Sleeping for nine 9s' are pretty much stalled, but I think {{Long.MAX_VALUE}} reads better.

Question:
Wanted to get this all sorted out: It seems after this fix there are only 2 places that could end up with blocking call to KMS:
- startFile which eventually {{generateEncryptedKey}}. With Rushabh's patch this will become retriable exception IIUC.
- createZone which eventually {{ensureKeyIsInitialized}}. Will this also be covered? It seems to me {{KeyProvider#getMetadata}} is always a synchronized call, and there's no client-side cache now. If our goal is createEZ should never block, shouldn't we fix this too?, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 31s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 26s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 14m 48s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 15m 16s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 59s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 52s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 37s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 21s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  8s{color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 16s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 37s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 14m 37s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  2m  3s{color} | {color:orange} root: The patch generated 5 new + 238 unchanged - 0 fixed = 243 total (was 238) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 44s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 32s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javadoc {color} | {color:red}  0m 19s{color} | {color:red} hadoop-common-project_hadoop-kms generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m  4s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 97m 52s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 34s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}167m 35s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailureReporting |
|   | hadoop.hdfs.TestAclsEndToEnd |
|   | hadoop.hdfs.TestEncryptionZonesWithKMS |
| Timed out junit tests | org.apache.hadoop.hdfs.server.blockmanagement.TestBlockStatsMXBean |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | HDFS-11885 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12870489/HDFS-11885.001.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 4e9890dad39e 3.13.0-116-generic #163-Ubuntu SMP Fri Mar 31 14:13:22 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 4b4a652 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/19683/artifact/patchprocess/diff-checkstyle-root.txt |
| javadoc | https://builds.apache.org/job/PreCommit-HDFS-Build/19683/artifact/patchprocess/diff-javadoc-javadoc-hadoop-common-project_hadoop-kms.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/19683/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/19683/testReport/ |
| modules | C: hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs U: . |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/19683/console |
| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks for the review Xiao, new patch attached. Addressed your feedback except I'd like to leave the test-only method comments if that's okay.

In terms of remaining gaps:

* I thought we'd already made startFile retry when the EDEK cache isn't filled, but looking again, this doesn't seem to be the case. Should be possible to do this, good follow-on.
* Rushabh posted a patch at HDFS-11804 for adding retries to the KMS client. This should handle the remaining createZone issue., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 20s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 21s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 14m  1s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 13m 57s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m  1s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 52s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 41s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 24s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  6s{color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 15s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  5s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 13m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 13m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m  0s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 54s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 48s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javadoc {color} | {color:red}  0m 20s{color} | {color:red} hadoop-common-project_hadoop-kms generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 59s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 73m 47s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 37s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}140m 35s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailureReporting |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure080 |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure090 |
|   | hadoop.hdfs.TestAclsEndToEnd |
|   | hadoop.hdfs.server.datanode.TestDirectoryScanner |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | HDFS-11885 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12870530/HDFS-11885.002.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux bc760900eecb 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 4b4a652 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| javadoc | https://builds.apache.org/job/PreCommit-HDFS-Build/19690/artifact/patchprocess/diff-javadoc-javadoc-hadoop-common-project_hadoop-kms.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/19690/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/19690/testReport/ |
| modules | C: hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs U: . |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/19690/console |
| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks Andrew for revving and the pointer. latest patch LGTM, +1 pending pre-commit fixes.

I think Rushabh's comment here was for startFile (generateEDEK's cache miss, same as your #1)?
{quote}
We have an internal patch for namenode throwing retriable exception instead of making a synchronous call to kms in case of cache miss.
{quote}
Happy to follow it up on HDFS-11804.

Regarding {{ensureKeyIsInitialized}}'s {{provider.getMetadata(keyName)}}, that's a [synchronized call without client-side caches|https://github.com/apache/hadoop/blob/4369690ce63566131aee28696bf2683a3cb20205/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java#L907] right? I think we need to fix it in another follow on, since both this jira and HDFS-11804 doesn't seem to touch there., [~andrew.wang]: Thanks for the patch. It looks almost good except for some minor comments.
1. We can skip reading EDEKCacheLoader related conf properties in {{FSNamesystem}}. We can just pass the conf object to EDEKCacheLoader class and let it read in EDEKCacheLoader.
This will cleanup the code in {{FSNamesystem}}
2. Why to call {{edekCacheLoader.warmUpEdekCache(0)}} after {{FSNamesystem#createEncryptionZone}} ?
3. The patch applies almost cleanly in branch-2.8 but compilation is failing with the following error.
{noformat}
[ERROR] COMPILATION ERROR : 
[INFO] -------------------------------------------------------------
[ERROR] /Users/rushabhs/hadoop/hadoop-tmp/Hadoop/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestEncryptionZonesWithKMS.java:[159,17] method warmUpEncryptedKeys in class org.apache.hadoop.crypto.key.KeyProviderCryptoExtension cannot be applied to given types;
  required: java.lang.String[]
  found: java.lang.Object
  reason: varargs mismatch; java.lang.Object cannot be converted to java.lang.String
[ERROR] /Users/rushabhs/hadoop/hadoop-tmp/Hadoop/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestEncryptionZonesWithKMS.java:[168,50] incompatible types: java.lang.Object cannot be converted to java.lang.String
{noformat}
Its in {{TestEncryptionZonesWithKMS#testWarmupEDEKCacheDoesNotBlocksCreateZone}} while calling {{when(spy).warmUpEncryptedKeys(Mockito.any()}}
warmUpEncryptedKeys expects String object but getting Object.
Can you please check on that ?, bq. The patch applies almost cleanly in branch-2.8 but compilation is failing with the following error.
This is because the {{javac.version}} is 1.7 in branch-2.8 and 1.8 in trunk.
In 1.8, java automatically casts {{java.lang.Object}} to whatever the method expects.
There are couple of options.
1. Have a different patch for branch-2.8 
2. Change the trunk patch to explicitly type casts to whatever the method expects.
I would prefer option#2 since that way there would be minimum difference between branch-2.8 and trunk. But I will leave it upto you., {noformat}
    Mockito.doAnswer(new Answer<EncryptedKeyVersion>() {
      @Override
      public EncryptedKeyVersion answer(
          InvocationOnMock invocationOnMock) throws Throwable {
        Thread.sleep(Long.MAX_VALUE);
        return null;
      }
    }).when(spy).warmUpEncryptedKeys(Mockito.any());
{noformat}
Also one more thing.
The above chunk of code is redundant as {{KeyProviderCryptoExtension#warmUpEncryptedKeys}} is never called since that is only being called at namenode startup and since we are not restarting namenode in the test case, it will never be called., Thanks for reviewing Rushabh. New patch attached, with comments:

bq. 1. We can skip reading EDEKCacheLoader related conf properties in FSNamesystem. We can just pass the conf object to EDEKCacheLoader class and let it read in EDEKCacheLoader.

One issue with this is that I'd like to do fail-fast with the precondition checks. If we defer the config reading to EDEKCacheLoader's constructor, it won't fail until the NN starts active services. I left this as is.

bq. 2. Why to call edekCacheLoader.warmUpEdekCache(0) after FSNamesystem#createEncryptionZone ?

We'd still like to warm up in the background when a new EZ key is seen. This way it does not have to block during the first file write; we get consistent performance.

bq. 3. The patch applies almost cleanly in branch-2.8 but compilation is failing with the following error.

Thanks, changed the test a bit and checked compilation on branch-2.

bq. The above chunk of code is redundant as KeyProviderCryptoExtension#warmUpEncryptedKeys is never called since that is only being called at namenode startup and since we are not restarting namenode in the test case, it will never be called.

I did this as a guard against future changes to prod code. Some future programmer might change createFile to calling warmUpEncryptedKeys, and it'd be caught by this test case., Missed the earlier javadoc issue, quick re-rev., Thanks [~andrew.wang] for the new rev and [~shahrs87] for review comments!

Here's my +1 to patch 003, pending jenkins and any other comments from Rushabh. (Mostly agree with Andrew on above discussions, except the future-proof mock which I'm okay either way, and the unified test change Rushabh proposed which makes sense to me.), | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 26s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 33s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 14m 23s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 15m 48s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m  2s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 49s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 22s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  6s{color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 15s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 59s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 10m 59s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m  2s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 43s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} javadoc {color} | {color:red}  0m 20s{color} | {color:red} hadoop-common-project_hadoop-kms generated 1 new + 0 unchanged - 0 fixed = 1 total (was 0) {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m  8s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 87m 57s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 40s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}153m 10s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.TestRollingUpgrade |
|   | hadoop.hdfs.TestAclsEndToEnd |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | HDFS-11885 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12871730/HDFS-11885.003.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux adf12282f6b5 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / b65100c |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| javadoc | https://builds.apache.org/job/PreCommit-HDFS-Build/19808/artifact/patchprocess/diff-javadoc-javadoc-hadoop-common-project_hadoop-kms.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/19808/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/19808/testReport/ |
| modules | C: hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs U: . |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/19808/console |
| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 16s{color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 25s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 14m 28s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 14m 31s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 57s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 48s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 20s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  7s{color} | {color:green} trunk passed {color} |
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 14s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  9s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 10m 54s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 10m 54s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  2m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  2m  5s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  3m 20s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 75m 36s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 38s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}140m 14s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure080 |
|   | hadoop.hdfs.TestAclsEndToEnd |
|   | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailureReporting |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | HDFS-11885 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12871733/HDFS-11885.003.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux 07bc7e923660 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / b65100c |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/19809/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/19809/testReport/ |
| modules | C: hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs U: . |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/19809/console |
| Powered by | Apache Yetus 0.5.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, +1 (non-binding) ltgm.
[~andrew.wang] can you also attach branch-2 and branch-2.8 patch so that jenkins pre-commit can build it., Question.  Is this warmup code really necessary?  Is there a significant benefit that justifies the additional complexity?

Isn't it saving maybe 1-2ms latency from the first create in an EZ after startup?  Since there's a sleep delay in the warmup thread, a client issuing a create before the warmup is going to take the edek fetch hit anyway.
, Thanks Daryn, good question.

My understanding is mostly from HDFS-7209:
{quote}
Currently when creating file in an encryption zone for the first time, key provider will get bunch of keys from KMS and fill in the queue. It will take some time. We can initialize the key queue when creating the encryption zone by admin.
{quote}

Each create only gets 1 edek, and there's the async thread in {{ValueQueue}} to fill in the cache (e.g. 500 edeks). I could see values by ensuring the cache to be filled proactively rather than depending lazily on the first create. But maybe we can remove/reduce the sleep delay.

Would also like to hear [~andrew.wang]'s ideas. :), Thanks for taking a look Daryn,

createEncryptionZone calls warmUpEdekCache with a 0 sleep delay, so it should warm up promptly.

I think there's still some value here, since we're looking at usecases involving HSM key providers. HSMs are a lot slower at generating DEKs than /dev/random. To give you an idea, during testing we blew the 60s RPC timeout while waiting for the cache to fill to the low watermark (30 keys). We'd really like the cache to be warmed up before a workload hits the EZ., Rebased patch attached., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m 18s{color} | {color:blue} Docker mode activated. {color} |
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:green}+1{color} | {color:green} test4tests {color} | {color:green}  0m  0s{color} | {color:green} The patch appears to include 2 new or modified test files. {color} |
|| || || || {color:brown} trunk Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 29s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 13m 10s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 13m 26s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  1m 55s{color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 44s{color} | {color:green} trunk passed {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  1m 38s{color} | {color:red} hadoop-hdfs-project/hadoop-hdfs in trunk has 9 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m  9s{color} | {color:green} trunk passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 15s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m  1s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  9m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  9m 51s{color} | {color:green} the patch passed {color} |
| {color:orange}-0{color} | {color:orange} checkstyle {color} | {color:orange}  1m 55s{color} | {color:orange} root: The patch generated 2 new + 230 unchanged - 1 fixed = 232 total (was 231) {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green}  1m 45s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 26s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 11s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} unit {color} | {color:green}  2m 58s{color} | {color:green} hadoop-kms in the patch passed. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 61m 56s{color} | {color:red} hadoop-hdfs in the patch failed. {color} |
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 32s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black}121m  1s{color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| Failed junit tests | hadoop.hdfs.server.datanode.TestDataNodeVolumeFailureReporting |
|   | hadoop.hdfs.web.TestWebHdfsTimeouts |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailureWithRandomECPolicy |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure080 |
|   | hadoop.hdfs.TestAclsEndToEnd |
|   | hadoop.hdfs.TestDFSStripedOutputStreamWithFailure150 |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:14b5c93 |
| JIRA Issue | HDFS-11885 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12880136/HDFS-11885.004.patch |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux c86bb6357c75 4.4.0-43-generic #63-Ubuntu SMP Wed Oct 12 13:48:03 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 79df1e7 |
| Default Java | 1.8.0_131 |
| findbugs | v3.1.0-RC1 |
| findbugs | https://builds.apache.org/job/PreCommit-HDFS-Build/20540/artifact/patchprocess/branch-findbugs-hadoop-hdfs-project_hadoop-hdfs-warnings.html |
| checkstyle | https://builds.apache.org/job/PreCommit-HDFS-Build/20540/artifact/patchprocess/diff-checkstyle-root.txt |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/20540/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs.txt |
|  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/20540/testReport/ |
| modules | C: hadoop-common-project/hadoop-kms hadoop-hdfs-project/hadoop-hdfs U: . |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/20540/console |
| Powered by | Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, Thanks Andrew for rebasing. The checkstyle does look related (extra line break on TestEncryptionZonesWithKMS class).

The test failure {{TestAclsEndToEnd#testCreateEncryptionZone}} appears to be related though., bq. I think there's still some value here, since we're looking at usecases involving HSM key providers. HSMs are a lot slower at generating DEKs than /dev/random. To give you an idea, during testing we blew the 60s RPC timeout while waiting for the cache to fill to the low watermark (30 keys). We'd really like the cache to be warmed up before a workload hits the EZ.

With the current design, I see the motivation.  However, if Rushabh posts the patch we've been running internally which basically throws retriable if no EDEK is available, yet has kicked off an async fetch, can we entirely get rid of the warmup code?, I'm fine with this plan, it was an oversight not to use RetryStartFileException in this case. Though, I'm wondering how you trigger the async fetch in startFile without keeping this code?, Hey [~shahrs87], are you planning to post the patch that Daryn mentioned above? Would like to move forward on this issue., I'm dropping this one in priority. Rushabh, we'd still appreciate your patch if you have it., bq. Rushabh, we'd still appreciate your patch if you have it.
I apologize for not replying earlier.
I will create a new jira as soon as I have some cycles to upmerge internal working 2.8 patch with trunk and writing new test cases., Is this still on target for 2.9.0 ? If not, can we we push this out to the next major release ?, bq. Rushabh, we'd still appreciate your patch if you have it.
I will put up a patch shortly. 
bq. Is this still on target for 2.9.0 ? If not, can we we push this out to the next major release ?
I feel its ok to move to next major release.
Having said that I don't see 2.9.1 to retarget ?
[~asuresh]: Does it make sense to create 2.9.1 target version ?, [~shahrs87], feel free to target 2.9.1 - We don't have it planned but I expect a stabilization release after 2.9.0
But having said that, looks like this is good to have, so I am willing to pick it if we can get this in by end of the week., Pushing it out from 2.9.0 based on [~shahrs87]'s comment. Feel free to revert if required., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  5s{color} | {color:red} HDFS-11885 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HDFS-11885 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12880136/HDFS-11885.004.patch |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/21661/console |
| Powered by | Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, I tried to upmerge my internal 2.8 version of patch to trunk and it is conflicting with HDFS-11210.
After HDFS-11210, the _asynchronus_ behavior of background refill thread is no longer synchronous.
Created HDFS-12667 to fix that., Thanks [~shahrs87] for the efforts and creating HDFS-12667. Will follow up on that jira to discuss.

, Is it still on target for 2.9.1?  If not, can we push this out from 2.9.1 to next release? , | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  5s{color} | {color:red} HDFS-11885 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HDFS-11885 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12880136/HDFS-11885.004.patch |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/23260/console |
| Powered by | Apache Yetus 0.8.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

]