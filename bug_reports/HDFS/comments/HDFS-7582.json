[Attached the patch. 
Please review, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12690009/HDFS-7582-001.patch
  against trunk revision ddc5be4.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9140//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/9140//artifact/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9140//console

This message is automatically generated., Hi, [~vinayrpet].  I had tested this behavior against a Linux file system with POSIX ACLs during initial implementation.  I observed the same behavior on Linux: you can end up exceeding the limit of 32 if there are a lot of default ACL entries.  While it's a bit counter-intuitive, I thought it would be more familiar to users if HDFS kept the same behavior.  Let me know what you think., Hi [~cnauroth], Thanks for checking.
I have also verified again, but my results shows different behaviour in this context. Also there is a chance that this could be distribution specific. I have verified in CentOS distribution.

In My test of POSIX ACLs, the limit of 25 were separately applied on ACCESS and DEFAULT entries, so totally there could be 50 entries.
So when the child directory created, it also will have max of 50 entries, 25 ACCESS and 25 DEFAULT. So there is no violation here.

But in HDFS ACLs, the limit is applied is on whole. This has to match the POSIX behaviour.
There are 2 possibilities to handle current case.
1. Apply the EXISTING limit (32) separately on ACCESS and DEFAULT. This will increase the NN Memory.
2. Restrict only DEFAULT entries to 16, and whole to 32. This could have backward compatibility issue if already existing default entries are more than 16, of course thats not correct, still i t wont throw any error while creating the child and inheriting the ACLs.

Any thoughts?

FYR,
{noformat}[vinay@server2 ~]$ getfacl testAcl/
# file: testAcl/
# owner: vinay
# group: vinay
user::rwx
user:root:rwx
user:bin:rwx
user:daemon:rwx
user:adm:rwx
user:lp:rwx
user:sync:rwx
user:shutdown:rwx
user:halt:rwx
user:mail:rwx
user:operator:rwx
user:games:rwx
user:ftp:rwx
user:ntp:rwx
user:avahi:rwx
user:dbus:rwx
user:nobody:rwx
user:usbmuxd:rwx
user:abrt:rwx
user:colord:rwx
user:unbound:rwx
user:polkitd:rwx
group::rwx
mask::rwx
other::r-x
default:user::rwx
default:user:root:rwx
default:user:bin:rwx
default:user:daemon:rwx
default:user:adm:rwx
default:user:lp:rwx
default:user:sync:rwx
default:user:shutdown:rwx
default:user:halt:rwx
default:user:mail:rwx
default:user:operator:rwx
default:user:games:rwx
default:user:ftp:rwx
default:user:ntp:rwx
default:user:avahi:rwx
default:user:dbus:rwx
default:user:nobody:rwx
default:user:usbmuxd:rwx
default:user:abrt:rwx
default:user:colord:rwx
default:user:unbound:rwx
default:user:polkitd:rwx
default:group::rwx
default:mask::rwx
default:other::r-x{noformat}, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12690009/HDFS-7582-001.patch
  against trunk revision af9d4fe.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestLeaseRecovery2

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10247//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10247//console

This message is automatically generated., Hi [~cnauroth], any update on this?, Hi [~vinayrpet].  Sorry for the long delay replying to this.

If we were to make any change that would restrict the number of ACL entries to a smaller number than what we allow now, then it would be a backwards-incompatible change.  It's possible that existing deployments are already dependent on being able to create an ACL that uses the current limit.  Therefore, I would have to -1 any such change made on the 2.x line.

Do you still want to consider changing this for 3.x?  We'd have the flexibility to make a backwards-incompatible change there.  If we did that, then I'd still want to make sure that we can load an existing fsimage/edits that took advantage of today's limits.  I'd want us to have a JUnit test to verify that, so that people upgrading from 2.x to 3.x won't fail to load the metadata or silently lose some of their ACL entries.

bq. In My test of POSIX ACLs, the limit of 25 were separately applied on ACCESS and DEFAULT entries, so totally there could be 50 entries.

I'd have to retest, but I think this is different from the behavior I observed.  It would be great if we could find a definitive source that defines the limit, but I haven't found it yet., bq. It would be great if we could find a definitive source that defines the limit, but I haven't found it yet.
http://users.suse.com/~agruen/acl/linux-acls/online/#tab:acl_entries 
I have tested on XFS, so I found the limit of 25 mentioned here for XFS. But doc didnt say that its separately applied on access and default. Anyway this limit was based on underlying FS implementations, Some supports in limiting # of entries, some support limiting overall size.

In my earlier options, the option #1 (Apply the EXISTING limit (32) separately on ACCESS and DEFAULT) was without backward incompatibility for existing deployments. Of-course it increases the NN memory if extensively used.

What you say about option #1?

bq. Do you still want to consider changing this for 3.x? We'd have the flexibility to make a backwards-incompatible change there.
I dont think so., [~vinayrpet], this is starting to make sense to me now.  The spec I've referred to a lot (the same one you linked in your last comment) shows the maximum number of entries for a few different file systems.  Like you said, it doesn't specifically say anywhere that the limit is applied separately for access and default, but in practice, that's the behavior that both you and I have observed.

I had been thrown off by the fact that you found different results than I did from testing against a local file system.  Now I see the reason for that is you were testing with XFS (max 25 per access and default) and I was testing with ext3 (max 32 per access and default).

Now considering all of that, I agree with you that HDFS can make a change so that the limit is enforced separately per access and default.  This is backwards-compatible, because it does not reduce the number of ACL entries that can be used in existing deployments already.  I'm re-targeting this to 2.8.0 and updating the description to show the new plan.

Thank you for the follow-up!, [~cnauroth], thanks for looking it again.

bq. Now considering all of that, I agree with you that HDFS can make a change so that the limit is enforced separately per access and default. This is backwards-compatible, because it does not reduce the number of ACL entries that can be used in existing deployments already. I'm re-targeting this to 2.8.0 and updating the description to show the new plan.
Sure, we can target it for 2.8.0 and work on it., Attached patch which checks the MAX_ENTRIES separately on ACCESS and DEFAULT entries.

So in total max 64 (32-access and 32 default) entries can be there in an ACL.

Please review., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  14m 47s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 43s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 42s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 23s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   2m  8s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 34s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 34s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   3m  3s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | native |   3m 21s | Pre-build of native portion |
| {color:red}-1{color} | hdfs tests | 160m 29s | Tests failed in hadoop-hdfs. |
| | | 203m 48s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.hdfs.server.namenode.ha.TestStandbyCheckpoints |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12735554/HDFS-7582-01.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / cdbd66b |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HDFS-Build/11138/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/11138/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf903.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/11138/console |


This message was automatically generated., Failures are not related., [~cnauroth], did you get time to check this?
thanks, I'm +1 on the late patch based on [~cnauroth]'s comment. Chris, would you like to check it too? Thanks., [~hitliuyi] and [~vinayrpet], thanks for moving ahead on this one.  I would like to review it, and I apologize for the delay.  I just bumped it up in my priority queue, so hopefully I'll get to it no later than next week.  :-), Thanks [~cnauroth]. Sure, you can take your time for review., Hi [~vinayrpet].  Thank you again for your patience.  The patch looks good.  I found just one thing that needs to be corrected.

{code}
    if (defaultEntries.size() > MAX_ENTRIES) {
      throw new AclException("Invalid ACL: ACL has " + accessEntries.size()
          + " default entries, which exceeds maximum of " + MAX_ENTRIES + ".");
    }
{code}

The text of this exception needs to use {{defaultEntries.size()}} instead of {{accessEntries.size()}}., Thanks [~cnauroth] for review.
I will correct the exception text soon., Attaching the updated patch., +1 for patch v02, pending a fresh Jenkins run.  Thank you for the patch, Vinay!, \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | pre-patch |  16m 57s | Pre-patch trunk has 1 extant Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 31s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |   9m 36s | There were no new javadoc warning messages. |
| {color:green}+1{color} | release audit |   0m 22s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | checkstyle |   1m 22s | There were no new checkstyle issues. |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 20s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 33s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   2m 30s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | native |   3m  2s | Pre-build of native portion |
| {color:red}-1{color} | hdfs tests | 161m 29s | Tests failed in hadoop-hdfs. |
| | | 204m 45s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.hdfs.TestDistributedFileSystem |
|   | hadoop.hdfs.server.namenode.ha.TestStandbyIsHot |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12746272/HDFS-7582-02.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / df1e8ce |
| Pre-patch Findbugs warnings | https://builds.apache.org/job/PreCommit-HDFS-Build/11763/artifact/patchprocess/trunkFindbugsWarningshadoop-hdfs.html |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HDFS-Build/11763/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/11763/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/11763/console |


This message was automatically generated., test failures are unrelated.

Committing shortly., Committed to trunk and branch-2., Thanks [~cnauroth] for discussions and final reviews.
Thanks [~hitliuyi] for the review., FAILURE: Integrated in Hadoop-trunk-Commit #8192 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8192/])
HDFS-7582. Enforce maximum number of ACL entries separately per access and default. (Contributed by Vinayakumar B) (vinayakumarb: rev 29cf887b226f4ab3c336a6e681db5e8e70699d66)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/AclTransformation.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAclTransformation.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #263 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/263/])
HDFS-7582. Enforce maximum number of ACL entries separately per access and default. (Contributed by Vinayakumar B) (vinayakumarb: rev 29cf887b226f4ab3c336a6e681db5e8e70699d66)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAclTransformation.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/AclTransformation.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #993 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/993/])
HDFS-7582. Enforce maximum number of ACL entries separately per access and default. (Contributed by Vinayakumar B) (vinayakumarb: rev 29cf887b226f4ab3c336a6e681db5e8e70699d66)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAclTransformation.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/AclTransformation.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2190 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2190/])
HDFS-7582. Enforce maximum number of ACL entries separately per access and default. (Contributed by Vinayakumar B) (vinayakumarb: rev 29cf887b226f4ab3c336a6e681db5e8e70699d66)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAclTransformation.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/AclTransformation.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #252 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/252/])
HDFS-7582. Enforce maximum number of ACL entries separately per access and default. (Contributed by Vinayakumar B) (vinayakumarb: rev 29cf887b226f4ab3c336a6e681db5e8e70699d66)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAclTransformation.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/AclTransformation.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #260 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/260/])
HDFS-7582. Enforce maximum number of ACL entries separately per access and default. (Contributed by Vinayakumar B) (vinayakumarb: rev 29cf887b226f4ab3c336a6e681db5e8e70699d66)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/AclTransformation.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAclTransformation.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2209 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2209/])
HDFS-7582. Enforce maximum number of ACL entries separately per access and default. (Contributed by Vinayakumar B) (vinayakumarb: rev 29cf887b226f4ab3c336a6e681db5e8e70699d66)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAclTransformation.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/AclTransformation.java
]