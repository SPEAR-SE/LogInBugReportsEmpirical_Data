[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12576210/HDFS-4646.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.fs.TestFcHdfsSymlink

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4170//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4170//console

This message is automatically generated., Is it possible to include a unit test for the change?, Also,
{noformat}
+        NetUtils.getDefaultSocketFactory(conf),
+        org.apache.hadoop.ipc.Client.getTimeout(conf), defaultPolicy).getProxy();{noformat}
indentation is wrong in the second line, Regarding writing a unit test for this patch, I was considering writing a test that would try to connect to a non-existent IP address, and watch the RPC call fail, but that strategy is flawed - the timeout in question is one that kicks in after the connection has been established. To test this correctly, the connection would need to be established successfully, then the remote IP stack would need to stop responding, i.e. the physical machine would need to be killed, or the VM would need to be killed, or the network interface would need to be 'ifdown'ed. Are there any examples of unit tests that attempt to do such a thing?, I uploaded another patch with indentation slightly improved for the better I hope.

As for manual testing, here's what I did to reproduce the problem. I have a H/A configuration running. The configuration specifies a RPC timeout of 18 seconds and a connect timeout of 11.5 seconds. I start terasort, and then fail the NameNode. Once in a while, the failure happens to occur after one of the Mapper's client connect, and while RPC I/O is in progress. The desired behavior in this case is for the RPC to timeout in 18 seconds, and not wait 10 minutes for YARN to kill the task. With this patch, RPC does indeed timeout in 18 seconds. It does not wait forever. Neither does it timeout in 11.5 seconds, which would indicate a connect timeout.

I have also tested the default configuration wherein the RPC should wait forever, or at least till 10 minutes when YARN kills the task attempt, and tries again elsewhere. This assures me that the current behavior is retained for the case where a RPC timeout is not specified., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12576339/HDFS-4646.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestDatanodeBlockScanner
                  org.apache.hadoop.fs.TestFcHdfsSymlink

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4171//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4171//console

This message is automatically generated., I downloaded the patch and ran the tests with and without the it and got the same number of failing tests. Seems like the patch does not introduce any regressions., +1 on the patch. I will commit it shortly., I have committed the patch to trunk, branch-2, and branch-2.0.4-alpha. Thanks you Jagane!, Integrated in Hadoop-trunk-Commit #3571 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3571/])
    HDFS-4646. createNNProxyWithClientProtocol ignores configured timeout value. Contributed by Jagane Sundar (Revision 1465121)

     Result = SUCCESS
cos : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1465121
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/NameNodeProxies.java
, Integrated in Hadoop-Yarn-trunk #176 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/176/])
    HDFS-4646. createNNProxyWithClientProtocol ignores configured timeout value. Contributed by Jagane Sundar (Revision 1465121)

     Result = SUCCESS
cos : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1465121
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/NameNodeProxies.java
, Integrated in Hadoop-Hdfs-trunk #1365 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1365/])
    HDFS-4646. createNNProxyWithClientProtocol ignores configured timeout value. Contributed by Jagane Sundar (Revision 1465121)

     Result = FAILURE
cos : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1465121
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/NameNodeProxies.java
, Integrated in Hadoop-Mapreduce-trunk #1392 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1392/])
    HDFS-4646. createNNProxyWithClientProtocol ignores configured timeout value. Contributed by Jagane Sundar (Revision 1465121)

     Result = SUCCESS
cos : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1465121
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/NameNodeProxies.java
, Committed as r1465124]