[Thread dump when the test timeout occurred., It doesn't look like a test issue. In my test run, it decided to move 90 B, but only 80 B were moved.
Two blocks were to be moved from 32932 to 49691, but only one was moved.


{panel}
2013-06-06 14:09:16,683 INFO  balancer.Balancer (Balancer.java:run(1429)) - namenodes = [hdfs://localhost:59795]
2013-06-06 14:09:16,684 INFO  balancer.Balancer (Balancer.java:run(1430)) - p         = Balancer.Parameters[BalancingPolicy.Node, threshold=10.0]
Time Stamp               Iteration#  Bytes Already Moved  Bytes Left To Move  Bytes Being Moved
2013-06-06 14:09:16,729 INFO  FSNamesystem.audit (FSNamesystem.java:logAuditEvent(6143)) - allowed=true ugi=kihwal (auth:SIMPLE)        ip=/127.0.0.1   cmd=create      src=/system/balancer.id dst=null
        perm=kihwal:supergroup:rw-r--r--
2013-06-06 14:09:16,733 INFO  hdfs.StateChange (FSNamesystem.java:saveAllocatedBlock(2656)) - BLOCK* allocateBlock: /system/balancer.id. BP-818264213-10.74.91.177-1370545753908 blk_-7705900514265277819_10
21 blockUCState=UNDER_CONSTRUCTION, primaryNodeIndex=-1, replicas=[ReplicaUnderConstruction[127.0.0.1:49691|RBW], ReplicaUnderConstruction[127.0.0.1:34270|RBW], ReplicaUnderConstruction[127.0.0.1:45599|RB
W]]
2013-06-06 14:09:16,735 INFO  net.NetworkTopology (NetworkTopologyWithNodeGroup.java:add(205)) - Adding a new node: /rack0/nodegroup0/127.0.0.1:54778
2013-06-06 14:09:16,736 INFO  datanode.DataNode (DataXceiver.java:writeBlock(429)) - Receiving BP-818264213-10.74.91.177-1370545753908:blk_-7705900514265277819_1021 src: /127.0.0.1:34183 dest: /127.0.0.1:
49691
2013-06-06 14:09:16,736 INFO  net.NetworkTopology (NetworkTopologyWithNodeGroup.java:add(205)) - Adding a new node: /rack1/nodegroup2/127.0.0.1:49691
2013-06-06 14:09:16,737 INFO  net.NetworkTopology (NetworkTopologyWithNodeGroup.java:add(205)) - Adding a new node: /rack0/nodegroup0/127.0.0.1:45599
2013-06-06 14:09:16,737 WARN  datanode.DataNode (BlockReceiver.java:<init>(213)) - Could not get file descriptor for outputstream of class class org.apache.hadoop.hdfs.server.datanode.SimulatedFSDataset$S
imulatedOutputStream
2013-06-06 14:09:16,738 INFO  net.NetworkTopology (NetworkTopologyWithNodeGroup.java:add(205)) - Adding a new node: /rack1/nodegroup1/127.0.0.1:34270
2013-06-06 14:09:16,739 INFO  net.NetworkTopology (NetworkTopologyWithNodeGroup.java:add(205)) - Adding a new node: /rack1/nodegroup2/127.0.0.1:32932
2013-06-06 14:09:16,739 INFO  balancer.Balancer (Balancer.java:logNodes(933)) - 1 over-utilized: [Source[127.0.0.1:45599, utilization=40.0]]

2013-06-06 14:09:16,740 INFO  balancer.Balancer (Balancer.java:logNodes(933)) - 2 underutilized: [BalancerDatanode[127.0.0.1:54778, utilization=0.0], BalancerDatanode[127.0.0.1:49691, utilization=0.0]]
2013-06-06 14:09:16,741 INFO  balancer.Balancer (Balancer.java:run(1365)) - Need to move 70 B to make the cluster balanced.
2013-06-06 14:09:16,742 INFO  balancer.Balancer (Balancer.java:matchSourceWithTargetToMove(1067)) - Decided to move 50 B bytes from 127.0.0.1:45599 to 127.0.0.1:54778
2013-06-06 14:09:16,742 INFO  datanode.DataNode (DataXceiver.java:writeBlock(429)) - Receiving BP-818264213-10.74.91.177-1370545753908:blk_-7705900514265277819_1021 src: /127.0.0.1:58416 dest: /127.0.0.1:
45599
2013-06-06 14:09:16,743 WARN  datanode.DataNode (BlockReceiver.java:<init>(213)) - Could not get file descriptor for outputstream of class class org.apache.hadoop.hdfs.server.datanode.SimulatedFSDataset$S
imulatedOutputStream
2013-06-06 14:09:16,742 INFO  balancer.Balancer (Balancer.java:matchSourceWithTargetToMove(1067)) - Decided to move 20 B bytes from 127.0.0.1:32932 to 127.0.0.1:49691
2013-06-06 14:09:16,744 INFO  balancer.Balancer (Balancer.java:matchSourceWithTargetToMove(1067)) - Decided to move 20 B bytes from 127.0.0.1:34270 to 127.0.0.1:49691
2013-06-06 14:09:16,744 INFO  balancer.Balancer (Balancer.java:run(1379)) - Will move 90 B in this iteration
...
                0 B                70 B               90 B
...
2013-06-06 14:09:16,790 INFO  balancer.Balancer (Balancer.java:dispatch(359)) - Moving block 4026872562939698188 from 127.0.0.1:45599 to 127.0.0.1:54778 through 127.0.0.1:45599 is succeeded.
2013-06-06 14:09:16,796 INFO  balancer.Balancer (Balancer.java:dispatch(359)) - Moving block 7808894185501941486 from 127.0.0.1:45599 to 127.0.0.1:54778 through 127.0.0.1:45599 is succeeded.
2013-06-06 14:09:16,796 INFO  balancer.Balancer (Balancer.java:dispatch(359)) - Moving block 15281409689851962 from 127.0.0.1:45599 to 127.0.0.1:54778 through 127.0.0.1:32932 is succeeded.
2013-06-06 14:09:16,797 INFO  balancer.Balancer (Balancer.java:dispatch(359)) - Moving block 116703018151698955 from 127.0.0.1:34270 to 127.0.0.1:49691 through 127.0.0.1:34270 is succeeded.
2013-06-06 14:09:16,793 INFO  balancer.Balancer (Balancer.java:dispatch(359)) - Moving block 2721708609550631379 from 127.0.0.1:45599 to 127.0.0.1:54778 through 127.0.0.1:45599 is succeeded.
2013-06-06 14:09:16,799 INFO  balancer.Balancer (Balancer.java:dispatch(359)) - Moving block -7705900514265277819 from 127.0.0.1:45599 to 127.0.0.1:54778 through 127.0.0.1:45599 is succeeded.
2013-06-06 14:09:16,801 INFO  balancer.Balancer (Balancer.java:dispatch(359)) - Moving block 3682833351233298286 from 127.0.0.1:34270 to 127.0.0.1:49691 through 127.0.0.1:34270 is succeeded.
2013-06-06 14:09:16,805 INFO  balancer.Balancer (Balancer.java:dispatch(359)) - Moving block -7496839095912394308 from 127.0.0.1:32932 to 127.0.0.1:49691 through 127.0.0.1:32932 is succeeded.
{panel}


If I enable debug logging in Balancer, it fails less frequently or fails differently. In the following case, all moves were complete, but the final utilization was wrong. The test itself didn't timeout.
{panel}
java.util.concurrent.TimeoutException: Rebalancing expected avg utilization to become 0.16, but on datanode 127.0.0.1:39755 it remains at 0.3 after more than 20000 msec.
	at org.apache.hadoop.hdfs.server.balancer.TestBalancerWithNodeGroup.waitForBalancer(TestBalancerWithNodeGroup.java:149)
	at org.apache.hadoop.hdfs.server.balancer.TestBalancerWithNodeGroup.runBalancer(TestBalancerWithNodeGroup.java:176)
	at org.apache.hadoop.hdfs.server.balancer.TestBalancerWithNodeGroup.testBalancerWithNodeGroup(TestBalancerWithNodeGroup.java:300)
{panel}, You are right. Kihwal. This shouldn't be a test issue but an existing issue in Balancer just tracked by this special test case (reach to boundary). Look at HDFS-4261, we already identify and fix some issues there. So I believe we still need to fix balancer but not test case here., Test 50 times iterations on TestBalancerWithNodeGroup, all is successful with v1 patch, Upload v1 patch and submit it., There is race condition in BalancerDatanode.incScheduledSize() which cause inconsistency of counters., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12606994/HDFS-4376-v1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5106//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5106//console

This message is automatically generated., Hi, can anyone help to review this? I guess we don't want to see this test failed again and again on trunk., Hi Junping, thanks for working hard on this.

Source.chooseNextBlockToMove() also changes scheduledSize.  I think we should change scheduledSize to private so that we could enforce synchronization inside BalancerDatanode., Nice catch. Nicholas! Yes, We should make it private and put synchronized on access method. Update it in v2 patch and will post the test results after finishing 50 iterations. , The new patch seems not work or involve new deadlock. It cause 5 timeout failure in 50 iteration. Need to do more investigations., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12608129/HDFS-4376-v2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.balancer.TestBalancerWithNodeGroup

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5175//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5175//console

This message is automatically generated., In v3 patch:
- fix a bug involved in v2 patch
- identify a new and important race condition: bytesMoved.get() is not synchronized.  Although bytesMoved.inc() is already synchronized, the read operation of get() is still must to be synchronized as JVM will treat 64-bit long or double variable's read and write operation as two 32-bit operations. Thus, without putting synchronized here or mark it as volatile, the read operation could have a random result (mix with half of old value and new value in case of updating).
Already test new patch in 100 iterations, all passed!, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12608660/HDFS-4376-v3.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5207//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5207//console

This message is automatically generated., Good catch on the bugs!

+1 patch looks good., Thanks Nicholas for review! :), I have committed this.  Thanks, Junping!, SUCCESS: Integrated in Hadoop-trunk-Commit #4621 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4621/])
HDFS-4376. Fix race conditions in Balancer.  Contributed by Junping Du (szetszwo: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1532932)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java
, Thanks Nicholas, I want to update title to be something like "Fix a few race conditions in Balancer and resolve intermittent timeout of TestBalancerWithNodeGroup" to get rid of some confusion on this is only a test issue (like previous comments from Kihwal Lee). How does it sounds to you?, Sure, please feel free to update the title.  I also have used similar text in the commit message., Thanks Nicholas, done!, SUCCESS: Integrated in Hadoop-Yarn-trunk #365 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/365/])
HDFS-4376. Fix race conditions in Balancer.  Contributed by Junping Du (szetszwo: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1532932)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1555 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1555/])
HDFS-4376. Fix race conditions in Balancer.  Contributed by Junping Du (szetszwo: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1532932)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1581 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1581/])
HDFS-4376. Fix race conditions in Balancer.  Contributed by Junping Du (szetszwo: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1532932)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java
, Hi [~sureshms], In our offline meet yesterday, you mentioned the test still get failed sometimes. Do you mean it get failed in 2.0 GA or trunk now? As I just fixed race conditions of Balancer in this JIRA this week, so I don't expect it get failed again on trunk (I tried 100 times iterations and no failed locally). It is great that you can provide more details on this? Thx!
]