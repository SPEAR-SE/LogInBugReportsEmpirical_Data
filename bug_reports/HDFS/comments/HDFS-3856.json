[I've run into this problem before where a test is exiting prematurely, causing surefire to report a fork failure. This is not really the failure of fork() system call. We get this when a forked test process exits before the test harness has a chance to do it. For example, the following will generate a fork failure.

{code}
  @Test
  public void TestBlowUp() throws InterruptedException {
    Thread.sleep(3000);
    System.exit(-1);

  }
{code}

If the exit code is set to zero in the above example, surefile will still error out, but it won't be a fork failure.  On a related note, I have recently seen the MiniDFSCluster reporting an exit exception in multiple test cases. , I noticed that TestHDFSServerPorts creates zero byte result file. The output file wasn't flushed on exit, so it didn't show the whole story.
I ran the command ran by maven directly and got following:

{noformat}
3,0001,2012-08-27 13:29:19.766 FATAL namenode.NameNode (NameNode.java:doImmediateShutdown(1270)) - Error encountered requiring NN shutdown. Shutting down immediately.
org.apache.hadoop.ipc.StandbyException: Operation category READ is not supported at the BackupNode
        at org.apache.hadoop.hdfs.server.namenode.BackupNode$BNHAContext.checkOperation(BackupNode.java:443)
        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.checkOperation(FSNamesystem.java:769)
        at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getServerDefaults(FSNamesystem.java:1028)
        at org.apache.hadoop.hdfs.server.namenode.NameNode.startTrashEmptier(NameNode.java:514)
        at org.apache.hadoop.hdfs.server.namenode.NameNode.access$100(NameNode.java:121)
        at org.apache.hadoop.hdfs.server.namenode.NameNode$NameNodeHAContext.startActiveServices(NameNode.java:1295)
        at org.apache.hadoop.hdfs.server.namenode.ha.ActiveState.enterState(ActiveState.java:61)
        at org.apache.hadoop.hdfs.server.namenode.NameNode.<init>(NameNode.java:599)
        at org.apache.hadoop.hdfs.server.namenode.BackupNode.<init>(BackupNode.java:87)
        at org.apache.hadoop.hdfs.server.namenode.NameNode.createNameNode(NameNode.java:1109)
        at org.apache.hadoop.hdfs.TestHDFSServerPorts.startBackupNode(TestHDFSServerPorts.java:143)
        at org.apache.hadoop.hdfs.TestHDFSServerPorts.canStartBackupNode(TestHDFSServerPorts.java:242)
        at org.apache.hadoop.hdfs.TestHDFSServerPorts.testBackupNodePorts(TestHDFSServerPorts.java:395)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
        at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
        at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:236)
        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:134)
        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:113)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:103)
        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:74)
{noformat}

It is easily reproduced. In the builds, this test case does not show up in the report, but there are files created by this test in the build workspace. , I updated the summary., It looks like HADOOP-8689 added the getServerDefaults() call to startTrashEmptier()., Good investigation, Kihwal. Two things:

# No daemon in HDFS should be using System.exit(...) directly. Instead, they should be using ExitUtil.
# We should probably change NameNode#startTrashEmptier to not make an RPC at all, and instead get the trash period directly from the configuration., bq. 1. No daemon in HDFS should be using System.exit(...) directly. Instead, they should be using ExitUtil.
It is already using ExitUtil but systemExitDisabled was not set in the test. So it called System.exit(1).

bq. 2. We should probably change NameNode#startTrashEmptier to not make an RPC at all, and instead get the trash period directly from the configuration.

agreed., Thanks for triaging Kihwal!

Patch attached.

NN#startTrashEmptier is not currently making an RPC. This patch updates NameNode#startTrashEmptier to use the conf to determine the interval rather than get the server defaults object (which checks the operation, which fails in the BN case). The conf is the same that was used to initialize server defaults so it's the same value. , Forgot to mention TestHDFSServerPorts now passes for me., Slightly updated patch to cleanup the log message following the check., Thanks a lot for the explanation, Eli.

The patch looks good to me. +1 pending Jenkins., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12542686/hdfs-3856.txt
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestHftpDelegationToken

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3104//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/3104//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3104//console

This message is automatically generated., Test failure is HDFS-3852 and findbugs is HDFS-3837., I've committed this and merged to branch-2., Integrated in Hadoop-Hdfs-trunk-Commit #2710 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2710/])
    Fixup CHANGELOG for HDFS-3856. (Revision 1377936)
HDFS-3856. TestHDFSServerPorts failure is causing surefire fork failure. Contributed by Colin Patrick McCabe (Revision 1377934)

     Result = SUCCESS
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1377936
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt

eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1377934
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
, Integrated in Hadoop-Common-trunk-Commit #2646 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2646/])
    Fixup CHANGELOG for HDFS-3856. (Revision 1377936)
HDFS-3856. TestHDFSServerPorts failure is causing surefire fork failure. Contributed by Colin Patrick McCabe (Revision 1377934)

     Result = SUCCESS
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1377936
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt

eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1377934
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #2675 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2675/])
    Fixup CHANGELOG for HDFS-3856. (Revision 1377936)
HDFS-3856. TestHDFSServerPorts failure is causing surefire fork failure. Contributed by Colin Patrick McCabe (Revision 1377934)

     Result = FAILURE
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1377936
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt

eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1377934
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
, Integrated in Hadoop-Hdfs-trunk #1148 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1148/])
    Fixup CHANGELOG for HDFS-3856. (Revision 1377936)
HDFS-3856. TestHDFSServerPorts failure is causing surefire fork failure. Contributed by Colin Patrick McCabe (Revision 1377934)

     Result = FAILURE
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1377936
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt

eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1377934
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
, Integrated in Hadoop-Mapreduce-trunk #1179 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1179/])
    Fixup CHANGELOG for HDFS-3856. (Revision 1377936)
HDFS-3856. TestHDFSServerPorts failure is causing surefire fork failure. Contributed by Colin Patrick McCabe (Revision 1377934)

     Result = FAILURE
eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1377936
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt

eli : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1377934
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java
, We've seen a similar issue in our HBase build, and it appears to be fixed in this Surefire plugin issue: https://jira.codehaus.org/browse/SUREFIRE-870

This issue is fixed in release 2.12.1 and above.  We are currently running a build to verify that the issue is fixed by specifying the 2.12.3 version of surefire in our HBase pom.xml]