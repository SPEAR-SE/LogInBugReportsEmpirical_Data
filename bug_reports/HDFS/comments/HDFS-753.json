[I played around with this at the UNIX level.  Looks like we're not following POSIX here:

{code}
$ mkdir k
$ touch k/j
$ chmod -R -w k
$ ls -al k
dr-xr-xr-x   2 aw aw       3 Nov  5 09:59 ./
drwx------  11 aw aw      25 Nov  5 09:58 ../
-r--r--r--   1 aw aw       0 Nov  5 09:59 j
$ rm k/j
rm: k/j: override protection 444 (yes/no)? yes
rm: k/j not removed: Permission denied
{code}

Looking at truss output, it fails with EACCESS. 

, > ... Then execute a delete and the file will be deleted.

Are you using a superuser account?  The hdfs permission implementation allows superuser passing all security checks., isn't it the case that we need write access to a  directory D to be able to delete a file/dir inside D? The act of deleting the file would need to modify the contents of the directory D., > isn't it the case that we need write access to a directory D to be able to delete a file/dir inside D? ...

That is true.  Deleting a file/directory requires the w permission on the parent directory (and, of course, x on the path).  The file/directory's permission setting is irrelevant., Any patch available for this issue.?, The answer appears to be no.  The question is, can we still fix this or is it too late?]