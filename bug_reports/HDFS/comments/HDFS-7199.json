[I believe the problem lies in the way DataStreamer is handling the error:
{code}
        } catch (Throwable e) {
          // Log warning if there was a real error.
          if (restartingNodeIndex == -1) {
            DFSClient.LOG.warn("DataStreamer Exception", e);
          }
          if (e instanceof IOException) {
            setLastException((IOException)e);
          }
          hasError = true;
          if (errorIndex == -1 && restartingNodeIndex == -1) {
            // Not a datanode issue
            streamerClosed = true;
          }
        }
{code}

We should either always call setLastException, wrapping the exception in an I/O exception if necessary, or at least set it to something if we're going to set streamerClosed=true and exit the datastreamer thread.  That way there will always be some kind of exception to be picked up either in checkClosed() or close() in the output stream., I think it makes sense to wrap the non-IOException in an IOE here.  But I also wonder why you are getting a non-IOException in the first place.  That seems like a bug., bq.  But I also wonder why you are getting a non-IOException in the first place. That seems like a bug.

The bug in the case we encountered was bad hardware.  The JVM was glitching out and happened to generate a java.lang.VerifyError in the DataStreamer thread.  Unfortunately due to this bug the reducer ended up with a "successful" run that generated a zero-length file, and the data was silently dropped.  We caught it later downstream when a subsequent job tried to consume the empty file., bq. The bug in the case we encountered was bad hardware. The JVM was glitching out and happened to generate a java.lang.VerifyError in the DataStreamer thread.

Thanks for that background.  It sounds like we are not at fault for once for generating the original exception :), working in progress patch. I will work on creating the test case. It is a littble bit hard., I tried to write the test case for this jira. But I was not able to come up with a good test case.
So I manually tested the code with throwing an non IOException from DataStreamer's run method and setting the last Exception to the thrown Exception and wrapping it around IOException.
When I tried to call the out.close() method, the test case failed as expected.


, I'm having trouble understanding this patch.  Won't the exception you are setting with {{setLastException(new IOException("DataStreamer Exception: ",e))}} overwrite the exception set on these previous lines:

{code}
          if (e instanceof IOException) {
            setLastException((IOException)e);
          }
 {code}

Wouldn't it make more sense to simply add an else statement here where we wrap the non-IOE in an IOE?

bq. working in progress patch. I will work on creating the test case. It is a littble bit hard.

It looks like this will end up being a 1 or 2 line patch.  So we could potentially commit this JIRA and file a follow-up JIRA for the test case.  I think it should be possible to write a good test case using Mockito or perhaps one of the fault injectors., Changed the patch to address Collin's comment.
Did the same manual testing as before., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12675017/HDFS-7199-WIP.patch
  against trunk revision 5c900b5.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 13 warning messages.
        See https://builds.apache.org/job/PreCommit-HDFS-Build/8585//artifact/patchprocess/diffJavadocWarnings.txt for details.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.TestDFSStorageStateRecovery

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8585//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8585//console

This message is automatically generated., Test TestDFSStorageStateRecovery running without any errors on my local cluster., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12677996/HDFS-7199.patch
  against trunk revision d33e07d.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8588//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8588//console

This message is automatically generated., The "else" should be on the same line as the close-brace, as per our coding standard.  +1 once that's fixed.  Thanks, Rushabh., LGTM, +1, non-binding., Can you post a new patch with the else on the same line as the close brace as per our coding standard?  Then I'll commit this.  Thanks guys., Need to address Collins comments., Updated patch with addressing Collins comment., +1 pending jenkins, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12679281/HDFS-7199-1.patch
  against trunk revision 1eed102.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 1224 javac compiler warnings (more than the trunk's current 1223 warnings).

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestLeaseRecovery2

                                      The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.TestFileCreation

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8640//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/8640//artifact/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8640//console

This message is automatically generated., 1. Both the tests runs successfully on my local cluster
2.Regarding the javac warnings,  I searched for DFSOutputStream (thats the only file modified in this patch), it didn't match any of the warnings.
So I guess its not this patch that is causing the new warning., Committed to trunk and 2.7.  Thanks, [~shahrs87]., Committed to 2.6, Thanks [~cmccabe] for reviewing and committing the patch., FAILURE: Integrated in Hadoop-trunk-Commit #6455 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6455/])
HDFS-7199. DFSOutputStream should not silently drop data if DataStreamer crashes with an unchecked exception (rushabhs via cmccabe) (cmccabe: rev 56257fab1d5a7f66bebd9149c7df0436c0a57adb)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
CHANGES.txt.  Move HDFS-7199 to branch-2.6 (cmccabe: rev 7b07acb0a51d20550f62ba29bf09120684b4097b)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1924 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1924/])
HDFS-7199. DFSOutputStream should not silently drop data if DataStreamer crashes with an unchecked exception (rushabhs via cmccabe) (cmccabe: rev 56257fab1d5a7f66bebd9149c7df0436c0a57adb)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
CHANGES.txt.  Move HDFS-7199 to branch-2.6 (cmccabe: rev 7b07acb0a51d20550f62ba29bf09120684b4097b)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk #735 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/735/])
HDFS-7199. DFSOutputStream should not silently drop data if DataStreamer crashes with an unchecked exception (rushabhs via cmccabe) (cmccabe: rev 56257fab1d5a7f66bebd9149c7df0436c0a57adb)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
CHANGES.txt.  Move HDFS-7199 to branch-2.6 (cmccabe: rev 7b07acb0a51d20550f62ba29bf09120684b4097b)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1949 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1949/])
HDFS-7199. DFSOutputStream should not silently drop data if DataStreamer crashes with an unchecked exception (rushabhs via cmccabe) (cmccabe: rev 56257fab1d5a7f66bebd9149c7df0436c0a57adb)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
CHANGES.txt.  Move HDFS-7199 to branch-2.6 (cmccabe: rev 7b07acb0a51d20550f62ba29bf09120684b4097b)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
]