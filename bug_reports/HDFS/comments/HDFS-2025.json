[When Go Back to File View hyperlink is clicked this is the result. If we see the address bar we can say that the http url is encoded and treated as a relative url., In DatanodeJspHelper.generateFileChunksForTail

{code:title=DatanodeJspHelper.java|borderStyle=solid}
static void generateFileChunksForTail(JspWriter out, HttpServletRequest req,
Configuration conf) throws IOException,InterruptedException {

final String referrer = JspHelper.validateURL(req.getParameter("referrer"));
//this will encode the referrer url in UTF-8
//some more code 
//the encoded url is itself being used in hyperlink
out.print("<a href=\"" + referrer + "\">Go Back to File View</a><hr>");
}
{code}

Here JspHelper.validateURL(req.getParameter("referrer")) will encode the referrer in UTF-8 and the same will be used as hyperlink which is treated as a relative url. I have attached the snapshot of the error

The solution can be simple not to encode., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12481569/HDFS-2025.patch
  against trunk revision 1132525.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.hdfs.server.datanode.TestDatanodeJsp

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/714//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/714//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/714//console

This message is automatically generated., canceling patch due to failed test, Updated the patch after addressing the test case failure., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12481710/HDFS-2025_1.patch
  against trunk revision 1132881.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.cli.TestHDFSCLI
                  org.apache.hadoop.hdfs.TestHFlush

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/734//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/734//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/734//console

This message is automatically generated., Both the Test Failures are not related.
For this change I don't think we require a test case.
I verified manually after applying the patch there were no problems in the UI., The {{validateURL}} call that was removed is intended to properly encode the referrer for embedding with the hidden field.  You need to account for both the raw display of the referrer and the encoded value within the form's hidden field., Thanks Daryn for your comments, as I observe form's fields will be encoded and sent through the HTTP request implicitly then there is no need to encode once again. Encoding the referrer once again is failing further URL validations which will be called when we click submit as in the corresponding code snippet
{code}
referrer = JspHelper.validateURL(req.getParameter("referrer"));
{code}
req.getParameter("referrer") will give the encoded URL value and inside validateURL URL constructor will throw an Exception as the value passed to it is not a URL.

Correct me if I am wrong...
, In the tail.jsp we are using the charset=UTF-8 then the output of out.print will be automatically encoded to UTF-8.

For Reference :- http://www.w3.org/International/O-HTTP-charset, Hi Sravan, any reason you couldn't just use {{URLDecoder.decode(...)}} instead of creating an extraneous {{URL}} object? Also, could you please write a test case to account for this, perhaps in {{TestDatanodeJsp.java}} ?, Hi Aaron, the reason why i did not decode is, here there is no need of encoding then why to encode and once again why to decode. I will try to write a test to account this change and provide the patch with the test., Resumbmitting the patch as previous patch did not trigger the hudson.
This patch includes the test code, The Test Failures are not related to the changes so just re-submitting so that build will get triggered, Sravan, could you please regenreate the patch based on trunk? please generate it from root.

Review comments on test part.
Below lines of code almost deplicate with the assertion part of 'Go Back to File View'
{code}
Matcher matcher = compile.matcher(viewFilePage);
+    URL hyperlink = null;
+    if (matcher.find()) {
+      // got hyperlink for Tail this file
+      hyperlink = new URL(matcher.group(1));
+      viewFilePage = StringEscapeUtils.unescapeHtml(DFSTestUtil
+          .urlGet(hyperlink));
+      assertTrue("page should show preview of file contents", viewFilePage
+          .contains(FILE_DATA));

{code}

I would suggest, that extract it to separate methods and reuse., Updated the patch addressing Uma's comment.
Please review the patch and provide your comments., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12529938/HDFS-2025_5.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 1 new or modified test files.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2528//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2528//console

This message is automatically generated., The URL ctor doesn't throw an IOException, so is the try block needed?, Thanks Daryn for taking a look on the patch.
The URL constructor is throwing MalformedURLException and which is internally extending IOException. , +1 Sorry, I assumed {{MalformedURLException}} was an unchecked exception., I have just committed this to trunk and branch-2.
Thanks a lot, Ashish and Sravan for the patches. Also thanks to Daryn for his review!, Integrated in Hadoop-Hdfs-trunk-Commit #2387 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/2387/])
    HDFS-2025. Go Back to File View link is not working in tail.jsp. Contributed by Ashish and Sravan. (Revision 1345563)

     Result = SUCCESS
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1345563
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeJspHelper.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDatanodeJsp.java
, Integrated in Hadoop-Common-trunk-Commit #2315 (See [https://builds.apache.org/job/Hadoop-Common-trunk-Commit/2315/])
    HDFS-2025. Go Back to File View link is not working in tail.jsp. Contributed by Ashish and Sravan. (Revision 1345563)

     Result = SUCCESS
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1345563
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeJspHelper.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDatanodeJsp.java
, Integrated in Hadoop-Mapreduce-trunk-Commit #2333 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Commit/2333/])
    HDFS-2025. Go Back to File View link is not working in tail.jsp. Contributed by Ashish and Sravan. (Revision 1345563)

     Result = FAILURE
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1345563
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeJspHelper.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDatanodeJsp.java
, Integrated in Hadoop-Hdfs-trunk #1065 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1065/])
    HDFS-2025. Go Back to File View link is not working in tail.jsp. Contributed by Ashish and Sravan. (Revision 1345563)

     Result = FAILURE
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1345563
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeJspHelper.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDatanodeJsp.java
, Integrated in Hadoop-Mapreduce-trunk #1099 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1099/])
    HDFS-2025. Go Back to File View link is not working in tail.jsp. Contributed by Ashish and Sravan. (Revision 1345563)

     Result = FAILURE
umamahesh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1345563
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DatanodeJspHelper.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDatanodeJsp.java
, Thanks a lot Daryn and Uma!]