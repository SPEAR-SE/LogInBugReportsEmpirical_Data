[v01: a proof of concept. Whenever DU gets an IOException with message of "cannot access (.*): Input/output error", set up a flag. If the flag is on, DiskCheck thread scans all directories under the volume.

Given that we are scanning the entire volume only in this specific case, rather than scanning blindly, I feel the performance impact should be acceptable., # Checking for specific error messages coming out of the OS is pretty brittle w.r.t OS and OS versions. I don't know if there is a better way.
# Disks can come back. That's especially if the disk flipped in some offline state after its controller was being hit too hard by IO requests; that's not unusual in Linux under heavy load (at least in the past)...ops can remount the disk and all will recover again.

This code will handle a disk coming back without restarting the DN?, Interesting observation! [~steve_l] I've not thought about that.

Not sure how people deal with the flakiness of disks in the past. Maybe it's good enough to just log a message, or maybe, use DataNode metrics to indicate the disk status is concerning?, bq. Disks can come back. That's especially if the disk flipped in some offline state after its controller was being hit too hard by IO requests; that's not unusual in Linux under heavy load (at least in the past)...ops can remount the disk and all will recover again.
Yes. In addition, even if a disk is good, DU rarely fails by race condition when a file in the target directory is removed/deleted (HDFS-8858)., Therefore just logging or increment a metric is fine., I see. Thanks [~ajisakaa]. Didn't realize disk can behave that way. In that case, let's close this jira as invalid., Close this jira as invalid and I'll file an improvement jira to add logging or metric when DataNode disks become flaky.]