[Jason, I will followup on this. Thanks for filing the bug., Release Managers for releases this is considered blocking could consider reverting HADOOP-9181., The 2NN creates a daemon thread of itself and implicitly relies on other threads to keep the process alive - is this a case of two wrongs make a right?  Or is there a technical reason why the 2NN shouldn't simply do it's work in the main thread?, bq. The 2NN creates a daemon thread of itself and implicitly relies on other threads to keep the process alive - is this a case of two wrongs make a right? Or is there a technical reason why the 2NN shouldn't simply do it's work in the main thread?
We should follow the same pattern as the namenode and wait for maint thread/threads to end. So main thread should wait on join call. , [~sureshms], i guess a better choice is that we should let the HttpServer'daemon flag could be set in his constructor,right?  
very very sorry for this trouble..., bq. Suresh Srinivas, i guess a better choice is that we should let the HttpServer'daemon flag could be set in his constructor,right?
I am not sure I follow you. How does it solve the problem?

bq. very very sorry for this trouble...
These things do happen. It is strange that unit tests did not catch this issue!, yes, i did run the whole test cases at my devbox beofre, no failure...


maybe we can:
1) add a new "isDaemon" parameter into HttpServer's constructor, and making the default value is "false". but the current parameter list is too long enough    or
2) introduce a new configuration key,  HttpServer's constructor has a parameter named "conf", Attached a patch to handle this like the NameNode. Thanks to Suresh for the suggesting the fix.

I have not added a new test case as this appears non-trivial to test with JUnit. I filed HDFS-4430 to investigate adding a test.

The existing unit tests did not catch the regression because the server did not need to survive beyond the lifetime of the calling JUnit thread.

Liang, if I understand you then adding such a configuration knob would not have helped in this situation., I forgot to add that I verified the patch manually., +1 for the change., I will commit it tomorrow morning., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566081/HDFS-4426.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3869//console

This message is automatically generated., rebased patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566085/HDFS-4426.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3870//console

This message is automatically generated., Hopefully this time correctly rebased patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566086/HDFS-4426.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 2 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3871//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/3871//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3871//console

This message is automatically generated., Arpit, the findbugs warnings flagged is valid and needs to be fixed. I also noticed that the method join() need not be public., Just out of curiosity, is there benefit to creating a thread and waiting to join on it, versus not creating a thread and doing the processing in the main thread?, Thanks Suresh. I fixed the warnings. My earlier patch was off the wrong branch (0.26 vs trunk). I hope it doesn't need to be rebased this time., bq. Just out of curiosity, is there benefit to creating a thread and waiting to join on it, versus not creating a thread and doing the processing in the main thread?
Typically services get started as Threads by the main. In order to use the the main thread, the run loop from the service needs to be moved into main. That requires changing a service or copying code from a service. That is why typically main starts all the services and waits till one/all of critical service ends using join()., Verified the updated patch manually again., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566145/HDFS-4426.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3873//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3873//console

This message is automatically generated., I have committed the patch to branch-2 and trunk.

Thank you Arpit!, Merging this change to 0.23 is not straight forward. Here is the merge patch that is slightly different.

Can some one quickly test this and +1 it?
If no one does it, I am going to commit it anyway in an hour, since it seems to be a simple change., Integrated in Hadoop-trunk-Commit #3274 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3274/])
    HDFS-4426. Secondary namenode shuts down immediately after startup. Contributed by Arpit Agarwal. (Revision 1437627)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1437627
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
, +1 for the merge patch. Thanks Suresh!, I committed the merge to 0.23 branch as well., Integrated in Hadoop-Yarn-trunk #106 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/106/])
    HDFS-4426. Secondary namenode shuts down immediately after startup. Contributed by Arpit Agarwal. (Revision 1437627)

     Result = FAILURE
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1437627
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
, Integrated in Hadoop-Hdfs-0.23-Build #504 (See [https://builds.apache.org/job/Hadoop-Hdfs-0.23-Build/504/])
    HDFS-4426. Merge change 1437627 from trunk. (Revision 1437650)

     Result = FAILURE
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1437650
Files : 
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/branches/branch-0.23/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
, Integrated in Hadoop-Hdfs-trunk #1295 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1295/])
    HDFS-4426. Secondary namenode shuts down immediately after startup. Contributed by Arpit Agarwal. (Revision 1437627)

     Result = FAILURE
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1437627
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
, Integrated in Hadoop-Mapreduce-trunk #1323 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1323/])
    HDFS-4426. Secondary namenode shuts down immediately after startup. Contributed by Arpit Agarwal. (Revision 1437627)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1437627
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
, See HDFS-2896 (the 2NN incorrectly daemonizes).]