[Here is one path where lock on this is not obtained first:
read() -> pread() -> hedgedFetchBlockByteRange() -> chooseDataNode() -> getBlockAt(), Hi [~tedyu],

The comment at the top of {{DFSInputstream.java}} says:

{code}
  // lock for state shared between read and pread
  // Note: Never acquire a lock on <this> with this lock held to avoid deadlocks
  //       (it's OK to acquire this lock when the lock on <this> is held)
  private final Object infoLock = new Object();
{code}

It is normal and expected to acquire {{infoLock}} first, and then the stream lock.  Have you found any places where this order is reversed?, Colin:
Can you take a look at the following method which calls getBlockAt() ?
{code}
  private synchronized DatanodeInfo blockSeekTo(long target) throws IOException {
{code}
Thanks, ugh, I was afraid we'd have something like this.  Good find, Ted.

Looks like we can just move the updatePosition segment out of the synchronized(infoLock) section in getBlockAt... or is there more?

(edit: see my comment below), Looking a bit closer, updatePosition is not modified within getBlockAt().
Its value is only true when called from blockSeekTo() which already obtains lock on this.
Here is proposed patch which makes this part of code more readable., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12686989/hdfs-7495-001.patch
  against trunk revision fa7b924.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 3 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9033//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/9033//artifact/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9033//console

This message is automatically generated., As you commented, on closer inspection, this code isn't incorrect, it is just very, very tricky.  

The patch you posted is a step in the right direction, but it still modifies these variables without any synchronization, which will lead to findbugs warnings (as you saw).

I think this can be refactored to move that block out of getBlockAt altogether to avoid both findbugs and the confusing code., Thanks Colin for picking this up.

bq. this code isn't incorrect, it is just very, very tricky.

Agreed., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12700320/HDFS-7495.002.patch
  against trunk revision 5857686.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestLeaseRecovery2

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9651//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9651//console

This message is automatically generated., Good catch.
+1 for the latest patch. Thanks Ted and Colin., Committed to 2.7.  Thanks., FAILURE: Integrated in Hadoop-trunk-Commit #7200 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7200/])
HDFS-7495. Remove updatePosition argument from DFSInputStream#getBlockAt() (cmccabe) (cmccabe: rev caa42adf208bfb5625d1b3ef665fbf334ffcccd9)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #116 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/116/])
HDFS-7495. Remove updatePosition argument from DFSInputStream#getBlockAt() (cmccabe) (cmccabe: rev caa42adf208bfb5625d1b3ef665fbf334ffcccd9)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #850 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/850/])
HDFS-7495. Remove updatePosition argument from DFSInputStream#getBlockAt() (cmccabe) (cmccabe: rev caa42adf208bfb5625d1b3ef665fbf334ffcccd9)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2048 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2048/])
HDFS-7495. Remove updatePosition argument from DFSInputStream#getBlockAt() (cmccabe) (cmccabe: rev caa42adf208bfb5625d1b3ef665fbf334ffcccd9)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #107 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/107/])
HDFS-7495. Remove updatePosition argument from DFSInputStream#getBlockAt() (cmccabe) (cmccabe: rev caa42adf208bfb5625d1b3ef665fbf334ffcccd9)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #116 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/116/])
HDFS-7495. Remove updatePosition argument from DFSInputStream#getBlockAt() (cmccabe) (cmccabe: rev caa42adf208bfb5625d1b3ef665fbf334ffcccd9)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2066 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2066/])
HDFS-7495. Remove updatePosition argument from DFSInputStream#getBlockAt() (cmccabe) (cmccabe: rev caa42adf208bfb5625d1b3ef665fbf334ffcccd9)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
]