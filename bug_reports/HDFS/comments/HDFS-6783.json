[{color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12658639/HDFS-6783.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover
                  org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7496//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7496//console

This message is automatically generated., OK.  So the concern is a race between 
{code}
          isScanning = true;
          needsRescan = false;
        } finally {
          lock.unlock();
        }
{code}
And code that calls {{setNeedsRescan}} followed by {{waitForRescanIfNeeded}}.  Since there are so many code paths that drop the lock in between those two calls, this could certainly happen, I think.

This patch would cause us to wait for even rescans that were not triggered by {{needsRescan}}, though.

We probably need some kind of scan epoch system to do this right..., How about we distinguish these two kinds of rescan (triggered by needsRescan, or interval time up), and in {{waitForRescanIfNeeded}} we only check the rescan triggered by {{needsRescan}}., The new patch uses a simple approach to distinguish these two kinds of {{rescan}}., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12658868/HDFS-6783.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7507//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7507//console

This message is automatically generated., Hi Yi.

I didn't like v2 of the patch since I felt like 2 and 1 were magic numbers, not obvious when reading the code.  I also feel like having all these flags and conditions and suchlike is kind of brittle.

I would rather just have three numbers: the number of the last completed scan, the number of the scan in progress, and the number of the next scan that has been requested.  The nice thing about this approach is that if we call {{setNeedsRescan}} multiple times in a row during the same scan, it just keeps setting {{neededScanCount}} to the same value.  This also doesn't make any assumptions about whether we hold the FSN lock for the entire duration of  {{CacheReplicationMonitor#rescan}}.

I posted a v3 of the patch that implements this.  I think this also solves the issue in HDFS-6784.

I apologize for posting my patch on your JIRA but I really felt like this was an awesome solution.  Let me know what you think!, Thanks [~cmccabe], not need apologize, our goal is to resolve the issue together :)

The new version patch can resolve the issue in {{waitForRescanIfNeeded}}, but I didn't see it can solve the issue in HDFS-6784, look at following steps:
{code}
----init state------------
completedScanCount = 0;
curScanCount = -1;
neededScanCount = 1;

----setNeedsRecan----------
completedScanCount = 0;
curScanCount = -1;
neededScanCount = 1;

----in while loop----------
completedScanCount = 0;
curScanCount = 1;
neededScanCount = 1;

----setNeedsRescan---------
completedScanCount = 0;
curScanCount = 1;
neededScanCount = 2;

----rescan-------------
----after rescan--------
completedScanCount = 1;
curScanCount = -1;
neededScanCount = 2;    <--- completedScanCount < neededScanCount, still there will be another unnecessary rescan.
{code}, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12659005/HDFS-6783.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7518//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7518//console

This message is automatically generated., We only need to
{code}
neededScanCount = completedScanCount + 1;
{code}
in {{setNeedsRescan}} as shown in the uploaded new patch, then it solves this JIRA and HDFS-6784., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12659144/HDFS-6783.004.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7532//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7532//console

This message is automatically generated., Thanks for looking at this, Yi.

The behavior you're describing is intentional here.  If we call {{setNeedsRescan}} while a rescan is going on, we don't want that scan to count as the rescan.

So the question then becomes: CAN we call {{setNeedsRescan}} while a rescan is going on?  Right now the answer is no, since rescan holds the FSN lock, and everything that calls {{setNeedsRescan}} also holds that lock.  But this is accidental... not something we should rely on.  The v4 patch you posted is correct, but it makes the assumption that we will always hold the FSN lock for the entire duration of the scan.  While this is true currently, it wasn't always true, and won't be true in the future (we *need* to reduce the length of time we hold these locks to avoid latency spikes.)

Maybe a good compromise here would be to set the loop variables while holding both the FSN lock and the CRM lock.  This fixes the corner case you identified, and also would continue to work properly if we released the FSN lock during the rescan., This patch avoids setting {{curScanCount}} until we hold both the FSN and CRM locks.  This will avoid doing any unnecessary scans under the current locking regime, and continue to work if we change it later to release the lock inside {{CRM#rescan}}.

Separately, this also fixes an issue where we were checking {{CRM#shutdown}} inside the rescan function without holding the CRM lock., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12659241/HDFS-6783.005.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyCheckpoints
org.apache.hadoop.hdfs.server.namenode.ha.TestHAMetrics
org.apache.hadoop.hdfs.server.namenode.ha.TestDelegationTokensWithHA
org.apache.hadoop.hdfs.server.namenode.ha.TestHAStateTransitions
org.apache.hadoop.hdfs.server.namenode.TestValidateConfigurationSettings
org.apache.hadoop.hdfs.TestHDFSServerPorts

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7533//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7533//console

This message is automatically generated., Thanks [~cmccabe], I agree with the logic in the new patch. One small nit: initial value of {{neededScanCount}} should be 0, right? We don’t need to trigger a {{needsRescan}} at initial state, I update it in the new version., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12659518/HDFS-6783.006.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

                                      The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.TestHDFSServerPorts
org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyCheckpoints
org.apache.hadoop.hdfs.server.namenode.ha.TestHAMetrics
org.apache.hadoop.hdfs.server.namenode.ha.TestHAStateTransitions
org.apache.hadoop.hdfs.server.namenode.ha.TestDelegationTokensWithHA
org.apache.hadoop.hdfs.server.namenode.TestValidateConfigurationSettings

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7544//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7544//console

This message is automatically generated., +1., +1 from me too, thanks for working on this Yi and Colin., Thanks a lot, Yi for the patch. Thanks to Colin and Andrew for reviews.
I have just committed this to trunk and branch-2, Thanks [~cmccabe], [~andrew.wang] and [~umamaheswararao].

Uma, forgot to tell you, this JIRA should credit [~cmccabe], let's add his name in the svn log next time when we commit other JIRAs, thanks., FAILURE: Integrated in Hadoop-trunk-Commit #6063 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6063/])
HDFS-6783. Fix HDFS CacheReplicationMonitor rescan logic. Contributed by Yi Liu. (umamahesh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1617872)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CacheReplicationMonitor.java
, Thanks Yi!. I realized that. I have edited in svn log and updated in CHANGES.txt., FAILURE: Integrated in Hadoop-trunk-Commit #6064 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6064/])
Updated contributors name in CHANGES.txt for HDFS-6783 (umamahesh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1617880)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #646 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/646/])
Updated contributors name in CHANGES.txt for HDFS-6783 (umamahesh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1617880)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
HDFS-6783. Fix HDFS CacheReplicationMonitor rescan logic. Contributed by Yi Liu and Colin Patrick McCabe. (umamahesh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1617872)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CacheReplicationMonitor.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1837 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1837/])
Updated contributors name in CHANGES.txt for HDFS-6783 (umamahesh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1617880)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
HDFS-6783. Fix HDFS CacheReplicationMonitor rescan logic. Contributed by Yi Liu and Colin Patrick McCabe. (umamahesh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1617872)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CacheReplicationMonitor.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #1863 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1863/])
Updated contributors name in CHANGES.txt for HDFS-6783 (umamahesh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1617880)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
HDFS-6783. Fix HDFS CacheReplicationMonitor rescan logic. Contributed by Yi Liu and Colin Patrick McCabe. (umamahesh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1617872)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CacheReplicationMonitor.java
, It looks like this checkin introduced test failures in the build.

{code}
org.apache.hadoop.hdfs.server.namenode.ha.TestStandbyCheckpoints
org.apache.hadoop.hdfs.server.namenode.ha.TestHAMetrics
org.apache.hadoop.hdfs.server.namenode.ha.TestDelegationTokensWithHA
org.apache.hadoop.hdfs.server.namenode.ha.TestHAStateTransitions
org.apache.hadoop.hdfs.server.namenode.TestValidateConfigurationSettings
{code}

TestValidateConfigurationSettings consistently fails for me and 'git bisect' implicated this commit. After reverting it locally the test passed. From a quick look at the patch I am not sure why it would result in these test failures. Any ideas?, Thanks [~arpitagarwal], let me check it right now., Hi [~arpitagarwal], I found the reason, it's bug. 
In rescan() {{namesystem.writeLock();}} and {{namesystem.writeUnlock();}} should be in same {{try...finally}}.  This problem will occur when we call CacheReplicationMonitor#close().

Let me reopen this JIRA and fix it, please help to review., Fix the test timeouts, Thanks for the prompt fix [~hitliuyi]. +1 for the patch, pending Jenkins., [~arpitagarwal], thanks a lot for review. Verified in local env, and let's wait for the Jenkins., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12662418/HDFS-6783.006.fix-tests.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7660//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7660//console

This message is automatically generated., Hi [~arpitagarwal] and [~hitliuyi],

Upon investigating the test failures HDFS-6776  (e.g. https://builds.apache.org/job/PreCommit-HDFS-Build/7654//testReport/), I identified that it's the HDFS-6783 commit that caused the failure, and I'm glad to see that you guys found the cause here and provide the fix. Thanks.


, Committed to trunk and branch-2.

Thanks again for the quick diagnosis and fix [~hitliuyi]., FAILURE: Integrated in Hadoop-trunk-Commit #6085 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6085/])
HDFS-6783. Addendum patch to fix test failures. (Contributed by Yi Liu) (arp: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1618635)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CacheReplicationMonitor.java
, Thanks for correcting the bug in the patch, Yi Liu and Arpit., FAILURE: Integrated in Hadoop-Yarn-trunk #651 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/651/])
HDFS-6783. Addendum patch to fix test failures. (Contributed by Yi Liu) (arp: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1618635)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CacheReplicationMonitor.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1842 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1842/])
HDFS-6783. Addendum patch to fix test failures. (Contributed by Yi Liu) (arp: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1618635)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CacheReplicationMonitor.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1868 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1868/])
HDFS-6783. Addendum patch to fix test failures. (Contributed by Yi Liu) (arp: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1618635)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/CacheReplicationMonitor.java
]