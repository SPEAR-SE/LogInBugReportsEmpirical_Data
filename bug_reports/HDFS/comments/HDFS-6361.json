[Submitted initial version of patch, thanks for reviewing.
, Hi [~brandonli], would you please help review this change if possible? 

Some system uses  4294967294 for nfsnobody, unintended or intended. As an example:
https://bugzilla.redhat.com/show_bug.cgi?id=511876

Another option to the patch I provided is to use something like a 64 bit integer for ID, but the would be wide scope,
and I suspect it's going to be an overkill.

Welcome other folks to review too.

Thanks a lot!

BTW, thanks [~cmccabe] for some consultation.

, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12644061/HDFS-6361.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-nfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6861//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6861//console

This message is automatically generated., Some background would probably be helpful here.  On Linux, user IDs (UIDs) are 32 bits.  This convention goes all the way down into the kernel.

Typically they are treated as unsigned 32-bit numbers.  So you'll find code like this in {{bits/typesizes.h}}:
{code}
bits/typesizes.h:#define __UID_T_TYPE		__U32_TYPE
{code}

Java, of course, does not have unsigned numbers.  So we have to represent numbers like 4294967295 as -1 in Java.

{code}
However, the effect of returning -2 from getUid and getGid for 
+   * nfsnobody is yet to be understood
{code}

What is it that we have yet to understand?  We better figure it out before we commit this code.

{code}
+  private static Integer parseId(final String idStr) {
+    String tmpStr = idStr;
+    if (idStr.equals("4294967294")) {
+      tmpStr = "-2";
+    }
+    return Integer.valueOf(tmpStr);
+  }
{code}

I don't see a reason to special-case -2.  We should treat all large integers > 0x7fffffff as negatives.  If Java had unsigned numbers, we could just use an unsigned 32 bit int... but it doesn't, so we can just use a signed int.

Basically, for the purposes of user IDs, -2 and 4294967294 are the same... at least on Linux.

{code}
Another option to the patch I provided is to use something like a 64 bit integer for ID, but the would be wide scope,
and I suspect it's going to be an overkill.
{code}

The Linux kernel itself doesn't use 64-bit numbers for UIDs.  I'm not aware of any kernels which do.  So I don't see a benefit to this., Hi Colin,

Thanks a lot for reviewing! Please see below my explanation of things:
{quote}
What is it that we have yet to understand? We better figure it out before we commit this code.
{quote}
Yes, I on-purposely put the comments there for a review discussion. What I meant was, Nfs3Util.getFileAttr() called by lots of places will get "-2" for  "4294967294", what yet to be understood is, if "-2" is returned instead of  4294967294, whether all consumers of Nfs3Util.getFileAttr() will be happy, because of the diff between int and unsigned int. That said, I did run all regression before posting the patch, it seems to be fine. I actually hope the change is fine and the concern can be removed.
{quote}
I don't see a reason to special-case -2
{quote}
So far we only see this special number, and I'm not aware of any other special numbers that need to be treated specially, because ID is supposed to be positive. If we generalize it here, then we might not catch it right away when someone create a new "out-of-range" number. What do you think?
{quote}
The Linux kernel itself doesn't use 64-bit numbers for UIDs. I'm not aware of any kernels which do. So I don't see a benefit to this.
{quote}
I agree.

Thanks again!







 
, So sorry for the late response. Thanks [~yzhangal] and [~cmccabe] for the finding the issue and giving the background description.

I agree that we should not treat -2 as a special case. Basically, user can configure anything in /etc/passwd or corresponding files on purpose or by mistake. For example, on MacOS nobody is -2 and nogroup is -1. On Linux, the system converts user id "-3" in /etc/passwd to 4294967295. 

NFS gateway get the uid/gid from a shell command. In the result, the id string is from uint32. To handle the id from negative number, we can use Long to parse the string and then do Long.getInt() to return the correct value.

{quote}..., whether all consumers of Nfs3Util.getFileAttr() will be happy{quote}
The consumers of Nfs3Util.getFileAttr() should be OK with that since it looks up the id by using the name retrieved from HDFS.  Let me know if I misunderstood your question.


, Hi [~cmccabe] and [~brandonli],  

Thanks for the comments and info. I uploaded revised version 0002, in which I used Long to parse the string as Brandon suggested to make it general, and added a couple of more entries to the unit testcase. Thanks in advance for another round of review.


, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12644540/HDFS-6361.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-nfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6887//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/6887//artifact/trunk/patchprocess/newPatchFindbugsWarningshadoop-nfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6887//console

This message is automatically generated., New version to fix findbugs issue.
, +1. Pending jenkins., Looks good.  +1 pending jenkins from me as well, Thanks a lot Brandon and Colin!

, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12644651/HDFS-6361.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-nfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6900//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6900//console

This message is automatically generated., HI [~cmccabe] and [~brandonli], thanks for your review earlier, would any of you please help commit the patch with the +1s you have given earlier? Thanks a lot., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12644651/HDFS-6361.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-nfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/6904//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/6904//console

This message is automatically generated., I will commit it shortly. Thanks!, I've committed the patch to 2.4.1. Thank you, Yongjun, for the contribution!, Many thanks Brandon!
, SUCCESS: Integrated in Hadoop-trunk-Commit #5606 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5606/])
HDFS-6361. TestIdUserGroup.testUserUpdateSetting failed due to out of range nfsnobody Id. Contributed by Yongjun Zhang (brandonli: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1595050)
* /hadoop/common/trunk/hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/IdUserGroup.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-nfs/src/test/java/org/apache/hadoop/nfs/nfs3/TestIdUserGroup.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #562 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/562/])
HDFS-6361. TestIdUserGroup.testUserUpdateSetting failed due to out of range nfsnobody Id. Contributed by Yongjun Zhang (brandonli: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1595050)
* /hadoop/common/trunk/hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/IdUserGroup.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-nfs/src/test/java/org/apache/hadoop/nfs/nfs3/TestIdUserGroup.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1754 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1754/])
HDFS-6361. TestIdUserGroup.testUserUpdateSetting failed due to out of range nfsnobody Id. Contributed by Yongjun Zhang (brandonli: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1595050)
* /hadoop/common/trunk/hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/IdUserGroup.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-nfs/src/test/java/org/apache/hadoop/nfs/nfs3/TestIdUserGroup.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1780 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1780/])
HDFS-6361. TestIdUserGroup.testUserUpdateSetting failed due to out of range nfsnobody Id. Contributed by Yongjun Zhang (brandonli: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1595050)
* /hadoop/common/trunk/hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/IdUserGroup.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-nfs/src/test/java/org/apache/hadoop/nfs/nfs3/TestIdUserGroup.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
]