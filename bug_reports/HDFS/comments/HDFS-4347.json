[In the case {{waitCheckpointDone()}} will loop until the next checkpoint spewing
{code}
2012-12-28 15:37:13,664 INFO  namenode.TestBackupNode (TestBackupNode.java:waitCheckpointDone(117)) - Waiting checkpoint to complete... checkpoint txid should increase above 10
2012-12-28 15:37:21,986 INFO  namenode.TestBackupNode (TestBackupNode.java:waitCheckpointDone(117)) - Waiting checkpoint to complete... checkpoint txid should increase above 10
2012-12-28 15:37:22,987 INFO  namenode.TestBackupNode (TestBackupNode.java:waitCheckpointDone(117)) - Waiting checkpoint to complete... checkpoint txid should increase above 10
{code}

Which will go on until the next checkpoint, which could be long depending on configuration parameters.

The problem is that in {{testCheckpoint(StartupOption op)}} we {{startBackupNode()}} twice and both times {{waitCheckpointDone()}} after that. The difference is that in the first occurrence {{txid}} is calculated before  {{startBackupNode()}} and in the second it is calculated afterwards., Are you looking for something like this? Seems like there was just a tiny line-switch mistake in the code., Yup. +1 from me. See what Jenkins says., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12562624/HDFS-4347.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3704//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3704//console

This message is automatically generated., I just committed this. Thank you Plamen., Integrated in Hadoop-Hdfs-trunk #1269 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1269/])
    HDFS-4347. Avoid infinite waiting checkpoint to complete in TestBackupNode. Contributed by Plamen Jeliazkov. (Revision 1426705)

     Result = FAILURE
shv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1426705
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestBackupNode.java
, Integrated in Hadoop-Mapreduce-trunk #1299 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1299/])
    HDFS-4347. Avoid infinite waiting checkpoint to complete in TestBackupNode. Contributed by Plamen Jeliazkov. (Revision 1426705)

     Result = SUCCESS
shv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1426705
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestBackupNode.java
]