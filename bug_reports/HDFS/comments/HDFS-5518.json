[The patch for this is part of the cross-project HADOOP-10101 patch, submitted here for review/ Jenkins testing, though it would actually be applied in the '10101 patch, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12614049/HADOOP-10101-002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

      {color:red}-1 javac{color}.  The applied patch generated 1564 javac compiler warnings (more than the trunk's current 1545 warnings).

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5446//testReport/
Javac warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/5446//artifact/trunk/patchprocess/diffJavacWarnings.txt
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5446//console

This message is automatically generated., cancelling patch pending an update to HADOOP-10101, how this change will affect downstream projects and apps? in what version are we planning to make this change?, Alejandro
# I'm looking at 2.3 having an update of the dependencies, and leaving 2.2.x entirely alone, though a JetS3t patch went into 2.2.1 (HADOOP-9623) that may or may not stay in there.
# It will allow projects using the latest versions of guava to work with Hadoop 2.3+ without having to shade their version as BOOKEEPER-708 was forcing BK to do, something which was actually stopping HDFS from upgrading to Bookeeper 4.2.1 ( HDFS-5411)
# It will force projects also using out of date guava versions to update or play games with maven shading
, Updated the Deprecated methods usage with successors.
Please review, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12617563/HADOOP-10101.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 4 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5674//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5674//console

This message is automatically generated., previous patch but current against trunk; CRs stripped, Looking at this, it's a superset of HDFS-7040 .. that updates the NullInputStream but not the timer stuff., Fixed by HADOOP-11600. Now Hadoop source code can be compiled with Guava 17.]