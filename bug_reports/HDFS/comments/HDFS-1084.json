[{code}
Testcase: testFilePermissions took 10.096 sec
	FAILED
null expected:<rwxr[w----]> but was:<rwxr[-xr-x]>
junit.framework.ComparisonFailure: null expected:<rwxr[w----]> but was:<rwxr[-xr-x]>
	at org.apache.hadoop.hdfs.TestDFSShell.confirmPermissionChange(TestDFSShell.java:823)
	at org.apache.hadoop.hdfs.TestDFSShell.testChmod(TestDFSShell.java:764)
	at org.apache.hadoop.hdfs.TestDFSShell.testFilePermissions(TestDFSShell.java:843)
{code}
, Two tests failed. testFilePermission() with the same message. And testErrOutPut():
{code}
Testcase: testErrOutPut took 12.357 sec
	FAILED
cat does not print exceptions 
junit.framework.AssertionFailedError: cat does not print exceptions 
	at org.apache.hadoop.hdfs.TestDFSShell.testErrOutPut(TestDFSShell.java:325)
{code}, Blocker. Test failure., It doesn't look like failing anymore, no?, testFilePermissions has the same failure on Windows because chmod in cygwin work with POSIX paths only, not Windows paths.  Proposed fix is to convert Windows paths to POSIX paths using the cygpath utility in RawLocalFileSystem.execCommand:

{noformat}
--- src/java/org/apache/hadoop/fs/RawLocalFileSystem.java	(revision 1061025)
+++ src/java/org/apache/hadoop/fs/RawLocalFileSystem.java	(working copy)
@@ -562,8 +562,10 @@
     String[] args = new String[cmd.length + 1];
     System.arraycopy(cmd, 0, args, 0, cmd.length);
     args[cmd.length] = f.getCanonicalPath();
+    if (System.getProperty("os.name").toLowerCase().indexOf("win") >= 0) {
+    	args[cmd.length] = Shell.execCommand("cygpath", f.getCanonicalPath());
+    }
     String output = Shell.execCommand(args);
     return output;
   }
{noformat}, Some helpful links on chmod under cygwin...

http://cygwin.com/ml/cygwin/2010-04/msg00013.html
http://www.cygwin.com/cygwin-ug-net/using.html#pathnames-win32
http://www.cygwin.com/cygwin-ug-net/using-utils.html#cygpath
, We can fix it by using {{FileUtil.makeShellPath(File file, boolean makeCanonicalPath)}} here instead of {{getCanonicalPath()}}.
A side note - the entire {{RawLocalFileSystem}} should probably invoke FileUtil methods rather than Shell. This would be a larger code cleanup, not for 0.22., Thanks Konstantin for the suggestion.  HADOOP-7126 has been created with patch attached., At least on Linux, this is actually a umask problem. The test passes when umask is 0022, but fails when it's 0002. This is because the sticky bit portion of the test calls mkdir with no explicit permission and then verifies the permissions assuming 755 instead of 775., Er, sorry, nm about the umask thing - that was HADOOP-5050, I was looking at the wrong source tree., This has been fixed by HADOOP-7126.]