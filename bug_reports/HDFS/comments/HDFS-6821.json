[Hi, [~samera].

Ideas similar to this have been proposed several times.  The consensus has always been that pushing a recursive operation all the way to the NameNode for atomicity would impact throughput too severely.  The implementation would require holding the write lock while updating every inode in a subtree.  During that time, all other RPC caller threads would block waiting for release of the write lock.  A finer-grained locking implementation would help mitigate this, but it wouldn't eliminate the problem completely.

It's typical behavior in many file systems that recursive operations are driven from user space, and the syscalls modify a single inode at a time.  HDFS isn't different in this respect.

I'm going to resolve this as won't fix., I see.
Thanks Chris.

-samer]