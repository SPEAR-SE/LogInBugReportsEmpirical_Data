[NPE is thrown in when commitBlockSynchronization() tries to add block to DNDescriptior
{code}
for (int i = 0; i < descriptors.length; i++) {
  descriptors[i].addBlock(storedBlock);
}
{code}
because {{descriptors[i]}} was set to NULL because {{blockManager.getDatanodeManager().getDatanode()}} returns null if the DN is not active., Rare to occur, If the removed DN have responded successfully during recovery, then definitely some problem at DN side in reporting to active NN.
One possible problem in case of HA is HDFS-5014, Yes this is pretty rare, but if I hit it (yes while testing HA), so others could too. The reason is similar to yours. But whatever the reason we should fix NPE., In the event that this happens I see two possible actions:
1) Throw an IOException (maybe a new type of exception that extends IO? Not sure.) over the RPC and have DataNode re-attempt recovery if caught.
2) We skip that null target and continue with the remaining others; the Block will be under-replicated for a short while. If all targets are null though, (very rare, but still possible) then we will have to again resort to doing #1 anyway.

Any ideas / preferences?, Attaching patch for review. Patch is taking the 2) route -- we let recovery succeed UNLESS all targets were null DatanodeDescriptors., - Your patch seems to be implementing approach 1, while you claim it is 2.
- It doesn't look that you actually eliminate NPE, since not assign anything to descriptors[i] means it is going to be NULL.

I think we should treat commitBlockSynchronization() as a partial block report for each replica reported. If DN calls commitBlockSynchronization() it means it has seen and evaluated all replicas of the block on all DNs reported. So their state was consistent at the time of inspection. Now if NN doesn't see a DN active it should remove replica from the block, as in block report. This will make the block under-replicated and the BlockManager will further take care of its replication. If all reported replicas are missing it is very unfortunate as we will have a missing block. But forcing another recovery will not help in this case because there are no replicas to recover., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12599040/HDFS-5077.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4883//console

This message is automatically generated., Yes, that was a bad patch. Apologizes.

I re-worked it to look much closer to the 2) route. We will no longer throw an Exception. If indeed all the newtargets were null then that would be an indication of a missing block; for which there is nothing we can do.

The current patch basically adds all found targets to a list and converts that list back to an array at the end of the call; skipping any targets discovered to be null.
For a little while the block will be under-replicated but should catch up thru block replication thread.

I included a unit test to show that non-existant target does not fail the call., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12600046/HDFS-5077_2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.TestPread

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4893//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4893//console

This message is automatically generated., Looks good. Minor thing.
The test case fails without the patch on the first call to {{commitBlockSynchronization()}} throwing the NPE.
So you don't need to mock the result of {{getStoredBlock()}} in your test. Seems a redundant action.
Everything passes with the patch applied., Good point, thanks Konstantin.

I was basically mimic'ing the logic of testCommitSyncWithClose but with a non-existant DatanodeID so I keep the logic close to the test above it.
It does indeed appear to be un-necessary; I'll modify the test.

Also I don't think the TestPread issue appears to be related. Ran the tests locally and passed., Attaching latest patch for trunk. Modified with Konstantin's suggestion., +1, I just committed this to trunk, 2.1, and 2.1.1.
Could you please port this for 2.0 branch., SUCCESS: Integrated in Hadoop-trunk-Commit #4347 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4347/])
HDFS-5077. NPE in FSNamesystem.commitBlockSynchronization(). Contributed by Plamen Jeliazkov. (shv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1518851)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestCommitBlockSynchronization.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #317 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/317/])
HDFS-5077. NPE in FSNamesystem.commitBlockSynchronization(). Contributed by Plamen Jeliazkov. (shv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1518851)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestCommitBlockSynchronization.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1507 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1507/])
HDFS-5077. NPE in FSNamesystem.commitBlockSynchronization(). Contributed by Plamen Jeliazkov. (shv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1518851)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestCommitBlockSynchronization.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1534 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1534/])
HDFS-5077. NPE in FSNamesystem.commitBlockSynchronization(). Contributed by Plamen Jeliazkov. (shv: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1518851)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestCommitBlockSynchronization.java
, Thank you, Konstantin. I'll do a port for 2.0 branch., TestCommitBlockSynchronization was added in 2.1.0-beta as a part of HDFS-5024.

I will attach just the core patch for 2.0 branch for now. If you want the unit test as well let me know if you would like it stand-alone or plan to do something with the work from HDFS-5024 instead. , {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12601185/HDFS-5077_3_branch2dot0.patch
  against trunk revision .

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4923//console

This message is automatically generated.]