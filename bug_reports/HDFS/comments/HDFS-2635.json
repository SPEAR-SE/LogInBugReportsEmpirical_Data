[--- NNBench.java	2011-12-06 12:03:49.000000000 -0800
+++ NNBench.new	2011-12-06 12:03:31.000000000 -0800
@@ -722,16 +722,16 @@
       if (barrier()) {
         if (op.equals(OP_CREATE_WRITE)) {
           startTimeTPmS = System.currentTimeMillis();
-          doCreateWriteOp("file_" + hostName + "_", reporter);
+          doCreateWriteOp("file_" + hostName + "_" + key, reporter);
         } else if (op.equals(OP_OPEN_READ)) {
           startTimeTPmS = System.currentTimeMillis();
-          doOpenReadOp("file_" + hostName + "_", reporter);
+          doOpenReadOp("file_" + hostName + "_" + key, reporter);
         } else if (op.equals(OP_RENAME)) {
           startTimeTPmS = System.currentTimeMillis();
-          doRenameOp("file_" + hostName + "_", reporter);
+          doRenameOp("file_" + hostName + "_" + key, reporter);
         } else if (op.equals(OP_DELETE)) {
           startTimeTPmS = System.currentTimeMillis();
-          doDeleteOp("file_" + hostName + "_", reporter);
+          doDeleteOp("file_" + hostName + "_" + key, reporter);
         }
         
         endTimeTPms = System.currentTimeMillis();, Lets try this again, the 'right' way., My submitted patch fixes the file duplication by incorporating the mapper's key into the filename. The combination of hostname and map key result in a unique filename across multiple hosts with a variable number of map slots per host.]