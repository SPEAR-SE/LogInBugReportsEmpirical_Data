[This is seen in our nightlies where we see other services being impacted by namenode being in safemode. In our tests we are killing the active namenode every 5 mins and some times we see that after the transition from standby to active the namenode goes into safemode., We need the following:
# Standby when throws safemode exception, the client fails over.
# Active when throws safemode exception, the client must retry.

I will post a patch along these lines., Upload an initial patch for review. 

This patch adds a new RetriableException, and wraps the SafeModeException as the new RetriableException if 1) HA is setup, and 2) the NN is in active state. Then the client side will retry the same NN if it gets a RetriableException. 

Will add more javadoc and unit tests shortly., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12607121/HDFS-5291.000.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 3 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.cli.TestHDFSCLI
                  org.apache.hadoop.hdfs.server.namenode.TestEditLogRace
                  org.apache.hadoop.hdfs.TestSafeMode
                  org.apache.hadoop.hdfs.web.TestWebHDFS
                  org.apache.hadoop.hdfs.TestDFSClientRetries

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5118//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5118//console

This message is automatically generated., Fix the failed unit tests., {quote}We need the following:
1. Standby when throws safemode exception, the client fails over.
2. Active when throws safemode exception, the client must retry.{quote}
I am not seeing any chance of standby throwing SafeModeException except following 2 places with *dfs.ha.allow.stale.reads* enabled.
{{getBlockLocations()}} and {{getAdditionalDatanode()}}. 

Hi [~arpitagarwal], in your cluster *dfs.ha.allow.stale.reads* was enabled?, Vinay, sorry I forgot to add more description. In our test, we saw NN immediately went into safemode after transitioning to active state. So the issue is not that the SBN throws SafeModeException. So the current patch only handles "2. Active when throws safemode exception, the client must retry". 

And the above safemode issue is not rare in our test. I'm guessing it may be because that while the SBN tails the edit log, it keeps checking the safemode for the updateBlocks call, and always grabs the FSNamesystem write lock. Thus it is very possible that the SBN stays in safemode for a long time. And even if it enters the safemode extension time, since the safemode monitor thread also needs to acquire the FSNamesystem write lock, the extension time may be longer. Thus when the SBN transitions to active, the safemode object is not null, and triggers the safemode when checkMode is called. , Add a new unit test to make sure client retry happens., bq. This is seen in our nightlies where we see other services being impacted by namenode being in safemode. In our tests we are killing the active namenode every 5 mins and some times we see that after the transition from standby to active the namenode goes into safemode.
In this case since failovers are frequent NN entering into safemode is possible. In this case safemode is entering to extention after reading the complete edits during failover. 
I think, title of the issue is confusing here.  May be we can change to "Client needs to retry on startup SafeModeException" ..?

But One more query, if NN stays in safemode forever due to some missing blocks, then also client have to retry till all failovers are complete?
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12607128/HDFS-5291.001.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 3 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5120//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5120//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12607136/HDFS-5291.002.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 3 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5123//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5123//console

This message is automatically generated., Some comments:
# RetriableException - javadoc could say along the lines of "Exception thrown by a server typically to indicate that server is in a state where request cannot be processed temporarily (such as still starting up). Client may retry the request.  If the service is up, the server may be able to process a retried request.
# Why add getRetryDecision() to RetriableException? Do you foresee adding other kinds of retries later? Also any exception member variables cannot be communicated over RPC.
# checkNamenodeSafeMode could just be named checkSafeMode()? Also @throws should be followed by the excetion name. Lets add specific exception to throws clause instead of generic IOException.
, Thanks for the review Suresh! Update the patch to address your comments., bq. checkNamenodeSafeMode could just be named checkSafeMode()

There is already a method named checkSafeMode in FSNamesystem.java. So I name the new method as checkNameNodeSafeMode to distinguish with the old one., +1 for the patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12607193/HDFS-5291.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:red}-1 javadoc{color}.  The javadoc tool appears to have generated 2 warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5124//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5124//console

This message is automatically generated., The new javadoc warning should be wrong report. Update the patch to see if we can get rid of the complain., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12607230/HDFS-5291.003.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5125//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5125//console

This message is automatically generated., SUCCESS: Integrated in Hadoop-trunk-Commit #4562 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/4562/])
HDFS-5291. Standby namenode after transition to active goes into safemode. Contributed by Jing Zhao. (jing9: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1530112)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryPolicies.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RetriableException.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SafeModeException.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestHASafeMode.java
, Thanks again for the review, Suresh! I've committed this to trunk, branch-2 and branch-2.2., SUCCESS: Integrated in Hadoop-Yarn-trunk #356 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/356/])
HDFS-5291. Standby namenode after transition to active goes into safemode. Contributed by Jing Zhao. (jing9: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1530112)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryPolicies.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RetriableException.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SafeModeException.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestHASafeMode.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1546 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1546/])
HDFS-5291. Standby namenode after transition to active goes into safemode. Contributed by Jing Zhao. (jing9: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1530112)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryPolicies.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RetriableException.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SafeModeException.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestHASafeMode.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1572 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1572/])
HDFS-5291. Standby namenode after transition to active goes into safemode. Contributed by Jing Zhao. (jing9: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1530112)
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryPolicies.java
* /hadoop/common/trunk/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RetriableException.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SafeModeException.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestHASafeMode.java
, Is my understanding of this issue correct that the only thing we're trying to fix here is the fact the clients are not retrying attempting to talk to the active NN when it receives a safemode exception? i.e. it's not the case that the standby NN is somehow incorrectly going into safemode after a failover? If so, then I agree with Vinay that we should update the summary and description of this JIRA, because it's currently rather confusing., Thanks for the comments Aaron. I've updated the title and description. ]