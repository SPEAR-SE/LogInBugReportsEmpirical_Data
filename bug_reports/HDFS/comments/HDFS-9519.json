[Thanks for reporting this Yongjun, I'll work on this soon., Thanks for reporting this, [~yzhangal]. The condition check is always true and the comment is confusing., If the secondary namenode isn't actually configured but someone tries to start the 2nn, what happens?  Also, does Checkpoint and Backup have different entry points or is this used for those too?, Thanks [~liuml07] and [~aw] for the comments and sorry for my delayed response.

The {{if (secondary != null)}} is confusing, and should be removed with the change of HDFS-6348. My bad I didn't catch this redundancy when fixing HDFS-3059. 

The reason of disabling the http server when starting with {{CommandLineOpts}} is that, after processing it the 2NN will terminate. E.g. when someone runs {{hdfs secondarynamenode -checkpoint}} the 2nn just start and checkpoint, then exit. Starting an http server during this is unnecessary - the 2nn webui is for the daemon anyways. Also, when security is enabled, admin may not have the credentials to the web server, but they should be allowed to do checkpointing.

My comments in the code seems to be doing more confusion than explanation...... I revised it and attached in patch 1 for review.

re. [~aw]'s questions:
bq. If the secondary namenode isn't actually configured but someone tries to start the 2nn, what happens?
In this case 2NN is started as a daemon. My comments were bad.
bq. Also, does Checkpoint and Backup have different entry points or is this used for those too?
AFAICT, 2NN only supports {{-checkpoint}}, {{-format}} and {{-geteditsize}}, with the same entry point. Backup should be done from the NN., Thanks [~xiaochen] for the patch.

Can we move the main comment to the beginning of the block, something like:
{code}
      // SecondaryNameNode can be started to run a command (i.e. checkpoint or
      // geteditsize etc) and terminate, or to run as a daemon when no command is 
      // specified. The web server is only needed when 2NN runs as a daemon.
      if (opts != null && opts.getCommand() != null) {
        // 2NN is started to run a command and then terminate
        int ret = secondary.processStartupCommand(opts);
        terminate(ret);
      }
      
      // 2NN runs as a daemon, start the web server
      secondary.startInfoServer();
{code}

Thanks.
, Thanks Yongjun. I agree with your general idea that we should focus on the 2 modes instead of the web server itself. Quick clarification:
'Run as a daemon' is not limited to 'no command is specified' - if {{-format}} is given, after {{parseArgs}}, {{opts.getCommand()}} still returns null so that 2NN is still started as a daemon.
Uploaded patch 2 which I think explains it clearer. Please let me know what you think., Thanks Xiao. +1 on rev2 pending jenkins test.
, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue} 0m 0s {color} | {color:blue} Docker mode activated. {color} |
| {color:green}+1{color} | {color:green} @author {color} | {color:green} 0m 0s {color} | {color:green} The patch does not contain any @author tags. {color} |
| {color:red}-1{color} | {color:red} test4tests {color} | {color:red} 0m 0s {color} | {color:red} The patch doesn't appear to include any new or modified tests. Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 8m 30s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 43s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 45s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 16s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 56s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 15s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 1s {color} | {color:green} trunk passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 11s {color} | {color:green} trunk passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 53s {color} | {color:green} trunk passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green} 0m 53s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 42s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 42s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green} 0m 44s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green} 0m 44s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green} 0m 17s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvnsite {color} | {color:green} 0m 55s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} mvneclipse {color} | {color:green} 0m 14s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green} 0m 0s {color} | {color:green} Patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green} 2m 7s {color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 8s {color} | {color:green} the patch passed with JDK v1.8.0_66 {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green} 1m 52s {color} | {color:green} the patch passed with JDK v1.7.0_91 {color} |
| {color:green}+1{color} | {color:green} unit {color} | {color:green} 67m 19s {color} | {color:green} hadoop-hdfs in the patch passed with JDK v1.8.0_66. {color} |
| {color:red}-1{color} | {color:red} unit {color} | {color:red} 80m 0s {color} | {color:red} hadoop-hdfs in the patch failed with JDK v1.7.0_91. {color} |
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red} 0m 22s {color} | {color:red} Patch generated 58 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 175m 59s {color} | {color:black} {color} |
\\
\\
|| Reason || Tests ||
| JDK v1.7.0_91 Failed junit tests | hadoop.hdfs.server.namenode.TestAddBlockRetry |
|   | hadoop.hdfs.server.namenode.ha.TestDFSUpgradeWithHA |
|   | hadoop.hdfs.TestDFSStripedOutputStream |
|   | hadoop.hdfs.server.namenode.snapshot.TestOpenFilesWithSnapshot |
|   | hadoop.hdfs.server.namenode.ha.TestRequestHedgingProxyProvider |
| JDK v1.7.0_91 Timed out junit tests | org.apache.hadoop.hdfs.TestReplication |
\\
\\
|| Subsystem || Report/Notes ||
| Docker |  Image:yetus/hadoop:0ca8df7 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12776718/HDFS-9519.02.patch |
| JIRA Issue | HDFS-9519 |
| Optional Tests |  asflicense  compile  javac  javadoc  mvninstall  mvnsite  unit  findbugs  checkstyle  |
| uname | Linux c49466f59b94 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /testptch/hadoop/patchprocess/precommit/personality/provided.sh |
| git revision | trunk / 132478e |
| findbugs | v3.0.0 |
| unit | https://builds.apache.org/job/PreCommit-HDFS-Build/13822/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_91.txt |
| unit test logs |  https://builds.apache.org/job/PreCommit-HDFS-Build/13822/artifact/patchprocess/patch-unit-hadoop-hdfs-project_hadoop-hdfs-jdk1.7.0_91.txt |
| JDK v1.7.0_91  Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/13822/testReport/ |
| asflicense | https://builds.apache.org/job/PreCommit-HDFS-Build/13822/artifact/patchprocess/patch-asflicense-problems.txt |
| modules | C: hadoop-hdfs-project/hadoop-hdfs U: hadoop-hdfs-project/hadoop-hdfs |
| Max memory used | 76MB |
| Powered by | Apache Yetus    http://yetus.apache.org |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/13822/console |


This message was automatically generated.

, The failed tests license warnings are not related., FAILURE: Integrated in Hadoop-trunk-Commit #8960 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8960/])
HDFS-9519. Some coding improvement in SecondaryNameNode#main. (Xiao Chen (yzhang: rev 2a4c7d4facabb8b99d6dcbf4ccfe2afedf4fd445)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
, Committed to trunk, branch-2 and branch-2.8. Thanks folks for review/comments, and Xiao for the contribution.
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #690 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/690/])
HDFS-9519. Some coding improvement in SecondaryNameNode#main. (Xiao Chen (yzhang: rev 2a4c7d4facabb8b99d6dcbf4ccfe2afedf4fd445)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/SecondaryNameNode.java
, Thanks Yongjun for the review + commit, and thanks Mingliang and Allen for the comments!]