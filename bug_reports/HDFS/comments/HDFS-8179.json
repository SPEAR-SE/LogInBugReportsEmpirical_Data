[This is a bug in DFSClient#getServerDefaults(). There are two issues here

1. DFSClient#serverDefaults is null within 1 hour (SERVER_DEFAULTS_VALIDITY_PERIOD) of NN start. The null serverDefaults is returned from DFSClient#getServerDefaults(), which causes the "hadoop fs -rm -r" NPE.

2. HDFS-6841 changes to use Time#monotonicNow instead of Time.now(). It represents time elapsed since an arbitrary origin which should only be compared with value returned from Time#monotonicNow(). But the serverDefaultLastUpdate has an initial value of 0 through default initialization. It should be initialized with Time.monotonicNow(). There is similar issue Arpit Agarwal found in HDFS-8163.

{code}
public FsServerDefaults getServerDefaults() throws IOException {  
long now = Time.monotonicNow();
    if (now - serverDefaultsLastUpdate > SERVER_DEFAULTS_VALIDITY_PERIOD) {
      serverDefaults = namenode.getServerDefaults();
      serverDefaultsLastUpdate = now;
    }
    return serverDefaults;
{code}


The proposed fix:
{code}
public FsServerDefaults getServerDefaults() throws IOException {  
long now = Time.monotonicNow();
    if ((serverDefaults == null) || (now - serverDefaultsLastUpdate > SERVER_DEFAULTS_VALIDITY_PERIOD)) {
      serverDefaults = namenode.getServerDefaults();
      serverDefaultsLastUpdate = now;
    }
    return serverDefaults;
{code}, Previously, we compare Time.now() - 0 against SERVER_DEFAULTS_VALIDITY_PERIOD (1 hour), which will definitely bootstrap the initialization of serverDefaults at any time.  After HDFS-6841, it may take a while for Time.monotonicNow() - 0 to be greater than SERVER_DEFAULTS_VALIDITY_PERIOD to guarantee a non-null serverDefaults., Attach a patch that fixed the DFSClient#getServerDefaults() to initialize serverDefaults appropriately and added additional tracing at WARN level for Trash policy related failures to make future investigation easier.

I've built private hadoop-common and hadoop-hdfs jars with the patch and verified it fixed the issue on the machine with the original repro. No new test is added because it is not easy to do physical machine restart in the unit test., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12726347/HDFS-8179.00.patch
  against trunk revision f47a576.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestFileCreation

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10311//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10311//console

This message is automatically generated., The Jenkins failure is known and tracked by HDFS-8043., Add a unit test for getServerDefaults()., +1, Hi [~xyao], Quick question before you commit. I didn't look at the part of HDFS-6841 that regressed this but was the original regression in the NN server? It looks like the fix here is client side. Thanks, Arpit., [~arpitagarwal],
  HDFS-6841 changed Times.now call to Times.monotonicNow, which revealed the original bug in DFSClient#getServerDefaults. The bug here was that  "serverDefaults == null'  was not handled, when called for the first time.
{code}
-    if (now - serverDefaultsLastUpdate > SERVER_DEFAULTS_VALIDITY_PERIOD) {
+    if ((serverDefaults == null) ||
+        (now - serverDefaultsLastUpdate > SERVER_DEFAULTS_VALIDITY_PERIOD)) {
{code}
Before HDFS-6841 "now" was Times.now() therefore, the "if condition" always returned true when called for the first time., Thanks [~jnp]. Looked at the original change and the patch makes sense.

+1 from me too., Committed to trunk, branch-2 and branch-2.7.

Thanks for the review [~jnp]., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12726637/HDFS-8179.01.patch
  against trunk revision f967fd2.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-common-project/hadoop-common hadoop-hdfs-project/hadoop-hdfs.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10321//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10321//console

This message is automatically generated., I just realized I committed the v01 patch before Jenkins +1. My apologies., FAILURE: Integrated in Hadoop-trunk-Commit #7619 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7619/])
HDFS-8179. DFSClient#getServerDefaults returns null within 1 hour of system start. (Contributed by Xiaoyu Yao) (arp: rev c92f6f360515cc21ecb9b9f49b3e59537ef0cb05)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDistributedFileSystem.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #170 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/170/])
HDFS-8179. DFSClient#getServerDefaults returns null within 1 hour of system start. (Contributed by Xiaoyu Yao) (arp: rev c92f6f360515cc21ecb9b9f49b3e59537ef0cb05)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDistributedFileSystem.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java
, FAILURE: Integrated in Hadoop-Yarn-trunk #904 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/904/])
HDFS-8179. DFSClient#getServerDefaults returns null within 1 hour of system start. (Contributed by Xiaoyu Yao) (arp: rev c92f6f360515cc21ecb9b9f49b3e59537ef0cb05)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDistributedFileSystem.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2102 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2102/])
HDFS-8179. DFSClient#getServerDefaults returns null within 1 hour of system start. (Contributed by Xiaoyu Yao) (arp: rev c92f6f360515cc21ecb9b9f49b3e59537ef0cb05)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDistributedFileSystem.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #161 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/161/])
HDFS-8179. DFSClient#getServerDefaults returns null within 1 hour of system start. (Contributed by Xiaoyu Yao) (arp: rev c92f6f360515cc21ecb9b9f49b3e59537ef0cb05)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDistributedFileSystem.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #171 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/171/])
HDFS-8179. DFSClient#getServerDefaults returns null within 1 hour of system start. (Contributed by Xiaoyu Yao) (arp: rev c92f6f360515cc21ecb9b9f49b3e59537ef0cb05)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDistributedFileSystem.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2120 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2120/])
HDFS-8179. DFSClient#getServerDefaults returns null within 1 hour of system start. (Contributed by Xiaoyu Yao) (arp: rev c92f6f360515cc21ecb9b9f49b3e59537ef0cb05)
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicyDefault.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestDistributedFileSystem.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java
]