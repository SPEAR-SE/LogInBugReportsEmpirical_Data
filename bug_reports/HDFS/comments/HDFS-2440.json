[Call OPEN with bufferSize=0 returns

{code}
head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"/>
<title>Error 500 Buffer size &lt;= 0</title>
</head>
<body><h2>HTTP ERROR 500</h2>
<p>Problem accessing /webhdfs/tmp/webhdfs_data/file_small_data.txt. Reason:
<pre>    Buffer size &lt;= 0</pre></p><h3>Caused by:</h3><pre>java.lang.IllegalArgumentException: Buffer size &lt;= 0
	at java.io.BufferedInputStream.&lt;init&gt;(BufferedInputStream.java:176)
	at org.apache.hadoop.hdfs.DFSClient$BlockReader.newBlockReader(DFSClient.java:1558)
	at org.apache.hadoop.hdfs.DFSClient$DFSInputStream.blockSeekTo(DFSClient.java:1908)
	at org.apache.hadoop.hdfs.DFSClient$DFSInputStream.read(DFSClient.java:2048)
	at java.io.DataInputStream.read(DataInputStream.java:83)
	at org.apache.hadoop.io.IOUtils.copyBytes(IOUtils.java:68)
	at org.apache.hadoop.hdfs.server.datanode.web.resources.DatanodeWebHdfsMethods$3$1.write(DatanodeWebHdfsMethods.java:234)
	at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71)
	at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57)
	at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:306)
	at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1437)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349)
	at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339)
	at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537)
	at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1221)
	at org.apache.hadoop.http.HttpServer$QuotingInputFilter.doFilter(HttpServer.java:835)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1212)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:399)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:450)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:230)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:326)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:928)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:549)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
</pre>
<hr /><i><small>Powered by Jetty://</small></i><br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                
<br/>                                                

</body>
</html>
{code}


We should throw a 400 with the appropriate message. When an invalid value is sent, we return the following content

{code}
"RemoteException":{"className":"com.sun.jersey.api.ParamException$QueryParamException","message":"java.lang.NumberFormatException: For input string: \"invalid\""}}
{code}, Also GETFILECHECKSUM rest api throws a 500 when called on a dir. We should throw a 403 with the appropriate message stating why so the user can determine why the call failed., The zero bufferSize problem was fixed by HDFS-2427.

{noformat}
$curl -i -L "http://localhost:50070/webhdfs/foo/b.patch?op=OPEN&bufferSize=0"
HTTP/1.1 400 Bad Request
Content-Type: application/json
Transfer-Encoding: chunked
Server: Jetty(6.1.26)

{"RemoteException":{"exception":"IllegalArgumentException","javaClassName":"java.lang.IllegalArgumentException","message":"Invalid value for webhdfs parameter \"buffersize\": Invalid parameter range: buffersize = 0 < 1"}}
{noformat}, The GETFILECHECKSUM problem is a bug in DFSClient.
{noformat}
2011-10-24 15:23:16,569 WARN org.apache.hadoop.hdfs.web.resources.ExceptionHandler: INTERNAL_SERVER_ERROR
java.lang.NullPointerException
	at org.apache.hadoop.hdfs.DFSClient.getFileChecksum(DFSClient.java:783)
	at org.apache.hadoop.hdfs.DFSClient.getFileChecksum(DFSClient.java:771)
	at org.apache.hadoop.hdfs.server.datanode.web.resources.DatanodeWebHdfsMethods$3.run(DatanodeWebHdfsMethods.java:259)
	...
{noformat}, Closing as a duplicate of HDFS-2427.  The getFileChecksum(..) problem will be addressed in HDFS-2436.]