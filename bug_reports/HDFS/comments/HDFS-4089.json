[I believe this patch has the appropriate flags to enforce sync semantics with the sync_file_range call, Hi Jan. The purpose of this flag isn't for data integrity -- it's to avoid lumpy IO writeback. If you want data integrity you should be using the hsync() call after every write., Hi Todd, I only have a small tenure on HDFS, which means I don't have a history of why this feature was put there, but considering your comments it seems like the reason is performance.

I personally also think syncing after every write is tremendous sacrifice to make for durability, but since the flag is called SyncBehindWrites it implies just that meaning.
The flag is enabled in DFSConfigKeys.java in a section called "HA related", so it might mislead a user/admin into believing this actually enforces synchronous IO.

I'm happy to close this, but I ideally the flags should be renamed to something like WriteOutDirtyOSPages, since that is really what's done.
Thank you for your swift reply in any case., Hi Jan. The docs for this config say:
{quote}
        If this configuration is enabled, the datanode will instruct the
        operating system to enqueue all written data to the disk immediately
        after it is written. This differs from the usual OS policy which
        may wait for up to 30 seconds before triggering writeback.

        This may improve performance for some workloads by smoothing the
        IO profile for data written to disk.

        If the Hadoop native libraries are not available, this configuration
        has no effect.
{quote}

Do you think we could improve it? In DFSConfigKeys.java, it's in a lower section than the HA-related config, though I agree we could add some more comment lines to clearly delineate the different config keys., Hi Todd, sorry the lag in my replies. I think we can improve the naming at least.
1) I would rename the variable from SyncBehindWrites to WriteOutDirtyOSPages. Sync is misleading, since, even though the syscall is named sync_file_range, the flags that it is used with here do not entail sync semantics, i.e. a synchronous, i.e. blocking operation.
2) I think we should mark the appropriate section in DFSConfigKeys.java as "performance related"

This is more an issue of hygiene and, after your explanations, no longer a concern w/r to data integrity. Thanks. 

, Sounds reasonable. Want to submit a patch? Please make sure you add the old config name as 'deprecated' here.]