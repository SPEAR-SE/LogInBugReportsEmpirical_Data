[Break out the get/renew/cancel into an interface, implement interface in hftp, add implements & @Override to existing classes.,      [exec] -1 overall.  
     [exec] 
     [exec]     +1 @author.  The patch does not contain any @author tags.
     [exec] 
     [exec]     -1 tests included.  The patch doesn't appear to include any new or modified tests.
     [exec]                         Please justify why no tests are needed for this patch.
     [exec] 
     [exec]     +1 javadoc.  The javadoc tool did not generate any warning messages.
     [exec] 
     [exec]     +1 javac.  The applied patch does not increase the total number of javac compiler warnings.
     [exec] 
     [exec]     +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.
, No tests since existing tests would break if the simple interface change is incompatible.,   I think we should restrict the 205 changes to just what is needed for the release. Any refactoring should first be committed on trunk, and then incorporated to 20-security branch if needed.
  I think the refactor to "get/renew/cancel into an interface" should first be proposed and committed for trunk. That is not required for MR-2764 fix., This change is needed by MAPREDUCE-2764 since subsequent patches will build upon this patch.  Refactoring usually implies a fundamental changes, whereas this patch primarily creates an interface for pre-existing methods in objects., I think this jira is not required for 0.20.205 anymore. MAPREDUCE-2764 patch is already committed with a different approach, that doesn't need this change. I will remove 205 from fixed version., Yes, this can be pushed out of 205.  Going forward, it will still be useful to have an interface for {{getDelegationTokens}}.  It will simplify the ability to see if a filesystem/etc implements tokens. For instance, {{TokenCache}} can use {{instanceof}} to see if it should get a token instead of relying on the bad behavior that is complicating HADOOP-7602. , HFTP already has a getDelegationToken, which it overrides from FileSystem., {{getDelegationToken}} was deprecated in favor of {{getDelegationTokens}} - likely along with the introduction of ViewFileSystem.

Hftp does not have an implementation of getDelegationTokens. ViewFs cannot implement getDelegationToken.

The TokenCache in MapReduce currently ends up making one call to getDelegationToken and another to getDelegationTokens - likely causing unnecessary token caching on the Namenode?, The MR TokenCache could also be improved to make these calls based on whether the previous call returned a valid token - MAPREDUCE-3455., Would a simple transition approach be for a default impl of {{getDelegationToken(s)}} to call {{getDelegationToken}}?  Once all filesystems implement {{getDelegationTokens}}, then that method could be abstract?, Sounds reasonable to me. We should probably maintain the current behaviour of returning an empty list if {{getDelegationToken}} returns a null., The {{getDelegationTokens}} api was removed.]