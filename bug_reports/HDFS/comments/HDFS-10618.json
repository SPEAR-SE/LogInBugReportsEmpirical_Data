[Inside of the Replication Monitor, BlockManager.computeReconstructionWorkForBlocks() removes blocks from neededReconstruction, then computes locations for those blocks to be replicated, and then places them into pendingReconstruction. However, before computing the locations the write lock is released (and reacquired to add to pendingReconstruction). testPendingAndInvalidate can expose this race condition because it also indirectly calls BlockManager.computeReconstructionWorkForBlocks. The following scenario outlines how this test can fail:

1. ReplicationMonitor calls computeReconstructionWorkForBlocks, removes blocks from neededReconstruction, releases the write lock, and takes time computing the locations for replication
2. testPendingAndInvalidate calls computeReconstructionWorkForBlocks, sees nothing in neededReconstruction, spends 0 time computing locations, adds nothing to pendingReconstruction, and returns. 
3. testPendingAndInvalidate calls updateState() and indirectly sets pendingReconstructionBlocksCount to the current value of pendingReconstruction (which is 0, since the Replication Monitor is still computing the block locations and hasn't yet added the blocks to pendingReconstruction).
3. testPendingAndInvalidate checks the value of pendingReconstructionBlocksCount via getPendingReconstructionBlocksCount() and sees that it is 0, causing the associated assert to fail.

It is unclear to me whether or not this failure can happen outside of this test, since it is explicitly calling computeReconstructionWorkForBlocks, which is normally only called by the Replication Monitor. , Attaching a patch that fixes the race in the test by putting all of the pertinent test functionality inside of the write lock. This will prevent the Replication Monitor from running while the test is corrupting and placing blocks in their respective reconstruction structures. , Attaching a branch-2 patch, since reconstruction is known as replication in branch-2 and below, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  5s{color} | {color:red} HDFS-10618 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12817707/HDFS-10618-b2.001.patch |
| JIRA Issue | HDFS-10618 |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/16042/console |
| Powered by | Apache Yetus 0.4.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | {color:blue} reexec {color} | {color:blue}  0m  0s{color} | {color:blue} Docker mode activated. {color} |
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m  5s{color} | {color:red} HDFS-10618 does not apply to trunk. Rebase required? Wrong Branch? See https://wiki.apache.org/hadoop/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| JIRA Issue | HDFS-10618 |
| JIRA Patch URL | https://issues.apache.org/jira/secure/attachment/12817707/HDFS-10618-b2.001.patch |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/21374/console |
| Powered by | Apache Yetus 0.6.0-SNAPSHOT   http://yetus.apache.org |


This message was automatically generated.

, [~ebadger] Thank you the contribution. I have committed this to trunk and branch-2., Thanks [~anu]!, SUCCESS: Integrated in Jenkins build Hadoop-trunk-Commit #13814 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/13814/])
HDFS-10618. TestPendingReconstruction#testPendingAndInvalidate is flaky (aengineer: rev cceb68ffeaebe31c11012faa294fe027d04706a8)
* (edit) hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/blockmanagement/TestPendingReconstruction.java
]