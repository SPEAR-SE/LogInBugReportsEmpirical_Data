[
follow-up information:
Also dfsadmin -report command raised error.

{noformat}
$ hdfs dfsadmin -report
Configured Capacity: 161714774016 (150.61 GB)
Present Capacity: 41448161280 (38.6 GB)
DFS Remaining: 41447890944 (38.6 GB)
DFS Used: 270336 (264 KB)
DFS Used%: 0%
Under replicated blocks: 0
Blocks with corrupt replicas: 0
Missing blocks: 0

-------------------------------------------------
report: For input string: ":9999"
{noformat}

, Fix bug, add tests and some new asserts.

 - DatanodeManager.java: correctly parse int from "hostname:port"
 - DFSTestUtil: assert, rather than returning empty result, when a HTTP request returns a non-200 result.
 - TestHostsFiles: new test file, currently containing just one test verifying that this bug is fixed.

Passes tests, and testHostsExcludeDfshealthJsp fails without the parsing fix., Patch looks pretty good to me. test-patch hasn't run successfully yet, but it looks like that's due to some environmental issue on hadoop6. I've just kicked jenkins again, and I'm hopeful that [this build|https://builds.apache.org/view/G-L/view/Hadoop/job/PreCommit-HDFS-Build/3881/] will complete successfully.

A few comments:
# Most of the constants at the top of TestHostsFiles seem to be unused. Perhaps this was copied from somewhere else?
# Is it actually necessary to configure multiple racks, write a file, decommission a host, etc. to trigger this bug? From my understanding of the bug, I thought just the mere presence of the port in the file would trigger an error on the NN web UI., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566011/hdfs4344.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3881//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3881//console

This message is automatically generated., bq. Most of the constants at the top of TestHostsFiles seem to be unused. Perhaps this was copied from somewhere else?

Yes, it was copied from another test, and I looked for eclipse squiggles but since the constants are public Eclipse didn't mark them as unused. Thanks for noticing!

bq. Is it actually necessary to configure multiple racks, write a file, decommission a host, etc. to trigger this bug? From my understanding of the bug, I thought just the mere presence of the port in the file would trigger an error on the NN web UI.

Just the trivial setup doesn't trigger the failure because we don't hit the parsing code in the simple case. We need a DN that has checked in and then failed to check in, if I remember the repro conditions correctly., Remove unused variables per ATM.  I found that the test complexity is difficult to remove without breaking the reproduction., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12566448/hdfs4344-1.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 2 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3882//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3882//console

This message is automatically generated., +1, the patch looks good to me. I'm going to commit this momentarily., I've just committed this to trunk and branch-2.

Thanks a lot for the contribution, Andy., Integrated in Hadoop-trunk-Commit #3322 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3322/])
    HDFS-4344. dfshealth.jsp throws NumberFormatException when dfs.hosts/dfs.hosts.exclude includes port number. Contributed by Andy Isaacson. (Revision 1442465)

     Result = SUCCESS
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1442465
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/DFSTestUtil.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestHostsFiles.java
, Integrated in Hadoop-Yarn-trunk #118 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/118/])
    HDFS-4344. dfshealth.jsp throws NumberFormatException when dfs.hosts/dfs.hosts.exclude includes port number. Contributed by Andy Isaacson. (Revision 1442465)

     Result = FAILURE
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1442465
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/DFSTestUtil.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestHostsFiles.java
, Integrated in Hadoop-Hdfs-trunk #1307 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1307/])
    HDFS-4344. dfshealth.jsp throws NumberFormatException when dfs.hosts/dfs.hosts.exclude includes port number. Contributed by Andy Isaacson. (Revision 1442465)

     Result = FAILURE
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1442465
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/DFSTestUtil.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestHostsFiles.java
, Integrated in Hadoop-Mapreduce-trunk #1335 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1335/])
    HDFS-4344. dfshealth.jsp throws NumberFormatException when dfs.hosts/dfs.hosts.exclude includes port number. Contributed by Andy Isaacson. (Revision 1442465)

     Result = SUCCESS
atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1442465
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/DFSTestUtil.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestHostsFiles.java
]