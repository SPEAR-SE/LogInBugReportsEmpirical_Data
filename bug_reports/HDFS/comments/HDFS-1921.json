[I agree this is a blocker, I will propose a patch for this, unless Dmytro wants it., Hey Matt, that's great news. Thanks for picking this up. 

I just talked to Todd, and he agrees that this code will be superseded in 0.23 by the work that's going on HDFS-1073. So, I think it's reasonable to only work on a patch for 0.22 as part of this JIRA., Also, I should mention that there's a test case posted on HDFS-1505 which will illustrate this case., Here's a patch for trunk, so it will run under auto-test.  I'll post the v22 version when it passes.

The HDFS-1505 test case should work if this patch is added.  Can you please try it, as I was getting a failure to unlock the storage dir upon FSNamesystem.close()., Here's the modified form of the test that works - there was a glitch in spy storage setup.  The test passes., resubmitting the patch file in case Hudson got confused by the ordering., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479025/hdfs1921_v23.patch
  against trunk revision 1102513.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.cli.TestHDFSCLI
                  org.apache.hadoop.hdfs.TestDFSStorageStateRecovery
                  org.apache.hadoop.hdfs.TestFileConcurrentReader
                  org.apache.hadoop.tools.TestJMXGet

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/512//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/512//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/512//console

This message is automatically generated., Todd and Aaron, regarding v23: I understand this may be modified by work in HDFS-1073, but until HDFS-1073 is ready to come out I'd like to keep trunk as clean as possible.  So I think this patch should go into both v22 and v23.  Is there any serious clash with patches already done for HDFS-1073?  Thanks., None of the test errors are related to this patch (all four are recurring; see HDFS-1852).
I agree with Aaron that his new unit test for HDFS-1505 is a good test for this patch too, so no additional unit tests needed (but the core of that unit test is attached to this Jira, and passes local testing)., bq. Is there any serious clash with patches already done for HDFS-1073? Thanks

Yes, this will most likely clash with 1073. If you want to commit with trunk, that's fine - the next time I merge 1073 with trunk, I'll probably just add a TODO task for that branch to make sure that we haven't regressed this behavior., Looks good.

Comments:
# Code of thread starting logic is duplicated. It could be added to a separate method. Also continue in catch block is redundant.
# Minor: per the coding guidelines please add { } after if statements.
, Dmytro, since this is a mod of HDFS-1071, would you like to review it?
It's short :-)  Thanks, if you have time., Merged the patch that has the fix with the old test case referenced from HDFS-1505. Verified that the test fails without the fix and passes with it. Matt, can you sanity check this?, +1. The latest patch, with the merged test case, looks good to me., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479546/hdfs-1921.txt
  against trunk revision 1104649.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.hdfs.TestDFSStorageStateRecovery
                  org.apache.hadoop.hdfs.TestFileConcurrentReader
                  org.apache.hadoop.tools.TestJMXGet

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/553//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/553//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/553//console

This message is automatically generated., @Todd: nice tweak to the unit test.  I changed the name of the subroutine to "doTestFailedSaveNamespace", since it isn't a test case in its own right.

@Suresh: 
bq. Code of thread starting logic is duplicated. It could be added to a separate method.
Sounded right, so I implemented the suggestion, and then concluded it made the code _more_ complex instead of better, because of the way it worked out with the try/catch context and the management of the errorSDs list.  

bq. Also continue in catch block is redundant.
The "continue"s are there for defensive coding:  If someone adds statements after the catch context, but within the loop, I believe the catch context should go to the next loop iteration immediately.

.bq Minor: per the coding guidelines please add { } after if statements.
Done, thanks.

One more time :-), -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479614/hdfs-1921-2.patch
  against trunk revision 1104649.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.cli.TestHDFSCLI
                  org.apache.hadoop.hdfs.server.datanode.TestBlockRecovery
                  org.apache.hadoop.hdfs.TestDFSStorageStateRecovery
                  org.apache.hadoop.hdfs.TestFileConcurrentReader
                  org.apache.hadoop.tools.TestJMXGet

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/557//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/557//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/557//console

This message is automatically generated., +1. failing tests are unrelated, Committed to trunk. Matt, can you provide a patch for 0.22?, Underway., Integrated in Hadoop-Hdfs-trunk-Commit #667 (See [https://builds.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/667/])
    HDFS-1921. saveNamespace can cause NN to be unable to come up on restart. Contributed by Matt Foley.

todd : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1124364
Files : 
* /hadoop/hdfs/trunk/src/test/hdfs/org/apache/hadoop/hdfs/server/namenode/TestSaveNamespace.java
* /hadoop/hdfs/trunk/src/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java
* /hadoop/hdfs/trunk/CHANGES.txt
, Here's the version for v22.
Aaron and Todd, can one of you please run test-patch against this?  I'm having trouble with my v22 build environment.  Thanks.

Turning off Hudson auto-build, since not for trunk., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479653/hdfs-1921-2_v22.patch
  against trunk revision 1124364.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/564//console

This message is automatically generated., Sure, Matt. Here's the output from test-patch on branch-0.22:

{noformat}
+1 overall.  

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 system test framework.  The patch passed system test framework compile.
{noformat}, Thank you, Aaron!

If someone would like to +1, we can commit..., +1. Matt, want to commit this? (your account's all set, now, right?), That's the theory.  I'll try it out., Integrated in Hadoop-Hdfs-trunk #673 (See [https://builds.apache.org/hudson/job/Hadoop-Hdfs-trunk/673/])
    , Committed to v22.  Thanks, Aaron and Todd, for the reviews and help!, Integrated in Hadoop-Hdfs-22-branch #61 (See [https://builds.apache.org/hudson/job/Hadoop-Hdfs-22-branch/61/])
    ]