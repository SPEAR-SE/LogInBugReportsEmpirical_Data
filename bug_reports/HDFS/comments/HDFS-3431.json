[We should also implement ftruncate in the FUSE client, so that currently open files can be truncated properly.  Perhaps there should be a JIRA for this?, Could be handled here., It's very difficult to improve on truncate without supporting a truncate operation natively in HDFS.

One example: let's say superuser creates /a/b/c with mode = 666, length L.
bob asks to truncate /a/b/c to half its original length, L/2.

How can fuse implement this?  We would have to re-create the file and write L/2 bytes, then close it.  However, the new file we create will be owned by bob, not by superuser.  This is an unfixable problem because bob's DFSClient may not even have the credentials to create the file as superuser.

Another consideration is that writing out L/2 bytes could be very expensive.  For example, if we have a 1GB file, that's 512 MB we have to buffer and re-write in order to perform the truncate operation., Yea, I don' think we support truncate in fuse until we support it (if we ever do) in HDFS (HDFS-3107). Currently the only truncate we support is create + overwrite.]