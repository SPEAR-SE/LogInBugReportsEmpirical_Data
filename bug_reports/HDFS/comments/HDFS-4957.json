[What is the status of this issue? This was opened over 3 years ago and no update.
This issue is impacting our HDFS HA setup since we have a journal-node co-located on the same machine as the active namenode. If the active namenode machine goes down, failover fails because the DNS entry for a quorum node cannot be resolved., is this a duplicate of https://issues.apache.org/jira/browse/HDFS-10719 ? , HDFS-10719 is also duplicated by HDFS-4210 whose fix throws {{UnknownHostException}} instead of NPE.

[~Aliza] Are you still seeing the issue with HDFS-4210 fix?, I haven't tried the HDFS-4210 fix, but from the description it seems like the fix was changing to a more descriptive error message. 
Am I wrong?, HDFS-4210 made it an IOE that can be handled. Let me check the source code if see whether it helps this case., To fix this issue, far more complex change is needed:
* Failover needs to succeed with partial set of JNs as long as at least 3 JNs remain. Since the level of failure tolerance is dropped, this behavior probably should be enabled only by a flag.
* When < 3 JNs survive, can failover still succeed and NN gets into a special mode?
* Optionally, add a JN back once it recovers by triggering a log roll. Not trivial. See discussions in HDFS-3867.

[~tlipcon], [~cmccabe], thoughts?, Somewhat related to HDFS-8298., I am facing the following scenario:
I have an HA HDFS setup where one of the JN is colocated on the same machine as the active NN.
When I shut down the active NN machine, I expect he standby NN to become active. However, the automatic failover fails with the following exception:
java.lang.IllegalArgumentException: Unable to construct journal, qjournal://journalnode1.service.consul:8485;journalnode2.service.consul:8485;journalnode3.service.consul:8485/hdfs

In my environment, JN1 was on the machine which was shut sown so the DNS  journalnode1.service.consul is not resolvable and the entire failover fails.
I expect the failover to succeed since I sill have a majority of JN (2 out of 3).
]