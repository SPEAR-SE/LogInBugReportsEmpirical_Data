[I think we should set null if we don't have any AclEntries in LogMkdir and LogOpenFiles functions. Sorry, i still use Svn, i didn't paste any patch on it., These problem still exists in trunk., Good find, [~jiangyu1211].  In the future you might want to consider keeping the description short and putting the details of how you found the bug, etc. in the comments.

It sounds like the problem here is that we are not calling {{op.setAclEntries}} in the case where there are no ACL entries?  So the previous ACL entry from the thread-local Op gets used., That is right Colin, I think we should set null if there are no ACL entires. For now, this bug have messed up almost all the permissions in our cluster. It is easy to reproduce, just set some Acl Entries and mkdir randomly for some times, then after you restart the NameNode or transition SNN to ANN, you can find some directories permission are not what you expected easily. I wonder if there are no company use Acl Feature?, You can also use OfflineEditsViewer to find this bug easily.,  Sounds good.  Are you working on a patch for this one?, Here is the patch for trunk. Hadoop 2.4 don't have the feature of XAttrs, but i think it still face the same problem. I'm sorry i didn't write any unit test for it., For the users who apply ACL in their clusters , the permission of the directories and files should be messed up already. I suggest they should resolve this problem immediately. Firstly, apply the patch and enter sefemode and saveNamespace in ANN, then copy meta data to SNN, restart SNN and transition to ANN, and restart former ANN., [~jiangyu1211], good find, I think it's a critical issue. It should occur if multi-ops of create file (mkdir)  happens using same thread.

Please add a test case to reproduce it, it's not hard., [~hitliuyi], it also occur when open files, the same reason of using the ThreadLocal variable cache as mkdir . I will add test case later on. , [~jiangyu1211], {{OP_ADD}} is for create/append file, although you see the name "logOpenFile"
Please add the test case as soon as possible, I will help to review and try to push it into 2.6, since I think the issue is critical, although the fix is easy., Hi [~jiangyu1211], Good find.

Instead of {{op.setAclEntries(null)}} and {{op.setXAttrs(null)}}, how about introducing a {{reset()}} method in both {{AddOp}} and {{MkdirOp}} which will reset all values to null. This method can be called as soon as get from the ThreadLocal cache and later setters can set the value whatever they want.
This will avoid, any such mistakes in future.

Ex:
{code}
    MkdirOp op = MkdirOp.getInstance(cache.get())
      .reset()
      .setInodeId(newNode.getId())
      .setPath(path)
      .setTimestamp(newNode.getModificationTime())
      .setPermissionStatus(permissions);
{code}, Hello, [~jiangyu1211].  Like others have already said, this is a great find, and thank you for reporting it.  Sorry for jumping in, but I want to expedite getting this fixed, so I'm attaching a v2 patch.  I still intend to credit the patch to you.  You did the hard part.  :-)

I agree with the suggestions to add a test and add a {{reset}} method to the ops.  I'm uploading a patch that does that.  The test works by configuring a single RPC handler thread, which guarantees that all transactions get processed on the same thread, and therefore hit the same thread-local storage.

[~hitliuyi] or [~vinayrpet], how does this look?, +1, patch looks good to me.
Pending Jenkins +1., General consensus is that this is severe enough to hold the 2.6.0 release candidate, so I'm marking it a blocker.  At this point, we're just waiting on Jenkins., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12681364/HDFS-7385.2.patch
  against trunk revision 3651fe1.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestDFSUpgradeFromImage
                  org.apache.hadoop.hdfs.server.namenode.TestCacheDirectives

                                      The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.util.TestByteArrayManager

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8730//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8730//console

This message is automatically generated., For {{TestCacheDirectives}}, it looks like we hit one of the build collision issues we've seen on Jenkins lately, resulting in a {{NoClassDefFoundError}}.  The other failures are unrelated issues that are tracked in other jiras.  The failures did not repro locally for me.  I'm going to commit this., Thank you [~cnauroth], the patch looks good to me. I  also write a unit test for this bug, looks the same as you (but not that elegant), just set the handler to 1. I also wonder if we should advise some procedures to help the users who apply Acls already to save their meta data., FAILURE: Integrated in Hadoop-trunk-Commit #6538 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/6538/])
HDFS-7385. ThreadLocal used in FSEditLog class causes FSImage permission mess up. Contributed by jiangyu. (cnauroth: rev b0a41de68c5b08f534ca231293de053c0b0cbd5d)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestEditLog.java
, I committed this to trunk, branch-2, branch-2.6 and branch-2.6.0.  [~jiangyu1211], thank you again for reporting the issue and providing a patch.

bq. I also wonder if we should advise some procedures to help the users who apply Acls already to save their meta data.

Yes, we can document a workaround here in the jira.  If I understand correctly, your suggested workaround is running {{hdfs dfsadmin -saveNamespace}} at the active to force correct persistence of all inodes to the fsimage, thus bypassing the buggy edits.  Do I have it correct?, That is right, [~cnauroth]. The fsimage transfer from standby is already messed up. So we have to run hdfs dfsadmin -saveNamespace to get the correct persistence of all inodes to the fsimage. , I agree.  The workaround makes sense.  Thanks again!, Thanks, [~cnauroth], for the patch!  And thanks again to [~jiangyu1211] for finding this., It may be cleaner to introduce an abstract {{FSEditLogOp#reset()}} and call it in {{FSEditLog#logEdit(FSEditLogOp)}} that all ops need to override.

{code}
      try {
        editLogStream.write(op);
      } catch (IOException ex) {
        // All journals failed, it is handled in logSync.
      } finally {
        op.reset();
      }
{code}

to catch similar problems with garbage sitting in TLS in the future., Hi, [~jira.shegalov].  Yes, I had the same thought, but I wanted to keep the patch here small and focused on the known problem, since we were hoping to include it in the 2.6.0 release candidate quickly.  Please do feel free to file a subsequent jira for further refactoring targeting 2.7.0.  Thanks!, +1 for the idea of having a generic Op reset.

Of course, we could easily run into the same problem of forgetting to reset fields in reset, but it will at least make things a little clearer., Thanks for feedback, Chris and Colin! I'll create a follow-up JIRA., On a side note, I have to wonder if the thread-local storage here is an unnecessary optimization at this point.  It might be interesting to tear it down and just let the edit logging code paths create new short-lived instances that likely never leave eden.  We could compare JIT assembly output before and after to see if it really makes a difference., Thanks Chris for supplying the updated patch. Hmm, I also thought we need to expedite the fix and helped on update the patch.
And thanks [~jiangyu1211] for good find and initial patch, also thank Colin and Vinay for review , FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #5 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/5/])
HDFS-7385. ThreadLocal used in FSEditLog class causes FSImage permission mess up. Contributed by jiangyu. (cnauroth: rev b0a41de68c5b08f534ca231293de053c0b0cbd5d)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestEditLog.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #743 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/743/])
HDFS-7385. ThreadLocal used in FSEditLog class causes FSImage permission mess up. Contributed by jiangyu. (cnauroth: rev b0a41de68c5b08f534ca231293de053c0b0cbd5d)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestEditLog.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1933 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1933/])
HDFS-7385. ThreadLocal used in FSEditLog class causes FSImage permission mess up. Contributed by jiangyu. (cnauroth: rev b0a41de68c5b08f534ca231293de053c0b0cbd5d)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestEditLog.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #5 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/5/])
HDFS-7385. ThreadLocal used in FSEditLog class causes FSImage permission mess up. Contributed by jiangyu. (cnauroth: rev b0a41de68c5b08f534ca231293de053c0b0cbd5d)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestEditLog.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1957 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1957/])
HDFS-7385. ThreadLocal used in FSEditLog class causes FSImage permission mess up. Contributed by jiangyu. (cnauroth: rev b0a41de68c5b08f534ca231293de053c0b0cbd5d)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestEditLog.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk-Java8 #5 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/5/])
HDFS-7385. ThreadLocal used in FSEditLog class causes FSImage permission mess up. Contributed by jiangyu. (cnauroth: rev b0a41de68c5b08f534ca231293de053c0b0cbd5d)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestEditLog.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLogOp.java
]