[Attaching simple patch to avoid walking off the end of the string, and to do something sane when the return value is incorrectly specified., Patch compiles., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12537422/hdfs3643.txt
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2882//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2882//console

This message is automatically generated., Looks good in general.  While you're refactoring, I would recommend using the libc function index(2) instead of the handrolled loop.  It's a little more idiomatic, and probably better optimized to boot.

Also, you'll probably need to rebase now that invokeMethod returns an exception or NULL rather than a numeric error code.  You probably want to use return newRuntimeException() on error, or similar., I meant to write index(3)., New patch:
# sync to trunk
# use strchr rather than hand-rolled loop
# handle a few more error cases
# clean up exception messages
# fix invokeMethod javadoc

I haven't run tests on this diff, which is a prerequisite before checkin., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12539898/hdfs-3643-1.txt
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestFileConcurrentReader
                  org.apache.hadoop.hdfs.server.namenode.metrics.TestNameNodeMetrics
                  org.apache.hadoop.hdfs.TestPersistBlocks

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/2973//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/2973//console

This message is automatically generated., {code}
+    else {
+        jthr = newRuntimeError(env, "invokeMethod: invalid return type 0x%02x",
+                               returnType);
+    }
{code}

Why is returnType being printed in hex here? Wouldn't it be a string which comes from the signature? eg something like "Ljava/lang/String;" or "J"?, bq. Wouldn't it be a string which comes from the signature? eg something like "Ljava/lang/String;" or "J"?

No, it's one of the constants JINT, JLONG, etc.  Valid values are ASCII alphanumeric, but in the error case it could be an arbitrary {{char}} so printing it with {{%c}} is unlikely to be helpful.  I suppose casting to {{(unsigned char)returnType}} helps if char is signed and <0.  I'll do that and upload a new patch., That's only the case if the return type is a primitive type. If, instead, it were an array or a class type, then you would see a string there. My "J" example corresponded to JLONG, but if there were a String it would be "Ljava/lang/String;". The code here is looking at the first character of the string to determine which JNI invoke method to use. But if none of the matches, that's probably because the method signature is malformed, in which case either returning the entire method signature in the error is appropriate, or returning at least everything after the ')'., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12551259/hdfs3643-2.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3421//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3421//console

This message is automatically generated., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |   5m  6s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  0s | The patch does not contain any @author tags. |
| {color:red}-1{color} | tests included |   0m  0s | The patch doesn't appear to include any new or modified tests.  Please justify why no new tests are needed for this patch. Also please list what manual steps were performed to verify this patch. |
| {color:green}+1{color} | javac |   7m 24s | There were no new javac warning messages. |
| {color:green}+1{color} | release audit |   0m 19s | The applied patch does not increase the total number of release audit warnings. |
| {color:green}+1{color} | whitespace |   0m  1s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 32s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 32s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | native |   1m  8s | Pre-build of native portion |
| {color:green}+1{color} | hdfs tests | 165m 41s | Tests passed in hadoop-hdfs. |
| | | 181m 48s | |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12729957/HDFS-3643.02.patch |
| Optional Tests | javac unit |
| git revision | trunk / 6ae2a0d |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HDFS-Build/10720/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/10720/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf906.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/10720/console |


This message was automatically generated., We put braces around all "if" statements.  The "else" should be on the same line as the close bracket.

{code}
229	    if (returnType == '\0')
230	        return newRuntimeError(env,
231	                               "invokeMethod: return type missing after ')'");
{code}
This "if" statement isn't needed since {{strchr}} will either return NULL, or a pointer to a the first occurrence of a right paren in the string.  It can't return a pointer to a 0 byte.

Looks good aside from that.]