[The number of excess blocks is incremented but not decremented in the following sequence.
# A block becomes over-relicated
# NN asks a DN to delete an excess block
# The DN deletes the block
# delete the file includes the block before receiving block report from the DN

If the block has been deleted, the counter is not decremented in processing block report., I propose to add the function to remove the block from {{excessReplicateMap}} and decrement the counter in {{BlockManager#removeBlock(Block)}} and {{BlockManager#removeBlockFromMap(Block)}} methods.
Now {{excessReplicateMap}} can become large, which means memory leak., Attaching a patch., Updated the summary and the description., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12664591/HDFS-6945.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The test build failed in hadoop-hdfs-project/hadoop-hdfs 

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7782//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7782//console

This message is automatically generated., Updated the patch to avoid ConcurrentModificationException when removing a value from TreeMap., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12665699/HDFS-6945.2.patch
  against trunk revision 258c7d0.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.web.TestWebHdfsFileSystemContract
                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7864//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7864//console

This message is automatically generated., The test failures look unrelated to the patch. HDFS-6980 and HDFS-6694 track these., I think the patch is ready for review., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12665699/HDFS-6945.2.patch
  against trunk revision 1556f86.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/8877//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/8877//console

This message is automatically generated., Can anyone review this patch?
This issue does cause memory leak, so I want to fix it as soon as possible., v3 patch removed unnecessarily matching by keys in TreeMap., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12702070/HDFS-6945-003.patch
  against trunk revision b18d383.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.balancer.TestBalancer
                  org.apache.hadoop.hdfs.qjournal.client.TestQuorumJournalManager

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9705//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9705//console

This message is automatically generated., removeFromExcessReplicateMap is quite expensive.  It iterates all the storages in excessReplicateMap to find the given block.

How about get the Block info from the blocksMap first?  Then the storage information can be used to remove the blocks in excessReplicateMap., Thanks [~szetszwo] for your review. Updated the patch based on your comment.
I had missed your comment, sorry for late response., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12707703/HDFS-6945-004.patch
  against trunk revision 3d9132d.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10103//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10103//console

This message is automatically generated., The new patch looks good.  However, it cannot be applied cleanly.  We need to update the patch.  For the new patch, could you also change removeBlock(..) to call removeBlockFromMap(..) instead of calling the individual methods?  , Thanks [~szetszwo] for the comment. Cleaned up the patch., +1 the new patch looks good.  Thanks, Akira., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708440/HDFS-6945-005.patch
  against trunk revision 3df61f3.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.blockmanagement.TestDatanodeManager
                  org.apache.hadoop.hdfs.server.namenode.ha.TestRetryCacheWithHA

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10129//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10129//console

This message is automatically generated., Committed this to trunk and branch-2. Thanks [~szetszwo] for your reviews!, FAILURE: Integrated in Hadoop-trunk-Commit #7479 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7479/])
HDFS-6945. BlockManager should remove a block from excessReplicateMap and decrement ExcessBlocks metric when the block is removed. (aajisaka) (aajisaka: rev 18a91fe4df0448d9f7de91602646ecf5a51c52e4)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/metrics/TestNameNodeMetrics.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #150 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/150/])
HDFS-6945. BlockManager should remove a block from excessReplicateMap and decrement ExcessBlocks metric when the block is removed. (aajisaka) (aajisaka: rev 18a91fe4df0448d9f7de91602646ecf5a51c52e4)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/metrics/TestNameNodeMetrics.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #884 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/884/])
HDFS-6945. BlockManager should remove a block from excessReplicateMap and decrement ExcessBlocks metric when the block is removed. (aajisaka) (aajisaka: rev 18a91fe4df0448d9f7de91602646ecf5a51c52e4)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/metrics/TestNameNodeMetrics.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2082 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2082/])
HDFS-6945. BlockManager should remove a block from excessReplicateMap and decrement ExcessBlocks metric when the block is removed. (aajisaka) (aajisaka: rev 18a91fe4df0448d9f7de91602646ecf5a51c52e4)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/metrics/TestNameNodeMetrics.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #150 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/150/])
HDFS-6945. BlockManager should remove a block from excessReplicateMap and decrement ExcessBlocks metric when the block is removed. (aajisaka) (aajisaka: rev 18a91fe4df0448d9f7de91602646ecf5a51c52e4)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/metrics/TestNameNodeMetrics.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #141 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/141/])
HDFS-6945. BlockManager should remove a block from excessReplicateMap and decrement ExcessBlocks metric when the block is removed. (aajisaka) (aajisaka: rev 18a91fe4df0448d9f7de91602646ecf5a51c52e4)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/metrics/TestNameNodeMetrics.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2100 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2100/])
HDFS-6945. BlockManager should remove a block from excessReplicateMap and decrement ExcessBlocks metric when the block is removed. (aajisaka) (aajisaka: rev 18a91fe4df0448d9f7de91602646ecf5a51c52e4)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/metrics/TestNameNodeMetrics.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, If my understand is correct, HDFS-8616 suggests that this issue should be cherry-picked to branch-2.7. I'd like to do this on July 18 if there are no further comment., FAILURE: Integrated in Hadoop-trunk-Commit #8189 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8189/])
Move HDFS-6945 to 2.7.2 section in CHANGES.txt. (aajisaka: rev a628f675900d2533ddf86fb3d3e601238ecd68c3)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #263 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/263/])
Move HDFS-6945 to 2.7.2 section in CHANGES.txt. (aajisaka: rev a628f675900d2533ddf86fb3d3e601238ecd68c3)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk #993 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/993/])
Move HDFS-6945 to 2.7.2 section in CHANGES.txt. (aajisaka: rev a628f675900d2533ddf86fb3d3e601238ecd68c3)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2190 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2190/])
Move HDFS-6945 to 2.7.2 section in CHANGES.txt. (aajisaka: rev a628f675900d2533ddf86fb3d3e601238ecd68c3)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #252 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/252/])
Move HDFS-6945 to 2.7.2 section in CHANGES.txt. (aajisaka: rev a628f675900d2533ddf86fb3d3e601238ecd68c3)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #260 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/260/])
Move HDFS-6945 to 2.7.2 section in CHANGES.txt. (aajisaka: rev a628f675900d2533ddf86fb3d3e601238ecd68c3)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2209 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2209/])
Move HDFS-6945 to 2.7.2 section in CHANGES.txt. (aajisaka: rev a628f675900d2533ddf86fb3d3e601238ecd68c3)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, Does this issue exist in 2.6.x? Should this be backported to branch-2.6?, This issue exists in 2.6.x, so this should be backported to branch-2.6. Thanks [~sjlee0] for the comment., I have cherry-pick the patch to branch-2.6.]