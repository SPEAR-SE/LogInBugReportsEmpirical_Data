[Maybe we need to set up log4j for this command such that the log4j output goes to stderr instead of stdout?

Another more general solution might be to get rid of this WARN entirely (change to DEBUG) and instead add an equivalent WARN in the various daemon start messages, as well as an API so dependent projects like HBase and MR can easily issue warnings when native isn't available? I imagine that users will find the "WARN" on every "hadoop fs -ls" type command annoying as well., I have tried changing hadoop.root.logger to all sorts of different values from FATAL,console to OFF,console and the problem persists. The only, very ugly solution that seems to work now is inserting a " | sed "1 d" " command after the hdfs getconf command, but that is clearly not a very viable long term solution., Declaring these variables to force correct version of native libraries seems to fix the issue (yet, a workaround):

export HADOOP_COMMON_LIB_NATIVE_DIR=${HADOOP_PREFIX}/lib/native
export HADOOP_OPTS="-Djava.library.path=$HADOOP_PREFIX/lib"

[This thread|https://gist.github.com/ruo91/7154697] has details., Native libs are preferable, but if native libs aren't an option another workaround is to explicitly set hadoop.security.group.mapping to org.apache.hadoop.security.ShellBasedUnixGroupsMapping in core-site.xml., Or we could, you know, just grep -v util.NativeCodeLoader out of the output in *-dfs.sh..., Linking HADOOP-7984 as required.

As soon as that gets committed, I'll write a patch that uses  --loglevel ERROR that will cause INFO and WARN messages to not be printed., It seems we inadvertently fixed this in trunk already.]