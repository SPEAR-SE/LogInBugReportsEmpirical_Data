[There are two solutions:
# change ClientProtocol.truncate to @AtMostOnce; or
# change NameNode implementation of ClientProtocol.truncate(..) to idempotent.

I think #2 is an easy and better solution., h7926_20150313.patch: implements #2.  Will add a test., Hi Nicholas, the patch is not for this JIRA, can you check? Thanks.

{quote}
# change ClientProtocol.truncate to @AtMostOnce; or
# change NameNode implementation of ClientProtocol.truncate(..) to idempotent.
{quote}
Currently ClientProtocol#{{append}}, {{create}} use @AtMostOnce, I think it's better to use @AtMostOnce for {{truncate}} too.  For #1, we also only need to do few change (add the RetryCache). , [~szetszwo], I think the patch works correctly and returns false if the truncate is called the second time. But for a file being written or appended, truncate will still return false if the oldlength happens to be same as newlength. It should throw an exception in this scenario. In this approach, it seems there is a need to distinguish whether file is under construction due to a truncate or due to a create/append., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704327/h7926_20150313.patch
  against trunk revision 8212877.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.blockmanagement.TestDatanodeManager
                  org.apache.hadoop.hdfs.server.namenode.TestFileTruncate
                  org.apache.hadoop.hdfs.server.namenode.ha.TestRetryCacheWithHA

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9868//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9868//console

This message is automatically generated., > ..., the patch is not for this JIRA, can you check? ...

No the file is for this JIRA.  Could you take a look again?

> Currently ClientProtocol#append, create use @AtMostOnce, I think it's better to use @AtMostOnce for truncate too. ...

Why truncate has to be the same as append and create?  Semantically, truncate is idempotent, i.e. the result of truncate more than one times is the same as a truncate., {quote}
No the file is for this JIRA. Could you take a look again?
{quote}
You are right, sorry that I was looking at your patch for HDFS-7843. , > ... for a file being written or appended, truncate will still return false if the oldlength happens to be same as newlength. It should throw an exception in this scenario. ...

That's true.  Will update the patch., h7926_20150313b.patch: checks if the file is being truncated with the same length., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704386/h7926_20150313b.patch
  against trunk revision 387f271.

    {color:red}-1 patch{color}.  Trunk compilation may be broken.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9870//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704386/h7926_20150313b.patch
  against trunk revision 387f271.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS
                  org.apache.hadoop.hdfs.TestDecommission
                  org.apache.hadoop.hdfs.server.balancer.TestBalancer
                  org.apache.hadoop.hdfs.server.namenode.TestFileTruncate

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9873//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9873//console

This message is automatically generated., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12704386/h7926_20150313b.patch
  against trunk revision 387f271.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.qjournal.TestSecureNNWithQJM
                  org.apache.hadoop.hdfs.server.balancer.TestBalancer

                                      The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.server.blockmanagement.TestDatanodeManager
org.apache.hadoop.hdfs.server.namenode.ha.TestFailureToReadEdits

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9872//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9872//console

This message is automatically generated., All the failed tests do not seem related to the patch., +1, FAILURE: Integrated in Hadoop-trunk-Commit #7317 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7317/])
HDFS-7926. NameNode implementation of ClientProtocol.truncate(..) is not idempotent. Contributed by Tsz Wo Nicholas Sze (brandonli: rev f446669afb5c3d31a00c65449f27088b39e11ae3)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguousUnderConstruction.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFileTruncate.java
, Thank you, [~szetszwo], for the fix. I've committed the patch., Cool. Truncate should be idempotent indeed., Thanks [~szetszwo] for the fix. Actually I agree that {{idempotent}} is good as you said. 
But the trouble issue is lease check/recovery for truncate, we just want to make sure the truncate retries get the same result. I have found one case that currently fix can't cover:
# Client invokes truncate, but it's on block boundary, so we will not add lease and there is no block recovery. And the result should be *true*.
# Meanwhile network issue for the client, and retry happens after few time. 
# Before retry happen or before it arrives NN, some other client invokes append on this file.
# Then NN receives the truncate retry, so there is lease failure.
# Actually the truncate is successful, but client sees failure.
, "idempotent" means applying the same operations multiple times will get the same result.  If there is an append in the middle, the retry could get different results.

E.g. getPermission is idempotent.  However, if there is a setPermission (or delete, rename, etc.) in the middle, the retry of getPermission could get a different result., You have a point there, thanks., FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #132 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/132/])
HDFS-7926. NameNode implementation of ClientProtocol.truncate(..) is not idempotent. Contributed by Tsz Wo Nicholas Sze (brandonli: rev f446669afb5c3d31a00c65449f27088b39e11ae3)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguousUnderConstruction.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFileTruncate.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #866 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/866/])
HDFS-7926. NameNode implementation of ClientProtocol.truncate(..) is not idempotent. Contributed by Tsz Wo Nicholas Sze (brandonli: rev f446669afb5c3d31a00c65449f27088b39e11ae3)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFileTruncate.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguousUnderConstruction.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2064 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2064/])
HDFS-7926. NameNode implementation of ClientProtocol.truncate(..) is not idempotent. Contributed by Tsz Wo Nicholas Sze (brandonli: rev f446669afb5c3d31a00c65449f27088b39e11ae3)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFileTruncate.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguousUnderConstruction.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #123 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/123/])
HDFS-7926. NameNode implementation of ClientProtocol.truncate(..) is not idempotent. Contributed by Tsz Wo Nicholas Sze (brandonli: rev f446669afb5c3d31a00c65449f27088b39e11ae3)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguousUnderConstruction.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFileTruncate.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #132 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/132/])
HDFS-7926. NameNode implementation of ClientProtocol.truncate(..) is not idempotent. Contributed by Tsz Wo Nicholas Sze (brandonli: rev f446669afb5c3d31a00c65449f27088b39e11ae3)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguousUnderConstruction.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFileTruncate.java
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2082 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2082/])
HDFS-7926. NameNode implementation of ClientProtocol.truncate(..) is not idempotent. Contributed by Tsz Wo Nicholas Sze (brandonli: rev f446669afb5c3d31a00c65449f27088b39e11ae3)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFileTruncate.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguousUnderConstruction.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, Removing the 2.6.1-candidate label as truncate is not a feature in 2.6., Adding back 2.6.1-candidate label for tracking purposes. Will remove it once 2.6.1 is done., About to make an RC for 2.6.1. Dropping the 2.6.1 label as truncate wasn't there in 2.6.]