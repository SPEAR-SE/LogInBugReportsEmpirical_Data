[Attaching patch with proposed fix for this issue., Closing this as invalid.

There are no guarantees that {{read()}} should read all bytes if you look at the JavaDoc of the InputStream:

{noformat}
int	read(byte[] b)
Reads some number of bytes from the input stream and stores them into the buffer array b.
int	read(byte[] b, int off, int len)
Reads up to len bytes of data from the input stream into an array of bytes.
{noformat}

Some applications depend on this semantic for low-latency reads. Putting a loop inside will break them., The loop will only read upto len bytes. Unfortunately, not having the loop breaks things when chunked-encoding is used. For eg. hbase expects the exact number of bytes to be read  https://github.com/apache/hbase/blob/master/hbase-server/src/main/java/org/apache/hadoop/hbase/io/hfile/HFileBlock.java#L1446-L1450
, We need a fix for this, let's not close it until we've reached one., {{ByteRangeInputStream}} is the wrong place to fix. The application (i.e., hbase) needs to be fixed. Please feel free to open a hbase jira.

If you're running HBase over local file system, {{FileInputStream}} will not read full amount of bytes if the OS returns {{EINTR}}. In these cases application needs to retry., It's unclear to me why the HBase code treats partial read as an error.  In general, applications do need to be prepared for a partial read and react accordingly (such as a read loop).  I agree that a corresponding HBase jira would be a good idea so that we can discuss further with that community.  Thank you, Shradha., Thanks, I've created this https://issues.apache.org/jira/browse/HBASE-14307, Quick update: we've explained the situation to the HBase devs, and so far it sounds like they are amenable to making the change.  See the discussion in HBASE-14307 for more details.  Let's wait a little longer for more progress on HBASE-14307.  If that goes well, then I think we can resolve this as Won't Fix., Should this be resolved as Won't Fix, as discussed earlier?, [~cmccabe], thank you for the reminder.  This is resolved as Won't Fix.]