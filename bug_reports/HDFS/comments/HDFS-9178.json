[A simple solution is to let datanode check when it last sent a packet whenever downstream closes connection. If it has not sent a packet for a long time (e.g. 0.9*timeout. it is supposed to send a packet at least every 0.5*timeout), it or its upstream might be at fault. In this case, it will simply close connection to its upstream, so that the same check is triggered upstream.  If an upstream node thinks it has sent packets in time, the downstream node will be reported as bad.  When it goes all the way to client, the client will remove the first node and rebuild the pipeline. Since {{DataStreamer}} does not get stuck on disk I/O (except on rare occasion when it logs and the disk is having an issue), it would be either slow first node or communication problem between client and the first node. So removing first node seems reasonable., The patch implements the proposed fix., \\
\\
| (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:blue}0{color} | pre-patch |  17m 37s | Pre-patch trunk compilation is healthy. |
| {color:green}+1{color} | @author |   0m  1s | The patch does not contain any @author tags. |
| {color:green}+1{color} | tests included |   0m  0s | The patch appears to include 1 new or modified test files. |
| {color:green}+1{color} | javac |   7m 59s | There were no new javac warning messages. |
| {color:green}+1{color} | javadoc |  10m 10s | There were no new javadoc warning messages. |
| {color:red}-1{color} | release audit |   0m 15s | The applied patch generated 1 release audit warnings. |
| {color:red}-1{color} | checkstyle |   1m 24s | The applied patch generated  1 new checkstyle issues (total was 61, now 61). |
| {color:green}+1{color} | whitespace |   0m  0s | The patch has no lines that end in whitespace. |
| {color:green}+1{color} | install |   1m 33s | mvn install still works. |
| {color:green}+1{color} | eclipse:eclipse |   0m 34s | The patch built with eclipse:eclipse. |
| {color:green}+1{color} | findbugs |   2m 31s | The patch does not introduce any new Findbugs (version 3.0.0) warnings. |
| {color:green}+1{color} | native |   3m 11s | Pre-build of native portion |
| {color:red}-1{color} | hdfs tests |  64m 32s | Tests failed in hadoop-hdfs. |
| | | 109m 51s | |
\\
\\
|| Reason || Tests ||
| Failed unit tests | hadoop.hdfs.TestWriteReadStripedFile |
| Timed out tests | org.apache.hadoop.hdfs.server.datanode.fsdataset.impl.TestLazyWriter |
|   | org.apache.hadoop.hdfs.TestDFSStripedOutputStreamWithFailure010 |
\\
\\
|| Subsystem || Report/Notes ||
| Patch URL | http://issues.apache.org/jira/secure/attachment/12764472/HDFS-9178.patch |
| Optional Tests | javadoc javac unit findbugs checkstyle |
| git revision | trunk / 6c17d31 |
| Release Audit | https://builds.apache.org/job/PreCommit-HDFS-Build/12753/artifact/patchprocess/patchReleaseAuditProblems.txt |
| checkstyle |  https://builds.apache.org/job/PreCommit-HDFS-Build/12753/artifact/patchprocess/diffcheckstylehadoop-hdfs.txt |
| hadoop-hdfs test log | https://builds.apache.org/job/PreCommit-HDFS-Build/12753/artifact/patchprocess/testrun_hadoop-hdfs.txt |
| Test Results | https://builds.apache.org/job/PreCommit-HDFS-Build/12753/testReport/ |
| Java | 1.7.0_55 |
| uname | Linux asf909.gq1.ygridcore.net 3.13.0-36-lowlatency #63-Ubuntu SMP PREEMPT Wed Sep 3 21:56:12 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux |
| Console output | https://builds.apache.org/job/PreCommit-HDFS-Build/12753/console |


This message was automatically generated., - release audit: caused by the EC branch merge
- checkstyle: file length, which was already over the "limit".
- test failures: mostly new EC related tests. They seem to pass when run locally, including {{TestLazyWriter}}. , +1 Seems to have helped fix our problems., FAILURE: Integrated in Hadoop-trunk-Commit #8587 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/8587/])
HDFS-9178. Slow datanode I/O can cause a wrong node to be marked bad. (kihwal: rev 99e5204ff5326430558b6f6fd9da7c44654c15d7)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestClientProtocolForPipelineRecovery.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNodeFaultInjector.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java
, Thanks for the review, Daryn. I've committed this to trunk, branch-2 and branch-2.7., Attaching a patch for branch-2.6, in case someone wants it., FAILURE: Integrated in Hadoop-Yarn-trunk #1231 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/1231/])
HDFS-9178. Slow datanode I/O can cause a wrong node to be marked bad. (kihwal: rev 99e5204ff5326430558b6f6fd9da7c44654c15d7)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestClientProtocolForPipelineRecovery.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNodeFaultInjector.java
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #502 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/502/])
HDFS-9178. Slow datanode I/O can cause a wrong node to be marked bad. (kihwal: rev 99e5204ff5326430558b6f6fd9da7c44654c15d7)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNodeFaultInjector.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestClientProtocolForPipelineRecovery.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2437 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2437/])
HDFS-9178. Slow datanode I/O can cause a wrong node to be marked bad. (kihwal: rev 99e5204ff5326430558b6f6fd9da7c44654c15d7)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestClientProtocolForPipelineRecovery.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNodeFaultInjector.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #494 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/494/])
HDFS-9178. Slow datanode I/O can cause a wrong node to be marked bad. (kihwal: rev 99e5204ff5326430558b6f6fd9da7c44654c15d7)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNodeFaultInjector.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestClientProtocolForPipelineRecovery.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #467 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/467/])
HDFS-9178. Slow datanode I/O can cause a wrong node to be marked bad. (kihwal: rev 99e5204ff5326430558b6f6fd9da7c44654c15d7)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestClientProtocolForPipelineRecovery.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNodeFaultInjector.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2405 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2405/])
HDFS-9178. Slow datanode I/O can cause a wrong node to be marked bad. (kihwal: rev 99e5204ff5326430558b6f6fd9da7c44654c15d7)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNodeFaultInjector.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestClientProtocolForPipelineRecovery.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockReceiver.java
, Does this issue exist in 2.6.x? Should this be backported to branch-2.6?, Hi [~kihwal], I saw you already attached the patch for 2.6 branch. Shall we commit this patch in branch-2.6? Thanks!, The patch for branch-2.6 is stale. Update 002 patch that sync with latest 2.6 branch. [~kihwal], would you help to review it? Thanks!, +1 It looks like the only difference is in {{DataNodeFaultInjector}}. , Thanks [~kihwal] for review the patch! I have commit the patch to branch-2.6.]