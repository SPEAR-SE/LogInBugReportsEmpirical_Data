[This bug was identified in HDFS-1109 (http://s.apache.org/D2i), but I don't see that a JIRA was ever opened for it.  Suresh? Dmytro?  , Suresh, can you look at this issue?, I had asked Dmytro to look at it. He agreed to in HDFS-1109. Dmytro do you have any update?
, This patch fixes the problem.
I just tested it locally and I can still execute hftp commands and browse the filesystem.
Please take a look guys, I guess I should also do url unencode if I fetch the value from the filename parameter, shouldn't I?

The original patch in 1109 was fixing the problem with certain characters that were not handled correctly when passed around in the request parameter. Unfortunately I did not take into account the fact that we have jsp files being used for this at the same time., Just looked at the original patch and there is no URL decoding, so with this patch the behaviour is exactly like the one before 1109 if the path is passed via the filename parameter, and also works when the path is passed as a part of PathInfo to the servlet., Submitting patch.
Please have a look, there is no test with it since it modifies the web ui behaviour., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12476499/HDFS-1575
  against trunk revision 1094748.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.hdfs.server.datanode.TestBlockReport
                  org.apache.hadoop.hdfs.TestFileConcurrentReader

    -1 contrib tests.  The patch failed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://hudson.apache.org/hudson/job/PreCommit-HDFS-Build/390//testReport/
Findbugs warnings: https://hudson.apache.org/hudson/job/PreCommit-HDFS-Build/390//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://hudson.apache.org/hudson/job/PreCommit-HDFS-Build/390//console

This message is automatically generated., A few issues with the patch:
- style issue: need braces around the if () {...} block
- style issue: continuation of line "path = req.getPathInfo()..." should be indented
- The filename that gets put onto the path needs to get path-encoded. Right now there is an XSS vulnerability if you name a file something like '">...evilcodehere...'. Note that path-encoding is different than URLEncoding - particularly in that "/" should not be encoded, and " " turns to "%20" instead of "+"., Dmytro - mind updating the patch to address Todd's feedback?, Patch which addresses Todd's comments and fixes two bugs introduced by the HDFS-1052 merge., Since these changes are just in the java, it seems we could have some true unit tests for it?
Also, when concatenating "val" in the getUrlParam functions, shouldn't it be encoded?, bq. Since these changes are just in the java, it seems we could have some true unit tests for it?

Sure could. I'll work on that.

bq. Also, when concatenating "val" in the getUrlParam functions, shouldn't it be encoded?

Maybe. I'm not sure that the URL encoding should be done at this level. Regardless, it has the potential to break a lot of stuff via double-encoding, so I'd rather do that as part of a separate JIRA, if it's alright with you., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479658/hdfs-1575-trunk.0.patch
  against trunk revision 1124364.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.hdfs.server.datanode.TestBlockReplacement
                  org.apache.hadoop.hdfs.TestDFSStorageStateRecovery
                  org.apache.hadoop.hdfs.TestFileConcurrentReader
                  org.apache.hadoop.tools.TestJMXGet

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/565//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/565//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/565//console

This message is automatically generated., Updated patch addressing Todd's comments by adding a test. Also found/fixed a bug wherein files with special characters could not be viewed via the web UI., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479703/hdfs-1575-trunk.1.patch
  against trunk revision 1124459.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.hdfs.TestDFSStorageStateRecovery
                  org.apache.hadoop.hdfs.TestFileConcurrentReader
                  org.apache.hadoop.tools.TestJMXGet

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/577//testReport/
Release audit warnings: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/577//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/577//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/577//console

This message is automatically generated., Looks like license header is missing on TestDatanodeJsp, Patch adding license header to TestDatanodeJsp.java., Hi Aaron. I noticed some opportunity for cleanup here:
- removed unused import of org.mortbay.Log
- cleaned up the JSP so there isn't duplicated code
- the case that blks == null or blks.size() == 0 and security was off was being handled incorrectly
- fixed a line that was super long

Can you take a look at my changes?, +1, looks good to me. I especially like the reworking of the loop which iterates over {{blks}}. Thanks for cleaning this up., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479722/hdfs-1575-trunk.2.patch
  against trunk revision 1124459.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.hdfs.TestDFSStorageStateRecovery
                  org.apache.hadoop.hdfs.TestFileConcurrentReader
                  org.apache.hadoop.tools.TestJMXGet

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/582//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/582//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/582//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479729/hdfs-1575-trunk.3.patch
  against trunk revision 1124459.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 6 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these core unit tests:
                  org.apache.hadoop.hdfs.TestDFSStorageStateRecovery
                  org.apache.hadoop.hdfs.TestFileConcurrentReader
                  org.apache.hadoop.hdfs.TestHDFSTrash
                  org.apache.hadoop.hdfs.TestPipelines
                  org.apache.hadoop.tools.TestJMXGet

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/585//testReport/
Findbugs warnings: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/585//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/585//console

This message is automatically generated., I tried the failing tests locally and they pass. Will commit to 22 and trunk momentarily., Committed to trunk. Looks like we need to alter the patch a little for 0.22 since the federation stuff isn't there. Mind doing that?, What's attached is a faithful back-port of the trunk commit. In the course of doing this back-port I identified a bug, which I've filed under HDFS-1964. Let's commit this patch to branch-0.22 and then I'll back-port the bug fix., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12479841/hdfs-1575-22.0.patch
  against trunk revision 1125057.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 5 new or modified tests.

    -1 patch.  The patch command could not apply the patch.

Console output: https://builds.apache.org/hudson/job/PreCommit-HDFS-Build/593//console

This message is automatically generated., Thanks for the 0.22 patch. Committed it., Integrated in Hadoop-Hdfs-trunk-Commit #677 (See [https://builds.apache.org/hudson/job/Hadoop-Hdfs-trunk-Commit/677/])
    , Integrated in Hadoop-Hdfs-22-branch #53 (See [https://builds.apache.org/hudson/job/Hadoop-Hdfs-22-branch/53/])
    , Integrated in Hadoop-Hdfs-trunk #673 (See [https://builds.apache.org/hudson/job/Hadoop-Hdfs-trunk/673/])
    ]