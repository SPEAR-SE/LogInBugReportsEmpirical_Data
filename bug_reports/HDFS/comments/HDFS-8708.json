[Current default value is false itself right? and the Retry policy set is TRY_ONCE_THEN_FAIL by default. 

You mean to say, even if enabled, should not use them?, {quote}You mean to say, even if enabled, should not use them?{quote}
AFAIK,Yes, when it's enabled dfsclient should not use for HA proxies., bq. Current default value is false itself right? and the Retry policy set is TRY_ONCE_THEN_FAIL by default.
Agree.

bq. DFSClient should ignore dfs.client.retry.policy.enabled for HA proxies
The default value is false for HA. I think it's good enough. But we should not force Client to ignore dfs.client.retry.policy.enabled.

Assume a situation:
1. Client lost network connection to activeNN somehow. But activeNN works correctly, so no failover in server side.
2. Then Client failover 15 times(default max retries), and fails.
3. the network issues fixed somehow.
What if user want to retry connecting to activeNN multiple times, and doesn't want to failover so quickly, user can wait a minute before failover? If so, user can enable this config.

I think we should give user the option. Any ideas?, bq. The default value is false for HA. I think it's good enough.
I agree. Besides, there are cases where we want this to be on and work with HA. E.g. the IP address change detection code in ipc Client does not work, if the exception bubbles upto HA retey logic. It only works when retry is done within the same Client instance., It's good point,going to close this issue,if anyone disagree please feel free to reopen.]