[The patch makes sure the nodeInService count won't be updated when a dead node is recommissioned., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12695976/HDFS-7725.patch
  against trunk revision f33c99b.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.balancer.TestBalancer

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9396//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9396//console

This message is automatically generated., bq. However, HDFS-7374 introduces another inconsistency when recomm is involved.
The second sequence in the JIRA description looks correct?

By reading the HDFS-7374 patch I see the potential issue is that {{HeartbeatManager}} is bypassed when decommissioning a dead node:
{code}
+    if (!node.isDecommissionInProgress()) {
+      if (!node.isAlive) {
+        LOG.info("Dead node " + node + " is decommissioned immediately.");
+        node.setDecommissioned();
+      } else if (!node.isDecommissioned()) {
+        for (DatanodeStorageInfo storage : node.getStorageInfos()) {
+          LOG.info("Start Decommissioning " + node + " " + storage
+              + " with " + storage.numBlocks() + " blocks");
+        }
+        heartbeatManager.startDecommission(node);
{code}

It seems {{DatanodeManager}} should still route the call to {{HeartbeatManager}}, and {{HeartbeatManager#startDecommission}} should handle the dead node logic. 

Maybe we should wait for HDFS-7411 to be committed and revisit the change? , Thanks, [~zhz]. Yes, the logic of "don't modify nn stats if the node is dead" can be moved to HeartbeatManager.

For the trunk version, we can wait for HDFS-7411. If HDFS-7411 isn't going to be in branch-2 anytime soon, then we will need some quick fix. Overall, can anyone find any correctness issue with the current patch?, Thanks Ming. The patch looks good to me. It basically bypasses {{HeartbeatManager}} in stop decomm since start decomm is already bypassing it., Thanks, Zhe. Here is the rebase of the patch., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12708277/HDFS-7725-2.patch
  against trunk revision 1a495fb.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.TestNameNodeResourceChecker
                  org.apache.hadoop.hdfs.TestEncryptionZonesWithKMS
                  org.apache.hadoop.hdfs.server.namenode.ha.TestFailureToReadEdits

                                      The following test timeouts occurred in hadoop-hdfs-project/hadoop-hdfs:

org.apache.hadoop.hdfs.web.TestWebHDFSAcl

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10121//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10121//console

This message is automatically generated., Thanks Ming. I didn't manually verify the failed tests, but the patch looks good to me. Non-binding +1., Thanks for working on this Ming. Nice find, patch looks basically good. Just a few comments:

I agree with Zhe's original review comment above, I think we should move the liveness check for both start and stop into heartbeat manager. This way the caller doesn't have to worry about it.

It would also be good to add "alive" or "dead" to the first log in stopDecommission too, just to give admins some more information about node state.

Do we also need assert checks in the test after recommissioning the dead node?, Thanks, Andrew and Zhe. The latest patch moves the liveness check to {{HeartbeatManager}} with some minor changes to {{DecommissionManager}}'s {{startDecommission}}. The patch also has the other suggestions you mentioned., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12709323/HDFS-7725-3.patch
  against trunk revision 023133c.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.TestReplication

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/10177//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/10177//console

This message is automatically generated., Will it also fix HDFS-5114?, Hi Ming, the latest looks good to me. +1 will commit shortly.

Kihwal, I looked quickly and I don't think this will change getMaxNodesPerRack behavior. This fixes up the live/dead node counts kept in the heartbeat manager, and I don't think those counts are used by getMaxNodesPerRack., FAILURE: Integrated in Hadoop-trunk-Commit #7539 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7539/])
HDFS-7725. Incorrect 'nodes in service' metrics caused all writes to fail. Contributed by Ming Ma. (wang: rev 6af0d74a75f0f58d5e92e2e91e87735b9a62bb12)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNamenodeCapacityReport.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java
, Committed to trunk and branch-2, thanks for the patch Ming, Zhe for also reviewing.

The failed test also failed twice for me without the patch applied, it seems independently broken., FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #158 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/158/])
HDFS-7725. Incorrect 'nodes in service' metrics caused all writes to fail. Contributed by Ming Ma. (wang: rev 6af0d74a75f0f58d5e92e2e91e87735b9a62bb12)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNamenodeCapacityReport.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2090 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2090/])
HDFS-7725. Incorrect 'nodes in service' metrics caused all writes to fail. Contributed by Ming Ma. (wang: rev 6af0d74a75f0f58d5e92e2e91e87735b9a62bb12)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNamenodeCapacityReport.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #149 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/149/])
HDFS-7725. Incorrect 'nodes in service' metrics caused all writes to fail. Contributed by Ming Ma. (wang: rev 6af0d74a75f0f58d5e92e2e91e87735b9a62bb12)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNamenodeCapacityReport.java
, SUCCESS: Integrated in Hadoop-Yarn-trunk #892 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/892/])
HDFS-7725. Incorrect 'nodes in service' metrics caused all writes to fail. Contributed by Ming Ma. (wang: rev 6af0d74a75f0f58d5e92e2e91e87735b9a62bb12)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNamenodeCapacityReport.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #159 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/159/])
HDFS-7725. Incorrect 'nodes in service' metrics caused all writes to fail. Contributed by Ming Ma. (wang: rev 6af0d74a75f0f58d5e92e2e91e87735b9a62bb12)
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNamenodeCapacityReport.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2108 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2108/])
HDFS-7725. Incorrect 'nodes in service' metrics caused all writes to fail. Contributed by Ming Ma. (wang: rev 6af0d74a75f0f58d5e92e2e91e87735b9a62bb12)
* hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNamenodeCapacityReport.java
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DecommissionManager.java
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java
, Thanks Zhe and Andrew., This issue manifested on 2.6 as prior to HDFS-7374 ( with count going to -1) and in 2.7 partially during recommissioning.
The unit test from this patch (testXceiverCount) fails on 2.7 during the recommission assert :
{code}
 //Verify recommission of dead node won't impact nodesInService metrics.
        dnm.stopDecommission(dnd);
        assertEquals(expectedInServiceNodes,getNumDNInService(namesystem));
{code}
It would be nice to have this patch ported to 2.7. [~mingma], any suggestions/comments would be helpful., Cherry-picked it to branch-2.7.]