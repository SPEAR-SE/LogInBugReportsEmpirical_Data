[DFSConfigKeys is a private class and not intended to be used outside HDFS. 
DFS_NAMENODE_USER_NAME_KEY was renamed to DFS_NAMENODE_KERBEROS_PRINCIPAL_KEY. We add deprecated keys usually when the value changes, but in this case the value is still "dfs.namenode.kerberos.principal"., I agree with [~brandonli], we should not be using private classes in external projects. Either we should make the class interface audience public or define constants locally in the project. , -there's no other place in the hdfs codebase that defines the properties for hdfs as constant strings...anyone who doesn't want to cut and paste values is going to link to this. 

Which is preferable?
# people cut and pasting strings like {"dfs.replication"}
# people importing constants defined in the hadoop source, as is done via {{YarnConfiguration}} and {{CommonConfigurationKeysPublic}}?

I may have been unusual in that I tried to use the in-source constants. And I may have (unintentionally) used them despite them being annotated private -but when you do YARN code you end up treating that as a mild hint anyway. 

Options
# do nothing, I fix my code to inline the constant in my own constants class. I repeat this for any other imports in my code, as I can no longer be confident that they will remain there. Anyone else who uses the constant finds their code breaks. 
# Add a deprecated definition of the old name, using the new name as its reference. 
# action #2, then extract a stable set of constants into a HDFSPublicKeys class for others to use, make this a superclass of the private keys, and encourage people to use these constants in future. 

Now -how are static strings imported into other classes in the compiler? Copied or linked? If copied, code that imports the old definitions will not fail at runtime -only when precompiled. Which would reduce the damage somewhat, How about
# {{DFSConfigKeys}} becomes the public keyset (for compatibility)
# a subclass of this, {{DFSPrivateConfigKeys}} becomes where private keys go
# We add the (deleted) tags but deprecate them.
# stuff in trunk that is new and private gets pushed into the private keys, promoted as and when its felt to make them public.

I can do the creation of the private keys file, revert the deleted keys -enough to help me build/link my code...leaving the choice of new stuff to keep private to others, bq. DFSConfigKeys becomes the public keyset (for compatibility)

Currently it feels like to me that a lot of keys defined in DFSConfigKeys should be private to HDFS. If we want to expose some hdfs configuration keys as public to external projects, maybe we should make DFSConfigKeys as private first, and gradually move those public keyset to a new public ConfigKeys class., I agree with Suresh and Jing that DFSConfigKeys is not a public API so that it should not be used outside HDFS.  On the other hand, the conf property key is a public API.  For example,
{code}
//DFSConfigKeys.java
  public static final String  DFS_BLOCK_SIZE_KEY = "dfs.blocksize";
{code}
DFS_BLOCK_SIZE_KEY is not a public API.  Projects outside HDFS should not use DFSConfigKeys.DFS_BLOCK_SIZE_KEY.  However, the value "dfs.blocksize" is a public API as it is defined in hdfs-default.xml.

In the long term, Slider should eliminate referencing DFSConfigKeys.  In the short term, I don't mind adding back the previously removed constants as deprecated.  Sounds good?, h6418_20140619.patch: adds back the previously deleted constants., +1 for the patch -thanks., bq. In the long term, Slider should eliminate referencing DFSConfigKeys. In the short term, I don't mind adding back the previously removed constants as deprecated. Sounds good?

I could eliminate the references -but think that if I used the constants, others would too. I just found it first as I do try to build my code against trunk regularly

There's no equivalent in HDFS of the public constants offered by Common and YARN. We need something similar with the public stable constant strings; this private-tagged interface could extend it. Moving the constants would be simple matter of then deciding what is public, what is private and pulling up the public ones., patch applied, verify slider builds. Thanks!, SUCCESS: Integrated in Hadoop-trunk-Commit #5799 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5799/])
HDFS-6418. Regression: DFS_NAMENODE_USER_NAME_KEY missing (stevel: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1606536)
* /hadoop/common/trunk
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
, Thanks Steve for testing and committing the patch.  Resolving ..., FAILURE: Integrated in Hadoop-Yarn-trunk #599 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/599/])
HDFS-6418. Regression: DFS_NAMENODE_USER_NAME_KEY missing (stevel: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1606536)
* /hadoop/common/trunk
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1817 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1817/])
HDFS-6418. Regression: DFS_NAMENODE_USER_NAME_KEY missing (stevel: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1606536)
* /hadoop/common/trunk
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
, SUCCESS: Integrated in Hadoop-Hdfs-trunk #1790 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1790/])
HDFS-6418. Regression: DFS_NAMENODE_USER_NAME_KEY missing (stevel: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1606536)
* /hadoop/common/trunk
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
]