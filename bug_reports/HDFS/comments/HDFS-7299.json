[It seems that the fsimage is broken. You can use the offline image viewer to confirm.
, [~huLiu]Thanks for the response Liu. I tried giving the command hdfs oiv -i fsimage_file -o output. I am getting the directory structure of hdfs. But how to confirm whether it is broken or working fine?, If you can get the correct directory structure without any error, the fsimage should be ok., Thanks Liu. i am getting the correct directory structure using offline image viewer. So any further ways to debug this issue.., I found one of the file in hdfs containing negative NUM_BYTES set in fsimage.
      INODE
      INODE_PATH = /user/root/dir/out/part-m-05990
      REPLICATION = 3
      MODIFICATION_TIME = 2014-09-05 04:09
      ACCESS_TIME = 2014-09-05 07:42
      BLOCK_SIZE = 134217728
      BLOCKS [NUM_BLOCKS = 1]
        BLOCK
          BLOCK_ID = 8582078737
          *NUM_BYTES = -1945969516689645797*
          GENERATION_STAMP = 5
      NS_QUOTA = -1
      DS_QUOTA = -1
      PERMISSIONS
        USER_NAME = root
        GROUP_NAME = supergroup
        PERMISSION_STRING = rw-r--r--

Is there any way to edit the fsimage file..., I was able to bring the namenode up, by commenting the following lines from org.apache.hadoop.hdfs.protocol.Block.java
if (numBytes < 0) {
     throw new IOException("Unexpected block size: " + numBytes);
    }

But not sure how NUM_BYTES got negative value in fsimage.

[~huLiu], The file has one block and the max block size is 128MB.  What is the actual size of the block on the datanode?, [~kihwal] Actually this is not the only block in hdfs. I took the metadata of part-m file which had issue and posted it here. The actual size of the /user/root/dir/out/part-m-05990 file is around 440 Kbytes. ]