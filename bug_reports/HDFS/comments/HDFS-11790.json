[[~mingma],
 Please take a look at the problem description and let us know your thoughts.

I think {{BlockManager#computeReconstructionWorkForBlocks()}} and {{BlockManager#validateReconstructionWork()}} should be aware of IN_MAINT DNs and avoid chosing them as source datanodes for re-replication. , Attached the test patch to show the issue with BlockManager#computeReconstructionWorkForBlocks when decommissioning a datanode which already entered maintenance state.

{noformat}
2017-05-10 14:39:45,315 [RedundancyMonitor] DEBUG BlockStateChange (BlockManager.java:computeReconstructionWorkForBlocks(1782)) - BLOCK* ask [127.0.0.1:59416] to replicate blk_1073741828_1004 to datanode(s) 127.0.0.1:59403
2017-05-10 14:39:45,315 [RedundancyMonitor] DEBUG BlockStateChange (BlockManager.java:computeReconstructionWorkForBlocks(1782)) - BLOCK* ask [127.0.0.1:59416] to replicate blk_1073741842_1018 to datanode(s) 127.0.0.1:59412
2017-05-10 14:39:45,315 [RedundancyMonitor] DEBUG BlockStateChange (BlockManager.java:computeReconstructionWorkForBlocks(1782)) - BLOCK* ask [127.0.0.1:59416] to replicate blk_1073741844_1020 to datanode(s) 127.0.0.1:59407
2017-05-10 14:39:46,319 [RedundancyMonitor] DEBUG BlockStateChange (BlockManager.java:computeReconstructionWorkForBlocks(1782)) - BLOCK* ask [127.0.0.1:59416] to replicate blk_1073741825_1001 to datanode(s) 127.0.0.1:59407
2017-05-10 14:39:46,319 [RedundancyMonitor] DEBUG BlockStateChange (BlockManager.java:computeReconstructionWorkForBlocks(1782)) - BLOCK* ask [127.0.0.1:59416] to replicate blk_1073741829_1005 to datanode(s) 127.0.0.1:59412
2017-05-10 14:39:46,319 [RedundancyMonitor] DEBUG BlockStateChange (BlockManager.java:computeReconstructionWorkForBlocks(1782)) - BLOCK* ask [127.0.0.1:59416] to replicate blk_1073741833_1009 to datanode(s) 127.0.0.1:59407
2017-05-10 14:39:47,321 [RedundancyMonitor] DEBUG BlockStateChange (BlockManager.java:computeReconstructionWorkForBlocks(1782)) - BLOCK* ask [127.0.0.1:59416] to replicate blk_1073741845_1021 to datanode(s) 127.0.0.1:59407
2017-05-10 14:39:48,328 [RedundancyMonitor] DEBUG BlockStateChange (BlockManager.java:computeReconstructionWorkForBlocks(1782)) - BLOCK* ask [127.0.0.1:59416] to replicate blk_1073741843_1019 to datanode(s) 127.0.0.1:59403
2017-05-10 14:39:54,357 [RedundancyMonitor] DEBUG BlockStateChange (BlockManager.java:computeReconstructionWorkForBlocks(1782)) - BLOCK* ask [127.0.0.1:59416] to replicate blk_1073741834_1010 to datanode(s) 127.0.0.1:59412

2017-05-10 14:40:24,279 [DecommissionMonitor-0] DEBUG blockmanagement.DecommissionManager (DecommissionManager.java:check(577)) - Node 127.0.0.1:59416 still has 9 blocks to replicate before it is a candidate to finish Decommission In Progress.
{noformat}
, Thanks [~manojg] for reporting this. Hmm, the existing code should take care of this. Wonder if it is due to some corner cases where the following functions don't skip maintenance nodes properly.

* BlockManager#createLocatedBlock should skip IN_MAINTENANCE nodes.
* BlockManager#chooseSourceDatanodes should skip MAINTENANCE_NOT_FOR_READ nodes set for IN_MAINTENANCE nodes.]