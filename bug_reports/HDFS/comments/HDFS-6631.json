[Here is the stack trace from a failed test run.

{code}
testHedgedReadLoopTooManyTimes(org.apache.hadoop.hdfs.TestPread)  Time elapsed:0.918 sec  <<< FAILURE!
java.lang.AssertionError: expected:<3> but was:<2>
        at org.junit.Assert.fail(Assert.java:88)
        at org.junit.Assert.failNotEquals(Assert.java:743)
        at org.junit.Assert.assertEquals(Assert.java:118)
        at org.junit.Assert.assertEquals(Assert.java:555)
        at org.junit.Assert.assertEquals(Assert.java:542)
        at org.apache.hadoop.hdfs.TestPread.testHedgedReadLoopTooManyTimes(TestPread.java:329)
{code}
, I could not repro on my dev box so far.  probably it related with this code in case "Thread.sleep(hedgedReadTimeoutMillis + 1);" ?   if almost reach the hedged read threshold (50ms), then a slow down,e.g. gc occur, or scheduler related activity, so when this testing continues to run after 50+1 ms with cpu begin to be scheduled again, then the counter can be 2.
It's just a guess,   maybe a whole test log file will help us diagonise it. Chris, do you still have that log outfile copy?
ps: if we enable the log level to ALL in this testing, i think it will very be easier to understand all stuff:), Here is a log file from running "mvn -o clean test -Dtest=TestPread#testHedgedReadLoopTooManyTimes" and seeing the test fail, with log level set to ALL., I see, compared with my dev box logfile, found inside attached "org.apache.hadoop.hdfs.TestPread-output.txt" file, it did not trigger a real hedged read.
I only could find  log like "Waited 50ms to read from 127.0.0.1:xxxxx spawning hedged read" in my logfile.
In your file, the execution sequence is :
->read from 127.0.0.1:53908                     <- here the counter is 1
->throw Checksum Exception
->read from 127.0.0.1:53919                     <- here the counter is 2
->return result ,  line 1127
that means all two read path gone to the "if (futures.isEmpty()) {" flow  (L1112)

so the root question is if we set hedged.read.threshold = 50ms, and Mockito.doAnswer has a "Thread.sleep(50+1)", this statement:
{code}
          Future<ByteBuffer> future = hedgedService.poll(
              dfsClient.getHedgedReadTimeout(), TimeUnit.MILLISECONDS);
{code}

In my dev box, it did just like Javadoc says:
{code}
Retrieves and removes the Future representing the next completed task, waiting if necessary up to the 
 specified wait time if none are yet present.
Parameters:
	timeout how long to wait before giving up, in units of unit
	unit a TimeUnit determining how to interpret the timeout parameter
Returns:
	 the Future representing the next completed task or null if the specified waiting time elapses before 
	  one is present
Throws:
	InterruptedException - if interrupted while waiting
{code}

so the future will be null.

but in Chris's box, the exception from thread pool will jump out firstly, so gone to L1140 directly: "catch (ExecutionException e)"

so per my current understanding, it should be related with os thread schedule (granularity) , we probably need to enlarge the Mockito sleep interval., I just uploaded a tentitive patch, [~cnauroth], could you try it in your easy-repro env ? thank you very much!, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12654772/HDFS-6631.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:red}-1 javac{color:red}.  The patch appears to cause the build to fail.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7301//console

This message is automatically generated., emm, why QA complain couldn't compile, i verified again it works.  let me remove the old one and re-upload, {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12654928/HDFS-6631.txt
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7317//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7317//console

This message is automatically generated., Thanks, Liang, for the really nice analysis!  The timings you chose in this patch make a lot of sense too when we consider that the default timer resolution on Windows is 15.6 ms.  The old logic used just a 1 ms delta.  Introducing a separate wait greater than 15.6 ms makes sense, which is what this patch does.  I ran the test many times on both Mac and Windows, and I saw no failures.

+1 for the patch.  I'll commit this., FAILURE: Integrated in Hadoop-trunk-Commit #5859 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/5859/])
HDFS-6631. TestPread#testHedgedReadLoopTooManyTimes fails intermittently. Contributed by Liang Xie. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1609534)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClientFaultInjector.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestPread.java
, I committed this to trunk, branch-2 and branch-2.5.  [~xieliang007], thank you for your diligence in fixing these issues related to hedged reads., FAILURE: Integrated in Hadoop-Yarn-trunk #610 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/610/])
HDFS-6631. TestPread#testHedgedReadLoopTooManyTimes fails intermittently. Contributed by Liang Xie. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1609534)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClientFaultInjector.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestPread.java
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #1828 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1828/])
HDFS-6631. TestPread#testHedgedReadLoopTooManyTimes fails intermittently. Contributed by Liang Xie. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1609534)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClientFaultInjector.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestPread.java
, FAILURE: Integrated in Hadoop-Hdfs-trunk #1801 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1801/])
HDFS-6631. TestPread#testHedgedReadLoopTooManyTimes fails intermittently. Contributed by Liang Xie. (cnauroth: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1609534)
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClientFaultInjector.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSInputStream.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestPread.java
]