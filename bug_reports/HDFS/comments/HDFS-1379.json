[Some of the issues here are also covered in HADOOP-6364 .

But yes, multi-homing is a known brokenness.

It is probably worth pointing out that 

a) the bang-for-buck by having a separate network for IPC/RPC communications isn't very good, so pretty much no one does it

b) monitoring a private interface instead of the public one leaves you exposed to failures on the network side , Hi Allen,

Thanks for your comments - I looked for other things first, and I didn't notice HADOOP-6364 - thanks for linking it!

I'm aware that multi-homing is known not to work, but it seems to me that being able to define the bind address and then having the namenode give out something that it has constructed using incomplete information to hdfs clients is more than just a simple "multi-homing is broken" bug.

In response to the points:
a) I'm well aware of that - segregating the traffic with our other network is important as a lot of people have access to that network, but keeping a cluster network which is separate is sensible - it means it can be provisioned differently with potentially different QoS at switches etc. - We're not just doing IPC/RPC on that - but the entire datanode<->datanode and client<->datanode comms too - as our clients run within that network - ideally I'd have the jobtracker bind to INADDR_ANY (IN6ADDR_ANY) so you could submit a job from anywhere, but all the datanode comms work - but that isn't possible because of the dual use of mapred.job.tracker.
b) correct, though what's also exposed on the (more) public side is bits of JMX, rather than just trivial availability monitoring, and that does help to point out what hadoop is seeing. At some stage I'd like to have availability monitoring on both sides, but that's not possible right now., I believe this is not a problem anymore after other JIRAs such as HDFS-4963.  Please feel free to reopen this if it is not the case.  Resolving ...]