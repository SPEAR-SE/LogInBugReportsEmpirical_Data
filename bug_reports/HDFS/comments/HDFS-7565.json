[Hi Hari, I think this is the same as HDFS-6361 (and HDFS-7563). Suggest to get HDFS-6361 fix and try.  Thanks.

, I'm running 2.6.0 and it looks like HDFS-6361 was supposed to be fixed in 2.4.1.

Whereas HDFS-7563 is a startup failure relating to the NFS gateway static UID/GID map parsing function, this error occurs whenever I access the NFS mount point from my Windows 7 workstation, which makes me think it's a different code path., Hi Hari,  May I know if the " UID around 4 billion" is in your static mapping file? if so, is it in the file initially or added later? Thanks.

, That 4 Billion UID is being sent by my Windows 7 workstation when accesing the NFS mount point.

It was difficult to find this out (I found out because my other MapR+NFS cluster just handled it and I saw the UID on file creation) which is why I went looking to find out why I couldn't see that 4 billion UID in the HDFS NFS gateway logs and then I read the code and realized that it's showing me this -2 instead of the 4 billion (hence it's overflowing around on java int).

That static mapping issue is separate issue where trying to then map the 4 billion UID prevents gateway startup as documented in HDFS-7563.

This issue in this Jira is really to answer the question: "Why can't I find this UID 4 billion that my client was passing to my HDFS NFS gateway". I believe the answer is because the number was being lost in integer overflow., Thanks for the info Hari.

Inside hadoop nfs code, uid/gids are handled as integer. The "4 billion ID" is converted to integer, e.g., 4294967294 to -2, 4294967295 to -1. Based on what you described so far, the problem is that the initial ID-to-name mapping entry for the "4 billion ID" does not exist in the internal map.

There are couple of possibilities:
1. this might be a windows/linux difference issue
2. HDFS-7146 (NFS ID/Group lookup requires SSSD enumeration on the server) might help.

Questions, 
Q1, what are the exact user name and UID for the "4 billiion UID" reported in this jira? 
Q2. your client is on windows, is your cluster also windows-based? 
Q3. If your cluster is linux/mac based, and if you log on to a host in the cluster, and run "getent passwd | grep <userNameOfInterest>" on linux or "dscl . -list /Users  | grep <userNameOfInterest>" on mac, what do you see?

Thanks.
, 1. It's simply converting the 4 billion entry to -2 so yes that isn't going to match anything, which is the crux of this ticket. That's the bit we need fixed in this jira.

2. I did previously enable SSSD enumeration (I had previously seen that ticket).

A1. UID 4294967294 (from company Active Directory), username on the cluster is hari (this is a local IPA realm just for this PoC)
A2. cluster is running on Redhat Enterprise Linux 6, client is Windows 7 enterprise
A3. Linux "getent passwd | grep hari" returns "hari:*:10002:10003:hari:/home/user/hari:/bin/bash", Thanks for the info Hari.

It sounds that you have two UIDs mapped to the same user "hari", one is "4294967294" and "10002". It's expected that we have unique id-2-name mapping currently. So the mapping won't work.  If it's unique, HDFS-6361 would resolve the issue by mapping oversized id to int.  Can this issue be solved from configuration side?

Usually I saw "nfsnobody" kind of user name appears with UID 4294967294. In your case, it's "hari", I wonder how a regular user get to this kind of UID.

Thanks.
, To clarify:

The Windows 7 workstation is part of the enterprise Active Directory and is what is sending that 4 billion UID. My windows user is some random alphanumeric id not relevant here. 

The "hari" user was created by me in this standalone integrated Kerberos realm with backing LDAP directory which manages the Hadoop cluster. The Hadoop cluster authenticates to this standalone authentication realm created by me.

So the "hari" user and its 10002 UID were set up by me and appear as local native user on the cluster nodes.

This is why you see the two UIDs. What I was trying to do was map the 4 billion UID to the 10002 UID using the recently added static map in the other jira HDFS-7563.

The problem here is that when the NFS gateway receives the 4 billion UID from the Windows workstation it overflows and results in the -2 UID.

According to HDFS-6361 that -2 is set because it's outside the int range, but it's not clear what the fix is in this instance since it was marked resolved in version 2.4.1 and I'm running 2.6.0., Also, note that 4 billion UID does not result in user "hari" - that's the user  I'm trying to make it resolve to via the static mapping file in the other ticket.

That 4 billion UID results in user "nobody" with UID -2. This is the problem right here since "nobody" user cannot access any of the data in the cluster, nor can I grant any granular access to different users and groups since they'll all come out as user "nobody" so there is no way to separate users., Thanks Hari, I read the static mapping code, and got where you are from. I can see another possible issue there.  Will dig more.

, HI [~harisekhon],

I assume you applied your own fix of HDFS-7563, and then see this problem, right? What does your static map file exactly look like? (would you please cat the file and paste it here?)

Would you please try "getent passwd hari", "getent passwd 10002", "getent passwd <4B>" (where <4B> is the 4 biilion number you are using) on the node that runs nfs gateway, and share the results here?

Thanks.




]