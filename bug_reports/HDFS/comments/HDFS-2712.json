[I would prefer to leave mtime to capture creation time. This might come handy for snapshots. Is mtime not set to creation time currently?, Agreed, we should leave mtime, as we are capturing the mtime while creating.
Also we will access the API getModficationTime api from INode, while logging the mkdir op into Editlog.
Nicholas, what do you say?
, Adding some relevant links.
modificationTime was introduced (HADOOP-1377) before accessTime (HADOOP-1869), and was originally intended to reflect create time for directories, if I remember correctly. We should keep it that way.
So to clarify it: 
- *for files* modificationTime means its create or a modification time,
- *for directories* modificationTime means the create time.

I think accessTime was placed in INode just because modificationTime has already been there. Moving accessTime to INodeFile is consistent with its semantics.
setTimes() for directories should throw an exception (FileNotFoundException or UnsupportedActionException?) with a clear message that operation is not supported on directories., {quote}
setTimes() for directories should throw an exception (FileNotFoundException or UnsupportedActionException?)
{quote}
I think here two cases, one is for non existent file and other is for directories. Both cases getINodeFile will return null. SO, to throw the exception, FileNotFoundException should be correct for non existent files and if src is a dir then UnsupportedActionException will have more meaning?
or since the passed argument value is not expected one, IllegalArgumentException?, IllegalArgumentException is a RuntimeException rather than IOException. We don't want to throw an unchecked exception here.
I agree file-not-found and not-a-file are two different cases., make sense, if there are no comments on adding UnsupportedActionException  for dirs and FNFE for nonexistent file, will provide patch tomorrow.
Thanks a lot, Konstantin for your time., 1st Patch : HDFS-2712 
1) UnsupportedActionException will be thrown if we try to setTimes on directories
2) Moved the atime field to iNodeFile obj.
3) also moved atime down to iNodeSymlink, i am not sure whether really a time required on iNodeSymlink. But not to break any functionality, i just added atime to it as well.


Thanks
Uma, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508558/HDFS-2712.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    -1 javadoc.  The javadoc tool appears to have generated 20 warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 eclipse:eclipse.  The patch built with eclipse:eclipse.

    -1 findbugs.  The patch appears to introduce 1 new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.web.TestFSMainOperationsWebHdfs
                  org.apache.hadoop.hdfs.web.TestWebHdfsFileSystemContract

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1737//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/1737//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/1737//artifact/trunk/hadoop-hdfs-project/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1737//console

This message is automatically generated., Failures looks to be due to Balancer tests time out
{quote}
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 26.302 sec
Running org.apache.hadoop.hdfs.server.balancer.TestBalancer
Running org.apache.hadoop.hdfs.web.TestOffsetUrlInputStream
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.567 sec
Running org.apache.hadoop.hdfs.web.TestWebHdfsFileSystemContract
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 1.199 sec <<< FAILURE!
Running org.apache.hadoop.hdfs.web.TestFSMainOperationsWebHdfs
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 1.274 sec <<< FAILURE!
{quote}

In recent build balancer tests has broken in Jenkins. https://builds.apache.org/job/Hadoop-Hdfs-trunk/lastCompletedBuild/testReport/
Filed a JIRA for Balancer tests HDFS-2721

findbugs also unrelated., This seems at odds with posix.  I believe a directory's behavior is supposed to:
* atime: creation
* ctime: permissions, owner, group are changed
* mtime: when ctime changes, plus when the contents are altered (path created or deleted)
, I agree you, with respective to POSIX
But current implementations of DFS supports atime, mtime in iNodes. Looks long back there was a discussion about this behaviors considering performance and other factors HADOOP-1869. decided to not supporting the setTimes on directories., Interesting.  HADOOP-1869 is long and a bit unclear.  A number of people did advocate posix compliance.  My reading is there was concern over lots of atime updates for directories, however posix just requires atime to set at creation time.  Using a directory's mtime in place of atime, thus removing atime, really violates posix.  Banning setTimes on a directory also violates posix.

Breaking all these posix semantics could spell trouble for filesystems that do want to adhere to posix, including FUSE implementations.

As a related aside: For performance reasons, I can see not updating a directory's mtime when its contents are altered, but why aren't we updating mtime when the owner/group/permissions are changed?  In which case atime becomes important for a directory., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12508558/HDFS-2712.patch
  against trunk revision 47f7f18.

    {color:red}-1 patch{color}.  The patch command could not apply the patch.

Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9813//console

This message is automatically generated.]