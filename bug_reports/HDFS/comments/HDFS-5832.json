[Attaching a proposal where I have moved the namesystem.isInSafeMode(); out of datanodeMap lock. Could someone help me to validate this case. Thanks, Is this same as HDFS-5368? That was closed as dupe of HDFS-5132, Thanks Uma for the interest.
Looks like similar, but I could see still there is a chance of reverse locking in the code. 

I'm seeing the following code flow like,
- In one side, when running SafeModeMonitor thread, it is invoking safeMode#canLeave() by acquiring 'safeMode.this' lock and here it is asking for the DataNodeManger#getNumLiveDataNodes by trying to acquire 'datanodeMap' lock.
- On the other side, DN heartbeat comes and DatanodeManager#handleHeartbeat() has acquired 'datanodeMap' lock and calling namesystem#isInSafeMode(), which inturn trying to acquire 'safeModeInfo.this' lock, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12625184/HDFS-5832.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/5943//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/5943//console

This message is automatically generated., I have read the comments from  HDFS-5368 and HDFS-5132. It was closed because, safemode checks done under fsn lock and hb also under fsn lock. So, they were protected with fsn lock. I think because of that fix, earlier issue closed. Do you see any cases, where they are running outside of fsn lock?, As mentioned in HDFS-5132, 
Moving SafemodeMonitor#run() checks under fsn write lock, will solve the issue. 

1. handleHeartbeat() is always done under fsn readlock
2. incrementSafeBlockCount() and getNumLivedatanodes() will always will be called under writeLock().

By directly seeing the synchronization order it appears to be deadlock. But its avoided by the fsn lock.
 I think jcarder will not identify the read-write lock mechanism.

For this reason only I have made HDFS-5368 duplicate of HDFS-5132, Thanks again Uma and Vinay for the insight. Yeah, jcarder is not recognising the read-write locks and is giving bad report. I'm closing this issue.]