[The test fails on Windows because the {{dfs.namenode.name.dir}} resolves to "file://I:\svn\tr\hadoop-hdfs-project\hadoop-hdfs\target/test/dfs/name" in the test what fails the namenode storage dir URI conversion (see below exception). {{dfs.namenode.name.dir}} default value is based on "file://$hadoop.tmp.dir/dfs/name" and this expands in the above invalid path. 

{code}
Error while processing URI: file://I:\svn\tr\hadoop-hdfs-project\hadoop-hdfs\target/test/dfs/name
java.io.IOException: The filename, directory name, or volume label syntax is incorrect
	at java.io.WinNTFileSystem.canonicalize0(Native Method)
	at java.io.Win32FileSystem.canonicalize(Win32FileSystem.java:396)
	at java.io.File.getCanonicalPath(File.java:559)
	at java.io.File.getCanonicalFile(File.java:583)
	at org.apache.hadoop.hdfs.server.common.Util.fileAsURI(Util.java:73)
	at org.apache.hadoop.hdfs.server.common.Util.stringAsURI(Util.java:58)
	at org.apache.hadoop.hdfs.server.common.Util.stringCollectionAsURIs(Util.java:98)
	at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getStorageDirs(FSNamesystem.java:959)
{code}, The following tests fail with the same "No image directories available" error on Windows:

TestCheckpoint
TestFSNamesystem
TestNameEditsConfigs
TestNNThroughputBenchmark
TestValidateConfigurationSettings

Will check if it makes sense to address all at the same time., Hi, Ivan.  I had a patch in progress for this one.  I accidentally filed HDFS-4716, but I just resolved it as duplicate.  I'm attaching my current patch, which is a one-liner fix for just {{TestAllowFormat}} (not the other ones that you mentioned in the comments)., I can see 2 different approaches to fixing these tests:

# Fix each individual test to initialize dfs.namenode.name.dir properly.
# Add special case logic in {{Configuration#substituteVars}} saying that if the value starts with "file:", then pass any substitution values through {{File#toURI}} and {{URI#getPath}}.  On Windows, this would have the effect of converting '\' to '/' and yield a valid URI.

My initial patch takes the first approach.  I expect I can quickly prep a patch for the second approach too so we can compare and contrast.

BTW, I apologize if I stepped on your toes here.  Somehow, I missed that you had already filed this jira.
, Hey Chris, no worries at all, and thanks for attaching the patch!

I started with a similar approach to yours and then saw the other test failures, so I thought it is worth to spent some time seeing if it makes sense to fix them all at ones.

I was thinking along the lines of changing {{Util#fileAsURI}} such that it converts the given File to Path and then from Path to the URI. However, on top of this we'd also have to change the default value for {{dfs.namenode.name.dir}} as "file://$hadoop.tmp.dir/dfs/name" is actually not a valid local URI (there should 3 forward slashes after "file:", IOW: "file:///$hadoop.tmp.dir/dfs/name"). I haven't tested this out, so it might be that there are some problems here.

You're welcome to take this up if you want :), PS. I think the approach from the current patch is actually a fine way to address the problem, I just thought it is worth to check if there are better ways., bq. However, on top of this we'd also have to change the default value for dfs.namenode.name.dir as "file://$hadoop.tmp.dir/dfs/name" is actually not a valid local URI (there should 3 forward slashes after "file:", IOW: "file:///$hadoop.tmp.dir/dfs/name").
Correcting myself here. The above URI is actually valid since $hadoop.tmp.dir contains one forward slash at the beginning. The rest of what I said below should still make sense., {color:green}+1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12579441/HDFS-4705.1.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4277//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4277//console

This message is automatically generated., Hi Chris,

I spent some time thinking here, and wasn’t able to come up with anything better than what you suggested. Basically, the value for {{dfs.namenode.name.dir}} ends up being an invalid URI on Windows because of how its value is expanded. In production, passing a valid URI will work, so we don’t have any problems. In test, reasonable approach is to be explicit and set {{dfs.namenode.name.dir}} to a value that is a valid URI on both Unix and Windows platforms.

I went ahead and fixed all above tests with the similar approach. This will get all of them to pass, with the exception of TestCheckpoint, which will continue to fail on Windows for a different reason.

Let me know if you have any feedback on the patch. And big thanks for your proactive help! , Ivan, you read my mind!  :-)  I was just about to comment stating that all of my attempts to fix it outside the tests turned out to be infeasible and that I was going to switch back to fixing it by setting dfs.namenode.name.dir in each test.

Just for the record, here is what I tried, and why it won't work:

# Fixing it in the HDFS {{Util}} class is too late.  The directory already has a mix of '/' and '\', and we can't reliably correct it.  Even passing through {{Path}}, it would interpret everything up to the first '/' as authority, which wouldn't be correct.
# Fixing it in {{Configuration}} is very brittle when you consider things like comma-separated lists.  I'm also wary of destabilizing the logic in here for all Hadoop projects, because it's supposed to be a public/stable interface.
# I also tried some Maven trickery to replace all '\' with '/' in the pom.xml.  However, we still end up with the effect of concatenating 2 absolute paths (including drive specs), so that's not right.

Thanks for finishing out the test fixes!  I expect I'll have time to review the patch later tonight.
, {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12579693/HDFS-4705.2.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 6 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.qjournal.client.TestQuorumJournalManager

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/4280//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/4280//console

This message is automatically generated., +1 for the patch.  The code looks good.  I tested successfully on both Mac and Windows.

{quote}
-1 core tests. The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:
org.apache.hadoop.hdfs.qjournal.client.TestQuorumJournalManager
{quote}

This appears to be unrelated.  I couldn't repro.  Perhaps it's a flaky test?

Ivan, thank you very much for tracking down these test failures and putting together a complete patch.
, Thanks Chris for the investigation and review!

TestQuorumJournalManager appears to be a flaky test, I haven't changed anything in this area. Test fails in the shutdown step which ties back to HDFS-4643. Will take a look orthogonally to this Jira., +1 for the patch. I will commit it soon., I committed the patch to trunk.

Thank you Ivan. Thank you Chris for the reviews and valuable comments., Integrated in Hadoop-trunk-Commit #3684 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/3684/])
    HDFS-4705. Address HDFS test failures on Windows because of invalid dfs.namenode.name.dir. Contributed by Ivan Mitic. (Revision 1476610)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1476610
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAllowFormat.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestCheckpoint.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNNThroughputBenchmark.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameEditsConfigs.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestValidateConfigurationSettings.java
, Integrated in Hadoop-Yarn-trunk #197 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/197/])
    HDFS-4705. Address HDFS test failures on Windows because of invalid dfs.namenode.name.dir. Contributed by Ivan Mitic. (Revision 1476610)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1476610
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAllowFormat.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestCheckpoint.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNNThroughputBenchmark.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameEditsConfigs.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestValidateConfigurationSettings.java
, Integrated in Hadoop-Hdfs-trunk #1386 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1386/])
    HDFS-4705. Address HDFS test failures on Windows because of invalid dfs.namenode.name.dir. Contributed by Ivan Mitic. (Revision 1476610)

     Result = FAILURE
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1476610
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAllowFormat.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestCheckpoint.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNNThroughputBenchmark.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameEditsConfigs.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestValidateConfigurationSettings.java
, Integrated in Hadoop-Mapreduce-trunk #1413 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1413/])
    HDFS-4705. Address HDFS test failures on Windows because of invalid dfs.namenode.name.dir. Contributed by Ivan Mitic. (Revision 1476610)

     Result = SUCCESS
suresh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1476610
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestAllowFormat.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestCheckpoint.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestFSNamesystem.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNNThroughputBenchmark.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestNameEditsConfigs.java
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/TestValidateConfigurationSettings.java
, I merged the patch to branch-2.]