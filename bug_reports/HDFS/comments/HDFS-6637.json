[I wonder if we can remove the configuration "dfs.ha.standby.checkpoints" and always generate StandbyCheckpointer thread in SBN. Any thoughts?
 , Add a simple patch to solve this issue. The thought is that for a HA cluster, we still make use of StandbyCheckpointer to generate the rollback image even if "dfs.ha.standby.checkpoints" is configured false. But this thread will only be spawned for rolling upgrade and will exit after the rollback image is generated. Could someone help to review the patch? Thanks very much., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12656693/HDFS-6637.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover
                  org.apache.hadoop.hdfs.TestRollingUpgrade
                  org.apache.hadoop.hdfs.server.namenode.ha.TestDFSUpgradeWithHA

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7397//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7397//console

This message is automatically generated., update the patch to fix unit test failures., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12656706/HDFS-6637.patch.1
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:red}-1 core tests{color}.  The patch failed these unit tests in hadoop-hdfs-project/hadoop-hdfs:

                  org.apache.hadoop.hdfs.server.namenode.ha.TestPipelinesFailover

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/7399//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/7399//console

This message is automatically generated., This patch looks unrelated to the failed test. It was reported at HDFS-6694., I think, the configuration "dfs.ha.standby.checkpoints" added to disable the checkpoints for tests, since the HTTP ports could be specified ephemeral. In this case Standby NN will not know the Active NN's http port to do checkpoint.

See the comment in MiniDFSCluster
{code}      // In an HA cluster, in order for the StandbyNode to perform checkpoints,
      // it needs to know the HTTP port of the Active. So, if ephemeral ports
      // are chosen, disable checkpoints for the test.
      if (!nnTopology.allHttpPortsSpecified() &&
          nnTopology.isHA()) {
        LOG.info("MiniDFSCluster disabling checkpointing in the Standby node " +
            "since no HTTP ports have been specified.");
        conf.setBoolean(DFS_HA_STANDBY_CHECKPOINTS_KEY, false);
      }{code}

Even though I agree that user also could disable checkpointing, but I don't think this is possible in real HA cluster. What user will do with checkpoints disabled ..? ;), Thanks very much for the comments, Vinay. The explanation make sense. Thanks very much., Thanks [~dian.fu], Making this as invalid due to invalid (Un-real) configuration.

Feel free to re-open if you feel this has to be fixed.]