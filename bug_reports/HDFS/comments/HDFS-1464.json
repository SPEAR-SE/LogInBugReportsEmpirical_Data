[Simple patch that restores the pre-HDFS-1080 behavior for the case when the configured address is wildcard.

No unit test included because this section of code is very difficult to isolate in a true unit test (it uses static calls to TransferFsImage, etc), and in minicluster environments the configs are all set properly., HDFS-1080 discussed that the change was backwards compatible and aimed at making more of the configs explicit rather than implicit, which can lead to confusion (which lead to the bug).  Specifically, in the situation that caused HDFS-1080, where the SNN was ip aliased and the config value not specified, this patch would leave us in the same state as before 1080 - using the default value, which is incorrect under security, and not able to transfer the merged image.  For this reason, I am reluctant to let this go in its current form.  This distinction only makes a difference under security; maybe that should be considered., In that case, maybe under security we should add a check similar to what's done in SecondaryNameNode.getInfoServer() -- if security is on, we should fail to _start_ the 2NN with a wildcard bind address. If security is off, we don't need to be so picky., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12457612/hdfs-1464.txt
  against trunk revision 1051669.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://hudson.apache.org/hudson/job/PreCommit-HDFS-Build/19//console

This message is automatically generated., Hi Jakob. I looked at this some more, and have to say I disagree.

While I think it's important to respect the configured hostname for the purposes of security on multihomed hosts, this is by far the minority of clusters. The patch attached here does not break that -- if you configure a true hostname it will be respected. This patch just fixes the issue for the vast majority of users who (a) don't have security enabled, and (b) don't have multiple hostnames on a machine. As trunk stands today, those users will be unable to run a secondary namenode without adding configuration, and this configuration isn't documented anywhere in the setup guides, etc.

Another way of saying this is:
- before HDFS-1080, with default config, the most common configuration would work correctly, but multihomed hosts might fail at checkpoint-time.
- after HDFS-1080, with default config, *all* 2NNs will fail at checkpoint time.

So I see this as a backwards step introduced by that patch. I apologize for not noticing it when it went in.

I think our general policy has been (and should be) that we should endeavor to minimize the amount of configuration necessary for new users while at the same time allowing advanced users to do what they need. The patch attached here achieves those goals.

If I update the patch to include a check that if security is on, the 2NN will not start with 0.0.0.0, would you be OK with this change?, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12457612/hdfs-1464.txt
  against trunk revision 1072023.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    -1 patch.  The patch command could not apply the patch.

Console output: https://hudson.apache.org/hudson/job/PreCommit-HDFS-Build/185//console

This message is automatically generated., Hey Jakob,

Would a patch that makes the 2NN not start with 0.0.0.0 if security is on be acceptable to you?

Thanks,
Eli, This was fixed by HDFS-3404.]