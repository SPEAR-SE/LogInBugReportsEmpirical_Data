[From RFC 3986, section 2.2. "Reserved Characters",

{noformat}
   If data for a URI component would conflict with a reserved
   character's purpose as a delimiter, then the conflicting data must be
   percent-encoded before the URI is formed.

      reserved    = gen-delims / sub-delims
      gen-delims  = ":" / "/" / "?" / "#" / "[" / "]" / "@"
      sub-delims  = "!" / "$" / "&" / "'" / "(" / ")"
                  / "*" / "+" / "," / ";" / "="
{noformat}, Here is the initial proposal for starting the discussion
- Make the server-side to work with both the old (non-compliant) and the new (compliant) clients.
- Make the client-side to work either in the standard mode or in the compatibility mode based on a config variable.
- The default config can be flipped to the standard mode after some number of releases.
- Optionally, at some point in the future (after 2 major version changes?), remove the compatibility mode.
, I keep meaning to update this JIRA...

We can do both. REST allows for incompatible changes by increasing the version number in the URL.  Fixed clients should try v2.  If it fails, the fixed client knows that the server hasn't been upgraded so falls back to the broken v1 protocol.  Broken clients won't know the difference because they'll only try v1., There has been no movement on this for a while. We'll need to move it out of scope for 2.8.0 soon. Let me know if you disagree., Not much going on here for a long time, dropping from 2.8.0.

Not putting any target-version either anymore, let's target this depending on when there is patch activity.]