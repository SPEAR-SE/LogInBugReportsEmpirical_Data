[stack trace

{code}
[sf-startdaemon-debug]         java.lang.NullPointerException
[sf-startdaemon-debug]  at org.apache.hadoop.hdfs.server.datanode.DataNode.handshake(DataNode.java:443)
[sf-startdaemon-debug]  at org.apache.hadoop.hdfs.server.datanode.DataNode.startDataNode(DataNode.java:302)

{code}

The line at fault is 
{code}
if( ! nsInfo.getBuildVersion().equals( Storage.getBuildVersion() )) 
{code} 
At a guess, the getBuildVersion() value is null, which implies the handshaking failed; the datanode was still handshaking when shouldRun was set to false, it stopped spinning trying to talk to the namenode, and instead of checking for shouldRun==true and bailing out, it assumed the handshake information had been correctly received., Also, at this point in datanode startup, the nameNodeAddr value hasnt been assigned to the static field {{DataNode.nameNodeAddr = nameNodeAddr;}}, so getNameNodeAddr() returns null; not so good for logging/error messages that exist in this method., Patch checks for shouldRun flag and throws an IOE if set while waiting for a datanode; the alternate option would be an InterruptedIOException. 

No tests. To test this you'd need to bring up a datanode without any namenode, try and interrupt it. , -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12429761/HDFS-165.patch
  against trunk revision 897068.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/176/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/176/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/176/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/176/console

This message is automatically generated., Interesting. A test failed. {{org.apache.hadoop.hdfs.server.namenode.TestNodeCount.testNodeCount }}

{code}
java.lang.NullPointerException
	at org.apache.hadoop.hdfs.server.namenode.BlockManager.countNodes(BlockManager.java:1395)
	at org.apache.hadoop.hdfs.server.namenode.TestNodeCount.testNodeCount(TestNodeCount.java:119)
{code}

The line in question is looking at nodes in the blocks map, and is failing because one of the nodes in the map is null. 
{code}
    Iterator<DatanodeDescriptor> nodeIter = blocksMap.nodeIterator(b);
    Collection<DatanodeDescriptor> nodesCorrupt = corruptReplicas.getNodes(b);
    while (nodeIter.hasNext()) {
      DatanodeDescriptor node = nodeIter.next();
      if ((nodesCorrupt != null) && (nodesCorrupt.contains(node))) {
        corrupt++;
      } else if (node.isDecommissionInProgress() || node.isDecommissioned()) {   //HERE
        count++;
      } else {
        Collection<Block> blocksExcess =
          excessReplicateMap.get(node.getStorageID());
        if (blocksExcess != null && blocksExcess.contains(b)) {
          excess++;
        } else {
          live++;
        }
{code}

I'll do some work to see if this can be replicated, but if not, it could be some race condition that hudson is seeing -datanode setup is failing and the blocksmap is containing a null entry. Which is a separate problem, one we've now found, One problem could be in BlocksMap.NodeIterator. It's hasNext() method checks the next entry isn't null. But what if between the hasNext() call and the next() operation, the map changes and an entry goes away? In that situation, the node returned from next() will be null. 

Filing a new bug..., resubmitting to see if the same test fails., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12429761/HDFS-165.patch
  against trunk revision 897068.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/179/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/179/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/179/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/179/console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12429761/HDFS-165.patch
  against trunk revision 897068.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/180/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/180/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/180/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h5.grid.sp2.yahoo.net/180/console

This message is automatically generated., Every time I submit this it fails in a different test. Hmm., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12429761/HDFS-165.patch
  against trunk revision 903098.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/103/testReport/
Findbugs warnings: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/103/artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Checkstyle results: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/103/artifact/trunk/build/test/checkstyle-errors.html
Console output: http://hudson.zones.apache.org/hudson/job/Hdfs-Patch-h2.grid.sp2.yahoo.net/103/console

This message is automatically generated., Steve, I don't understand the scenario, when you get NPE. 
{{shouldRun}} is set to {{flase}} in {{DataNode.shutdown()}} and {{DataNode.handleDiskError()}} only. And {{handshake()}} is called during data-node start up, when it is still single threaded. The only way I can see to get your NPE is to call {{shutdown()}} in a separate thread before the data-node started. But in order to call {{shutdown()}} you need an instance of DataNode, and creating DataNode instance is not possible without a successful {{handshake()}}.
Could you please clarify., OK, if that's the case then its only possible to recreate this condition with my Service lifecycle -in which case it should go into that patch- or if someone has subclassed the datanode and has somehow started a thread while the super() class is starting up. I will merge it into the lifecycle patch rather than split out (as I have done here), bq. I will merge [this patch] into the lifecycle patch rather than split out (as I have done here) 
Steve, I read this to mean this patch is no longer necessary and can be closed as WontFix?  Does this sound good to you?
, yes]