[[~shahrs87], FYI, you should use target-version for your intention. Fix-version is set at commit time. I'm fixing this for now., [~vinodkv]: Apologies for the trouble. Will take care next time., Moving out all non-critical / non-blocker issues that didn't make it out of 2.7.2 into 2.7.3., Looking at the source code, I think there is a mismatch of understanding between webui and fsck.

In webui, the missing blocks actually means the number of blocks that have no replicas at all. (that is, the number of corrupt blocks); whereas in fsck, it shows the difference between the expected replication and the available replications.

More specifically, the webui gets the number from {{FSNamesystem#getMissingBlocksCount}}, and this in turn calls {{LowRedundancyBlocks#getCorruptBlockSize}}.

I think that to fix it, {{FSNamesystem#getMissingBlocksCount}} should not return the number from {{LowRedundancyBlocks#getCorruptBlockSize}}. Instead, it should derive the number in the same way as in {{NamenodeFsck#collectBlocksSummary}}., Or, instead of calling it as "missing blocks" on the web UI, it should be called "corrupt blocks".
I'd like to hear comments from web UI experts, [~wheat9] could you comment? Thanks., I think it is a good to call it either way, just need to make sure things are consistent :-), Agree that we should try to make fsck and webUI consistent Note that isn't just for webUI, it is also about the MissingBlocks metrics which the webUI is based on.

For this scenario, it is debatable if the block should be marked as missing, it isn't uncommon for admins to decommission multiple nodes across racks, which means all 3 replica nodes will be in decommissioning state. We don't want to mark the block as missing during this transition window, as it might trigger unnecessary alert. Actually after HDFS-7933, fsck includes decommissioning nodes and won't mark it as missing anymore. Want to check again?




, Thanks [~mingma] for mentioning HDFS-7933.
bq. For this scenario, it is debatable if the block should be marked as missing, it isn't uncommon for admins to decommission multiple nodes across racks, which means all 3 replica nodes will be in decommissioning state.
I agree the block should not be marked as missing if all the replica are on DecommissionING nodes.
But we *should* mark the block as missing if all the replicas are on DecommissionED nodes since we can take the Decommissioned node out of rotation anytime.
We have seen multiple cases in which all the replicas are in Decommissioned nodes.
Any thoughts ?, bq. Actually after HDFS-7933, fsck includes decommissioning nodes and won't mark it as missing anymore.
It includes the decommissioned nodes also.
See the code below.
{code:title=NamenodeFsck.java|borderStyle=solid}
  int totalReplicas = liveReplicas + decommissionedReplicas +
          decommissioningReplicas;
..
..
 if (totalReplicas == 0) {
        report.append(" MISSING!");
        res.addMissing(block.toString(), block.getNumBytes());
        missing++;
        missize += block.getNumBytes();
 }
{code}, [~mingma]: any thoughts ?
, Thanks [~shahrs87]. Your suggestion to distinguish decommissioned from decommissioning makes sense. Given liveness state is separated from admin state, it appears the suggestion is "a block should be considered missing if and only if {{live, normal}} + {{live, decommissioning}} == 0". The live attribute is implicit given fsck only gets the list of live replicas; but it might be useful to call it out.

If that is the case, both fsck and jmx metrics need to be changed. Also depending on how you interpret it, it seems more like incompatible change than just bug fix. That will decide if we want to fix it only in trunk., Thanks a lot [~mingma] for your valuable suggestions.
Let me close this jira as duplicate since this jira was created not to alert the block as missing if all the replicas are on Decommissioning node.
This work is done via HDFS-7933.
I will create a new jira to alert a block as missing if all the replicas are on Decommissioned nodes., bq.  I will create a new jira to alert a block as missing if all the replicas are on Decommissioned nodes.
Created HDFS-10495, Linked HDFS-10495.]