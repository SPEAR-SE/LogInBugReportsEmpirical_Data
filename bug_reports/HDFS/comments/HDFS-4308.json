[From my inspection it seems that both getAdditionalBlock and abandonBlock write the blocks and path to editsLog twice. Both functions make a call to removeBlock, followed by persistBlocks. In fact, the only 2 removeBlock calls in FSNamesystem are both directly followed by persistBlocks.

removeBlock calls a legacy function which issues an AddOp to the editsLog, writing the path, repl, mtime, atime, blocksize, blocks, perms, clientName, and clientMachine. The call to persistBlocks writes only the path and blocks. It appears to me that persistBlocks is the optimal way to go and therefore removeBlocks should be altered.

We can optimize a little here by removing the call to write to the editsLog inside removeBlock.

The 1-liner I will upload shortly removes the writing to the editsLog for removeBlock. This is justified because it will be persisted by the call to persistBlocks. 

I have ran the Hadoop-HDFS tests following my patch and they all passed., Right, {{dir.removeBlock()}} is called only in two places in both cases followed by {{persistBlock()}}, so there is no need to journal in {{removeBlock()}}. The patch fixes the problem. 
I think we can also make {{removeBlock()}} void rather returning boolean, since it always returns true and nobody checks it., Here is the new patch with Konstantin's suggestion.

It compiles successfully; have not ran the tests though. Let's see if Jenkins will like it., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12562612/HDFS-4308.patch
  against trunk revision .

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:red}-1 tests included{color}.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  The javadoc tool did not generate any warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:green}+1 findbugs{color}.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

    {color:green}+1 contrib tests{color}.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/3703//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/3703//console

This message is automatically generated., No new tests are needed because this fix is covered by existing tests., +1, I just committed this. Thank you Plamen., Integrated in Hadoop-Hdfs-trunk #1269 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/1269/])
    HDFS-4308. addBlock() should persist file blocks once. Contributed by Plamen Jeliazkov. (Revision 1426700)

     Result = FAILURE
shv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1426700
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
, Integrated in Hadoop-Mapreduce-trunk #1299 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/1299/])
    HDFS-4308. addBlock() should persist file blocks once. Contributed by Plamen Jeliazkov. (Revision 1426700)

     Result = SUCCESS
shv : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1426700
Files : 
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* /hadoop/common/trunk/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java
]