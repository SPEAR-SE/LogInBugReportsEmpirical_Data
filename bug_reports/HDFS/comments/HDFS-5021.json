[Hey Colin,

These cases are covered by our existing symlink tests, and I wrote the below test program using the Java API directly which seemed to work okay:

{code}
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FSDataOutputStream;

public class TestBadFileMaker {
  public static void main(String... args) throws Exception {
    Configuration conf = new Configuration();
    final FileSystem fs = FileSystem.get(conf);

    System.out.println("Supports symlinks: " + fs.supportsSymlinks());
    Path target = new Path("/target");
    Path link = new Path("/link");
    Path newlink = new Path("/newlink");

    fs.createSymlink(target, link, false);
    System.out.println("link: " + fs.getFileLinkStatus(link).getPath());
    System.out.println("link target: " + fs.getLinkTarget(link));

    fs.rename(link, newlink);
    System.out.println("newlink: " + fs.getFileLinkStatus(newlink).getPath());
    System.out.println("newlink target: " + fs.getLinkTarget(newlink));
    fs.delete(newlink);

    fs.getFileLinkStatus(newlink);
  }
}
{code}

Do you think it's just an issue with the FsShell? Things definitely behave wonky there., This was actually being caused by HADOOP-9817.  That bug led to the FSShell resolving all symlinks, which in turn meant that {{hadoop fs -rm}} would remove the target file, not the symlink itself.]