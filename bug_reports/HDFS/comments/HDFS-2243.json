[Hi Eric. HDFS-918 addresses part of this problem. HDFS-941 also addresses it substantially for the HBase workload., You might want to look at HDFS-941 "Datanode xceiver protocol should allow reuse of a connection"., BTW, you may want to also look into SocketIOWithTimeout - I think we're doing some dumb things with the way we use epoll, etc. I've tried to hack it out but couldn't quite get the NIO magic right. Do you see epoll_wait taking a lot of systime?, Last week I tried the patch called "hdfs-918-branch20-append.patch" but it didn't seem to help this problem, I am using what seems to be the recommended hdfs for hbase 0.90.3. I can upgrade to hdfs 0.22, it should work with hbase 0.90.3, right?

I will upload my screen shot from perf, it was doing 1000tps at that point. I have not seen epoll taking time, at least on that testbed., perf top of datanode at 1000 tps. This was using hdfs from the branch-0.20-append., Here is a thread pool patch based on branch-0.20-append, since that is what is documented to work with HBase 0.90.3. I reused the dfs.datanode.max.xcievers to indicate the thread pool size, which is probably cheating.
I tested this patch with YCSB workloadb on 3 AMD and 2 Intel systems I have handy. It gives at least equal if not better response times and reduces cpu consumption of the datanode process by 5-10% depending on the system and load.
Is this a viable approach? If so, I'll forward port it to 0.23 and I can retest if I can find out which HBase works with 0.23 hdfs., Hey Eric. This is reasonable, but I think the gains will be zeroed out in trunk by HDFS-941 -- since we keepalive a single TCP connection, only one thread will be created when the connection is first accepted.

You can run HBase trunk with HDFS trunk using HBASE-4221 - I was able to run a 25 node cluster last week for some benchmarks., OK, I will try that and re-profile it., Great. Feel free to ping me on IRC (tlipcon in #hadoop or #hbase) if you have any issues getting it up and running., Here is the patch merged into trunk. I switched to use j.u.c.ThreadPoolExecutor which seemed a better way then my first version. In YCSB I don't see any performance difference over the trunk, it just uses the available Java API to avoid launching our own threads., The HDFS-2243-0.23-110909.patch should apply to trunk, -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12494031/HDFS-2243-0.23-110909.txt
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.server.blockmanagement.TestHost2NodesMap
                  org.apache.hadoop.hdfs.TestDfsOverAvroRpc

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1260//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1260//console

This message is automatically generated., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12494802/HDFS-2243-0.23-110909.patch
  against trunk revision .

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    -1 core tests.  The patch failed these unit tests:
                  org.apache.hadoop.hdfs.TestDfsOverAvroRpc
                  org.apache.hadoop.hdfs.server.blockmanagement.TestHost2NodesMap

    +1 contrib tests.  The patch passed contrib unit tests.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/1261//testReport/
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/1261//console

This message is automatically generated., Doesn't show any benefit after HDFS-941 fix, closing., Dropping fix-version from 'non-fixed' (didn't have code-fixes) JIRAs.]