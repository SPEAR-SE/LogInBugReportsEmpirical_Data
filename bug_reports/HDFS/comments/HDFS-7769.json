[h7769_20150210.patch: uses CLITEST_DATA/file instead., {color:red}-1 overall{color}.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12697850/h7769_20150210.patch
  against trunk revision 3f5431a.

    {color:green}+1 @author{color}.  The patch does not contain any @author tags.

    {color:green}+1 tests included{color}.  The patch appears to include 1 new or modified test files.

    {color:green}+1 javac{color}.  The applied patch does not increase the total number of javac compiler warnings.

    {color:green}+1 javadoc{color}.  There were no new javadoc warning messages.

    {color:green}+1 eclipse:eclipse{color}.  The patch built with eclipse:eclipse.

    {color:red}-1 findbugs{color}.  The patch appears to introduce 1 new Findbugs (version 2.0.3) warnings.

    {color:green}+1 release audit{color}.  The applied patch does not increase the total number of release audit warnings.

    {color:green}+1 core tests{color}.  The patch passed unit tests in hadoop-hdfs-project/hadoop-hdfs.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/9520//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/9520//artifact/patchprocess/newPatchFindbugsWarningshadoop-hdfs.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/9520//console

This message is automatically generated., Thanks for posting the fix for this, [~szetszwo]! I noticed that too after run the TestHDFSCLI test locally. 
The patch looks good to me.  +1 (non-binding)., Xiaoyu, thanks for the review.

h7769_20150210b.patch: replaces tabs with spaces.

I am going to commit the patch without waiting for Jenkins again., I have committed this., SUCCESS: Integrated in Hadoop-trunk-Commit #7066 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7066/])
HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir. (szetszwo: rev 7c6b6547eeed110e1a842e503bfd33afe04fa814)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
, This should have been reviewed by a committer., FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #101 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/101/])
HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir. (szetszwo: rev 7c6b6547eeed110e1a842e503bfd33afe04fa814)
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk #835 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/835/])
HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir. (szetszwo: rev 7c6b6547eeed110e1a842e503bfd33afe04fa814)
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2033 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2033/])
HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir. (szetszwo: rev 7c6b6547eeed110e1a842e503bfd33afe04fa814)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #102 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/102/])
HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir. (szetszwo: rev 7c6b6547eeed110e1a842e503bfd33afe04fa814)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
, FAILURE: Integrated in Hadoop-Mapreduce-trunk #2052 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2052/])
HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir. (szetszwo: rev 7c6b6547eeed110e1a842e503bfd33afe04fa814)
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, > This should have been reviewed by a committer.

[~shv], as discussed in HADOOP-8248, the bylaws is not very clear about whether a simple patch can be reviewed by a non-committer and then a committer, who may also be the contributor, commits it.  Do you agree that this is a simple patch in the first place?, Sorry you are referring to a 3-year old issue, discussing what was supposed to happen on hadoop lists rather than jira, but never did...
The rule in Hadoop has always been one committer's +1 for regular changes.

I do see this change is simple and useful. And just for the record here I am +1 on it.
But the rule is the rule. If you want to change it take it to the lists., > But the rule is the rule. If you want to change it take it to the lists.

Sure, the rule is the rule.  But the rule is not very clear as today., The rule has been always clear for me. It may not be clearly stated in the bylaws. But then bylaws is not a tax law, where you look for loopholes.
I really don't understand what you are implying, like you don't have the highest number of Hadoop committers per square feet of office space at your work place...
Xiaoyu, this is not to discourage you from reviewing patches. You did everything right!, > The rule has been always clear for me. It may not be clearly stated in the bylaws. But then bylaws is not a tax law, where you look for loopholes.

No, it is not looking for loopholes.  I do believe that we allow trivial patches being reviewed by anyone, not necessarily committers.  Otherwise, it does not quite make sense for non-committers reviewing patches.  As least, no one has incentive to ask a non-committers to reviewing a patch., SUCCESS: Integrated in Hadoop-Hdfs-trunk-Java8 #97 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/97/])
HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir. (szetszwo: rev 7c6b6547eeed110e1a842e503bfd33afe04fa814)
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, [~chris.douglas] you probably have an opinion on whether a patch can be committed solely based on a non-committer plus one.
I always thought a commiter's plus one is *required*, while Nicholas implies *any* plus one would do, citing our bylaws, which are vague on the matter., As written, the bylaws require a +1 from a committer. It's been enforced fairly strictly in MapReduce/YARN. The language in the bylaws is pretty direct:

bq. Consensus approval of active committers, but with a minimum of one +1

The ambiguity is whether the contributor can self-approve patches, or (unwritten) +1 a trivial patch with any reviewer's approval? I'd say no, if only to avoid arguments over what constitutes a "trivial" patch.

bq. it does not quite make sense for non-committers reviewing patches. As least, no one has incentive to ask a non-committers to reviewing a patch.

Non-committers review patches to provide feedback on them and signal that the patch has already had a pair of eyes on it. I'm more likely to +1 a patch if someone else has done a pass on it and provided good feedback.

Requiring another committer to review also blocks development on "dead" areas of the codebase with only a single maintainer. Those either need to move out of the project or find new committers to help maintain it., > The ambiguity is whether ...

At least we agree that there is an ambiguity.  I think no one care about the ambiguity since, as [~shv] mentioned, HADOOP-8248 has been around for 3 years.  Why not clarify the bylaws?

> Requiring another committer to review also blocks development on "dead" areas of the codebase with only a single maintainer. Those either need to move out of the project or find new committers to help maintain it.

I did see in some cases that a committer asked a non-committer to post a patch with some very detailed code advise, then acted as a reviewer and then committed the patch.  Or two or more committers blindly +1'ed on each others patches, even patches with trivial problems.  Not sure how to avoid these problems.

Indeed, I hope that we could revise the bylaws, especially for the development branch case.  Does it count if a committer who has contributed to a development branch +1 on the merge vote?, bq. At least we agree that there is an ambiguity.

Not really, but if it's in the way of development then we should change it.

With respect to committers approving their own work or failing to perform review: those are not problems that can be solved by changing the bylaws. Ask them politely to be more rigorous.

bq. I hope that we could revise the bylaws, especially for the development branch case.

Rules for branches are open. Anyone with commit rights on the branch can push without review, but generating a lot of code without oversight makes a merge vote less likely to succeed. IIRC this is part of the template we use to invite branch committers.

bq. Does it count if a committer who has contributed to a development branch +1 on the merge vote?

Yes. If three committers participated in the branch, then it has plenty of oversight. By the time a vote is called, there should be general consensus. A -1 preventing the merge should be rare. I don't think it's happened, yet., Reopen for reverting the patch., Reverted from trunk and branch-2., I seems not the right person to work on this JIRA.  Removed the files I attached.  Here is my suggested fix.
{code}
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml b/hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
index 05546a2..0c1083c 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
@@ -16483,8 +16483,8 @@
         <command>-fs NAMENODE -mkdir -p /user/USERNAME/dir1</command>
         <command>-fs NAMENODE -copyFromLocal CLITEST_DATA/data15bytes /user/USERNAME/dir1</command>
         <command>-fs NAMENODE -copyFromLocal CLITEST_DATA/data30bytes /user/USERNAME/dir1</command>
-        <command>-fs NAMENODE -getmerge /user/USERNAME/dir1 data</command>
-        <command>-cat data</command>
+        <command>-fs NAMENODE -getmerge /user/USERNAME/dir1 CLITEST_DATA/file</command>
+        <command>-cat CLITEST_DATA/file</command>
       </test-commands>
       <cleanup-commands>
         <command>-fs NAMENODE -rm -r /user/USERNAME</command>
{code}
If anyone want to work on this, please feel free to assign this JIRA to yourself.  I am happy to review your patch., FAILURE: Integrated in Hadoop-trunk-Commit #7217 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7217/])
Revert "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (szetszwo: rev 2954e654677bd1807d22fae7becc4464d9eff00b)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #117 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/117/])
Revert "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (szetszwo: rev 2954e654677bd1807d22fae7becc4464d9eff00b)
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Yarn-trunk #851 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/851/])
Revert "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (szetszwo: rev 2954e654677bd1807d22fae7becc4464d9eff00b)
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2049 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2049/])
Revert "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (szetszwo: rev 2954e654677bd1807d22fae7becc4464d9eff00b)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #108 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/108/])
Revert "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (szetszwo: rev 2954e654677bd1807d22fae7becc4464d9eff00b)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #117 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/117/])
Revert "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (szetszwo: rev 2954e654677bd1807d22fae7becc4464d9eff00b)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2067 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2067/])
Revert "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (szetszwo: rev 2954e654677bd1807d22fae7becc4464d9eff00b)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
, I did also +1 HDFS-7769. The patch was good.
The post commit discussion was not about you, Nichloas, or the quality of the patch., I just recommitted this. Thank you Nicholas., FAILURE: Integrated in Hadoop-trunk-Commit #7222 (See [https://builds.apache.org/job/Hadoop-trunk-Commit/7222/])
recommit "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (shv: rev cf51ff2fe8f0f08060dd1a9d96dac0c032277f77)
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Yarn-trunk-Java8 #118 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk-Java8/118/])
recommit "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (shv: rev cf51ff2fe8f0f08060dd1a9d96dac0c032277f77)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
, SUCCESS: Integrated in Hadoop-Yarn-trunk #852 (See [https://builds.apache.org/job/Hadoop-Yarn-trunk/852/])
recommit "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (shv: rev cf51ff2fe8f0f08060dd1a9d96dac0c032277f77)
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Mapreduce-trunk-Java8 #118 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk-Java8/118/])
recommit "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (shv: rev cf51ff2fe8f0f08060dd1a9d96dac0c032277f77)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
, FAILURE: Integrated in Hadoop-Hdfs-trunk #2050 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/2050/])
recommit "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (shv: rev cf51ff2fe8f0f08060dd1a9d96dac0c032277f77)
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, FAILURE: Integrated in Hadoop-Hdfs-trunk-Java8 #109 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Java8/109/])
recommit "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (shv: rev cf51ff2fe8f0f08060dd1a9d96dac0c032277f77)
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
, SUCCESS: Integrated in Hadoop-Mapreduce-trunk #2068 (See [https://builds.apache.org/job/Hadoop-Mapreduce-trunk/2068/])
recommit "HDFS-7769. TestHDFSCLI should not create files in hdfs project root dir." (shv: rev cf51ff2fe8f0f08060dd1a9d96dac0c032277f77)
* hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt
* hadoop-hdfs-project/hadoop-hdfs/src/test/resources/testHDFSConf.xml
, > ... It's been enforced fairly strictly in MapReduce/YARN. ...

It seems not the case.  It seems that MAPREDUCE-1893 and MAPREDUCE-1124 were committed without a committer +1, and MAPREDUCE-1615 and MAPREDUCE-1454 were committed without being reviewed.  The list definitely is not exhaustive.
]