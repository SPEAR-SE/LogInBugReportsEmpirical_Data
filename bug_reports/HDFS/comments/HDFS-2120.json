[Attaching a patch to check if the build versions and layout versions are the same when NN tries to register() the DN.

Before this patch, it was possible for a DN and NN to connect to each other with different build versions because DN only checked for build versions when it did a handshake() with the NN. 

No new tests added because it seemed extremely difficult to add a manual test to verify this.

The way I verified this is as follows:
1. start DN, NN
2. stop NN and change buildVersion by manually changing saveVersion.sh file. 
3. start NN.
4. When NN comes up and registers with DN, it keeps rejecting because of the version difference (this was not happening before)., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12485661/HDFS-2120.patch
  against trunk revision 1143147.

    +1 @author.  The patch does not contain any @author tags.

    -1 tests included.  The patch doesn't appear to include any new or modified tests.
                        Please justify why no new tests are needed for this patch.
                        Also please list what manual steps were performed to verify this patch.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/895//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/895//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/895//console

This message is automatically generated., Hey John, patch looks pretty good. A few small comments:

# Make sure there's a space between "if" and the open parenthesis.
# No need for the space after "!" in "if (! nsver.equals(stver))"
# I think the variable names "nsver" and "stver" could be more descriptive. Or, at least, they should be camel cased (capitalize the "v".)
# Would it really be so difficult to write a test for this? Seems like it wouldn't be too tough to use Mockito to mock out "bpNamenode.versionRequest()" to return some object with a different version number from the actual., Thanks a lot Aaron for reviewing this patch. Attaching a new patch taking your suggestion into consideration.

> 
> # Make sure there's a space between "if" and the open parenthesis.
done
> # No need for the space after "!" in "if (! nsver.equals(stver))"
done
> # I think the variable names "nsver" and "stver" could be more descriptive. 
> Or, at least, they should be camel cased (capitalize the "v".)
Changed to nsBuildVer and stBuildVer to repesent that they are namespace and storage build versions.
> # Would it really be so difficult to write a test for this? Seems like it 
> wouldn't be too tough to use Mockito to mock out "bpNamenode.versionRequest()" 
> to return some object with a different version number from the actual.
Done. Thanks Ravi for helping me with this., Latest patch looks much better, John. Thanks for addressing my comments. A few more small comments:

# Need license header on the newly-added file.
# Indent the "@Test" annotation.
# When testing that some method throws a specific exception, I prefer to structure it like so:
{code}
try {
  methodWhichThrows();
  fail("method didn't throw as expected!");
} catch (ExpectedException e) {
  LOG.info("Got expected exception", e);
}
{code}

Once these are addressed, I'll commit this pending Hudson results., Thanks Aaron for the quick response!
Added license header, indented @Test and modified {try, catch}., There's no need for the "catch (Exception e) { fail(...) }". If a test method throws an exception, that test will fail., That is true., Latest patch looks good to me. +1 pending Hudson results., -1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12486367/HDFS-2120-2.patch
  against trunk revision 1145843.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    -1 release audit.  The applied patch generated 1 release audit warnings (more than the trunk's current 0 warnings).

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/918//testReport/
Release audit warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/918//artifact/trunk/patchprocess/patchReleaseAuditProblems.txt
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/918//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/918//console

This message is automatically generated., +1 overall.  Here are the results of testing the latest attachment 
  http://issues.apache.org/jira/secure/attachment/12486374/HDFS-2120-4.patch
  against trunk revision 1145843.

    +1 @author.  The patch does not contain any @author tags.

    +1 tests included.  The patch appears to include 3 new or modified tests.

    +1 javadoc.  The javadoc tool did not generate any warning messages.

    +1 javac.  The applied patch does not increase the total number of javac compiler warnings.

    +1 findbugs.  The patch does not introduce any new Findbugs (version 1.3.9) warnings.

    +1 release audit.  The applied patch does not increase the total number of release audit warnings.

    +1 core tests.  The patch passed core unit tests.

    +1 contrib tests.  The patch passed contrib unit tests.

    +1 system test framework.  The patch passed system test framework compile.

Test results: https://builds.apache.org/job/PreCommit-HDFS-Build/920//testReport/
Findbugs warnings: https://builds.apache.org/job/PreCommit-HDFS-Build/920//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html
Console output: https://builds.apache.org/job/PreCommit-HDFS-Build/920//console

This message is automatically generated., I've just committed this. Thanks a lot, John., Integrated in Hadoop-Hdfs-trunk-Commit #786 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk-Commit/786/])
    HDFS-2120. on reconnect, DN can connect to NN even with different source versions. (John George via atm)

atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1146516
Files : 
* /hadoop/common/trunk/hdfs/CHANGES.txt
* /hadoop/common/trunk/hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
* /hadoop/common/trunk/hdfs/src/test/hdfs/org/apache/hadoop/hdfs/server/datanode/TestDatanodeRegister.java
* /hadoop/common/trunk/hdfs/src/java/org/apache/hadoop/hdfs/server/common/IncorrectVersionException.java
, Integrated in Hadoop-Hdfs-trunk #724 (See [https://builds.apache.org/job/Hadoop-Hdfs-trunk/724/])
    HDFS-2120. on reconnect, DN can connect to NN even with different source versions. (John George via atm)

atm : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1146516
Files : 
* /hadoop/common/trunk/hdfs/CHANGES.txt
* /hadoop/common/trunk/hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
* /hadoop/common/trunk/hdfs/src/test/hdfs/org/apache/hadoop/hdfs/server/datanode/TestDatanodeRegister.java
* /hadoop/common/trunk/hdfs/src/java/org/apache/hadoop/hdfs/server/common/IncorrectVersionException.java
]