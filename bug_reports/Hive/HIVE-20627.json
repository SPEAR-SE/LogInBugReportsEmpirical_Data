{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sankarh&avatarId=29945",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sankarh&avatarId=29945",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sankarh&avatarId=29945",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sankarh&avatarId=29945"
            },
            "displayName": "Sankar Hariappan",
            "key": "sankarh",
            "name": "sankarh",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sankarh",
            "timeZone": "Asia/Kolkata"
        },
        "components": [
            {
                "description": "Tracks issues related to HiveServer2",
                "id": "12320408",
                "name": "HiveServer2",
                "self": "https://issues.apache.org/jira/rest/api/2/component/12320408"
            },
            {
                "description": "Transaction management and ACID",
                "id": "12322671",
                "name": "Transactions",
                "self": "https://issues.apache.org/jira/rest/api/2/component/12322671"
            }
        ],
        "created": "2018-09-24T08:53:39.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sankarh&avatarId=29945",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sankarh&avatarId=29945",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sankarh&avatarId=29945",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sankarh&avatarId=29945"
            },
            "displayName": "Sankar Hariappan",
            "key": "sankarh",
            "name": "sankarh",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sankarh",
            "timeZone": "Asia/Kolkata"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2018-09-24T11:35:41.917+0000",
        "customfield_12310222": "1_*:*_6_*:*_11076674_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_6_*:*_321428312",
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "1.0",
        "customfield_12310320": [{
            "archived": false,
            "id": "12343343",
            "name": "4.0.0",
            "released": false,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12343343"
        }],
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i3yepj:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 03 11:42:47 UTC 2018",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "When multiple async queries are executed from same session, it leads to multiple async query execution DAGs share the same Hive object which is set by caller for all threads. In case of loading dynamic partitions, it creates MoveTask which re-creates the Hive object and closes the shared Hive object which causes metastore connection issues for other async execution thread who still access it. This is also seen if ReplDumpTask and ReplLoadTask are part of the DAG.\r\n\r\n*Call Stack:*\r\n{code:java}\r\n2018-09-16T04:38:04,280 ERROR [load-dynamic-partitions-7]: metadata.Hive (Hive.java:call(2436)) - Exception when loading partition with parameters partPath=hdfs://mycluster/warehouse/tablespace/managed/hive/tbl_3bcvvdubni/.hive-staging_hive_2018-09-16_04-35-50_708_7776079613819042057-1147/-ext-10000/age=55, table=tbl_3bcvvdubni, partSpec={age=55}, loadFileType=KEEP_EXISTING, listBucketingLevel=0, isAcid=true, hasFollowingStatsTask=true\r\norg.apache.hadoop.hive.ql.lockmgr.LockException: Error communicating with the metastore\r\nat org.apache.hadoop.hive.ql.lockmgr.DbTxnManager.getValidWriteIds(DbTxnManager.java:714) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.ql.io.AcidUtils.getTableValidWriteIdListWithTxnList(AcidUtils.java:1791) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.ql.io.AcidUtils.getTableSnapshot(AcidUtils.java:1756) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.ql.io.AcidUtils.getTableSnapshot(AcidUtils.java:1714) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.ql.metadata.Hive.loadPartition(Hive.java:1976) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.ql.metadata.Hive$5.call(Hive.java:2415) [hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.ql.metadata.Hive$5.call(Hive.java:2406) [hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_171]\r\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_171]\r\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_171]\r\nat java.lang.Thread.run(Thread.java:748) [?:1.8.0_171]\r\nCaused by: org.apache.thrift.protocol.TProtocolException: Required field 'validTxnList' is unset! Struct:GetValidWriteIdsRequest(fullTableNames:[default.tbl_3bcvvdubni], validTxnList:null)\r\nat org.apache.hadoop.hive.metastore.api.GetValidWriteIdsRequest.validate(GetValidWriteIdsRequest.java:396) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_valid_write_ids_args.validate(ThriftHiveMetastore.java) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_valid_write_ids_args$get_valid_write_ids_argsStandardScheme.write(ThriftHiveMetastore.java) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_valid_write_ids_args$get_valid_write_ids_argsStandardScheme.write(ThriftHiveMetastore.java) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$get_valid_write_ids_args.write(ThriftHiveMetastore.java) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.thrift.TServiceClient.sendBase(TServiceClient.java:71) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.thrift.TServiceClient.sendBase(TServiceClient.java:62) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.send_get_valid_write_ids(ThriftHiveMetastore.java:5443) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.get_valid_write_ids(ThriftHiveMetastore.java:5435) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.getValidWriteIds(HiveMetaStoreClient.java:2589) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source) ~[?:?]\r\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_171]\r\nat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_171]\r\nat org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.invoke(RetryingMetaStoreClient.java:212) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat com.sun.proxy.$Proxy57.getValidWriteIds(Unknown Source) ~[?:?]\r\nat sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source) ~[?:?]\r\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_171]\r\nat java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_171]\r\nat org.apache.hadoop.hive.metastore.HiveMetaStoreClient$SynchronizedHandler.invoke(HiveMetaStoreClient.java:2934) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\nat com.sun.proxy.$Proxy57.getValidWriteIds(Unknown Source) ~[?:?]\r\nat org.apache.hadoop.hive.ql.lockmgr.DbTxnManager.getValidWriteIds(DbTxnManager.java:712) ~[hive-exec-3.1.0.3.0.1.0-184.jar:3.1.0.3.0.1.0-184]\r\n... 10 more{code}\r\n*Root cause:*\r\n For Async query execution from SQLOperation.runInternal, we set the Thread local Hive object for all the child threads as parentHive (parentSession.getSessionHive())\r\n{code:java}\r\n@Override\r\n public void run() {\r\n PrivilegedExceptionAction<Object> doAsAction = new PrivilegedExceptionAction<Object>() {\r\n @Override\r\n public Object run() throws HiveSQLException {\r\n Hive.set(parentHive); // Setting parentHive for all async operations.\r\n // TODO: can this result in cross-thread reuse of session state?\r\n SessionState.setCurrentSessionState(parentSessionState);\r\n PerfLogger.setPerfLogger(parentPerfLogger);\r\n LogUtils.registerLoggingContext(queryState.getConf());\r\n try {\r\n if (asyncPrepare) {\r\n prepare(queryState);\r\n }\r\n runQuery();\r\n } catch (HiveSQLException e) {\r\n // TODO: why do we invent our own error path op top of the one from Future.get?\r\n setOperationException(e);\r\n LOG.error(\"Error running hive query: \", e);\r\n } finally {\r\n LogUtils.unregisterLoggingContext();\r\n }\r\n return null;\r\n }\r\n };\r\n{code}\r\nNow, when async execution in progress and if one of the thread re-creates the Hive object, it closes the parentHive object first which impacts other threads using it and hence conf object it refers too gets cleaned up and hence we get null for VALID_TXNS_KEY value.\r\n{code:java}\r\nprivate static Hive create(HiveConf c, boolean needsRefresh, Hive db, boolean doRegisterAllFns)\r\n throws HiveException {\r\n if (db != null) {\r\n LOG.debug(\"Creating new db. db = \" + db + \", needsRefresh = \" + needsRefresh +\r\n \", db.isCurrentUserOwner = \" + db.isCurrentUserOwner());\r\n db.close();\r\n }\r\n closeCurrent();\r\n if (c == null) {\r\n c = createHiveConf();\r\n }\r\n c.set(\"fs.scheme.class\", \"dfs\");\r\n Hive newdb = new Hive(c, doRegisterAllFns);\r\n hiveDB.set(newdb);\r\n return newdb;\r\n }\r\n{code}\r\n*Fix:*\r\n We shouldn't clean the old Hive object if it is shared by multiple threads. Shall use a flag to know this.\r\n\r\n*Memory leak issue:*\r\n Memory leak is found if one of the threads from Hive.loadDynamicPartitions throw exception. rawStoreMap is used to store rawStore objects which has to be cleaned. In this case, it is populated only in success flow but if there are exceptions, it is not and hence there is a leak.\r\n{code:java}\r\nfutures.add(pool.submit(new Callable<Void>() {\r\n @Override\r\n public Void call() throws Exception {\r\n try {\r\n // move file would require session details (needCopy() invokes SessionState.get)\r\n SessionState.setCurrentSessionState(parentSession);\r\n LOG.info(\"New loading path = \" + partPath + \" with partSpec \" + fullPartSpec);\r\n\r\n// load the partition\r\n Partition newPartition = loadPartition(partPath, tbl, fullPartSpec, loadFileType,\r\n true, false, numLB > 0, false, isAcid, hasFollowingStatsTask, writeId, stmtId,\r\n isInsertOverwrite);\r\n partitionsMap.put(fullPartSpec, newPartition);\r\n\r\nif (inPlaceEligible) {\r\n synchronized (ps) {\r\n InPlaceUpdate.rePositionCursor(ps);\r\n partitionsLoaded.incrementAndGet();\r\n InPlaceUpdate.reprintLine(ps, \"Loaded : \" + partitionsLoaded.get() + \"/\"\r\n + partsToLoad + \" partitions.\");\r\n }\r\n }\r\n // Add embedded rawstore, so we can cleanup later to avoid memory leak\r\n if (getMSC().isLocalMetaStore()) {\r\n if (!rawStoreMap.containsKey(Thread.currentThread().getId())) {\r\n rawStoreMap.put(Thread.currentThread().getId(), HiveMetaStore.HMSHandler.getRawStore());\r\n }\r\n }\r\n return null;\r\n } catch (Exception t) {\r\n }\r\n{code}",
        "duedate": null,
        "environment": null,
        "fixVersions": [{
            "archived": false,
            "id": "12343343",
            "name": "4.0.0",
            "released": false,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12343343"
        }],
        "issuelinks": [{
            "id": "12544753",
            "outwardIssue": {
                "fields": {
                    "issuetype": {
                        "avatarId": 21133,
                        "description": "A problem which impairs or prevents the functions of the product.",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                        "id": "1",
                        "name": "Bug",
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                        "subtask": false
                    },
                    "priority": {
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "id": "3",
                        "name": "Major",
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                    },
                    "status": {
                        "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                        "id": "5",
                        "name": "Resolved",
                        "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                        "statusCategory": {
                            "colorName": "green",
                            "id": 3,
                            "key": "done",
                            "name": "Done",
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                        }
                    },
                    "summary": "Async query execution can potentially fail if shared sessionHive is closed by master thread."
                },
                "id": "13189174",
                "key": "HIVE-20682",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/13189174"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12544753",
            "type": {
                "id": "10030",
                "inward": "is related to",
                "name": "Reference",
                "outward": "relates to",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
            }
        }],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": ["pull-request-available"],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935"
            },
            "id": "12310843",
            "key": "HIVE",
            "name": "Hive",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310843"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sankarh&avatarId=29945",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sankarh&avatarId=29945",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sankarh&avatarId=29945",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sankarh&avatarId=29945"
            },
            "displayName": "Sankar Hariappan",
            "key": "sankarh",
            "name": "sankarh",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sankarh",
            "timeZone": "Asia/Kolkata"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2018-09-28T05:15:24.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Concurrent async queries intermittently fails with LockException and cause memory leak.",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2018-10-03T14:04:09.000+0000",
        "versions": [{
            "archived": false,
            "id": "12343343",
            "name": "4.0.0",
            "released": false,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12343343"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-20627/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-20627/watchers",
            "watchCount": 6
        },
        "workratio": -1
    },
    "id": "13186951",
    "key": "HIVE-20627",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13186951"
}