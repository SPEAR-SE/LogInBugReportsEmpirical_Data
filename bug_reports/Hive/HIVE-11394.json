{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046"
            },
            "displayName": "Matt McCline",
            "key": "mmccline",
            "name": "mmccline",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mmccline",
            "timeZone": "America/Chicago"
        },
        "components": [{
            "id": "12325007",
            "name": "Hive",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12325007"
        }],
        "created": "2015-07-28T23:03:12.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046"
            },
            "displayName": "Matt McCline",
            "key": "mmccline",
            "name": "mmccline",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mmccline",
            "timeZone": "America/Chicago"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2016-10-04T07:34:09.756+0000",
        "customfield_12310222": "1_*:*_1_*:*_37437461319_*|*_3_*:*_16_*:*_1075847_*|*_4_*:*_2_*:*_5802113442_*|*_5_*:*_3_*:*_332702862_*|*_10002_*:*_18_*:*_7168095006",
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "20.0",
        "customfield_12310320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i2i1lj:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Sep 28 19:57:02 UTC 2018",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "Add detail to the EXPLAIN output showing why a Map and Reduce work is not vectorized.\n\nNew syntax is: EXPLAIN VECTORIZATION \\[ONLY\\] \\[SUMMARY|OPERATOR|EXPRESSION|DETAIL\\]\n\nThe ONLY option suppresses most non-vectorization elements.\n\nSUMMARY shows vectorization information for the PLAN (is vectorization enabled) and a summary of Map and Reduce work.\n\nOPERATOR shows vectorization information for operators.  E.g. Filter Vectorization.  It includes all information of SUMMARY, too.\n\nEXPRESSION shows vectorization information for expressions.  E.g. predicateExpression.  It includes all information of SUMMARY and OPERATOR, too.\n\nDETAIL shows very vectorization information.\nIt includes all information of SUMMARY, OPERATOR, and EXPRESSION too.\n\nThe optional clause defaults are not ONLY and SUMMARY.\n\n---------------------------------------------------------------------------------------------------\n\nHere are some examples:\n\nEXPLAIN VECTORIZATION example:\n\n(Note the PLAN VECTORIZATION, Map Vectorization, Reduce Vectorization sections)\n\nSince SUMMARY is the default, it is the output of EXPLAIN VECTORIZATION SUMMARY.\n\nUnder Reducer 3\u2019s \"Reduce Vectorization:\" you\u2019ll see\nnotVectorizedReason: Aggregation Function UDF avg parameter expression for GROUPBY operator: Data type struct<count:bigint,sum:double,input:int> of Column\\[VALUE._col2\\] not supported\n\nFor Reducer 2\u2019s \"Reduce Vectorization:\" you\u2019ll see \"groupByVectorOutput:\": \"false\" which says a node has a GROUP BY with an AVG or some other aggregator that outputs a non-PRIMITIVE type (e.g. STRUCT) and all downstream operators are row-mode.  I.e. not vector output.\n\nIf \"usesVectorUDFAdaptor:\": \"false\" were true, it would say there was at least one vectorized expression is using VectorUDFAdaptor.\n\nAnd, \"allNative:\": \"false\" will be true when all operators are native.  Today, GROUP BY and FILE SINK are not native.  MAP JOIN and REDUCE SINK are conditionally native.  FILTER and SELECT are native.\n\n{code}\nPLAN VECTORIZATION:\n  enabled: true\n  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 depends on stages: Stage-1\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n...\n      Edges:\n        Reducer 2 <- Map 1 (SIMPLE_EDGE)\n        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)\n...\n      Vertices:\n        Map 1 \n            Map Operator Tree:\n                TableScan\n                  alias: alltypesorc\n                  Statistics: Num rows: 12288 Data size: 36696 Basic stats: COMPLETE Column stats: COMPLETE\n                  Select Operator\n                    expressions: cint (type: int)\n                    outputColumnNames: cint\n                    Statistics: Num rows: 12288 Data size: 36696 Basic stats: COMPLETE Column stats: COMPLETE\n                    Group By Operator\n                      keys: cint (type: int)\n                      mode: hash\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 5775 Data size: 17248 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 5775 Data size: 17248 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized, llap\n            LLAP IO: all inputs\n            Map Vectorization:\n                enabled: true\n                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true\n                groupByVectorOutput: true\n                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat\n                allNative: false\n                usesVectorUDFAdaptor: false\n                vectorized: true\n        Reducer 2 \n            Execution mode: vectorized, llap\n            Reduce Vectorization:\n                enabled: true\n                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true\n                groupByVectorOutput: false\n                allNative: false\n                usesVectorUDFAdaptor: false\n                vectorized: true\n            Reduce Operator Tree:\n              Group By Operator\n                keys: KEY._col0 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0\n                Statistics: Num rows: 5775 Data size: 17248 Basic stats: COMPLETE Column stats: COMPLETE\n                Group By Operator\n                  aggregations: sum(_col0), count(_col0), avg(_col0), std(_col0)\n                  mode: hash\n                  outputColumnNames: _col0, _col1, _col2, _col3\n                  Statistics: Num rows: 1 Data size: 172 Basic stats: COMPLETE Column stats: COMPLETE\n                  Reduce Output Operator\n                    sort order: \n                    Statistics: Num rows: 1 Data size: 172 Basic stats: COMPLETE Column stats: COMPLETE\n                    value expressions: _col0 (type: bigint), _col1 (type: bigint), _col2 (type: struct<count:bigint,sum:double,input:int>), _col3 (type: struct<count:bigint,sum:double,variance:double>)\n        Reducer 3 \n            Execution mode: llap\n            Reduce Vectorization:\n                enabled: true\n                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true\n                notVectorizedReason: Aggregation Function UDF avg parameter expression for GROUPBY operator: Data type struct<count:bigint,sum:double,input:int> of Column[VALUE._col2] not supported\n                vectorized: false\n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), count(VALUE._col1), avg(VALUE._col2), std(VALUE._col3)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3\n                Statistics: Num rows: 1 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE\n                File Output Operator\n                  compressed: false\n                  Statistics: Num rows: 1 Data size: 32 Basic stats: COMPLETE Column stats: COMPLETE\n                  table:\n                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat\n                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat\n                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n      Processor Tree:\n        ListSink \n{code}\n\n\nEXPLAIN VECTORIZATION OPERATOR\n\nNotice the added  TableScan Vectorization, Select Vectorization, Group By Vectorization, Map Join Vectorizatin, Reduce Sink Vectorization sections in this example.\n\nNotice the nativeConditionsMet detail on why Reduce Vectorization is native.\n\n{code}\nPLAN VECTORIZATION:\n  enabled: true\n  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 depends on stages: Stage-1\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n#### A masked pattern was here ####\n      Edges:\n        Map 2 <- Map 1 (BROADCAST_EDGE)\n        Reducer 3 <- Map 2 (SIMPLE_EDGE)\n#### A masked pattern was here ####\n      Vertices:\n        Map 1 \n            Map Operator Tree:\n                TableScan\n                  alias: a\n                  Statistics: Num rows: 3 Data size: 294 Basic stats: COMPLETE Column stats: NONE\n                  TableScan Vectorization:\n                      native: true\n                      projectedOutputColumns: [0, 1]\n                  Filter Operator\n                    Filter Vectorization:\n                        className: VectorFilterOperator\n                        native: true\npredicate: c2 is not null (type: boolean)\n                    Statistics: Num rows: 3 Data size: 294 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: c1 (type: int), c2 (type: char(10))\n                      outputColumnNames: _col0, _col1\n                      Select Vectorization:\n                          className: VectorSelectOperator\n                          native: true\n                          projectedOutputColumns: [0, 1]\n                      Statistics: Num rows: 3 Data size: 294 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: char(20))\n                        sort order: +\n                        Map-reduce partition columns: _col1 (type: char(20))\n                        Reduce Sink Vectorization:\n                            className: VectorReduceSinkStringOperator\n                            native: true\n                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, Not ACID UPDATE or DELETE IS true, No buckets IS true, No TopN IS true, Uniform Hash IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true\n                        Statistics: Num rows: 3 Data size: 294 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col0 (type: int)\n            Execution mode: vectorized, llap\n            LLAP IO: all inputs\n            Map Vectorization:\n                enabled: true\n                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true\n                groupByVectorOutput: true\n                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat\n                allNative: true\n                usesVectorUDFAdaptor: false\n                vectorized: true\n        Map 2 \n            Map Operator Tree:\n                TableScan\n                  alias: b\n                  Statistics: Num rows: 3 Data size: 324 Basic stats: COMPLETE Column stats: NONE\n                  TableScan Vectorization:\n                      native: true\n                      projectedOutputColumns: [0, 1]\n                  Filter Operator\n                    Filter Vectorization:\n                        className: VectorFilterOperator\n                        native: true\npredicate: c2 is not null (type: boolean)\n                    Statistics: Num rows: 3 Data size: 324 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: c1 (type: int), c2 (type: char(20))\n                      outputColumnNames: _col0, _col1\n                      Select Vectorization:\n                          className: VectorSelectOperator\n                          native: true\n                          projectedOutputColumns: [0, 1]\n                      Statistics: Num rows: 3 Data size: 324 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col1 (type: char(20))\n                          1 _col1 (type: char(20))\n                        Map Join Vectorization:\n                            className: VectorMapJoinInnerStringOperator\n                            native: true\n                            nativeConditionsMet: hive.vectorized.execution.mapjoin.native.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, One MapJoin Condition IS true, No nullsafe IS true, Supports Key Types IS true, Not empty key IS true, When Fast Hash Table, then requires no Hybrid Hash Join IS true, Small table vectorizes IS true\n                        outputColumnNames: _col0, _col1, _col2, _col3\n                        input vertices:\n                          0 Map 1\n                        Statistics: Num rows: 3 Data size: 323 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col0 (type: int)\n                          sort order: +\n                          Reduce Sink Vectorization:\n                              className: VectorReduceSinkOperator\n                              native: false\n                              nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, Not ACID UPDATE or DELETE IS true, No buckets IS true, No TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true\n                              nativeConditionsNotMet: Uniform Hash IS false\n                          Statistics: Num rows: 3 Data size: 323 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col1 (type: char(10)), _col2 (type: int), _col3 (type: char(20))\n            Execution mode: vectorized, llap\n            LLAP IO: all inputs\n            Map Vectorization:\n                enabled: true\n                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true\n                groupByVectorOutput: true\n                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat\n                allNative: false\n                usesVectorUDFAdaptor: false\n                vectorized: true\n        Reducer 3 \n            Execution mode: vectorized, llap\n            Reduce Vectorization:\n                enabled: true\n                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true\n                groupByVectorOutput: true\n                allNative: false\n                usesVectorUDFAdaptor: false\n                vectorized: true\n            Reduce Operator Tree:\n              Select Operator\n                expressions: KEY.reducesinkkey0 (type: int), VALUE._col0 (type: char(10)), VALUE._col1 (type: int), VALUE._col2 (type: char(20))\n                outputColumnNames: _col0, _col1, _col2, _col3\n                Select Vectorization:\n                    className: VectorSelectOperator\n                    native: true\n                    projectedOutputColumns: [0, 1, 2, 3]\n                Statistics: Num rows: 3 Data size: 323 Basic stats: COMPLETE Column stats: NONE\n                File Output Operator\n                  compressed: false\n                  File Sink Vectorization:\n                      className: VectorFileSinkOperator\n                      native: false\n                  Statistics: Num rows: 3 Data size: 323 Basic stats: COMPLETE Column stats: NONE\n                  table:\n                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat\n                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat\n                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n      Processor Tree:\n        ListSink\n {code}\n\nEXPLAIN VECTORIZATION EXPRESSION\n\nNotice the predicateExpression in this example.\n\n{code}\nPLAN VECTORIZATION:\n  enabled: true\n  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]\n\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 depends on stages: Stage-1\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n#### A masked pattern was here ####\n      Edges:\n        Reducer 2 <- Map 1 (SIMPLE_EDGE)\n#### A masked pattern was here ####\n      Vertices:\n        Map 1 \n            Map Operator Tree:\n                TableScan\n                  alias: vector_interval_2\n                  Statistics: Num rows: 2 Data size: 788 Basic stats: COMPLETE Column stats: NONE\n                  TableScan Vectorization:\n                      native: true\n                      projectedOutputColumns: [0, 1, 2, 3, 4, 5]\n                  Filter Operator\n                    Filter Vectorization:\n                        className: VectorFilterOperator\n                        native: true\n                        predicateExpression: FilterExprAndExpr(children: FilterTimestampScalarEqualTimestampColumn(val 2001-01-01 01:02:03.0, col 6)(children: DateColAddIntervalDayTimeScalar(col 1, val 0 01:02:03.000000000) -> 6:timestamp) -> boolean, FilterTimestampScalarNotEqualTimestampColumn(val 2001-01-01 01:02:03.0, col 6)(children: DateColAddIntervalDayTimeScalar(col 1, val 0 01:02:04.000000000) -> 6:timestamp) -> boolean, FilterTimestampScalarLessEqualTimestampColumn(val 2001-01-01 01:02:03.0, col 6)(children: DateColAddIntervalDayTimeScalar(col 1, val 0 01:02:03.000000000) -> 6:timestamp) -> boolean, FilterTimestampScalarLessTimestampColumn(val 2001-01-01 01:02:03.0, col 6)(children: DateColAddIntervalDayTimeScalar(col 1, val 0 01:02:04.000000000) -> 6:timestamp) -> boolean, FilterTimestampScalarGreaterEqualTimestampColumn(val 2001-01-01 01:02:03.0, col 6)(children: DateColSubtractIntervalDayTimeScalar(col 1, val 0 01:02:03.000000000) -> 6:timestamp) -> boolean, FilterTimestampScalarGreaterTimestampColumn(val 2001-01-01 01:02:03.0, col 6)(children: DateColSubtractIntervalDayTimeScalar(col 1, val 0 01:02:04.000000000) -> 6:timestamp) -> boolean, FilterTimestampColEqualTimestampScalar(col 6, val 2001-01-01 01:02:03.0)(children: DateColAddIntervalDayTimeScalar(col 1, val 0 01:02:03.000000000) -> 6:timestamp) -> boolean, FilterTimestampColNotEqualTimestampScalar(col 6, val 2001-01-01 01:02:03.0)(children: DateColAddIntervalDayTimeScalar(col 1, val 0 01:02:04.000000000) -> 6:timestamp) -> boolean, FilterTimestampColGreaterEqualTimestampScalar(col 6, val 2001-01-01 01:02:03.0)(children: DateColAddIntervalDayTimeScalar(col 1, val 0 01:02:03.000000000) -> 6:timestamp) -> boolean, FilterTimestampColGreaterTimestampScalar(col 6, val 2001-01-01 01:02:03.0)(children: DateColAddIntervalDayTimeScalar(col 1, val 0 01:02:04.000000000) -> 6:timestamp) -> boolean, FilterTimestampColLessEqualTimestampScalar(col 6, val 2001-01-01 01:02:03.0)(children: DateColSubtractIntervalDayTimeScalar(col 1, val 0 01:02:03.000000000) -> 6:timestamp) -> boolean, FilterTimestampColLessTimestampScalar(col 6, val 2001-01-01 01:02:03.0)(children: DateColSubtractIntervalDayTimeScalar(col 1, val 0 01:02:04.000000000) -> 6:timestamp) -> boolean, FilterTimestampColEqualTimestampColumn(col 0, col 6)(children: DateColAddIntervalDayTimeScalar(col 1, val 0 01:02:03.000000000) -> 6:timestamp) -> boolean, FilterTimestampColNotEqualTimestampColumn(col 0, col 6)(children: DateColAddIntervalDayTimeScalar(col 1, val 0 01:02:04.000000000) -> 6:timestamp) -> boolean, FilterTimestampColLessEqualTimestampColumn(col 0, col 6)(children: DateColAddIntervalDayTimeScalar(col 1, val 0 01:02:03.000000000) -> 6:timestamp) -> boolean, FilterTimestampColLessTimestampColumn(col 0, col 6)(children: DateColAddIntervalDayTimeScalar(col 1, val 0 01:02:04.000000000) -> 6:timestamp) -> boolean, FilterTimestampColGreaterEqualTimestampColumn(col 0, col 6)(children: DateColSubtractIntervalDayTimeScalar(col 1, val 0 01:02:03.000000000) -> 6:timestamp) -> boolean, FilterTimestampColGreaterTimestampColumn(col 0, col 6)(children: DateColSubtractIntervalDayTimeScalar(col 1, val 0 01:02:04.000000000) -> 6:timestamp) -> boolean) -> boolean\n                    predicate: ((2001-01-01 01:02:03.0 = (dt + 0 01:02:03.000000000)) and (2001-01-01 01:02:03.0 <> (dt + 0 01:02:04.000000000)) and (2001-01-01 01:02:03.0 <= (dt + 0 01:02:03.000000000)) and (2001-01-01 01:02:03.0 < (dt + 0 01:02:04.000000000)) and (2001-01-01 01:02:03.0 >= (dt - 0 01:02:03.000000000)) and (2001-01-01 01:02:03.0 > (dt - 0 01:02:04.000000000)) and ((dt + 0 01:02:03.000000000) = 2001-01-01 01:02:03.0) and ((dt + 0 01:02:04.000000000) <> 2001-01-01 01:02:03.0) and ((dt + 0 01:02:03.000000000) >= 2001-01-01 01:02:03.0) and ((dt + 0 01:02:04.000000000) > 2001-01-01 01:02:03.0) and ((dt - 0 01:02:03.000000000) <= 2001-01-01 01:02:03.0) and ((dt - 0 01:02:04.000000000) < 2001-01-01 01:02:03.0) and (ts = (dt + 0 01:02:03.000000000)) and (ts <> (dt + 0 01:02:04.000000000)) and (ts <= (dt + 0 01:02:03.000000000)) and (ts < (dt + 0 01:02:04.000000000)) and (ts >= (dt - 0 01:02:03.000000000)) and (ts > (dt - 0 01:02:04.000000000))) (type: boolean)\n                    Statistics: Num rows: 1 Data size: 394 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: ts (type: timestamp)\n                      outputColumnNames: _col0\n                      Select Vectorization:\n                          className: VectorSelectOperator\n                          native: true\n                          projectedOutputColumns: [0]\n                      Statistics: Num rows: 1 Data size: 394 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: timestamp)\n                        sort order: +\n                        Reduce Sink Vectorization:\n                            className: VectorReduceSinkOperator\n                            native: false\n                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, Not ACID UPDATE or DELETE IS true, No buckets IS true, No TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true\n                            nativeConditionsNotMet: Uniform Hash IS false\n                        Statistics: Num rows: 1 Data size: 394 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized, llap\n            LLAP IO: all inputs\n            Map Vectorization:\n                enabled: true\n                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true\n                groupByVectorOutput: true\n                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat\n                allNative: false\n                usesVectorUDFAdaptor: false\n                vectorized: true\n        Reducer 2 \n... \n{code}\n\n\nThe standard @Explain Annotation Type is used.  A new 'vectorization' annotation marks each new class and method.\n\nWorks for FORMATTED, like other non-vectorization EXPLAIN variations.\n",
        "duedate": null,
        "environment": null,
        "fixVersions": [{
            "archived": false,
            "id": "12340269",
            "name": "2.3.0",
            "releaseDate": "2017-07-18",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12340269"
        }],
        "issuelinks": [
            {
                "id": "12444596",
                "outwardIssue": {
                    "fields": {
                        "issuetype": {
                            "avatarId": 21133,
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "id": "1",
                            "name": "Bug",
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "subtask": false
                        },
                        "priority": {
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "id": "3",
                            "name": "Major",
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                        },
                        "status": {
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "id": "1",
                            "name": "Open",
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "statusCategory": {
                                "colorName": "blue-gray",
                                "id": 2,
                                "key": "new",
                                "name": "To Do",
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
                            }
                        },
                        "summary": "add option to explain optimizer(s) behavior"
                    },
                    "id": "12902183",
                    "key": "HIVE-12023",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12902183"
                },
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12444596",
                "type": {
                    "id": "10030",
                    "inward": "is related to",
                    "name": "Reference",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                }
            },
            {
                "id": "12535748",
                "outwardIssue": {
                    "fields": {
                        "issuetype": {
                            "avatarId": 21133,
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "id": "1",
                            "name": "Bug",
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "subtask": false
                        },
                        "priority": {
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "id": "3",
                            "name": "Major",
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                        },
                        "status": {
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "id": "6",
                            "name": "Closed",
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "statusCategory": {
                                "colorName": "green",
                                "id": 3,
                                "key": "done",
                                "name": "Done",
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                            }
                        },
                        "summary": "reenable orc_llap test"
                    },
                    "id": "13163994",
                    "key": "HIVE-19789",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13163994"
                },
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12535748",
                "type": {
                    "id": "12310050",
                    "inward": "is broken by",
                    "name": "Regression",
                    "outward": "breaks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310050"
                }
            }
        ],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "id": "2",
            "name": "Critical",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935"
            },
            "id": "12310843",
            "key": "HIVE",
            "name": "Hive",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310843"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmccline&avatarId=36046",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmccline&avatarId=36046",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmccline&avatarId=36046",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=mmccline&avatarId=36046"
            },
            "displayName": "Matt McCline",
            "key": "mmccline",
            "name": "mmccline",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mmccline",
            "timeZone": "America/Chicago"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2017-03-07T05:54:00.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Enhance EXPLAIN display for vectorization",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2018-09-28T19:57:02.000+0000",
        "versions": [],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-11394/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-11394/watchers",
            "watchCount": 12
        },
        "workratio": -1
    },
    "id": "12849787",
    "key": "HIVE-11394",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12849787"
}