{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [],
        "created": "2015-05-27T05:03:45.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "lovekesh bansal",
            "key": "lovekesh.bansal",
            "name": "lovekesh.bansal",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lovekesh.bansal",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": null,
        "customfield_12310222": null,
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i2f8on:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "2015-05-27 05:03:45.0",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "1. create external table platdev.table_target ( id INT, message String, state string, date string ) partitioned by (country string) row format delimited fields terminated by ',' stored as RCFILE location '/user/nikgupta/table_target' ;\n\n2. insert overwrite table platdev.table_target partition(country) select case when id=13 then 15 else id end,message,state,date,country from platdev.table_base2 where id between 13 and 16; \\n\"\n\nsay now my table is written by default using LazyBinaryColumnarSerDe and has the following data:\n15\tthirteen\tdelhi\t        2-12-2014\tindia\n14\tfourteen\tdelhi\t        1-1-2014\t        india\n15\tfifteen\tflorida\t1-1-2014\t        us\n16\tsixteen\tflorida\t2-12-2014\tus\n\nNow If I try to read the data with a mapreduce program, with map function as given below:\n\npublic void map(LongWritable key, BytesRefArrayWritable val, Context context)\n    throws IOException, InterruptedException {\n    \n    for (int i = 0; i < val.size(); i++) {\n     BytesRefWritable bytesRefread = val.get(i);\n     byte[] currentCell = Arrays.copyOfRange(bytesRefread.getData(), bytesRefread.getStart(), bytesRefread.getStart()+bytesRefread.getLength());\n     Text currentCellStr = new Text(currentCell);\n     System.out.println(\"rowText=\"+currentCellStr\t);\n    }\n    context.write(NullWritable.get(), bytes);\n   }\n\n\nand set  the following job configuration parameters:- \n\njob.setInputFormatClass(RCFileMapReduceInputFormat.class);\njob.setOutputFormatClass(RCFileMapReduceOutputFormat.class);\njobConf.setInt(RCFile.COLUMN_NUMBER_CONF_STR, 5)\n             \n\nThe output shown is as follows: (LazyBinaryColumnarSerDe)\nrowText=\u000f\nrowText=fifteen\nrowText=goa\nrowText=2-2-2222\nrowText=us\n\nBut exactly the same case using the (ColumnarSerDe) explicitly in the table definition would give the following output:\nrowText=\u000f1\nrowText=fifteen\nrowText=goa\nrowText=2-2-2222\nrowText=us\n\nPoint is that First column value is missing in the case of LazyBinaryColumnarSerDe.",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935"
            },
            "id": "12310843",
            "key": "HIVE",
            "name": "Hive",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310843"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "lovekesh bansal",
            "key": "lovekesh.bansal",
            "name": "lovekesh.bansal",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lovekesh.bansal",
            "timeZone": "Etc/UTC"
        },
        "resolution": null,
        "resolutiondate": null,
        "status": {
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "id": "1",
            "name": "Open",
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "statusCategory": {
                "colorName": "blue-gray",
                "id": 2,
                "key": "new",
                "name": "To Do",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2"
            }
        },
        "subtasks": [],
        "summary": "First column of a Hive table created with LazyBinaryColumnarSerDe is not read properly",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2015-05-27T05:06:26.000+0000",
        "versions": [],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-10830/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-10830/watchers",
            "watchCount": 1
        },
        "workratio": -1
    },
    "id": "12832959",
    "key": "HIVE-10830",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12832959"
}