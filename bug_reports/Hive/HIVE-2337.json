{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Charles Chen",
            "key": "charleschen",
            "name": "charleschen",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=charleschen",
            "timeZone": "America/Los_Angeles"
        },
        "components": [{
            "description": "Tracks issues dealing with query processing.",
            "id": "12312586",
            "name": "Query Processor",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12312586"
        }],
        "created": "2011-08-03T01:16:09.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Charles Chen",
            "key": "charleschen",
            "name": "charleschen",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=charleschen",
            "timeZone": "America/Los_Angeles"
        },
        "customfield_10010": null,
        "customfield_12310191": [{
            "id": "10343",
            "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10343",
            "value": "Reviewed"
        }],
        "customfield_12310192": null,
        "customfield_12310220": "2011-08-03T01:22:27.317+0000",
        "customfield_12310222": "10002_*:*_3_*:*_1797226525_*|*_1_*:*_3_*:*_802667101_*|*_5_*:*_1_*:*_0",
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "7.0",
        "customfield_12310320": null,
        "customfield_12310420": "35797",
        "customfield_12310920": "123818",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i0ljjz:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Sep 02 11:28:05 UTC 2011",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "The predicate pushdown filter is not applying left associativity of joins correctly in determining possible aliases for pushing predicates.\n\nIn hive.ql.ppd.OpProcFactory.JoinPPD.getQualifiedAliases, the criteria for pushing aliases is specified as:\n{noformat}\n    /**\n     * Figures out the aliases for whom it is safe to push predicates based on\n     * ANSI SQL semantics For inner join, all predicates for all aliases can be\n     * pushed For full outer join, none of the predicates can be pushed as that\n     * would limit the number of rows for join For left outer join, all the\n     * predicates on the left side aliases can be pushed up For right outer\n     * join, all the predicates on the right side aliases can be pushed up Joins\n     * chain containing both left and right outer joins are treated as full\n     * outer join. [...]\n     *\n     * @param op\n     *          Join Operator\n     * @param rr\n     *          Row resolver\n     * @return set of qualified aliases\n     */\n{noformat}\n\nSince hive joins are left associative, something like \"a RIGHT OUTER JOIN b LEFT OUTER JOIN cÂ INNER JOIN d\" should be interpreted as \"((a RIGHT OUTER JOIN b) LEFT OUTER JOIN c) INNER JOIN d\", so there would be cases where joins with both left and right outer joins can have aliases that can be pushed.  Here, aliases b and d are eligible to be pushed up while the current criteria provide that none are eligible.\n\nUsing:\n{noformat}\ncreate table t1 (id int, key string, value string);\ncreate table t2 (id int, key string, value string);\ncreate table t3 (id int, key string, value string);\ncreate table t4 (id int, key string, value string);\n{noformat}\n\nFor example, the query\n{noformat}\nexplain select * from t1 full outer join t2 on t1.id=t2.id join t3 on t2.id=t3.id where t3.id=20; \n{noformat}\ncurrently gives\n{noformat}\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        t1 \n          TableScan\n            alias: t1\n            Reduce Output Operator\n              key expressions:\n                    expr: id\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: id\n                    type: int\n              tag: 0\n              value expressions:\n                    expr: id\n                    type: int\n                    expr: key\n                    type: string\n                    expr: value\n                    type: string\n        t2 \n          TableScan\n            alias: t2\n            Reduce Output Operator\n              key expressions:\n                    expr: id\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: id\n                    type: int\n              tag: 1\n              value expressions:\n                    expr: id\n                    type: int\n                    expr: key\n                    type: string\n                    expr: value\n                    type: string\n        t3 \n          TableScan\n            alias: t3\n            Reduce Output Operator\n              key expressions:\n                    expr: id\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: id\n                    type: int\n              tag: 2\n              value expressions:\n                    expr: id\n                    type: int\n                    expr: key\n                    type: string\n                    expr: value\n                    type: string\n      Reduce Operator Tree:\n        Join Operator\n          condition map:\n               Outer Join 0 to 1\n               Inner Join 1 to 2\n          condition expressions:\n            0 {VALUE._col0} {VALUE._col1} {VALUE._col2}\n            1 {VALUE._col0} {VALUE._col1} {VALUE._col2}\n            2 {VALUE._col0} {VALUE._col1} {VALUE._col2}\n          handleSkewJoin: false\n          outputColumnNames: _col0, _col1, _col2, _col5, _col6, _col7, _col10, _col11, _col12\n          Filter Operator\n            predicate:\n                expr: (_col10 = 20)\n                type: boolean\n            Select Operator\n              expressions:\n                    expr: _col0\n                    type: int\n                    expr: _col1\n                    type: string\n                    expr: _col2\n                    type: string\n                    expr: _col5\n                    type: int\n                    expr: _col6\n                    type: string\n                    expr: _col7\n                    type: string\n                    expr: _col10\n                    type: int\n                    expr: _col11\n                    type: string\n                    expr: _col12\n                    type: string\n              outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8\n              File Output Operator\n                compressed: false\n                GlobalTableId: 0\n                table:\n                    input format: org.apache.hadoop.mapred.TextInputFormat\n                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n{noformat}\nwhile the correct behavior is to push the filter \"t3.id=20\" down:\n{noformat}\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 is a root stage\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Map Reduce\n      Alias -> Map Operator Tree:\n        t1 \n          TableScan\n            alias: t1\n            Reduce Output Operator\n              key expressions:\n                    expr: id\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: id\n                    type: int\n              tag: 0\n              value expressions:\n                    expr: id\n                    type: int\n                    expr: key\n                    type: string\n                    expr: value\n                    type: string\n        t2 \n          TableScan\n            alias: t2\n            Reduce Output Operator\n              key expressions:\n                    expr: id\n                    type: int\n              sort order: +\n              Map-reduce partition columns:\n                    expr: id\n                    type: int\n              tag: 1\n              value expressions:\n                    expr: id\n                    type: int\n                    expr: key\n                    type: string\n                    expr: value\n                    type: string\n        t3 \n          TableScan\n            alias: t3\n            Filter Operator\n              predicate:\n                  expr: (id = 20)\n                  type: boolean\n              Reduce Output Operator\n                key expressions:\n                      expr: id\n                      type: int\n                sort order: +\n                Map-reduce partition columns:\n                      expr: id\n                      type: int\n                tag: 2\n                value expressions:\n                      expr: id\n                      type: int\n                      expr: key\n                      type: string\n                      expr: value\n                      type: string\n      Reduce Operator Tree:\n        Join Operator\n          condition map:\n               Outer Join 0 to 1\n               Inner Join 1 to 2\n          condition expressions:\n            0 {VALUE._col0} {VALUE._col1} {VALUE._col2}\n            1 {VALUE._col0} {VALUE._col1} {VALUE._col2}\n            2 {VALUE._col0} {VALUE._col1} {VALUE._col2}\n          handleSkewJoin: false\n          outputColumnNames: _col0, _col1, _col2, _col5, _col6, _col7, _col10, _col11, _col12\n          Select Operator\n            expressions:\n                  expr: _col0\n                  type: int\n                  expr: _col1\n                  type: string\n                  expr: _col2\n                  type: string\n                  expr: _col5\n                  type: int\n                  expr: _col6\n                  type: string\n                  expr: _col7\n                  type: string\n                  expr: _col10\n                  type: int\n                  expr: _col11\n                  type: string\n                  expr: _col12\n                  type: string\n            outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8\n            File Output Operator\n              compressed: false\n              GlobalTableId: 0\n              table:\n                  input format: org.apache.hadoop.mapred.TextInputFormat\n                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n{noformat}\n\nThe current behavior is actually stranger than this: for a left outer join (similarly for a right outer join), hive finds the leftmost alias referred to in the *predicates* of left outer joins and rejects any alias to the right of it for pushdown.  So in this query the filter \"t2.id=20\" pushed down:\n{noformat}\nexplain select * from t1 join t2 on (t1.id=t2.id) left outer join t3 on (t2.id=t3.id) where t2.id=20;\n{noformat}\nwhile it isn't here:\n{noformat}\nexplain select * from t1 join t2 on (t1.id=t2.id) left outer join t3 on (t1.id=t3.id) where t2.id=20;\n{noformat}",
        "duedate": null,
        "environment": null,
        "fixVersions": [{
            "archived": false,
            "description": "released",
            "id": "12316178",
            "name": "0.8.0",
            "releaseDate": "2011-12-16",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12316178"
        }],
        "issuelinks": [
            {
                "id": "12341973",
                "outwardIssue": {
                    "fields": {
                        "issuetype": {
                            "avatarId": 21140,
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "id": "4",
                            "name": "Improvement",
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "subtask": false
                        },
                        "priority": {
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "id": "3",
                            "name": "Major",
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                        },
                        "status": {
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "id": "6",
                            "name": "Closed",
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "statusCategory": {
                                "colorName": "green",
                                "id": 3,
                                "key": "done",
                                "name": "Done",
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                            }
                        },
                        "summary": "recognize transitivity of predicates on join keys"
                    },
                    "id": "12498567",
                    "key": "HIVE-1989",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12498567"
                },
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12341973",
                "type": {
                    "id": "10032",
                    "inward": "is blocked by",
                    "name": "Blocker",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                }
            },
            {
                "id": "12380038",
                "outwardIssue": {
                    "fields": {
                        "issuetype": {
                            "avatarId": 21141,
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "id": "2",
                            "name": "New Feature",
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "subtask": false
                        },
                        "priority": {
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "id": "3",
                            "name": "Major",
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                        },
                        "status": {
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "id": "6",
                            "name": "Closed",
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "statusCategory": {
                                "colorName": "green",
                                "id": 3,
                                "key": "done",
                                "name": "Done",
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                            }
                        },
                        "summary": "Implement predicate push down for hive queries"
                    },
                    "id": "12414282",
                    "key": "HIVE-279",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12414282"
                },
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12380038",
                "type": {
                    "id": "10030",
                    "inward": "is related to",
                    "name": "Reference",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                }
            }
        ],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935"
            },
            "id": "12310843",
            "key": "HIVE",
            "name": "Hive",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310843"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Charles Chen",
            "key": "charleschen",
            "name": "charleschen",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=charleschen",
            "timeZone": "America/Los_Angeles"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2011-09-02T03:27:43.000+0000",
        "status": {
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "id": "6",
            "name": "Closed",
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Predicate pushdown erroneously conservative with outer joins",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2013-12-16T11:38:19.000+0000",
        "versions": [],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-2337/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-2337/watchers",
            "watchCount": 1
        },
        "workratio": -1
    },
    "id": "12517731",
    "key": "HIVE-2337",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12517731"
}