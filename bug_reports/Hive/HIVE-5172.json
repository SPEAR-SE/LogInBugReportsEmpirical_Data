{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": null,
        "components": [{
            "description": "Tracks issue dealing with metastore.",
            "id": "12312584",
            "name": "Metastore",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12312584"
        }],
        "created": "2013-08-29T21:36:57.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Ashwin Agate",
            "key": "agateaaa",
            "name": "agateaaa",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=agateaaa",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2013-08-31T01:30:53.206+0000",
        "customfield_12310222": null,
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "1.0",
        "customfield_12310320": null,
        "customfield_12310420": "346138",
        "customfield_12310920": "346439",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i1notj:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Oct 22 15:34:25 UTC 2013",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "We are running into frequent problem using HCatalog 0.4.1 (Hive Metastore Server 0.9) where we get connection reset or connection timeout errors on the client and NullPointerException in TUGIBasedProcessor on the server. \n\n\n{code}\n\nhive client logs:\n=================\n\norg.apache.thrift.transport.TTransportException: java.net.SocketTimeoutException: Read timed out\nat org.apache.thrift.transport.TIOStreamTransport.read(TIOStreamTransport.java:129)\nat org.apache.thrift.transport.TTransport.readAll(TTransport.java:84)\nat org.apache.thrift.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:378)\nat org.apache.thrift.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:297)\nat org.apache.thrift.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:204)\nat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:69)\nat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.recv_set_ugi(ThriftHiveMetastore.java:2136)\nat org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Client.set_ugi(ThriftHiveMetastore.java:2122)\nat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.openStore(HiveMetaStoreClient.java:286)\nat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.open(HiveMetaStoreClient.java:197)\nat org.apache.hadoop.hive.metastore.HiveMetaStoreClient.<init>(HiveMetaStoreClient.java:157)\nat org.apache.hadoop.hive.ql.metadata.Hive.createMetaStoreClient(Hive.java:2092)\nat org.apache.hadoop.hive.ql.metadata.Hive.getMSC(Hive.java:2102)\nat org.apache.hadoop.hive.ql.metadata.Hive.getTable(Hive.java:888)\nat org.apache.hadoop.hive.ql.metadata.Hive.getTable(Hive.java:830)\nat org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.getMetaData(SemanticAnalyzer.java:954)\nat org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.analyzeInternal(SemanticAnalyzer.java:7524)\nat org.apache.hadoop.hive.ql.parse.BaseSemanticAnalyzer.analyze(BaseSemanticAnalyzer.java:243)\nat org.apache.hadoop.hive.ql.Driver.compile(Driver.java:431)\nat org.apache.hadoop.hive.ql.Driver.compile(Driver.java:336)\nat org.apache.hadoop.hive.ql.Driver.run(Driver.java:909)\nat org.apache.hadoop.hive.cli.CliDriver.processLocalCmd(CliDriver.java:258)\nat org.apache.hadoop.hive.cli.CliDriver.processCmd(CliDriver.java:215)\nat org.apache.hadoop.hive.cli.CliDriver.processLine(CliDriver.java:406)\nat org.apache.hadoop.hive.cli.CliDriver.processLine(CliDriver.java:341)\nat org.apache.hadoop.hive.cli.CliDriver.run(CliDriver.java:642)\nat org.apache.hadoop.hive.cli.CliDriver.main(CliDriver.java:557)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\nat java.lang.reflect.Method.invoke(Method.java:597)\nat org.apache.hadoop.util.RunJar.main(RunJar.java:156)\nCaused by: java.net.SocketTimeoutException: Read timed out\nat java.net.SocketInputStream.socketRead0(Native Method)\nat java.net.SocketInputStream.read(SocketInputStream.java:129)\nat org.apache.thrift.transport.TIOStreamTransport.read(TIOStreamTransport.java:127)\n... 31 more\n{code}\n\n{code}\n\nhive metastore server logs:\n===============================\n\n2013-07-26 06:34:52,853 ERROR server.TThreadPoolServer (TThreadPoolServer.java:run(182)) - Error occurred during processing of message.\njava.lang.NullPointerException\n        at org.apache.hadoop.hive.metastore.TUGIBasedProcessor.setIpAddress(TUGIBasedProcessor.java:183)\n        at org.apache.hadoop.hive.metastore.TUGIBasedProcessor.process(TUGIBasedProcessor.java:79)\n        at org.apache.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:176)\nat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\nat java.lang.Thread.run(Thread.java:662)\n{code}\n\nAdding some extra debug log messages in TUGIBasedProcessor, noticed that the TUGIContainingTransport is null which results in NullPointerException on the server.\n\nFurther drilling into TUGIContainingTransport noticed that getTransport() returns a null which causes the above \nerror. \n\nFurther corelating with GC logs observed that that error always hits when the CMS GC has just kicked in \n(but does not happen after every GC)\n\n\n\nPut some debugging code in TUGIContainingTransport.getTransport() and I tracked it down to \n\n{code}\n@Override\npublic TUGIContainingTransport getTransport(TTransport trans) {\n\n\u2002\u2002\u2002\u2002\u2002\u2002// UGI information is not available at connection setup time, it will be set later\n\u2002\u2002\u2002\u2002\u2002\u2002// via set_ugi() rpc.\n\u2002\u2002\u2002\u2002\u2002\u2002transMap.putIfAbsent(trans, new TUGIContainingTransport(trans));\n\n\u2002\u2002\u2002\u2002\u2002\u2002//return transMap.get(trans); //<-change\n\n      TUGIContainingTransport retTrans = transMap.get(trans);\n\n      if ( retTrans == null ) {\n             LOGGER.error (\"cannot find transport that was in map !!\")\n\t     return retTrans;\n       }  else {\n             LOGGER.debug (\"found transport in map\")\n             return retTrans;    \n       }\n}\n{code}\n\nWhen we run this in our test environment, see that we run into the problem just after GC runs,\nand \"cannot find transport that was in the map!!\" message gets logged.\n\nCould the GC be collecting entries from transMap, just before the we get it \n\nTried a minor change which seems to work\n\n{code}\npublic TUGIContainingTransport getTransport(TTransport trans) {\n\n   TUGIContainingTransport tugiTrans = transMap.get(trans);\n\n    if ( tugiTrans == null ) {\n\u2002\u2002\u2002\u2002\u2002\u2002// UGI information is not available at connection setup time, it will be set later\n\u2002\u2002\u2002\u2002\u2002\u2002// via set_ugi() rpc.\n       tugiTrans = new TUGIContainingTransport(trans); //get a new TUGIContainingTransport\n\u2002\u2002\u2002\u2002\u2002  \u2002transMap.putIfAbsent(trans, tugiTrans);\n    }\n   return tugiTrans;\n}\n{code}\n\nMy questions for hive and  thrift experts\n\n1.) Do we need to use a ConcurrentMap\n{code}\nConcurrentMap<TTransport, TUGIContainingTransport> transMap = new MapMaker().weakKeys().weakValues().makeMap();\n{code}\nIt does use == to compare keys (which might be the problem), also in this case we cant rely on the trans to be always there in the transMap, even after a put, so in that case change above probably makes sense\n\n2.) Is it better idea to use WeakHashMap with WeakReference value instead ? (was looking at org.apache.thrift.transport.TSaslServerTransport, especially change made by THRIFT-1468 as an example)\n\ne.g.\n{code}\nprivate static Map<TTransport, WeakReference<TUGIContainingTransport>> transMap = Collections.synchronizedMap(new WeakHashMap<TTransport, WeakReference<TUGIContainingTransport>>());\n{code}\n\ngetTransport() would be something like\n\n{code}\npublic TUGIContainingTransport getTransport(TTransport trans) {\n\u2002\u2002\u2002\u2002\u2002\u2002WeakReference<TUGIContainingTransport> ret = transMap.get(trans);\n\u2002\u2002\u2002\u2002\u2002\u2002if (ret == null || ret.get() == null) {\n\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002ret = new WeakReference<TUGIContainingTransport>(new TUGIContainingTransport(trans));\u2002\u2002\n\u2002\u2002\u2002\u2002\u2002\u2002\u2002\u2002transMap.put(trans, ret); // No need for putIfAbsent().\n\u2002\u2002\u2002\u2002\u2002\u2002\u2002  // Concurrent calls to getTransport() will pass in different TTransports.\n\u2002\u2002\u2002\u2002\u2002\u2002}\n\u2002\u2002\u2002\u2002\u2002\u2002return ret.get();\n}\n{code}\n\n3.) Is it absolutely essential that successive calls to get getTransport() need to retrieve the same TUGIContainingTransport object or its ok to create a new one, if its not available in the map ?",
        "duedate": null,
        "environment": null,
        "fixVersions": [],
        "issuelinks": [{
            "id": "12374858",
            "inwardIssue": {
                "fields": {
                    "issuetype": {
                        "avatarId": 21133,
                        "description": "A problem which impairs or prevents the functions of the product.",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                        "id": "1",
                        "name": "Bug",
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                        "subtask": false
                    },
                    "priority": {
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                        "id": "3",
                        "name": "Major",
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                    },
                    "status": {
                        "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                        "id": "6",
                        "name": "Closed",
                        "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                        "statusCategory": {
                            "colorName": "green",
                            "id": 3,
                            "key": "done",
                            "name": "Done",
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                        }
                    },
                    "summary": "Memory leak in TUGIContainingTransport"
                },
                "id": "12554269",
                "key": "HIVE-3008",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/12554269"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12374858",
            "type": {
                "id": "10030",
                "inward": "is related to",
                "name": "Reference",
                "outward": "relates to",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
            }
        }],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935"
            },
            "id": "12310843",
            "key": "HIVE",
            "name": "Hive",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310843"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Ashwin Agate",
            "key": "agateaaa",
            "name": "agateaaa",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=agateaaa",
            "timeZone": "Etc/UTC"
        },
        "resolution": null,
        "resolutiondate": null,
        "status": {
            "description": "A patch for this issue has been uploaded to JIRA by a contributor.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/document.png",
            "id": "10002",
            "name": "Patch Available",
            "self": "https://issues.apache.org/jira/rest/api/2/status/10002",
            "statusCategory": {
                "colorName": "yellow",
                "id": 4,
                "key": "indeterminate",
                "name": "In Progress",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4"
            }
        },
        "subtasks": [{
            "fields": {
                "issuetype": {
                    "avatarId": 21146,
                    "description": "The sub-task of the issue",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
                    "id": "7",
                    "name": "Sub-task",
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
                    "subtask": true
                },
                "priority": {
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "id": "3",
                    "name": "Major",
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
                },
                "status": {
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "id": "5",
                    "name": "Resolved",
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "statusCategory": {
                        "colorName": "green",
                        "id": 3,
                        "key": "done",
                        "name": "Done",
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                    }
                },
                "summary": "Temporary fix for HIVE-5172 (possible NPE in TUGIContainingTransport)"
            },
            "id": "12674746",
            "key": "HIVE-5597",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/12674746"
        }],
        "summary": "TUGIContainingTransport returning null transport, causing intermittent SocketTimeoutException on hive client and NullPointerException in TUGIBasedProcessor on the server",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2013-10-22T15:34:25.000+0000",
        "versions": [
            {
                "archived": false,
                "description": "released",
                "id": "12317742",
                "name": "0.9.0",
                "releaseDate": "2012-04-30",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12317742"
            },
            {
                "archived": false,
                "description": "released",
                "id": "12320745",
                "name": "0.10.0",
                "releaseDate": "2013-01-11",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12320745"
            },
            {
                "archived": false,
                "description": "Hive 0.11.0",
                "id": "12323587",
                "name": "0.11.0",
                "releaseDate": "2013-05-15",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12323587"
            }
        ],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-5172/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-5172/watchers",
            "watchCount": 6
        },
        "workratio": -1
    },
    "id": "12666199",
    "key": "HIVE-5172",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12666199"
}