{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Pengcheng Xiong",
            "key": "pxiong",
            "name": "pxiong",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pxiong",
            "timeZone": "America/Los_Angeles"
        },
        "components": [{
            "description": "Optimizations which are dependent on runtime",
            "id": "12323401",
            "name": "Physical Optimizer",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12323401"
        }],
        "created": "2015-03-26T23:26:25.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863"
            },
            "displayName": "Mostafa Mokhtar",
            "key": "mmokhtar",
            "name": "mmokhtar",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar",
            "timeZone": "America/Los_Angeles"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2015-05-08T22:32:30.826+0000",
        "customfield_12310222": "1_*:*_1_*:*_5002690479_*|*_5_*:*_1_*:*_0",
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "0.0",
        "customfield_12310320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i27fav:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sat May 23 21:04:36 UTC 2015",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "Reducer Vertices sending data to a Union all edge are missing statistics and as a result we either use very few reducers in the UNION ALL edge or decide to broadcast the results of UNION ALL.\n\nQuery\n{code}\nselect \n    count(*) rowcount\nfrom\n    (select \n        ss_item_sk, ss_ticket_number, ss_store_sk\n    from\n        store_sales a, store_returns b\n    where\n        a.ss_item_sk = b.sr_item_sk\n            and a.ss_ticket_number = b.sr_ticket_number union all select \n        ss_item_sk, ss_ticket_number, ss_store_sk\n    from\n        store_sales c, store_returns d\n    where\n        c.ss_item_sk = d.sr_item_sk\n            and c.ss_ticket_number = d.sr_ticket_number) t\ngroup by t.ss_store_sk , t.ss_item_sk , t.ss_ticket_number\nhaving rowcount > 100000000;\n{code}\n\nPlan snippet \n{code}\n Edges:\n        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE), Union 3 (CONTAINS)\n        Reducer 4 <- Union 3 (SIMPLE_EDGE)\n        Reducer 7 <- Map 6 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE), Union 3 (CONTAINS)\n\n  Reducer 4\n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: count(VALUE._col0)\n                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3\n                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE\n                Filter Operator\n                  predicate: (_col3 > 100000000) (type: boolean)\n                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                  Select Operator\n                    expressions: _col3 (type: bigint)\n                    outputColumnNames: _col0\n                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                    File Output Operator\n                      compressed: false\n                      Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                      table:\n                          input format: org.apache.hadoop.mapred.TextInputFormat\n                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n        Reducer 7\n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                keys:\n                  0 ss_item_sk (type: int), ss_ticket_number (type: int)\n                  1 sr_item_sk (type: int), sr_ticket_number (type: int)\n                outputColumnNames: _col1, _col6, _col8, _col27, _col34\n                Filter Operator\n                  predicate: ((_col1 = _col27) and (_col8 = _col34)) (type: boolean)\n                  Select Operator\n                    expressions: _col1 (type: int), _col8 (type: int), _col6 (type: int)\n                    outputColumnNames: _col0, _col1, _col2\n                    Group By Operator\n                      aggregations: count()\n                      keys: _col2 (type: int), _col0 (type: int), _col1 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int)\n                        sort order: +++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int)\n                        value expressions: _col3 (type: bigint)\n{code}\n\nThe full explain plan \n{code}\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 depends on stages: Stage-1\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n      Edges:\n        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 5 (SIMPLE_EDGE), Union 3 (CONTAINS)\n        Reducer 4 <- Union 3 (SIMPLE_EDGE)\n        Reducer 7 <- Map 6 (SIMPLE_EDGE), Map 8 (SIMPLE_EDGE), Union 3 (CONTAINS)\n      DagName: mmokhtar_20150214132727_95878ea1-ee6a-4b7e-bc86-843abd5cf664:7\n      Vertices:\n        Map 1\n            Map Operator Tree:\n                TableScan\n                  alias: a\n                  filterExpr: (ss_item_sk is not null and ss_ticket_number is not null) (type: boolean)\n                  Statistics: Num rows: 550076554 Data size: 47370018896 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (ss_item_sk is not null and ss_ticket_number is not null) (type: boolean)\n                    Statistics: Num rows: 550076554 Data size: 6549093948 Basic stats: COMPLETE Column stats: COMPLETE\n                    Reduce Output Operator\n                      key expressions: ss_item_sk (type: int), ss_ticket_number (type: int)\n                      sort order: ++\n                      Map-reduce partition columns: ss_item_sk (type: int), ss_ticket_number (type: int)\n                      Statistics: Num rows: 550076554 Data size: 6549093948 Basic stats: COMPLETE Column stats: COMPLETE\n                      value expressions: ss_store_sk (type: int)\n        Map 5\n            Map Operator Tree:\n                TableScan\n                  alias: b\n                  filterExpr: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                  Statistics: Num rows: 55578005 Data size: 4155315616 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                    Statistics: Num rows: 55578005 Data size: 444624040 Basic stats: COMPLETE Column stats: COMPLETE\n                    Reduce Output Operator\n                      key expressions: sr_item_sk (type: int), sr_ticket_number (type: int)\n                      sort order: ++\n                      Map-reduce partition columns: sr_item_sk (type: int), sr_ticket_number (type: int)\n                      Statistics: Num rows: 55578005 Data size: 444624040 Basic stats: COMPLETE Column stats: COMPLETE\n        Map 6\n            Map Operator Tree:\n                TableScan\n                  alias: c\n                  filterExpr: (ss_item_sk is not null and ss_ticket_number is not null) (type: boolean)\n                  Statistics: Num rows: 550076554 Data size: 47370018896 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (ss_item_sk is not null and ss_ticket_number is not null) (type: boolean)\n                    Statistics: Num rows: 550076554 Data size: 6549093948 Basic stats: COMPLETE Column stats: COMPLETE\n                    Reduce Output Operator\n                      key expressions: ss_item_sk (type: int), ss_ticket_number (type: int)\n                      sort order: ++\n                      Map-reduce partition columns: ss_item_sk (type: int), ss_ticket_number (type: int)\n                      Statistics: Num rows: 550076554 Data size: 6549093948 Basic stats: COMPLETE Column stats: COMPLETE\n                      value expressions: ss_store_sk (type: int)\n        Map 8\n            Map Operator Tree:\n                TableScan\n                  alias: d\n                  filterExpr: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                  Statistics: Num rows: 55578005 Data size: 4155315616 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                    Statistics: Num rows: 55578005 Data size: 444624040 Basic stats: COMPLETE Column stats: COMPLETE\n                    Reduce Output Operator\n                      key expressions: sr_item_sk (type: int), sr_ticket_number (type: int)\n                      sort order: ++\n                      Map-reduce partition columns: sr_item_sk (type: int), sr_ticket_number (type: int)\n                      Statistics: Num rows: 55578005 Data size: 444624040 Basic stats: COMPLETE Column stats: COMPLETE\n        Reducer 2\n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                keys:\n                  0 ss_item_sk (type: int), ss_ticket_number (type: int)\n                  1 sr_item_sk (type: int), sr_ticket_number (type: int)\n                outputColumnNames: _col1, _col6, _col8, _col27, _col34\n                Filter Operator\n                  predicate: ((_col1 = _col27) and (_col8 = _col34)) (type: boolean)\n                  Select Operator\n                    expressions: _col1 (type: int), _col8 (type: int), _col6 (type: int)\n                    outputColumnNames: _col0, _col1, _col2\n                    Group By Operator\n                      aggregations: count()\n                      keys: _col2 (type: int), _col0 (type: int), _col1 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int)\n                        sort order: +++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int)\n                        value expressions: _col3 (type: bigint)\n        Reducer 4\n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: count(VALUE._col0)\n                keys: KEY._col0 (type: int), KEY._col1 (type: int), KEY._col2 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3\n                Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE\n                Filter Operator\n                  predicate: (_col3 > 100000000) (type: boolean)\n                  Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                  Select Operator\n                    expressions: _col3 (type: bigint)\n                    outputColumnNames: _col0\n                    Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                    File Output Operator\n                      compressed: false\n                      Statistics: Num rows: 0 Data size: 0 Basic stats: NONE Column stats: COMPLETE\n                      table:\n                          input format: org.apache.hadoop.mapred.TextInputFormat\n                          output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n                          serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n        Reducer 7\n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                keys:\n                  0 ss_item_sk (type: int), ss_ticket_number (type: int)\n                  1 sr_item_sk (type: int), sr_ticket_number (type: int)\n                outputColumnNames: _col1, _col6, _col8, _col27, _col34\n                Filter Operator\n                  predicate: ((_col1 = _col27) and (_col8 = _col34)) (type: boolean)\n                  Select Operator\n                    expressions: _col1 (type: int), _col8 (type: int), _col6 (type: int)\n                    outputColumnNames: _col0, _col1, _col2\n                    Group By Operator\n                      aggregations: count()\n                      keys: _col2 (type: int), _col0 (type: int), _col1 (type: int)\n                      mode: hash\n                      outputColumnNames: _col0, _col1, _col2, _col3\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int)\n                        sort order: +++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int), _col2 (type: int)\n                        value expressions: _col3 (type: bigint)\n        Union 3\n            Vertex: Union 3\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n      Processor Tree:\n        ListSink\n{code}\n\nAlso TPC-DS Q54 fails with OOM, this failure happens when we chose a different plan.\nThe OOM happens in  vertexName=Map 14\n{code}\nexplain  \nwith my_customers as (\n select  c_customer_sk\n        , c_current_addr_sk\n from   \n        ( select cs_sold_date_sk sold_date_sk,\n                 cs_bill_customer_sk customer_sk,\n                 cs_item_sk item_sk\n          from   catalog_sales\n          union all\n          select ws_sold_date_sk sold_date_sk,\n                 ws_bill_customer_sk customer_sk,\n                 ws_item_sk item_sk\n          from   web_sales\n         ) cs_or_ws_sales,\n         item,\n         date_dim,\n         customer\n where   sold_date_sk = d_date_sk\n         and item_sk = i_item_sk\n         and i_category = 'Jewelry'\n         and i_class = 'football'\n         and c_customer_sk = cs_or_ws_sales.customer_sk\n         and d_moy = 3\n         and d_year = 2000\n         group by  c_customer_sk\n        , c_current_addr_sk\n )\n , my_revenue as (\n select c_customer_sk,\n        sum(ss_ext_sales_price) as revenue\n from   my_customers,\n        store_sales,\n        customer_address,\n        store,\n        date_dim\n where  c_current_addr_sk = ca_address_sk\n        and ca_county = s_county\n        and ca_state = s_state\n        and ss_sold_date_sk = d_date_sk\n        and c_customer_sk = ss_customer_sk\n        and d_month_seq between (1203)\n                           and  (1205)\n group by c_customer_sk\n )\n , segments as\n (select cast((revenue/50) as int) as segment\n  from   my_revenue\n )\n  select  segment, count(*) as num_customers, segment*50 as segment_base\n from segments\n group by segment\n order by segment, num_customers\n limit 100\nOK\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 depends on stages: Stage-1\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n      Edges:\n        Map 1 <- Map 5 (BROADCAST_EDGE), Map 6 (BROADCAST_EDGE)\n        Map 10 <- Map 13 (BROADCAST_EDGE), Union 11 (CONTAINS)\n        Map 12 <- Map 13 (BROADCAST_EDGE), Union 11 (CONTAINS)\n        Map 14 <- Union 11 (BROADCAST_EDGE)\n        Map 6 <- Map 7 (BROADCAST_EDGE), Reducer 9 (BROADCAST_EDGE)\n        Map 8 <- Map 14 (BROADCAST_EDGE)\n        Reducer 2 <- Map 1 (SIMPLE_EDGE)\n        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)\n        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)\n        Reducer 9 <- Map 8 (SIMPLE_EDGE)\n      DagName: mmokhtar_20150208232525_9976b56b-8f4b-48c8-a909-aa653c20051c:1\n      Vertices:\n        Map 1 \n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: ss_customer_sk is not null (type: boolean)\n                  Statistics: Num rows: 82510879939 Data size: 6873789738208 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ss_customer_sk is not null (type: boolean)\n                    Statistics: Num rows: 80566020964 Data size: 951594129356 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ss_customer_sk (type: int), ss_ext_sales_price (type: float), ss_sold_date_sk (type: int)\n                      outputColumnNames: _col0, _col1, _col2\n                      Statistics: Num rows: 80566020964 Data size: 951594129356 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col2 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col0, _col1\n                        input vertices:\n                          1 Map 5\n                        Statistics: Num rows: 90081226648 Data size: 720649813184 Basic stats: COMPLETE Column stats: COMPLETE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          keys:\n                            0 _col0 (type: int)\n                            1 _col5 (type: int)\n                          outputColumnNames: _col1, _col10\n                          input vertices:\n                            1 Map 6\n                          Statistics: Num rows: 99089351460 Data size: 792714811684 Basic stats: COMPLETE Column stats: NONE\n                          Select Operator\n                            expressions: _col10 (type: int), _col1 (type: float)\n                            outputColumnNames: _col0, _col1\n                            Statistics: Num rows: 99089351460 Data size: 792714811684 Basic stats: COMPLETE Column stats: NONE\n                            Group By Operator\n                              aggregations: sum(_col1)\n                              keys: _col0 (type: int)\n                              mode: hash\n                              outputColumnNames: _col0, _col1\n                              Statistics: Num rows: 99089351460 Data size: 792714811684 Basic stats: COMPLETE Column stats: NONE\n                              Reduce Output Operator\n                                key expressions: _col0 (type: int)\n                                sort order: +\n                                Map-reduce partition columns: _col0 (type: int)\n                                Statistics: Num rows: 99089351460 Data size: 792714811684 Basic stats: COMPLETE Column stats: NONE\n                                value expressions: _col1 (type: double)\n            Execution mode: vectorized\n        Map 10 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_item_sk is not null and cs_bill_customer_sk is not null) (type: boolean)\n                  Filter Operator\n                    predicate: (cs_item_sk is not null and cs_bill_customer_sk is not null) (type: boolean)\n                    Select Operator\n                      expressions: cs_sold_date_sk (type: int), cs_bill_customer_sk (type: int), cs_item_sk (type: int)\n                      outputColumnNames: _col0, _col1, _col2\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col1, _col2\n                        input vertices:\n                          1 Map 13\n                        Reduce Output Operator\n                          key expressions: _col2 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col2 (type: int)\n                          value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 12 \n            Map Operator Tree:\n                TableScan\n                  alias: web_sales\n                  filterExpr: (ws_item_sk is not null and ws_bill_customer_sk is not null) (type: boolean)\n                  Filter Operator\n                    predicate: (ws_item_sk is not null and ws_bill_customer_sk is not null) (type: boolean)\n                    Select Operator\n                      expressions: ws_sold_date_sk (type: int), ws_bill_customer_sk (type: int), ws_item_sk (type: int)\n                      outputColumnNames: _col0, _col1, _col2\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col1, _col2\n                        input vertices:\n                          1 Map 13\n                        Reduce Output Operator\n                          key expressions: _col2 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col2 (type: int)\n                          value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 13 \n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (((d_moy = 3) and (d_year = 2000)) and d_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (((d_moy = 3) and (d_year = 2000)) and d_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 624 Data size: 7488 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 624 Data size: 2496 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 624 Data size: 2496 Basic stats: COMPLETE Column stats: COMPLETE\n                      Select Operator\n                        expressions: _col0 (type: int)\n                        outputColumnNames: _col0\n                        Statistics: Num rows: 624 Data size: 2496 Basic stats: COMPLETE Column stats: COMPLETE\n                        Group By Operator\n                          keys: _col0 (type: int)\n                          mode: hash\n                          outputColumnNames: _col0\n                          Statistics: Num rows: 312 Data size: 1248 Basic stats: COMPLETE Column stats: COMPLETE\n                          Dynamic Partitioning Event Operator\n                            Target Input: catalog_sales\n                            Partition key expr: cs_sold_date_sk\n                            Statistics: Num rows: 312 Data size: 1248 Basic stats: COMPLETE Column stats: COMPLETE\n                            Target column: cs_sold_date_sk\n                            Target Vertex: Map 10\n                      Select Operator\n                        expressions: _col0 (type: int)\n                        outputColumnNames: _col0\n                        Statistics: Num rows: 624 Data size: 2496 Basic stats: COMPLETE Column stats: COMPLETE\n                        Group By Operator\n                          keys: _col0 (type: int)\n                          mode: hash\n                          outputColumnNames: _col0\n                          Statistics: Num rows: 312 Data size: 1248 Basic stats: COMPLETE Column stats: COMPLETE\n                          Dynamic Partitioning Event Operator\n                            Target Input: web_sales\n                            Partition key expr: ws_sold_date_sk\n                            Statistics: Num rows: 312 Data size: 1248 Basic stats: COMPLETE Column stats: COMPLETE\n                            Target column: ws_sold_date_sk\n                            Target Vertex: Map 12\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 624 Data size: 2496 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 14 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((i_category = 'Jewelry') and (i_class = 'football')) and i_item_sk is not null) (type: boolean)\n                  Statistics: Num rows: 462000 Data size: 663862160 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (((i_category = 'Jewelry') and (i_class = 'football')) and i_item_sk is not null) (type: boolean)\n                    Statistics: Num rows: 4200 Data size: 781200 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: i_item_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 4200 Data size: 16800 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col2 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col1\n                        input vertices:\n                          0 Union 11\n                        Statistics: Num rows: 79189328781 Data size: 0 Basic stats: PARTIAL Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col1 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col1 (type: int)\n                          Statistics: Num rows: 79189328781 Data size: 0 Basic stats: PARTIAL Column stats: NONE\n            Execution mode: vectorized\n        Map 5 \n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: (d_month_seq BETWEEN 1203 AND 1205 and d_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (d_month_seq BETWEEN 1203 AND 1205 and d_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 36524 Data size: 292192 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 36524 Data size: 146096 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 36524 Data size: 146096 Basic stats: COMPLETE Column stats: COMPLETE\n                      Select Operator\n                        expressions: _col0 (type: int)\n                        outputColumnNames: _col0\n                        Statistics: Num rows: 36524 Data size: 146096 Basic stats: COMPLETE Column stats: COMPLETE\n                        Group By Operator\n                          keys: _col0 (type: int)\n                          mode: hash\n                          outputColumnNames: _col0\n                          Statistics: Num rows: 18262 Data size: 73048 Basic stats: COMPLETE Column stats: COMPLETE\n                          Dynamic Partitioning Event Operator\n                            Target Input: store_sales\n                            Partition key expr: ss_sold_date_sk\n                            Statistics: Num rows: 18262 Data size: 73048 Basic stats: COMPLETE Column stats: COMPLETE\n                            Target column: ss_sold_date_sk\n                            Target Vertex: Map 1\n            Execution mode: vectorized\n        Map 6 \n            Map Operator Tree:\n                TableScan\n                  alias: customer_address\n                  filterExpr: ((ca_county is not null and ca_state is not null) and ca_address_sk is not null) (type: boolean)\n                  Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((ca_county is not null and ca_state is not null) and ca_address_sk is not null) (type: boolean)\n                    Statistics: Num rows: 40000000 Data size: 7520000000 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ca_address_sk (type: int), ca_county (type: string), ca_state (type: string)\n                      outputColumnNames: _col0, _col1, _col2\n                      Statistics: Num rows: 40000000 Data size: 7520000000 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col1 (type: string), _col2 (type: string)\n                          1 _col0 (type: string), _col1 (type: string)\n                        outputColumnNames: _col0\n                        input vertices:\n                          1 Map 7\n                        Statistics: Num rows: 778829 Data size: 3115316 Basic stats: COMPLETE Column stats: COMPLETE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          keys:\n                            0 _col0 (type: int)\n                            1 _col1 (type: int)\n                          outputColumnNames: _col5\n                          input vertices:\n                            1 Reducer 9\n                          Statistics: Num rows: 47909545988 Data size: 0 Basic stats: PARTIAL Column stats: NONE\n                          Reduce Output Operator\n                            key expressions: _col5 (type: int)\n                            sort order: +\n                            Map-reduce partition columns: _col5 (type: int)\n                            Statistics: Num rows: 47909545988 Data size: 0 Basic stats: PARTIAL Column stats: NONE\n            Execution mode: vectorized\n        Map 7 \n            Map Operator Tree:\n                TableScan\n                  alias: store\n                  filterExpr: (s_county is not null and s_state is not null) (type: boolean)\n                  Statistics: Num rows: 1704 Data size: 3256276 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (s_county is not null and s_state is not null) (type: boolean)\n                    Statistics: Num rows: 1704 Data size: 313536 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: s_county (type: string), s_state (type: string)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 1704 Data size: 313536 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: string), _col1 (type: string)\n                        sort order: ++\n                        Map-reduce partition columns: _col0 (type: string), _col1 (type: string)\n                        Statistics: Num rows: 1704 Data size: 313536 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 8 \n            Map Operator Tree:\n                TableScan\n                  alias: customer\n                  filterExpr: (c_customer_sk is not null and c_current_addr_sk is not null) (type: boolean)\n                  Statistics: Num rows: 80000000 Data size: 68801615852 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (c_customer_sk is not null and c_current_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 80000000 Data size: 640000000 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: c_customer_sk (type: int), c_current_addr_sk (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 80000000 Data size: 640000000 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col1 (type: int)\n                        outputColumnNames: _col0, _col1\n                        input vertices:\n                          1 Map 14\n                        Statistics: Num rows: 87108263547 Data size: 0 Basic stats: PARTIAL Column stats: NONE\n                        Group By Operator\n                          keys: _col0 (type: int), _col1 (type: int)\n                          mode: hash\n                          outputColumnNames: _col0, _col1\n                          Statistics: Num rows: 87108263547 Data size: 0 Basic stats: PARTIAL Column stats: NONE\n                          Reduce Output Operator\n                            key expressions: _col0 (type: int), _col1 (type: int)\n                            sort order: ++\n                            Map-reduce partition columns: _col0 (type: int), _col1 (type: int)\n                            Statistics: Num rows: 87108263547 Data size: 0 Basic stats: PARTIAL Column stats: NONE\n            Execution mode: vectorized\n        Reducer 2 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0)\n                keys: KEY._col0 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1\n                Statistics: Num rows: 49544675730 Data size: 396357405842 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: UDFToInteger((_col1 / 50.0)) (type: int)\n                  outputColumnNames: _col0\n                  Statistics: Num rows: 49544675730 Data size: 396357405842 Basic stats: COMPLETE Column stats: NONE\n                  Group By Operator\n                    aggregations: count()\n                    keys: _col0 (type: int)\n                    mode: hash\n                    outputColumnNames: _col0, _col1\n                    Statistics: Num rows: 49544675730 Data size: 396357405842 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: _col0 (type: int)\n                      sort order: +\n                      Map-reduce partition columns: _col0 (type: int)\n                      Statistics: Num rows: 49544675730 Data size: 396357405842 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: _col1 (type: bigint)\n        Reducer 3 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: count(VALUE._col0)\n                keys: KEY._col0 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1\n                Statistics: Num rows: 24772337865 Data size: 198178702921 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col0 (type: int), _col1 (type: bigint), (_col0 * 50) (type: int)\n                  outputColumnNames: _col0, _col1, _col2\n                  Statistics: Num rows: 24772337865 Data size: 198178702921 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: _col0 (type: int), _col1 (type: bigint)\n                    sort order: ++\n                    Statistics: Num rows: 24772337865 Data size: 198178702921 Basic stats: COMPLETE Column stats: NONE\n                    TopN Hash Memory Usage: 0.04\n                    value expressions: _col2 (type: int)\n        Reducer 4 \n            Reduce Operator Tree:\n              Select Operator\n                expressions: KEY.reducesinkkey0 (type: int), KEY.reducesinkkey1 (type: bigint), VALUE._col0 (type: int)\n                outputColumnNames: _col0, _col1, _col2\n                Statistics: Num rows: 24772337865 Data size: 198178702921 Basic stats: COMPLETE Column stats: NONE\n                Limit\n                  Number of rows: 100\n                  Statistics: Num rows: 100 Data size: 800 Basic stats: COMPLETE Column stats: NONE\n                  File Output Operator\n                    compressed: false\n                    Statistics: Num rows: 100 Data size: 800 Basic stats: COMPLETE Column stats: NONE\n                    table:\n                        input format: org.apache.hadoop.mapred.TextInputFormat\n                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n        Reducer 9 \n            Reduce Operator Tree:\n              Group By Operator\n                keys: KEY._col0 (type: int), KEY._col1 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1\n                Statistics: Num rows: 43554131773 Data size: 0 Basic stats: PARTIAL Column stats: NONE\n                Reduce Output Operator\n                  key expressions: _col1 (type: int)\n                  sort order: +\n                  Map-reduce partition columns: _col1 (type: int)\n                  Statistics: Num rows: 43554131773 Data size: 0 Basic stats: PARTIAL Column stats: NONE\n                  value expressions: _col0 (type: int)\n        Union 11 \n            Vertex: Union 11\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: 100\n      Processor Tree:\n        ListSink\n{code}\n\n\nIn Map 14 Data size is 0 \n{code}\np 14 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: (((i_category = 'Jewelry') and (i_class = 'football')) and i_item_sk is not null) (type: boolean)\n                  Statistics: Num rows: 462000 Data size: 663862160 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (((i_category = 'Jewelry') and (i_class = 'football')) and i_item_sk is not null) (type: boolean)\n                    Statistics: Num rows: 4200 Data size: 781200 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: i_item_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 4200 Data size: 16800 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        keys:\n                          0 _col2 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col1\n                        input vertices:\n                          0 Union 11\n                        Statistics: Num rows: 79189328781 Data size: 0 Basic stats: PARTIAL Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col1 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col1 (type: int)\n                          Statistics: Num rows: 79189328781 Data size: 0 Basic stats: PARTIAL Column stats: NONE\n            Execution mode: vectorized\n{code}",
        "duedate": null,
        "environment": null,
        "fixVersions": [{
            "archived": false,
            "id": "12332384",
            "name": "1.2.1",
            "releaseDate": "2015-06-26",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12332384"
        }],
        "issuelinks": [{
            "id": "12424196",
            "inwardIssue": {
                "fields": {
                    "issuetype": {
                        "avatarId": 21133,
                        "description": "A problem which impairs or prevents the functions of the product.",
                        "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                        "id": "1",
                        "name": "Bug",
                        "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                        "subtask": false
                    },
                    "priority": {
                        "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
                        "id": "2",
                        "name": "Critical",
                        "self": "https://issues.apache.org/jira/rest/api/2/priority/2"
                    },
                    "status": {
                        "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                        "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                        "id": "5",
                        "name": "Resolved",
                        "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                        "statusCategory": {
                            "colorName": "green",
                            "id": 3,
                            "key": "done",
                            "name": "Done",
                            "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
                        }
                    },
                    "summary": "JoinStatsRule miscalculates join cardinality as incorrect NDV is used due to column names having duplicated fqColumnName"
                },
                "id": "12767836",
                "key": "HIVE-9392",
                "self": "https://issues.apache.org/jira/rest/api/2/issue/12767836"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12424196",
            "type": {
                "id": "10030",
                "inward": "is related to",
                "name": "Reference",
                "outward": "relates to",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
            }
        }],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935"
            },
            "id": "12310843",
            "key": "HIVE",
            "name": "Hive",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310843"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863"
            },
            "displayName": "Mostafa Mokhtar",
            "key": "mmokhtar",
            "name": "mmokhtar",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar",
            "timeZone": "America/Los_Angeles"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2015-05-23T21:04:36.000+0000",
        "status": {
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "id": "5",
            "name": "Resolved",
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "Union All : Vertex missing stats resulting in OOM and in-efficient plans",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2015-06-15T23:01:42.000+0000",
        "versions": [{
            "archived": false,
            "description": "released",
            "id": "12326450",
            "name": "0.14.0",
            "releaseDate": "2014-11-12",
            "released": true,
            "self": "https://issues.apache.org/jira/rest/api/2/version/12326450"
        }],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-10107/votes",
            "votes": 0
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-10107/watchers",
            "watchCount": 3
        },
        "workratio": -1
    },
    "id": "12786041",
    "key": "HIVE-10107",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12786041"
}