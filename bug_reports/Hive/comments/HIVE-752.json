[Oops - you're totally right. Careless find/replace on my part. The fix you proposed should be correct., Todd,

In my reflection patch before your shim work I added a test case to test that the jetty Server starts. We should have something similar. , Even with the changes above HWI is having a hard time starting up. I will look into this.

{noformat}
[ecapriolo@laptop1 dist]$ HADOOP_HOME=/home/ecapriolo/hadoop-0.20.0 bin/hive --service hwi
09/08/28 16:35:33 INFO hwi.HWIServer: HWI is starting up
09/08/28 16:35:33 FATAL hwi.HWIServer: HWI WAR file not found at ${HIVE_HOME}/lib/hive-hwi.war
09/08/28 16:35:33 INFO mortbay.log: Logging to org.slf4j.impl.Log4jLoggerAdapter(org.mortbay.log) via org.mortbay.log.Slf4jLog
09/08/28 16:35:33 INFO mortbay.log: jetty-6.1.14
09/08/28 16:35:33 ERROR mortbay.log: Failed startup of context org.mortbay.jetty.webapp.WebAppContext@e64686{/,null}
java.lang.NullPointerException
        at org.mortbay.resource.Resource.newResource(Resource.java:140)
        at org.mortbay.resource.Resource.newResource(Resource.java:120)
        at org.mortbay.jetty.webapp.WebAppContext.resolveWebApp(WebAppContext.java:885)
        at org.mortbay.jetty.webapp.WebAppContext.getWebInf(WebAppContext.java:793)
        at org.mortbay.jetty.webapp.WebInfConfiguration.configureClassLoader(WebInfConfiguration.java:62)
        at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:456)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
        at org.mortbay.jetty.handler.RequestLogHandler.doStart(RequestLogHandler.java:115)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:130)
        at org.mortbay.jetty.Server.doStart(Server.java:222)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:50)
        at org.apache.hadoop.hive.hwi.HWIServer.start(HWIServer.java:79)
        at org.apache.hadoop.hive.hwi.HWIServer.main(HWIServer.java:108)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.hadoop.util.RunJar.main(RunJar.java:156)
09/08/28 16:35:33 INFO mortbay.log: Started SocketConnector@0.0.0.0:9999


{noformat}, All, 

I am a little perturbed about this. If I am looking at this correctly this is the first and only revision of ShimLoader in SVN.

http://svn.apache.org/viewvc/hadoop/hive/trunk/shims/src/common/java/org/apache/hadoop/hive/shims/ShimLoader.java?view=log

As Venkat points out this Jetty Shims are completely broken. Which the class names specified 
{noformat}
org.apache.jetty.hive.shims.Jetty19Shims
{noformat}
incorrectly, I believe any attempt to start up HWI with any version of Hadoop would have failed. I have fixed the class name for 20shim and that is failing now with a null pointer.

Why did we commit shims without any test cases? 

I know HWI can be somewhat awkward to test case, but was it tested at all?, Hi Edward,

As I think I noticed in the original JIRA, I did not manually test HWI. I figured that any necessary tests would already exist in the form of JUnit tests - in my opinion every supported feature of Hive should be continuously tested by Hudson.

If you can add a test case that passes pre-HIVE-718 and fails now, I will happily fix it.

-Todd, Sorry, that last one should read HIVE-487, Not sure if this fixes all issues but adds a test case for some shim validity. Fixes the class name error. Will add more later., Todd,

Sure, every feature of Hive should be tested by hudson, but I do not think JUnit replaces real testing. I personally test everything on a live cluster because the world is full of gotchas. 

I do think the shims should have some independent j-unit tests. Example what happens when someone trys to compile with 0.21.? I am hoping a unit test failure would be present in the shims.

I have much 0_20 angst. 1 because all the JMX stuff got renamed and all my cacti templates are broken :) 2. In general it seems like a lot changed and everyone is chasing after it.

This slipped under my radar too. I commented on the issue even. However I was under the impression that the problem was isolated. (don't ask me why). But this is a blocker it is across the board broken.

, Updating to blocker as HWI can not start., bq. Sure, every feature of Hive should be tested by hudson, but I do not think JUnit replaces real testing. I personally test everything on a live cluster because the world is full of gotchas. 

Unfortunately this increases the barrier to contribution significantly. As feature sets grow it becomes impossible to do this without a full time QA staff. So, for now, we need at least continuous smoke testing of all features, including HWI imho. When a release candidate is rolled it's time for the significant manual testing - asking for that on every commit is pretty difficult.

bq. I do think the shims should have some independent j-unit tests. Example what happens when someone trys to compile with 0.21.? I am hoping a unit test failure would be present in the shims.

The shims should be covered by virtue of their use elsewhere. I think in the original ticket I suggested that we get separate build running on Hudson that tests all of the unit tests against all of the supported Hadoop versions - I'm not sure who's in charge of the Hive Hudson, but if Cloudera can help get that set up we'd be happy to.

bq. I have much 0_20 angst. 1 because all the JMX stuff got renamed and all my cacti templates are broken  2. In general it seems like a lot changed and everyone is chasing after it.

+1 :) Also agreed that it is a blocker.

I'm getting on a plane in a couple hours for a week long vacation, but I'll try to sneak in some time to get this fixed. In the meantime, it would be great if you could write up a "manual test plan" for HWI. Its existence isn't even mentioned in README.txt, so it's difficult for new contributors to figure out what functionality they need to manually verify., Added a jetty Test Case
Tweek to build.xml for jetty test.
Fixed 20 shim to set war and context path.

Still need to test 18 and 19, Added Test case, tested with 17 18 20, Committed in both trunk and 0.4 - thanks Edward]