[Aggregates are supposed to ignore nulls according to the standard. The code for SUM and AVG seems to indicate that they do ignore NULLs. Are you getting NULLs?, Marking this as a bug., Very sorry! After further testing, the actual problem I was having was  that SUM returns a double, and I was putting it into an INT container without an explicit cast.

So, maybe this bug is a request to change the wiki to make this clear.

Also...let's actually say the opposite. We really should have AVG or some version of it return NULL if any NULL values are found. This is the default behavior in R, and for good reason...I will link to the description of why once I find it.

Basically, the argument is that when a sum, average, or variance depends on n in some sense, comparisons among these groups cannot be trusted. For example, if there are 5 nulls in a set of 20 variables, SUM(x) / COUNT(x) returns a different value than AVG(x)...that is very unintuitive.
, In your example, even with NULLs, SUM(a) / COUNT(a) will be the same as AVG(a). This is because COUNT(a) returns the number of rows which have non-null 'a'. This is different from COUNT(1) which returns the count of all rows., Hi Adam, it seems this is not a problem any more. Can I close the issue?, This is not a problem anymore.

Just to be a bit opinionated for a few moments, though, I do believe the standards to be wrong on this issue; NULL values are an excellent way to force scientists to really think about the query they're running, and implicitly removing them will generally lead to harder-to-debug errors and more wasted time than having to call the "remove nulls" version, call it avg_rn, explicitly.
]