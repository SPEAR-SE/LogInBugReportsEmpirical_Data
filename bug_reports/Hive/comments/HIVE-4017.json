[The following code shows a work around to kill a particular hive query . A If condition can also be used along with this for checking the elasped time for further filteration before killing the job.

Job name in case of hive is same as the hive query , so comparing the job name and the query we passed , we can pin down the job id of the running job and kill it programitically. 

Configuration conf = new Configuration();
		String query = "select * from  default.account limit 15";
		String jobTrackerHost = "ibm-r1-node2.apache-nextgen.com";
		int jobTrackerPort = 8021;
		InetSocketAddress jobtracker = new InetSocketAddress(jobTrackerHost,
				jobTrackerPort);
		JobClient jobClient = new JobClient(jobtracker, conf);
		jobClient.setConf(conf);
		
		JobStatus[] jobs = jobClient.jobsToComplete();
		
        for (int i = 0; i < jobs.length; i++) {
            JobStatus js = jobs[i];
            if (js.getRunState() == JobStatus.RUNNING) {
                JobID jobId = js.getJobID();
                String jobName = jobClient.getJob(jobId).getJobName();
                if (jobName.equalsIgnoreCase(query)) {
                	JobConf jc = new JobConf(conf);
                    JobTracker jt = JobTracker.startTracker(jc);
                    jt.killJob(jobId);
				}
            }
	}]