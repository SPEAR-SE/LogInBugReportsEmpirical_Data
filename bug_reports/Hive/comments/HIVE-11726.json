[

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12754031/HIVE-11726.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 9393 tests executed
*Failed tests:*
{noformat}
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5166/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5166/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5166/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12754031 - PreCommit-HIVE-TRUNK-Build, Test fail is unrelated. [~jpullokkaran], [~ashutoshc], [~hsubramaniyan], could anyone take a look? Thanks, [~jpullokkaran], it seems there is duplicated logic between HIVE-11684 and HIVE-11726 to extract the partition columns from the IN clause; it is something we expected.

However, after talking to [~hsubramaniyan] and thinking on both patches, it doesn't seem logical to keep this logic in both places, as we will not be able to bail out quickly in HIVE-11684; in fact, we will end up reapplying the same logic to add additional operands to the predicate.

I suggest to go ahead with HIVE-11684, and that HIVE-11726 only contains the logic to push predicates comprising IN/STRUCT to the metastore filter. Thus, PointLookupOptimizer will only contain the logic to transform OR/AND predicates into IN predicates.

What do you think? [~hsubramaniyan], what's your take on this?, Agree with [~jcamachorodriguez] on this. I think PointLookUpOptimizer should have logic to only transform OR/AND predicates to IN. HIVE-11634 should support separating the partition columns (which should take place even for an user input IN(STRUCT(..) query). HIVE-11726 should have the logic to push predicates to the metastore filter. We should make sure that these transformations work independently as well, i.e all possible combinations of enable/disable of point lookup/partition column separation.

Thanks
Hari, Rebased patch and removed part concerning OR/AND predicates transformation into IN (which is already covered by HIVE-11634).

Updated patch description to reflect that., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12770355/HIVE-11726.01.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 9767 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestHBaseCliDriver.testCliDriver_hbase_queries
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_uri_import
org.apache.hadoop.hive.hwi.TestHWISessionManager.testHiveDriver
org.apache.hive.jdbc.TestSSL.testSSLVersion
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5905/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5905/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5905/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12770355 - PreCommit-HIVE-TRUNK-Build, [~hsubramaniyan], last version of the patch removed part concerning OR/AND predicates transformation into IN (which you already covered in HIVE-11634). Thus, this patch will enable pushing the IN predicates directly to the metastore.

Could you take a look? Thanks, QA test fails are unrelated., ltgm +1, Pushed to master. Thanks for the review [~hsubramaniyan]!]