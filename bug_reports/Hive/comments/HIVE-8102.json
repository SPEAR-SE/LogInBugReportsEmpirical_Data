[The following test fails when running in Asia/Jerusalem timezone:
	Date originalDate = new Date(114, 2, 28); // March 28th 2014 - DST begins on this day at 02:00.
	DateWritable dateWritable = new DateWritable(originalDate);
	assertEquals(originalDate, dateWritable.get()); // Assertion fails because dateWritable.get() returns 2014-03-27 23:00:00 IST.

In order to be able to run this unit test in any timezone, we explicitly set the timezone and run it in a separate thread, so that the thread local member DataWritable.LOCAL_TIMEZONE is initialized with the correct one:
	public void testDaylightSavingsTime() throws InterruptedException, ExecutionException {
		TimeZone previousDefault = TimeZone.getDefault();
		TimeZone.setDefault(TimeZone.getTimeZone("Asia/Jerusalem"));
		ExecutorService threadPool = Executors.newFixedThreadPool(1);
		try {
			Future<Boolean> future = threadPool.submit(new Callable<Boolean>() {

				@Override
				public Boolean call() throws Exception {
					Date originalDate = new Date(114, 2, 28); // March 28th 2014 - DST begins on this day at 02:00.
					DateWritable dateWritable = new DateWritable(originalDate);
					return originalDate.equals(dateWritable.get());
				}
			});
			assertTrue(future.get());
		} finally {
			threadPool.shutdown();
			TimeZone.setDefault(previousDefault);
		}
	}
, Thanks for the example test [~eliac]. I think it was because DateWritable.daysToMillis() looking up the time offset at the time of midnight UTC. If by then DST had already started, then the offset was wrong. I think this patch may work. , Thanks [~jdere]! The patch appears to work well for us. (Haven't tested on other timezones.), Just tried with a timezone with half-hour offsets that is ahead of UTC (Asia/Tehran) and this does not work, cancelling patch., Actually, looks like the test was at fault here - for 2014-03-23 (day after DST in Tehran), the original date that was being compared to the writable was 1AM on 2014-03-23, whereas the writable was correctly giving back midnight  on 2014-03-23. Changed the test so that the original date will be set to the beginning of the day., 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12669189/HIVE-8102.2.patch

{color:green}SUCCESS:{color} +1 6279 tests passed

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/827/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/827/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-827/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12669189, +1, Patch v3 - rebase with trunk as TestDateWritable was created in a different Jira, +1, Since this just a test update in the patch, I think you can commit if you have verified that the test passes.
, Committed to trunk/branch-0.14, No doc needed?, nope, just a bad bug, This has been fixed in 0.14 release. Please open new jira if you see any issues.
]