[The regression was introduced by HIVE-1367. SQL standard [1] grammar for order by:
{code}
         <order by clause> ::=
              ORDER BY <sort specification list>

         <sort specification list> ::=
              <sort specification> [ { <comma> <sort specification> }... ]

         <sort specification> ::=
              <sort key> [ <collate clause > ] [ <ordering specification> ]

         <sort key> ::=
                <column name>
              | <unsigned integer>

         <ordering specification> ::= ASC | DESC
{code}

From the standard we can see that , order by clause doesn't not need `(` and `)` to enclose the sorted columns. However, hive allows an expression in lieu of a column name in the sorted column list, and '(' and ')' are part of expression. Thus, parenthesis should be interpreted as an expression construct rather than the order_by construct. 

The proposal is to remove them from order_by construct.

[1] http://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt
, Initial patch. Expecting test failures., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12630860/HIVE-5607.patch

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 5201 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_parenthesis_star_by
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_bucket5
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_parallel_orderby
{noformat}

Test results: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/1592/testReport
Console output: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/1592/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12630860, Patch #1 added fix for one of test failures. The two minimr tests seems unrelated, and manual run passed., 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12632167/HIVE-5607.1.patch

{color:green}SUCCESS:{color} +1 5201 tests passed

Test results: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/1596/testReport
Console output: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/1596/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12632167, [~xuefuz] Thanks for picking it up.
The patch itself look fine, though I am wondering if this will break the cases like the one you changed in the updated test.
{code}
ORDER BY (key ASC, value ASC)
{code}

Given that this patch is in Hive since 0.10, do we need to worry about maintaining compatibility ?, Thanks, [~prasadm]. Your concern is valid. However, I think we should be okay because:

1. HIVE-1367 broke the backward compatibility in the first place. The current JIRA is only to revert that regression.
2. Syntactically, the current JIRA restores to align with standard SQL.
3. The regression introduced by HIVE-1367 prevents any expression in the list from having parenthesis. This seems a big limitation.

From this, personally I think the restoration should proceed. However, I'm open to further discussions., [~xuefuz] I think that makes sense. You can also argue that there's a workaround to (by simply removing the parenthesis) for the possible incompatibility this fix will introduce. However there's no work around for regression introduced by the HIVE-1367 patch.

You might want to update the syntax in LanguageManual under the [sorttBy|https://cwiki.apache.org/confluence/display/Hive/LanguageManual+SortBy] section once the patch committed. It would be a good idea to mention the versions when the behavior changed for application migration.

+1
, Patch committed to trunk. Thanks Prasad for the review., This has been fixed in 0.14 release. Please open new jira if you see any issues.
]