[It seems like we shouldn't be doing what is done in SesssionState.start just once, except for the part that sets the thread local variable - setCurrentSessionState.

Should we just add a isStarted boolean to SessionState and do the rest only once ?
, Yes, seems to be. But that needs more test to verify everything is fine as the impact is bigger. I can put a patch to test., Are we trying to avoid concurrent start() calls from multiple threads? If so, shall we make isStarted volatile?, I want to start the session only once. Yes start will be invoked from multiple threads. Look again and I think we need to make start synchronized to avoid race condition. However, I don't see a reason make isStarted volatile., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12827285/HIVE-14690.3.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 7 failed/errored test(s), 10453 tests executed
*Failed tests:*
{noformat}
TestBeeLineWithArgs - did not produce a TEST-*.xml file
TestHiveCli - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_join_part_col_char]
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[acid_bucket_pruning]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainuser_3]
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarConstructorUnCaching
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/1116/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/1116/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-MASTER-Build-1116/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 7 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12827285 - PreCommit-HIVE-MASTER-Build, I have 2 more comments:

1. Should we set startSs.isStarted to true by the end of the method? If exceptions are thrown during the middle, we probably don't want to set it to true.

2. I think we can add a synchronization block after the if (startSs.isStarted) check to improve performance (vs the synchronized method). We don't need to enter the monitor to check the flag. Inside the monitor, we can double check the flag (return if the isStarted has been set to true)., Tao,
1. The problem is there is multiple exits in the code and it would be hard to maintain going forward, though what you said is ideal
2. Do you mean:
{code}
    setCurrentSessionState(startSs);

    if (startSs.isStarted) {
      return;
    }
    synchronized(this) {
    ......
    }
{code}
The code outside the synchronization block will be trivial, right?, bq.The code outside the synchronization block will be trivial, right?
This is just a perf optimization. Concurrent calls should be able to check the flag without waiting for the lock., Agree, but seems it is a trivial savings, and I'd like to trade in favor of code clarity in this case.

In terms of unit test, I don't find a way to mimic the failure as even the MiniCluster use local fs which will not throw exception when file exists., I think setting isStarted=true in beginning of function is fine. There are no retries we do in case of SessionStart failure, we consider that an error in starting the session. 

+1 to the patch., Test failures are not related.

Patch pushed to both master and branch-1., Need to mention there is no way to add unit test. The exception only happens on hdfs. Even MiniCluster is using local filesystem which will not throw exception.]