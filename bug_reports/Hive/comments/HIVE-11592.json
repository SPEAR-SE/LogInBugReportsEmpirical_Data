[Here is a initial patch based on Sergey's suggestion. [~gopalv]/[~sershe] can someone take a look at this patch?, 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12750949/HIVE-11592.1.patch

{color:green}SUCCESS:{color} +1 9370 tests passed

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4991/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4991/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4991/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12750949 - PreCommit-HIVE-TRUNK-Build, nit: it's possible to keep the field final by assigning to local variable first
Also, loop should have an upper bound for the size, There is no getSizeLimit in coded input stream to read and double the size and hence the mutable local variable. Added upper bound for the message size., What I mean is instead of writing this.metadata = OrcProto.Metadata.parseFrom(in);, it could be a  variable declared in the ctor,  metadata = OrcProto.Metadata.parseFrom(in);
Then in the end this.metadata = metadata., I see.. That makes sense. Will update the patch., Addressed Sergey's review comments., +1, 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12751102/HIVE-11592.3.patch

{color:green}SUCCESS:{color} +1 9370 tests passed

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5003/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5003/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5003/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12751102 - PreCommit-HIVE-TRUNK-Build, Committed to master and branch-1., Does this patch detect the case where a field ends at the buffer boundary? It seems like that would be undetected and thus not expand the range., [~owen.omalley] If the field ends at the buffer boundary then parseFrom() still should succeed. Right? This patch expands the range only on failure (from parseFrom) until it reaches 1GB max limit. , Ok, after looking at the protobuf code, I'd propose that we always set the limit at 1gb.

The case that I was worried about doesn't seem to happen, because the limit is just set as a safety and won't accidentally cause streams to be accepted incorrectly even if the message could end at that location.]