[1. I think the condition on "distributedBy" is not needed. clusterBy = distributeBy and sortBy. distributeBy does not enforce the order.

2. We need to upgrade the FetchTask to be able to merge multiple sorted stream. This may not be good because there might be thousands of files needed to be opened by a single client. This also does NOT solve the problem when the result is inserted into a table.

An alternative to 2 is to propagate the sort order to the second map-reduce job. I think that will solve the problem.

, 1. Will do - distributeBy check is not needed
2. It creates a second map-reduce if it is not a query, so inserts is not a problem. Sort order is propagated to the second map-reduce job.
    I dont think FetchTask needs any change - the current change performs a second map-reduce job which should fix the problem.

Will do the changes and reload the patch.
    , incorporated Zheng's comments, Forgot to clarify the FetchTask issue. FetchTask does not perform any merge - it opens files one-by-one until limit is reached (if limit is specified).
It is the responsibility of the server to have the data appropriately sorted., I think the users would expect the results of LIMIT to be sorted in total order - if user says "SORT BY key LIMIT 10", he probably wants the global top 10, no matter how many reducers we have.

I think it's necessary to have the second map-reduce job in case of "SORT BY/CLUSTER BY", but we also want the second map-reduce job to have the right sort cols between the map-reduce boundary so we can get the global top ones.

, Thats right - that's what genReduceSinkPlan does.

After the change, if a sorting/clustering column is present, a second map-reduce job will sort/cluster by those columns, so that we can get the global order, The second map-reduce job will have only 1 reducer with the sorting columns preserved - so that will do exactly what you are saying, Talked with Namit offline. Apparently I was not aware that the second map-reduce job was already doing the sorting.
Will test and commit.
, Trunk only: Committed revision 766196. Thanks Namit.]