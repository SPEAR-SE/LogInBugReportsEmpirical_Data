[Alternate way of doing this is :
hive -hiveconf schema=mydb -e 'drop table ${hiveconf:schema}.my_table_name'

I.e .. pass the schema/database name as hive conf., [~harisekhon] were you using Sentry at the time?  I personally could not reproduce this issue with Sentry disabled. , [~rnpridgeon] No it was on Hortonworks so no Sentry., [~harisekhon] that's fair, sorry I missed that some how. I don't think the issue is with Sentry it's so much as the presence of a pre-event listener. 

From the HMS logs I was able to find the following

ERROR org.apache.thrift.ProcessFunction: Internal error processing get_partition_names
NoSuchObjectException(message:default.testdrop table not found)
	at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.fireReadTablePreEvent(HiveMetaStore.java:2820)

Tracing the stack in the HMS logs I found that the error is thrown here:

private void fireReadTablePreEvent(String dbName, String tblName) throws MetaException, NoSuchObjectException {
if(preListeners.size() > 0) {
// do this only if there is a pre event listener registered (avoid unnecessary
// metastore api call)
Table t = getMS().getTable(dbName, tblName);
if (t == null) {
throw new NoSuchObjectException(dbName + "." + tblName
+ " table not found");
}
firePreEvent(new PreReadTableEvent(t, this));
}
}

I'm not sure why or how the database qualifier is lost but in the absence of a pre-event listener everything works as expected. 
, I have this bug , on Hortonworks 2.2.4 , so with hive 0.14 

, This looks pretty similar to HIVE-10421. Are the offending tables partitioned?, It is possible since I was not able to reproduce this issue in current upstream.]