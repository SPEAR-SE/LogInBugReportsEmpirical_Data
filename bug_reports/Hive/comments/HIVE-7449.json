[The problem is not the UDF but the implementation of java.util.TimeZone. Specifically the timezone IDs that TimeZone.getTimeZone() accepts. The code is below from the UDF: 

/hive/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFFromUtcTimestamp.java 

{code}
78 if (arguments.length > 1 && arguments[1] != null) { 
79 Text text = textConverter.convert(arguments[1].get()); 
80 if (text != null) { 
81 timezone = TimeZone.getTimeZone(text.toString()); 
82 } 
83 } else { 
84 return null; 
85 } 
{code}

It does not accept PDT or EDT. The utility does have them but they are EST5EDT and PST8PDT. If you use these in the UDF you get the correct result. You can get a list of all the supported IDs using the simple program found http://obscuredclarity.blogspot.com/2010/08/get-all-timezones-available-in-timezone.html. I did this on my local system and got a list similar to the one shown at the bottom of page http://tutorials.jenkov.com/java-date-time/java-util-timezone.html. 

I tested this and it works, see below. 

{code}
hive> SELECT from_utc_timestamp('2014-07-18 18:15:29.0','PST8PDT') FROM sfo_source LIMIT 1; 
... 
2014-07-18 11:15:29
{code}]