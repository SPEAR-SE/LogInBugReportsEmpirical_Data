[As a work around, can you execute "describe <tablename>" to get the schema?, That would work, but I was hoping to solve both this and JIRA-671 in one fell swoop. Don't we just need to determine whether the table has a partition, and then append the partition key onto the field schemas returned by the deserializer?, Actually I just talked to Zheng offline and I guess the get_fields function should NOT return the partition column under its proper usage. I can work around this by calling get_tables and then join the partitionkey field descriptors with the result of get_fields. I'll do this for now, however, this seems rather roundabout and I think there should still be a function which just returns all field descriptors altogether., bq.  I think there should still be a function which just returns all field descriptors altogether.

That makes sense. Instead of writing a work around, why not just add a function to the metastore thrift api that returns all columns (including partition columns)?
{code}
list<FieldSchema> get_schema(1:string db_name, 2:string tbl_name) 
         throws (1: MetaException o1, 2: UnknownTableException o2, 3: UnknownDBException o3),
{code}, Sounds like a good idea. I'll do that instead. Does anyone know if thrift permits the overloading of function names? The Hive server already has a function called get_schema with different arguments., Patch Added:
Implements get_schema() in HiveMetaStore.java
Added get_schema() test cases to TestHiveMetaStore
Also added test cases for get_fields() in TestHiveMetaStore (related function)
All tests pass., The changes look good. Will commit it if tests pass., Committed. Thanks Eric!]