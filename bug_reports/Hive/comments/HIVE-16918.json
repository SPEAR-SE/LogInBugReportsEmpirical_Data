[Patch attached., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12873531/HIVE-16918.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 11 failed/errored test(s), 10829 tests executed
*Failed tests:*
{noformat}
TestHiveServer2 - did not produce a TEST-*.xml file (likely timed out) (batchId=227)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[orc_ppd_basic] (batchId=140)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query16] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query94] (batchId=232)
org.apache.hadoop.hive.ql.parse.TestReplicationScenariosAcrossInstances.testBootstrapFunctionReplication (batchId=216)
org.apache.hadoop.hive.ql.parse.TestReplicationScenariosAcrossInstances.testCreateFunctionIncrementalReplication (batchId=216)
org.apache.hadoop.hive.ql.parse.TestReplicationScenariosAcrossInstances.testCreateFunctionWithFunctionBinaryJarsOnHDFS (batchId=216)
org.apache.hive.hcatalog.api.TestHCatClient.testPartitionRegistrationWithCustomSchema (batchId=177)
org.apache.hive.hcatalog.api.TestHCatClient.testPartitionSpecRegistrationWithCustomSchema (batchId=177)
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation (batchId=177)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/5677/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/5677/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-5677/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 11 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12873531 - PreCommit-HIVE-Build, Updating patch to be a little more resilient, so as to determine which type of copy to call based on paths, rather than depend on the ReplCopyTask instantiator calling it appropriately.

(Also, note : the above test failures reported by ptest do not seem to be related, and pass locally), Is the call to {{isLocalFile()}} the reason why you no longer need explicit handling for {{_metadata}} in {{ExportSemanticAnalyzer}}?, Correct. If we send along a file:// path, it will not use distcp., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12873570/HIVE-16918.2.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 13 failed/errored test(s), 10833 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[orc_ppd_basic] (batchId=140)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[tez_smb_main] (batchId=149)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_if_expr] (batchId=145)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query16] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query94] (batchId=232)
org.apache.hadoop.hive.ql.parse.TestReplicationScenariosAcrossInstances.testBootstrapFunctionReplication (batchId=216)
org.apache.hadoop.hive.ql.parse.TestReplicationScenariosAcrossInstances.testCreateFunctionIncrementalReplication (batchId=216)
org.apache.hadoop.hive.ql.parse.TestReplicationScenariosAcrossInstances.testCreateFunctionWithFunctionBinaryJarsOnHDFS (batchId=216)
org.apache.hive.beeline.TestBeeLineWithArgs.testQueryProgressParallel (batchId=220)
org.apache.hive.hcatalog.api.TestHCatClient.testPartitionRegistrationWithCustomSchema (batchId=177)
org.apache.hive.hcatalog.api.TestHCatClient.testPartitionSpecRegistrationWithCustomSchema (batchId=177)
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation (batchId=177)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/5684/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/5684/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-5684/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 13 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12873570 - PreCommit-HIVE-Build, [~sushanth] shouldnt *pfile* scheme also do a regular copy ? , Correct, pfile should also do a regular copy - however, pfile could never be encountered outside of hive testing, and so I thought that HIVE_IN_TEST is a clearer indicator of that check. I do see the reasoning behind being consistent though. What do you think? Should we change that?, I think HIVE_IN_TEST is definitely better indicator. However I was thinking that any method on pfile implementation should first check for "HIVE_IN_TEST" and everywhere else we can just do the pfile/file scheme check. this way we wont be using HIVE_IN_TEST in various classes as it will be limited to only the proxyfilesystem class and we use the pfile as a regular scheme everywhere. What do you think ?, +1 to the patch. Let get this in asap, as without this the repl v2 is in a broken state in master.

I think we should follow up on the pfile discussion. One concern on having checks with "pfile" scheme, that i have is that "pfile" is a test only thing in hive. What if someone introduce a "power file system" or so, that hive needs to work with and they use "pfile" scheme ?
, Hive 3.0.0 has been released so closing this jira.]