[The following is the output with the proposed fix with --silent=true and --silent=false (query is echoed back)
{code}
$ beeline -u jdbc:hive2://localhost.com:10000/default --showHeader=false --silent=true -f query.sql 

+-------------------+--------------------+--+
| true              | t                  |
| false             | f                  |
| TRUE              | T                  |
| FALSE             | F                  |
| ZERO              | 0                  |
+-------------------+--------------------+--+

$ beeline -u jdbc:hive2://localhost:10000/default --showHeader=false --silent=false -f query.sql 
0: jdbc:hive2://localhost> select * from booleantest limit 5;
+-------------------+--------------------+--+
| true              | t                  |
| false             | f                  |
| TRUE              | T                  |
| FALSE             | F                  |
| ZERO              | 0                  |
+-------------------+--------------------+--+
5 rows selected (1.087 seconds)
0: jdbc:hive2://localhost> 
Closing: 0: jdbc:hive2://localhost:10000/default
{code}
, Patch looks good. One minor thing, I noticed there is a bland line in the console output for -f when --silent=true. Is there a way to get rid of that?, Thanks Xuefu, I will take a look where this is from. I suspect this might be from jline printing an empty buffer that holds the prompt & the query string., This is coming from the jline code. As it reads from the script file character by character, it adds it to the StringBuffer and also echoes it to the terminal, if mask character is null. In this case, we have set the mask character to null character value to prevent this echo. When it encounters a EOL character in the file aka ";", it completes the line and prints a newline character and returns the line to beeline to be executed. 

{code}
<snip>
                            case ACCEPT_LINE:
                                return accept();
</snip>
<snip>
    public String accept() throws IOException {
        moveToEnd();
        println(); // output newline
        flush();
        return finishBuffer();
    }
</snip>
<snip>
    public final void println() throws IOException {
        print(CR);
    }
</snip>
{code}

If this newline were to be turned off, the first line of the result set would be printed on the same line as the query. Something like this
{code}
$ beeline -u jdbc:hive2://localhost:10000/default --showHeader=false --silent=false --outputformat=tsv2 -f query.sql 
scan complete in 2ms
Connecting to jdbc:hive2://localhost:10000/default
0: jdbc:hive2://localhost> select * from booleantest limit 5;true   t
false   f
TRUE    T
FALSE   F
ZERO    0
{code}

jline code does not provide any APIs to allow me to dictate this. Something like this should fix this. I will file a jira against jline.
{code}
    public final void println() throws IOException {
        if (mask == null)
          print(CR);
    }
{code}

For now, we may have to get by with what we have., I have filed a new jira against jline to have this fixed.
https://github.com/jline/jline2/issues/181
, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12707246/HIVE-10087.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 8337 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_groupby3_map_multi_distinct
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3154/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3154/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-3154/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12707246 - PreCommit-HIVE-TRUNK-Build, +1, Committed to trunk. Thanks, Naveen., Thank you Xuefu., This issue has been fixed and released as part of the 1.2.0 release. If you find an issue which seems to be related to this one, please create a new jira and link this one with new jira.]