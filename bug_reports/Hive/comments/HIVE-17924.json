[The interface has been deprecated for ~3 years before removal. There's no reason to keep it (that I know of)., The reason for keeping it is because removing it is painful for our users. For an API breaking change there should be a very good reason.  I believe the right fix is removing the deprecation., It's an interface that serves no useful purpose... APIs change, esp. between major versions (this was deprecated in 0.NN and removed in 2.3). The code change for users is expected over such a long timeframe and is a trivial one-line change. I don't see a specific use case for restoring it., Btw, that patch added a method to SerDe with a default implementation; to duplicate this functionality one would either need to add a method to the interface, which is actually more disruptive and to more people (right now anyone who is using AbstractSerDe is not affected); or adding bunch of instanceof-s everywhere where SerDe and not AbstractSerDe will be used, which is an ugly hack that amply justifies the API change as described above (deprecated for years over 2 major versions, one-line change to fix for some users), Which is the necessary method?

Hive is on Java 8 now, I believe, which would mean we can add default methods to interfaces., shouldStoreFieldsInMetastore.
Wouldn't Java 8 still require people to rebuild? 
My main concern though is removing a useless interface (that we also don't recommend using, given AbstractSerDe) is a normal API change. What is the use case to not remove it?, Moving to 2.3.3 release as this still seems to be a WIP, [~owen.omalley], do we still target this to 2.3.3? I am about to release 2.3.3., Move it to 2.4.0. Let me know if any thoughts.]