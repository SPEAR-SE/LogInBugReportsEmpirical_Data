[The root cause of this issue is in {{RetryingHMSHandler.invokeInternal}} method, specifically the following lines:

{code}
if (retryCount >= retryLimit) {
    LOG.error("HMSHandler Fatal error: " + ExceptionUtils.getStackTrace(caughtException));
    // Since returning exceptions with a nested "cause" can be a problem in
    // Thrift, we are stuffing the stack trace into the message itself.
    throw new MetaException(ExceptionUtils.getStackTrace(caughtException));
}
{code}

Some context: this code is run on the Hive Metastore server (clients communicate with the remote Hive Metastore instance via a Thrift API).

The {{caughtException}} variable is a {{JDOFatalUserException}}. So the entire stack-trace of {{JDOFatalUserException}} gets stuffed into the message of a {{MetaException}}, which then gets returned to the client (HiveServer2 usually), via the Hive Metastore Thrift API. This only happens for {{JDOException}}s due to some other logic in the class, which is why it is not a very common complaint. So when HiveServer2 sees an exception is thrown by the Metastore, it displays the exception message to the user, which in this case contains the full stack-trace of the exception.

Note that the comments in the code mention that the stack-trace is stuffed into the message due to some problems with Thrift not sending the entire stack-trace back to the client. This comment was added in HIVE-3400 - there is a Phabricator review linked to the Hive JIRA (https://reviews.facebook.net/D4791) which contains a relevant conversation about this choice, I copied it below:

{code}
Actually the RetryingHMSHandler is currently putting the stacktrace into the "message" of the MetaException and not its "cause". In the Thrift generated MetaException.java, there is no constructor taking the cause so I stuffed it into the message. Now that I think of it, I can call initCause(jdoexception) after constructing the MetaException. Then I can make the change you suggested. Do you want me to do that?
...
Yes, please do that. Type comparison is much better than regex matching.
...
Unfortunately, things break with that change. In direct db mode things are fine. But when we go through Thrift, the MetaException received by Hive client from the Thrift server has null as its cause. Even though the cause is being set properly on the Thrift side. This might be happening because Thrift does not "know" about JDOExceptions. Or it may even be a limitation of Thrift exception handling. Not sure. I'm satisfied with the way it was. The two key requirements of letting the client know about the JDOException and shipping the entire stack trace back were being met. What do you think?
...
Yeah, lets keep it this way then. If, thrift can't transport exception trace correctly. I will suggest to leave a comment there saying why we have to do regex matching of exception message instead of checking type of exception.
{code}

I modified the code to stop stuffing the stack-trace into the exception message, and I tested the change locally. The change works. The full exception is still shipped to the client (HiveServer2), who prints the full exception stack trace in its log files, and only the exception message is displayed to the user. I was sure to run the Hive Metastore as a Thrift Server in order to check if Thrift had any issues transporting the stack trace of the exception, and I saw no issues., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12813112/HIVE-14090.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 6 failed/errored test(s), 10273 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_list_bucket_dml_12
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_list_bucket_dml_13
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_stats_list_bucket
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver_vector_complex_all
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver_vector_complex_join
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_create_with_constraints_duplicate_name
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/276/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/276/console
Test logs: http://ec2-50-18-27-0.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-MASTER-Build-276/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 6 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12813112 - PreCommit-HIVE-MASTER-Build, [~spena] can you review?, Looks like I made need to re-generate some golden files which expect the full stack trace of the {{JDOException}} to be present in the query response., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12815279/HIVE-14090.1.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 5 failed/errored test(s), 10287 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_list_bucket_dml_12
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_subquery_multiinsert
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver_vector_complex_all
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver_vector_complex_join
org.apache.hadoop.hive.llap.tezplugins.TestLlapTaskSchedulerService.testDelayedLocalityNodeCommErrorImmediateAllocation
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/329/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/329/console
Test logs: http://ec2-50-18-27-0.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-MASTER-Build-329/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 5 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12815279 - PreCommit-HIVE-MASTER-Build, Test failures seem un-related., Good, the patch looks good. Thanks for the investigation of this issue too. Great work.
+1]