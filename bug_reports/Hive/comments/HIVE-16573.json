[In {{InPlaceUpdate.canRenderInPlace}}, we don't check the config for spark. [~anishek], I noted you made the change in HIVE-15473. Any reason why the check for spark has to be removed?, [~lirui] The ability to show progress bar on beeline client side lead to changes that i was not sure how it would be done on spark side as i had very little insight into spark as an engine for hive, hence i worked with the tez engine first and planed to do final modification for spark towards the end.Now that i look back into it, i think i missed that condition for spark, i think that condition has to be slightly modified as 

{code}
      if (SessionState.get().getConf()
          .getBoolVar(HiveConf.ConfVars.HIVE_SERVER2_INPLACE_PROGRESS) && engine.equals("spark"))
        inPlaceUpdates = HiveConf.getBoolVar(conf, HiveConf.ConfVars.SPARK_EXEC_INPLACE_PROGRESS);
    }

{code}
, [~anishek], thanks for the explanations. However, I 'm not sure why we have to check {{HIVE_SERVER2_INPLACE_PROGRESS}} for spark. Especially that {{HIVE_SERVER2_INPLACE_PROGRESS}} indicates it only works for tez at the moment. My understanding is {{InPlaceUpdate.canRenderInPlace}} should only check {{TEZ_EXEC_INPLACE_PROGRESS}} and {{SPARK_EXEC_INPLACE_PROGRESS}} for tez and spark respectively. {{HIVE_SERVER2_INPLACE_PROGRESS}} can be checked on top of this when deciding whether progress bar is enabled for beeline. So I think we can revert to the code before HIVE-15473. Thoughts?
{code}
	    String engine = HiveConf.getVar(conf, HiveConf.ConfVars.HIVE_EXECUTION_ENGINE);		
	    boolean inPlaceUpdates = false;		
	    if (engine.equals("tez")) {		
	      inPlaceUpdates = HiveConf.getBoolVar(conf, HiveConf.ConfVars.TEZ_EXEC_INPLACE_PROGRESS);		
	    }		
	    if (engine.equals("spark")) {		
	      inPlaceUpdates = HiveConf.getBoolVar(conf, HiveConf.ConfVars.SPARK_EXEC_INPLACE_PROGRESS);		
	    }
{code}, [~ruili] The reason we need the additional check is because when using beeline, it will always request the progress bar and since spark code flow does not have any implementation to serialize the progress information it might result in errors. For spark progress bar is only available on hive-cli mode not hiveserver2 + beeline mode. the method is currently common for both tez/spark code flows and hence all variations have to be taken care of independently 

* enable server side progress bar info    X  for both tez /  spark
* enable hive cli side progress bar info    X  for both tez / spark 

Hope this makes makes., [~anishek], in that case, how about having separate methods checking for server side and cli side? Cli side can use the check in my previous comment, and server side can use {{HIVE_SERVER2_INPLACE_PROGRESS + cli side check + non-spark}}. Otherwise, the progress bar will be disabled for spark in cli mode when {{HIVE_SERVER2_INPLACE_PROGRESS}} is false, which is unexpected according to the description of the config., [~ruili] i think i see where i confused you with my comments. please have a look at code below :

{code}
 if (!SessionState.get().isHiveServerQuery() && engine.equals("spark")) {
      inPlaceUpdates = HiveConf.getBoolVar(conf, HiveConf.ConfVars.SPARK_EXEC_INPLACE_PROGRESS);
}
{code}

I hope the above solves the case for hive-cli + spark to have progress bar enabled ?, [~ruili] I'm interesting on this, could I take over it? Thank you., Thanks [~libing] for the help. Just feel free to take it. And you can follow [~anishek]'s suggestions., Hi, [~ruili] and [~anishek]
Seems that we can't import class SessionState into InPlaceUpdate.java, it will cause module cycles error during compiling, which is hive-common->hive-exec->hive-common.

I changed it as below:
{quote}
    String engine = HiveConf.getVar(conf, HiveConf.ConfVars.HIVE_EXECUTION_ENGINE);
    boolean inPlaceUpdates = false;

    if (engine.equals("tez"))
      inPlaceUpdates = HiveConf.getBoolVar(conf, HiveConf.ConfVars.TEZ_EXEC_INPLACE_PROGRESS);

    if (engine.equals("spark"))
      inPlaceUpdates = HiveConf.getBoolVar(conf, HiveConf.ConfVars.SPARK_EXEC_INPLACE_PROGRESS);
{quote}

Do you think is ok?
, Generate the patch file based on master branch, +1. [~anishek] would you mind also have a look? Thanks, +1 looks good, I think this bug to manage the in place update progress on hive-cli side, this still does not take care of showing the progress on beeline side ?, [~anishek], yeah spark only supports in-place update in CLI. In the current method we don't check {{isHiveServerQuery}} for tez either (actually as Bing mentioned we can't access SessionState here), so I suppose the change is OK, right?, [~lirui] yes change is fine, I was just confirming that we were on the same page: that this is only for cli. , I verified this patch, it could work for spark engine on HiveCLI., [~ruili] and [~anishek], thank you for your review.
I just submitted the patch.
, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12871188/HIVE-16573.1.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 7 failed/errored test(s), 10820 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestBeeLineDriver.testCliDriver[insert_overwrite_local_directory_1] (batchId=237)
org.apache.hadoop.hive.cli.TestBlobstoreCliDriver.testCliDriver[insert_into_dynamic_partitions] (batchId=240)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[orc_ppd_basic] (batchId=140)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[columnstats_part_coltype] (batchId=157)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_if_expr] (batchId=145)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query78] (batchId=232)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/5539/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/5539/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-5539/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 7 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12871188 - PreCommit-HIVE-Build, Pushed to master. Thanks Bing for the contribution and Anishek for the review., Hive 3.0.0 has been released so closing this jira.]