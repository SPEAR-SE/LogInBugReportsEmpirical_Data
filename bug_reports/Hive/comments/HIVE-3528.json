[Patch with proposed fix and unit tests. Also on [review board #7431|https://reviews.apache.org/r/7431/], This looks good.  Let me test the patch., Looks good.  Added a couple comments to reviewboard.  Also, it would be great to add a .q test that the Avro Serde can handle null records (with a proper nullable Avro schema) from other formats from Hive.  Had meant to do that during the Apachification.  If you'd like to add that to this patch, that'd be great.  If not, I'll spin up a quick test after this gets committed.  , FYI, I'm working on the .q test, just building off of the example [on the using the Avro Serde page|https://cwiki.apache.org/confluence/display/Hive/AvroSerDe+-+working+with+Avro+from+Hive]. Ran into some difficulty, trying to work back from the test logs to figure out what I'm doing wrong., Great.  Happy to help either here or email me., Update with clientpositive .q test and subsumed enum handling (HIVE-3538) to [review board #7431|https://reviews.apache.org/r/7431/], Did a review on rb, but it doesn't seem to be showing up.  +1.  Great tests., Sean, can you attach the RB patch to the JIRA?, Updated patch from review board., +1 running tests., Thanks, Sean for fix. Thanks, Jakob for review!, If there's a 10.1 release, it'd be good to get this in there.  Can it be committed to the 10 branch?, Integrated in hive-trunk-hadoop1 #43 (See [https://builds.apache.org/job/hive-trunk-hadoop1/43/])
    HIVE-3528 : Avro SerDe doesn't handle serializing Nullable types that require access to a Schema (Sean Busbey via Ashutosh Chauhan) (Revision 1438599)

     Result = ABORTED
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1438599
Files : 
* /hive/trunk/ql/src/test/queries/clientpositive/avro_nullable_fields.q
* /hive/trunk/ql/src/test/results/clientpositive/avro_nullable_fields.q.out
* /hive/trunk/serde/src/java/org/apache/hadoop/hive/serde2/avro/AvroSerializer.java
* /hive/trunk/serde/src/test/org/apache/hadoop/hive/serde2/avro/TestAvroDeserializer.java
* /hive/trunk/serde/src/test/org/apache/hadoop/hive/serde2/avro/TestAvroObjectInspectorGenerator.java
* /hive/trunk/serde/src/test/org/apache/hadoop/hive/serde2/avro/TestAvroSerializer.java
, Integrated in Hive-trunk-hadoop2 #88 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/88/])
    HIVE-3528 : Avro SerDe doesn't handle serializing Nullable types that require access to a Schema (Sean Busbey via Ashutosh Chauhan) (Revision 1438599)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1438599
Files : 
* /hive/trunk/ql/src/test/queries/clientpositive/avro_nullable_fields.q
* /hive/trunk/ql/src/test/results/clientpositive/avro_nullable_fields.q.out
* /hive/trunk/serde/src/java/org/apache/hadoop/hive/serde2/avro/AvroSerializer.java
* /hive/trunk/serde/src/test/org/apache/hadoop/hive/serde2/avro/TestAvroDeserializer.java
* /hive/trunk/serde/src/test/org/apache/hadoop/hive/serde2/avro/TestAvroObjectInspectorGenerator.java
* /hive/trunk/serde/src/test/org/apache/hadoop/hive/serde2/avro/TestAvroSerializer.java
, Integrated in Hive-trunk-h0.21 #1937 (See [https://builds.apache.org/job/Hive-trunk-h0.21/1937/])
    HIVE-3528 : Avro SerDe doesn't handle serializing Nullable types that require access to a Schema (Sean Busbey via Ashutosh Chauhan) (Revision 1438599)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1438599
Files : 
* /hive/trunk/ql/src/test/queries/clientpositive/avro_nullable_fields.q
* /hive/trunk/ql/src/test/results/clientpositive/avro_nullable_fields.q.out
* /hive/trunk/serde/src/java/org/apache/hadoop/hive/serde2/avro/AvroSerializer.java
* /hive/trunk/serde/src/test/org/apache/hadoop/hive/serde2/avro/TestAvroDeserializer.java
* /hive/trunk/serde/src/test/org/apache/hadoop/hive/serde2/avro/TestAvroObjectInspectorGenerator.java
* /hive/trunk/serde/src/test/org/apache/hadoop/hive/serde2/avro/TestAvroSerializer.java
, I've tried the latest Avro SerDe from GitHub, and it allows me to write NULLs with a simple schema, but not with anything involving STRUCTs.  If a STRUCT contains NULLable fields, or the entire STRUCT is NULLable (optional), Hive throws exceptions.  Should I create new JIRA item(s)?, Hi Michael,

Do you mean [Haivvreo|https://github.com/jghoman/haivvreo]? I don't believe this fix has been backported. Issues with that project should be filed [against its issue tracker|https://github.com/jghoman/haivvreo/issues]. I believe that project is only maintained on a best effort basis now, in favor of the integrated support within Hive., Sean:

I mean
https://github.com/apache/hive/tree/trunk/serde/src/java/org/apache/hadoop/hive/serde2/avro

which has:
	AvroSerializer.java	20 days ago	HIVE-3528 : Avro SerDe doesn't handle serializing Nullable types that
, In that case, since 0.11 hasn't gone out yet, either including error information here or starting another JIRA is fine.

I'd recommend including the error information here until we can determine if your problem is the one that this patch is supposed to fix., Sean:

OK, I've researched the problem further.

There is in fact a null-struct test case in line 14 of
https://github.com/apache/hive/blob/15cc604bf10f4c2502cb88fb8bb3dcd45647cf2c/data/files/csv.txt

The test script at
https://github.com/apache/hive/blob/12d6f3e7d21f94e8b8490b7c6d291c9f4cac8a4f/ql/src/test/queries/clientpositive/avro_nullable_fields.q

does indeed work when I tested it locally.  But in that test, the query gets all of its data from a test table verbatim:

INSERT OVERWRITE TABLE as_avro SELECT * FROM test_serializer;

If instead we stick in a hard-coded null for the struct directly into the query, it fails:

INSERT OVERWRITE TABLE as_avro SELECT string1, int1, tinyint1, smallint1, bigint1, boolean1, float1, double1, list1, map1, null, enum1, nullableint, bytes1, fixed1 FROM test_serializer;

with the following error:

FAILED: SemanticException [Error 10044]: Line 1:23 Cannot insert into target table because column number/types are different 'as_avro': Cannot convert column 10 from void to struct<sint:int,sboolean:boolean,sstring:string>.

Note, though, that substituting a hard-coded null for string1 (and restoring struct1 to the query) does work:

INSERT OVERWRITE TABLE as_avro SELECT null, int1, tinyint1, smallint1, bigint1, boolean1, float1, double1, list1, map1, struct1, enum1, nullableint, bytes1, fixed1 FROM test_serializer;

I will be entering an all-new JIRA for this.
, Hey Michael,

As a work around, did you try casting the null to the type of the column that you're inserting into? It's not ideal, but might be a workable interim solution.

-Joey, As noted in the first comment from https://issues.apache.org/jira/browse/HIVE-1287, casting to a STRUCT is not currently supported.

However, I did just now try casting individual fields of a STRUCT and that indeed does work.

I just now added details to the JIRA that I created last week.
https://issues.apache.org/jira/browse/HIVE-4022
]