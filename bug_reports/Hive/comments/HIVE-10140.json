[Let me take a look. , Yes, we have some issues in there. It should work like the oracle analytic windows functions as follows.

http://docs.oracle.com/cd/E11882_01/server.112/e41084/functions004.htm#SQLRF06174
http://www.orafaq.com/node/55, We should fix this before HIVE-10555., When it's preceding, valid boundary should be "between 2 preceding and 1 preceding". 

The result for preceding window before was wrong. I will correct that in HIVE-10555. So the unit test result actually was incorrect, just want to show we support such range., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12729525/HIVE-10140.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 8881 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udaf_histogram_numeric
org.apache.hive.jdbc.TestSSL.testSSLConnectionWithProperty
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3681/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3681/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-3681/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12729525 - PreCommit-HIVE-TRUNK-Build, The unit tests are not related to the change., [~ashutoshc] Can you help review the change? The change is to make the supported window boundary to "between 10 preceding and 2 preceding". I notice window boundary with "preceding" only doesn't work properly and will fix in HIVE-10555., You are right. In existing Hive implementation we got it backwards. Patch looks good except for one thing. If I am reading the oracle documentation you pointed correctly, than for either of {{ROWS between 10 preceding and 2 preceding}} or {{ROWS between 2 preceding and 10 preceding}} your patch will treat them as {{ROWS between 10 preceding and 2 preceding}}, whereas oracle seems to consider {{ROWS between 2 preceding and 10 preceding}} as illegal expression and throws error of similar effect which Hive was throwing (although for opposite case)., It will be great if you can test these cases with oracle and/or postgres and check whats their behavior for such queries., In my patch, {{ROWS between 2 preceding and 10 preceding}} will be treated as illegal expression as well. , {{Window range invalid, start boundary is greater than end boundary: window(start=range(2 PRECEDING), end=range(10 PRECEDING))}} error will be thrown. , Yes. I verified against Oracle. Trying to follow what Oracle has. Seems what Oracle has makes sense and more straightforward., Ok.. Thanks for testing this out. +1, Committed to master. Thanks, Aihua!]