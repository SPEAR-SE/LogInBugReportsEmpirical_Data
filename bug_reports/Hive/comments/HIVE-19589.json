[| (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 26s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 16s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 14s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m 32s{color} | {color:blue} common in master has 62 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 13s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 17s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 16s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 37s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 14s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 12s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 10m 54s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Optional Tests |  asflicense  javac  javadoc  findbugs  checkstyle  compile  |
| uname | Linux hiveptest-server-upstream 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1+deb8u1 (2016-09-03) x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /data/hiveptest/working/yetus_PreCommit-HIVE-Build-11056/dev-support/hive-personality.sh |
| git revision | master / 0420bde |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| modules | C: common U: common |
| Console output | http://104.198.109.242/logs//PreCommit-HIVE-Build-11056/yetus.txt |
| Powered by | Apache Yetus    http://yetus.apache.org |


This message was automatically generated.

, An initial list of tests that I have detected flaky for these runs and other runs:
{noformat}
 org.apache.hive.hcatalog.pig.TestHCatLoaderComplexSchema.testTupleInBagInTupleInBag[4]
 org.apache.hive.hcatalog.pig.TestTextFileHCatStorer.testWriteDecimal
 org.apache.hive.jdbc.TestTriggersTezSessionPoolManager.org.apache.hive.jdbc.TestTriggersTezSessionPoolManager
 org.apache.hive.jdbc.TestTriggersWorkloadManager.org.apache.hive.jdbc.TestTriggersWorkloadManager
 org.apache.hadoop.hive.ql.TestTxnCommands.testQuotedIdentifier2
 org.apache.hadoop.hive.ql.TestTxnCommandsForMmTable.testSnapshotIsolationWithAbortedTxnOnMmTable
 org.apache.hadoop.hive.ql.TestTxnCommandsWithSplitUpdateAndVectorization.testMergeOnTezEdges
 org.apache.hadoop.hive.ql.TestTxnNoBuckets.testToAcidConversion02
 org.apache.hadoop.hive.ql.plan.mapping.TestReOptimization.testStatCachingMetaStore
 org.apache.hadoop.hive.ql.TestAutoPurgeTables.testAutoPurgeUnset
 org.apache.hadoop.hive.ql.TestAutoPurgeTables.testPartitionedNoAutoPurge
 org.apache.hadoop.hive.ql.TestAutoPurgeTables.testTruncateUnsetAutoPurge
 org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[multi_insert_move_tasks_share_dependencies]
 org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver[bucketizedhiveinputformat]
 org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[mm_all]
 org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[llap_smb]
 org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[union_stats]
{noformat}

A few notes:
- For {{union_stats}}, there is work going on in HIVE-19326. We can disable it till it gets in.
- For {{TestReoptimization}}, HIVE-19574. We can also disable that one till that gets fixed.
- {{TestAutoPurgeTables}} has been failing quite a lot, we added the retry annotation, but it does not seem to help. Candidate to disable for the time being?
- Same for triggers tests, usually with following error:
{noformat}
Error Message
java.net.BindException: Address already in use
{noformat}
- For some tests, mocking objects could fix a great deal. For instance, {{testQuotedIdentifier2}} failed with the following stacktrace:
{code}
org.apache.hadoop.hive.metastore.api.NoSuchObjectException: Column stats doesn't exist for db=default temp table=acidTbl2
	at org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient.deleteTempTableColumnStatsForTable(SessionHiveMetaStoreClient.java:795) ~[classes/:?]
	at org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient.drop_table_with_environment_context(SessionHiveMetaStoreClient.java:135) [classes/:?]
	at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.dropTable(HiveMetaStoreClient.java:1268) [hive-standalone-metastore-3.1.0-SNAPSHOT.jar:3.1.0-SNAPSHOT]
	at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.dropTable(HiveMetaStoreClient.java:1222) [hive-standalone-metastore-3.1.0-SNAPSHOT.jar:3.1.0-SNAPSHOT]
	at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.dropTable(HiveMetaStoreClient.java:1203) [hive-standalone-metastore-3.1.0-SNAPSHOT.jar:3.1.0-SNAPSHOT]
	at sun.reflect.GeneratedMethodAccessor34.invoke(Unknown Source) ~[?:?]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_102]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_102]
	at org.apache.hadoop.hive.metastore.RetryingMetaStoreClient.invoke(RetryingMetaStoreClient.java:212) [hive-standalone-metastore-3.1.0-SNAPSHOT.jar:3.1.0-SNAPSHOT]
	at com.sun.proxy.$Proxy39.dropTable(Unknown Source) [?:?]
	at org.apache.hadoop.hive.ql.metadata.Hive.dropTable(Hive.java:1033) [classes/:?]
	at org.apache.hadoop.hive.ql.metadata.Hive.dropTable(Hive.java:970) [classes/:?]
	at org.apache.hadoop.hive.ql.exec.DDLTask.dropTable(DDLTask.java:4736) [classes/:?]
	at org.apache.hadoop.hive.ql.exec.DDLTask.dropTableOrPartitions(DDLTask.java:4590) [classes/:?]
	at org.apache.hadoop.hive.ql.exec.DDLTask.execute(DDLTask.java:438) [classes/:?]
	at org.apache.hadoop.hive.ql.exec.Task.executeTask(Task.java:205) [classes/:?]
	at org.apache.hadoop.hive.ql.exec.TaskRunner.runSequential(TaskRunner.java:97) [classes/:?]
	at org.apache.hadoop.hive.ql.Driver.launchTask(Driver.java:2482) [classes/:?]
	at org.apache.hadoop.hive.ql.Driver.execute(Driver.java:2149) [classes/:?]
	at org.apache.hadoop.hive.ql.Driver.runInternal(Driver.java:1826) [classes/:?]
	at org.apache.hadoop.hive.ql.Driver.run(Driver.java:1569) [classes/:?]
	at org.apache.hadoop.hive.ql.Driver.run(Driver.java:1558) [classes/:?]
	at org.apache.hadoop.hive.ql.TxnCommandsBaseForTests.runStatementOnDriver(TxnCommandsBaseForTests.java:152) [test-classes/:?]
	at org.apache.hadoop.hive.ql.TxnCommandsBaseForTests.dropTables(TxnCommandsBaseForTests.java:111) [test-classes/:?]
	at org.apache.hadoop.hive.ql.TxnCommandsBaseForTests.tearDown(TxnCommandsBaseForTests.java:118) [test-classes/:?]
	at sun.reflect.GeneratedMethodAccessor103.invoke(Unknown Source) ~[?:?]
{code}
This is when we are tearing down the test, hence maybe we could even ignore the failure. But apart from that, I wonder whether we needed such a complex setup in the first place to test quoted identifiers? Maybe such test could be rewritten to use a mock implementation for some of those classes.

[~sershe], let's get on top of them and get more consistent green runs from today. How do you want to follow-up on this?, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12923988/HIVE-19589.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 12 failed/errored test(s), 14408 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[mm_all] (batchId=153)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[union_stats] (batchId=160)
org.apache.hadoop.hive.ql.TestAutoPurgeTables.testExternalNoAutoPurge (batchId=234)
org.apache.hadoop.hive.ql.TestAutoPurgeTables.testPartitionedNoAutoPurge (batchId=234)
org.apache.hadoop.hive.ql.TestAutoPurgeTables.testTruncateUnsetAutoPurge (batchId=234)
org.apache.hive.jdbc.TestTriggersWorkloadManager.testTriggerCustomCreatedDynamicPartitions (batchId=241)
org.apache.hive.jdbc.TestTriggersWorkloadManager.testTriggerCustomCreatedDynamicPartitionsMultiInsert (batchId=241)
org.apache.hive.jdbc.TestTriggersWorkloadManager.testTriggerCustomCreatedDynamicPartitionsUnionAll (batchId=241)
org.apache.hive.jdbc.TestTriggersWorkloadManager.testTriggerCustomNonExistent (batchId=241)
org.apache.hive.jdbc.TestTriggersWorkloadManager.testTriggerHighBytesRead (batchId=241)
org.apache.hive.jdbc.TestTriggersWorkloadManager.testTriggerHighShuffleBytes (batchId=241)
org.apache.hive.jdbc.TestTriggersWorkloadManager.testTriggerVertexRawInputSplitsNoKill (batchId=241)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/11056/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/11056/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-11056/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.YetusPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 12 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12923988 - PreCommit-HIVE-Build, For {{mm_all}} I see some changes in LINEAGE. [~sershe], should we add option to mask lineage too (as we can do with stats)?, Actually it's not even a change in lineage, it's a change in ordering of lines for lineage it looks like. 
Masking lineage makes sense to me. Should I file a JIRA?, I think no stats exception is a red herring, I see it in logs all over the place but it happens after real failure.
I filed some jiras/patches for some other issues. Some tests need stats or lineage masking, 2 are flaky q files, many failures are due to tmp dir issues., Yeah, checked the code, it's just logged. I will clean it up, no need to log the callstack, TestAutoPurge tables continues failing once and again. 
https://builds.apache.org/job/PreCommit-HIVE-Build/11060/

Should it be disabled for the time being?, +1 to disable, - {{mm_all}} : lineage masked.
- {{union_stats}} : disabled (HIVE-19610).
- {{TestAutoPurgeTables}} disabled (HIVE-19616).
- {{TestTriggersWorkloadManager}} annotated with retry, will continue monitoring in the folllow-up runs.

I will close this issue now., I was able to repro TestTriggersWorkloadManager timeout on a slower cluster. Some of the tests are close to 60s which is the timeout for the tests. I increased the timeouts to 120s and haven't seen a failure on the slow cluster. , This is released in Hive 3.1.0.]