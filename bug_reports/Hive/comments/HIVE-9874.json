[Actually, the above causes problems not just because of the shared storage descriptors, but also because the hbase metastore is caching tables.  The above works with ObjectStore because each call to ms.getTable() returns a new table object.  HBaseStore returns the cached object again and again, so doing

{code}
while ... {
  t = ms.getTable();
  p.setSd(t.getSd());
  p.getSd().setLocation(...);
}
{code}
causes problems.

This patch actually needs to fix three issues:
# This re-use of table storage descriptors in partitions without copying;
# HBaseStore is currently attaching the storage descriptor from HBase directly to the table and partitions, which is wrong.  It should instead be attaching a SharedStorageDescriptor with a unique location and a reference to the storage descriptor from HBase.
# The SharedStorageDescriptor needs copy-on-write semantics so that when a user does {{table.getSd().setInputFormat("something different")}} it only changes the storage descriptor for that table rather than for everything that shares a storage descriptor with that table (eg all its partitions)., This patch depends on HIVE-9885., New version of the patch that doesn't include code from HIVE-9885, Patch 2 committed.]