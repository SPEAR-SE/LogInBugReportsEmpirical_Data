[Patch which seems to resolve the issue., [~ccondit] I think current behavior is correct. To achieve what you want (ie configure hbase for hive) you should put {{hbase-site.xml}} in hive's classpath so that hbase configs are picked up from there, instead of putting hbase configs in hive-site.xml, In our case, I'm not sure the best way to handle this. We have some options (such as HBase direct reads) that require configuration parameters that would affect all HDFS users. Those configurations would be set if we included hbase-site.xml, and wouldn't be overridable.

It just seems like configuration in hive-site.xml should override hbase-site.xml, and not the other way around., FWIW, I think [~ccondit] is correct. I would expect property resolution order to be:
# command-line overrides
# SET statements in script
# hbase-site.xml on classpath
# hbase-default.xml in hbase-common.jar, While I agree with the order Nick is putting forth, and thus, a need for the addResources to not clobber the existing set config, I have to say I balk at the notion of putting hbase-specific config, even if associated with hbase-hive integration inside hive-site.xml. That seems to be asking for errors arising from messy config keeping. It can lead up to two-sources of truth if hive treats hive's copy of hbase config as prime, and hbase server/etc that the handler talk to treat hbase config as prime truth., bq. I balk at the notion of putting hbase-specific config, even if associated with hbase-hive integration inside hive-site.xml.

It has worked this way for a very long time and users have been doing this.  Breaking our users is not something we should do., Oh, I don't disagree that we need to fix it, it's necessary to, and at the very least because SET semantics need to be maintained. I would, however, still encourage users to avoid that pattern. :), Also, there is an issue with the attached patch, I'm afraid what will happen with that merge is this:

There'll be a newConf created, with the new properties from hbase-default.xml , etc , overriding the properties in jobConf.

Then, with that merge direction, everything in newConf will override existing values in jobConf. Unless I'm reading HBaseConfiguration.merge incorrectly, I believe the goal here might have been to go the other way, but that'll give us a usable newConf, whereas we wanted to make modifications to jobConf. Since this is a duplicate of HIVE-6115, and that patch is closer to the required solution, I think, I'm going to shift over to that bug.
, Thank you very much for looking into this! Let's take it forward over on HIVE-6115.]