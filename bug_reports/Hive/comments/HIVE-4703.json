[Attached webhcatMini.sh test script, Executing the same create table from Hive CLI shell works fine.
This may be related to HIVE-4449, but repro steps there are not specified., hive> show tables;
OK
Time taken: 2.016 seconds
hive> CREATE TABLE if not exists pokes (foo INT COMMENT "my column comment") COMMENT "table comment";
OK
Time taken: 0.256 seconds
hive> desc pokes;
OK
foo                 	int                 	my column comment   
Time taken: 0.14 seconds, Fetched: 1 row(s)
hive> show create table pokes;
OK
CREATE  TABLE pokes(
  foo int COMMENT 'my column comment')
COMMENT 'table comment'
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe' 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
  'file:/user/hive/warehouse/pokes'
TBLPROPERTIES (
  'transient_lastDdlTime'='1371773134')
Time taken: 0.083 seconds, Fetched: 13 row(s)
hive> , When table is create like so:
curl -i -X PUT -HContent-type:application/json \
   -d '{ "comment":"test comment", "columns": [ { "name": "int", "type": "string", "comment":"1st column comment" }, {"name":"int2", "type":"int"} ], "format": { "storedAs": "rcfile" } }' \
    'http://localhost:50111/templeton/v1/ddl/database/default/table/test_table?user.name=ekoifman'

and then 'desc test_table' from Hive CLI the output looks like:
hive> desc test_table;
OK
int                 	string              	from deserializer   
int2                	int                 	from deserializer   
Time taken: 0.099 seconds, Fetched: 2 row(s)

or curl -i -X GET 'http://localhost:50111/templeton/v1/ddl/database/default/table/test_table?user.name=ekoifman'

ql.exec.DDLTask.describeTable() calls 
ql.metadata.Table.getCols()
 getCols() has access to a StorageDescriptor instance which as the correct column Comments but it's not
using it.  Instead it branches to use Hive.getFieldsFromDeserializer(getTableName(), getDeserializer())

It looks like metastore.MetaStoreUtil.determineFieldComment() produces "from deserializer" message.

Also, there are dozens of .q.out and other test files are written to expect "from deserializer" message.

So I'm not sure how WebHcat e2e tests worked before as written.
See for example, tests 4 & 8  in REST_DDL_TABLE_BASIC group in hcatalog/src/test/e2e/templeton/tests/ddl.conf
, This issue is only new for rcfile type tables.
It started happening with the addition of 
<property>
  <name>hive.default.rcfile.serde</name>
  <value>org.apache.hadoop.hive.serde2.columnar.LazyBinaryColumnarSerDe</value>
  <description>The default SerDe hive will use for the rcfile format</description>
</property>

to hive-default.xml.template.

see org.apache.hadoop.hive.serde2.SerDeUtils.shouldGetColsFromSerDe()

The long term fix is to make sure that Table.getCols() gets the information from StorageDescriptor (i.e. metastore) rather than from SerDe.
, https://issues.apache.org/jira/browse/HIVE-4703?focusedCommentId=13680082&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13680082 and next comment are wrong.  If tableFormat is rcfile the behavior in WebHCat and Hive CLI is the same.  , testCliDriver_avro_evolved_schemas
testCliDriver_avro_compression_enabled (and all other avro_ tests) failed when 
I changed SerDeUtils.shouldGetColsFromSerDe() to return false.
(some other tests failed as well), Preparing for 0.12 release. Removing fix version of 0.12 for those that are not in 0.12 branch.
, I'm seeing similar to this on Hive 0.10 (CDH 4.5), for external tables using Avro.  If I define this Avro schema:

{code}
{
  "type" : "record",
  "name" : "mytable",
  "namespace" : "mynamespace",
  "doc" : "schema comment",
  "fields" : [ {
    "name" : "Test",
    "type" : [ "null", "string" ],
    "doc" : "test field comment",
    "default" : null
  } ]
}
{code}

.. when I use Hue/Beehive to DESCRIBE the table, I get col_name::data_type::comment of: test::string::from deserializer.

.. where "test field comment" <> "from deserializer".

Same problem, or is there an issue with the Avro SerDe?, I also have the same problem with an external table when using JSON SerDe.  I've tried Cloudera's as well as the one from HCatalog.  Both have the same behavior., Although, I am using Hive 0.10.0, so perhaps this has been fixed in a future version?, [~ottomata] We still see this issue in Hive 0.12, Facing this issue with parquet format as well., describe extended tableName displays the comments. But not a properly formatted and not easy to read. But "describe formatted tbalename" is not showing the given column comments., Fixed via HIVE-6681]