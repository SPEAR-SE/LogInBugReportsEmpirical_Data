[Hi, I just tried the following queries, Seems to work fine

// Union all - combine the result-set of two or more select statement.
   Union-all allow duplicate values while matches in both tables 

Input
33	35
55	55.62
20	44
55	100
44	44
33	33
33	55
44	44
33
55	55
	55

Query :>

select c.key, c.value from (
select a.key, a.value from uniontbl a where a.key='33'
union all
select b.key, sum( b.value) as value from uniontbl b where b.key='33'
group by b.key
)c;

o/p: 
33	35.0
33	33.0
33	55.0
33	NULL    --> current and above line blongs to alia  a   ( a.key, a.value )
33	123.0   --> belongs to alias b ( b.key, sum( b.value) )

select c.key, c.value  from (
select a.key, a.value from uniontbl a where a.key='55'
union all
select b.key, sum( b.value) as value from uniontbl b where b.key='55'
group by b.key )c

o/p
55	55.62
55	100.0
55	55.0 	--> current and above line blongs to alia  a   ( a.key, a.value )
55	210.62  --> belongs to alias b ( b.key, sum( b.value) )


Can you give me an example scenario for this, in case I have misunderstood the problem. 

, Hi Frankline Jose S 
the problem is this query before UNION ALL clause is like this :

 select  'username' as key,  'age' as value from ...  

see  the column values are Fixed strings .

Example
select key, value FROM 
( select 'USERNAME' as key, 'AGE' as value – Hi Frankline Jose S , take a look at this 
from src s1 limit 1
UNION ALL 
select s2.key as key, sum(s2.value) as value – datatype: strung, double 
from src s2 group by s2.key
) unionsrc;, Hi Caofangkun,
 
Query is slightly modified in ( alias b )table, typecasted summation value to String  cast(sum(b.value) as String) as value

Jose (key)	-	2.1700977105416958E-287 (value)   
<==>  After <==>
Jose (key)	-	jose (value)

table :- (key String, value String )
input :-
Jose	-	jose
Arun	-	arun
10	-	10
10	-	100
10.20	-	10.20
33	-	35
33	-	5
  	-	22	
Query :-
select c.key, c.value from (
select a.key, a.value from uniontbl a  limit 3  
union all
select b.key, cast(sum(b.value) as String) as value from uniontbl b  
group by b.key )c

output:-
  	22.0	
10	110.0
10.20	10.2
33	40.0
Arun	0.0
Jose	0.0     -- above records belongs to alias b ( b.key, sum( b.value) )
		
Jose	jose	-- below records belongs to alias a ( a.key, a.value )
Arun	arun
10	10, Hi Frankline Jose S  
"cast(sum(b.value) as String) as value"  is a walkaround way to  solve the problem.
but do you think it's necessary that we'd better throw an exception like below in this situation ?
Exception like:
FAILED: Error in semantic analysis: Schema of both sides of union should match

, [~caofangkun] can you clarify when you see the ArrayIndexOutOfBoundsException above?]