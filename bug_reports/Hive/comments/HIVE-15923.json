[Preliminary patch that fixes the main use case.
The approach in HIVE-11208 is fundamentally broken, it mixes levels by using exprs where exprs should already have been evaluated.
I am going to take a look on how to do it, probably by supporting is-null in the parser, if that's simple, cause that would be the minimal code change from existing master.
May be better to just remove the constant thing and make a drop specific change (UDFs modes?), 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12852723/HIVE-15923.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 9 failed/errored test(s), 10239 tests executed
*Failed tests:*
{noformat}
TestDerbyConnector - did not produce a TEST-*.xml file (likely timed out) (batchId=235)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[cbo_rp_auto_join1] (batchId=3)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[drop_partitions_filter4] (batchId=42)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[join31] (batchId=81)
org.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver[encryption_join_with_different_encryption_keys] (batchId=159)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[multiMapJoin2] (batchId=152)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=223)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query23] (batchId=223)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[join31] (batchId=133)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/3560/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/3560/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-3560/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 9 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12852723 - PreCommit-HIVE-Build, Fixing the original test via a custom UDF. I think it might be possible to make it more explicit by creating a different evaluator for the column expr, that would return null in case of type incompatibility, used only for drop; but it amounts to the same thing., [~aihuaxu] can you take a look? Thanks, [~sershe] Sure. I will take a look., I would be glad if we can remove the change from the udf.

From the change, can you check drop partition with condition like {{x != 3}} works if  there is a default partition? I guess, the default one won't get dropped., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12852913/HIVE-15923.01.patch

{color:red}ERROR:{color} -1 due to build exiting with an error

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/3580/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/3580/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-3580/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Tests exited with: NonZeroExitCodeException
Command 'bash /data/hiveptest/working/scratch/source-prep.sh' failed with exit status 1 and output '+ date '+%Y-%m-%d %T.%3N'
2017-02-16 01:41:09.942
+ [[ -n /usr/lib/jvm/java-8-openjdk-amd64 ]]
+ export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
+ JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
+ export PATH=/usr/lib/jvm/java-8-openjdk-amd64/bin/:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
+ PATH=/usr/lib/jvm/java-8-openjdk-amd64/bin/:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
+ export 'ANT_OPTS=-Xmx1g -XX:MaxPermSize=256m '
+ ANT_OPTS='-Xmx1g -XX:MaxPermSize=256m '
+ export 'MAVEN_OPTS=-Xmx1g '
+ MAVEN_OPTS='-Xmx1g '
+ cd /data/hiveptest/working/
+ tee /data/hiveptest/logs/PreCommit-HIVE-Build-3580/source-prep.txt
+ [[ false == \t\r\u\e ]]
+ mkdir -p maven ivy
+ [[ git = \s\v\n ]]
+ [[ git = \g\i\t ]]
+ [[ -z master ]]
+ [[ -d apache-github-source-source ]]
+ [[ ! -d apache-github-source-source/.git ]]
+ [[ ! -d apache-github-source-source ]]
+ date '+%Y-%m-%d %T.%3N'
2017-02-16 01:41:09.945
+ cd apache-github-source-source
+ git fetch origin
+ git reset --hard HEAD
HEAD is now at b63f7d7 HIVE-15892: Vectorization: Fast Hash tables need to do bounds checking during expand (Matt McCline, reviewed by Jason Dere
+ git clean -f -d
+ git checkout master
Already on 'master'
Your branch is up-to-date with 'origin/master'.
+ git reset --hard origin/master
HEAD is now at b63f7d7 HIVE-15892: Vectorization: Fast Hash tables need to do bounds checking during expand (Matt McCline, reviewed by Jason Dere
+ git merge --ff-only origin/master
Already up-to-date.
+ date '+%Y-%m-%d %T.%3N'
2017-02-16 01:41:11.028
+ patchCommandPath=/data/hiveptest/working/scratch/smart-apply-patch.sh
+ patchFilePath=/data/hiveptest/working/scratch/build.patch
+ [[ -f /data/hiveptest/working/scratch/build.patch ]]
+ chmod +x /data/hiveptest/working/scratch/smart-apply-patch.sh
+ /data/hiveptest/working/scratch/smart-apply-patch.sh /data/hiveptest/working/scratch/build.patch
Going to apply patch with: patch -p0
patching file ql/src/java/org/apache/hadoop/hive/ql/exec/ExprNodeConstantDefaultEvaluator.java
patching file ql/src/java/org/apache/hadoop/hive/ql/exec/ExprNodeEvaluatorFactory.java
patching file ql/src/java/org/apache/hadoop/hive/ql/exec/FunctionRegistry.java
patching file ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartitionPruner.java
patching file ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java
patching file ql/src/java/org/apache/hadoop/hive/ql/parse/ReplicationSemanticAnalyzer.java
patching file ql/src/java/org/apache/hadoop/hive/ql/plan/ExprNodeConstantDefaultDesc.java
patching file ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFIsDefaultPartition.java
patching file ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPEqual.java
patching file ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPNotEqual.java
patching file ql/src/test/queries/clientnegative/drop_default_partition_filter.q
patching file ql/src/test/queries/clientpositive/drop_partitions_filter4.q
patching file ql/src/test/queries/clientpositive/partitions_filter_default.q
patching file ql/src/test/results/clientnegative/drop_default_partition_filter.q.out
patching file ql/src/test/results/clientpositive/drop_partitions_filter4.q.out
patching file ql/src/test/results/clientpositive/partitions_filter_default.q.out
+ [[ maven == \m\a\v\e\n ]]
+ rm -rf /data/hiveptest/working/maven/org/apache/hive
+ mvn -B clean install -DskipTests -T 4 -q -Dmaven.repo.local=/data/hiveptest/working/maven
ANTLR Parser Generator  Version 3.5.2
Output file /data/hiveptest/working/apache-github-source-source/metastore/target/generated-sources/antlr3/org/apache/hadoop/hive/metastore/parser/FilterParser.java does not exist: must build /data/hiveptest/working/apache-github-source-source/metastore/src/java/org/apache/hadoop/hive/metastore/parser/Filter.g
org/apache/hadoop/hive/metastore/parser/Filter.g
DataNucleus Enhancer (version 4.1.6) for API "JDO"
DataNucleus Enhancer : Classpath
>>  /usr/share/maven/boot/plexus-classworlds-2.x.jar
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MDatabase
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MFieldSchema
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MType
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MTable
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MConstraint
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MSerDeInfo
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MOrder
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MColumnDescriptor
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MStringList
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MStorageDescriptor
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MPartition
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MIndex
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MRole
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MRoleMap
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MGlobalPrivilege
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MDBPrivilege
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MTablePrivilege
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MPartitionPrivilege
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MTableColumnPrivilege
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MPartitionColumnPrivilege
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MPartitionEvent
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MMasterKey
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MDelegationToken
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MTableColumnStatistics
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MPartitionColumnStatistics
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MVersionTable
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MResourceUri
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MFunction
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MNotificationLog
ENHANCED (Persistable) : org.apache.hadoop.hive.metastore.model.MNotificationNextId
DataNucleus Enhancer completed with success for 30 classes. Timings : input=186 ms, enhance=234 ms, total=420 ms. Consult the log for full details
ANTLR Parser Generator  Version 3.5.2
Output file /data/hiveptest/working/apache-github-source-source/ql/target/generated-sources/antlr3/org/apache/hadoop/hive/ql/parse/HiveLexer.java does not exist: must build /data/hiveptest/working/apache-github-source-source/ql/src/java/org/apache/hadoop/hive/ql/parse/HiveLexer.g
org/apache/hadoop/hive/ql/parse/HiveLexer.g
Output file /data/hiveptest/working/apache-github-source-source/ql/target/generated-sources/antlr3/org/apache/hadoop/hive/ql/parse/HiveParser.java does not exist: must build /data/hiveptest/working/apache-github-source-source/ql/src/java/org/apache/hadoop/hive/ql/parse/HiveParser.g
org/apache/hadoop/hive/ql/parse/HiveParser.g
Output file /data/hiveptest/working/apache-github-source-source/ql/target/generated-sources/antlr3/org/apache/hadoop/hive/ql/parse/HintParser.java does not exist: must build /data/hiveptest/working/apache-github-source-source/ql/src/java/org/apache/hadoop/hive/ql/parse/HintParser.g
org/apache/hadoop/hive/ql/parse/HintParser.g
Generating vector expression code
Generating vector expression test code
[ERROR] COMPILATION ERROR : 
[ERROR] /data/hiveptest/working/apache-github-source-source/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java:[102,38] cannot find symbol
  symbol:   class ExprNodeConstantDefaultDesc
  location: package org.apache.hadoop.hive.ql.plan
[ERROR] /data/hiveptest/working/apache-github-source-source/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPEqual.java:[28,38] cannot find symbol
  symbol:   class ExprNodeConstantDefaultDesc
  location: package org.apache.hadoop.hive.ql.plan
[ERROR] /data/hiveptest/working/apache-github-source-source/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPNotEqual.java:[28,38] cannot find symbol
  symbol:   class ExprNodeConstantDefaultDesc
  location: package org.apache.hadoop.hive.ql.plan
[ERROR] /data/hiveptest/working/apache-github-source-source/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartitionPruner.java:[51,38] cannot find symbol
  symbol:   class ExprNodeConstantDefaultDesc
  location: package org.apache.hadoop.hive.ql.plan
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project hive-exec: Compilation failure: Compilation failure:
[ERROR] /data/hiveptest/working/apache-github-source-source/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java:[102,38] cannot find symbol
[ERROR] symbol:   class ExprNodeConstantDefaultDesc
[ERROR] location: package org.apache.hadoop.hive.ql.plan
[ERROR] /data/hiveptest/working/apache-github-source-source/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPEqual.java:[28,38] cannot find symbol
[ERROR] symbol:   class ExprNodeConstantDefaultDesc
[ERROR] location: package org.apache.hadoop.hive.ql.plan
[ERROR] /data/hiveptest/working/apache-github-source-source/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFOPNotEqual.java:[28,38] cannot find symbol
[ERROR] symbol:   class ExprNodeConstantDefaultDesc
[ERROR] location: package org.apache.hadoop.hive.ql.plan
[ERROR] /data/hiveptest/working/apache-github-source-source/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ppr/PartitionPruner.java:[51,38] cannot find symbol
[ERROR] symbol:   class ExprNodeConstantDefaultDesc
[ERROR] location: package org.apache.hadoop.hive.ql.plan
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :hive-exec
+ exit 1
'
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12852913 - PreCommit-HIVE-Build, [~sershe] will this go into 2.2.0? Thanks., Yes, should be a blocker. I will look at it later today/this week, Rebased the patch and added the != test, [~owen.omalley] fyi this needs to be in 2.2 as long as  HIVE-11208  is in 2.2, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12860756/HIVE-15923.02.patch

{color:green}SUCCESS:{color} +1 due to 3 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 10516 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestBeeLineDriver.testCliDriver[escape_comments] (batchId=231)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[comments] (batchId=35)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[show_functions] (batchId=68)
org.apache.hive.hcatalog.api.TestHCatClient.testTransportFailure (batchId=172)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/4402/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/4402/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-4402/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12860756 - PreCommit-HIVE-Build, Thanks [~sershe] working on the patch. show_functions test failure is related. "is_default_partition" function is internal function. Can we hide it from being shown? Also does  d <> '_hive_default_partition_' work instead of != ? Looks like it's handled by semantic analyzer.  , Got rid of it altogether, it's possible to just use isnull/isnotnull, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12861304/HIVE-15923.03.patch

{color:green}SUCCESS:{color} +1 due to 3 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 10542 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[comments] (batchId=35)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_if_expr] (batchId=141)
org.apache.hive.hcatalog.api.TestHCatClient.testTransportFailure (batchId=172)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/4472/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/4472/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-4472/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12861304 - PreCommit-HIVE-Build, [~aihuaxu] [~pxiong] can you take a look?, OK. i am taking a look right now., LGTM+1. Just one follow up question/problem. On one hand, we are saying
{code}
DEFAULTPARTITIONNAME("hive.exec.default.partition.name", "__HIVE_DEFAULT_PARTITION__",
        "The default partition name in case the dynamic partition column value is null/empty string or any other values that cannot be escaped. \n" +
        "This value must not contain any special character used in HDFS URI (e.g., ':', '%', '/' etc). \n" +
        "The user has to be aware that the dynamic partition value should not contain this value to avoid confusions."),
{code}
On the other hand, user can give a query like
{code}
alter table ptestfilter drop partition(c != '__HIVE_DEFAULT_PARTITION__');
{code}

I think this is inconsistent. Users should not be allowed to give a query like that. They should give a query like
{code}
alter table ptestfilter drop partition(c is not null);
{code}, The patch looks good. +1.

Since the users are using c != '__HIVE_DEFAULT_PARTITION__' in their queries, we can keep like this for now. I'm thinking of introducing 'default' keyword to represent default partition and operation like c = default or c != default., [~aihuaxu], IMHO, introducing 'default' keyword will not help to resolve the inconsistent problem either (it is the similar to __HIVE_DEFAULT_PARTITION__ just with a different name).]