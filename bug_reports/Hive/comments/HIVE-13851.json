[For the TEXTFILE case, if you convert the float column to string (as a way of seeing what is being stored in the text field!) instead of double it reveals the following digit clipped values are what was stored:
-35664.76
29497.35
Interesting.
Now, if you create a input file and insert data with "load data local inpath ....", you get the expected result:
-35664.76171875
29497.349609375
So, that leads to why are values specified in the INSERT VALUES clause different than data in an input file?
Perhaps they being parsed as decimal with scale 2 and then being converted to string and stored in the temporary file that serves as input to the INSERT statement?, In UDFToFloat used by the INSERT VALUES to convert the VALUES clause text to float (or double):
float f = Float.valueOf("-35664.76171875") --> -35664.76
double d = Double.valueOf("-35664.76171875") --> -35664.76171875, "Works As Designed"]