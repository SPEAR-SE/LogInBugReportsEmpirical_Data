[I made the following change to BytesColumnVector#copySelected method. 

I am not sure about the behaviour when vector[0] is null, repeating is true with a non zero length and offset. If someone can point me the behaviour, I can patch this.

 

 
{code:java}
index f914a2248d..7757910a32 100644
--- a/storage-api/src/java/org/apache/hadoop/hive/ql/exec/vector/BytesColumnVector.java
+++ b/storage-api/src/java/org/apache/hadoop/hive/ql/exec/vector/BytesColumnVector.java
@@ -318,7 +318,17 @@ public void copySelected(
// Handle repeating case
 if (isRepeating) {
- output.setVal(0, vector[0], start[0], length[0]);
+ final byte[] srcBuffer;
+ if (vector[0] == null) {
+ if (start[0] == 0 && length[0] == 0) {
+ srcBuffer = new byte[0];
+ } else {
+ throw new RuntimeException("isRepeating is true, vector[0] is null but start[0] is " + start[0] + " and length[0] is " + length[0]);
+ }
+ } else {
+ srcBuffer = vector[0];
+ }
+ output.setVal(0, srcBuffer, start[0], length[0]);
 output.isNull[0] = isNull[0];
 output.isRepeating = true;
 return;
{code}
 , This might be fixed by HIVE-18258 - the query is relevant (& explain vectorization detail output)., Thanks for reporting the issue [~amrk7]. do you have a query which can be used to reproduce this issue?, Sure. Will share a minified version of query by tomorrow.

BTW [~gopalv] I did backport (https://issues.apache.org/jira/browse/HIVE-18258) and checked. The issue still comes., Updated description with the table and the query. I myself am working on creating a sample dataset that can reproduce this., This might be fixed by HIVE-18622. Will check and revert.]