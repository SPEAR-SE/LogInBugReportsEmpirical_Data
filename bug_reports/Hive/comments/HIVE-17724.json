[I run Java code:

{quote}long l = 1507284611L;
float f = l;
System.out.println("f = " + f);
System.out.printf("%f\n", f);{quote}

and get
{quote}f = 1.50728461E9
1507284608.000000{quote}

Floats are precise only to about 7 digits. So probably this is just a limitation of the type.
See https://stackoverflow.com/questions/13542944/how-many-significant-digits-have-floats-and-doubles-in-java, +1 think it's a limitation of the type

According to https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Types and https://en.wikipedia.org/wiki/Single-precision_floating-point_format , FLOAT is 4-byte single precision floating point number, which uses 8 bits for the exponent

Transfer the numbers to binary number:
1507284611 -> 1011001110101110101011010000011
1507284608 -> 1011001110101110101011010000000
, Hive is Ok. The float data type can't handle that number.]