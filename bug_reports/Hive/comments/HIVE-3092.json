[The attached patch attempts to solve the problem by adding the jars from build/dist/lib into the test classpath before the Ivy jars., This was a very serious bug introduced by HIVE-2646.


+1

If anyone has any issues, please comment - I will start to run tests., This patch will fix the problem in cases where new classes are added, or where the definition of a class has changed. However, it won't fix the situation where a class is removed but continues to show up on the classpath because Ivy is pulling an old copy out of the local cache.

I think HIVE-3116 is a better way to fix the problem since it addresses all three of the cases I described above., I also don't think this fix will stay in place for very long unless someone adds a comment explaining why the dist/lib directory has to go first on the classpath., Carl, do you happen to know why these Hive artifacts are going into Ivy's cache in the first place? If we could remove them from there, or at least find some other way to ignore them, that would solve the problems as well.

Having multiple checkouts of Hive store these jars in a common location and then use them makes it very difficult to work in multiple checkouts at the same time.  It also complicates testing multiple checkouts at the same time.

Given that there isn't a patch for HIVE-3116 yet, I'd like to get this in, to help speed up development.  Having to run ant very-clean package which takes ~20 mins. every time you make a change is a real time sink., Carl did have a good point, this patch did not fix the case where a class is removed.

In my newly uploaded patch, when the test class path is constructed it adds the jars from build/dist/lib before the Ivy jars, and excludes all hive jars from Ivy.

So now, for the 3 cases Carl mentioned, this patch fixes them for ant test.  It also means that we can run the tests after running the much faster ant clean rather than ant very-clean.  Finally, it means that different checkouts won't read their Hive jars from the common Ivy repo resulting in potentially picking up the changes in another checkout.  Given that, I would argue that for the case of running the command ant test, this patch is better than the fix proposed in HIVE-3116, although that has value for other cases., Also added a comment., +1
, Committed. Thanks Kevin, Integrated in Hive-trunk-h0.21 #1488 (See [https://builds.apache.org/job/Hive-trunk-h0.21/1488/])
    HIVE-3092 Hive tests should load Hive classes from build directory, not Ivy cache
(Kevin Wilfong via namit) (Revision 1350467)

     Result = FAILURE
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1350467
Files : 
* /hive/trunk/build-common.xml
, I am getting the following error on windows when I run the unit tests with these changes. Do you have any suggestions to make it work on windows?

compile-test:
     [echo] Project: ql
    [javac] Compiling 57 source files to D:\OSS\hive\build\ql\test\classes
    [javac] error: error reading D:\OSS\hive\build\dist\lib\libfb303.jar; error in opening zip file
    [javac] error: error reading D:\OSS\hive\build\dist\lib\libthrift.jar; error in opening zip file
    [javac] 2 errors, Have you tried running ant clean?

If that doesn't work have you tried ant very-clean?, libfb303.jar and libthrift.jar are symlinks which were added in HIVE-1962. Maybe we can remove them?

@Kevin: Can you check with Ning and see if Facebook still has an internal dependency on these old JAR names?

, I am not sure with the implications of excluding lib*.jar from dist folder but this workaround is working on windows., @Kanna: You can't exclude libfb303-0.7.0.jar or libthrift-0.7.0.jar from the dist/lib directory since these are required by different components of Hive. However, it's perfectly acceptable to remove the symlinks libfb303.jar and libthrift.jar. In fact, we should just remove the code in build.xml which creates these symlinks. The relevant code that needs to be removed starts on line 536 of build.xml., Thanks Carl -  Sorry I think my original message was a bit ambiguous, I did the following under “test-classpath” in build-common.xml to unblock myself for now.
Original:
<fileset dir="${build.dir.hive}/dist/lib" includes="*.jar" erroronmissingdir="false" excludes="**/hive_contrib*.jar,**/hive-contrib*.jar "/>

Modife:
<fileset dir="${build.dir.hive}/dist/lib" includes="*.jar" erroronmissingdir="false" excludes="**/hive_contrib*.jar,**/hive-contrib*.jar,**/lib*.jar"/>


I will try your suggestion tomorrow.

Thanks
, @Carl - It is working after removing the symlinks from build.xml. Once Kevin confirm that they are no more required then we can remove them from build.xml
, I've attempted to contact Ning, still waiting on a reply., Hi Kevin - Any update on this. Thanks, No, he never got back to me.

I spoke with Namit Jain who worked with Ning, he didn't think it was needed anymore.

If you can remove it and the tests still pass, it's probably ok, otherwise, we'll find a deficiency in our tests that should be fixed., Thanks Kevin. All Unit Tests passed without lib*.jar symlinks. so I addressed it as part of overall windows build patch(HIVE-3126)., Hello, I am out of office on vacation and will return on Wed, Jan 2nd.

For any urgent issues, please contact my manager.

- Kanna

, Integrated in Hive-trunk-hadoop2 #54 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/54/])
    HIVE-3092 Hive tests should load Hive classes from build directory, not Ivy cache
(Kevin Wilfong via namit) (Revision 1350467)

     Result = ABORTED
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1350467
Files : 
* /hive/trunk/build-common.xml
, This issue is fixed and released as part of 0.10.0 release. If you find an issue which seems to be related to this one, please create a new jira and link this one with new jira.]