[navis requested code review of "HIVE-2723 [jira] should throw  "Ambiguous column reference key"  Exception in particular join condition".
Reviewers: JIRA

  DPAL-638 Does not throw "Ambiguous column reference key" exception in sub query with select star/pattern

  This Bug can be Repeated as following :

  create table test(key string, value string);
  create table test1(key string, value string);

  1: Correct!
  select t.key
  from
  (select a.key, b.key from (select * from src ) a right outer join (select * from src1) b on (a.key = b.key)) t;
  FAILED: Error in semantic analysis: Ambiguous column reference key

  2: Uncorrect!! Should throw Exception as above too!
  select t.key --Is this a.key or b.key ? It's ambiduous!
  from
  (select a.*, b.* from (select * from src ) a right outer join (select * from src1) b on (a.value = b.value)) t;
  Total MapReduce jobs = 1
  Launching Job 1 out of 1
  Number of reduce tasks not specified. Defaulting to jobconf value of: 1
  In order to change the average load for a reducer (in bytes):
  set hive.exec.reducers.bytes.per.reducer=<number>
  In order to limit the maximum number of reducers:
  set hive.exec.reducers.max=<number>
  In order to set a constant number of reducers:
  set mapred.reduce.tasks=<number>
  Starting Job = job_201201170959_0004, Tracking URL = http://zongren-VirtualBox:50030/jobdetails.jsp?jobid=job_201201170959_0004
  Kill Command = /home/zongren/workspace/hadoop-adh/bin/hadoop job  -Dmapred.job.tracker=zongren-VirtualBox:9001 -kill job_201201170959_0004
  Hadoop job information for Stage-1: number of mappers: 2; number of reducers: 1
  2012-01-17 11:02:47,507 Stage-1 map = 0%,  reduce = 0%
  2012-01-17 11:02:55,002 Stage-1 map = 100%,  reduce = 0%
  2012-01-17 11:03:04,240 Stage-1 map = 100%,  reduce = 33%
  2012-01-17 11:03:05,258 Stage-1 map = 100%,  reduce = 100%
  Ended Job = job_201201170959_0004
  MapReduce Jobs Launched:
  Job 0: Map: 2  Reduce: 1   HDFS Read: 669 HDFS Write: 216 SUCESS
  Total MapReduce CPU Time Spent: 0 msec
  OK

TEST PLAN
  EMPTY

REVISION DETAIL
  https://reviews.facebook.net/D1275

AFFECTED FILES
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
  ql/src/test/queries/clientnegative/ambiguous_col_patterned.q
  ql/src/test/results/clientnegative/ambiguous_col_patterned.q.out

MANAGE HERALD DIFFERENTIAL RULES
  https://reviews.facebook.net/herald/view/differential/

WHY DID I GET THIS EMAIL?
  https://reviews.facebook.net/herald/transcript/2673/

Tip: use the X-Herald-Rules header to filter Herald messages in your client.
, navis updated the revision "HIVE-2723 [jira] should throw  "Ambiguous column reference key"  Exception in particular join condition".
Reviewers: JIRA

  1. Added test cases
  2. Avoid throwing exception if it's possible

REVISION DETAIL
  https://reviews.facebook.net/D1275

AFFECTED FILES
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
  ql/src/test/queries/clientnegative/ambiguous_col0.q
  ql/src/test/queries/clientnegative/ambiguous_col1.q
  ql/src/test/queries/clientnegative/ambiguous_col2.q
  ql/src/test/queries/clientpositive/ambiguous_col.q
  ql/src/test/results/clientnegative/ambiguous_col0.q.out
  ql/src/test/results/clientnegative/ambiguous_col1.q.out
  ql/src/test/results/clientnegative/ambiguous_col2.q.out
  ql/src/test/results/clientnegative/ambiguous_col_patterned.q.out
  ql/src/test/results/clientpositive/ambiguous_col.q.out
, Passed all tests, Unlinking from 0.9, @Navis: Looks like this patch almost applies cleanly except for one small reject in SemanticAnalyzer.java. Would you be willing to rebase this patch and submit it for review? Thanks., navis updated the revision "HIVE-2723 [jira] should throw  "Ambiguous column reference key"  Exception in particular join condition".
Reviewers: JIRA

  Moved column checking logic into RowResolver


REVISION DETAIL
  https://reviews.facebook.net/D1275

AFFECTED FILES
  ql/src/java/org/apache/hadoop/hive/ql/parse/RowResolver.java
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
  ql/src/test/queries/clientnegative/ambiguous_col0.q
  ql/src/test/queries/clientnegative/ambiguous_col1.q
  ql/src/test/queries/clientnegative/ambiguous_col2.q
  ql/src/test/queries/clientpositive/ambiguous_col.q
  ql/src/test/results/clientnegative/ambiguous_col0.q.out
  ql/src/test/results/clientnegative/ambiguous_col1.q.out
  ql/src/test/results/clientnegative/ambiguous_col2.q.out
  ql/src/test/results/clientnegative/ambiguous_col_patterned.q.out
  ql/src/test/results/clientpositive/ambiguous_col.q.out

To: JIRA, navis
, +1

Looks good. running tests, Committed. Thanks Navis, Integrated in Hive-trunk-h0.21 #1836 (See [https://builds.apache.org/job/Hive-trunk-h0.21/1836/])
    HIVE-2723 should throw "Ambiguous column reference key" Exception in particular
join condition (Navis via namit) (Revision 1417743)

     Result = ABORTED
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1417743
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/RowResolver.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
* /hive/trunk/ql/src/test/queries/clientnegative/ambiguous_col0.q
* /hive/trunk/ql/src/test/queries/clientnegative/ambiguous_col1.q
* /hive/trunk/ql/src/test/queries/clientnegative/ambiguous_col2.q
* /hive/trunk/ql/src/test/queries/clientpositive/ambiguous_col.q
* /hive/trunk/ql/src/test/results/clientnegative/ambiguous_col0.q.out
* /hive/trunk/ql/src/test/results/clientnegative/ambiguous_col1.q.out
* /hive/trunk/ql/src/test/results/clientnegative/ambiguous_col2.q.out
* /hive/trunk/ql/src/test/results/clientnegative/ambiguous_col_patterned.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ambiguous_col.q.out
, Hi, I realize I'm a little late but why should the following query fail (from the clientnegative test cases)?

explain select * from (select * from (select * from src) a join (select * from src1) b on (a.key = b.key)) t;, I will let Navis confirm, but the output columns from the sub-query have the same name.

select * from (select * from src) a join (select * from src1) b on (a.key = b.key)

This will return a.key, a.value, b.key, b.value with column names key, value, key, value respectively., As Namit said, output columns is duplicating. 

I've thought replacing names of those with auto-generated one, but that seemed making another problem. And also, mysql throws exception for that query something like "ERROR 1060 (42S21): Duplicate column name 'akey'", [~kevinwilfong], what do you think ? I feel that throwing an error is reasonable., I ran the query on a version of Hive without this patch and it gave only 2 columns of output.  Given that it's giving wrong answers today anyway, I'm fine with throwing an error., Integrated in Hive-trunk-hadoop2 #54 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/54/])
    HIVE-2723 should throw "Ambiguous column reference key" Exception in particular
join condition (Navis via namit) (Revision 1417743)

     Result = ABORTED
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1417743
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/RowResolver.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
* /hive/trunk/ql/src/test/queries/clientnegative/ambiguous_col0.q
* /hive/trunk/ql/src/test/queries/clientnegative/ambiguous_col1.q
* /hive/trunk/ql/src/test/queries/clientnegative/ambiguous_col2.q
* /hive/trunk/ql/src/test/queries/clientpositive/ambiguous_col.q
* /hive/trunk/ql/src/test/results/clientnegative/ambiguous_col0.q.out
* /hive/trunk/ql/src/test/results/clientnegative/ambiguous_col1.q.out
* /hive/trunk/ql/src/test/results/clientnegative/ambiguous_col2.q.out
* /hive/trunk/ql/src/test/results/clientnegative/ambiguous_col_patterned.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ambiguous_col.q.out
]