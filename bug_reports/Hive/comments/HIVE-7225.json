[Steve, thanks for the patch.  A few comments:
I don't think there's a need to explicitly close the ResultSet.  According to the JavaDocs on Statement.close(), it closes any associated ResultSets.  So making this call seems like a waste of time.
If we're going to do this, it should be done in CompactionTxnHanlder as well, since that subclasses this class and uses all of the same methods.
But that if leads to my last comment.  Is this necessary at all?  All of the public methods close the db connection as soon as they are done.  Is there any value to closing the individual statements in that collection first?, Does this answer your question ?
http://stackoverflow.com/questions/2708689/impact-of-java-sql-connection-close-on-java-sql-statement-objects-and-the-like, No.  We aren't leaving these connections open for a long time.  We're closing them quite quickly at the end of each Thrift RPC.  If we were leaving them open for a long time then I would agree that it was important to close the statements., Hive depends on BoneCP 0.8.0

I cloned BoneCP locally and looked at their code.
{code}
public class ConnectionHandle implements Connection,Serializable{
{code}
In ConnectionHandle ctor, I see:
{code}
    this.detectUnclosedStatements = pool.getConfig().isDetectUnclosedStatements();
    this.closeOpenStatements = pool.getConfig().isCloseOpenStatements();
{code}
In close() method:
{code}
        if (this.closeOpenStatements){
          for (Entry<Statement, String> statementEntry: this.trackedStatement.entrySet()){
            statementEntry.getKey().close();
            if (this.detectUnclosedStatements){
              logger.warn(String.format(UNCLOSED_LOG_ERROR_MESSAGE, statementEntry.getValue()));
            }
          }
          this.trackedStatement.clear();
        }
{code}
In Hive codebase, I don't see call that turns on closeOpenStatements., Interesting, since part of the contract of Connection.close is "Releases this Connection object's database and JDBC resources immediately instead of waiting for them to be automatically released." it's disappointing to see that connection pooling technologies may not be doing this.  Any info on whether the default is to close the open statements or leave them open?  We could add a call to configure the pool to make sure we close the open statements.  

Separately, in HIVE-7246 I'm working to make the connection pooling configurable, so rather than make sure we handle this for each pool type it makes more sense to do as you suggest and make sure we close the statements.  So I remove my question on whether this makes sense to do.  , bq. whether the default is to close the open statements
As far as I can tell from the source code, default value for closeOpenStatements is false. This is understandable: tracking open statements would consume more resources. For well designed / implemented client, this shouldn't be necessary.

bq. make sure we close the statements
Do you have time to take a look at Steve's patch ?

Thanks, bq. Do you have time to take a look at Steve's patch ?
I did.  My other two comments still stand.  There's no reason to spend time closing ResultSets as the Statement close will do that.  And this should be done in CompactionTxnHandler as well as TxnHandler., Patch v3 addresses Alan's comments above., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12651800/hive-7225.3.patch

{color:red}ERROR:{color} -1 due to 5 failed/errored test(s), 5668 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_dynpart_sort_optimization
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_root_dir_external_table
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_ctas
org.apache.hive.hcatalog.pig.TestOrcHCatLoader.testReadDataPrimitiveTypes
org.apache.hive.jdbc.miniHS2.TestHiveServer2.testConnection
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-Build/548/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-Build/548/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-Build-548/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 5 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12651800, +1, Patch 3 checked in.  Thank you Ted and Steve for your combined efforts., This has been fixed in 0.14 release. Please open new jira if you see any issues.
]