[Hi [~jdere] Last I checked these tests were working. Can you point to the runs where they failed recently? Thanks., Failing for the last 15 builds - most recent build as of now is this one:

https://builds.apache.org/job/PreCommit-HIVE-Build/1568/testReport/, The tests are running successfully locally. All the tests fail with "Fail to add local jar due to the exception:java.util.zip.ZipException: error in opening zip file error in opening zip file" .. I am thinking this is some configuration issue with the test setup but not sure. Is there a way to get access to the environment so that we can debug?, [~sseth] [~prasanth_j] were there any changes to PTest recently which might have caused this failure?, It's moved to a different set of hosts.
I was trying out these tests rightnow - they fail locally with a NPE. If I'm not mistaken they're trying to find some jar which isn't available?
Actually - I see the ZIpException when running locally as well.

{code}
2016-10-14T15:07:08,989  INFO [main] beeline.TestBeelineArgParsing: Add /Users/sseth/.m2/repository/postgresql/postgresql/9.1-901.jdbc4/postgresql-9.1-901.jdbc4.jar for the driver class org.postgresql.Driver
Fail to add local jar due to the exception:java.util.zip.ZipException: error in opening zip file
java.util.zip.ZipException: error in opening zip file
  at java.util.zip.ZipFile.open(Native Method)
  at java.util.zip.ZipFile.<init>(ZipFile.java:219)
  at java.util.zip.ZipFile.<init>(ZipFile.java:149)
  at java.util.jar.JarFile.<init>(JarFile.java:166)
  at java.util.jar.JarFile.<init>(JarFile.java:130)
  at org.apache.hive.beeline.ClassNameCompleter.getClassNames(ClassNameCompleter.java:139)
  at org.apache.hive.beeline.BeeLine.scanDrivers(BeeLine.java:1918)
  at org.apache.hive.beeline.Commands.addlocaldriverjar(Commands.java:176)
  at org.apache.hive.beeline.TestBeelineArgParsing$TestBeeline.addLocalJar(TestBeelineArgParsing.java:91)
  at org.apache.hive.beeline.TestBeelineArgParsing.testAddLocalJar(TestBeelineArgParsing.java:260)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:497)
  at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
  at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
  at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
  at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
  at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
  at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
  at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
  at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
  at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
  at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
  at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
  at org.junit.runners.Suite.runChild(Suite.java:127)
  at org.junit.runners.Suite.runChild(Suite.java:26)
  at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
  at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
  at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
  at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
  at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
  at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
  at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
  at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
  at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
  at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
  at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
  at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
  at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
error in opening zip file
{code}

Also for DummyDriver.jar.

Interestingly enough, the jar files exist and can be unzipped., When I run them locally they work. The try to run add addlocaldriverjar command using Beeline. Based on the test logs its trying to add /home/hiveptest/104.154.86.69-hiveptest-1/maven/postgresql/postgresql/9.1-901.jdbc4/postgresql-9.1-901.jdbc4.jar. I think the file is present else the error message would have been different. I think the jar comes from the maven dependency

{noformat}
    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>9.1-901.jdbc4</version>
      <scope>test</scope>
    </dependency>
{noformat}
, ClassNameCompleter does a scan of a bunch of files - and opens all of them as jar files. 
This is failing while reading "${HOME}/Library/Java/Extensions/libJNPRAuthKit.jnilib" on a mac - which is not a jar file.

I think this is a real bug. Likely started showing up because the JDK version has changed with the new ptest nodes., Interesting .. what is the JDK version on ptest nodes?, {code}
openjdk version "1.8.0_102"
OpenJDK Runtime Environment (build 1.8.0_102-8u102-b14.1-1~bpo8+1-b14)
OpenJDK 64-Bit Server VM (build 25.102-b14, mixed mode)
{code}


[~vgumashta] - any thoughts on what is required here, and whether it is a bug. (I believe it is). A potentially simple fix would be to ensure the files being traversed are jar files (by extension), before interpreting them as jar files.. Would like to understand this better though. Why are we walking through jars, and loading each of them individually., patch#1 will only make it a bit more clear what happening inside {{ClassNameCompleter}}...at least it will show which file has some issues ;), Hi [~kgyrtkirk] Thanks for the patch. Seems like a good idea. But it is hard to see the actually diffs due to indentation mismatch between the patch and source. Can you please fix that? Thanks!, Thanks for taking this up [~kgyrtkirk]. The diff in the indentation is a result of a try catch block - can't really do much about it. Have re-submitted to ptest - lets see what the exception trace shows., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12834696/HIVE-14964.1.patch

{color:red}ERROR:{color} -1 due to build exiting with an error

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1734/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1734/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-1734/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Tests exited with: NonZeroExitCodeException
Command 'bash /data/hiveptest/working/scratch/source-prep.sh' failed with exit status 1 and output '+ date '+%Y-%m-%d %T.%3N'
2016-10-21 19:59:32.400
+ [[ -n /usr/lib/jvm/java-8-openjdk-amd64 ]]
+ export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
+ JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
+ export PATH=/usr/lib/jvm/java-8-openjdk-amd64/bin/:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
+ PATH=/usr/lib/jvm/java-8-openjdk-amd64/bin/:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games
+ export 'ANT_OPTS=-Xmx1g -XX:MaxPermSize=256m '
+ ANT_OPTS='-Xmx1g -XX:MaxPermSize=256m '
+ export 'M2_OPTS=-Xmx1g -XX:MaxPermSize=256m -Dhttp.proxyHost=localhost -Dhttp.proxyPort=3128'
+ M2_OPTS='-Xmx1g -XX:MaxPermSize=256m -Dhttp.proxyHost=localhost -Dhttp.proxyPort=3128'
+ cd /data/hiveptest/working/
+ tee /data/hiveptest/logs/PreCommit-HIVE-Build-1734/source-prep.txt
+ [[ false == \t\r\u\e ]]
+ mkdir -p maven ivy
+ [[ git = \s\v\n ]]
+ [[ git = \g\i\t ]]
+ [[ -z master ]]
+ [[ -d apache-github-source-source ]]
+ [[ ! -d apache-github-source-source/.git ]]
+ [[ ! -d apache-github-source-source ]]
+ date '+%Y-%m-%d %T.%3N'
2016-10-21 19:59:32.403
+ cd apache-github-source-source
+ git fetch origin
fatal: unable to access 'https://github.com/apache/hive.git/': Could not resolve host: github.com
+ exit 1
'
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12834696 - PreCommit-HIVE-Build, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12834696/HIVE-14964.1.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 7 failed/errored test(s), 10566 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[orc_ppd_basic] (batchId=132)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[current_date_timestamp] (batchId=144)
org.apache.hive.beeline.TestBeelineArgParsing.testAddLocalJarWithoutAddDriverClazz[0] (batchId=164)
org.apache.hive.beeline.TestBeelineArgParsing.testAddLocalJar[0] (batchId=164)
org.apache.hive.beeline.TestBeelineArgParsing.testAddLocalJar[1] (batchId=164)
org.apache.hive.beeline.TestClassNameCompleter.addingAndEmptyFile (batchId=164)
org.apache.hive.jdbc.TestJdbcWithLocalClusterSpark.org.apache.hive.jdbc.TestJdbcWithLocalClusterSpark (batchId=213)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1742/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1742/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-1742/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 7 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12834696 - PreCommit-HIVE-Build, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12834696/HIVE-14964.1.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 10593 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestHBaseCliDriver.testCliDriver[hbase_bulk] (batchId=89)
org.apache.hive.beeline.TestBeelineArgParsing.testAddLocalJarWithoutAddDriverClazz[0] (batchId=164)
org.apache.hive.beeline.TestBeelineArgParsing.testAddLocalJar[0] (batchId=164)
org.apache.hive.beeline.TestBeelineArgParsing.testAddLocalJar[1] (batchId=164)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1776/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1776/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-1776/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12834696 - PreCommit-HIVE-Build, i've attached a patch which includes a small fix for the problem...by it avoids "scanning" files which doesnt look like a jar file....

i will look after this...but this whole jar scanning thing seems a bit out-of-place...plus I think jdbc drivers should ship with an auto-loading enabled drivers:

http://www.onjava.com/2006/08/02/jjdbc-4-enhancements-in-java-se-6.html
Auto-Loading of JDBC Driver

i will open a followup ticket to possibly address these issues...HIVE-15053
, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12835140/HIVE-14964.2.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 10579 tests executed
*Failed tests:*
{noformat}
TestCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=15)
	[skewjoin_noskew.q,udaf_number_format.q,union35.q,udf_concat_insert2.q,bucketmapjoin9.q,udf_greatest.q,authorization_show_grant.q,ctas_varchar.q,index_serde.q,cbo_rp_udf_udaf_stats_opt.q,char_union1.q,ct_case_insensitive.q,describe_table_json.q,sample4.q,union18.q,join_cond_pushdown_unqual2.q,limit_pushdown2.q,gby_star.q,exchange_partition.q,leftsemijoin_mr.q,merge_dynamic_partition2.q,parquet_ppd_date.q,partition_schema1.q,load_overwrite.q,input_part7.q,ptf.q,udf_xpath_float.q,vectorized_nested_mapjoin.q,multi_insert_gby.q,complex_alias.q]
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1790/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1790/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-1790/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12835140 - PreCommit-HIVE-Build, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12835140/HIVE-14964.2.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 10600 tests executed
*Failed tests:*
{noformat}
TestWebHCatE2e - did not produce a TEST-*.xml file (likely timed out) (batchId=167)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1794/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1794/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-1794/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12835140 - PreCommit-HIVE-Build, [~sseth] can we get this in?
and possibly remove this whole classpath visiting with HIVE-15053, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12835140/HIVE-14964.2.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 10619 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestSparkNegativeCliDriver.org.apache.hadoop.hive.cli.TestSparkNegativeCliDriver (batchId=226)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1813/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1813/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-1813/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12835140 - PreCommit-HIVE-Build, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12835140/HIVE-14964.2.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 10623 tests executed
*Failed tests:*
{noformat}
org.apache.hive.hcatalog.pig.TestHCatLoaderComplexSchema.testSyntheticComplexSchema[5] (batchId=170)
org.apache.hive.hcatalog.pig.TestTextFileHCatStorer.testWriteTimestamp (batchId=170)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1817/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1817/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-1817/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12835140 - PreCommit-HIVE-Build, LGTM +1, I'm +1 for the patch as well, and the follow up jira to fix this properly - what's being done today seems really strange.
Have submitted this multiple times to jenkins, and it's always got back with some failure. Has anyone looked into why these tests have failed - are they flaky (very likely - changing hardware causes random hive tests to fail, someone sneezing apparently causes new test failures as well), or a result of this change? Was waiting for that before committing., I've also seen these various results ;) 

I don't know if the test batches are stable(always the same for the same input) or random/heuristic(changes from execution to execution dynamically)?

i've seen a few cases where an earlier test have caused a later one to fail...these are sometimes just leftover tables...
But there are some tests which sometimes do very wierd things at the jvm level...(like clearing all System.env variables) - this may make the whole jvm from that point on pretty hard to be reuseable to execute other tests (in case surefire is configured to do so - I don't know what's the current setting of surefire/jvm forking in precommit tests, this only applies if the jvm is reused)

Particulary this jar loader have replaced the classloader - and added a few extra classes - if there are some library clashes because of this; that may wreck havock in some other test (again only if it executes inside the same jvm)

I will look into these in the next few days..., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12835140/HIVE-14964.2.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 10623 tests executed
*Failed tests:*
{noformat}
org.apache.hive.hcatalog.pig.TestHCatLoaderComplexSchema.testSyntheticComplexSchema[3] (batchId=170)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1826/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1826/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-1826/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12835140 - PreCommit-HIVE-Build, Test batches can change across runs. e.g. A new test being added can completely change batches. It's a simple find test, group to target number, next batch.
For Unit test batches - new JVMs are supposed to be launched for each class. There would be way more failures if JVMs were re-used across test classes.
For qtest batches - the same JVM is used.

Specific Test classes, and q files can be excluded from batching if required. Let me know if you know of some which should be excluded.
For the tests doing strange things - could you please open jiras for them as and when you come across them.

For whatever reason, this patch seems to be surfacing new failures. Should look at at least some of the failures, and figure out whether they are related.

For the latest test run (1826) - the error report should have included all the tests in the batch. Will need to look at why that's not the case., Great to know about these, thanks for explaining!

I wanted to open jira about those cases..but I've forgot...i'll start opening them when I see them

This is strange...{{TestHCatLoaderComplexSchema}} is in a completly different subproject...this change may wreck havoc inside the beeline project; but I can't come up with any reasonable explanation how it could accomplish a failure in hcatalog ;)

I think I will open a dummy jira...in which I will mark as ignored all existing flaky tests..., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12835140/HIVE-14964.2.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 10623 tests executed
*Failed tests:*
{noformat}
org.apache.hive.spark.client.TestSparkClient.testJobSubmission (batchId=272)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1836/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1836/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-1836/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12835140 - PreCommit-HIVE-Build, Pushed to the master. Thanks [~kgyrtkirk] for the contributions and [~sseth] for the reviews., Moving out from the active flaky test umbrella., Backporting to branch-1 and branch-1.2 as these tests fail there as well.]