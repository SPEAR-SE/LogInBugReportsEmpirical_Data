[slf4j-log4j12-1.7.5.jar is required for jdbc clients. This is why it's included to hive-jdbc-standalone.jar

currently hive/lib contains both hive-jdbc.jar and hive-jdbc-standalone.jar
{code}
hive]$ ls packaging/target/apache-hive-1.2.0-SNAPSHOT-bin/apache-hive-1.2.0-SNAPSHOT-bin/lib/ | grep jdbc
hive-jdbc-1.2.0-SNAPSHOT.jar
hive-jdbc-1.2.0-SNAPSHOT-standalone.jar
{code}
Probably hive-jdbc-standalone.jar should not be placed to hive/lib

Question is, where to put hive-jdbc-1.2.0-SNAPSHOT-standalone.jar?

maybe just to the root of hive?
{code}
$ ls apache-hive-1.2.0-SNAPSHOT-bin/
bin  conf  derby.log  examples  hcatalog  lib  LICENSE  NOTICE  README.txt  RELEASE_NOTES.txt  scripts
{code}, decided to move hive-jdbc-standalone.jar to extlib folder
, patch #1, hive-jdbc-standalone jar should not be including an slf4j binding. This jar is meant to be used by an external application, and that application should have control over what logging framework is used (including alternatives to log4j).
I think we need to remove slf4j binding from this jar. 

Regarding, the move to extlib, we can consider that if we have very strong reasons to do so. Moving the dir would mean that client applications might break on upgrade, since their classpaths would point to the jar in lib dir.
, 1.
I identified minimum list of jars needed to open jdbc connection and run simple queries
{code}
commons-logging-1.1.3.jar 
hive-exec-1.2.0-SNAPSHOT.jar
hive-service-1.2.0-SNAPSHOT.jar
httpcore-4.2.5.jar
libthrift-0.9.2.jar
hadoop-common-2.6.0.jar
hive-jdbc-1.2.0-SNAPSHOT.jar
httpclient-4.2.5.jar
libfb303-0.9.2.jar
slf4j-api-1.7.5.jar
{code}

It's only one jar from slf4j family - slf4j-api-1.7.5.jar.  This jar does not have StaticLoggerBinder.class
So, we can remove classes found in slf4j-log4j12-1.7.5.jar from hive-jdbc-standalone.jar and keep classes from slf4j-api-1.7.5.jar

2. hive-jdbc-standalone.jar is one of the 3 artifacts generated by hive package build.
{code}
apache-hive-1.2.0-SNAPSHOT-bin.tar.gz
apache-hive-1.2.0-SNAPSHOT-jdbc.jar  // this is another name for  hive-jdbc-standalone.jar
apache-hive-1.2.0-SNAPSHOT-src.tar.gz
{code}

So, probably we should not even include hive-jdbc-standalone.jar to apache-hive-1.2.0-bin.tar.gz.  These 3 files (bin, src and jdbc) should be available for download on Hive Download website. (bin and src are already available)

BUT, beeline which is included to apache-hive-1.2.0-bin.tar.gz is also jdbc client. It needs hive-jdbc-standalone.jar to open jdbc connection to Hiveserver2.
beeline.sh location is bin/ext/beeline.sh   so it has "ext" in path
This is why beeline specific jars should also have "ext" in path
This is why I put hive-jdbc-standalone.jar to extlib folder.
We can use another folder for hive-jdbc-standalone.jar but it should not be mixed with hive/lib jars. 
Why have class duplicates in hive classpath and non-determenistic java classpath behaviours. Who knows from what jar particular class is loaded.

The only purpose of having hive-jdbc-standalone.jar in apache-hive-1.2.0-bin.tar.gz is beeline requirements to have it in classpath.
Lets put hive-jdbc-standalone.jar to beeline lib specific folder (or more generic jdbc-lib folder)

All other client application (like SQuirrel SQL, SQL Workbench/J, Tableau, etc) should get apache-hive-1.2.0-SNAPSHOT-jdbc.jar from Hive Download website.
, patch #2 - exclude slf4j-log4j12 classes from hive-jdbc-standalone.jar, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12696396/HIVE-9496.2.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 7422 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udaf_percentile_approx_23
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/2649/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/2649/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-2649/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12696396 - PreCommit-HIVE-TRUNK-Build, +1 to 2.patch

[~apivovarov] You have mentioned many valid points and ideas/recommendations! Thanks, such suggestions really help improve hive!

 * I agree that it makes sense to publish the jdbc-standalone jar as something that can be downloaded without having to download the entire tar.gz. Most end users (who are not hadoop admins) would just need that, not the entire tar.gz. We should probably have discussion about that in the hive-dev mailing list, just to make sure everyone thinks the same. Would you like to start one ?
 * As we have been putting the standalone jar in the lib dir, people might be expecting the jar there, even after they upgrade their version of hive. So changing the jar location is a backward incompatibility issue in that regard (though not a major issue). Lets avoid that change unless there is a very strong reason to do it. I agree with you that we should have put it in a different dir in the first place.

Thanks again for the patch!
, Patch committed to trunk. Thanks for the patch [~apivovarov]!

Thanks for creating the jira [~pkernevez]!
, This issue has been fixed and released as part of the 1.2.0 release. If you find an issue which seems to be related to this one, please create a new jira and link this one with new jira., I am new to Hive, actually I am in the learning process. 
Please let me know how I should apply the patch from the command line only ? I am using the Hortonworks sandbox and I was browsing and searching this on the Internet, nothing related to CLI was found, just how to apply a patch using Eclipse. 

Please help me! 

Many thanks in advance!]