[Please provide more information on steps to reproduce., Ashutosh Chauhan added a comment - 29/Dec/12 11:42 
Please provide more information on steps to reproduce.
---------------

I just configure the environment make the HIVE work . Then I execute some join HiveQL on OCI . It
 works normally without error message . After I set hive.auto.convert.join=true on OCI . It occrur error message like that whenever I execute a join HiveQL on OCI. And it works normally when I execute a single table select HiveQL. DO you need any more other kind information?, I have seen this issue too., I've been seeing this issue on and off but couldn't find a pattern until today.

The variable appears to be JDK 7 vs JDK6.  On a CDH 4.2.1 cluster running Oracle JDK 6 u32 64-bit my Hive queries that take use of auto join run successfully.  But as a test I tried running the cluster with Oracle JDK 7 U21 64-bit and the same Hive queries throw lots of these Antlr exceptions.

On further investigation one of my client boxes has JDK 7 by default and this is where the errors were seen in the past; JDK 6 clients didn't show the issue.

As mentioned this was on Cloudera 4.2.1 i.e. Hive 0.10; not sure if core Hive views JDK 7 as a supported platform or not, I see other Jiras resolved that fix JDK 7 problems but the getting started page only mentions JDK 6:

https://cwiki.apache.org/confluence/display/Hive/GettingStarted

Garry, It's XMLEncoder complaining that AST is not serializable (similar with HIVE-4222). Is hive in CDH different with vanillar hive?, The list of Jiras in CDH 4.2.1 Hive not in the vanilla 0.10 is:
http://archive.cloudera.com/cdh4/cdh/4/hive-0.10.0-cdh4.2.1.releasenotes.html

And the full changelist for the version is:
http://archive.cloudera.com/cdh4/cdh/4/hive-0.10.0-cdh4.2.1.CHANGES.txt

As a data point when I saw this previously it was on the earlier CDH 3U6 (Hive 0.7.1) though accidentally using JDK 7 on a client then was probably completely unsupported so I deserved everything I got there.
, I cannot reproduce this. Could you suggest a query for example?, I also have seen this issue too., Thanks for all your help, I use a raw Hive0.9.0 to run HiveSQL with JDK 7.0, maybe is the problem cause by the version of JDK. Now I don't work on hive anymore. therefore, I can provide more information about the error, neither reproduce the error. Next time I work on hive and cause same problem, I will try to provide more details., I tried to add a CommonTokenPersistenceDelegate like [~navis] described in HIVE-4222 and resolved the problem., This is fixed by HIVE-4222. Feel free to reopen this if it happens again.]