[Create this JIRA to keep tracking of HCATALOG-647. [~gautamk] can you please re-base the patch in HCATALOG-647 to hive trunk? This is an important fix and we want to get this fix committed. If it is inconvenience for you, I can help you with it. Thanks, TempletonUtils already has logic for Hive percentComplete.

Also, inspite of the title for this bug, I assume you are not planning to change what ./templeton/v1/status method does, correct?, Hi [~ekoifman]. Yes, but we still need the part in the original patch witch parse the hive job id correctly. Attached the re-based patch., [~shuainie]
1. the patch contains changes LaunchMapper.java - how is this relevant?
2. if you grep .conf files in templeton e2e tests, for percentComplete and percent_complete, you'll see that we have tests for pig,jar and hive.  Do you believe any of them fail?  If so, should the tests be adjusted?
3. I'm not aware of any ID generated when we submit a hive query

, Ignore #3 above.  I guess the intent is to parse out the hadoop job ID.  

4. I don't think the unit tests here are very useful.  The tests for these changes should be e2e tests as you are basically parsing log  files, which may change w/o warning from release to release and break the functionality.  the unit test which has a hardcoded string in it will not catch this., Hi [~ekoifman],
1. the patch contains changes LaunchMapper.java - how is this relevant?
    The changes from launchMapper.java is just from the original patch I ported. Since wirter.flush() not actually doing anything for hdfs,
2. if you grep .conf files in templeton e2e tests, for percentComplete and percent_complete, you'll see that we have tests for pig,jar and hive. Do you believe any of them fail? If so, should the tests be adjusted?
    If the e2e tests already covers hive cases and the similar fix is checked in from HIVE-5511, I think this patch is no longer necessary.
Thanks,
Shuaishuai, If you believe that ID for a Hive job is necessary, I think you should make patch with that, but I think it needs a proper test., The tests that I mentioned only deal with percentComplete attribute - I see that you made some changes to regex for that as well., [~shuainie] I think you should remove this line, we shouldn't call flush() for every line in stdout, this will cause performance issue. For example, flush() will cause a packet being sent out for WASB file system.
+          writer.flush();

Also, is this change intended?
-  public static final Pattern HIVE_COMPLETE = Pattern.compile(" map = \\d+%,\\s+reduce = \\d+%$");
+  public static final Pattern HIVE_COMPLETE = Pattern.compile(" map = \\d+%,\\s+reduce = \\d+%");

]