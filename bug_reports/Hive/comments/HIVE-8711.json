[This patch changes the deadlock detection to be more standards based.  It now looks for the SQLState of 40001 (which is the standard state for deadlock) or a SQLTransactionRollbackException (which as of JDK 1.6 is the standard exception for it).  It still has to special case Oracle, as it is non-standard., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12679142/HIVE-8711.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 6669 tests executed
*Failed tests:*
{noformat}
org.apache.hive.hcatalog.streaming.TestStreaming.testEndpointConnection
org.apache.hive.hcatalog.streaming.TestStreaming.testTransactionBatchEmptyCommit
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1626/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1626/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1626/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12679142 - PreCommit-HIVE-TRUNK-Build, 1. TxnHandler.detectDeadlock() - I think it makes sense to implement it like getDbTime() so that checks only what is expected for a given DB type.  For example, if Oracle throws 40001, current code will assume it's a deadlock.
2. DeadLockCreator - it seems that it can easily guarantee deadlock by calling updateTxns(conn1), updateLocks(conn2), updateLocks(conn1).  It could then be enabled permanently.
3. Nit: why are constants in TxnHandler, such as LOCK_ACQUIRED 'protected'  They are only used in test code which is the same package as TxnHandler.
4. This not related to this bug, but MetaStoreThread.BooleanPointer() has multiple threads reading/writing a boolean variable which is not volatile or AtomicBoolean...  this looks like a recipe for trouble, bq. 1. TxnHandler.detectDeadlock() - I think it makes sense to implement it like getDbTime() so that checks only what is expected for a given DB type. For example, if Oracle throws 40001, current code will assume it's a deadlock.
Makes sense, will do.
bq. 2. DeadLockCreator - it seems that it can easily guarantee deadlock by calling updateTxns(conn1), updateLocks(conn2), updateLocks(conn1). It could then be enabled permanently.
I tried that first, but on both mysql and derby it didn't generate a deadlock.  It died with a lock timeout, and took over a minute to do so.  With the current two thread test both dbs detect the deadlock and throw an exception within a few seconds.
bq.3. Nit: why are constants in TxnHandler, such as LOCK_ACQUIRED 'protected' They are only used in test code which is the same package as TxnHandler.
Personal preference.  "protected" says to me that this still belongs to this class.  With package level I'm never sure if I meant to make it package level or just forgot to put a modifier.
4. This not related to this bug, but MetaStoreThread.BooleanPointer() has multiple threads reading/writing a boolean variable which is not volatile or AtomicBoolean... this looks like a recipe for trouble
We can file a separate JIRA for that.  In practice, it's only written in tests and read in production code, so I don't expect to see any issues, but it's best to fix it before someone forgets the original intent and writes to it in production code., A new version of the patch with changes suggested by Eugene and with a change in how I detect deadlocks in Oracle since I discovered a few things in testing., +1, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12679759/HIVE-8711.2.patch

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 6674 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_optimize_nullscan
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_vector_mapjoin_reduce
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_schemeAuthority
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1661/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1661/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1661/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12679759 - PreCommit-HIVE-TRUNK-Build, Created HIVE-8762 for the BooleanPointer issue brought up by Eugene., Patch 2 committed to branch 14 and trunk.  Thanks Eugene for the review., This has been fixed in 0.14 release. Please open new jira if you see any issues.
]