[hbutani requested code review of "HIVE-4358 [jira] Check for Map side processing in PTFOp is no longer valid".

Reviewers: JIRA, ashutoshc

add isMapFlag to PTFDesc

With the changes for ReduceSinkDedup it is no longer true that a non Map-side PTF Operator is preceded by an ExtractOp. For e.g. following query can produce the issue:

create view IF NOT EXISTS mfgr_price_view as
select p_mfgr, p_brand,
sum(p_retailprice) as s
from part
group by p_mfgr, p_brand;

select p_mfgr, p_brand, s,
sum(s) over w1  as s1
from mfgr_price_view
window w1 as (distribute by p_mfgr sort by p_brand rows between 2 preceding and current row);

Fix is to add an explicit flag to PTFDesc

TEST PLAN
  add test to windowing.q

REVISION DETAIL
  https://reviews.facebook.net/D10473

AFFECTED FILES
  ql/src/java/org/apache/hadoop/hive/ql/exec/PTFOperator.java
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
  ql/src/java/org/apache/hadoop/hive/ql/plan/PTFDesc.java
  ql/src/test/queries/clientpositive/windowing.q
  ql/src/test/results/clientpositive/windowing.q.out

MANAGE HERALD RULES
  https://reviews.facebook.net/herald/view/differential/

WHY DID I GET THIS EMAIL?
  https://reviews.facebook.net/herald/transcript/25035/

To: JIRA, ashutoshc, hbutani
, [~ashutoshc] can you please review this when you get a chance. 
Should try to get this into 0.11; the ReduceDedup optimization can cause the PTFOp to throw an error., Ya, I was thinking about it. Question I wanted to know answer for is: whats the need for this flag? Why do we need to do different things depending on whether we are in mapper or reducer? Looking into it, looks like:
* in geting serde for the partition.
* in determining outputOI.
* in close(). <= this I understand the reason 
* in processOp() <= this I understand too

I don't understand how for first two points, how running in map or reduce makes a difference. No other operator does this. Is it implementation artifact or there is a fundamental reason for this?, This is to allow a PTF to process the raw input before partitioning has happened.
A good example is how to perform CandidateFrequentItemSet computation. 
The input is a Basket(basketId, productId) table; output is a list of Itemsets that are frequently
brought together; frequent is defined by a threshold parameter.
The output has the form Itemset(Array<String> itemset), assuming ProductId is String.

The way you compute this is to apply a FrequentItemSet algorithm on subsets of the input in parallel.
So in our prototype we implemented the DynamicItemCounting algorithm. This got executed in each mapper;
the output was a Candidate Itemset(Array<String> itemset, count) from each mapper.
The reducer than summed counts across all mappers and checked for thresholds.

But from a calling perspective it still appears like a PTF invocation to a caller:

select itemset
from candidateFreqItemSets(on basket partition by itemset)

Behind the scenes we create a Plan with a PTFOp for the Map-side where the DynamicItemCounting is done; and a PTFOp on the reduce side where the aggregation is done. 

Hope this makes sense; i realize it is very brief, can go over it in detail with you., ashutoshc has accepted the revision "HIVE-4358 [jira] Check for Map side processing in PTFOp is no longer valid".

  +1

REVISION DETAIL
  https://reviews.facebook.net/D10473

BRANCH
  HIVE-4358

ARCANIST PROJECT
  hive

To: JIRA, ashutoshc, hbutani
, Committed to trunk. Thanks Harish for explanation!, Integrated in Hive-trunk-hadoop2 #175 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/175/])
    HIVE-4358 : Check for Map side processing in PTFOp is no longer valid (Harish Butani via Ashutosh Chauhan) (Revision 1475880)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1475880
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/PTFOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/plan/PTFDesc.java
* /hive/trunk/ql/src/test/queries/clientpositive/windowing.q
* /hive/trunk/ql/src/test/results/clientpositive/windowing.q.out
, Integrated in Hive-trunk-h0.21 #2079 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2079/])
    HIVE-4358 : Check for Map side processing in PTFOp is no longer valid (Harish Butani via Ashutosh Chauhan) (Revision 1475880)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1475880
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/PTFOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/plan/PTFDesc.java
* /hive/trunk/ql/src/test/queries/clientpositive/windowing.q
* /hive/trunk/ql/src/test/results/clientpositive/windowing.q.out
]