[The format of the local file has nothing to do with the format of the source table.

We should add the formatting sub clause for insert overwrite.

{code}
INSERT OVERWRITE LOCAL DIRECTORY '/mnt/daily_timelines' 
[ ROW FORMAT DELIMITED | SERDE ... ]
[ FILE FORMAT ...]
SELECT * FROM daily_timelines;
{code}


, +1 to the proposal.
, What would be the output difference between the proposed feature and doing a two step process as follows?

DROP TABLE tmp_exports_daily_timelines;
CREATE TABLE tmp_exports_daily_timelines (
  page_id BIGINT,
  dates STRING,
  pageviews STRING,
  total_pageviews BIGINT
) ROW FORMAT DELIMITED 
    FIELDS TERMINATED BY '\t' 
    LINES TERMINATED BY '\n' 
  STORED AS TEXTFILE
  LOCATION '/tmp/exports/daily_timelines';

INSERT OVERWRITE TABLE tmp_exports_daily_timelines
SELECT page_id, dates, pageviews, total_pageviews 
FROM daily_timelines
[ some WHERE clause here]

, There won't be any difference - it's kind of a syntax sugar., Note that both methods seem to use '\N' in the output files instead of 'NULL'.  

It would be better for the export to use 'NULL' for full compatibility with MySQL and postgres.  I tested '\N' and it's not recognized as 'NULL' with using MySQL's LOAD DATA INFILE.  Easy enough for sed to fix with another pass through the data... at the cost of another pass through the data.

Can one also accomplish this goal with a custom Transform? 
http://wiki.apache.org/hadoop/Hive/LanguageManual/Transform, Good observation. The LazySimpleSerDe that is used to serialize the data already support customized "serialization.null.format" - we just need to expose that functionality to our user.
]