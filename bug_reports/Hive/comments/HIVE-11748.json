[Attaching HIVE-11748.patch.  This is similar to the changes under HIVE-11024, which fixed the same bug in setDate().  It simply quotes the value of Timestamp.toString().
{noformat}
diff --git jdbc/src/java/org/apache/hive/jdbc/HivePreparedStatement.java jdbc/src/java/org/apache/hive/jdbc/HivePreparedStatement.java
index 7687537..81c3d5d 100644
--- jdbc/src/java/org/apache/hive/jdbc/HivePreparedStatement.java
+++ jdbc/src/java/org/apache/hive/jdbc/HivePreparedStatement.java
@@ -728,7 +728,7 @@ public void setTime(int parameterIndex, Time x, Calendar cal) throws SQLExceptio
    */
 
   public void setTimestamp(int parameterIndex, Timestamp x) throws SQLException {
-    this.parameters.put(parameterIndex, x.toString());
+    this.parameters.put(parameterIndex, "'" + x.toString() + "'");
   }
 
   /*
{noformat}

I've also added a unit test and some Dell SecureWorks license information to the NOTICE file., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12754399/HIVE-11748.patch

{color:red}ERROR:{color} -1 due to 5 failed/errored test(s), 9421 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_stats_counter
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation
org.apache.hive.hcatalog.streaming.TestStreaming.testEndpointConnection
org.apache.hive.hcatalog.streaming.TestStreaming.testTimeOutReaper
org.apache.hive.jdbc.TestJdbcDriver2.testPrepareSetTimestamp
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5190/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5190/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5190/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 5 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12754399 - PreCommit-HIVE-TRUNK-Build, Attaching HIVE-11748.2.patch.
 - Added support for Timestamp to HivePreparedStatement.setObject(int parameterIndex, Object x)
 - Added coverage of setTimestamp() and setObject(Timestamp x) to TestJdbcDriver2.testPrepareStatement()
 - General tidy-up of TestJdbcDriver2.testPrepareStatement()
 -- fixed resource leaks
 -- made useful (it was incorrectly passing even if no results returned!)
 - Rewrote TestJdbcDriver2Â·testPrepareSetTimestamp() to use Timestamp objects rather than Date.

\\

I suggest someone with edit privileges on https://cwiki.apache.org/confluence/display/Hive/HowToContribute changes the [unit tests|https://cwiki.apache.org/confluence/display/Hive/HowToContribute#HowToContribute-UnitTests] section.  It's confusing for new contributors.  Currently it reads:
{noformat}
> cd hive-trunk
> mvn clean install -DskipTests -Phadoop-1
> mvn test -Dtest=SomeTest -Phadoop-1
{noformat}

There isn't a "hive-trunk" anymore.  I think\* the correct procedure is:
{noformat}
mvn clean install -DskipTests -Phadoop-1
cd itests
mvn test -Dtest=SomeTest -Phadoop-1
{noformat}
_\* This is how I executed TestJdbcDriver2 locally - please comment if there's a better way_, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12754494/HIVE-11748.2.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 9421 tests executed
*Failed tests:*
{noformat}
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5191/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5191/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5191/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12754494 - PreCommit-HIVE-TRUNK-Build, The {{org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation}} test failure is unrelated, it was failing prior to my changes., [~szehon] / [~spena] - are you willing/able to review this change?, Thanks [~awsmithson] for the patch.
Just one question:

I see this line was replaced {{setString(parameterIndex, x.toString());}} by {{setTimestamp(parameterIndex, (Timestamp) x);}} And internally, {{setString}} wraps the string with single-qutoes:
{code}
public void setString(int parameterIndex, String x) throws SQLException {
     x=x.replace("'", "\\'");
     this.parameters.put(parameterIndex,"'"+x+"'");
  }

public void setTimestamp(int parameterIndex, Timestamp x) throws SQLException {
    this.parameters.put(parameterIndex, "'" + x.toString() + "'");
  }
{code}

What is the difference between setString and setTimestamp? I run the test {{testPrepareSetTimestamp}} with and without the above line replaced, and it seems to work., Thanks for taknig a look [~spena].


I assume you're refering to this part of the diff, in {{setObject(int parameterIndex, Object x)}}?
{noformat}
     } else if (x instanceof Timestamp) {
-      setString(parameterIndex, x.toString());
+      setTimestamp(parameterIndex, (Timestamp) x);
     } else if (x instanceof BigDecimal) {
{noformat}

\\

I updated it to call setTimestamp so that if anyone modifies {{setTimestamp(...)}} in future, we get the same behaviour...
{code}
HivePreparedStatement hps = <whatever>;
Timestamp timestamp = <whatever>;

// The following two method calls should result in exactly the same behavior.
// The caller should be able to call either, depending on the situation.
hps.setObject(1, timestamp);
hps.setTimestamp(1, timestamp);
{code}

Prior to this (HIVE-11748) fix, those two calls resulted in different behavior, which I think constitutes a bug.  If we leave {{setObject()}} calling {{setString(...)}} and someone modifies {{setTimestamp(...)}} in future, we are back in a place where each provides different behavior (IMO, a bug)., Got it.
Thanks [~awsmithson] for the explanation.

Then there's no issue right now, but we're fixing the API to avoid an issue in the future.
The change looks good. +1, [~spena] - just to be clear, there are two changes to HivePreparedStatement.java, from the diff:
{noformat}
diff --git jdbc/src/java/org/apache/hive/jdbc/HivePreparedStatement.java jdbc/src/java/org/apache/hive/jdbc/HivePreparedStatement.java
index 7687537..c28b7d6 100644
--- jdbc/src/java/org/apache/hive/jdbc/HivePreparedStatement.java
+++ jdbc/src/java/org/apache/hive/jdbc/HivePreparedStatement.java
@@ -607,7 +607,7 @@ public void setObject(int parameterIndex, Object x) throws SQLException {
     } else if (x instanceof Character) {
       setString(parameterIndex, x.toString());
     } else if (x instanceof Timestamp) {
-      setString(parameterIndex, x.toString());
+      setTimestamp(parameterIndex, (Timestamp) x);
     } else if (x instanceof BigDecimal) {
       setString(parameterIndex, x.toString());
     } else {
@@ -728,7 +728,7 @@ public void setTime(int parameterIndex, Time x, Calendar cal) throws SQLExceptio
    */
 
   public void setTimestamp(int parameterIndex, Timestamp x) throws SQLException {
-    this.parameters.put(parameterIndex, x.toString());
+    this.parameters.put(parameterIndex, "'" + x.toString() + "'");
   }
 
   /*
{noformat}

The first change makes {{setObject(int parameterIndex, Object x)}} call {{setTimestamp(int parameterIndex, Timestamp x)}} when passed a Timestamp.  That change is simply to maintain consistency in future.

The second change is modifying {{setTimestamp(int parameterIndex, Timestamp x)}} to quote the value it is passed.  Prior to this change it was broken (see the issue description)., Got it. Thanks for explaining.
Still +1. , Thanks [~awsmithson] for your contribution.
I committed this to master., Should this issue be backported to branch-1? It looks like a bug.]