[For example,
{code}
$ cat /tmp/multi.sql 
select * from testa
where
col2 > 100;
$ beeline -u "jdbc:hive2://localhost:10000" -n hive -p hive --silent=true -f /tmp/multi.sql > /tmp/b_multi.out &
$ cat /tmp/b_multi.out 
null+-------------+-------------+-------------+-------------+-------------+--------------+--------------+--------------+--+
| testa.col1  | testa.col2  | testa.col3  | testa.col4  | testa.col5  | testa.part1  | testa.part2  | testa.part3  |
+-------------+-------------+-------------+-------------+-------------+--------------+--------------+--------------+--+
| 12.341      | 1001        | 2001        | 3001        | abcd        | CA           | ABC          | 300          |
| 12.341      | 1001        | 2001        | 3001        | abcd        | UK           | DEF          | 123          |
| 12.341      | 1001        | 2001        | 3001        | abcd        | US           | ABC          | 123          |
| 12.341      | 1001        | 2001        | 3001        | abcd        | US           | DEF          | 200          |
+-------------+-------------+-------------+-------------+-------------+--------------+--------------+--------------+--+

With the proposed fix,
$ beeline -u "jdbc:hive2://localhost:10000" -n hive -p hive --silent=true -f /tmp/multi.sql > /tmp/g_multi.out
$ cat /tmp/g_multi.out 
+-------------+-------------+-------------+-------------+-------------+--------------+--------------+--------------+--+
| testa.col1  | testa.col2  | testa.col3  | testa.col4  | testa.col5  | testa.part1  | testa.part2  | testa.part3  |
+-------------+-------------+-------------+-------------+-------------+--------------+--------------+--------------+--+
| 12.341      | 1001        | 2001        | 3001        | abcd        | CA           | ABC          | 300          |
| 12.341      | 1001        | 2001        | 3001        | abcd        | UK           | DEF          | 123          |
| 12.341      | 1001        | 2001        | 3001        | abcd        | US           | ABC          | 123          |
| 12.341      | 1001        | 2001        | 3001        | abcd        | US           | DEF          | 200          |
+-------------+-------------+-------------+-------------+-------------+--------------+--------------+--------------+--+
{code}
, [~aihuaxu] [~ychena] Could you please review the patch? Thanks, You fix changes from do not print anything to print everything. Should you focus on change the prompt to "" for unsupported terminal ? , [~ychena] Thanks for the comments. I am not sure what you mean by print everything.
In the output I posted above, there is some rogue characters (see the null at the begining of the line?)
{code}
$ cat /tmp/b_multi.out 
null+-------------+-------------+-------------+-------------+-------------+--------------+--------------+--------------+--+
{code}
That null character is addressed.

I althought that making the prompt "" was a cleaner fix. However, in case of multiline queries in a script file, beeline prints out a blank line for every line of the query at the begining and end of the resultset. The code that causes that behavior is below (prompt="" and mask !=null)
{code}
private void beforeReadLine(final String prompt, final Character mask) {
        if (mask != null && maskThread == null) {
            final String fullPrompt = "\r" + prompt
                + "                 "
                + "                 "
                + "                 "
                + "\r" + prompt;
{code}

So if the script file had a 20-line query, the beeline output will contain 20 blank lines before the output and 20 blank lines after the output. So that could break existing usecases. Thanks, Following method shows when mask == null, the char string will fully print.  When mask = NULL_MASK, no string will print. So mask == null and mask == NULL_MASK means opposite.
{noformat}
    /**
     * Write out the specified string to the buffer and the output stream.
     */
    public final void putString(final CharSequence str) throws IOException {
        buf.write(str);
        if (mask == null) {
            // no masking
            print(str);
        } else if (mask == NULL_MASK) {
            // don't print anything
        } else {
            print(mask, str.length());
        }
        drawBuffer();
    }
{noformat}
, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 12s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 19s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 11s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m 29s{color} | {color:blue} beeline in master has 69 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 10s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 11s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 34s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 11s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 10m 19s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Optional Tests |  asflicense  javac  javadoc  findbugs  checkstyle  compile  |
| uname | Linux hiveptest-server-upstream 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1+deb8u1 (2016-09-03) x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /data/hiveptest/working/yetus_PreCommit-HIVE-Build-11251/dev-support/hive-personality.sh |
| git revision | master / 1f92316 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| modules | C: beeline U: beeline |
| Console output | http://104.198.109.242/logs//PreCommit-HIVE-Build-11251/yetus.txt |
| Powered by | Apache Yetus    http://yetus.apache.org |


This message was automatically generated.

, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12925028/HIVE-19700.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:green}SUCCESS:{color} +1 due to 14390 tests passed

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/11251/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/11251/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-11251/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.YetusPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12925028 - PreCommit-HIVE-Build, Thanks [~ychena] for the review. The code certainly seems to indicate that something should get printed to the console when using UnsupportedTerminal. But that is not the case. Perhaps these are console settings or escape characters that is not visible in the output even when redirected to a file.
Also under normal circumstances, this code should never run because we never use UnsupportedTerminal except for under special circumstances. and even then the output looked good to me. , The patch is OK.  +1, Fix has been pushed to the master (4.0), branch-3 (3.1) and branch-2 (2.4). Thanks for the review. , This is released in Hive 3.1.0.]