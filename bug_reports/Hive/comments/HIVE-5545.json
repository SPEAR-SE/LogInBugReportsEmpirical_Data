[I am posting here my Hive table data and MapReduce code alongwith Error thrown:
{noformat}
cat test_data
2013,1,1
2013,1,3
2013,2,18
2013,2,20
2013,3,30
2013,3,31

create schema test;
use test;

### This is temporary table
create table unpar (
year INT, 
month INT, 
day INT)
ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' 
STORED AS TEXTFILE;

LOAD DATA LOCAL INPATH "test_data" OVERWRITE INTO TABLE test.unpar;

### This is input table and I will try to read "year" column using HCatalog.
create table par 
(day  INT)
PARTITIONED BY (year INT, month INT )
ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' 
STORED AS TEXTFILE;

INSERT OVERWRITE TABLE par PARTITION(Year, Month) SELECT day, year, month from unpar;

### this is output table
create table out
(year INT,
cnt INT)
ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' 
STORED AS TEXTFILE;
{noformat}, Mapper Class-
{code}
public class testMapper extends Mapper<WritableComparable, HCatRecord, IntWritable, IntWritable> {
	
    @Override
    protected void map(WritableComparable key, HCatRecord value,
    	org.apache.hadoop.mapreduce.Mapper<WritableComparable, HCatRecord, IntWritable, IntWritable>.Context context)
    	throws IOException, InterruptedException {

    	// Get table schema
    	HCatSchema schema = HCatBaseInputFormat.getTableSchema(context);

        // Reading year column as Integer
    	Integer year = new Integer(value.getInteger("year", schema));

    	context.write(new IntWritable(year), new IntWritable(1));
    }
}
{code}, Reducer Class -

{code}
public class testReducer extends Reducer<IntWritable, IntWritable, Text, HCatRecord> {

	public void reduce (IntWritable key, Iterable<IntWritable> value, Context context) 
		throws IOException, InterruptedException{
		
		int count = 0;
		for (IntWritable s:value) {
			count++;
		}
		
		// define output 
		List<HCatFieldSchema> columns = new ArrayList<HCatFieldSchema>(2);
		columns.add(new HCatFieldSchema("year", HCatFieldSchema.Type.INT, ""));
		columns.add(new HCatFieldSchema("count", HCatFieldSchema.Type.INT, ""));
		
		HCatSchema schema = new HCatSchema(columns);
		HCatRecord record = new DefaultHCatRecord(2);
		record.setInteger("year", schema, new Integer(key.toString())); 
		record.set("cnt", schema, new Integer(count));

		context.write(null, record);
	}
}
{code}, Driver Class -
{code}
public class testDriver extends Configured implements Tool{
    private static final Log log = LogFactory.getLog( testDriver.class );

    public int run( String[] args ) throws Exception{
    	Configuration conf = new Configuration();
    	Job job = new Job(conf, "test_catalog");
    	job.setJarByClass(testDriver.class);
    	job.setMapperClass(testMapper.class);
    	job.setReducerClass(testReducer.class);

    	HCatInputFormat.setInput(job, "test", "par");
//    	HCatInputFormat.setInput(job, InputJobInfo.create("airline", "ontimeperf", "year='1987'"));
    	job.setInputFormatClass(HCatInputFormat.class);
    	job.setMapOutputKeyClass(IntWritable.class);
    	job.setMapOutputValueClass(IntWritable.class);
    	
    	job.setOutputKeyClass(Text.class);
    	job.setOutputValueClass(DefaultHCatRecord.class);
    	job.setOutputFormatClass(HCatOutputFormat.class);
    	HCatOutputFormat.setOutput(job, OutputJobInfo.create("test", "out", null));
    	HCatSchema s = HCatOutputFormat.getTableSchema(job);
    	HCatOutputFormat.setSchema(job, s);
    	
    	return (job.waitForCompletion(true)? 0:1);
    }
    
    public static void main(String[] args) throws Exception{
		int exitCode = ToolRunner.run(new testDriver(), args);
		System.exit(exitCode);
	}
}
{code}, Error thrown by Mapper class
java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer

(Sorry didn't notice that there was some formatting issue with the above comments after posting :( , HCat only supports partition columns of type String.  Some more info can be found in HIVE-7164 and email thread linked form there., [~rishav_rohit] Could you post the whole stack trace?, [~eugene.koifman] Attached is the error stack-
{quote}
13/10/11 21:06:03 INFO mapred.JobClient: Task Id : attempt_201310112040_0005_m_000000_2, Status : FAILED
java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer
	at org.apache.hcatalog.data.HCatRecord.getInteger(HCatRecord.java:84)
	at com.test.hcatalog.testMapper.map(testMapper.java:25)
	at com.test.hcatalog.testMapper.map(testMapper.java:1)
	at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:144)
	at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:764)
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:370)
	at org.apache.hadoop.mapred.Child$4.run(Child.java:255)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:416)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1121)
	at org.apache.hadoop.mapred.Child.main(Child.java:249)
{quote}, testMapper.java:25 is
{quote}
    	Integer year = new Integer(value.getInteger("year", schema));
{quote}, Patch attached., [~jdere], could you please review this patch?, Changes make sense .. what happens when if the partition column value does not convert correctly to the declared column type - is the partition column value set to null?, It'll throw a runtime error, then, but that should happen before the section of code added here - it'll throw from ExpressionTree saying that this is not a valid type (non-integral(or integral, but METASTORE_INTEGER_JDO_PUSHDOWN is not set) and non-string) when fetching the requisite partitions. If it gets past that area for whatever reason, but is not able to convert here, then a runtime error is appropriate, and is no worse than what already happens., ok. +1 if the tests look good, Looks like we lost a good portion of queued tests in the precommit queue over the weekend. Have resubmitted this., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12729748/HIVE-5545.patch

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 8895 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.TestSQLStdHiveAccessControllerHS2.testConfigProcessing
org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.TestSQLStdHiveAccessControllerHS2.testConfigProcessingCustomSetWhitelistAppend
org.apache.hive.jdbc.TestMultiSessionsHS2WithLocalClusterSpark.testSparkQuery
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3727/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3727/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-3727/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12729748 - PreCommit-HIVE-TRUNK-Build, The test failures noted here are not related., Committed to master and branch-1.2. Thanks for the review, Jason!, [~sushanth], are you sure this was committed to branch-1.2?  I'm only seeing commits to master and llap (commit 3f72f8187e27e1332fa980bcf7bce6a32b6f2229)., Oops, user error.  Now I see it., Scared me for a moment, given that I saw this right after I shot out a mail regarding RC1 availability. :D *Whew*, Heheh, sorry about that.  I'm jet-lagged today -- back from the East Coast., This issue has been fixed and released as part of the 1.2.0 release. If you find an issue which seems to be related to this one, please create a new jira and link this one with new jira.]