[So, if there is a list of hooks, they will analyze the parse tree one after the another in the order they are defined?, That's what I'm planning to do. Do you have any better idea or concern?, Not really. I was just wondering why would you want to do it in a series of hooks, rather then doing all of it in one hook, because it seems list must all always be complete and hooks in that list aren't going to be optional. 
Regardless of that, I had the similar requirement and what I had done was to have a top level hook, which keeps a list of hook with it and invokes an appropriate hook depending on the parse tree and context. Depending on what you are trying to achieve that may or may not work in your case. I can point you to code for it, in case you want to take a look.  , Ashutosh, your codes will be definitely helpful. But we anyway are not doing a complicated feature. If there is not real concern about it, we might just go ahead and implement it as always applying them one by one in the order., Sure. Go ahead. Whatever works. I am not proposing any alternative here that needs to be evaluated : ) 
https://github.com/yahoo/howl/blob/howl/howl/src/java/org/apache/hadoop/hive/howl/cli/SemanticAnalysis/HowlSemanticAnalyzer.java

HowlSemanticAnalyzer keeps a list of hook and delegate to them depending on Token type. , 1. separate different semantic anlaysis hooks by commas
2. add unit tests to it
3. AbstractSemanticAnalyzerHook.preAnalyze() returns ASTNode object but caller doesn't consume it. It doesn't make sense to me. I fix by replacing tree by the returned value.

Still running test suites., Still running test suites., +1, Committed. Thanks Siying]