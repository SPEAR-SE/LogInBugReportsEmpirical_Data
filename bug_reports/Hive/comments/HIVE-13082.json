[

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12788387/HIVE-13082.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 14 failed/errored test(s), 9814 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_partition_coltype_literals
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_semijoin2
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_semijoin4
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_vector_mapjoin_reduce
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver_constprog_partitioner
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_explainuser_1
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_stats_only_null
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_vector_mapjoin_reduce
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_constprog_partitioner
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_uri_import
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_stats_only_null
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_vector_mapjoin_reduce
org.apache.hadoop.hive.ql.TestTxnCommands2.testInitiatorWithMultipleFailedCompactions
org.apache.hive.jdbc.TestSSL.testSSLVersion
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7025/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7025/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-7025/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 14 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12788387 - PreCommit-HIVE-TRUNK-Build, Fixed the related failed tests., [~ashutoshc], [~aihuaxu] Could you review the patch to see if it makes sense. Thanks., The change looks good to me. +1.
, Before this goes in, [~ctang.ma] - can you add a -ve test case?

{code}
explain select table1.id, table1.val, table1.val1 from table1 left semi join table3 on table1.dimid = table3.id where table3.id = 1;
{code}, [~gopalv] The query seems not work in Hive and throws out following error
{code}
hive> explain select table1.id, table1.val, table1.val1 from table1 left semi join table3 on table1.dimid = table3.id where table3.id = 1;
FAILED: SemanticException [Error 10004]: Line 1:118 Invalid table alias or column reference 'table3': (possible column names are: id, val, val1, dimid)
{code}
Neither this equivalent query:
{code}
explain select table1.id, table1.val, table1.val1 from table1 where table1.dimid in (select id from table3) and table3.id =1;
FAILED: SemanticException [Error 10004]: Line 1:112 Invalid table alias or column reference 'table3': (possible column names are: id, val, val1, dimid)
{code}
The 2nd query seems also not valid in MySQL with error "Unknown column 'table3.id' in 'where clause'" and the 1st one does not work in MySQL probably 'semi join' is not a supported sql syntax in MySQL.

If the query is rewritten as following, it works
{code}
select table1.id, table1.val, table1.val1 from table1 where table1.dimid in (select id from table3 where table3.id =1);
{code}
It works. That the 1st and 2nd queries do not work in Hive (or MySQL) seems to me not related to the constant folding, but some the syntax issue, right? 
BTW, what is the -ve test? Thanks
, Sorry, I mistyped the query, I've fixed the syntax for the tests as below.

{code}
explain select table1.id, table1.val, table1.val1 from table1 left semi join table3 on table1.dimid = table3.id and table3.id = 1 where table1.dimid <> 1;

explain select table1.id, table1.val, table1.val1 from table1 left semi join table3 on table1.dimid = table3.id and table3.id = 1 where table1.dimid  IN (1,2);

explain select table1.id, table1.val, table1.val1 from table1 left semi join table3 on table1.dimid = table3.id and table3.id = 1 where table1.dimid  = 2;

explain select table1.id, table1.val, table1.val1 from table1 left semi join table3 on table1.dimid = table3.id and table3.id = 1 where table1.dimid  = 1;

explain select table1.id, table1.val, table1.val1 from table1 left semi join table3 on table1.dimid = table3.id and table3.id = 1;
{code}

A few negative tests to introduce conflicts in constants between ON and WHERE - unlike the Left  Outer & Inner joins, you cannot generate a cross-product as part of the folding., There are the query results, all work:
{code}
hive> select table1.id, table1.val, table1.val1 from table1 left semi join table3 on table1.dimid = table3.id and table3.id = 100 where table1.dimid <> 100;
OK  -- not returned rows, correct

hive> select table1.id, table1.val, table1.val1 from table1 left semi join table3 on table1.dimid = table3.id and table3.id = 100 where table1.dimid  IN (100,200);
OK
1	t1val01	val101
3	t1val01	val104

hive> select table1.id, table1.val, table1.val1 from table1 left semi join table3 on table1.dimid = table3.id and table3.id = 100 where table1.dimid  = 200;
OK  -- no returned rows, correct

hive> select table1.id, table1.val, table1.val1 from table1 left semi join table3 on table1.dimid = table3.id and table3.id = 100 where table1.dimid  = 100;
OK
1	t1val01	val101
3	t1val01	val104

hive> select table1.id, table1.val, table1.val1 from table1 left semi join table3 on table1.dimid = table3.id and table3.id = 100;
OK
1	t1val01	val101
3	t1val01	val104
{code}
All above queries seem to run successfully and return correct results. Would you like me to add these queries together with their explain plans in the positive test? , bq. Would you like me to add these queries together with their explain plans in the positive test?

Yes, thank you!, Added more tests based on [~gopalv] suggestion., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12788785/HIVE-13082.2.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 9817 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_uri_import
org.apache.hadoop.hive.ql.TestTxnCommands2.testInitiatorWithMultipleFailedCompactions
org.apache.hive.jdbc.TestSSL.testSSLVersion
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7040/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7040/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-7040/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12788785 - PreCommit-HIVE-TRUNK-Build, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12788878/HIVE-13082.3.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 9818 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_ivyDownload
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_uri_import
org.apache.hive.jdbc.TestSSL.testSSLVersion
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7052/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7052/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-7052/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12788878 - PreCommit-HIVE-TRUNK-Build, Three failed tests seem not related to this patch., [~gopalv] The tests you suggested passed in precommit build as well. So does the patch look good to you now? Thanks, [~gopalv] If you do not have more comments about the tests or patch, I am going to commit the patch by the end of today. Thanks, [~ctang.ma]: this looks good - the constant prop impl isn't complete, so it doesn't generate a cross-product (unlike Calcite)., Committed to 1.3.0 and 2.1.0. Thanks [~aihuaxu] and [~gopalv] for review., [~gopalv] I wonder if you were saying that a cross-product should not be generated for a left semi join, otherwise, the query should be invalidated (or corrected, or failed)? It seems that HIVE-12477 you linked was trying to solve the case where the predicate 1=1 lead to a cross-product in semi join. Is it right?, The predicate is actually folded to 1=1 because the actual keys don't count.

select * from a where id IN (select b.id from b) and a.id = 1;

folds into 

select * from a where id IN (select 1 from b where b.id = 1) and a.id = 1;

After CBO, it gets rewritten as 

select * from a left semi join b on 1 = 1 where a.id = 1 and b.id = 1;

And the 2nd constant folding pass does

select * from a left semi join b where a.id = 1 and b.id = 1;

accidentally dropping the ON clause & turning it into a keyless cross-product, which turns off the implicit "distinct " injected by the left semi join since there's no key anymore.
, Thank [~gopalv] for the explanation. Basically any optimization that causes the dropping of on clause in left semi join should be considered as invalid because it turns off the implicit "distinct", right?, [~gopalv] Could you take a look at HIVE-13164 to see if it makes sense or not based on our discussion here? Thanks]