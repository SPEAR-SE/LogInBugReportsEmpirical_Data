[Can I ask that the query which made above exception is using UDTF?, This exception is not made in any UDTF.

The query to produce this problem is very simple in my case:

select nest_struct_column from table where ..... (In where criteria, I just need to add something to make the nest_struct_column where to have some data, to make the exception happened in LazySimpleSerDe). The table is built on my custom SerDe. I don't know why runtime the LazySimpleSerDe will be invoked, maybe to show the data? But if the column is a nested structure as I explained above, the LazySimpleSerDe will break. Thanks, < for (int i = 0; i < list.size(); i++) {
â€”
> int listSize = list.size();
> for (int i = 0; i < listSize; i++) {

If this change fixed the problem, it means the list is changed in serialization process and lateral view is always a good candidate for doing such thing. I've used before similar query in hive-0.10.0 and it worked well. Could you try that?, I've just hit this issue myself when trying to query against a fairly complex schema.

Is the solution above valid or are you concerned with the fact that the list is changed during serialization (is that abnormal)?

If you're not concerned it'd be great to get this into master so we can cherry-pick the bug-fix on our end., I will debug more about this problem, right now I am busy with something, so didn't have time to dig into it yet.

Here are some my comments:
1) I look the code again and again. The list is a local variable, and I cannot understand how the reference will be changed in the recursive call, but it did happen in the log. I need to add more logging to find out why.
2) If you can compile hive by yourself, you can apply the change I made above, to see if it fixes your problem.
3) What I did to work around this problem is to add a fake column, make the inner/outer struct having same length elements.
4) I will test in hive 0.10 later to see if it fixes this, but from the code, it doesn't look like., [~java8964] I was not able to reproduce the said problem in hive-0.9.0 and wondering if it might be related to the data? Here is my test case;
1. create table bcd (col1 array <struct<col1:string, col2:string, col3:string,col4:string,col5:string,col6:string,col7:string,col8:array<struct<col1:string,col2:string,col3:string,col4:string,col5:string,col6:string,col7:string,col8:string,col9:string>>>>) row format delimited fields terminated by '\001' collection items terminated by '\002' lines terminated by '\n' stored as textfile;
** should be same as you described
2. load data local inpath '/root/nest_struct.data' overwrite into table bcd;
** see attached nest_struct.data
3. select col1 from bcd;
** got:
[{"col1":"c1v","col2":"c2v","col3":"c3v","col4":"c4v","col5":"c5v","col6":"c6v","col7":"c7v","col8":[{"col1":"c11v","col2":"c22v","col3":"c33v","col4":"c44v","col5":"c55v","col6":"c66v","col7":"c77v","col8":"c88v","col9":"c99v"}]}]
....

Did you see anything different from your case?
Could you please update your case and probably I can have a try.

 , data file to my test case -- chaoyu, The previous comments are not in right format, re-post:

I was not able to reproduce the said problem in hive-0.9.0 and wondering if it might be related to the data? Here is my test case;
1. create table bcd (col1 array <struct<col1:string, col2:string, col3:string,col4:string,col5:string,col6:string,col7:string,col8:array<struct<col1:string,col2:string,col3:string,col4:string,col5:string,col6:string,col7:string,col8:string,col9:string>>>>) row format delimited fields terminated by '\001' collection items terminated by '\002' lines terminated by '\n' stored as textfile;
-- same as the case described in this JIRA
2. load data local inpath '/root/nest_struct.data' overwrite into table bcd;
-- see attached nest_struct.data
3. select col1 from bcd;
-- got expected result
{code}
[{"col1":"c1v","col2":"c2v","col3":"c3v","col4":"c4v","col5":"c5v","col6":"c6v","col7":"c7v","col8":[{"col1":"c11v","col2":"c22v","col3":"c33v","col4":"c44v","col5":"c55v","col6":"c66v","col7":"c77v","col8":"c88v","col9":"c99v"}]}]
{code}, I was able to reproduce the similar issue but with JsonSerDe 1.1.4 (json-serde-1.1.4.jar/json-serde-1.1.4-jar-dependencies.jar). See Hive-5320 for details
]