[

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12870560/HIVE-6348.1.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 134 failed/errored test(s), 10804 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_join0] (batchId=82)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_join15] (batchId=15)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_join20] (batchId=83)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_join31] (batchId=42)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[cbo_rp_auto_join0] (batchId=15)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[cbo_rp_union] (batchId=5)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[cbo_rp_windowing] (batchId=37)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[cbo_union] (batchId=72)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[cbo_windowing] (batchId=51)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[concat_op] (batchId=70)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[correlationoptimizer14] (batchId=33)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[decimal_3] (batchId=25)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[dynamic_rdd_cache] (batchId=51)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[groupby_distinct_samekey] (batchId=54)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[groupby_grouping_sets_grouping] (batchId=3)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[identity_project_remove_skip] (batchId=47)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[input20] (batchId=12)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[input33] (batchId=57)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[input3_limit] (batchId=60)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[limit_pushdown_negative] (batchId=38)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[list_bucket_dml_8] (batchId=68)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[macro_duplicate] (batchId=38)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[mapreduce2] (batchId=22)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[mergejoin] (batchId=56)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[multi_insert_gby2] (batchId=37)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[multi_insert_gby3] (batchId=71)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[orc_ppd_schema_evol_2b] (batchId=14)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[order_by_expr_1] (batchId=65)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[order_by_expr_2] (batchId=62)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[partcols1] (batchId=60)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[partition_date] (batchId=14)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[partition_timestamp] (batchId=34)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[partition_varchar1] (batchId=62)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[pcr] (batchId=57)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[pointlookup2] (batchId=77)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[pointlookup3] (batchId=6)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ppd2] (batchId=25)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ppd_join4] (batchId=54)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ppd_udf_case] (batchId=41)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[reducesink_dedup] (batchId=22)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[rename_external_partition_location] (batchId=46)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[truncate_column] (batchId=78)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[truncate_column_buckets] (batchId=24)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[union_paren] (batchId=45)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_data_types] (batchId=72)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_decimal_3] (batchId=19)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_decimal_round] (batchId=34)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_decimal_round_2] (batchId=22)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_groupby_reduce] (batchId=53)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_interval_1] (batchId=15)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_non_string_partition] (batchId=32)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_tablesample_rows] (batchId=49)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vectorization_12] (batchId=10)
org.apache.hadoop.hive.cli.TestContribCliDriver.testCliDriver[udf_row_sequence] (batchId=231)
org.apache.hadoop.hive.cli.TestContribNegativeCliDriver.testCliDriver[invalid_row_sequence] (batchId=234)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[mapreduce2] (batchId=140)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[auto_join0] (batchId=161)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[auto_join30] (batchId=149)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_gby] (batchId=152)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_rp_gby] (batchId=156)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_rp_semijoin] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_semijoin] (batchId=151)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_subq_not_in] (batchId=154)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_udf_udaf] (batchId=144)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_union] (batchId=158)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_windowing] (batchId=154)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[explainuser_1] (batchId=151)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[identity_project_remove_skip] (batchId=154)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[leftsemijoin_mr] (batchId=146)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[mergejoin] (batchId=155)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[mrr] (batchId=146)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[multi_column_in] (batchId=147)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[multi_column_in_single] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[orc_ppd_schema_evol_2b] (batchId=146)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[ppr_pushdown] (batchId=152)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[reduce_deduplicate_extended] (batchId=156)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[special_character_in_tabnames_1] (batchId=153)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[subquery_in] (batchId=156)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[subquery_notin] (batchId=157)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[subquery_scalar] (batchId=152)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[tez_join] (batchId=151)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[tez_join_tests] (batchId=159)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[tez_joins_explain] (batchId=151)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[tez_schema_evolution] (batchId=160)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[tez_smb_1] (batchId=158)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[tez_smb_main] (batchId=149)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_data_types] (batchId=158)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_decimal_3] (batchId=147)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_decimal_round] (batchId=151)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_decimal_round_2] (batchId=148)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_groupby_grouping_sets_grouping] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_groupby_reduce] (batchId=155)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_if_expr] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_interval_1] (batchId=146)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_join30] (batchId=150)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_number_compare_projection] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vectorization_12] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver[leftsemijoin_mr] (batchId=167)
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver[truncate_column_buckets] (batchId=167)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[vector_non_string_partition] (batchId=98)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query23] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query39] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query64] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query91] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query98] (batchId=232)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join0] (batchId=137)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join15] (batchId=107)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join20] (batchId=138)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join30] (batchId=113)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join31] (batchId=119)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[cbo_gby] (batchId=119)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[cbo_semijoin] (batchId=116)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[cbo_subq_not_in] (batchId=121)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[cbo_udf_udaf] (batchId=101)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[cbo_union] (batchId=133)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[dynamic_rdd_cache] (batchId=123)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[identity_project_remove_skip] (batchId=121)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[leftsemijoin_mr] (batchId=107)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[mapreduce2] (batchId=110)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[multi_insert_gby2] (batchId=116)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[multi_insert_gby3] (batchId=132)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[pcr] (batchId=125)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[subquery_in] (batchId=127)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[tez_join_tests] (batchId=135)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[tez_joins_explain] (batchId=116)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[vector_data_types] (batchId=133)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[vectorization_12] (batchId=104)
org.apache.hadoop.hive.ql.TestTxnCommands2.testOrcNoPPD (batchId=268)
org.apache.hadoop.hive.ql.TestTxnCommands2.testOrcPPD (batchId=268)
org.apache.hadoop.hive.ql.TestTxnCommands2WithSplitUpdate.testOrcNoPPD (batchId=280)
org.apache.hadoop.hive.ql.TestTxnCommands2WithSplitUpdate.testOrcPPD (batchId=280)
org.apache.hadoop.hive.ql.TestTxnCommands2WithSplitUpdateAndVectorization.testOrcNoPPD (batchId=277)
org.apache.hadoop.hive.ql.TestTxnCommands2WithSplitUpdateAndVectorization.testOrcPPD (batchId=277)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/5488/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/5488/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-5488/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 134 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12870560 - PreCommit-HIVE-Build, Fix some tests in v2 patch.
The plan is to disallow order/sort by w/o limit in sub query in semantic level. We somehow have lots of such queries in qtest, and so they need to be updated., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12870969/HIVE-6348.2.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 68 failed/errored test(s), 10813 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_join0] (batchId=82)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_join15] (batchId=15)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_join20] (batchId=83)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_join31] (batchId=42)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[cbo_rp_auto_join0] (batchId=15)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[cbo_rp_windowing] (batchId=37)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[cbo_windowing] (batchId=51)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[concat_op] (batchId=70)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[correlationoptimizer14] (batchId=33)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[dynamic_rdd_cache] (batchId=51)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[groupby_distinct_samekey] (batchId=54)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[identity_project_remove_skip] (batchId=47)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[input20] (batchId=12)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[input33] (batchId=57)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[input3_limit] (batchId=60)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[limit_pushdown_negative] (batchId=38)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[mapreduce2] (batchId=22)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[multi_insert_gby2] (batchId=37)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[multi_insert_gby3] (batchId=71)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[partcols1] (batchId=60)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ppd2] (batchId=25)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ppd_join4] (batchId=54)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[reducesink_dedup] (batchId=22)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[truncate_column_buckets] (batchId=24)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_data_types] (batchId=72)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_tablesample_rows] (batchId=49)
org.apache.hadoop.hive.cli.TestContribCliDriver.testCliDriver[udf_row_sequence] (batchId=231)
org.apache.hadoop.hive.cli.TestContribNegativeCliDriver.testCliDriver[invalid_row_sequence] (batchId=234)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[mapreduce2] (batchId=140)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[auto_join0] (batchId=161)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[auto_join30] (batchId=149)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_gby] (batchId=152)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_rp_gby] (batchId=156)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_rp_semijoin] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_semijoin] (batchId=151)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[cbo_windowing] (batchId=154)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[explainuser_1] (batchId=151)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[identity_project_remove_skip] (batchId=154)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[leftsemijoin_mr] (batchId=146)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[mrr] (batchId=146)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[multi_column_in] (batchId=147)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[multi_column_in_single] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[reduce_deduplicate_extended] (batchId=156)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[special_character_in_tabnames_1] (batchId=153)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[tez_join_tests] (batchId=159)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[tez_joins_explain] (batchId=151)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_data_types] (batchId=158)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_join30] (batchId=150)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_number_compare_projection] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver[leftsemijoin_mr] (batchId=167)
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver[truncate_column_buckets] (batchId=167)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=232)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join0] (batchId=137)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join15] (batchId=107)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join20] (batchId=138)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join30] (batchId=113)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join31] (batchId=119)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[cbo_gby] (batchId=119)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[cbo_semijoin] (batchId=116)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[dynamic_rdd_cache] (batchId=123)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[identity_project_remove_skip] (batchId=121)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[leftsemijoin_mr] (batchId=107)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[mapreduce2] (batchId=110)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[multi_insert_gby2] (batchId=116)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[multi_insert_gby3] (batchId=132)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[tez_join_tests] (batchId=135)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[tez_joins_explain] (batchId=116)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[vector_data_types] (batchId=133)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/5516/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/5516/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-5516/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 68 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12870969 - PreCommit-HIVE-Build, The latest failures are due to the sub-query order/sort by in our tests. I'd like to get some feedbacks before updating them.
cc [~hagleitn], [~ashutoshc], [~xuefuz]. Do you think the proposal makes sense?, I'm wondering if it makes more sense to optimize the query rather than banning it. While it might be dumb and inefficient, I don't quite see anything wrong in semantics., Indeed optimizing away inner query sort (without limit) is much more user friendly then throwing up exception., I agree with [~ashutoshc] and [~xuefuz]. If we do insist on letting users know about order by/sort by IMHO showing a warning and then proceeding with the query or optimizing to remove order by would be better., I don't think banning is a good idea, there's just no way to know what will break in user's environments., Thanks guys for the suggestions. Yeah I agree ignoring such order/sort by is better. Do you think I can just remove it from the AST?, [~lirui], I think it's better to remove it from operator tree and the optimization can be put as one of the optimization rules., I think it's better to remove it in AST or during logical plan generation. Because once HiveSubqueryRemoveRule is executed, which is the very first rule, subquery will be rewritten into join and there is no way to figure out if original query had a subquery., Hi [~xuefuz], [~vgarg], I also think it's easier to do this in AST. Once we have the OP tree, I'm not sure how to tell whether an order by belongs to sub queries. Besides, I also noted CBO may introduce synthetic sub queries. So I'll write a patch to do it in AST., Sounds good, [~lirui], [~vgarg]. As this is an optimization, I thought it can be put together with all these optimization rules. As to HiveSubqueryRemoveRule, removing order-by can be done right before that. Nevertheless, whatever makes it easy to implement., I am not sure doing it on AST is better (or easier). AST is not amenable to traverse nor does it contain semantic info. Easier (and correct) way IMO would be to write a rule on calcite operator tree which matches on HiveSort followed by HiveSort check there is no limit in that sort and than removes that HiveSort from tree. 
SubQueryRemove rule will remove subqueries from tree by than, but I dont think that will matter. Essentially, on an operator tree you are looking for redundant Sort operators., Hi [~ashutoshc], I didn't put it in calcite because it won't work if CBO is disabled.
My plan is to do it after we've done {{genResolvedParseTree}} on the AST, at which point parse info of each QB is generated. To remove the order by, we can simply remove the corresponding AST node. I feel it more complicated to do it in operator tree, e.g. we have to detect sorting RS in sub queries, and after the RS is removed (actually that's probably not the only OP that needs be removed), we may also have to do some modifications to upstream/downstream operators.
Upload patch v3 for test and demonstrate my idea., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12872025/HIVE-6348.3.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 48 failed/errored test(s), 10820 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestBeeLineDriver.testCliDriver[insert_overwrite_local_directory_1] (batchId=237)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_join0] (batchId=83)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_join15] (batchId=15)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_join20] (batchId=83)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[auto_join31] (batchId=42)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[cbo_rp_auto_join0] (batchId=15)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[concat_op] (batchId=70)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[correlationoptimizer14] (batchId=33)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[dynamic_rdd_cache] (batchId=51)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[groupby_distinct_samekey] (batchId=54)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[identity_project_remove_skip] (batchId=47)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[input20] (batchId=12)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[input33] (batchId=57)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[input3_limit] (batchId=60)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[limit_pushdown_negative] (batchId=38)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[multi_insert_gby2] (batchId=37)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[multi_insert_gby3] (batchId=71)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ppd2] (batchId=25)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ppd_join4] (batchId=54)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[truncate_column_buckets] (batchId=24)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_tablesample_rows] (batchId=49)
org.apache.hadoop.hive.cli.TestContribCliDriver.testCliDriver[udf_row_sequence] (batchId=231)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[orc_ppd_basic] (batchId=140)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[auto_join0] (batchId=161)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[auto_join30] (batchId=149)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[explainuser_1] (batchId=151)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[identity_project_remove_skip] (batchId=154)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[mrr] (batchId=146)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[reduce_deduplicate_extended] (batchId=156)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[tez_join_tests] (batchId=159)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[tez_joins_explain] (batchId=151)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_if_expr] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_join30] (batchId=150)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_number_compare_projection] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver[truncate_column_buckets] (batchId=167)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query78] (batchId=232)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join0] (batchId=137)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join15] (batchId=107)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join20] (batchId=138)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join30] (batchId=113)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[auto_join31] (batchId=119)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[dynamic_rdd_cache] (batchId=123)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[identity_project_remove_skip] (batchId=121)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[multi_insert_gby2] (batchId=116)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[multi_insert_gby3] (batchId=132)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[tez_join_tests] (batchId=135)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[tez_joins_explain] (batchId=116)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/5583/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/5583/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-5583/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 48 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12872025 - PreCommit-HIVE-Build, [~ashutoshc] Plan generated after subquery remove rule/de-correlation doesn't generate HiveSortLimit on HiveSortLimit e.g. for query {code:sql} select * from part where p_size IN (select p_size from part p where p.p_type <> part.p_name order by p_size) {code} plan just after decorrelation looks like
{code:sql}
HiveProject(p_partkey=[$0], p_name=[$1], p_mfgr=[$2], p_brand=[$3], p_type=[$4], p_size=[$5], p_container=[$6], p_retailprice=[$7], p_comment=[$8])
  HiveProject(p_partkey=[$0], p_name=[$1], p_mfgr=[$2], p_brand=[$3], p_type=[$4], p_size=[$5], p_container=[$6], p_retailprice=[$7], p_comment=[$8], BLOCK__OFFSET__INSIDE__FILE=[$9], INPUT__FILE__NAME=[$10], ROW__ID=[$11])
    LogicalJoin(condition=[AND(<>($1, $13), =($5, $12))], joinType=[inner])
      HiveTableScan(table=[[default.part]], table:alias=[part])
      HiveAggregate(group=[{0, 1}])
        HiveProject(p_size=[$0], p_type0=[$1])
          HiveProject(p_size=[$0], p_type0=[$13])
            HiveSortLimit(sort0=[$0], dir0=[ASC-nulls-first])
              HiveProject(p_size=[$5], p_partkey=[$0], p_name=[$1], p_mfgr=[$2], p_brand=[$3], p_type=[$4], p_size1=[$5], p_container=[$6], p_retailprice=[$7], p_comment=[$8], block__offset__inside__file=[$9], input__file__name=[$10], row__id=[$11], p_type0=[$4])
                LogicalFilter(condition=[IS NOT NULL($4)])
                  HiveTableScan(table=[[default.part]], table:alias=[p])
{code}
So you have one sort limit on right side of join.  One possible rule could be if top project doesn't project any column/expression from right side then remove HiveSortLimit from right side of join., [~lirui] Latest patch looks fine. Can you add tests?, Hi [~vgarg], it turns out we do need the sub query being sorted in some cases. An example is input20.q:
{code}
EXPLAIN
FROM (
  FROM src
  MAP src.key, src.key 
  USING 'cat'
  DISTRIBUTE BY key
  SORT BY key, value
) tmap
INSERT OVERWRITE TABLE dest1
REDUCE tmap.key, tmap.value
USING 'python input20_script.py'
AS key, value;
{code}
The query plan is:
{noformat}
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: src
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: key (type: string), key (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              Transform Operator
                command: cat
                output info:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                Reduce Output Operator
                  key expressions: _col0 (type: string), _col1 (type: string)
                  sort order: ++
                  Map-reduce partition columns: _col0 (type: string)
                  Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                  value expressions: _col0 (type: string), _col1 (type: string)
      Reduce Operator Tree:
        Select Operator
          expressions: VALUE._col0 (type: string), VALUE._col1 (type: string)
          outputColumnNames: _col0, _col1
          Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
          Transform Operator
            command: python input20_script.py
            output info:
                input format: org.apache.hadoop.mapred.TextInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
            Select Operator
              expressions: UDFToInteger(_col0) (type: int), _col1 (type: string)
              outputColumnNames: _col0, _col1
              Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
              File Output Operator
                compressed: false
                Statistics: Num rows: 500 Data size: 5312 Basic stats: COMPLETE Column stats: NONE
                table:
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.dest1
{noformat}
The script {{input20_script.py}} counts the number of times each <Key, Value> appears and expects the input to be sorted. I'll consider how to handle such a case., Turns out we already have such rules. They are HiveSortRemoveRule and HiveSortMergeRule. First thing to verify is why they are not able to optimize trees in these case.
[~lirui] CBO is now always enabled. It can only be turned off if user set config to false explicitly, but that is true for any other config in system. Even your patch adds a config, so if thats off, user won't get this optimization either., {{HiveSortRemoveRule}} removes HiveSortLimit only if it is created by HiveSortJoinReduceRule "If it is not created by HiveSortJoinReduceRule, we cannot remove it" {{HiveSortMergeRule}} seems to merge two HiveSortLimit into one which isn't the case here. So I don't think there is any existing rule covering this case., Hi [~ashutoshc], [~vgarg], either doing this in CBO or not is OK to me. But I'm not sure how to handle cases like input20.q. Let's consider the following two queries:
The orderBy should be removed in this one:
{code}
from (select key from src order by key) tmap insert overwrite table dest select tmap.key;
{code}
While it shouldn't be removed in this one:
{code}
from (select key,value from src order by key,value) tmap insert overwrite table dest1 reduce tmap.key, tmap.value using 'python input20_script.py';
{code}
The two queries have very similar ASTs. Any suggestions how can we distinguish them? Maybe we can skip the optimization in case of scripts and UDFs. Is it correct to expect a specific order from a sub query in the first place?, I am not sure why can't order by removed in these cases. There is no contract that scripts and UDFs will see data in any particular order. So, its perfectly alright to remove sorts in such cases., [~ashutoshc], do you mean it's OK to break cases like input20? If so, can we go with v3 patch? Currently CBO won't run if query contains scripts or sortBy clause., I don't think its 'breaking'  those cases. So, change should be ok.
[~lirui] Seems like some of q.out files needs update. Can you please update those? , Patch v4 updates the affected tests.
# I modified {{input20_script.py}} so it doesn't expect ordered input and gives the same results.
# I disabled the optimization in {{correlationoptimizer14.q}} and {{reduce_deduplicate_extended.q}}. Otherwise most of the test cases in these two qfiles become pointless.
# For {{concat_op.q}}, I removed the collect_list UDF in output. Because the column order in the list is not guaranteed.

Other golden files only have changes in query plan, not the results. Will add an RB for this., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12874638/HIVE-6348.4.patch

{color:green}SUCCESS:{color} +1 due to 9 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 12 failed/errored test(s), 10848 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[join36] (batchId=82)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[tez_smb_main] (batchId=149)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_2] (batchId=99)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query16] (batchId=232)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query94] (batchId=232)
org.apache.hadoop.hive.ql.parse.TestReplicationScenariosAcrossInstances.testBootstrapFunctionReplication (batchId=216)
org.apache.hadoop.hive.ql.parse.TestReplicationScenariosAcrossInstances.testCreateFunctionIncrementalReplication (batchId=216)
org.apache.hadoop.hive.ql.parse.TestReplicationScenariosAcrossInstances.testCreateFunctionWithFunctionBinaryJarsOnHDFS (batchId=216)
org.apache.hive.hcatalog.api.TestHCatClient.testPartitionRegistrationWithCustomSchema (batchId=177)
org.apache.hive.hcatalog.api.TestHCatClient.testPartitionSpecRegistrationWithCustomSchema (batchId=177)
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation (batchId=177)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/5790/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/5790/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-5790/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 12 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12874638 - PreCommit-HIVE-Build, Latest failures are not related. [~vgarg], [~ashutoshc] could you take a look? Thanks., [~lirui] Your patch removes order by from queries such as {code:sql}select key from (select key from src order by key) sub limit 1{code} I don't think it is safe to remove order by in this case., {{udf_row_sequence.q}} test is another example where order by is removed for query {code:sql}select key, row_sequence() as r from (select key from src order by key) x order by r{code} which I don't think is correct since row_sequence() is fixed for a given key depending upon its order, Looks like I am wrong. According to https://mariadb.com/kb/en/mariadb/why-is-order-by-in-a-from-subquery-ignored/  
bq. A "table" (and subquery in the FROM clause too) is - according to the SQL standard - an unordered set of rows. Rows in a table (or in a subquery in the FROM clause) do not come in any specific order. That's why the optimizer can ignore the ORDER BY clause that you have specified. In fact, SQL standard does not even allow the ORDER BY clause to appear in this subquery, +1 Looks good to me, Thanks [~vgarg] for reviewing. Yeah I think it's in compliance with the standard, though may "break" assumptions of some UDFs.
I'll commit it if other guys have no further comments., It's trivia at this point but ORDER BY in subquery is allowed by optional feature F851 in the SQL standard, but there is no associated guarantee of ordering that goes with it., [~cartershanklin] Good to know (y), Pushed to master. Thanks guys for the review!, Doc note:  This adds *hive.remove.orderby.in.subquery* to HiveConf.java, so it needs to be documented in Configuration Properties.

* [Configuration Properties -- Query Execution | https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-QueryandDDLExecution]

Do we also need general documentation?  If so, should it go in the Subqueries doc or the SortBy doc?

* [Subqueries | https://cwiki.apache.org/confluence/display/Hive/LanguageManual+SubQueries]
* [Sort By / Order By / etc. | https://cwiki.apache.org/confluence/display/Hive/LanguageManual+SortBy]

Added a TODOC3.0 label., Thanks [~leftylev] for the doc note. I've updated the configuration properties and order/sort by docs., Thank you for the documentation, Rui Li.  I removed the TODOC3.0 label.

Here are the doc links:

* [Configuration Properties -- hive.remove.orderby.in.subquery | https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.remove.orderby.in.subquery]
* [SortBy -- Syntax of Order By | https://cwiki.apache.org/confluence/display/Hive/LanguageManual+SortBy#LanguageManualSortBy-SyntaxofOrderBy]
* [SortBy -- Syntax of Sort By | https://cwiki.apache.org/confluence/display/Hive/LanguageManual+SortBy#LanguageManualSortBy-SyntaxofSortBy], Hive 3.0.0 has been released so closing this jira.]