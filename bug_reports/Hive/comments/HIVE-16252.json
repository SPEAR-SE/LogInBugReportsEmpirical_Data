[this might cause quite a few vectorization problems (I think)

{{git grep notVectorizedReason}} returned a lot of occurences of this.

there is a type filtering logic - based on the type's string at:

https://github.com/apache/hive/blob/27f27219a2b965958f850a92bf581d7b9c3ddfb0/ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/Vectorizer.java#L2278

which rejects {{struct<...>}} - the actual value of 'type' in this case.

so generally I would say (based on what I've saw now): vectorization is currently unsupported for any aggregator in case {{group by}} is being used., hmm...seems like even the following is enough to reproduce, but the proplem doesn't appear for min/max:
{code}
explain vectorization select 
        avg(ss_sales_price) as revenue
    from
        store_sales;
{code}, I think this is by-design...the avg udaf uses an internal temporary type to communicate after partial1 {{struct<count:bigint,sum:decimal(17,2),input:decimal(7,2)>}} is that format...since it would be tricky to process this format in vectorized mode - it leaves it to the standard udaf to do this work; however the message is a bit misleading; it tries to apply it to an aggregate for FINAL which doesn't seem right.

[~rajesh.balamohan] did it cause any trouble?, Observed slow performance with this query as opposed to sum function., okay the 'Bug' type mislead me a bit :)
I'm trying to address this and HIVE-16253 with HIVE-16264 - but there are other missing pieces to the puzzle...I'll link these tickets to relate to eachother, HIVE-16589]