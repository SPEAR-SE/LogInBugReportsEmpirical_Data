[navis requested code review of "HIVE-3852 [jira] Multi-groupby optimization fails when same distinct column is used twice or more".
Reviewers: JIRA

  DPAL-1951 Multi-groupby optimization fails when same distinct column is used twice or more

  FROM INPUT
  INSERT OVERWRITE TABLE dest1
  SELECT INPUT.key, sum(distinct substr(INPUT.value,5)), count(distinct substr(INPUT.value,5)) GROUP BY INPUT.key
  INSERT OVERWRITE TABLE dest2
  SELECT INPUT.key, sum(distinct substr(INPUT.value,5)), avg(distinct substr(INPUT.value,5)) GROUP BY INPUT.key;

  fails with exception FAILED: IndexOutOfBoundsException Index: 0,Size: 0

TEST PLAN
  EMPTY

REVISION DETAIL
  https://reviews.facebook.net/D7737

AFFECTED FILES
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
  ql/src/test/queries/clientpositive/groupby10.q
  ql/src/test/results/clientpositive/groupby10.q.out

MANAGE HERALD DIFFERENTIAL RULES
  https://reviews.facebook.net/herald/view/differential/

WHY DID I GET THIS EMAIL?
  https://reviews.facebook.net/herald/transcript/18621/

To: JIRA, navis
, [~navis], I had a higher level question.
Should we have this optimization now ?
I mean, is this really needed with map-side aggregates, or can we remove this code completely ?, Namit, 
I don't think I'm right person to answer it but IMHO, it would be dependent to reduction ratio by map aggregation. If group by column is rather distinctive, this optimization could useful but if it's not, two (or more) MR tasks would be faster. , Namit,
bq. Should we have this optimization now ?
I am not sure which particular optimization you are referring to. I assume you mean there is no need for reduce-side groupbys anymore, since we have map-side aggregates. If so, I think those are still required. As Navis, pointed out if reduction ratio is not high enough, mappers may run out of memory and than we suggest users to turn-off map-side aggregation.
, OK, I agree.
We may have a scenario, in which this is useful.

I will review., +1, Committed. Thanks Navis, Integrated in hive-trunk-hadoop1 #20 (See [https://builds.apache.org/job/hive-trunk-hadoop1/20/])
    HIVE-3852 Multi-groupby optimization fails when same distinct column is
used twice or more (Navis via namit) (Revision 1434600)

     Result = ABORTED
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1434600
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
* /hive/trunk/ql/src/test/queries/clientpositive/groupby10.q
* /hive/trunk/ql/src/test/results/clientpositive/groupby10.q.out
, Integrated in Hive-trunk-hadoop2 #70 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/70/])
    HIVE-3852 Multi-groupby optimization fails when same distinct column is
used twice or more (Navis via namit) (Revision 1434600)

     Result = FAILURE
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1434600
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
* /hive/trunk/ql/src/test/queries/clientpositive/groupby10.q
* /hive/trunk/ql/src/test/results/clientpositive/groupby10.q.out
, Integrated in Hive-trunk-h0.21 #1919 (See [https://builds.apache.org/job/Hive-trunk-h0.21/1919/])
    HIVE-3852 Multi-groupby optimization fails when same distinct column is
used twice or more (Navis via namit) (Revision 1434600)

     Result = SUCCESS
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1434600
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
* /hive/trunk/ql/src/test/queries/clientpositive/groupby10.q
* /hive/trunk/ql/src/test/results/clientpositive/groupby10.q.out
]