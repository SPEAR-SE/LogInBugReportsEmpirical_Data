[{code}
ERROR ql.Driver (SessionState.java:printError(824)) - FAILED: SemanticException [Error 10014]: Line 3:7 Wrong arguments '10.5BD': Ambiguous method for class org.apache.hadoop.hive.ql.udf.UDFLog with (int, decimal(3,1)). Possible choices: _FUNC_(decimal(38,18))  _FUNC_(decimal(38,18), decimal(38,18))  _FUNC_(decimal(38,18), double)  _FUNC_(double)  _FUNC_(double, decimal(38,18))  _FUNC_(double, double)
org.apache.hadoop.hive.ql.parse.SemanticException: Line 3:7 Wrong arguments '10.5BD': Ambiguous method for class org.apache.hadoop.hive.ql.udf.UDFLog with (int, decimal(3,1)). Possible choices: _FUNC_(decimal(38,18))  _FUNC_(decimal(38,18), decimal(38,18))  _FUNC_(decimal(38,18), double)  _FUNC_(double)  _FUNC_(double, decimal(38,18))  _FUNC_(double, double)
        at org.apache.hadoop.hive.ql.parse.TypeCheckProcFactory$DefaultExprProcessor.process(TypeCheckProcFactory.java:1162)
        at org.apache.hadoop.hive.ql.lib.DefaultRuleDispatcher.dispatch(DefaultRuleDispatcher.java:90)
        at org.apache.hadoop.hive.ql.lib.DefaultGraphWalker.dispatchAndReturn(DefaultGraphWalker.java:94)
        at org.apache.hadoop.hive.ql.lib.DefaultGraphWalker.dispatch(DefaultGraphWalker.java:78)
        at org.apache.hadoop.hive.ql.lib.DefaultGraphWalker.walk(DefaultGraphWalker.java:132)
        at org.apache.hadoop.hive.ql.lib.DefaultGraphWalker.startWalking(DefaultGraphWalker.java:109)
        at org.apache.hadoop.hive.ql.parse.TypeCheckProcFactory.genExprNode(TypeCheckProcFactory.java:189)
        at org.apache.hadoop.hive.ql.parse.TypeCheckProcFactory.genExprNode(TypeCheckProcFactory.java:142)
        at org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genAllExprNodeDesc(SemanticAnalyzer.java:10264)
        at org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genExprNodeDesc(SemanticAnalyzer.java:10220)
        at org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genSelectPlan(SemanticAnalyzer.java:3553)
        at org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genSelectPlan(SemanticAnalyzer.java:3334)
        at org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genPostGroupByBodyPlan(SemanticAnalyzer.java:8779)
        at org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genBodyPlan(SemanticAnalyzer.java:8734)
        at org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genPlan(SemanticAnalyzer.java:9566)
        at org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.analyzeInternal(SemanticAnalyzer.java:9889)
        at org.apache.hadoop.hive.ql.parse.BaseSemanticAnalyzer.analyze(BaseSemanticAnalyzer.java:217)
        at org.apache.hadoop.hive.ql.Driver.compile(Driver.java:407)
        at org.apache.hadoop.hive.ql.Driver.compile(Driver.java:303)
        at org.apache.hadoop.hive.ql.Driver.compileInternal(Driver.java:1058)
        at org.apache.hadoop.hive.ql.Driver.runInternal(Driver.java:1128)
        at org.apache.hadoop.hive.ql.Driver.run(Driver.java:995)
        at org.apache.hadoop.hive.ql.Driver.run(Driver.java:985)
{code}, Is this for CBO?, Nopes, this happens without CBO on trunk. 
cc: [~jdere] who might know more., UDFLog looks like it's implemented as an old-style UDF, and has an evaluate() method with Decimal parameters. Unfortunately Hive can't properly support evaluate() methods where the arguments are parameterized types (decimal, char, varchar). There are a couple of ways to resolve this:

1. Convert UDF() to a GenericUDF
2. Remove the evaluate() methods from UDFLog which contain Decimal args. If the double version of evaluate() exists the parameters will be converted to use the double version. However this means that the result will be of type Double., It looks like the underlying implementation of UDFLog() just uses double anyway, so it doesn't look like we are losing much if we drop the Decimal version of this function., I see. Thanks, Jason for taking a look.  I am fine with either option. Lets do 2) since that looks like less work., Actually, it looks like this was supposed to work with Decimal, there were changes made with HIVE-6327. Let me take a look at what that change was doing., UDFLog has 4 versions of evaluate(arg1, arg2):
evaluate(double, double)
evaluate(decimal, decimal)
evaluate(double, decimal)
evaluate(decimal, double)

Looks like we need to get rid of the last 2 versions as they cause ambiguity when one of the arguments is not double or decimal., Remove the extra evaluate() methods and add q file test., +1, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12671101/HIVE-8114.1.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 6347 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.ql.parse.TestParse.testParse_union
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/980/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/980/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-980/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12671101, Committed to trunk. Thanks, Jason!
[~vikram.dixit] It will be good to have this bug fix in 0.14 too, +1 for 0.14. Please go ahead and commit to 0.14., Committed to 0.14 branch., Doc note:  The wiki needs to be updated.  Currently it says "log(DOUBLE base, DOUBLE a) -- Return the base-base logarithm of the argument d. Instead of DOUBLE this UDF also takes DECIMAL, both types can be mixed."  Hmm ... better change "d" to "a" in that.

Since this was broken previously, can we just delete "both types can be mixed" without giving version & JIRA information?

* [Hive Operators and UDFs -- Mathematical Functions | https://cwiki.apache.org/confluence/display/Hive/LanguageManual+UDF#LanguageManualUDF-MathematicalFunctions] 

A release note would also be good., This has been fixed in 0.14 release. Please open new jira if you see any issues.
]