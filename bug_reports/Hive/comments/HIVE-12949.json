[

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12784782/HIVE-12949.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 10021 tests executed
*Failed tests:*
{noformat}
TestMiniTezCliDriver-script_pipe.q-tez_smb_empty.q-subquery_in.q-and-12-more - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_uri_import
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarDataNucleusUnCaching
org.apache.hive.jdbc.TestSSL.testSSLVersion
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/6783/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/6783/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-6783/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12784782 - PreCommit-HIVE-TRUNK-Build, Test failures are unrelated., [~hsubramaniyan], could you take a quick look? thanks., Hi [~mohitsabharwal],  Is hive.server2.logging.operation.level not settable from a HS2 session?  Have you tried it with a HS2 JDBC client such as beeline by doing "set  hive.server2.logging.operation.level=VERBOSE", run a Hive query with MR tasks, "set  hive.server2.logging.operation.level= EXECUTION", run the same query etc and see a logging behavior change. You can further test it by opening multiple sessions to the same server and see if the above mentioned behavior is taking place for each independent session. If this is not the case, then this issue requires more attention than a description change. Rather, its a bug because it defeats the purpose of the original jira HIVE-10119. 
The hiveserver2 level parameter is hive.server2.logging.operation.enabled which is to enable/disable any client side logging.

Also, can you please clarify what "currently" refers to in the jira description.

Can you please clarify the above questions before we change the description of the mentioned parameter.

Thanks
Hari, Thanks, [~hsubramaniyan]. I tested this on version 1.2 by setting {{hive.server2.logging.operation.level}} via beeline and it did not work. I have not tested it on current master.

As I said in the description, from reading the code, it appears that an appender based on the log level property is created just once at OperationManager init time (in initOperationLogCapture). Not each time an operation is issued or even once for every new session. Effectively, logging level gets fixed when HS2 first comes up and remains the same . Unless I am missing something here., [~mohitsabharwal] Thanks for the comments. If you see, LogDivertAppender has a Filter which decides which server side message to be logged at the session based on the logging level. The logic is here : https://github.com/apache/hive/blob/master/service/src/java/org/apache/hive/service/cli/operation/LogDivertAppender.java#L150.
As for the operation log, it depends on the parentSession's HiveConf which decides the logging level as initiated here : https://github.com/apache/hive/blob/master/service/src/java/org/apache/hive/service/cli/operation/Operation.java#L246
Everytime you modify the parameter from the session, the HiveConf object corresponding to the session gets modified to reflect the parameter change and hence the operation is initialized with this information.

I tested this parameter with the current master and the feature works as intended, if you feel that this is not the case, please update the jira/title to include the actual issue with a testcase. I don't think a description change of hive.server2.logging.operation.level is the correct way to fix this problem if this is an actual bug.

Thanks
Hari]