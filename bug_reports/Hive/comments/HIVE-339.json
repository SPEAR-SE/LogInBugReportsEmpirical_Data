[fixed some testparse logs also, It's not clear what adding a new group by mode would do. There are no changes to GroupByOperator which seem to use this mode. Is that correct? If so, can you add a comment what the mergepartial mode is supposed to indicate?, man - this code is unparseable at this point. seems like 99% of the code in the old and new function (gengroupbyplanxxx) is common. is any refactoring and better documentation possible here at all? 

i also don't understand the new groupbydesc mode. it seems the effect is to choose 'iterate' method in the group by operator for the distinct case (is that correct?). why is this necessary?, will add comments and load a new patch, added a lot more comments.

Need iterate at reduce-side because it is possible that the map-aide aggregation was turned off at runtime 
and then distinct need to be eliminated, not able to understand. regardless of whether map-side aggregation is turned off dynamically - the aggregation output type of the mapside will be a partial aggregate. i don't understand how we can iterate over the results of partial aggregate.

i think problems may be getting masked because the output type of count partial aggregate is the same as count full aggregate. if we were doing 'avg(distinct column)' - then doing iterate over partial aggregate output _should_ cause problems. this would be a good test case as well., Say the query is: select col2, count(distinct col2) from T group by col1;

the mapper emits:

col1   col2  col3
Key    19   1
Key    19   1
Key    22   1
Key    22   1
Key    23   1

The expected answer is:

Key  3

So, you walk over the key+sort (which is col1 + col2), which makes sure that in the above example, 2nd and 4th rows are ignored,
and then iterate is called 3 times, which result in (key 3)

However,if you called merge in the reducer: it would result in:

key (19+22+23) --> key 64


The same should work for avg also. I am running a query on mobile_mms for february currently to validate.
Partial results do not mean anything for distincts whereas they can be aggregated for non-distincts.





, Agree.

In short, for DINSTICT aggregations in 1-map/reduce plan, we do "de-duplicate" as much as we can in the map-phase, and the whole aggregation is done in the reduce phase.
That's why reduce phase also needs iterate()., Can you rename Reduction key to 'Partitioning Key' and 'Partitioning Key' to 'Sorting Key'. I'm guessing that's what you mean., incorporated Raghu's comments, the explanations and comments make this much easier to understand. am just thumbing through the code one last time.

, hive.339.4.patch: 1073:
+   *   Partitioning Key: 
+   *      grouping key if no DISTINCT
+   *      grouping + distinct key if DISTINCT

should be:
+   *   Partitioning Key: 
+   *      random() if no DISTINCT
+   *      grouping + distinct key if DISTINCT

The same is true for line 1158.


Line 1017: Can you add the comment for MERGEPARTIAL?
, incorporated Zheng's comments, +1, Committed revision 752996. Thanks Namit!]