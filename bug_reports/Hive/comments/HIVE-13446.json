[We could also ensure that the user connecting is the same user that the process is running as. Only HiveServer should have access to the management protocol at the moment., A combination of the two., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12798166/HIVE-13446.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 9959 tests executed
*Failed tests:*
{noformat}
TestJdbcWithMiniHS2 - did not produce a TEST-*.xml file
TestMiniTezCliDriver-update_orig_table.q-vectorization_13.q-mapreduce2.q-and-12-more - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver_index_bitmap3
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7574/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7574/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-7574/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12798166 - PreCommit-HIVE-TRUNK-Build, [~sseth] ping?, [~vikram.dixit] perhaps you can review? , The patch itself looks good in what it's doing.

Couple of questions / comments.
- Is the LLAP_VALIDATE_ACLS property really needed ? Why not always have this enabled.
- Changing the default for "hive.llap.management.acl" to " " instead of "*" seems to be a simpler approach. Afaik, the logged in user will still be allowed access.

The default would allow only the logged in user (assuming that works). Instead of changing LLAP_VALIDATE_ACLS - users can modify the actual ACLs if they want to grant access to additional users.

- hive.llap.management.acl.blocked - This seems very brittle. BLOCKED is an internal constant in Hadoop ServiceAuthorizationManager. I'm not sure how any project outside of Hadoop is supposed to use this in a reliable manner.
Maybe define the man acl configuration as a string and add the blocked to it - to prevent strange naming problems mentioned in the code., {noformat}
    Is the LLAP_VALIDATE_ACLS property really needed ? Why not always have this enabled.
{noformat}
In case it breaks for someone for a reason we cannot foresee. This setting will also be used to enforce checking ZK acls.
{noformat}
    Changing the default for "hive.llap.management.acl" to " " instead of "*" seems to be a simpler approach. Afaik, the logged in user will still be allowed access. The default would allow only the logged in user (assuming that works). Instead of changing LLAP_VALIDATE_ACLS - users can modify the actual ACLs if they want to grant access to additional users.
{noformat}
I am not sure if this is going to work. We'd need to return the client principal key from KerberosInfo; even then, the verification is done like so:
{noformat}
[String ]clientPrincipal = SecurityUtil.getServerPrincipal(conf.get(clientKey), addr);
...
if((clientPrincipal != null && !clientPrincipal.equals(user.getUserName())) || ... reject
{noformat}
It appears to require kinit with the host name from client. [~jingzhao] can you comment on this? Does IPC allow the current user to access the service, even if they logged in with keytab as user@BLAH.COM, not user/addr@BLAH.COM? If I understand the code in ServiceAuthorizationManager correctly, it doesn't appear to.


{noformat}
    hive.llap.management.acl.blocked - This seems very brittle. BLOCKED is an internal constant in Hadoop ServiceAuthorizationManager. I'm not sure how any project outside of Hadoop is supposed to use this in a reliable manner. Maybe define the man acl configuration as a string and add the blocked to it - to prevent strange naming problems mentioned in the code.
{noformat}
Hmm. How would adding the same thing to it be safer? 
This way to build the thing is essentially public since everyone has to use it to configure their services. This setting just adds it to HiveConf. If the name changes, we'd have to change the config name like everyone else; for us, the default will also break, but I think this is not a big deal (and is unavoidable)
, The patch itself works - to restrict access to the llap user only. +1 from that perspective.
Think it'll be a little confusing if "hive.llap.daemon.acl" is set to *, and other users are still not able to login.

[~hitesh] - do you happen to know if the logged in user will be allowed if the ACL is set to " ", and the user connecting is the same logged in user with kerberos credentials., Setting tez acls to empty string will allow only the AM user to view all details and the dag owner to view dag specific details. , If you are using the hadoop acls impl, setting it to a string with a single space blocks everyone. , Btw, this does not apply to daemon acls, these can be set to anything, Committed to master. Thanks for the review!, Doc note:  This adds *hive.llap.daemon.acl.blocked* and *hive.llap.management.acl.blocked* to HiveConf.java so they need to be documented in the wiki for release 2.1.0.

* [Configuration Properties -- LLAP | https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-LLAP]
* [LLAP | https://cwiki.apache.org/confluence/display/Hive/LLAP]]