[
Here is the explain output with SPECIAL annotation showing the VectorExpression(s):

{code}
STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Map Operator Tree:
          TableScan
            alias: b
            Statistics: Num rows: 500 Data size: 101000 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: (key + 450) is not null (type: boolean)
              Statistics: Num rows: 250 Data size: 50500 Basic stats: COMPLETE Column stats: NONE
              vector filter expressions: SelectColumnIsNotNull[-1](CastDecimalToBoolean[3](DecimalColAddDecimalScalar[2]))
              Reduce Output Operator
                key expressions: (key + 450) (type: decimal(4,0))
                sort order: +
                Map-reduce partition columns: (key + 450) (type: decimal(4,0))
                Statistics: Num rows: 250 Data size: 50500 Basic stats: COMPLETE Column stats: NONE
                value expressions: key (type: decimal(3,0)), value (type: string)
                vector value expressions: IdentityExpression[0], IdentityExpression[1]
          TableScan
            alias: a
            Statistics: Num rows: 500 Data size: 101000 Basic stats: COMPLETE Column stats: NONE
            Filter Operator
              predicate: key is not null (type: boolean)
              Statistics: Num rows: 250 Data size: 50500 Basic stats: COMPLETE Column stats: NONE
              vector filter expressions: SelectColumnIsNotNull[-1](CastDecimalToBoolean[2])
              Reduce Output Operator
                key expressions: key (type: decimal(3,0))
                sort order: +
                Map-reduce partition columns: key (type: decimal(3,0))
                Statistics: Num rows: 250 Data size: 50500 Basic stats: COMPLETE Column stats: NONE
                value expressions: value (type: string)
                vector value expressions: IdentityExpression[1]
      Execution mode: vectorized
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {KEY.reducesinkkey0} {VALUE._col0}
            1 {VALUE._col0} {VALUE._col1}
          outputColumnNames: _col0, _col1, _col4, _col5
          Statistics: Num rows: 275 Data size: 55550 Basic stats: COMPLETE Column stats: NONE
          Select Operator
            expressions: _col0 (type: decimal(3,0)), _col1 (type: string), _col4 (type: decimal(3,0)), _col5 (type: string)
            outputColumnNames: _col0, _col1, _col2, _col3
            Statistics: Num rows: 275 Data size: 55550 Basic stats: COMPLETE Column stats: NONE
            File Output Operator
              compressed: false
              Statistics: Num rows: 275 Data size: 55550 Basic stats: COMPLETE Column stats: NONE
              table:
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe

  Stage: Stage-0
    Fetch Operator
      limit: -1
      Processor Tree:
        ListSink
{code}, This problem was fixed in the CHAR / VARCHAR HIVE-5760 change.]