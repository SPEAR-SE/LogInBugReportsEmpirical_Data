[In the jstack output, the following non daemon thread was seen . -

{code}
"pool-1-thread-1" prio=10 tid=0x00007f6b793a4800 nid=0x3030 waiting on condition [0x00007f6b741dc000]
   java.lang.Thread.State: TIMED_WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)
        - parking to wait for  <0x00000000e09fdc28> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:226)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2082)
        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1090)
        at java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:807)
        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
{code}

Verified manually that this patch fixes the hanging issue.
, t.setName("HiveClientCache cleaner");
It's a minor thing, but it would be good to add a counter in the ThreadFactory and add it to the name so that it's like this "HiveClientCache cleaner-1".
If the thread in the pool dies, a new one is created to replace it.  With the counter, we'll know about that in thread dumps and logs.

+1 pending tests
, Changed to use a number with thread as well. Using guava ThreadFactoryBuilder now. Guava is already used by this class, so it does not add a new dependency.
, +1, much needed fix. Thanks, Thejas!, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12680975/HIVE-8830.2.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 6687 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_optimize_nullscan
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1747/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1747/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1747/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12680975 - PreCommit-HIVE-TRUNK-Build, Patch committed to trunk. Thanks for the review Eugene & Sushanth!
, [~hagleitn] I think this is an very useful fix, we should include in 0.14 branch, for possible 0.14.1 candidate.
, +1 for 14.1, Patch committed to 0.14 branch.
, Updating release version for jiras resolved in 1.0.0 .
, This issue has been fixed in Apache Hive 1.0.0. If there is any issue with the fix, please open a new jira to address it.
]