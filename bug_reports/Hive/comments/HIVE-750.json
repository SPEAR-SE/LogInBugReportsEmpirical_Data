[Escalating this to critical since this is breaking internal tests., This is due to a predicate pushdown bug - if a non-deterministic function appears, no filter is pushed up.
The filter should be pushed below the current filter which has a non-deterministic function. Currently, the filters
only get pushed below the tablescan - will have a patch for this soon.

This also needs to be committed to 0.4, patch for trunk, predicate pushdown was optimization before the new pruner came along so this is not a bug but a lack of feature :)

patch looks good but since a new child filter operator is created every time there is a non-deterministic predicate in an expression, there will be two identical filter operators if there are two non-deterministic are encountered while walking down the tree. 

a better option would be

1) merge the children's pushdown preds with the current filter op's preds
2) run the ppd algorithm to extract pushdown predicates
3) if step 2 does not return an empty set then skip to step 6 (new)
4) if the current op's child is a filter operator then skip to step 6 (new)
5) create a new filter op with the child's pushdown preds (new)
6) pass the results of step2 to current op's parent

so the above algorithm would create a new filter-op whenever a predicate can't be pushed down. this can help in case multiple sub-queries where some of the predicates can be pushed down one join but not all the joins in the query., ofcourse this is not a complete fix since if only some preds get pushed down, this algo can't determine the rest of the preds to create new filter op. but it is good enough of a improvement and will fix the problem of creating multiple identical filter-ops for each of the non-deterministic preds in a filter op., I am not sure the above would work:

There may be multiple filters:


TS -> F1 (non derterministic) -> F2 -> ....... -> F3

We want to push F3 above, but since F1's kid is F2, it will not be pushed.

I agree, in the current algorithm, we are making 2 copies of the filter. 
A better approach would be to merge those filters later, or have a walker which eliminates redundant filters., You are correct but that can be fixed by chagning step4 to F3 ppds to F2 instead., talked with namit offline. current patch looks good, the optimization can be done in a different JIRA., Filed a follow-up jira for the same

https://issues.apache.org/jira/browse/HIVE-815, Committed to trunk.

Can you regenerate the patch for branch 0.4? There are some conflicts in the test cases.
, patch for 0.4, Committed. Thanks Namit!]