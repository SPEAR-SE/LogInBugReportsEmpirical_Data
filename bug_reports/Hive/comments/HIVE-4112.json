[Fix of HIVE-4034 needs to be extended to handle above case as well., Would these rules be sufficient:

Range based window:
- between...  -> works as today, fully specified window
- rows unbounded preceding -> window is (unbounded, current) 
- row unbounded following -> window is (current, unbounded)
- number preceding -> window is ((number preceding) current)
- number following -> window is (current (number following))

Value based window:
- between ... -> works as today, fully specified window
- range unbounded preceding -> window is (unbounded, current) 
- range unbounded following -> window is (current, unbounded)
- expression number LESS -> window is ((LESS expression num) current)
- expression number MORE -> window is (current (MORE expression num)), Harish, by LESS and MORE do you mean keywords?  So is the idea that you could say:

select a, SUM(b) OVER (PARTITION BY c ORDER BY d RANGE LESS c - 5) 

?

If so, why use LESS/MORE here rather than PRECEDING/FOLLOWING as Oracle does?, yes LESS and MORE as keywords.
they are used for value based windows. 
For e.g.
{noformat}
sum(p_retailprice) as s2 over (range between p_size 5 less and current row)
{noformat}
Sum the price of all Products whose size is upto 5 less than this product. Could be any number of rows.

We support Preceding and Following, but those are range based, so for e.g.:
{noformat}
sum(p_retailprice) as s2 over (rows between 5 preceding and current row)
{noformat}
would mean sum over this row and 5 rows before this.

 , I'm curious why you're proposing different keywords for use with RANGE than ROWS.  As far as I can tell both Oracle and the ANSI standard propose using PRECEDING and FOLLOWING in both cases.  , It was done to highlight that the range based window is based on column values and not on the number of rows. Can easily change the syntax to use preceding and following. 
The semantics are: form a window by going backwards(or forwards) until it reaches a row whose difference in value with the 'current' row is more than the value specified in the query.  Only works for numeric types + timestamp. So 'less' and 'more' seemed a more natural way to express this.
Haven't looked at supporting the interval syntax in Oracle., Patch which brings keywords usage in compliance with standards.
https://reviews.facebook.net/D9363, Committed to branch. Thanks Harish for review.]