[The setup is as follows :

We have 7 dimension tables dim1,... dim7. Number of rows in each dimension - 1009530, 3, 227358, 238514, 519, 203841, 47.
and the query is 

{noformat}
 Select SUM(msr1), SUM(msr2) , ....
 from fact 
 Left outer join dim1 on  fact.d1= dim1.id
 Left outer join dim2 on  dim1.id2 = dim2.id
 Left outer Join dim3 on  fact.d3= dim3.id1
 Left outer Join dim4 on  dim3.id3= dim4.id4
 Left outer join dim5 on  dim4.id5= dim5.id
 Left outer Join dim6 on  dim3.id6= dim6.id
 Left outer Join dim7 on  dim6.id7 = dim7.id;
{noformat}

here is the log of lacal task loading hash tables, I'm seeing an NPE while loading one the tables :
{noformat}
2013-02-13 09:04:47	Starting to launch local task to process map join;	maximum memory = 1004929024
2013-02-13 09:04:48	Processing rows:	519	Hashtable size:	519	Memory usage:	11845496	rate:	0.012
2013-02-13 09:04:48	Dump the hashtable into file: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile21--.hashtable
2013-02-13 09:04:48	Upload 1 File to: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile21--.hashtable File size: 31191
2013-02-13 09:04:49	Processing rows:	200000	Hashtable size:	199999	Memory usage:	60980296	rate:	0.061
2013-02-13 09:04:54	Processing rows:	200000	Hashtable size:	199999	Memory usage:	156217016	rate:	0.155
2013-02-13 09:05:01	Processing rows:	300000	Hashtable size:	299999	Memory usage:	202205440	rate:	0.201
2013-02-13 09:05:05	Processing rows:	400000	Hashtable size:	399999	Memory usage:	260133024	rate:	0.259
2013-02-13 09:05:10	Processing rows:	500000	Hashtable size:	499999	Memory usage:	293007176	rate:	0.292
2013-02-13 09:05:14	Processing rows:	600000	Hashtable size:	599999	Memory usage:	347795184	rate:	0.346
2013-02-13 09:05:22	Processing rows:	700000	Hashtable size:	699999	Memory usage:	388323912	rate:	0.386
2013-02-13 09:05:28	Processing rows:	800000	Hashtable size:	799999	Memory usage:	453952824	rate:	0.452
2013-02-13 09:05:34	Processing rows:	900000	Hashtable size:	899999	Memory usage:	482001544	rate:	0.48
2013-02-13 09:05:43	Processing rows:	1000000	Hashtable size:	999999	Memory usage:	539703480	rate:	0.537
2013-02-13 09:05:47	Processing rows:	1009530	Hashtable size:	1009530	Memory usage:	530473664	rate:	0.528
2013-02-13 09:05:47	Dump the hashtable into file: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile61--.hashtable
2013-02-13 09:06:29	Upload 1 File to: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile61--.hashtable File size: 148246102
2013-02-13 09:06:31	Processing rows:	258054	Hashtable size:	54213	Memory usage:	111883448	rate:	0.111
2013-02-13 09:06:31	Dump the hashtable into file: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile31--.hashtable
2013-02-13 09:06:33	Upload 1 File to: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile31--.hashtable File size: 4251559
2013-02-13 09:06:34	Processing rows:	258054	Hashtable size:	203841	Memory usage:	72276192	rate:	0.072
2013-02-13 09:06:34	Dump the hashtable into file: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile32--.hashtable
java.lang.NullPointerException
	at org.apache.hadoop.hive.ql.exec.persistence.MapJoinObjectValue.writeExternal(MapJoinObjectValue.java:138)
	at java.io.ObjectOutputStream.writeExternalData(ObjectOutputStream.java:1443)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1414)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:346)
	at java.util.HashMap.writeObject(HashMap.java:1018)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:959)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1480)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:346)
	at org.apache.hadoop.hive.ql.exec.persistence.HashMapWrapper.flushMemoryCacheToPersistent(HashMapWrapper.java:116)
	at org.apache.hadoop.hive.ql.exec.HashTableSinkOperator.closeOp(HashTableSinkOperator.java:415)
	at org.apache.hadoop.hive.ql.exec.Operator.close(Operator.java:607)
	at org.apache.hadoop.hive.ql.exec.Operator.close(Operator.java:616)
	at org.apache.hadoop.hive.ql.exec.MapredLocalTask.startForward(MapredLocalTask.java:324)
	at org.apache.hadoop.hive.ql.exec.MapredLocalTask.executeFromChildJVM(MapredLocalTask.java:276)
	at org.apache.hadoop.hive.ql.exec.ExecDriver.main(ExecDriver.java:677)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:616)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:197)
2013-02-13 09:06:34	Processing rows:	47	Hashtable size:	47	Memory usage:	72554224	rate:	0.072
2013-02-13 09:06:34	Dump the hashtable into file: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile11--.hashtable
2013-02-13 09:06:34	Upload 1 File to: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile11--.hashtable File size: 2908
2013-02-13 09:06:37	Processing rows:	200000	Hashtable size:	199999	Memory usage:	154624680	rate:	0.154
2013-02-13 09:06:38	Processing rows:	227358	Hashtable size:	227358	Memory usage:	165643352	rate:	0.165
2013-02-13 09:06:38	Dump the hashtable into file: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile41--.hashtable
2013-02-13 09:06:46	Upload 1 File to: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile41--.hashtable File size: 34351618
2013-02-13 09:06:47	Processing rows:	3	Hashtable size:	3	Memory usage:	74456192	rate:	0.074
2013-02-13 09:06:47	Dump the hashtable into file: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile51--.hashtable
2013-02-13 09:06:47	Upload 1 File to: file:/tmp/ubuntu/hive_2013-02-13_09-04-35_481_9216097600487630659/-local-10008/HashTable-Stage-19/MapJoin-mapfile51--.hashtable File size: 457
2013-02-13 09:06:47	End of local task; Time Taken: 119.326 sec.
Execution completed successfully
Mapred Local Task Succeeded . Convert the Join into MapJoin
Mapred Local Task Succeeded . Convert the Join into MapJoin

{noformat}, [~amareshwari], do you mind putting the complete testcase ? Will save me some time to try to reproduce the problem.
Can you include the configs related to this ?, Was able to reproduce it with simple tables as well. Attaching the .q file and data files in the patch., Though this one looks different HIVE-3996 may be related., The following slightly simpler query also fails:

select * from fact 
 Left outer join dim1 on  fact.d1= dim1.f1
 Left outer Join dim3 on  fact.d2= dim3.f5
 Left outer Join dim4 on  dim3.f6= dim4.f7
 Left outer join dim5 on  dim4.f8= dim5.f9
 Left outer Join dim6 on  dim3.f6= dim6.f11;

The basic problem is that MapJoinMetaData is a static - it should be per HashTableSink operator.
This is a existing problem, and as such has nothing to do with the previous cleanup. 
I will try to fix this., [~amareshwari], this is a existing bug. Do you really think we should fix this now ?
I mean, it is a pretty big and fundamental change.

In the new patch (join_sta2.q) - I have verified a fact table joined independently with 7 different dimensions.
, bq.  this is a existing bug. Do you really think we should fix this now ? I mean, it is a pretty big and fundamental change.

I would say this should be fixed. Because earlier we are able to run the same multi join query using 2 MR jobs with mapjoin hint passed in nested structure for each join as described in HIVE-3652. Now there is no way to do mapjoin for this multiway join, as the same query fails with this error, after changes to HIVE-3784. 
It becomes more trouble because there are no more mapjoin hints and will have to explicitly turn off autojoin for such queries.
, I agree from your point of view. Do you think you would be able to help on this ?
Basically, MapJoinMetaData needs to be maintained per HashTableSink/Mapjoin, instead of the global., bq. I agree from your point of view. Do you think you would be able to help on this ?

Sure. Will give a try., Thanks, Here is a patch which fixes the issue, with testcase added., Phabricator request - https://reviews.facebook.net/D8913, comments, Updated the phabricator entry with comments incorporated. 

Now, AbstractMapJoinKey.readExternal uses MapJoinOperator's static variable, writeExternal uses HashTableSinkOperator's static variable, [~namitjain], Can you please look at the latest patch on phabricator ?, +1

Missed this -- running tests, Can you refresh ?
phabricator diff is not applying cleanly.
Can you also load the latest patch ?, After Updating the patch to trunk, the test fails with NPE again. Will see whats the cause and update., Sorry, took some time for me to get back to this.

Updated the patch to trunk. , [~namit]Can you look at the latest patch on phabricator?

I'm hoping this can get into hive 0.11 branch., will do, +1, [~amareshwari], can you load the latest patch (as an attachment) ?, Attaching the latest patch., Committed. Thanks Amareshwari, Integrated in Hive-trunk-hadoop2 #172 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/172/])
    HIVE-4018 MapJoin failing with Distributed Cache error
(Amareshwari Sriramadasu via Namit Jain) (Revision 1471008)

     Result = FAILURE
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1471008
Files : 
* /hive/trunk/data/files/dim-data.txt
* /hive/trunk/data/files/fact-data.txt
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/HashTableSinkOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinMetaData.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/MapJoinDoubleKeys.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/MapJoinObjectKey.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/MapJoinObjectValue.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/MapJoinSingleKey.java
* /hive/trunk/ql/src/test/queries/clientpositive/join_star.q
* /hive/trunk/ql/src/test/results/clientpositive/join_star.q.out
, Integrated in Hive-trunk-h0.21 #2076 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2076/])
    HIVE-4018 MapJoin failing with Distributed Cache error
(Amareshwari Sriramadasu via Namit Jain) (Revision 1471008)

     Result = FAILURE
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1471008
Files : 
* /hive/trunk/data/files/dim-data.txt
* /hive/trunk/data/files/fact-data.txt
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/HashTableSinkOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinMetaData.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/MapJoinDoubleKeys.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/MapJoinObjectKey.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/MapJoinObjectValue.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/persistence/MapJoinSingleKey.java
* /hive/trunk/ql/src/test/queries/clientpositive/join_star.q
* /hive/trunk/ql/src/test/results/clientpositive/join_star.q.out
]