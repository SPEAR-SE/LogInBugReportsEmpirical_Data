[

causes null pointer exception when the serde of the table tries to use the conf.
Mostly, we use MetadataColumnTypedSerde which does not use it - so things work fine.

But, in case of optimizations (no mapreduce job) - select * from context where partitioning column conditions only

context serde uses conf and dies
, +1

Accepting for now.

In general, it seems to be a bad idea to provide a jobconf to the serde. We are already passing a Properties object which is arbitrary key-value pairs. If there are parameters in the jobconf required by the serde, they should be extracted from the jobconf and then inserted into the Properties. This will make code flow much more easy to understand. Now, we are passing an opaque object (jobconf) with arbitrary key-value pairs which can be set anywhere in the code. Can you file another jira to remove jobconf from the SerDe interface?,     [junit] 08/12/08 11:27:39 INFO mapred.TaskRunner: Task 'attempt_local_0001_m_000000_0' done.
    [junit] 08/12/08 11:27:39 INFO thrift.TBinarySortableProtocol: Sort order is ""
    [junit] 08/12/08 11:27:39 INFO thrift.TBinarySortableProtocol: Sort order is ""
    [junit] 08/12/08 11:27:39 INFO mapred.Merger: Merging 1 sorted segments
    [junit] 08/12/08 11:27:39 INFO mapred.Merger: Down to the last merge-pass, with 1 segments left of total size: 24 bytes
    [junit] 08/12/08 11:27:39 INFO exec.GroupByOperator: Initializing Self
    [junit] 08/12/08 11:27:39 INFO exec.GroupByOperator: Initializing children:
    [junit] 08/12/08 11:27:39 INFO exec.SelectOperator: Initializing Self
    [junit] 08/12/08 11:27:39 INFO exec.SelectOperator: Initializing children:
    [junit] 08/12/08 11:27:39 INFO exec.FileSinkOperator: Initializing Self
    [junit] 08/12/08 11:27:39 INFO exec.SelectOperator: Initialization Done
    [junit] 08/12/08 11:27:39 INFO exec.GroupByOperator: Initialization Done
    [junit] 08/12/08 11:27:40 INFO mapred.TaskRunner: Task:attempt_local_0001_r_000000_0 is done. And is in the process of commiting
    [junit] 08/12/08 11:27:40 INFO mapred.LocalJobRunner: 
    [junit] 08/12/08 11:27:40 INFO mapred.TaskRunner: Task attempt_local_0001_r_000000_0 is allowed to commit now
    [junit] 08/12/08 11:27:40 INFO mapred.FileOutputCommitter: Saved output of task 'attempt_local_0001_r_000000_0' to file:/tmp/hive-njain1339773828
    [junit] 08/12/08 11:27:40 INFO mapred.LocalJobRunner: reduce > reduce
    [junit] 08/12/08 11:27:40 INFO mapred.TaskRunner: Task 'attempt_local_0001_r_000000_0' done.
    [junit] 08/12/08 11:27:40 INFO exec.ExecDriver:  map = 100%,  reduce =100%
    [junit] 08/12/08 11:27:40 INFO exec.ExecDriver: Ended Job = job_local_0001
    [junit] ------------- ---------------- ---------------

    [junit] Testcase: testExecute took 12.928 sec
    [junit] Testcase: testMetastore took 0.207 sec
    [junit] Testcase: testFetch took 8.076 sec
    [junit] Testcase: testDynamicSerde took 8.464 sec

BUILD SUCCESSFUL
Total time: 16 minutes 17 seconds


the tests passed successfully, Agree with Raghu on this.

The jobconf is a legacy thing from the first version of serde. It was not changed when migrated to serde2 mainly because we had too many other issues to deal with at that moment.

We should get rid of jobconf to make the serde interface cleaner.
, Committed revision 724517., HIVE-127. Fetch Task to pass the jobconf to SerDe. (Namit through zshao)]