[This is where the bug is :

Since we hit an overflow before data size is set to Log.MAX_VALUE, then when we add 1 to that it overflows and reducers ends up being 1

{code}
  public static int estimateReducers(long totalInputFileSize, long bytesPerReducer,
      int maxReducers, boolean powersOfTwo) {

    int reducers = (int) ((totalInputFileSize + bytesPerReducer - 1) / bytesPerReducer);
    reducers = Math.max(1, reducers);
    reducers = Math.min(maxReducers, reducers);
{code}, For the code below the query had the following inputs:
totalInputFileSize = 9223372036854775341
bytesPerReducer = 100000000

9223372036854775341 + 100000000 -> Overflow.
{code}
  public static int estimateReducers(long totalInputFileSize, long bytesPerReducer,
      int maxReducers, boolean powersOfTwo) {

    int reducers = (int) ((totalInputFileSize + bytesPerReducer - 1) / bytesPerReducer);
    reducers = Math.max(1, reducers);
    reducers = Math.min(maxReducers, reducers);
{code}

I recommend changing to 
{code}
    int reducers = (int) ((Math.max(totalInputFileSize,bytesPerReducer )) / bytesPerReducer);
{code}, [~sershe]
Patch attached handles the overflow in the physical planning but not why the overflow happens in the first place, [~sershe], The issue is related to ReduceSink's stats annotation rule. It does not rename the column statistics properly. The group by key column names gets overwritten with column stats of aggregate column since both of the have same suffix but different prefix (KEY, VALUE).. This is the reason for the overflow. I am still working on a fix. Will put up a patch shortly., I am adding handling for overflows, there seem to be many potential overflows with large number of values. Should I open separate JIRA for that?
As a side note overflow needs to be handled before operation, not after, because it can conceivably overflow into positive in case of multiplication, I am ok with doing it in separate JIRA. I just rebased my patch with Mostafa's changes in this JIRA. Adding again to it will be induce more conflicts., Added fix for overflow issue. Merged with changes from [~mmokhtar]'s patch. Tested the query on TPCDS 30000 scale and the stats looks good without overflow., some comments on RB, Addressed [~sershe]'s code review changes., +1, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12678637/HIVE-8671.4.patch

{color:red}ERROR:{color} -1 due to 14 failed/errored test(s), 6609 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udf_explode
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udtf_explode
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_union11
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_union14
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_union15
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_union17
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_union19
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_union21
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_union5
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_union7
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_optimize_nullscan
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_union5
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_union7
org.apache.hive.minikdc.TestJdbcWithMiniKdc.testNegativeTokenAuth
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1584/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1584/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1584/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 14 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12678637 - PreCommit-HIVE-TRUNK-Build, Fixes test failures., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12678665/HIVE-8671.5.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 6609 tests executed
*Failed tests:*
{noformat}
org.apache.hive.hcatalog.streaming.TestStreaming.testRemainingTransactions
org.apache.hive.minikdc.TestJdbcWithMiniKdc.testNegativeTokenAuth
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1594/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1594/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1594/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12678665 - PreCommit-HIVE-TRUNK-Build, [~hagleitn] Can we have this is 0.14?, +1 for 0.14, Patch committed to trunk and branch-0.14., This has been fixed in 0.14 release. Please open new jira if you see any issues.
]