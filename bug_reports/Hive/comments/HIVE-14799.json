[

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12831737/HIVE-14799.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 32 failed/errored test(s), 9307 tests executed
*Failed tests:*
{noformat}
161_TestHCatLoader - did not produce a TEST-*.xml file
162_TestHCatStorer - did not produce a TEST-*.xml file
163_UTBatch_hcatalog__hcatalog-pig-adapter_8_tests - did not produce a TEST-*.xml file
169_TestHCatMutableDynamicPartitioned - did not produce a TEST-*.xml file
170_TestHCatDynamicPartitioned - did not produce a TEST-*.xml file
171_TestHCatExternalDynamicPartitioned - did not produce a TEST-*.xml file
172_UTBatch_hcatalog__core_9_tests - did not produce a TEST-*.xml file
174_UTBatch_hcatalog__server-extensions_2_tests - did not produce a TEST-*.xml file
181_TestTxnCommands2WithSplitUpdate - did not produce a TEST-*.xml file
185_TestDbTxnManager2 - did not produce a TEST-*.xml file
196_UTBatch_ql_10_tests - did not produce a TEST-*.xml file
204_TestTxnCommands2WithSplitUpdateAndVectorization - did not produce a TEST-*.xml file
228_UTBatch_itests__hcatalog-unit_6_tests - did not produce a TEST-*.xml file
229_UTBatch_itests__hive-unit-hadoop2_5_tests - did not produce a TEST-*.xml file
243_UTBatch_itests__hive-unit_9_tests - did not produce a TEST-*.xml file
244_TestMetaStoreEventListener - did not produce a TEST-*.xml file
252_TestAuthorizationPreEventListener - did not produce a TEST-*.xml file
253_UTBatch_itests__hive-unit_9_tests - did not produce a TEST-*.xml file
254_TestAcidOnTezWithSplitUpdate - did not produce a TEST-*.xml file
255_TestAcidOnTez - did not produce a TEST-*.xml file
257_TestCompactor - did not produce a TEST-*.xml file
258_UTBatch_itests__hive-unit_9_tests - did not produce a TEST-*.xml file
266_TestHBaseNegativeCliDriver - did not produce a TEST-*.xml file
TestHBaseCliDriver-hbase_handler_snapshot.q-hbase_binary_map_queries_prefix.q-external_table_ppd.q-and-2-more - did not produce a TEST-*.xml file
TestHBaseCliDriver-hbase_joins.q-hbase_ppd_join.q-hbase_binary_map_queries.q-and-2-more - did not produce a TEST-*.xml file
TestHBaseCliDriver-hbase_ppd_key_range.q-hbase_binary_external_table_queries.q-hbase_pushdown.q-and-2-more - did not produce a TEST-*.xml file
TestHBaseCliDriver-hbase_queries.q-hbase_handler_bulk.q-hbase_viewjoins.q-and-2-more - did not produce a TEST-*.xml file
TestHBaseCliDriver-hbase_timestamp_format.q-hbase_custom_key2.q-hbasestats.q-and-2-more - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[acid_mapjoin]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ctas]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_join_part_col_char]
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarConstructorUnCaching
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1404/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1404/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-Build-1404/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 32 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12831737 - PreCommit-HIVE-Build, This patch is going to fix a couple of Driver issues related to the close request from a thread other than the one running the query (e.g. from SQLOperation cancel via Timeout or Ctrl-C):
1. Driver is not thread safe and usually supports only one thread at time since it has variables like ctx, plan which are not thread protected. But certain special use cases need access the Driver objects from multiply threads. For example, when a query runs in a background thread, driver.close is invoked in another thread by the query timeout (see HIVE-4924). The close process could nullify the shared variables like ctx which could cause NPE in the other query thread which is using them. This runtime exception is unpredictable and not well handled in the code. Some resources (e.g. locks, files) are left behind and not be cleaned because there are no more available = references to them.  In this patch, I use the waiting in the close which makes sure only one thread uses these variables and the resource cleaning happens after the query finished (or interrupted).
2. SQLOperation.cancel sends the interrupt signal to the background thread running the query (via backgroundHandle.cancel(true)) but it could not stop that process since there is no code to capture the signal in the process. In another word, current timeout code could not gracefully and promptly stop the query process, though it could eventually stop the process by killing the running tasks (e.g. MapRedTask) via driverContext.shutdown (see HIVE-5901). So in the patch,  I added a couple of checkpoints to intercept the interrupt signal either set by close method (a volatile variable) or thread.interrupt. They should be helpful to capture these signals earlier , though not intermediately.
[~vgumashta], [~sershe], [~ychena], you have done the related work before, could you review the patch to see if it makes sense? Thanks, the patch has been uploaded to https://reviews.apache.org/r/52559/ and requested for review., Hmm.. wouldn't the thread just get interrupted and die on the next waiting operation?
Overall I wonder if simple solution is possible where we merely ensure that one thread does the cleanup.
The states needed are "driver is responsible", "driver is not responsible", "driver should cleanup", "cleanup".
The first two are set by driver depending on whether it would handle interrupt from there on.
If the driver is responsible, the stopping thread can set (atomically) "should cleanup", interrupt the driver thread via system call and exit (does it have to wait?)
If the driver is not, the stopping thread can set "cleanup" atomically and do it.
The driver would have the interrupt and maybe the periodic checks to see when it should clean up. Again it would atomically set state to cleanup and clean up.
That way only one thread can clean up, and the stopping thread can only do when driver is AWOL.
, [~sershe] Thanks for looking into the patch, please see the following comments and hope they are helpful:
1. The query thread could stop at some points like wait, sleep, and throws InterruptedException in response to the interrupt signal, but the only place that so far has such waiting is in DriverContext.pollFinished(), which is almost at the end of query process. We need some checkpoints which can stop the process sooner, especially before some expensive operations.
2. The driver encapsulated in SQLOperation is kind of stateful and keep its referenced resources in instance variables (ctx, plan, resStream, locks, contextDriver etc). The compile/run releases resources only related itself such as plan, driverContext after the query is processed, but most other resources (ctx, resStream, fetchTask, locks etc) are released by explicitly calling close/destroy in a separate step. The patch does not change the cleaning responsibility of these methods but only coordinates the order of the cleaning. 
The whole cancel process is quite straightforward:
a) the close process flags to query process and requests for a stop 
b) the query process (run/compile) aborts the checkpoint, rollback and cleans its own used resource (like in a normal case), then signals to the query process to continue
c) close process continues to clean all resources which it should do in a normal close operation.
I add the DriverState to facilitate the order coordination. Of course, the way you pointed out is doable, but it looks to me a little complex since we should determine cleaning responsibility and add that to query process (run/compile) which under normal situation it is not responsible for.
3. As for your comments "interrupt the driver thread via system call and exit (does it have to wait?)": yes, the running query should stop gracefully by rolling back, cleaning its used resources, returning error status., Attach a new patch which:
1. fix the issue causing the test failures in precommit build
2. check the finished thread more frequently (change the sleep time from 1000 ms to 100 ms)
3. remove the empty spaces, oops, I did not notice there were also some comments in RB. I am going to address them., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12831830/HIVE-14799.1.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 5 failed/errored test(s), 10657 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[acid_mapjoin]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ctas]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_join_part_col_char]
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarConstructorUnCaching
org.apache.hive.spark.client.TestSparkClient.testJobSubmission
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1408/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1408/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-Build-1408/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 5 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12831830 - PreCommit-HIVE-Build, Revised the patch based on [~sershe]'s review., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12831889/HIVE-14799.2.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 10656 tests executed
*Failed tests:*
{noformat}
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarConstructorUnCaching
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1415/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1415/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-Build-1415/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12831889 - PreCommit-HIVE-Build, New patch mostly looks good. I was suggesting we move to the model where only one thread from the driver manages all the resources except before it's started, but I guess the current model also works.
There's a typo in description ("until")
+1
[~ashutoshc] do you also want to take a look?, Revised the patch and use the model [~sershe] suggestged. The close operation will defer the resource releases to the query process if the driver is running (compiling/executing) the query. The resources get released once the query is finished (or interrupted). Otherwise the close releases the driver resource by itself. So there will be no waiting for the close (or cancel) operation. [~sershe] Could you review it? I have also uploaded the new patch to RB  https://reviews.apache.org/r/52559/, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12832379/HIVE-14799.3.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 10663 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_2]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_3]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_5]
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarConstructorUnCaching
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1445/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1445/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-Build-1445/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12832379 - PreCommit-HIVE-Build, The tests failed in my local env even without the patch, so I wonder if the patch is related. Reattach for another run, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12832386/HIVE-14799.4.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 5 failed/errored test(s), 10663 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_2]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_3]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_5]
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarConstructorUnCaching
org.apache.hive.spark.client.TestSparkClient.testJobSubmission
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1448/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1448/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-Build-1448/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 5 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12832386 - PreCommit-HIVE-Build, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12832386/HIVE-14799.4.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 10663 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_2]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_3]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_5]
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarConstructorUnCaching
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1449/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1449/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-Build-1449/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12832386 - PreCommit-HIVE-Build, Revised the patch to fix the test failures., Reattach patch to kick off the precommit build., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12832731/HIVE-14799.5.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 10664 tests executed
*Failed tests:*
{noformat}
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarConstructorUnCaching
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1485/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1485/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-Build-1485/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12832731 - PreCommit-HIVE-Build, The failed test is not related. [~sershe] Could you review again the patch using the new model? I have also uploaded the patch to https://reviews.apache.org/r/52559/ for review. Thanks., Left some comments on RB, address the comments from last review. [~sershe], could you take a look? Thanks, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12832818/HIVE-14799.6.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 10636 tests executed
*Failed tests:*
{noformat}
org.apache.hive.service.cli.TestEmbeddedThriftBinaryCLIService.testTaskStatus
org.apache.hive.spark.client.TestSparkClient.testJobSubmission
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1504/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1504/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-Build-1504/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12832818 - PreCommit-HIVE-Build, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12832977/HIVE-14799.6.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 10560 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[reloadJar]
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[join30]
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[stats18]
org.apache.hive.spark.client.TestSparkClient.testJobSubmission
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1520/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1520/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-Build-1520/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12832977 - PreCommit-HIVE-Build, The failed tests should not be related to this patch and I am not able to reproduce it in my local env. [~sershe] Could you review the revised patch based on your last review comments? Thanks, revised the patch to address an issue raised by [~ychena]. [~sershe] [~ychena], could you review it., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12833239/HIVE-14799.7.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 10 failed/errored test(s), 10534 tests executed
*Failed tests:*
{noformat}
TestMiniLlapLocalCliDriver - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[acid_globallimit]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[order_null]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[reloadJar]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[union_fast_stats]
org.apache.hadoop.hive.metastore.TestMetaStoreMetrics.testConnections
org.apache.hive.beeline.TestBeelineArgParsing.testAddLocalJarWithoutAddDriverClazz[0]
org.apache.hive.beeline.TestBeelineArgParsing.testAddLocalJar[0]
org.apache.hive.beeline.TestBeelineArgParsing.testAddLocalJar[1]
org.apache.hive.jdbc.authorization.TestJdbcWithSQLAuthorization.testBlackListedUdfUsage
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1556/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1556/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-1556/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 10 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12833239 - PreCommit-HIVE-Build, The failed tests are aged or not related., LGTM +1, Thanks [~ychena]. [~sershe] Please feel free to let me know if you see any further problems, otherwise I am going to commit it tomorrow. Thanks., +1, [~ctang.ma] since you've committed this to master, please update the status and fix version.  Thanks.

Commit 1901e3a6ab97c150905c04c591b33b2c640e4b87., [~leftylev] Thanks for that. I am working on the backport of the patch to 2.1.1, and will update the status/fix version when the JIRA is resolved., Oops, sorry about the nudge then., Attach the patch for 2.1., Committed to 2.2.0 and 2.1.1. Thank [~sershe] and [~ychena] for review.]