[[~ashutoshc] can you review? https://reviews.apache.org/r/46048/, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12798100/HIVE-13194.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 9961 tests executed
*Failed tests:*
{noformat}
TestJdbcWithMiniHS2 - did not produce a TEST-*.xml file
TestMiniTezCliDriver-tez_smb_empty.q-mapjoin_decimal.q-transform_ppr2.q-and-12-more - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver_index_bitmap3
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7582/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7582/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-7582/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12798100 - PreCommit-HIVE-TRUNK-Build, [~sershe] The HMSClient inside Hive object right now is thread-safe after HIVE-10956. So what I think is, when the query starts to compile, we create a Hive object for it and then it will not change during its life time. Seems we can remove the threadlocal for Hive object. Do you see any drawback on that? I feel we can simplify the logic on this.

Can you elaborate what are we trying to do in this patch?, See HIVE-13002. There's at least one place where HMS client is not threadsafe. I wanted to do a local fix there but [~ashutoshc] had concerns with it.
We saw the issue with the same callstack even after HIVE-13002, so I am removing the last place where that object is shared outside of compile's threadlocals (compile is always single threaded).
If we are sure that it is now thread-safe, perhaps threadlocal should be removed. Although I'm not sure about perf implications on the synchronized client shared between threads

Why don't we have a pool of Hive objects? , Yeah. I also noticed that metaCallTimeMap is not thread safe from one test case. We should make it synchronized.

I also thought of a pool of Hive objects, but the reason that we can't use that probably is, different connections may have different hiveconf and then require different connections. , Committed to all branches, Er, no I didn't, I meant to resolve something else as fixed. This is won't fix. I'll create a separate JIRA for making the map threadsafe]