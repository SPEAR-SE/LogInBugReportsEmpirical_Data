[Clusters with more than one HS2 instances are going to be common, with the new rolling upgrade and high availability features in HS2.
This will not have the desired impact in such cases.
, [~thejas] it will in a limited fashion, right? If you can limit each hs2 to have n concurrent llap queries you can still effectively protect llap from thrashing. It's not perfect but it's a start. Should we just create a follow up for the more involved case of multiple servers?, [~vikram.dixit]: 
   * I think you should replace the BlockingArray<Boolean> with a counting semaphore. 
   * The default for this value seems to be 1 - I think it should be unrestricted by default.
   * Since there's only one call to getLlapMode to TezWork you could just make this call cycle through basework instead of adding another bool to the class. If you really prefer the bool, I think TezWork should support the methods setLlapMode/clearLlap mode w/o params (since it's not a straight forward yay or nay)., I agree that even if there are multiple HS2 instances, this can still be used to limit the degree of parallelism. I think we should update the config description that the upper limit is actually that multiplied by number of HS2 instances.
, Changed to use a semaphore. I do not see a specific need to grow the size beyond 1 in the default case because:

1. If it is the cli mode, the user basically never lets go of the session and 1 is all they need.
2. If it is hs2, the user needs to configure this correctly anyways.

I can change it to a large number but don't really see a good reason for it., Change LGTM, but I'm not sure I agree with the assessment of default == 1. I don't think you need to configure a large number. Just add a clause for num > 0 to the if statement for both acquire and release. For CLI 1 is enough, that's true. But unlimited doesn't hurt either.

For hs2, user should configure it - agreed. But if you're just giving llap a spin, we should just let queries in. I think we would give a very bad experience out of the box if we left this at 1. Would look very slow to most ppl. If they just have a number of ppl kicking the tires, unlimited is probably fine. If you roll into prod you will probably restrict it based on cluster capacity., Addressed comments., i think you need the same check for both semaphore acquire as well as release. Otherwise you'll end up releasing it w/o having ever acquired., +1, Committed to branch. Thanks Gunther for the review., Doc note:  This adds configuration parameter *hive.server2.llap.concurrent.queries* so I'm linking to HIVE-9850 (documentation for llap).  When the llap branch merges to trunk, this parameter will need to be documented in the HiveServer2 section of Configuration Properties:

* [Configuration Properties -- HiveServer2 | https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-HiveServer2]]