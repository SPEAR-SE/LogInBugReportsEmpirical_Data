[Hmm... why cannot there be multiple stats tasks in case of multiple tables, multi-insert, etc.?, this is only for the multi-insert which represents a MERGE statement, in which case multiple insert branches are writing to the same table/partition.
There is no point computing stats until the whole statement is finished, maybe something like HiveConf.HIVE_MULTI_INSERT_MOVE_TASKS_SHARE_DEPENDENCIES can work here, Perhaps this needs a different approach altogether.
Merge only works on full ACID tables which use MVCC.
Stats data, on the other hand, is not versioned. 
Even if we fix multiple StatsTask issue in Merge, it's perfectly legal in Hive to have to concurrent inserts into an Acid table so you could still end up with stats data for the partition which is not accurate (assuming parallel stats computations simply overwrite each other, rather than corrupt some data structures).

The later is a general issue with Acid and stats (and may be for MicroManaged tables as well).

Perhaps the right answer is to only compute stats for Acid tables at compactions (or even add another process to trigger stats computation based on number of writes to the partition).  As long as stats are used to guide the CBO, not provide exact answers to queries, they would still be approximately accurate and thus useful.
cc [~alangates], [~pxiong]
, This prop causes a new node (stage) to be inserted into the plan that acts like a sync point (CyclicBarrier).  It doesn't change the number of MoveTask noes., I talked to [~ashutoshc] - he doesn't think concurrent StatsTasks will corrupt anything.  So the issue here mostly about efficiency.  Providing answers to queries based on stats is turned off for Acid tables.]