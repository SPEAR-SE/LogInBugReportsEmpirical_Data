[https://reviews.facebook.net/D6063, I tracked the problem down to two causes.

1) In the genUnionPlan, when preparing the ColumnInfo objects to be used to generate the RowResolver for the Union operator, it actually changes the ColumnInfo objects of the left operator's RowResolver to have the "common class" as its type. This would cause it to get serialized wrong in the intermediate FileSink operator between map reduce jobs (as was the case when the left subquery of the union involved a join).

2) The common class for a column of the Union operator would get determined once at compile time and again later at run time using different functions which could return different classes (for instance when the type on one side was a double and on the other it was a string). This caused the union operator to return objects with a different type from what the RowResolver specified causing serialization errors/failures.

To fix 1) I added the ability to clone a ColumnInfo, and in the SemanticAnalyzer the left operator's ColumnInfo objects are now cloned before being modified.

To fix 2) I added Select operators between the input operators and the union operator. These select operators cast the input columns to the types determined at compile time if they do not match, otherwise they simply forward the value. Now the conversion in the union operator is only needed to alter the the type of the ObjectInspector, not the type of the column., Updated my checkout, and uploaded a new patch., minor comments on phabricator, Updated per comments., +1, Committed. Thanks Kevin, Integrated in Hive-trunk-h0.21 #1748 (See [https://builds.apache.org/job/Hive-trunk-h0.21/1748/])
    HIVE-3544 union involving double column with a map join subquery will fail or give wrong results
(Kevin Wilfong via namit) (Revision 1400260)

     Result = FAILURE
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1400260
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/ColumnInfo.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/SelectOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ColumnPrunerProcCtx.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ColumnPrunerProcFactory.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/plan/SelectDesc.java
* /hive/trunk/ql/src/test/queries/clientpositive/skewjoinopt11.q
* /hive/trunk/ql/src/test/queries/clientpositive/union32.q
* /hive/trunk/ql/src/test/results/clientpositive/groupby_sort_1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/groupby_sort_skew_1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ql_rewrite_gbtoidx.q.out
* /hive/trunk/ql/src/test/results/clientpositive/skewjoinopt11.q.out
* /hive/trunk/ql/src/test/results/clientpositive/type_widening.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union32.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/union.q.xml
, Integrated in Hive-trunk-hadoop2 #54 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/54/])
    HIVE-3544 union involving double column with a map join subquery will fail or give wrong results
(Kevin Wilfong via namit) (Revision 1400260)

     Result = ABORTED
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1400260
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/ColumnInfo.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/SelectOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ColumnPrunerProcCtx.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ColumnPrunerProcFactory.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/plan/SelectDesc.java
* /hive/trunk/ql/src/test/queries/clientpositive/skewjoinopt11.q
* /hive/trunk/ql/src/test/queries/clientpositive/union32.q
* /hive/trunk/ql/src/test/results/clientpositive/groupby_sort_1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/groupby_sort_skew_1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ql_rewrite_gbtoidx.q.out
* /hive/trunk/ql/src/test/results/clientpositive/skewjoinopt11.q.out
* /hive/trunk/ql/src/test/results/clientpositive/type_widening.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union32.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/union.q.xml
, This issue is fixed and released as part of 0.10.0 release. If you find an issue which seems to be related to this one, please create a new jira and link this one with new jira.]