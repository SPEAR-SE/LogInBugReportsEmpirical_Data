[Hi [~venkatakarthik],
I am already tracking this problem on HIVE-16559.  The solution is not tested yet, but maybe you should take a look/wait for the precommit tests.
I believe the patch (the third version not the first two) would solve your problem too., As a workaround are you fine with cascading your changes to the partitions?
So using  ALTER TABLE test_parquet REPLACE COLUMNS (age int,name string, dept string, salary string) *CASCADE*;
, Yes, I had tried with cascade option, it looks like working ... If we have thousands of partitions is cascade a better option ?
[~zsombor.klara], [~venkatakarthik], well cascade is guaranteed to work, which is definitely a substantial benefit :). The problem is that we have column information on both the table and the partition level. As long as no columns are dropped or reordered just added to the table it will work fine, but if you replace columns, or just drop from the table but not the partition then you may end up with the exception like you got in the description.
I am still looking into a possible solution but it is a bit tricky without significant performance overhead, so I may be forced to leave it like this.
FYI there is a HiveConf property introduced in HIVE-4409 that would check column incompatibility during an alter statement. Setting this to true should at least prevent you from ending up with a table you can't select from.]