[Paul, can you reproduce it and attach a jstack here?
, Output from test log: 

{code}
    [junit] diff -a -I file: -I /tmp/ -I invalidscheme: -I lastUpdateTime -I lastAccessTime -\
I owner -I transient_lastDdlTime -I java.lang.RuntimeException -I at org -I at sun -I at java\
 -I at junit -I Caused by: -I [.][.][.] [0-9]* more /data/users/pyang/task2/trunk/VENDOR.hive\
/trunk/build/hbase-handler/test/logs/hbase-handler/hbase_joins.q.out /data/users/pyang/task2/\
trunk/VENDOR.hive/trunk/hbase-handler/src/test/results/hbase_joins.q.out
    [junit] Done query: hbase_joins.q
    [junit] Running org.apache.hadoop.hive.cli.TestHBaseCliDriver
    [junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0 sec
    [junit] Test org.apache.hadoop.hive.cli.TestHBaseCliDriver FAILED (timeout)
    [junit] Running org.apache.hadoop.hive.hbase.TestHBaseSerDe
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 0.365 sec
    [junit] Running org.apache.hadoop.hive.hbase.TestLazyHBaseObject
    [junit] Tests run: 4, Failures: 0, Errors: 0, Time elapsed: 0.393 sec

BUILD FAILED
/data/users/pyang/task2/trunk/VENDOR.hive/trunk/build.xml:164: The following error occurred w\
hile executing this line:
/data/users/pyang/task2/trunk/VENDOR.hive/trunk/build.xml:103: The following error occurred w\
hile executing this line:
/data/users/pyang/task2/trunk/VENDOR.hive/trunk/build-common.xml:427: Tests failed!

Total time: 351 minutes 19 seconds

{code}

, It's hanging on startup, after it fails to connect to the new master, and then tries to shut it down.

Can you see if you have any old Java processes lying around on the server, and if so, kill -9 them?

A few times during development, I ran into such situations where an old failed process was hanging around tying up the port.

I'll try to find a way to 

(a) make it fail fast in such a case

(b) randomize the port number used

(c) provide some find/cleanup utilities for old processes; not sure if we would want to automate this
, It hanged for me again - can we disable the test while we are figuring out what to do ?, Will do., I also tried using a fresh dev server running CentOS. Fresh checkout from the open source, but I'm still getting the hanging behavior. + no other java processes. I'lll attach jstack's from this run as well., Created HIVE-1279 for disablement; let's keep HIVE-1275 open for permanent resolution.
, I see...it has to do with running two different HBase .q testcases in the same process, due to the shutdown/restart sequence.  I'm not sure why that passed for me before (and for Namit when running the pre-commit tests); those passes must have been a timing-based fluke.

I'll see if I can arrange for a single minicluster fixture to be used across multiple testcases.
, This fixes the problem and re-enables the tests.

I used JUnit3's TestSetup extension for creating a fixture which spans testcases, allowing us to avoid bouncing HBase+Zookeeper in between each testcase.
, +1

will commit if the tests pass, Committed. Thanks John]