[I'm wondering if use of ThriftCLIService#sessionCount is redundant.

Shouldn't we be using SessionManager#getOpenSessionCount() count instead ?

ThriftBinaryCLIService#deleteContext is already closing the session which will 
remove the value from SessionManager#handleToSession 

So, it seems to me that ThriftCLIService#sessionCount is not telling us anything
that SessionManager#getOpenSessionCount() isn't already., [~mohitsabharwal] Good point. It does seem redundant in terms of a count. One seems a bit more explicit than the other. The sessionCount currently is just being used for this log message. We can just as easily retrieve it from the SessionManager.

Also I think there is some value in publishing this metric to the metrics system, just like open_connections. What do you think? Thanks, Yeah, good to get rid of sessionCount

I think the current code is making no distinction between a connection & a session.
MetricsConstant.OPEN_CONNECTIONS is getting increment/decremented
at connection level. But we are also closing the session when the connection
is detected to be closed/dropped (in deleteContext). Which implies that connection and session
are the same thing from p.o.v. of the metrics, which seems fine.

Separately, looks like MetricsConstant.OPEN_CONNECTIONS is used in both
HS2 and HMS, which means this count includes both HS2 and HMS connections when
HMS is embedded in HS2. [~szehon] looks like we need to have a separate metric for HMS connections ?, Hm.. does the HMS metric get above 0 in embedded mode?  I don't remember, but I thought that it does not, and thus one number would suffice (it means open connection to that process from the outside).  Yea I think changing is an option too, but it would be backward incompatibile, so if not wrong in that scenario (like doubly-incremented) than maybe we dont need to?

About this patch, looks like there is a flag that controls whether we should close the session?  Should the decrement be based on that flag?, [~mohitsabharwal] You are right, they appear to be treated the same. I thought the OPEN_CONNECTIONS metric was more inline with the log record that indicated number of connections to the HMS
{{INFO  hive.metastore: [HiveServer2-Handler-Pool: Thread-34]: Opened a connection to metastore, current connections: 2}}

As for the other concern about the metric being doubly incremented, my understanding is the same as [~szehon]'s. I thought we do not use thrift between HS2 and HMS in embedded mode. If true, would the HMS side count ever be incremented beyond 0?

[~szehon] I agree, I dont know how I missed that. The decrement should have been conditionalized. But since we propose to make a change to use the getOpenSessionCount(), this should already be accounted for.

To summarize the actions
1) Eliminate the sessionCount counter and use getOpenSessionCount() instead. Test and upload a new patch.
2) Test metric values for OPEN_CONNECTIONS when HMS is running in embedded mode within HS2 process.

Sound good? , [~mohitsabharwal] Using the getOpenSessionCount() to record the open sessions is very timing-sensitive and causes non-linear/inconsistent results. There are different actions been perfomed between when this message gets logged and the session handle is removed from the map. For example, (when this message is printed before the closeSession() is called) I have a single beeline instance that creates 5 sessions and killing this instance produces the following.
{code}
2016-07-21T11:20:46,976  INFO [HiveServer2-Handler-Pool: Thread-40] thrift.ThriftCLIService: Session disconnected without closing properly. 
2016-07-21T11:20:46,976  INFO [HiveServer2-Handler-Pool: Thread-60] thrift.ThriftCLIService: Session disconnected without closing properly. 
2016-07-21T11:20:46,976  INFO [HiveServer2-Handler-Pool: Thread-55] thrift.ThriftCLIService: Session disconnected without closing properly. 
2016-07-21T11:20:46,976  INFO [HiveServer2-Handler-Pool: Thread-45] thrift.ThriftCLIService: Session disconnected without closing properly. 
2016-07-21T11:20:46,976  INFO [HiveServer2-Handler-Pool: Thread-50] thrift.ThriftCLIService: Session disconnected without closing properly. 
2016-07-21T11:20:46,977  INFO [HiveServer2-Handler-Pool: Thread-55] thrift.ThriftCLIService: Session closed: SessionHandle [a83ef567-c283-4630-8608-fa2ce122f105], current sessions:5
2016-07-21T11:20:46,977  INFO [HiveServer2-Handler-Pool: Thread-50] thrift.ThriftCLIService: Session closed: SessionHandle [5732986a-5a39-48e7-8ff0-a0144ba3f1e5], current sessions:5
2016-07-21T11:20:46,977  INFO [HiveServer2-Handler-Pool: Thread-60] thrift.ThriftCLIService: Session closed: SessionHandle [10de27d4-eb46-40b5-b960-8a5bb42406b1], current sessions:5
2016-07-21T11:20:46,977  INFO [HiveServer2-Handler-Pool: Thread-45] thrift.ThriftCLIService: Session closed: SessionHandle [3c5b1f31-20e5-4587-8501-c0291b230ff6], current sessions:5
2016-07-21T11:20:46,977  INFO [HiveServer2-Handler-Pool: Thread-40] thrift.ThriftCLIService: Session closed: SessionHandle [60a10fc0-1882-49a7-b046-eff2fd66c88b], current sessions:3
{code}

I have seen other variations of this output. The output swings to the other extreme when I have the log statement after the closeSession() call. The count is near zero most times.

The end result should be accurate though. If I create another session at the end, it will log the correct number of sessions. Thoughts?  , Sorry I missed the whole discussion above and was just looking at the attached patch :).  sure that sounds good to me, i'll try to take a look at new patch once its in., In-corporating the feedback from the review. 
1) I removed the counter that tracks the session count. Instead am using the SessionManager.getOpenSessionCount()
2) The log record is now logged from the SessionManager.openSession() and closeSession() instead. This ensures more consistent counts in the logs., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12819730/HIVE-14296.2.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 8 failed/errored test(s), 10350 tests executed
*Failed tests:*
{noformat}
TestMsgBusConnection - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_acid_globallimit
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_list_bucket_dml_13
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_subquery_multiinsert
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_acid_globallimit
org.apache.hadoop.hive.llap.daemon.impl.TestLlapTokenChecker.testCheckPermissions
org.apache.hadoop.hive.llap.daemon.impl.TestLlapTokenChecker.testGetToken
org.apache.hadoop.hive.metastore.TestMetaStoreMetrics.testConnections
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/624/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/624/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-MASTER-Build-624/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 8 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12819730 - PreCommit-HIVE-MASTER-Build, The test failures are not related to the fix. So +1 for me. , +1 from my side, +1 as well, Thanks [~szehon] and [~mohitsabharwal]. Could one of you please commit when you get a chance? Thanks in advance, Pushed to master. Thanks Naveen for the contribution and Szehon and Mohit for reviewing., Thank you [~aihuaxu] [~mohitsabharwal] and [~szehon], Sorry missed this email :), thanks Aihua for pushing it., 
No worries. Thank you, Added a patch for branch 2.1]