[The patch. There's no possibility of upgrade, Oracle only allows this option on create, [~alangates] [~ekoifman] can  you take a look, Also, it appears that these tables are not created anywhere else in the scripts. Is that correct? I wonder how it works for later Hive versions., I see 4 .oracle.sql that have create table DDL (for TXN_COMPONENTS for example), Which ones? Actually now that I look there are 4 but they are for 2 versions. Should I update main schema, txn-schema, or both? :)
What is executed e.g. for 1.2? 
{noformat}
$ find . -name  '*oracle.sql' | grep -v target |xargs grep -i HIVE_LOCK
./metastore/scripts/upgrade/oracle/019-HIVE-7118.oracle.sql:ALTER TABLE HIVE_LOCKS MODIFY (
./metastore/scripts/upgrade/oracle/hive-schema-0.13.0.oracle.sql:CREATE TABLE HIVE_LOCKS (
./metastore/scripts/upgrade/oracle/hive-schema-0.13.0.oracle.sql:CREATE INDEX HL_TXNID_INDEX ON HIVE_LOCKS (HL_TXNID);
./metastore/scripts/upgrade/oracle/hive-schema-0.14.0.oracle.sql:CREATE TABLE HIVE_LOCKS (
./metastore/scripts/upgrade/oracle/hive-schema-0.14.0.oracle.sql:CREATE INDEX HL_TXNID_INDEX ON HIVE_LOCKS (HL_TXNID);
./metastore/scripts/upgrade/oracle/hive-txn-schema-0.13.0.oracle.sql:CREATE TABLE HIVE_LOCKS (
./metastore/scripts/upgrade/oracle/hive-txn-schema-0.13.0.oracle.sql:CREATE INDEX HL_TXNID_INDEX ON HIVE_LOCKS (HL_TXNID);
./metastore/scripts/upgrade/oracle/hive-txn-schema-0.14.0.oracle.sql:CREATE TABLE HIVE_LOCKS (
./metastore/scripts/upgrade/oracle/hive-txn-schema-0.14.0.oracle.sql:CREATE INDEX HL_TXNID_INDEX ON HIVE_LOCKS (HL_TXNID);
{noformat}, Updated to change all 4 files. , Interesting...
{noformat}
$ f *.sql | grep -v target | grep schema |xargs grep -i HIVE_LOCK | sed -E "s/^([^:]+).*$/\1/" | uniq
./metastore/scripts/upgrade/derby/hive-schema-0.13.0.derby.sql
./metastore/scripts/upgrade/derby/hive-schema-0.14.0.derby.sql
./metastore/scripts/upgrade/derby/hive-txn-schema-0.13.0.derby.sql
./metastore/scripts/upgrade/derby/hive-txn-schema-0.14.0.derby.sql
./metastore/scripts/upgrade/mssql/hive-schema-0.13.0.mssql.sql
./metastore/scripts/upgrade/mssql/hive-schema-0.14.0.mssql.sql
./metastore/scripts/upgrade/mssql/hive-schema-1.1.0.mssql.sql
./metastore/scripts/upgrade/mssql/hive-schema-1.2.0.mssql.sql
./metastore/scripts/upgrade/mssql/hive-schema-1.3.0.mssql.sql
./metastore/scripts/upgrade/mssql/hive-schema-2.0.0.mssql.sql
./metastore/scripts/upgrade/mssql/hive-txn-schema-0.13.0.mssql.sql
./metastore/scripts/upgrade/mssql/hive-txn-schema-0.14.0.mssql.sql
./metastore/scripts/upgrade/mysql/hive-schema-0.13.0.mysql.sql
./metastore/scripts/upgrade/mysql/hive-schema-0.14.0.mysql.sql
./metastore/scripts/upgrade/mysql/hive-txn-schema-0.13.0.mysql.sql
./metastore/scripts/upgrade/mysql/hive-txn-schema-0.14.0.mysql.sql
./metastore/scripts/upgrade/oracle/hive-schema-0.13.0.oracle.sql
./metastore/scripts/upgrade/oracle/hive-schema-0.14.0.oracle.sql
./metastore/scripts/upgrade/oracle/hive-txn-schema-0.13.0.oracle.sql
./metastore/scripts/upgrade/oracle/hive-txn-schema-0.14.0.oracle.sql
./metastore/scripts/upgrade/postgres/hive-schema-0.13.0.postgres.sql
./metastore/scripts/upgrade/postgres/hive-schema-0.14.0.postgres.sql
./metastore/scripts/upgrade/postgres/hive-txn-schema-0.13.0.postgres.sql
./metastore/scripts/upgrade/postgres/hive-txn-schema-0.14.0.postgres.sql
{noformat}
Should there be a separate JIRA for this? the tables are missing from all the schemas other than mssql., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12756135/HIVE-11831.01.patch

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 9445 tests executed
*Failed tests:*
{noformat}
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation
org.apache.hive.hcatalog.streaming.TestStreaming.testEndpointConnection
org.apache.hive.hcatalog.streaming.TestStreaming.testTimeOutReaper
org.apache.hive.hcatalog.streaming.TestStreaming.testTransactionBatchCommit_Json
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5295/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5295/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5295/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12756135 - PreCommit-HIVE-TRUNK-Build, [~alangates] [~ekoifman] [~vgumashta] can you take a look at the patch itself?, +1, patch itself looks good.

When you say no possibility of upgrade, do we need to build a recommended procedure for people to migrate their data so they can fix the deadlocks if they are already using this feature in Oracle?  Something like:
# pause the world
# create temp table
# move contents of existing table to temp table
# drop existing table
# create new table with ROWDEPENDENCIES
# move data back from temp table, Is there a place where to put this? I can add to JIRA release notes, Release notes makes sense.  [~leftylev], anywhere else we should put the upgrade notes?, Committed to master., I suggest a small section in the Transactions wikidoc, with a new Limitations bullet pointing to the section.

* [Hive Transactions | https://cwiki.apache.org/confluence/display/Hive/Hive+Transactions]
* [Hive Transactions -- Limitations | https://cwiki.apache.org/confluence/display/Hive/Hive+Transactions#HiveTransactions-Limitations], committed to branch-1 https://github.com/apache/hive/commit/236cc2ac9d4b27c6536b1d132b2e7706cb2109f3, I added a TODOC1.3 label but kept the TODOC2.0 label, since 2.0.0 will be released before 1.3.0.]