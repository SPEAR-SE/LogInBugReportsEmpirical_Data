[

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12751341/HIVE-11606.1.patch

{color:green}SUCCESS:{color} +1 9370 tests passed

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5016/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5016/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5016/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12751341 - PreCommit-HIVE-TRUNK-Build, [~vikram.dixit] can you add a test for this please? otherwise looks good., +1, nit: {noformat} "(bucket map join = )" + joinConf.isBucketMapJoin()  {noformat} - brace is on the wrong side and space is needed before.
+1, Actually what is the done = false change? Operator is not reused?, There is an optimization where in case of inner joins, if the hashtable is empty, we set the done flag for the operator. However, this causes bucket map joins to produce incorrect results in case of container reuse because the operators in the cached work do not process records when the done flag has been set even though a different bucket is being processed. We prevent caching of the input in the case of bucket map joins but not the work - which makes sense because the operator pipeline hasn't changed. Ideally, we should reset the done flag only in the case of bucket map joins but this is not a big issue for broadcast joins because we will run the previous optimization again anyways and stop processing early in the initialize operator (loadHashTable) phase itself., Should the original optimization that sets done flag before initialize be removed then? Instead of always resetting it, Discussed offline, +1, Fix for failing tests., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12754987/HIVE-11606.4.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 9424 tests executed
*Failed tests:*
{noformat}
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5222/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5222/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5222/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12754987 - PreCommit-HIVE-TRUNK-Build, This was also committed to branch-1 so Fix Version/s should include 1.3.0.

(See commit 4e61f90cb88624253563d901e899b4ab4915df15.)]