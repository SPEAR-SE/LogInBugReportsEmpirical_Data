[The patch of HIVE-14123 uses this select, and the error log might confuse users, The same error gets logged with the following selects:
- select current_user();
- select 1 + 1;
- select * from dual union all select current_user();

I think the problem here is, that the CBO is not able to handle queries, where there is no source table., [~jcamachorodriguez] Could you please take a look at this? Every time one of the above queries is run, the error is logged, and the execution falls back to the normal mode without CBO. I was able to come up a patch which turns of the CBO for every query where there is no source table, but not sure that this is the right solution, or even the problem :)

{noformat}
===================================================================
--- ql/src/java/org/apache/hadoop/hive/ql/parse/CalcitePlanner.java	(revision de3d86cdd3db174d6bc5d8c65796a1e981171124)
+++ ql/src/java/org/apache/hadoop/hive/ql/parse/CalcitePlanner.java	(revision )
@@ -387,8 +387,9 @@
     boolean needToLogMessage = STATIC_LOG.isInfoEnabled();
     boolean isSupportedRoot = root == HiveParser.TOK_QUERY || root == HiveParser.TOK_EXPLAIN
         || qb.isCTAS();
-    boolean isSupportedType = qb.getIsQuery() || qb.isCTAS()
-        || cboCtx.type == PreCboCtx.Type.INSERT;
+    // Queries without a source table currently are not supported by CBO
+    boolean isSupportedType = (qb.getIsQuery() && !qb.containsQueryWithoutSourceTable())
+        || qb.isCTAS() || cboCtx.type == PreCboCtx.Type.INSERT;
     boolean noBadTokens = HiveCalciteUtil.validateASTForUnsupportedTokens(ast);
     boolean result = isSupportedRoot && isSupportedType && getCreateViewDesc() == null
         && noBadTokens;
@@ -400,7 +401,7 @@
           msg += "doesn't have QUERY or EXPLAIN as root and not a CTAS; ";
         }
         if (!isSupportedType) {
-          msg += "is not a query, CTAS, or insert; ";
+          msg += "is not a query with at least one source table os subquery, CTAS, or insert; ";
         }
         if (getCreateViewDesc() != null) {
           msg += "has create view; ";
===================================================================
--- ql/src/java/org/apache/hadoop/hive/ql/parse/QBExpr.java	(revision de3d86cdd3db174d6bc5d8c65796a1e981171124)
+++ ql/src/java/org/apache/hadoop/hive/ql/parse/QBExpr.java	(revision )
@@ -120,4 +120,17 @@
     }
     return qbexpr1.isSimpleSelectQuery() && qbexpr2.isSimpleSelectQuery();
   }
+
+  /**
+   * returns true, if the query block contains any query, or subquery without a source table
+   * Like select current_user(), select current_database()
+   * @return true, if the query block contains any query without a source table
+   */
+  public boolean containsQueryWithoutSourceTable() {
+    if (qb != null) {
+      return qb.containsQueryWithoutSourceTable();
+    } else {
+      return qbexpr1.containsQueryWithoutSourceTable() || qbexpr2.containsQueryWithoutSourceTable();
+    }
+  }
 }
===================================================================
--- ql/src/java/org/apache/hadoop/hive/ql/parse/QB.java	(revision de3d86cdd3db174d6bc5d8c65796a1e981171124)
+++ ql/src/java/org/apache/hadoop/hive/ql/parse/QB.java	(revision )
@@ -437,4 +437,17 @@
     return aliasInsideView;
   }
 
+  /**
+   * returns true, if the query block contains any query, or subquery without a source table
+   * Like select current_user(), select current_database()
+   * @return true, if the query block contains any query without a source table
+   */
+  public boolean containsQueryWithoutSourceTable() {
+    for (QBExpr qbexpr : aliasToSubq.values()) {
+      if (qbexpr.containsQueryWithoutSourceTable()) {
+        return true;
+      }
+    }
+    return aliasToTabs.size()==0 && aliasToSubq.size()==0;
+  }
 }
{noformat}, [~pvary], fix looks good. It is good we catch it before instead of failing while parsing the query. Could you upload a patch and trigger QA? Thanks!, Patch for not using CBO if there is no source table in any of the queries, or subqueries , Submitting the patch, to see if it breaks anything, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12816147/HIVE-14138.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 7 failed/errored test(s), 10294 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_list_bucket_dml_12
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_list_bucket_dml_13
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_stats_list_bucket
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_subquery_multiinsert
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver_vector_complex_all
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver_vector_complex_join
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_explainuser_1
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/369/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/369/console
Test logs: http://ec2-50-18-27-0.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-MASTER-Build-369/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 7 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12816147 - PreCommit-HIVE-MASTER-Build, [~pvary], could you regenerate q file for {{explainuser_1}}?

{noformat}
< Plan not optimized by CBO.
---
> Plan not optimized by CBO due to missing feature [Others].
{noformat}

Rest looks good, +1., Addressing the unit test issue, Pushed to master, thanks [~pvary]!]