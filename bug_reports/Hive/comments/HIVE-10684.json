[[~sushanth], could you take a look at this jira? Thank you!, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12732502/HIVE-10684.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 8921 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_insert_partition_static
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3879/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3879/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-3879/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12732502 - PreCommit-HIVE-TRUNK-Build, Failed case is irrelevant., Ferdinand, thanks for the patch update!

I've not been able to look at this yesterday or today, I will look into it tomorrow., Thank you! Create the review board entry for this jira., Hi [~sushanth], do you have some circles reviewing this jira? Thank you!, Hi, yes, I looked at it yesterday, and I'm afraid I do have one issue with this solution - namely the same issue as with HIVE-10477 , and makes it so that we would have to skip these tests as well for Windows. In general, I think we should avoid usage of maven-antrun-plugin unless necessary, since it leads to our mvn-based build slowly leaking back to an ant-based build.

[~hsubramaniyan], could you suggest a way to resolve this in a cross-platform compatible manner?, [~Ferd] Is it possible to do whatever you have done as part of target/generate_session_jars.sh mentioned in ql/pom.xml using maven components/plugins itself. This would be the most desirable way to avoid any portability issues. Also, I currently don't see the need to put the script in generate-sources id since the generate_session_jars.sh does not actually generate any scripts from any template but rather move it from one location to another.

The most effective way to work around portability issue would be to do something like what I have mentioned below, if at all possible.
For example, you can do something similar to  this in ql/pom.xml (I have not tested the below thing, but it should give you a start) :
{code}
<project>
  ...
  <build>
    <plugins>
      ...
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>RefreshedJarClassV1</artifactId>
        <configuration>
          <outputDirectory>${basedir}/target</outputDirectory>
        <includes>**/*RefreshedJarClassV1.class</includes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>RefreshedJarClassV2</artifactId>
        <configuration>
          <outputDirectory>${basedir}/target</outputDirectory>
        <includes>**/*RefreshedJarClassV2.class</includes>
        </configuration>
      </plugin>
      ...
    </plugins>
  </build>
  ...
</project>
{code}

In the worst case, if maven plugins does not provide you the option to do what you need and you don't bother about having this change on any non-linux platforms, you need to add profile for all the platform dependent exec code in pom.xml, so that the end-user can prevent these scripts from running if needed (by providing a -D or -P option) . You can take a look at HIVE-10477 to see how this is done.

[~sushanth] what do you think about my feedback.

Thanks, [~Ferd] I took a closer look at this implementation and it might be possible to achieve what you have done via the below addition to maven-jar-plugin in ql/pom.xml. Please test it after commenting out the previous change you made in maven-antrun-plugin(except creating the /tmp directory part) and let me know if this is what you intended to do.

In ql/ pom.xml,

{code}
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
.....
          <execution>
            <id>RefreshedJarClassV1</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <archive>
                <addMavenDescriptor>false</addMavenDescriptor>
              </archive>
              <classesDirectory>${basedir}/target/test-classes</classesDirectory>
              <includes>
                <include>**/RefreshedJarClass.class</include>
              </includes>
              <finalName>RefreshedJarClassV1</finalName>
              <outputDirectory>${basedir}/target/tmp</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>RefreshedJarClassV2</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <archive>
                <addMavenDescriptor>false</addMavenDescriptor>
              </archive>
              <classesDirectory>${basedir}/target/test-classes</classesDirectory>
              <includes>
                <include>**/RefreshedJarClass.class</include>
              </includes>
              <finalName>RefreshedJarClassV2</finalName>
              <outputDirectory>${basedir}/target/tmp</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
{code}

Thanks
Hari, Thanks, I will try this one., Hi [~hsubramaniyan], do you mind uploading your pom.xml for ql module? The original purpose for this test involved in HIVE-7553 is to verify the reloading functionality. 
{noformat}
Steps:
1. move A.jar in version 1 to the path
2. execute reload command
3. move A.jar in version 2 to the path in step 1
4. reload again
5. check the latest jar is used
{noformat}
To archive this, we have to use the same class and package name. This is why I use txt file instead of java source file. I am trying to use maven plugins to replace maven-antrun-plugin as [~sushanth] suggests. And this will also solve the cross platform issue., I forgot to mention a few things to get the above thing working. Instead of creating the txt file, you can move RefreshedJarClassV1.txt to RefreshedJarClass.java inside ql/src/test/org/apache/hadoop/hive/ql/session/refreshedjar/v1 and similar for V2 as well to RefreshedJarClass.java inside  ql/src/test/org/apache/hadoop/hive/ql/session/refreshedjar/v2. This way, you need to change the classesDirectory in the above modification in ql/pom.xml I suggested from ${basedir}/target/test-classes to {basedir}/target/test-classes/org/apache/hadoop/hive/ql/session/refreshedjar/v1 for RefreshedJarClassV1 execution id and {basedir}/target/test-classes/org/apache/hadoop/hive/ql/session/refreshedjar/v2 for RefreshedJarClassV2 id.

If you dont want the above classes to be included in the test-jar created, you can always add an exclude option in the test-jar goal.

Thanks
Hari, [~Ferd] My bad, if you want the same package, none of my above suggestions will work. Sorry for not realizing this requirement in the first place. In this case, it will be better to follow what Sushanth had pointed out.

Thanks
Hari, It's easy to have a cmd script for windows as the bash script based on current solution. Any thoughts about crossing platform issue? Also Is there any suggestion about replacing the maven-antrun-plugin? The maven-jar-plugin is for the purpose of building a jar for the source code. I am wondering whether we can replace the maven-antrun-plugin by maven-jar-plugin. Any thoughts about it?

Thank you! 
Ferd, [~Ferd] Is it possible to introduce ant tasks instead of bash script, can you see if this is possible via the Tasks mentioned in https://ant.apache.org/manual/Tasks/move.html . I believe this should support portability as well.

If the above method is not possible, It must be possible to get an equivalent windows script as well. But before the windows equivalent script can be checked in, it has to be tested in windows. You need a OS based maven profile for this purpose. This can be done as a separate jira; for the purpose of this jira, you can introduce a separate profile through which the end-user can provide a maven option (using -P or -D option) to skip executing the bash  in windows so that the maven command would not fail in windows.

Thanks
Hari, Update the patch resolving cross platform issue, Hi [~hsubramaniyan], could you help me review the latest patch? Thank you!, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12735187/HIVE-10684.1.patch

{color:red}ERROR:{color} -1 due to 5 failed/errored test(s), 8971 tests executed
*Failed tests:*
{noformat}
TestCompareCliDriver - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udf_crc32
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udf_sha1
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_vector_join30
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_vector_null_projection
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4032/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4032/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4032/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 5 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12735187 - PreCommit-HIVE-TRUNK-Build, Failed cases are not related., [~Ferd]  Sorry for the delay, I have a few minor comments here.   
1. For public int executeCmd (), can you make this a private function. Also the return value from this function is not used; i think it should either be removed or have it logged for debugging purpose. 
2. 
{code}
+//      Files.copy(new File("/tmp/" + clazzV2FileName.toString()), dist);
{code}

The above line can be removed.

Thanks
Hari, Hi [~hsubramaniyan],
thank you for your comments and update the patch addressing  your comments., +1, Committed to the master, thanks [~hsubramaniyan] and [~sushanth] for your review and comments., [~sushanth] [~hsubramaniyan]: should this be put in 1.2.1 as well? There are some unit test failures this might fix (TestBeelineArgParsing#testAddLocalJarWithoutAddDriverClazz, testAddLocalJarWithoutAddDriverClazz, testAddLocalJar, testAddLocalJar)., +1 for 1.2.1. As [~vgumashta] mentioned, there are some unit test failures in branch-1.2 which can be resolved with this fix.

Thanks
Hari, This patch will not fix the failures you mentioned. Please take a look at HIVE-10705. And this patch has already be committed to branch 1.2. Thank you!]