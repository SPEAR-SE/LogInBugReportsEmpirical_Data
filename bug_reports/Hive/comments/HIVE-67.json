[Right we don't have short-circuit for OR and AND for now. It should be easy to add though.
All the changes will be in UDFOPOr and UDFOPAnd.

I will fix it when I come back in 2 weeks.

There seems to be another problem with UDFOPEqual. It seems it cannot deal with null values gracefully.
, This should be resolved "Invalid" as SQL (due to it's declarative nature) does not define subexpression evaluation order.  For example, see "4.2.12. Expression Evaluation Rules":

http://www.postgresql.org/docs/8.3/interactive/sql-expressions.html#SYNTAX-EXPRESS-EVAL

As mentioned at the above link, CASE can be used to force evaluation order when necessary.  Defining evaluation order allows users to write code that is non-standard and invalid with other database systems, causing confusion for readers who are not familiar with this aspect of Hive.  It also ties the optimizer's hands and eliminates many potential optimizations., Why is this a blocker?

There is a work around for this no?
, From the stack trace, it looks like a bug in UDFOPEqual which should be present even if the above query is issued:

select t.date from t where month(t.date) = '12';

I need to verify it - since it looked like a suspect, I marked it as a blocker., I tried 2 similar queries but both of them passed. 

{code}

hive> create table zshao_null_test (a string, b string) stored as textfile;
hive> load data local inpath 'a' overwrite into table zshao_null_test;
hive> select * from zshao_null_test;
NULL    NULL
hive> select * from zshao_null_test where a IS NULL;
NULL    NULL
hive> select * from zshao_null_test where a = NULL;

{code}
]