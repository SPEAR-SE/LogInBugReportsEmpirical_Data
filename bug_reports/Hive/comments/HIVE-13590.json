[[~szehon], [~spena] could you help review the patch? Thanks., The patch has been uploaded to https://reviews.apache.org/r/48771/ for review., Reattach patch to kick off the prebuild test, Change looks good to me, but are the changes in HadoopThriftAuthBridge needed?  For example  "HadoopThriftAuthBridge::getAuthenticationMethod()" doesn't seem to be used as far as I can tell.., Thanks [~szehon] for review. It is a good catch, I initially tried to use the threadLocal authenticationMethod and later found it was not suitable, but forgot to remove the get method.
Upload a new patch removing this unnecessary method., +1 on my side., The precommit test failed due to test infrastructure issue. Reattach patch to kick off another run, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12811366/HIVE-13590.1.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 11 failed/errored test(s), 10222 tests executed
*Failed tests:*
{noformat}
TestMiniTezCliDriver-update_all_partitioned.q-schema_evol_stats.q-vector_decimal_expressions.q-and-12-more - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_acid_globallimit
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_constantPropagateForSubQuery
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_list_bucket_dml_13
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_repair
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_stats_list_bucket
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_subquery_multiinsert
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver_index_bitmap3
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_table_nonprintable
org.apache.hadoop.hive.ql.metadata.TestHiveMetaStoreChecker.testPartitionsCheck
org.apache.hadoop.hive.ql.metadata.TestHiveMetaStoreChecker.testTableCheck
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/166/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/166/console
Test logs: http://ec2-50-18-27-0.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-MASTER-Build-166/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 11 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12811366 - PreCommit-HIVE-MASTER-Build, The failed tests are aged and not related to this patch., Thanks [~ctang.ma]
+1, Patch has been committed to master (for 2.2.0) and branch-2.1 (for 2.1.1). Thank [~szehon] and [~spena] for review., thank you [~ctang.ma]

Looking at your patch 
https://issues.apache.org/jira/secure/attachment/12811366/HIVE-13590.1.patch

{noformat}
...
+        // KerberosName.getShorName can only be used for kerberos user, but not for the user
+        // logged in via other authentications such as LDAP
+        KerberosNameShim fullKerberosName = ShimLoader.getHadoopShims().getKerberosNameShim(userName);
+        ret = fullKerberosName.getShortName();
...
{noformat}

Is there any specific reason getShortName() can't be used for LDAP principals too?
Looking around for potential solutions for HIVE-15174

Thanks!, [~Tagar] as I recall, we did not use the KerberosName.getShortName for LDAP users for two reasons:
1. security: add the rules to LDAP users in Hadoop auth_to_local might introduce the security holes to other components accessing Hadoop only via Kerberos.
2. backward compatibility: for HS2 only using LDAP authentication. The KerberosName/auth_to_local rules were previously not required.

HTH, thanks, Thank you [~ctang.ma].

On your point #1. 
If this mapping logic only works when hive.server2.authentication.ldap.url and/or hive.server2.authentication are set.
Or perhaps, we there should be a new knob to turn on auth_to_local for LDAP authentication.
If above would be true, would it address your concerns?

Thanks again., The concern we had is the new rules added in Hadoop auth_to_local for HS2 LDAP users might bring in a potential security hole for the kerberized cluster system., The concern we had is the new rules added in Hadoop auth_to_local for HS2 LDAP users might bring in a potential security hole for the kerberized cluster system., Sorry, I am not following. auth_to_local is already being applied to Kerberos principals. Why applying auth_to_local to LDAP principals is different than mapping Kerberos principals? Why it introduces security risk? Please elaborate. Thank you., In a user case where LDAP and Kerberos are two separate authentication systems within a cooperation, you might not want to add LDAP mapping rules to Hadoop auth_to_local because these rules could be also applied to Kerberos principals which is considered as a security hole to kerberized cluster, is not it?, I got it now. Thanks for explaining. The key piece is "where LDAP and Kerberos are two separate authentication systems". In our case they are the same (the same Active Directory is used for both Kerberos and LDAP authentication). Although it's totally possible when authentication backends behind Kerberos and LDAP are separate. Then best solutions could be to either:
1) Make a switch if auth_to_local is used for LDAP or Kerberos, or both;
2) Make two separate mappings - one for Kerberoers (that could stay to be auth_to_local), and introduce a new mapping auth_ldap_to_local (just to give you an idea).
Thank you., Thanks for the suggested solution. The auth_to_local rule mapping is part of hadoop implementation.]