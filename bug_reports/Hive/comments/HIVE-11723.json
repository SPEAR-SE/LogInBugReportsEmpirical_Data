[String literals in the values clause should not only be processed by strip quotes, they need to unescape escaped chars too.
Attach the patch to fix this., Need code review., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12761463/HIVE-11723.1.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 9454 tests executed
*Failed tests:*
{noformat}
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation
org.apache.hive.hcatalog.streaming.TestStreaming.testInterleavedTransactionBatchCommits
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5361/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5361/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5361/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12761463 - PreCommit-HIVE-TRUNK-Build, The two failures are not related:

org.apache.hive.hcatalog.streaming.TestStreaming.testInterleavedTransactionBatchCommits 
because:
Table/View 'TXNS' already exists in Schema 'APP'.

org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation failed in many other precommit build.

[~szehon], [~csun], could you review the patch? Thanks


, [~ychena] is it a backward incompatible change?  I understand the fix but am a bit worried if it is, if it affect queries for string literals , for example select ... where col = literal?, [~szehon], I think the changes only affect values clause: something like values('...')
This fix makes string literal in values clause more consistent with string literals in other part of the SQL such as:
select 'a\'b' from src

The string literal above is processed in TypeCheckProcFactory as following
{noformat}
  public static class StrExprProcessor implements NodeProcessor {

    @Override
    public Object process(Node nd, Stack<Node> stack, NodeProcessorCtx procCtx,
        Object... nodeOutputs) throws SemanticException {

      TypeCheckCtx ctx = (TypeCheckCtx) procCtx;
      if (ctx.getError() != null) {
        return null;
      }

      ExprNodeDesc desc = TypeCheckProcFactory.processGByExpr(nd, procCtx);
      if (desc != null) {
        return desc;
      }

      ASTNode expr = (ASTNode) nd;
      String str = null;

      switch (expr.getToken().getType()) {
      case HiveParser.StringLiteral:
        str = BaseSemanticAnalyzer.unescapeSQLString(expr.getText());
        break;

....
{noformat}

So the change in the patch should not have backward compatible issues. , With the fix, the string literal in values clause is consistent with other string literals in a query. For example, after the fix, the following two inserts will have same behavior: insert Cooper's to the final table. Before the fix only the second statement insert Cooper's, the first insert Cooper\'s.
{noformat}
insert into t_hive VALUES ('Cooper\'s');
insert into t_hive select 'Cooper\'s' from src limit 1;
{noformat}

How do you think [~szehon]? , +1, Thanks [~szehon] for reviewing the code. , Committed to master, thanks Yongzhi!, Should this issue be backported to branch-1? It looks like a bug.]