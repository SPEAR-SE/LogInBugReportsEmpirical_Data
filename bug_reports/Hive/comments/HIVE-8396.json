[I may look at this later, Wow I cannot believe this was a year ago. I guess I won't look at it after all 0_o, I notice that the command line input behaves differently compare with script exectution with the {{-f}} option (0.14.0):

h4. Case 1: CLI entry fails
{code}
hive (default)> -- hello
              > set x=1;
FAILED: ParseException line 2:4 missing KW_ROLE at 'x' near 'x'
line 2:5 missing EOF at '=' near 'x'
{code}

h4. Case 2: Script execution succeeds
{code}
[ewest@host]$ cat x.hql
-- hello
set x=1;
set x;
[ewest@host]$ hive -f x.hql
x=1
{code}, I note that in {{org.apache.hadoop.hive.cli.CliDriver}} the following code strips full line comments from the input script:
{code}
  public int processReader(BufferedReader r) throws IOException {
    String line;
    StringBuilder qsb = new StringBuilder();
    while ((line = r.readLine()) != null) {
      // Skipping through comments
      if (! line.startsWith("--")) {
        qsb.append(line + "\n");
      }
    }
    return (processLine(qsb.toString()));
  }
{code}
Can we not also do this in the shell input processor? Also, what does {{beeline}} do?, I expect we could introduce some full line comment filtering somewhere around {{org.apache.hadoop.hive.cli.CliDriver.executeDriver(...):757}}:
{code}
    ...
    while ((line = reader.readLine(curPrompt + "> ")) != null) {
      if (!prefix.equals("")) {
        prefix += '\n';
      }
      if (line.trim().endsWith(";") && !line.trim().endsWith("\\;")) {
        line = prefix + line;
        ret = cli.processLine(line, true);\
        ...
{code}
, Worth noting that there is a complementary symmetric set of behaviours that are also not in agreement:
h4. CLI entry
{code}
hive (default)> set z="
              > --hello
              > ";
hive (default)> set z;
z="
--hello
"
{code}
h4. Script execution
{code}
[ewest@host]$ cat z.hql
set z="
-- hello
";
set z;
[ewest@host]$ hive -f z.hql
z="
"
{code}, Beeline does this. See {{org.apache.hive.beeline.BeeLine.dispatch(String)}}, specifically where {{isComment(line)}} is called., 'does this' -> 'parses full line comments consistently in both script and interactive shell modes', Attached [^HIVE-8396.0.patch]., This patch changes the interpretation of HQL submitted via the {{hive}} interactive shell. Some examples:

h4. Example 1
{code:title=HQL}
-- comment
set x=1;
set x;
{code}
{code:title=Result before patch}
<error thrown>
{code}
{code:title=Result after patch}
x=1
{code}

h4. Example 2
{code:title=HQL}
set x=
-- comment
1;
set x;
{code}
{code:title=Result before patch}
x=-- comment
1
{code}
{code:title=Result after patch}
x=1
{code}
, +1 pending test run (just in case CliDriver tests are affected), I'm not sure why the tests haven't run., Same patch to trigger Hive QA., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12773931/HIVE-8396.01.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 26 failed/errored test(s), 9825 tests executed
*Failed tests:*
{noformat}
TestHWISessionManager - did not produce a TEST-*.xml file
TestMiniLlapCliDriver - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_insert_values_nonascii
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_limit_join_transpose
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_schema_evol_orc_acid_mapwork_part
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_schema_evol_orc_acid_mapwork_table
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_schema_evol_orc_acidvec_mapwork_part
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_schema_evol_orc_acidvec_mapwork_table
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_schema_evol_orc_nonvec_fetchwork_table
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_schema_evol_orc_nonvec_mapwork_table
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_schema_evol_orc_vec_mapwork_table
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_schema_evol_text_fetchwork_table
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_schema_evol_text_mapwork_table
org.apache.hadoop.hive.cli.TestHBaseCliDriver.testCliDriver_hbase_queries
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_schema_evol_orc_acid_mapwork_part
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_schema_evol_orc_acid_mapwork_table
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_schema_evol_orc_acidvec_mapwork_part
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_schema_evol_orc_acidvec_mapwork_table
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_schema_evol_orc_nonvec_fetchwork_table
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_schema_evol_orc_nonvec_mapwork_table
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_schema_evol_orc_vec_mapwork_table
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_schema_evol_text_fetchwork_table
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_schema_evol_text_mapwork_table
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_tez_dynpart_hashjoin_3
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_uri_import
org.apache.hive.jdbc.TestSSL.testSSLVersion
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/6125/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/6125/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-6125/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 26 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12773931 - PreCommit-HIVE-TRUNK-Build, These test failures are not related, it looks like. +1. Will commit at some point, Committed to master and branch-1. Thanks for the patch!, Thank you!]