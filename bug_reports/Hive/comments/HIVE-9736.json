[I've added overloads to methods in {{FileUtils}}, {{HadoopShims}} and {{DefaultFileAccess}} to work on more than a single Path/FileStatus at a time.
I've also grouped {{listStatus}} calls into batches, to avoid a frequent round-trips to the NN., Tagging [~thejas], since this marches all over the security-work (and SBAP).

Sorry the patch looks a little big... The actual changes aren't, really., [~mithun] Can you please upload the patch to reviewboard ?
, The review on RB is [r/31615|https://reviews.apache.org/r/31615/]. Apologies for the delay., I've not looked at this patch in detail yet. But I'd also like to point to some refactoring [~cnauroth] did recently in HIVE-10223 for you to look at to see that we gel with some of Chris's work., Ok, I'd better rebase this change., Hi [~mithun].  Great ideas in this patch!  I'd be happy to help code review (non-binding) on a rebased version of the patch.  I'll watch for it.  Thanks!, @[~cnauroth]: Good to meet you, sir. I'd value your input on this change, given that you've worked on the SBAP already.

bq. Great ideas in this patch!
Aww, shucks... You're only saying that because it's true. ;p 

I should have a rebased version for you shortly. I'd better sort HIVE-9674 out first., The rebased patch, as promised. , Thank you for the rebased patch.  It looks great to me overall.  I've entered a few comments in ReviewBoard for your consideration regarding consolidation of RPC calls and a few other minor things.

https://reviews.apache.org/r/31615/
, Re-rebased patch, incorporating Chris's review comments., Hi [~mithun].  Thank you for uploading a new patch.

I was unable to apply patch v3 to the master branch.  Does it need to be rebased, or should I be working with a different branch?

There was one suggestion I made on Review Board that still isn't implemented.  In {{Hadoop23Shims#checkFileAccess}}, we can combine the multiple {{actions}} by using {{FsAction#or}}, and then call {{accessMethod.invoke}} just once to do the check in a single RPC (per file).  Were you planning to make this change, or is there a reason you decided not to do it?

Aside from that, I can see all of my other feedback has been addressed.  Thanks again!, Hello, Chris. 

bq. ... we can combine the multiple actions by using FsAction#or, and then call accessMethod.invoke just once...

Yikes! I might've missed incorporating that suggestion by accident. Thank you for following up. I'll update the patch shortly., The reason this patch didn't apply to trunk/ is that it depends on HIVE-9681. :/

Here's the patch that incorporates [~cnauroth]'s suggestion to combine {{FsActions}} into a single instance, to reduce RPCs. I'm afraid that still doesn't obviate the overload we added to {{Hadoop*Shims*}} since we needed a new overload anyway to pluralize the {{FileStatus}} argument.

The compromise in the patch is to reduce the RPC calls, but keep the overload., Hi, just so this gets into the precommit queue, could you upload a HIVE-9736.5.patch which is really the combination of HIVE-9681 and HIVE-9736.4.patch and set this jira to patch-available?

When committing it, I'll be sure to use the .4.patch, even uploading a new .6.patch which is its equivalent to make it clear for future jira visitors, but this would make the precommit queue pick it up., As per [~sushanth]'s suggestion, I've squashed the patches for HIVE-9681 and HIVE-9736 into a single one. This should allow the patch to apply to trunk, for tests.

(Good idea, Sush.), Submitting for tests., [~thejas], could you please review this patch? I'm waiting on HIVE-9681 test passing before committing that, so this patch should be treated in succession after that. (see .4.patch for this patch itself)

Also, as a general note, HIVE-10444 is in-queue as well, and hopefully this patch does not create any new -Phadoop-1 problems., 

{color:red}Overall{color}: -1 no tests executed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12729095/HIVE-9736.5.patch

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3655/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3655/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-3655/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Tests exited with: NonZeroExitCodeException
Command 'bash /data/hive-ptest/working/scratch/source-prep.sh' failed with exit status 1 and output '+ [[ -n /usr/java/jdk1.7.0_45-cloudera ]]
+ export JAVA_HOME=/usr/java/jdk1.7.0_45-cloudera
+ JAVA_HOME=/usr/java/jdk1.7.0_45-cloudera
+ export PATH=/usr/java/jdk1.7.0_45-cloudera/bin/:/usr/local/apache-maven-3.0.5/bin:/usr/java/jdk1.7.0_45-cloudera/bin:/usr/local/apache-ant-1.9.1/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/hiveptest/bin
+ PATH=/usr/java/jdk1.7.0_45-cloudera/bin/:/usr/local/apache-maven-3.0.5/bin:/usr/java/jdk1.7.0_45-cloudera/bin:/usr/local/apache-ant-1.9.1/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/hiveptest/bin
+ export 'ANT_OPTS=-Xmx1g -XX:MaxPermSize=256m '
+ ANT_OPTS='-Xmx1g -XX:MaxPermSize=256m '
+ export 'M2_OPTS=-Xmx1g -XX:MaxPermSize=256m -Dhttp.proxyHost=localhost -Dhttp.proxyPort=3128'
+ M2_OPTS='-Xmx1g -XX:MaxPermSize=256m -Dhttp.proxyHost=localhost -Dhttp.proxyPort=3128'
+ cd /data/hive-ptest/working/
+ tee /data/hive-ptest/logs/PreCommit-HIVE-TRUNK-Build-3655/source-prep.txt
+ [[ false == \t\r\u\e ]]
+ mkdir -p maven ivy
+ [[ git = \s\v\n ]]
+ [[ git = \g\i\t ]]
+ [[ -z master ]]
+ [[ -d apache-git-master-source ]]
+ [[ ! -d apache-git-master-source/.git ]]
+ [[ ! -d apache-git-master-source ]]
+ cd apache-git-master-source
+ git fetch origin
+ git reset --hard HEAD
HEAD is now at 3f5659f HIVE-10235 Loop optimization for SIMD in ColumnDivideColumn.txt (chengxiang, reviewed by Gopal V)
+ git clean -f -d
Removing ql/src/java/org/apache/hadoop/hive/ql/security/authorization/HiveMultiPartitionAuthorizationProviderBase.java
+ git checkout master
Already on 'master'
+ git reset --hard origin/master
HEAD is now at 3f5659f HIVE-10235 Loop optimization for SIMD in ColumnDivideColumn.txt (chengxiang, reviewed by Gopal V)
+ git merge --ff-only origin/master
Already up-to-date.
+ git gc
+ patchCommandPath=/data/hive-ptest/working/scratch/smart-apply-patch.sh
+ patchFilePath=/data/hive-ptest/working/scratch/build.patch
+ [[ -f /data/hive-ptest/working/scratch/build.patch ]]
+ chmod +x /data/hive-ptest/working/scratch/smart-apply-patch.sh
+ /data/hive-ptest/working/scratch/smart-apply-patch.sh /data/hive-ptest/working/scratch/build.patch
The patch does not appear to apply with p0, p1, or p2
+ exit 1
'
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12729095 - PreCommit-HIVE-TRUNK-Build, I have one remaining comment in Review Board suggesting a possible reusable {{combine}} method for combining {{FsAction}} values instead of duplicating the logic.  Aside from that very minor thing, I'm basically +1 (non-binding) for the patch.  However, I still couldn't get the consolidated v5 patch to apply to master, so I couldn't check a build with {{-Phadoop-1}}., (Note that given that HIVE-9681 has now been committed, you'll have to unsquish 9681 out of this for any further patch updates if you want tests to rerun), Thanks for the review, Chris. 

Would it be alright if we moved the {{combine()}} code to a common place as part of a separate JIRA? I didn't do this here because both call-sites are in different packages, and adding a dependency would be involved., I figured we could make {{DefaultFileAccess#combine}} public, and then {{Hadoop23Shims}} could call it.  hive-shims-0.23 already has a dependency on hive-shims-common.  However, if there is a detail that I'm missing, then I wouldn't intend to hold up the patch over making that change.

+1 (non-binding) from me, and I defer to you on what's best to do with {{combine}} right now.  Thank you for the patch, and thank you for responding to the code review feedback!, Just as a reminder, we were asked to check the build with {{-Phadoop-1}}.  I can volunteer to do that, but I think we'll need one more final revision of the patch intended to be committed.  I'm +1 (non-binding) for the changes shown in the last patch though, so if it's just a rebase, then that wouldn't change., Rebased for the master branch., I verified with both {{-Phadoop-2}} and {{-Phadoop-1}}.  Thanks again, Mithun!, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12730299/HIVE-9736.6.patch

{color:red}ERROR:{color} -1 due to 24 failed/errored test(s), 8895 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_authorization_parts
org.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_insert_partition_dynamic
org.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_insert_partition_static
org.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_join_unencrypted_tbl
org.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_join_with_different_encryption_keys
org.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_load_data_to_encrypted_tables
org.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_select_read_only_encrypted_tbl
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_disallow_transform
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_droppartition
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_sba_drop_table
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_uri_alterpart_loc
org.apache.hadoop.hive.ql.security.TestStorageBasedClientSideAuthorizationProvider.testSimplePrivileges
org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationDrops.testDropDatabase
org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationDrops.testDropPartition
org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationDrops.testDropTable
org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationDrops.testDropView
org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationProvider.testSimplePrivileges
org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationProviderWithACL.testSimplePrivileges
org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationReads.testReadDbFailure
org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationReads.testReadDbSuccess
org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationReads.testReadTableFailure
org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationReads.testReadTableSuccess
org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.TestSQLStdHiveAccessControllerHS2.testConfigProcessing
org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.TestSQLStdHiveAccessControllerHS2.testConfigProcessingCustomSetWhitelistAppend
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3731/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3731/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-3731/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 24 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12730299 - PreCommit-HIVE-TRUNK-Build, +1 : Have looked through patch and it makes sense. Tests pass, and I trust Chris' judgement on this for a more detailed verification. :) 

Will commit to master and branch-1.2, Committed to master and branch-1.2. Thanks [~mithun] & [~cnauroth]!, [~sushanth], thank you for your review and the commit!, Hi [~mithun]

This patch is causing the above tests to fail due to the change on {{Hadoop23Shims.checkFileAccess(FileSystem fs, Iterator<FileStatus> statuses, EnumSet<FsAction> actions)}}. 

The line that fails is {{accessMethod.invoke(fs, statuses.next(), combine(actions));}}

I an running hadoop 2.6.0, and the FileSystem.access() object accepts a Path and FsAction. When I run the code that checks patch permissions, I get this error: 
{noformat}
hive> explain select * from a join b on a.id = b.id;
FAILED: SemanticException Unable to determine if hdfs://localhost:9000/user/hive/warehouse/a is read only: java.lang.IllegalArgumentException: argument type mismatch
{noformat}

Is there a follow-up jira for this error?




, Hi Sergio, thanks for the catch, have filed https://issues.apache.org/jira/browse/HIVE-10638 for the same. [~mithun], could you please look at that issue? I will look through it too., The problem, as Sergio mentions, is that accessMethod is instantiated via reflection as a method that can take a Path and a FsAction. In the call, however, it is called with a FileStatus and an FsAction.

To wit, this will fix it:

{noformat}
-          accessMethod.invoke(fs, statuses.next(), combine(actions));
+          accessMethod.invoke(fs, statuses.next().getPath(), combine(actions));
{noformat}

This is easily fixed as a one-line fix, but I feel we need more testing. At the very least, I can see a case for a nullcheck past what I just mentioned.

At this time, I recommend we close HIVE-10638 as a DUPLICATE, revert HIVE-9736, reopen it, add this fix in, run through the precommit tests again, and then get it in.
, Revert-reopened for 1.2 and master., Also, since this is a performance patch rather than an outtage or regression, and since it is not trivial either, I'm marking it as tentative for inclusion to 1.2.0, i.e. if it gets done in time, we will include it, but if not, we mark it for 1.2.1
, [~spena], [~sushanth], thanks for reporting the bug. Sorry for the inconvenience. I'll update the patch and see if that sorts things out., @[~sushanth]: Quick question about the null-check: If the {{statuses}} are a result of {{FileSystem.listStatus(Path[])}}, then I don't see them being null, or returning null from {{FileStatus.getPath()}}. I think I might have missed the point you made., Changed to use the {{Path}} instead of {{FileStatus}}. Re-submitting for tests., I apologize for missing this in my code review.  I'm +1 (non-binding) for patch v7 pending a fresh test run.  I reran these tests locally and they passed, although they were also passing with the prior patch for me.  Mithun, thank you for updating the patch., Sorry about the null-check, yup, I meant to check statuses.next(), but looks like that's not necessary., Doc note:  This adds configuration parameter *hive.authprovider.hdfs.liststatus.batch.size* to HiveConf.java, so it needs to be documented in the wiki (for whatever release it ends up in).

* [Configuration Properties -- Authentication/Authorization | https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-Authentication/Authorization], I did not find this in the precommit queue, so I've manually added it in now : build#3833 should test this., Removing fix version of 1.2.0 in preparation of release, since this is not a blocker for 1.2.0., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12731062/HIVE-9736.7.patch

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 8912 tests executed
*Failed tests:*
{noformat}
TestSparkClient - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestEncryptedHDFSCliDriver.testCliDriver_encryption_insert_partition_static
org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationDrops.testDropPartition
org.apache.hive.jdbc.TestSSL.testSSLFetchHttp
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3833/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/3833/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-3833/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12731062 - PreCommit-HIVE-TRUNK-Build, One more attempt to get this patch in - updating the patch slightly so as to not remove the dependency on java.util.Set in HadoopShims.java (since there is another function that now depends on it)

Once the tests pass this time, I will get it in., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12739895/HIVE-9736.8.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 9008 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationDrops.testDropPartition
org.apache.hive.hcatalog.streaming.TestStreaming.testTransactionBatchAbort
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4275/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4275/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4275/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12739895 - PreCommit-HIVE-TRUNK-Build, Looks like we have a regression : org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationDrops.testDropPartition is failing while it shouldn't. This happened in the 9th May run as well.

Error Message : expected:<1> but was:<0>
Stacktrace:
{noformat}
java.lang.AssertionError: expected:<1> but was:<0>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at org.junit.Assert.assertEquals(Assert.java:542)
	at org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationDrops.dropPartitionByOtherUser(TestStorageBasedMetastoreAuthorizationDrops.java:202)
	at org.apache.hadoop.hive.ql.security.TestStorageBasedMetastoreAuthorizationDrops.testDropPartition(TestStorageBasedMetastoreAuthorizationDrops.java:172)
{noformat}


[~mithun], if we can look at this and resolve this, we can get this into 1.2.1, but if not, then I'm afraid this will have to be deferred out of branch-1.2, and make it in 1.3/2.0 .]