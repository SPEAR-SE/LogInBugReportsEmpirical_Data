[*ROOT-CAUSE:*

Table {{VERSION}} column {{SCHEMA_VERSION}} has value 2.3.0:

{code}
mysql> select * from VERSION;
+--------+----------------+----------------------------+
| VER_ID | SCHEMA_VERSION | VERSION_COMMENT            |
+--------+----------------+----------------------------+
|      1 | 2.3.0          | Hive release version 2.3.0 |
+--------+----------------+----------------------------+
{code}

But version of Hive is 2.3.2.

*SOLUTION:*

Add into {{EQUIVALENT_VERSIONS}} new key/value "2.3.2", "2.3.0"., LGTM +1 [~stakiar] I think this should go in 2.3.2 else HMS will not start up when {{hive.metastore.schema.verification}} is true, Shall this also include :  .put("2.3.1", "2.3.0") ?, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12898698/HIVE-18115.1.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 39 failed/errored test(s), 11387 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[dbtxnmgr_showlocks] (batchId=77)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[unionDistinct_1] (batchId=146)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[insert_values_orig_table_use_metadata] (batchId=162)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_fail_2] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_fail_3] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_fail_4] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_fail_5] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_fail_6] (batchId=93)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_fail_7] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_fail_create_db] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_fail_drop_db] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_part] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_1] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_2] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_3] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_4] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_5] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_6] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_7] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_disable_cbo_1] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_disable_cbo_2] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_disable_cbo_3] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_disable_cbo_4] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_disable_cbo_5] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_disable_cbo_6] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[authorization_view_disable_cbo_7] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[exim_22_export_authfail] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[exim_23_import_exist_authfail] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[exim_24_import_part_authfail] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[exim_25_import_nonexist_authfail] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[load_exist_part_authfail] (batchId=91)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[load_nonpart_authfail] (batchId=92)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[load_part_authfail] (batchId=92)
org.apache.hadoop.hive.ql.parse.TestReplicationScenarios.testConstraints (batchId=223)
org.apache.hadoop.hive.ql.security.TestClientSideAuthorizationProvider.testSimplePrivileges (batchId=225)
org.apache.hive.hcatalog.pig.TestHCatLoaderEncryption.testReadDataFromEncryptedHiveTableByPig[0] (batchId=187)
org.apache.hive.jdbc.TestSSL.testConnectionMismatch (batchId=229)
org.apache.hive.jdbc.TestSSL.testConnectionWrongCertCN (batchId=229)
org.apache.hive.jdbc.TestSSL.testMetastoreConnectionWrongCertCN (batchId=229)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/7945/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/7945/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-7945/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 39 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12898698 - PreCommit-HIVE-Build, [~ashutoshc] yes, you are right. {{.put("2.3.1", "2.3.0") }} should be included as well. So technically this affects 2.3.1 version as well. [~osayankin] Can you reattach the patch with the suggested fixes. Please name the patch with format <JIRA number>.<patch_version>-branch-2.patch so that the precommit tests run on that branch. So in your case the next patch should be named {{HIVE-18115.02-branch-2.patch}}, 2.3.2 has already been released. So I guess this will have to go into 2.3.3, {quote}
Can you reattach the patch with the suggested fixes? So in your case the next patch should be named HIVE-18115.02-branch-2.patch.
{quote}

Done., [~vihangk1] is this something that will need to be done for every release? If thats the case maybe we can make this a bit easier. By default we can assume all 2.3.x versions are equivalent to 2.3.0 unless otherwise specified? Or more generally, all x.y.z versions are equivalent to x.y.0 versions.

Maybe we need to add a snippet in the How to Release section of the Apache Hive Wiki?, Yes, based on the current implementation it looks like it needs to be done for every release. We should definitely update the wiki and/or add a automated test to make sure this is not broken. The problem with adding a test to cover this scenario is that by default our unit tests have {{hive.metastore.schema.verification}} turned off because of which this was not caught. I wonder why the schematool tests did not catch this though.
, I looked into the schema tool tests in the hope of finding that a test that is broken but I found surprisingly, that this error should not happen in the first place in 2.3.2 (and 2.3.1 as well). {{MetaStoreSchemaInfo.getHiveSchemaVersion()}} which is used to find the version of Hive from the binaries should return 2.3.0 and it should match with the schema version in the database which is also 2.3.0 from the init files.

{{MetaStoreSchemaInfo.getHiveSchemaVersion()}} gets the shortVersion from the {{HiveVersionAnnotation}} which is generated in the build time using {{saveVersion.sh}} and it injects the hive version from pom.xml's property which is {{<hive.version.shortname>2.3.0</hive.version.shortname>}} for the 2.3.2 release.

[~osayankin] did you build the source code from the release-2.3.2 or you just downloaded the binaries? If its the former can you paste the contents of package-info.java from the hive-common project? , {quote}
Oleksiy Sayankin did you build the source code from the release-2.3.2 or you just downloaded the binaries?
{quote}

I built  source code from the release-2.3.2. This is my last [commit|https://github.com/apache/hive/commit/857a9fd8ad725a53bd95c1b2d6612f9b1155f44d]. It worked fine after I had applied the patch, so I filed an issue here., [~vihangk1][~ashutoshc], do we plan to get it into 2.3.3? I am about to release 2.3.3., yes.. I think so., I took a relook at this and I don't think this is a problem. Like I explained in my comment above {{MetaStoreSchemaInfo.getHiveSchemaVersion()}} will return 2.3.0 and the database VERSION table will store 2.3.0 assuming the schema is initialized/upgraded using the right scripts. I tried to reproduce this issue on the current branch-2.3 (pointing to 2.3.3) and also the released tag 2.3.2 (git checkout tags/rel/release-2.3.2). I set {{hive.metastore.schema.verification}} to true and in both the cases I didn't hit the issue. The line number in the ObjectStore.java in the stack above {{ObjectStore.checkSchema(ObjectStore.java:7600)}} also doesn't match with 2.3.2 with this exception so I think the reporter is not using release build of Hive 2.3.2

I think it is okay to ignore this issue for 2.3.3 and we should close this JIRA as not reproducible unless someone can advise what  I am doing wrong above.
, Thanks [~vihangk1], move it to 2.4.0 for now., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12898821/HIVE-18115.02-branch-2.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 14 failed/errored test(s), 10667 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestAccumuloCliDriver.testCliDriver[accumulo_queries] (batchId=227)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[avro_tableproperty_optimize] (batchId=22)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[explaindenpendencydiffengs] (batchId=38)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[llap_smb] (batchId=142)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[orc_ppd_basic] (batchId=139)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[table_nonprintable] (batchId=140)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[join_acid_non_acid] (batchId=158)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[union_fast_stats] (batchId=153)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vectorized_parquet_types] (batchId=155)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[merge_negative_5] (batchId=88)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[explaindenpendencydiffengs] (batchId=115)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[vectorization_input_format_excludes] (batchId=117)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[vectorized_ptf] (batchId=125)
org.apache.hive.hcatalog.api.TestHCatClient.testTransportFailure (batchId=176)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/9895/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/9895/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-9895/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.YetusPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 14 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12898821 - PreCommit-HIVE-Build, Hi [~osayankin] Can you please confirm my analysis above? I am inclined to close this issue as not reproducible., [~vihangk1] wrote:

{quote}
I looked into the schema tool tests in the hope of finding that a test that is broken but I found surprisingly, that this error should not happen in the first place in 2.3.2 (and 2.3.1 as well). MetaStoreSchemaInfo.getHiveSchemaVersion() which is used to find the version of Hive from the binaries should return 2.3.0 and it should match with the schema version in the database which is also 2.3.0 from the init files.

MetaStoreSchemaInfo.getHiveSchemaVersion() gets the shortVersion from the HiveVersionAnnotation which is generated in the build time using saveVersion.sh and it injects the hive version from pom.xml's property which is <hive.version.shortname>2.3.0</hive.version.shortname> for the 2.3.2 release.
{quote}

Agree. The root cause was in that I mistakenly changed

{code}
<hive.version.shortname>2.3.0</hive.version.shortname>
{code}

to

{code}
<hive.version.shortname>2.3.2</hive.version.shortname>
{code}

thinking it as a typo in {{pom.xml}}, because the release version was 2.3.2. After that I had the exception 

{code}
Caused by: org.apache.hadoop.hive.metastore.api.MetaException: Hive Schema version 2.3.2 does not match metastore's schema version 2.3.0 Metastore is not upgraded or corrupt
{code}

which in its own turn forced me to find out the fix:

{code}
  private static final Map<String, String> EQUIVALENT_VERSIONS =
    ImmutableMap.<String, String>builder()
      .put("0.13.1", "0.13.0")
      .put("1.0.0", "0.14.0")
      .put("1.0.1", "1.0.0")
      .put("1.1.1", "1.1.0")
      .put("1.2.1", "1.2.0")
      .put("2.3.2", "2.3.0")
      .build();
{code}

Well guys, this is my mistake and my fault. Sorry :-(., Thanks [~osayankin] for confirmation. I think we can close this as a not reproducible in this case.]