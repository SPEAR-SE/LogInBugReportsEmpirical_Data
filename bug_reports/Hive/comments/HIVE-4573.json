[bq. The getTables jdbc function no longer returns information when using normal JDBC table types like TABLE or VIEW.

It's not good that the behavior has changed between versions, nor that we're pretty clearly violating the principle of least astonishment for no good reason. At the same time it's unfair to say that the driver doesn't use "normal JDBC table types" because JDBC doesn't define any "normal table types". This also helps to explain why  DatabaseMetaData.getTableTypes() exists., while it is true that getTableTypes lists the types which exist, the Hive JDBC documentation continues to reference you to the standard JDBC pages where those types have existed since early days of JDBC.

where was the change in types relative to prior releases etc documented re the change and purpose?

as in ODBC, calling getTableTypes might help an application determine what types it 'expects' are shown to be supported or 'not'. However, for other types it becomes a crap shoot as to what a dynamic SQL application would presume to do re types listed that it is not familiar with. 


https://hive.apache.org/docs/r0.10.0/api/org/apache/hadoop/hive/jdbc/HiveDatabaseMetaData.html
and follow the links from getTables().

http://docs.oracle.com/javase/6/docs/api/java/sql/DatabaseMetaData.html?is-external=true#getTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String[]), Review request on https://reviews.apache.org/r/13262/, Seems like a lot of code for something that I expect everyone will want to have as "CLASSIC" anyways. It's almost more of a bug to me that we leak out these hive-only concepts.

Questions: Can we get away with just classic? Can we at least mark HIVE as deprecated if we need both? Are we planning to always have both?

If we go with the current code can you fill out the release notes and document the new config variable?
, Comments on RB., [~hagleitn] Thanks for taking a look.
IMO, both use cases are valid. For applications or admin/monitoring tools developed specifically for hive, it would be useful to keep the hive specific details. Also we don't would break backward compatibility for existing apps that are expecting the hive way. That's my rationale for the fix. 
If that sounds reasonable, I will go ahead and make the necessary doc changes.
, I see. That makes sense. Although it seems that eventually (.13?) you would want the default to be CLASSIC (since it's easier for hive specific tools to set it to HIVE before they do their thing than for generic JDBC tools to set it to CLASSIC). , Updated the patch per review comments., Thanks! LGTM: +1, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12595799/HIVE-4573.2.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 2762 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_bucket_num_reducers
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_script_broken_pipe1
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/300/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/300/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests failed with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated., bq. Although it seems that eventually (.13?) you would want the default to be CLASSIC 

If we don't set the default to CLASSIC sooner, it would never happen. As time goes by, more applications would start relying this behavior.
As [~the6campbells] points out, the CLASSIC behavior is documented to be the 'normal' behavior. While we should aim for backward compatibility, I am not sure if that applies to bugs as well.

The managed vs external table information can certainly be very useful. It would be good to get that without changing the server configuration. Should we rely on something like 'describe table extended' for that ?

While I don't agree on the default, I don't think perfect should get in way of good. This improves things by making the classic behavior possible. We can discuss the default in a separate jira.
+1 for the patch.
, External tables are exceedingly rare and commonly misunderstood. I do not understand why a driver would care if a table was external or managed, that is just an implementation detail., Created HIVE-4998 to discuss the default behavior.
, [~thejas] Thanks for setting up separate ticket for the default behavior. It's a good idea to decouple that discussion from the base implementation., [~appodictic], [~thejas], [~prasadm] - If I understand this correctly this patch is needed as is and I am planning to commit in a few hours. The discussion on default, deprecation etc is happening on HIVE-4998. Speak up in the next couple of hours if you disagree., Committed to trunk. Thanks Prasad!, FAILURE: Integrated in Hive-trunk-hadoop2 #330 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/330/])
HIVE-4573: Support alternate table types for HiveServer2 (Prasad Mujumdar via Gunther Hagleitner) (gunther: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1510823)
* /hive/trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
* /hive/trunk/conf/hive-default.xml.template
* /hive/trunk/jdbc/src/test/org/apache/hive/jdbc/TestJdbcDriver2.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/ClassicTableTypeMapping.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/GetTableTypesOperation.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/GetTablesOperation.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/HiveTableTypeMapping.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/TableTypeMapping.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/TableTypeMappingFactory.java
, Im all about classic. Down with coke 2., SUCCESS: Integrated in Hive-trunk-hadoop1-ptest #118 (See [https://builds.apache.org/job/Hive-trunk-hadoop1-ptest/118/])
HIVE-4573: Support alternate table types for HiveServer2 (Prasad Mujumdar via Gunther Hagleitner) (gunther: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1510823)
* /hive/trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
* /hive/trunk/conf/hive-default.xml.template
* /hive/trunk/jdbc/src/test/org/apache/hive/jdbc/TestJdbcDriver2.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/ClassicTableTypeMapping.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/GetTableTypesOperation.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/GetTablesOperation.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/HiveTableTypeMapping.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/TableTypeMapping.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/TableTypeMappingFactory.java
, FAILURE: Integrated in Hive-trunk-hadoop2-ptest #47 (See [https://builds.apache.org/job/Hive-trunk-hadoop2-ptest/47/])
HIVE-4573: Support alternate table types for HiveServer2 (Prasad Mujumdar via Gunther Hagleitner) (gunther: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1510823)
* /hive/trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
* /hive/trunk/conf/hive-default.xml.template
* /hive/trunk/jdbc/src/test/org/apache/hive/jdbc/TestJdbcDriver2.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/ClassicTableTypeMapping.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/GetTableTypesOperation.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/GetTablesOperation.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/HiveTableTypeMapping.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/TableTypeMapping.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/TableTypeMappingFactory.java
, SUCCESS: Integrated in Hive-trunk-h0.21 #2248 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2248/])
HIVE-4573: Support alternate table types for HiveServer2 (Prasad Mujumdar via Gunther Hagleitner) (gunther: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1510823)
* /hive/trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
* /hive/trunk/conf/hive-default.xml.template
* /hive/trunk/jdbc/src/test/org/apache/hive/jdbc/TestJdbcDriver2.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/ClassicTableTypeMapping.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/GetTableTypesOperation.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/GetTablesOperation.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/HiveTableTypeMapping.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/TableTypeMapping.java
* /hive/trunk/service/src/java/org/apache/hive/service/cli/operation/TableTypeMappingFactory.java
, This appears to break test-compile:
{code}
  [javac] Compiling 2 source files to /x1/jenkins/jenkins-slave/workspace/Hive-trunk-hadoop2/hive/build/jdbc/test/classes
    [javac] /x1/jenkins/jenkins-slave/workspace/Hive-trunk-hadoop2/hive/jdbc/src/test/org/apache/hive/jdbc/TestJdbcDriver2.java:677: cannot find symbol
    [javac] symbol  : variable HIVE_SERVER2_TABLE_TYPE_MAPPING
    [javac] location: class org.apache.hadoop.hive.conf.HiveConf.ConfVars
    [javac]     stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname +
    [javac]                                            ^
    [javac] /x1/jenkins/jenkins-slave/workspace/Hive-trunk-hadoop2/hive/jdbc/src/test/org/apache/hive/jdbc/TestJdbcDriver2.java:684: cannot find symbol
    [javac] symbol  : variable HIVE_SERVER2_TABLE_TYPE_MAPPING
    [javac] location: class org.apache.hadoop.hive.conf.HiveConf.ConfVars
    [javac]     stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname +
    [javac]                                            ^
    [javac] /x1/jenkins/jenkins-slave/workspace/Hive-trunk-hadoop2/hive/jdbc/src/test/org/apache/hive/jdbc/TestJdbcDriver2.java:776: cannot find symbol
    [javac] symbol  : variable HIVE_SERVER2_TABLE_TYPE_MAPPING
    [javac] location: class org.apache.hadoop.hive.conf.HiveConf.ConfVars
    [javac]     stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname +
    [javac]                                            ^
    [javac] /x1/jenkins/jenkins-slave/workspace/Hive-trunk-hadoop2/hive/jdbc/src/test/org/apache/hive/jdbc/TestJdbcDriver2.java:784: cannot find symbol
    [javac] symbol  : variable HIVE_SERVER2_TABLE_TYPE_MAPPING
    [javac] location: class org.apache.hadoop.hive.conf.HiveConf.ConfVars
    [javac]     stmt.execute("set " + HiveConf.ConfVars.HIVE_SERVER2_TABLE_TYPE_MAPPING.varname +
    [javac]                                            ^
    [javac] Note: /x1/jenkins/jenkins-slave/workspace/Hive-trunk-hadoop2/hive/jdbc/src/test/org/apache/hadoop/hive/jdbc/TestJdbcDriver.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 4 errors
{code}, Do you guys want to fix or revert? For now I solved the problem by commenting it out. It may be because jdbc doesn't list common as dependency, but I didn't investigate a lot
, I prefer fix over revert. Looking into this right now, but haven't been able to reproduce so far. I've heard from others that a "ant very-clean" will fix the issue if you see the same stuff. Hoping you can use this as a temporary workaround., Alright. I have tried reproducing this several ways - no avail. I've checked the dependency chain. JDBC does depend on hive-common (albeit through a long transitive chain). I can't figure out why this is happening to you. I will monitor the situation but for now - very-clean is your very-slow friend., ok, let's resurrect if it happens again... might be ivy cache, jenkins hit it too , This issue has been fixed and released as part of 0.12 release. If you find further issues, please create a new jira and link it to this one., Doc note:  This adds configuration parameter *hive.server2.table.type.mapping* to HiveConf.java, and HIVE-4998 changes its default to CLASSIC.

* [Configuration Properties -- hive.server2.table.type.mapping | https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.server2.table.type.mapping]]