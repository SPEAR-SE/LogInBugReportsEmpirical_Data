[nits:
Shouldn't the following code come after buf.append(t.toStringTree()); to avoid double space appends
{code}
if ( i>0 ) {
  buf.append(' ');
}
{code}

Rename str to astStr or something more relevant?, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12745636/HIVE-11281.patch

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 9215 tests executed
*Failed tests:*
{noformat}
TestContribNegativeCliDriver - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_cbo_rp_join0
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_schemeAuthority
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4630/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4630/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4630/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12745636 - PreCommit-HIVE-TRUNK-Build, Didn't follow you about double spacing. Also, just trying to be consistent with [BaseTree::toStringTree()|https://github.com/antlr/antlr3/blob/master/runtime/Java/src/main/java/org/antlr/runtime/tree/BaseTree.java#L375] in actual string representation, which does same thing.
Will rename the field.
Test failures are unrelated. , the white space is not an issue. my bad. never mind., Patch with review feedback addressed., [~ashutoshc] 
Cant we just do this to simplify this inside ASTNode

{code}
    @Override
    public String toStringTree() {
  
      if (null != str) {
        return str;
      }
      return str=super.toStringTree();
    }
{code}, Patch with Hari's suggestion., +1, What happens when someone programmatically modifies the tree?  How will this ever get updated?, Thats a valid concern. But AFAIK we dont mutate our ASTNode in a way which will impact this. Do you know any place where we do that?, UpdateDeleteSemanticAnalyzer does mutate AST.  There may be others, but even if we currently didn't modify AST this change could created very subtle bugs (especially when trying to debug something based on logs), 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12745702/HIVE-11281.3.patch

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 9197 tests executed
*Failed tests:*
{noformat}
TestParseNegative - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_cbo_rp_join0
org.apache.hive.hcatalog.streaming.TestStreaming.testTransactionBatchEmptyCommit
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4633/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4633/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4633/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12745702 - PreCommit-HIVE-TRUNK-Build, I checked UpdateDeleteSemanticAnalyzer and that doesn't make use of StringTree. 
We can document in StringTree() method about this gotcha to warn future devs about this., Imagine someone implemented HashMap.toString() to cache the value the first time it's called and documented this method about this gotcha to warn future devs about this., perhaps another overloaded toStringTree(boolean refreshCache) can be added to be used in whichever context this is important and leave the old method as it was.  Is that workable?, How many places do we have that transform nodes? Can we make the nodes immutable?, offline discussion:

There's two things that might work:

a) Alter the string memoization to use a different data structure that doesn't duplicate any part of the string (we're OOMing even with the patch)
b) Switch to a different tree compare (not string based), This issue is covered under HIVE-11316, the fix for which takes an improved approach of the idea presented here. Hence I am closing this jira as "Wont fix". Nevertheless, thanks to [~ashutoshc] for identifying this issue!]