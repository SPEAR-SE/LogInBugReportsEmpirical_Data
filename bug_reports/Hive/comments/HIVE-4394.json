[Looks like this is related to HIVE-4130 where we changed the default amount for lead/lag function to 1 instead of 0., I am not sure what's going on, its the query 4 which is failing. When I ran the same query again postgres, I got results which match the previous output. So, certainly the new results are wrong and needs investigation., I think whats happening. For rows where column value can't be computed (e.g. first row of lag function) we return null, whereas earlier we use to return current value.  I am not sure whats correct (or what standard says) but postgres atleast seems to do what we were doing earlier (ie, return current column value)., Previously we used to return the first/last value in the window if the evaluation of lag/lead amounted to an index that crossed the boundary. Now we return the default value. Since in this e.g. we don't have a default value, we return null.

Also the way we interpret this query maybe different from Postgres. We treat the lag function as a UDF when it appears as an argument of a UDAF. So we do the sum in one pass. As far as I know this concept of lead/lag udfs is unique to us. Is Postgres allowing for UDAFs to be arguments of other UDAFs. We don't support this., Yeah, I ran the query as it is on pg, it ran fine and produced results.

I read standard but couldn't determine if it actually says anything for this scenario. Reading online documentation for DB2, Sql Server and Oracle seems to indicate all of them return NULL in such cases. So, seems like only postgres has a different behavior. At this point to me either way is an acceptable solution. Harish, what do you think?, If I try this in pg:
{noformat}
select  p_mfgr,p_name, p_size,   
sum(p_size - lag(p_size,1)  over(partition by p_mfgr  order by p_name) ) over(partition by p_mfgr  order by p_name ) as deltaSum 
from part 
window w1 as (rows between 2 preceding and 2 following)
{noformat}

it  gives ERROR:  window function calls cannot be nested

If I try this
{noformat}
select  p_mfgr,p_name, p_size,   
sum(p_size) over(partition by p_mfgr  order by p_name ) - lag(p_size,1) over(partition by p_mfgr  order by p_name ) as deltaSum 
from part 
window w1 as (rows between 2 preceding and 2 following)
{noformat}
the first Mfr2 row has a null for delatSum.

What was the query that gives 0? 
Null seems like the right answer to me., Aah.. second time in a day : ( I thought I ran some query but really it was different.
Harish, you are right, postgres doesn't allow UDAF as an argument of another UDAF, so above query doesn't run on pg. I checked pg docs which also says to return NULL in case default is not defined. So, I think our new behavior is consistent with all other implementations. I will upload the patch overwriting .q.out file. Harish, can you take a look., +1, Committed to trunk. Thanks, Harish for review!, Integrated in Hive-trunk-hadoop2 #172 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/172/])
    HIVE-4394 : test leadlag.q fails (Ashutosh Chauhan) (Revision 1471015)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1471015
Files : 
* /hive/trunk/ql/src/test/results/clientpositive/leadlag.q.out
, Integrated in Hive-trunk-h0.21 #2076 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2076/])
    HIVE-4394 : test leadlag.q fails (Ashutosh Chauhan) (Revision 1471015)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1471015
Files : 
* /hive/trunk/ql/src/test/results/clientpositive/leadlag.q.out
]