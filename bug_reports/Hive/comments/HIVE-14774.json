[Kill the process running query in the background before close/destroy the Driver instance. Otherwise, under certain race condition, the running process might still access some driver fields (e.g. plan, ctx) which have been nullified in the cleanup process and cause some uncaught runtime errors. Some resources such as locks might also not be cleared properly., [~mohitsabharwal], [~jxiang] could you review the patch? Thanks., +1, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12829705/HIVE-14774.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 6 failed/errored test(s), 10554 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[acid_mapjoin]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ctas]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_join_part_col_char]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainuser_3]
org.apache.hadoop.hive.metastore.TestMetaStoreMetrics.testMetaDataCounts
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarConstructorUnCaching
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1262/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1262/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-Build-1262/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 6 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12829705 - PreCommit-HIVE-Build, [~ctang.ma], since locks are cleared in driver.destroy(), I was wondering how killing the query process is related to clearing locks.  , [~mohitsabharwal] SQLOperation is running a query in a background thread, its driver does lock acquisition, query execution etc. When Ctrl-C shuts down Beeline, it triggers TServerEventHandler deleteContext which in term closes the Session therefore cleaning up the operation (in the session thread). This cleanup close/destroy Driver (nullify its fields like ctx, plan etc), so the Driver running in background might fail in a certain step by RuntimeException (e.g. NPE) which have not been handled completely or properly in Hive. In a race condition when the Drive is about to acquire the locks in background thread and the SQLOperation cleanup has destroyed/closed driver but not yet kill the ground thread, the query process running in the background could still be able to acquire the locks but these locks might never have a chance to be cleared later.
The simplest and right way is first to kill the running query in the background, followed by driver close/destroy which ensures that  the locks, if any, acquired in the Driver would be cleared.
Does that make sense?
, LGTM as well +1, Committed to 2.2.0 and 2.1.1. Thanks [~jxiang] [~mohitsabharwal] for the review.]