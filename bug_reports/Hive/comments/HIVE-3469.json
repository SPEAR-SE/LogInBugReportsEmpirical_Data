[1. For the first problem , exception from JDO is primary constraint.

bq. Caused by: javax.jdo.JDODataStoreException: Insert of object "org.apache.hadoop.hive.metastore.model.MDatabase@63280c85" using statement "INSERT INTO DBS (DB_ID,DB_LOCATION_URI,"NAME","DESC") VALUES (?,?,?,?)" failed : The statement was aborted because it would have caused a duplicate key value in a unique or primary key constraint or unique index identified by 'UNIQUE_DATABASE' defined on 'DBS'.

2. For the third proble, exception trace is  
{noformat}
2012-09-14 20:26:22,507 ERROR server.TThreadPoolServer (TThreadPoolServer.java:run(182)) - Error occurred during processing of message.
java.lang.RuntimeException: java.util.ConcurrentModificationException
	at org.apache.hadoop.hive.service.HiveServer$ThriftHiveProcessorFactory.getProcessor(HiveServer.java:572)
	at org.apache.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:169)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.util.ConcurrentModificationException
	at java.util.Hashtable$Enumerator.next(Hashtable.java:1031)
	at org.datanucleus.store.rdbms.query.legacy.JDOQLQuery.getParsedImports(JDOQLQuery.java:364)
	at org.datanucleus.store.rdbms.query.legacy.JDOQLQuery.compileInternal(JDOQLQuery.java:174)
	at org.datanucleus.store.query.Query.executeQuery(Query.java:1628)
	at org.datanucleus.store.rdbms.query.legacy.JDOQLQuery.executeQuery(JDOQLQuery.java:245)
	at org.datanucleus.store.query.Query.executeWithArray(Query.java:1499)
	at org.datanucleus.jdo.JDOQuery.execute(JDOQuery.java:243)
	at org.apache.hadoop.hive.metastore.ObjectStore.getMDatabase(ObjectStore.java:389)
	at org.apache.hadoop.hive.metastore.ObjectStore.getDatabase(ObjectStore.java:408)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
         ...
         ...
         at $Proxy0.getDatabase(Unknown Source)
	at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.createDefaultDB_core(HiveMetaStore.java:351)
	at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.createDefaultDB(HiveMetaStore.java:375)
	at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.init(HiveMetaStore.java:278)  
{noformat}, Any exception in above 1 or 3, Hive client hangs forever.

If we synchronize Metastore.createDefaultDB_core(), all the 3 problem can be resolved. Please suggest your opinion.., It looks like createDefaultDB() (which calls createDefaultDB_core()) is already synchronized. Any idea why this doesn't solve the problem?, bq. Any idea why this doesn't solve the problem?
I am using hive branch-0.9.0. The above problem is fixed in Hive-Trunk only.

I gone through the hive-trunk code for the above problem. I have one doubt on the synchronization,
Exact synchronization problem exist on method createDefaultDB_core(). Why it is synchronized for calling method createDefaultDB().?

Correct me If I am wrong, synchronizing calling method impact would be on getting client connection is delayed. There is "if" block in method "createDefaultDB()"  that check for flag "createDefaultDB". Synchronizing to this method lead execute this if check only one client. This if check we can do parallel by bringing down synchronization one layer to the method createDefaultDB_core().
, @Rohit: We could probably adjust the layering of these two methods slightly, but I doubt that it would accomplish much in terms of improving performance, mainly because this operation is done once per connection, and we expect clients to spend most of their time doing something else. If HIVE-2937 fixes the concurrency issue then I think we should probably mark this ticket as a duplicate of 2937 and backport 2937 to 0.9., Applying patch of HIVE-2937 has fixed all 3 issue as per description. This we can mark as duplicate of 2937., @Rohit: Thanks for verifying that this is duplicate.]