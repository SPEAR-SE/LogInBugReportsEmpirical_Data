[[~xuefuz] [~erwaman] is this fix ok?, Change looks fine to me. However, I'm a little surprised by the subtle difference between the two ways. Is it documented in Properties class?, From javadoc, it seems caller should use stringPropertyNames() to get a set of property names instead of calling keys() or keySet()., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12676281/HIVE-8560.1.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 6574 tests executed
*Failed tests:*
{noformat}
org.apache.hive.minikdc.TestJdbcWithMiniKdc.testNegativeTokenAuth
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1393/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1393/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1393/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12676281 - PreCommit-HIVE-TRUNK-Build, Agreed that the serde probably should have used stringPropertyNames(). But it wouldn't hurt here if the table properties were set directly in the Properties (as opposed to being set in the defaults), and then overlayed by the partition properties (if any), right?, Looks like failure in TestJdbcWithMiniKdc.testNegativeTokenAuth is not related, it has been failing in other precommit runs., {quote}
it wouldn't hurt here if the table properties were set directly in the Properties (as opposed to being set in the defaults), and then overlayed by the partition properties (if any), right?
{quote}
I guess the difference is also subtle. Storing all property in one list vs two lists is that all HashMap related operations only apply to the main list, but not to the list for defaults. Thus, you can remove a property from the list, but its default will be still there. Also, child class of Properties can access both the value and the default value of a given property if exists.

I think Hive's use case doesn't involve these. Thus, +1., [~vikram.dixit] would like to add to 0.14, Committed to trunk/branch-0.14, I'm late to the party, but change looks good to me, too.  This won't affect the behavior of AbstractSerDes like AvroSerDes, so I'm cool with it :-)., This has been fixed in 0.14 release. Please open new jira if you see any issues.
]