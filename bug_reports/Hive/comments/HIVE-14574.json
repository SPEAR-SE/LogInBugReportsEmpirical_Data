[[~gopalv] [~sseth] can you take a look?, [~sershe]: adding to my build for today - minor comment

{code}
block boundaries and stripe boundaries
{code}

The start offset can vary by 3-5 bytes depending on this too - round that down to a multiple of 8?, Hrrm. That sounds like some voodoo magic. Sure..., bq. block boundaries and stripe boundaries
I'n not sure why this comment was even added in there. In terms of the 3 byte difference in ORC - [~prasanth_j] may have fixed that already.

Will Hashing.consistentHash generate the same values across different JVMs ? I think I had considered this earlier, and finally went with murmur since that does generate the same value across different JVMs / machines.

Needs new unit tests to validate behaviour. Don't think there's any reasons for the existing ones to break., > In terms of the 3 byte difference in ORC 

That's the file MAGIC of "ORC" ... 3 byte., The 3 byte difference will still be there based on what split strategy is chosen. If a big file is chosen by ETL split strategy the first split will start from 3 offset. If chosen by BI split strategy the first split will start from 0. My fix was related to inconsistently choosing strategies based on AM cache being on or off. , Another thing to consider here is that knownLocations is a list sorted by name (random uuid i think). A new node could show up anywhere in this array. The name generation would need to be fixed as well if doing something like this. That could be as simple as a counter in ZK - but I think a fix is required for something like this to actually work., We can easily achieve unique IDs by taking ZK node name (which is unique and sequential). However, as the new node is re-added to the tail on every restart, it throws everything off.
What we want conceptually is that restarted nodes go into the same position in the order as the nodes they replaced, but that is difficult to achieve (or impossible, I am not sure we have such a concept with Slider). We can just have sequential numbers in ZK to take, with every registering node fighting for the lowest number. I wonder if there's already a primitive for that in curator ;) That way the replacement nodes take the place of the nodes that died, most of the time, and leave the running ones undisturbed for most of the time.
We can also assume we usually restart in the same place and order by the first time there was LLAP on that particular node for that cluster, then by name. , Added test and naming... this is the most over-engineered test ever. The number trends to more reasonable with more splits, strangely enough :)
I think we can make a separate jira for more the machine accounting described above., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12824479/HIVE-14574.01.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 7 failed/errored test(s), 10443 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainuser_1]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainuser_2]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[load_dyn_part1]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[transform_ppr1]
org.apache.hive.beeline.TestBeeLineWithArgs.testEmbeddedBeelineOutputs
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testSelectThriftSerializeInTasks
org.apache.hive.service.cli.operation.TestOperationLoggingLayout.testSwitchLogLayout
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/933/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/933/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-MASTER-Build-933/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 7 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12824479 - PreCommit-HIVE-MASTER-Build, Can worker identity be same across different llap clusters using same zk (under different namespaces)?, Yes, in this patch. Why?, ping?, Why remove UNIQUE_IDENTIFIER UUID? That was for debugging purposes., This patch actually breaks unique Ids cause it is no longer propagated to clients... I'm fixing this in the other JIRA and may just resolve this as dup of that, or port it back into this patch.
The reason is that worker-xxxxx is also unique (for debug purposes too) so there's no point in the guid. Is there?, No, because of network splits to ZK - the only way to know a process came back from a GC pause is to see a UUID disappear and come back., Undid the guid-to-path change. I think the unique worker-... node name is sufficient (and actually more helpful ;)) but it doesn't really matter, and not in the scope of this patch anyway, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12824961/HIVE-14574.02.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 6 failed/errored test(s), 10473 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[acid_mapjoin]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainuser_1]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainuser_2]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[load_dyn_part1]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[transform_ppr1]
org.apache.hive.service.cli.operation.TestOperationLoggingLayout.testSwitchLogLayout
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/961/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-MASTER-Build/961/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-MASTER-Build-961/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 6 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12824961 - PreCommit-HIVE-MASTER-Build, ping again? :), lgtm, +1, Committed to master. Thanks for the review!
]