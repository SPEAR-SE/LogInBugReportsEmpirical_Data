[+1, HIVE-7001.2.patch - also includes a test. Checks if value is preserved.
, HIVE-7001.3.patch - better 'unit' test 
, [~sushanth] Apart from being a critical bug fix,  this also enables a workaround for pre-hadoop 1.2 versions. See HIVE-6962 . That is added value including this in hive 0.13.1. , +1 LGTM., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12642930/HIVE-7001.3.patch

{color:red}ERROR:{color} -1 due to 7 failed/errored test(s), 5429 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_groupby2_map_skew
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_parquet_ctas
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_stats_list_bucket
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_stats_partscan_1_23
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_root_dir_external_table
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_dynamic_partitions_with_whitelist
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_stats_partialscan_autogether
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-Build/100/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-Build/100/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 7 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12642930, Ran parquet_ctas locally and it passed, rest of the test failures are unrelated.
, Patch committed to trunk.
Thanks for the reviews Ashutosh & Vikram!
, This jira has been fixed as part of 0.13.1 release. If you find further issues, please create a new jira and link it to this one.
, Hi [~thejas], One question regarding the "fs.permissions.umask-mode". Looks like "fs.permissions.umask-mode" doesn't exist in Hadoop 1.x and property "dfs.umaskmode" is used instead in 1.x for the same purpose. Also "dfs.umaskmode" was not deprecated in 1.x according to HADOOP-8727. Should we use FsPermission.UMASK_LABEL instead of "fs.permissions.umask-mode" which always points to proper property in latest Hadoop in each version (0.23.x, 1.x, 2.x)?

Attached a testcase to illustrate the problem. Test passes fine with -Phadoop-2, but not with -Phadoop-1., Using FsPermission.UMASK_LABEL sounds good to me .
Please open a new jira.
, Thanks [~thejas]. Created HIVE-7807 and attached patch. Please review.]