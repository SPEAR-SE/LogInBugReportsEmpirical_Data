[I am not sure I follow. We need to know if there are any nulls in subqueries or not and we need to know that before we start generating resultset for outer query. Thus we count null first and then use that count to do a filter. I am not sure how is it possible to do this in a single scan. For reference: this rewrite is described on page 10 on [design doc | https://issues.apache.org/jira/secure/attachment/12614003/SubQuerySpec.pdf] on HIVE-784, bq. I am not sure how is it possible to do this in a single scan

Hive actually does that in other scenarios, when inserting into tables. Try the following query in Tez

{code}
create temporary table null_date(nul bigint);
create temporary table min_date(mm bigint);

explain 
from date_dim
insert overwrite table min_date select min(d_date_sk)
insert overwrite table null_date select count(1) where d_date_sk is null ;
{code}, This is different than what you are asking, because result set is independent for two insert statement whereas for NOT IN one result set is used in the next one.]