[Hey just wanted to add a +1 and say that the current approach makes depending on Hive difficult or impossible for certain Hadoop versions due to conflicts with the protobuf library., +1 This is much required.
I agree it has become difficult to depend on hive exec jar, because of ql module shading all the dependencies.

I will try to put a patch., As per the documentation of maven-shade-plugin the plugin will replace the project's main artifact with the shaded artifact. Giving a different classifier like nodep also was not helpful. As per the doc, the shaded artifact can be given a different name. Doc - http://maven.apache.org/plugins/maven-shade-plugin/examples/attached-artifact.html 

Attaching the patch which generates hive-exec-<version>.jar with no dependencies and hive-exec-<version>.-withdep.jar as the shaded jar. 

, 

{color:red}Overall{color}: -1 no tests executed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12644972/HIVE-5733.1.patch

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-Build/200/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-Build/200/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12644972, There are problems with uploaded patch, canceling, [~amareshwari] : what problems did you see with this patch? And have you had a go at doing another iteration to fix them?, bq. what problems did you see with this patch? 
I think the problem was - "removing shaded dependencies from hive-exec caused failures in other modules, as other modules are expecting all dependencies come with hive-exec". Other solution we did on our end is to make protobuf version provided and not bundle with hive-exec jar., I see. Protobuf is probably the JAR most brittle across versions; Guava being the other. If you are doing provided, there's a risk things won't link. At least it will fail at classload time â€”it's not internal behaviour that's changed silently., I'm going to close this as there is an artifact without dependencies being built, you refer to it with the classifier {{<classifier>core</classifier>}}. You do then get to choose the exact set of dependencies, at the expense of working out which are compatible.

Closing as fixed in 1.2.0; don't know when the fix went in, Closing jiras fixed in 1.2.0 release . 
Please open new jira if you find any related issue.
]