[[~thejas] can you take a look? , 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12891377/HIVE-17765.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 11204 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[optimize_nullscan] (batchId=162)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query14] (batchId=239)
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testHttpRetryOnServerIdleTimeout (batchId=228)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/7232/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/7232/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-7232/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12891377 - PreCommit-HIVE-Build, Javadoc for https://docs.oracle.com/javase/7/docs/api/java/sql/DatabaseMetaData.html#getSQLKeywords()
bq. Retrieves a comma-separated list of all of this database's SQL keywords that are NOT also SQL:2003 keywords.

ODBC behavior seems to be similar, but different -
bq. SQL_KEYWORDS 	string 	A string of all the keywords at the database management system that are not in the ODBC's list of reserved words.
(from https://www.ibm.com/support/knowledgecenter/en/SSEPEK_10.0.0/odbc/src/tpc/db2z_fngetinfo.html )

However, this patch seems to be returning all the keywords.

cc [~ashutoshc]
, That sounds great, all we need to do is add a wiki page with the 3rd definition ;)
I think it should be ok. There's no backward compat to break, and given existing inconsistencies for this informational list it should be acceptable.
Alternatively we can exclude e.g. those: https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql#odbc-reserved-keywords
Should I just hardcode them these as a hashset?, I think excluding the ones from that list and documenting that behavior seems reasonable. Perhaps it matches SQL:2003 as well.
Can you also add some kind of unit test for the jdbc method ?
, By documenting behavior I meant documenting that we return all of them, since everyone else already has their own interpretation...
As for the tests are there example tests to base off of? I'm not sure how jdbc tests are set up, Added the filter and a test. Let's see if that works., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12891841/HIVE-17765.01.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 9 failed/errored test(s), 11222 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[optimize_nullscan] (batchId=162)
org.apache.hadoop.hive.cli.TestSparkPerfCliDriver.testCliDriver[query16] (batchId=241)
org.apache.hadoop.hive.cli.TestSparkPerfCliDriver.testCliDriver[query94] (batchId=241)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query14] (batchId=239)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query16] (batchId=239)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query94] (batchId=239)
org.apache.hadoop.hive.cli.control.TestDanglingQOuts.checkDanglingQOut (batchId=202)
org.apache.hive.hcatalog.pig.TestTextFileHCatStorer.testWriteVarchar (batchId=184)
org.apache.hive.jdbc.TestJdbcDriver2.testSelectExecAsync2 (batchId=226)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/7276/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/7276/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-7276/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 9 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12891841 - PreCommit-HIVE-Build, Not sure why another JDBC test failed. I could repro it locally but I see in the logs query has run fine, and nothing related to this test has changed. I wonder if the test is valid for async execution... trying again., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12892133/HIVE-17765.02.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 14 failed/errored test(s), 11233 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[optimize_nullscan] (batchId=163)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_2] (batchId=101)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[subquery_multi] (batchId=110)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[subquery_notin] (batchId=133)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[subquery_scalar] (batchId=119)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[subquery_select] (batchId=119)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[subquery_views] (batchId=108)
org.apache.hadoop.hive.cli.TestSparkPerfCliDriver.testCliDriver[query16] (batchId=243)
org.apache.hadoop.hive.cli.TestSparkPerfCliDriver.testCliDriver[query94] (batchId=243)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query14] (batchId=241)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query16] (batchId=241)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query23] (batchId=241)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query94] (batchId=241)
org.apache.hadoop.hive.cli.control.TestDanglingQOuts.checkDanglingQOut (batchId=204)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/7299/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/7299/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-7299/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 14 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12892133 - PreCommit-HIVE-Build, [~thejas] can you take a look at the updated patch? Failures are unrelated.,  * In TestJdbcDriver2.java, can you change the single line for loop to following to make it more readable ?
{code}
..
boolean found = false;
for(String keyword : keywords) {
 if( "limit".equals(keyword) ){
    found = true;
 }
}
...
{code}


 * service/src/java/org/apache/hive/service/cli/session/HiveSessionImpl.java . Can you make that an umodifiable set ? (Guava Collections.unmodifiableSet ).
 * You can also initialize above in constructor using "new HashSet<> (Arrays.asList("ABSOLUTE", ... ) "


 , Addressing the code review feedback, +1
, Committed to master. Thanks for the review!, Also branch-2
, Should this be documented somewhere in the wiki?, Is the original API itself documented?, bq.  Is the original API itself documented?

I don't know what you mean by the original API but my guess is that it isn't documented (except in javadocs).

This just sounds like something that might need a bit of explanation in the wiki so people can make use of it., The original API is where the keywords are added, get info one that can also return product name, version and other assorted stuff.
It's aimed at JDBC/ODBC driver developers, and is also somewhat standard so it doesn't make sense to document this change without having the whole thing documented., Okay, that makes sense.  Thanks Sergey., This jira is resolved and released with Hive 3.0 If you find an issue with it, please create a new jira.]