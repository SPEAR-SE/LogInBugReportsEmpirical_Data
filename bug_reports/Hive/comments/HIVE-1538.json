[I see that if a query has where clause, the FilterOperator is applied twice.

Explain on a query with where clause :
hive> explain select * from input1 where input1.key != 10;
{noformat}
OK
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF input1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_WHERE (!= (. (TOK_TABLE_OR_COL input1) key) 10))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        input1
          TableScan
            alias: input1
            Filter Operator
              predicate:
                  expr: (key <> 10)
                  type: boolean
              Filter Operator
                predicate:
                    expr: (key <> 10)
                    type: boolean
                Select Operator
                  expressions:
                        expr: key
                        type: int
                        expr: value
                        type: int
                  outputColumnNames: _col0, _col1
                  File Output Operator
                    compressed: false
                    GlobalTableId: 0
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1
Time taken: 0.099 seconds
{noformat}

I see the same from the Mapper logs also. The first FilterOperator does the
filtering and second operator always filters zero rows.

{noformat}
....
2010-08-13 13:20:21,451 INFO ExecMapper: 
<MAP>Id =5
  <Children>
    <TS>Id =0
      <Children>
        <FIL>Id =1
          <Children>
            <FIL>Id =2
              <Children>
                <SEL>Id =3
                  <Children>
                    <FS>Id =4
                      <Parent>Id = 3 null<\Parent>
                    <\FS>
                  <\Children>
                  <Parent>Id = 2 null<\Parent>
                <\SEL>
              <\Children>
              <Parent>Id = 1 null<\Parent>
            <\FIL>
          <\Children>
          <Parent>Id = 0 null<\Parent>
        <\FIL>
      <\Children>
      <Parent>Id = 5 null<\Parent>
    <\TS>
  <\Children>
<\MAP>
...
2010-08-13 13:20:21,489 INFO org.apache.hadoop.hive.ql.exec.MapOperator: 5 forwarding 1 rows
2010-08-13 13:20:21,489 INFO org.apache.hadoop.hive.ql.exec.TableScanOperator: 0 forwarding 1 rows
2010-08-13 13:20:21,600 INFO ExecMapper: ExecMapper: processing 1 rows: used memory = 10765360
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.MapOperator: 5 finished. closing... 
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.MapOperator: 5 forwarded 1 rows
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.MapOperator: DESERIALIZE_ERRORS:0
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.TableScanOperator: 0 finished. closing... 
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.TableScanOperator: 0 forwarded 1 rows
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.FilterOperator: 1 finished. closing... 
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.FilterOperator: 1 forwarded 0 rows
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.FilterOperator: PASSED:0
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.FilterOperator: FILTERED:1
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.FilterOperator: 2 finished. closing... 
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.FilterOperator: 2 forwarded 0 rows
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.FilterOperator: PASSED:0
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.FilterOperator: FILTERED:0
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.SelectOperator: 3 finished. closing... 
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.SelectOperator: 3 forwarded 0 rows
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.FileSinkOperator: 4 finished. closing... 
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.FileSinkOperator: 4 forwarded 0 rows
2010-08-13 13:20:21,600 INFO org.apache.hadoop.hive.ql.exec.FileSinkOperator: Final Path: FS hdfs://localhost:19000/tmp/hive-amarsri/hive_2010-08-13_13-20-11_483_2065579562420016208/_tmp.-ext-10001/000000_0
2010-08-13 13:20:21,601 INFO org.apache.hadoop.hive.ql.exec.FileSinkOperator: Writing to temp file: FS hdfs://localhost:19000/tmp/hive-amarsri/hive_2010-08-13_13-20-11_483_2065579562420016208/_tmp.-ext-10001/_tmp.000000_0
2010-08-13 13:20:21,604 INFO org.apache.hadoop.hive.ql.exec.FileSinkOperator: New Final Path: FS hdfs://localhost:19000/tmp/hive-amarsri/hive_2010-08-13_13-20-11_483_2065579562420016208/_tmp.-ext-10001/000000_0
2010-08-13 13:20:21,629 INFO org.apache.hadoop.hive.ql.exec.SelectOperator: 3 Close done
2010-08-13 13:20:21,629 INFO org.apache.hadoop.hive.ql.exec.FilterOperator: 2 Close done
2010-08-13 13:20:21,629 INFO org.apache.hadoop.hive.ql.exec.FilterOperator: 1 Close done
2010-08-13 13:20:21,629 INFO org.apache.hadoop.hive.ql.exec.TableScanOperator: 0 Close done
2010-08-13 13:20:21,629 INFO org.apache.hadoop.hive.ql.exec.MapOperator: 5 Close done
2010-08-13 13:20:21,629 INFO ExecMapper: ExecMapper: processed 1 rows: used memory = 11454224
...
{noformat}
, With hive.optimize.ppd set to false, I see that the FilterOperator is applied only once.
{noformat}
hive> SET hive.optimize.ppd=false;
hive> explain select * from input1 where input1.key != 10;
OK
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_TABREF input1)) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR TOK_ALLCOLREF)) (TOK_WHERE (!= (. (TOK_TABLE_OR_COL input1) key) 10))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
        input1
          TableScan
            alias: input1
            Filter Operator
              predicate:
                  expr: (key <> 10)
                  type: boolean
              Select Operator
                expressions:
                      expr: key
                      type: int
                      expr: value
                      type: int
                outputColumnNames: _col0, _col1
                File Output Operator
                  compressed: false
                  GlobalTableId: 0
                  table:
                      input format: org.apache.hadoop.mapred.TextInputFormat
                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat

  Stage: Stage-0
    Fetch Operator
      limit: -1

Time taken: 0.022 seconds
{noformat}, Also, I observed that Select Operator is applied twice for a MapJoin query. Is it related to this?, With predicate pushdown on, the final candidates for predicate pushdown are collected for the top operator. 
And a FilterOperator is created, with the final candidates, as a child of TableScanOperator (topOp). But the operators (FilterOperators) whose predicates are pushed down, are not removed.
I think the solution is to collect the operators who are contributing the predicates for "final candidates of predicare pushdown" and remove them from the final operator graph.
Thoughts?, That is right - this has nothing to do with map join.
Whenever, a predicate is pushed down, it is also retained, thereby having 2 identical filters.

Is this creating a performance problem ? It can definitely be optimized.
I totally agree with your proposed solution., It would be cool to get this fixed; without it the predicate decomposition I added for HIVE-1226 is pointless., Amareshwari, are you planning to work on this ?

We are trying to improve the performance, and some profiling showed that can lead to lot of improvements, Namit, I can take this up once I'm done with HIVE-474 i.e. mostly after a week., Thanks, That will be great. It can lead to substantial improvement (10-15%) on the map-side 
for a large range of queries, bq. I think the solution is to collect the operators who are contributing the predicates for "final candidates of predicare pushdown" and remove them from the final operator graph.
This does not work as I thought earlier, because all the predicates in the FilterOperator may not be pushed. We might have to reconstruct the FilterOperator with un-pushed predicates., There are a couple of issues in removing the original filter operator.
# All the expressions in the filter predicate may not be pushed.
** I'm planning to create a filter operator with non-final candidates as a child of the original filter op and mark the original filter op for deletion.
# The candidate predicates may not pushed past some operators. For ex. Outer Join operator does not allow candidates for all aliases; LIMIT/SCRIPT/UDTF operators do not push any predicates.
** I'm planning to create a filter operator with unpushed predicates, as a child of the operator through which the predicates could not be pushed.

Finally, remove the original filter operators which are marked for deletion.

Thoughts? Any suggestions?, You might want to look into HIVE-1342 while you are working on this one., Talked to Amareshwari offline - the proposal looks good.
As a follow-up, we can merge consecutive filters in a follow-up task, Patch with following changes:
* creates a filter operator with unpushed predicates, as a child of the operator through which the predicates could not be pushed.
* removes original filter operator if it does not have any non-final candidates. 
With creating a child filter operator with the non-final candidates and removing the original one, I'm seeing some problems. So, would like to do that in a followup jira.
* Updates all the tests with new explain plans., will take a look., I am not familiar with the ppd code, just a few questions:
In ExprWalkerProcFactory.java line 291,
{noformat}
 } else if (!FunctionRegistry.isOpAnd(expr)) {
{noformat}

why this is needed? For example, what will happen if it is a OpNot?

In OpProcFactory, why there is a createFilter in ScriptPPD, JoinPPD, and DefaultPPD?

, also in OpProcFactory

{noformat}
if (!((FilterOperator)op).getConf().getIsSamplingPred()) {
{noformat}

can we just look at the parent to see if it is a tso?, bq. In ExprWalkerProcFactory.java line 291,
bq. } else if (!FunctionRegistry.isOpAnd(expr)) {
bq. why this is needed? For example, what will happen if it is a OpNot?

If it is an opAnd, we determine if its children are final predicates and add them accordingly, so I'm not adding an opAnd to non-final candidates. The exceptional behavior is only for opAnd. opNot is like anyother predicate.


bq.In OpProcFactory, why there is a createFilter in ScriptPPD, JoinPPD, and DefaultPPD?
There is createFilter for the unpushed predicates because, ScriptPPD does not allow any predicates to be pushed through it; JoinPPD does not allow predicates on some aliases to be pushed; DefaultPPD might have unpushed predicates because they were not candidates (for ex, ExtractOperator does not allow all predicates) .

bq. also in OpProcFactory 
bq.if (!((FilterOperator)op).getConf().getIsSamplingPred()) {
bq. can we just look at the parent to see if it is a tso?
The method createFilter() always creates filter with samplingPred as false. So right now, we cannot push a filter with sampling predicate, unless we make more changes. May be I should change the comment there. 
, +1, i will still take a more detailed look before i do tests and commit., Posted a review request here: https://reviews.apache.org/r/415/

Looks like the test diffs need to be regenerated, but the code changes apply cleanly.

@Yongqiang: Do you have time to finish this review?, Yongqiang, Can you have a look at the patch before i update it to trunk? Thanks, Amareshwari, welcome back. The patch looks good to me. Please go ahead update the patch to trunk (with Carl's comments)., Patch is updated to trunk with regenerated outputs., All tests passed on my machine.
@Yongqiang,Can you have a look at the patch and commit asap, because it is more likely to conflict again if delayed ? Thanks, @Amareshwari, would it be possible to add a configuration variable to turn this off ?
Just a fallback, in case we missed something, Added configuration hive.ppd.remove.duplicatefilters, with default value of true. Updated ppd tests to run with both configuration off and on., 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/550/
-----------------------------------------------------------

Review request for hive, Yongqiang He and namit jain.


Summary
-------

Patch updated to trunk with newly added configuration var hive.ppd.remove.duplicatefilters


This addresses bug HIVE-1538.
    https://issues.apache.org/jira/browse/HIVE-1538


Diffs
-----

  trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java 1088944 
  trunk/contrib/src/test/results/clientpositive/dboutput.q.out 1088944 
  trunk/contrib/src/test/results/clientpositive/serde_typedbytes4.q.out 1088944 
  trunk/hbase-handler/src/test/results/hbase_pushdown.q.out 1088944 
  trunk/hbase-handler/src/test/results/hbase_queries.q.out 1088944 
  trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/Operator.java 1088944 
  trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java 1088944 
  trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java 1088944 
  trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java 1088944 
  trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpWalkerInfo.java 1088944 
  trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/PredicatePushDown.java 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd1.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_clusterby.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_constant_expr.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_gby.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_gby2.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_gby_join.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_join.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_join2.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_join3.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_multi_insert.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_outer_join1.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_outer_join2.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_outer_join3.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_outer_join4.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_random.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_transform.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_udf_case.q 1088944 
  trunk/ql/src/test/queries/clientpositive/ppd_union.q 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join0.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join11.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join12.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join13.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join14.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join16.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join19.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join20.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join21.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join23.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join27.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join4.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join5.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join6.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join7.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join8.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/auto_join9.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/bucket2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/bucket3.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/bucket4.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/bucket_groupby.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/bucketmapjoin1.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/bucketmapjoin2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/bucketmapjoin3.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/bucketmapjoin_negative.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/case_sensitivity.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/cast1.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/cluster.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/combine2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/create_view.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/disable_merge_for_bucketing.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/filter_join_breaktask.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/groupby_map_ppr.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/groupby_map_ppr_multi_distinct.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/groupby_ppr.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/groupby_ppr_multi_distinct.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/having.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/implicit_cast1.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input11.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input11_limit.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input14.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input18.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input23.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input24.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input25.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input26.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input2_limit.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input31.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input39.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input42.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input6.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input9.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input_part1.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input_part5.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input_part6.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input_part7.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input_part9.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input_testxpath2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/input_testxpath4.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join0.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join11.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join12.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join13.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join14.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join16.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join19.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join20.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join21.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join23.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join26.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join28.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join32.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join33.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join34.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join35.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join38.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join39.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join4.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join40.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join5.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join6.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join7.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join8.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join9.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/join_map_ppr.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/lateral_view_ppd.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/load_dyn_part10.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/load_dyn_part13.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/load_dyn_part2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/load_dyn_part3.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/load_dyn_part4.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/load_dyn_part9.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/louter_join_ppr.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/mapjoin_distinct.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/mapjoin_subquery.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/merge3.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/merge4.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/merge_dynamic_partition.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/merge_dynamic_partition2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/merge_dynamic_partition3.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/no_hooks.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/noalias_subq1.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/notable_alias1.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/notable_alias2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/nullgroup.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/nullgroup2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/nullgroup4.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/nullgroup4_multi_distinct.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/nullgroup5.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/outer_join_ppr.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/pcr.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd1.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_clusterby.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_constant_expr.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_gby.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_gby2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_gby_join.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_join.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_join2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_join3.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_multi_insert.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_outer_join1.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_outer_join2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_outer_join3.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_outer_join4.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_random.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_transform.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_udf_case.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/ppd_union.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/query_result_fileformat.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/quote1.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/rand_partitionpruner3.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/rcfile_null_value.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/reduce_deduplicate.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/regex_col.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/regexp_extract.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/router_join_ppr.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/sample1.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/sample10.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/sample2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/sample3.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/sample4.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/sample5.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/sample6.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/sample7.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/sample8.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/sample9.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/semijoin.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/set_processor_namespaces.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/skewjoin.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/smb_mapjoin9.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/smb_mapjoin_6.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/stats11.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/stats2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/subq.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/subq2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/transform_ppr1.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/transform_ppr2.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/udf1.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/udf9.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/udf_10_trims.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/udf_hour.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/udf_isnull_isnotnull.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/udf_like.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/udf_lower.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/udf_minute.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/udf_notequal.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/udf_parse_url.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/udf_second.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/udf_size.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/union.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/union20.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/union22.q.out 1088944 
  trunk/ql/src/test/results/clientpositive/union_ppr.q.out 1088944 
  trunk/ql/src/test/results/compiler/plan/case_sensitivity.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/cast1.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/groupby1.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/groupby2.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/groupby3.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/groupby4.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/groupby5.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/groupby6.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input1.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input2.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input20.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input3.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input4.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input5.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input6.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input7.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input8.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input9.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input_part1.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input_testsequencefile.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input_testxpath.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/input_testxpath2.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/join1.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/join2.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/join3.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/join4.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/join5.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/join6.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/join7.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/join8.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/sample1.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/sample2.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/sample3.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/sample4.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/sample5.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/sample6.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/sample7.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/subq.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/udf1.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/udf4.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/udf6.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/udf_case.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/udf_when.q.xml 1088944 
  trunk/ql/src/test/results/compiler/plan/union.q.xml 1088944 

Diff: https://reviews.apache.org/r/550/diff


Testing
-------

All unit tests passed


Thanks,

Amareshwari

, Patch updated to trunk, Sorry, this one has gone stale.  Can you rebase against trunk?, Sorry for the repeated rebase requests; we'll make sure the next attempt gets committed!, Patch rebased to trunk. I would like this patch gets committed asap, because it touches almost all test output files and would go stale fast., 
-----------------------------------------------------------
This is an automatically generated e-mail. To reply, visit:
https://reviews.apache.org/r/550/
-----------------------------------------------------------

(Updated 2011-07-13 04:40:26.685437)


Review request for hive, Yongqiang He and namit jain.


Changes
-------

Patch re-based to trunk


Summary
-------

Patch updated to trunk with newly added configuration var hive.ppd.remove.duplicatefilters


This addresses bug HIVE-1538.
    https://issues.apache.org/jira/browse/HIVE-1538


Diffs (updated)
-----

  trunk/ql/src/test/results/clientpositive/sample7.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/sample9.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/sample8.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/semijoin.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/set_processor_namespaces.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/skewjoin.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/smb_mapjoin9.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/smb_mapjoin_6.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/split_sample.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/stats11.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/stats2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/subq.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/subq2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/transform_ppr1.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/transform_ppr2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/udf1.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/udf9.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/udf_10_trims.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/udf_hour.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/udf_isnull_isnotnull.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/udf_like.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/udf_lower.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/udf_minute.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/udf_notequal.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/udf_parse_url.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/udf_second.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/udf_size.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/union.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/union20.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/union22.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/union_ppr.q.out 1145463 
  trunk/ql/src/test/results/compiler/plan/case_sensitivity.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/cast1.q.xml 1145463 
  trunk/ql/src/test/results/clientpositive/sample6.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/sample5.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/sample3.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/sample4.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/sample2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/router_join_ppr.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/sample1.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/sample10.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/regexp_extract.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/regex_col.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/reduce_deduplicate.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/rcfile_null_value.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/rand_partitionpruner3.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/query_result_fileformat.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/quote1.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_udf_case.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_union.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppr_pushdown3.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/bucketmapjoin1.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/bucketmapjoin2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/bucketmapjoin3.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/bucketmapjoin_negative.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/case_sensitivity.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/cast1.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/cluster.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/combine2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/create_view.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/disable_merge_for_bucketing.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/filter_join_breaktask.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/groupby_map_ppr.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/groupby_map_ppr_multi_distinct.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/groupby_ppr.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/groupby_ppr_multi_distinct.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/having.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/implicit_cast1.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/index_auto.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/index_auto_file_format.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/index_auto_multiple.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/index_auto_partitioned.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/index_auto_unused.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/index_bitmap3.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/index_bitmap_auto.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/index_bitmap_auto_partitioned.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input11.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input11_limit.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input14.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input18.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input23.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input24.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input25.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input26.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input2_limit.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input31.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input39.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input42.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input6.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input9.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input_part1.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input_part5.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input_part6.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input_part7.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input_part9.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input_testxpath2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/input_testxpath4.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join0.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join11.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join12.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join13.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join14.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join16.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join19.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join20.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join21.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join23.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join26.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join28.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join32.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join33.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join34.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join35.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join38.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join39.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join4.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join40.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join5.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join6.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join7.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join8.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join9.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/join_map_ppr.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/lateral_view_ppd.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/load_dyn_part10.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/load_dyn_part13.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/load_dyn_part2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/load_dyn_part3.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/load_dyn_part4.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/load_dyn_part9.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/louter_join_ppr.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/mapjoin_distinct.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/mapjoin_subquery.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/merge3.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/merge4.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/merge_dynamic_partition.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/merge_dynamic_partition2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/merge_dynamic_partition3.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/no_hooks.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/noalias_subq1.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/notable_alias1.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/notable_alias2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/nullgroup.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/nullgroup2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/nullgroup4.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/nullgroup4_multi_distinct.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/nullgroup5.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/outer_join_ppr.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/pcr.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd1.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_clusterby.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_constant_expr.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_gby.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_gby2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_gby_join.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_join.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_join2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_join3.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_multi_insert.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_outer_join1.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_outer_join2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_outer_join3.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_outer_join4.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_random.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/ppd_transform.q.out 1145463 
  trunk/ql/src/test/results/compiler/plan/groupby1.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/groupby2.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/groupby3.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/groupby4.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/join5.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/join4.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/join3.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/join2.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input_testxpath2.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/join1.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input_testxpath.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input_testsequencefile.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input_part1.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input9.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input8.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input7.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input6.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input5.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input3.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input4.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input20.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input2.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/input1.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/groupby6.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/groupby5.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/sample5.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/sample4.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/sample3.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/sample2.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/sample1.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/join8.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/join7.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/join6.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/udf4.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/udf6.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/udf_case.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/udf_when.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/union.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/udf1.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/subq.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/sample7.q.xml 1145463 
  trunk/ql/src/test/results/compiler/plan/sample6.q.xml 1145463 
  trunk/ql/src/test/results/clientpositive/bucket_groupby.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/bucket4.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/bucket2.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/bucket3.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join9.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join8.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join7.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join6.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join5.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join4.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join27.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join28.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join29.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join20.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join21.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join23.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join19.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join14.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join16.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join13.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join11.q.out 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join12.q.out 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_transform.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_udf_case.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_union.q 1145463 
  trunk/ql/src/test/results/clientpositive/auto_join0.q.out 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_outer_join4.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_random.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_multi_insert.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_outer_join1.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_outer_join2.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_outer_join3.q 1145463 
  trunk/hbase-handler/src/test/results/hbase_pushdown.q.out 1145463 
  trunk/hbase-handler/src/test/results/hbase_queries.q.out 1145463 
  trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/Operator.java 1145463 
  trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java 1145463 
  trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java 1145463 
  trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java 1145463 
  trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpWalkerInfo.java 1145463 
  trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/PredicatePushDown.java 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd1.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_clusterby.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_constant_expr.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_gby.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_gby2.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_gby_join.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_join.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_join2.q 1145463 
  trunk/ql/src/test/queries/clientpositive/ppd_join3.q 1145463 
  trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java 1145463 
  trunk/contrib/src/test/results/clientpositive/dboutput.q.out 1145463 
  trunk/contrib/src/test/results/clientpositive/serde_typedbytes4.q.out 1145463 

Diff: https://reviews.apache.org/r/550/diff


Testing
-------

All unit tests passed


Thanks,

Amareshwari

, Since Yongqiang already reviewed this one, I can commit it assuming there were no new functional changes after his last review.

One question though; I see a bunch of the new SELECT statements in the unit tests do not have ORDER BY.  Are those all guaranteed to return at most one row?  If not, they need to have an ORDER BY on a complete key to guarantee test determinism.
, John, I modified the existing ppd_* tests to run with new configuration on and off. I copied the queries as they are and did not modify the the statements at all. If you are keen adding order by to the queries, Will do. I'd like to do in a follow up and not stop this patch. , Oh, OK, if you copied the existing queries, they are probably OK without ORDER BY since they haven't been causing trouble.  +1, will commit when tests pass., Committed.  Thanks Amareshwari!
, Integrated in Hive-trunk-h0.21 #825 (See [https://builds.apache.org/job/Hive-trunk-h0.21/825/])
    HIVE-1538. FilterOperator is applied twice with ppd on.
(Amareshwari Sriramadasu via jvs)

jvs : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1146129
Files : 
* /hive/trunk/ql/src/test/results/clientpositive/smb_mapjoin_6.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucket3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/sample6.q.out
* /hive/trunk/ql/src/test/results/clientpositive/nullgroup4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join9.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd1.q
* /hive/trunk/ql/src/test/results/clientpositive/router_join_ppr.q.out
* /hive/trunk/ql/src/test/results/clientpositive/load_dyn_part13.q.out
* /hive/trunk/ql/src/test/results/clientpositive/having.q.out
* /hive/trunk/ql/src/test/results/clientpositive/index_bitmap_auto_partitioned.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join13.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_join2.q
* /hive/trunk/ql/src/test/results/clientpositive/join26.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd_gby2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/merge_dynamic_partition2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input9.q.out
* /hive/trunk/ql/src/test/results/clientpositive/split_sample.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/udf1.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/transform_ppr1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/notable_alias1.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/join5.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/input11_limit.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/sample7.q.xml
* /hive/trunk/ql/src/test/results/compiler/plan/groupby6.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/udf_10_trims.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd_outer_join4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/groupby_map_ppr_multi_distinct.q.out
* /hive/trunk/ql/src/test/results/clientpositive/udf_second.q.out
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerInfo.java
* /hive/trunk/ql/src/test/results/compiler/plan/input7.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/index_auto_unused.q.out
* /hive/trunk/ql/src/test/results/clientpositive/udf_size.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join12.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_transform.q
* /hive/trunk/ql/src/test/results/clientpositive/lateral_view_ppd.q.out
* /hive/trunk/ql/src/test/results/clientpositive/sample3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join6.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input26.q.out
* /hive/trunk/ql/src/test/results/clientpositive/load_dyn_part10.q.out
* /hive/trunk/ql/src/test/results/clientpositive/cast1.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_gby.q
* /hive/trunk/ql/src/test/results/clientpositive/input2_limit.q.out
* /hive/trunk/ql/src/test/results/clientpositive/filter_join_breaktask.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join40.q.out
* /hive/trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
* /hive/trunk/ql/src/test/results/compiler/plan/case_sensitivity.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/join23.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input6.q.out
* /hive/trunk/ql/src/test/results/clientpositive/pcr.q.out
* /hive/trunk/ql/src/test/results/clientpositive/subq2.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/join2.q.xml
* /hive/trunk/hbase-handler/src/test/results/hbase_queries.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/sample4.q.xml
* /hive/trunk/ql/src/test/results/compiler/plan/groupby3.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/auto_join0.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd_outer_join1.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/udf6.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/join_map_ppr.q.out
* /hive/trunk/ql/src/test/results/clientpositive/merge3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd_join2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input_part7.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join8.q.out
* /hive/trunk/hbase-handler/src/test/results/hbase_pushdown.q.out
* /hive/trunk/ql/src/test/results/clientpositive/index_auto_multiple.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/input4.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/load_dyn_part4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join21.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join34.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join29.q.out
* /hive/trunk/ql/src/test/results/clientpositive/case_sensitivity.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input23.q.out
* /hive/trunk/ql/src/test/results/clientpositive/sample8.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd_transform.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join20.q.out
* /hive/trunk/ql/src/test/results/clientpositive/rand_partitionpruner3.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/sample1.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/join28.q.out
* /hive/trunk/ql/src/test/results/clientpositive/groupby_map_ppr.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/join7.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/implicit_cast1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join5.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/input_testxpath.q.xml
* /hive/trunk/ql/src/test/results/compiler/plan/input1.q.xml
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_gby2.q
* /hive/trunk/ql/src/test/results/compiler/plan/input9.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/load_dyn_part9.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join14.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join39.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join0.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucket2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/groupby_ppr.q.out
* /hive/trunk/ql/src/test/results/clientpositive/sample5.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union20.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join8.q.out
* /hive/trunk/ql/src/test/results/clientpositive/nullgroup.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_outer_join4.q
* /hive/trunk/ql/src/test/results/clientpositive/auto_join12.q.out
* /hive/trunk/ql/src/test/results/clientpositive/query_result_fileformat.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_union.q
* /hive/trunk/ql/src/test/results/clientpositive/disable_merge_for_bucketing.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/join4.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/stats2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd_udf_case.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/sample6.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/input31.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input_part1.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/groupby5.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/ppd_outer_join3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input14.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input39.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input_part9.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/input6.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/auto_join23.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join11.q.out
* /hive/trunk/ql/src/test/results/clientpositive/smb_mapjoin9.q.out
* /hive/trunk/ql/src/test/results/clientpositive/stats11.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/udf_case.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/union_ppr.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join19.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input42.q.out
* /hive/trunk/ql/src/test/results/clientpositive/sample2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/regex_col.q.out
* /hive/trunk/ql/src/test/results/clientpositive/semijoin.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join5.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input25.q.out
* /hive/trunk/ql/src/test/results/clientpositive/louter_join_ppr.q.out
* /hive/trunk/ql/src/test/results/clientpositive/noalias_subq1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/outer_join_ppr.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_outer_join3.q
* /hive/trunk/ql/src/test/results/clientpositive/udf_parse_url.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/join1.q.xml
* /hive/trunk/ql/src/test/results/compiler/plan/sample3.q.xml
* /hive/trunk/ql/src/test/results/compiler/plan/input_testxpath2.q.xml
* /hive/trunk/ql/src/test/results/compiler/plan/groupby2.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/quote1.q.out
* /hive/trunk/contrib/src/test/results/clientpositive/dboutput.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input11.q.out
* /hive/trunk/ql/src/test/results/clientpositive/index_auto.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input_part6.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join7.q.out
* /hive/trunk/ql/src/test/results/clientpositive/load_dyn_part3.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/input3.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/ppd_clusterby.q.out
* /hive/trunk/ql/src/test/results/clientpositive/index_bitmap3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join20.q.out
* /hive/trunk/ql/src/test/results/clientpositive/udf_lower.q.out
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java
* /hive/trunk/ql/src/test/results/clientpositive/join33.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join28.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join16.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/input_part1.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/mapjoin_distinct.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucket4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/rcfile_null_value.q.out
* /hive/trunk/ql/src/test/results/clientpositive/sample7.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input_testxpath2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union22.q.out
* /hive/trunk/ql/src/test/results/clientpositive/nullgroup5.q.out
* /hive/trunk/ql/src/test/results/clientpositive/udf_like.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_outer_join2.q
* /hive/trunk/ql/src/test/results/clientpositive/udf_isnull_isnotnull.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join14.q.out
* /hive/trunk/ql/src/test/results/clientpositive/merge_dynamic_partition3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/subq.q.out
* /hive/trunk/ql/src/test/results/clientpositive/transform_ppr2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/notable_alias2.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/join6.q.xml
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_clusterby.q
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_join.q
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin_negative.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd_multi_insert.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/cast1.q.xml
* /hive/trunk/ql/src/test/results/compiler/plan/input_testsequencefile.q.xml
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_udf_case.q
* /hive/trunk/ql/src/test/results/compiler/plan/input8.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/index_auto_partitioned.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_multi_insert.q
* /hive/trunk/contrib/src/test/results/clientpositive/serde_typedbytes4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join13.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join38.q.out
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpWalkerInfo.java
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_constant_expr.q
* /hive/trunk/ql/src/test/results/clientpositive/sample4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/nullgroup2.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/udf_when.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/join7.q.out
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/PredicatePushDown.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_outer_join1.q
* /hive/trunk/ql/src/test/results/clientpositive/auto_join11.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join19.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/input20.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/ppd_gby.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/join3.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/merge_dynamic_partition.q.out
* /hive/trunk/ql/src/test/results/clientpositive/no_hooks.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/sample5.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/skewjoin.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/groupby4.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/ppd_outer_join2.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/union.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/groupby_ppr_multi_distinct.q.out
* /hive/trunk/ql/src/test/results/clientpositive/merge4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd_join3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd_random.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join9.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucket_groupby.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd_union.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/input5.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/ppd_gby_join.q.out
* /hive/trunk/ql/src/test/results/clientpositive/cluster.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/subq.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/regexp_extract.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join35.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_random.q
* /hive/trunk/ql/src/test/results/clientpositive/reduce_deduplicate.q.out
* /hive/trunk/ql/src/test/results/clientpositive/nullgroup4_multi_distinct.q.out
* /hive/trunk/ql/src/test/results/clientpositive/sample1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/create_view.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_gby_join.q
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/index_auto_file_format.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/udf1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input24.q.out
* /hive/trunk/ql/src/test/results/clientpositive/udf_minute.q.out
* /hive/trunk/ql/src/test/results/clientpositive/sample9.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input_testxpath4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/index_bitmap_auto.q.out
* /hive/trunk/ql/src/test/results/clientpositive/mapjoin_subquery.q.out
* /hive/trunk/ql/src/test/results/clientpositive/udf9.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd_constant_expr.q.out
* /hive/trunk/ql/src/test/results/clientpositive/ppd_join.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join21.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_join3.q
* /hive/trunk/ql/src/test/results/clientpositive/udf_hour.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join16.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/sample2.q.xml
* /hive/trunk/ql/src/test/results/compiler/plan/groupby1.q.xml
* /hive/trunk/ql/src/test/results/compiler/plan/udf4.q.xml
* /hive/trunk/ql/src/test/results/compiler/plan/join8.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/ppr_pushdown3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input_part5.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join6.q.out
* /hive/trunk/ql/src/test/results/clientpositive/input18.q.out
* /hive/trunk/ql/src/test/results/clientpositive/load_dyn_part2.q.out
* /hive/trunk/ql/src/test/results/compiler/plan/input2.q.xml
* /hive/trunk/ql/src/test/results/clientpositive/set_processor_namespaces.q.out
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/Operator.java
* /hive/trunk/ql/src/test/results/clientpositive/sample10.q.out
* /hive/trunk/ql/src/test/results/clientpositive/join32.q.out
* /hive/trunk/ql/src/test/results/clientpositive/udf_notequal.q.out
* /hive/trunk/ql/src/test/results/clientpositive/auto_join27.q.out
* /hive/trunk/ql/src/test/results/clientpositive/combine2.q.out
, Integrated in Hive-trunk-h0.21 #889 (See [https://builds.apache.org/job/Hive-trunk-h0.21/889/])
    HIVE-1538. filter is removed due to regression of HIVE-1538
(Amareshwari Sriramadasu via jvs)

jvs : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1156787
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/ExprWalkerProcFactory.java
* /hive/trunk/ql/src/test/results/clientpositive/ppd_udf_col.q.out
* /hive/trunk/ql/src/test/queries/clientpositive/ppd_udf_col.q
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java
, Integrated in Hive-trunk-h0.21 #1268 (See [https://builds.apache.org/job/Hive-trunk-h0.21/1268/])
    HIVE-2791: filter is still removed due to regression of HIVE-1538 althougth HIVE-2344 (binlijin via hashutosh) (Revision 1291916)

     Result = SUCCESS
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1291916
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java
* /hive/trunk/ql/src/test/queries/clientpositive/ppd2.q
* /hive/trunk/ql/src/test/results/clientpositive/ppd2.q.out
, Integrated in Hive-trunk-hadoop2 #54 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/54/])
    HIVE-2791: filter is still removed due to regression of HIVE-1538 althougth HIVE-2344 (binlijin via hashutosh) (Revision 1291916)

     Result = ABORTED
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1291916
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ppd/OpProcFactory.java
* /hive/trunk/ql/src/test/queries/clientpositive/ppd2.q
* /hive/trunk/ql/src/test/results/clientpositive/ppd2.q.out
, Doc note:  This added *hive.ppd.remove.duplicatefilters* to HiveConf.java.  It needs to be documented in the wiki.

* [Configuration Properties | https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties]

It also needs an appropriate description, as [~apivovarov] pointed out in a message to the dev@hive mailing list:

* ["hive.ppd.remove.duplicatefilters description is incorrect. What is the correct one?" | http://mail-archives.apache.org/mod_mbox/hive-dev/201506.mbox/%3cCAKKt98Q-cOrDBeQD+9Bbsy1+t9b60SzwA7XFgsYQPSp1MRScqA@mail.gmail.com%3e], [~ashutoshc], can you confirm what description should be used for *hive.ppd.remove.duplicatefilters* in the wiki? In HiveConf.java, the description is: "Whether to push predicates down into storage handlers.  Ignored when hive.optimize.ppd is false" which seems to be an incorrect description for this property.

Would something like "When hive.optimize.ppd is true, removes duplicate filters from the query plan.  Set this to false if it filters too aggressively." be more accurate?
, More like: "During query optimization filters may be pushed down in operator tree. If this config is false, original filter is also left in operator tree at original place. If config is true, only pushed down filters remain in operator tree, original filter is removed. This optimization is always valid and useful, thus there is no reason to set this config to false, other than implementation bug, which may remove filter from both places.", Thanks for the new description, [~ashutoshc].  Also, thanks [~apivovarov] for pointing out the mismatched description.

Doc done: The property *hive.ppd.remove.duplicatefilters* is now documented in the wiki with a short version of the updated description:
* [Configuration Properties - hive.ppd.remove.duplicatefilters | https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.ppd.remove.duplicatefilters]

I'll also create a new JIRA and patch to update the HiveConf.java file with an updated description., New JIRA for updating the description created:
* [HIVE-12953 | https://issues.apache.org/jira/browse/HIVE-12953]]