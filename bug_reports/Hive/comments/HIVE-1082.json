[Talked to Prasad a little more about this:

1) The expectation is that the table that will exist after 'CREATE TABLE IF NOT EXISTS' is a combination of the specified schema + properties, plus the default properties when not specified. We should enforce this
2) Current code may break if we turn this on, so maybe we should have a CREATE TABLE IF NOT EXISTSWITHSCHEMA statement, or a strict mode of some sort., @venky, I am a little bit confused about the requirement. Do you mean we should allow the following situation: Table T(a int, b string) and table T (a int, b string, c string) exist in the same database? If so, what is the semantics of 'select a, b from T;'?, @ning, No, I'm suggesting that CREATE TABLE IF NOT EXISTS should throw an error if a table with the same name but a different schema/properties already exists. , Venky,  following is what specified in the HiveQL language manual (DDL):

CREATE TABLE creates a table with the given name. An error is thrown if a table or view with the same name already exists. You can use IF NOT EXISTS to skip the error.

So I think what you want is implemented in the plain create table T DDL?
, What I want is to create a table if the table doesn't exist already. If it does exist, I want Hive to verify that its schema is identical to the schema I've specified. Basically, at the end of a successful statement, the schema in Hive should be exactly what I specified in the last CREATE TABLE IF NOT EXISTS statement. , Venky, have you got this fixed... ?, this has not been done AFAIK. I had an offline discussion with Venky before and what he want should be implemented using a new synax such as CREATE OR REPLACE TABLE. We should keep the semantics of CREATE TABLE IF NOT EXISTS unchanged since other other users are already using it. Changing the semantics may break their use cases. , Thanks Ning, That makes sense, At the moment we have added code to log a WARN, but using Create or replace table is the right approach as you suggest, will update if we get this done..]