[[~sershe] Can you review please?, openSessions is already a synchronized list. Should the synchronized list part be removed then?, From the documentation of synchronized list:

{code}
Returns a synchronized (thread-safe) list backed by the specified list. In order to guarantee serial access, it is critical that all access to the backing list is accomplished through the returned list.

It is imperative that the user manually synchronize on the returned list when iterating over it:

  List list = Collections.synchronizedList(new ArrayList());
      ...
  synchronized (list) {
      Iterator i = list.iterator(); // Must be in synchronized block
      while (i.hasNext())
          foo(i.next());
  }
 
Failure to follow this advice may result in non-deterministic behavior.
The returned list will be serializable if the specified list is serializable.
{code}

It looks like we need a synchronized block even when the list is called a synchronized list., Yeah, but we don't need the original synchronized list I assume, given that we synchronize manually. Also TezJobMonitor iterates openSessions via getOpenSessions. It'd need to get a snapshot or something., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12780852/HIVE-12797.1.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 14 failed/errored test(s), 9997 tests executed
*Failed tests:*
{noformat}
TestHWISessionManager - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_uri_import
org.apache.hadoop.hive.ql.exec.spark.session.TestSparkSessionManagerImpl.testMultiSessionMultipleUse
org.apache.hadoop.hive.ql.exec.spark.session.TestSparkSessionManagerImpl.testSingleSessionMultipleUse
org.apache.hadoop.hive.ql.security.authorization.plugin.TestHiveOperationType.checkHiveOperationTypeMatch
org.apache.hive.jdbc.TestSSL.testSSLVersion
org.apache.hive.spark.client.TestSparkClient.testAddJarsAndFiles
org.apache.hive.spark.client.TestSparkClient.testCounters
org.apache.hive.spark.client.TestSparkClient.testErrorJob
org.apache.hive.spark.client.TestSparkClient.testJobSubmission
org.apache.hive.spark.client.TestSparkClient.testMetricsCollection
org.apache.hive.spark.client.TestSparkClient.testRemoteClient
org.apache.hive.spark.client.TestSparkClient.testSimpleSparkJob
org.apache.hive.spark.client.TestSparkClient.testSyncRpc
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/6542/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/6542/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-6542/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 14 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12780852 - PreCommit-HIVE-TRUNK-Build, [~sershe] It looks like we only need the synchronization for the iterations according to the javadoc. I added the synchronized block in the TezJobMonitor and while at it found another synchronizedList being used in a similar fashion inside that class and fixed that as well. I can remove this synchronizedList business fully as it actually does the same thing as using a synchronized block internally in its add/remove methods. I am leaning towards the solution in this patch for now. Let me know if you feel strongly towards removing this synchronized list and synchronize manually., I don't think this will work unless I'm missing something... synchronized list synchronizes on internal mutex whereas iterations in the patch synchronize on the object, so nothing should prevent the list from being modified during one of the loops.
Imho there's no reason to have SynchronizedList here.
Also an interface where you getOpenSessions() but then have to sync on it is highly unobvious. If java had proper destructors, it would be easy to wrap, but as is I think we should shallow-copy the list and maybe rename method to OpenSessionsSnapshot, or something. Or at least add the comment to the method, although this can still easily lead to problems if someone calls it without reading comments :), Yeah. I agree that it doesn't make sense in terms of synchronization if the
mutex is different. I thought it was synchronizing on 'this' but it doesn't
look like it. I will remove the synchronized list here., +1. Is shutdownList the other synchronized list with the same problem? openSessions changes look good., Yes. It is another synchronized list with the same problem. Should fix it the same way as the openSessions stuff. Uploaded new patch for the same., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12781112/HIVE-12797.4.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 15 failed/errored test(s), 9985 tests executed
*Failed tests:*
{noformat}
TestHWISessionManager - did not produce a TEST-*.xml file
TestSparkCliDriver-timestamp_lazy.q-bucketsortoptimize_insert_4.q-date_udf.q-and-12-more - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_ivyDownload
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_uri_import
org.apache.hadoop.hive.ql.exec.spark.session.TestSparkSessionManagerImpl.testMultiSessionMultipleUse
org.apache.hadoop.hive.ql.exec.spark.session.TestSparkSessionManagerImpl.testSingleSessionMultipleUse
org.apache.hive.jdbc.TestSSL.testSSLVersion
org.apache.hive.spark.client.TestSparkClient.testAddJarsAndFiles
org.apache.hive.spark.client.TestSparkClient.testCounters
org.apache.hive.spark.client.TestSparkClient.testErrorJob
org.apache.hive.spark.client.TestSparkClient.testJobSubmission
org.apache.hive.spark.client.TestSparkClient.testMetricsCollection
org.apache.hive.spark.client.TestSparkClient.testRemoteClient
org.apache.hive.spark.client.TestSparkClient.testSimpleSparkJob
org.apache.hive.spark.client.TestSparkClient.testSyncRpc
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/6564/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/6564/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-6564/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 15 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12781112 - PreCommit-HIVE-TRUNK-Build, +1. , I'm still seeing this. Re-opening.
{code}
2016-01-25T19:02:06,280 ERROR [Thread-8]: server.HiveServer2 (HiveServer2.java:stop(490)) - Tez session pool manager stop had an error during stop of HiveServer2. Shutting down HiveServer2 anyway.
java.util.ConcurrentModificationException
        at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:966) ~[?:1.8.0_40]
        at java.util.LinkedList$ListItr.remove(LinkedList.java:921) ~[?:1.8.0_40]
        at org.apache.hadoop.hive.ql.exec.tez.TezSessionPoolManager.stop(TezSessionPoolManager.java:339) ~[hive-exec-2.1.0-SNAPSHOT.jar:2.1.0-SNAPSHOT]
        at org.apache.hive.service.server.HiveServer2.stop(HiveServer2.java:488) [hive-jdbc-2.1.0-SNAPSHOT-standalone.jar:2.1.0-SNAPSHOT]
        at org.apache.hive.service.server.HiveServer2$2.run(HiveServer2.java:192) [hive-jdbc-2.1.0-SNAPSHOT-standalone.jar:2.1.0-SNAPSHOT]
{code}, Hmm, this should not be possible, as all accesses to openSessions are synchronized in a straightforward manner. I wonder how this happens., Ah, nevermind, I filed a jira for the new issue]