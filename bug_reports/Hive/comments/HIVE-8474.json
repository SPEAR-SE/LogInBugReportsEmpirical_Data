[Further testing has also determined that attempts to select a partition column in vectorization results in a NPE as well., This patch makes several changes in vectorization.  [~mmccline] and [~ashutoshc], as I am not very familiar with this code and as I know the code is very performance sensitive I would appreciate your feedback on the patch.

The issue causing problems was that VectorizedBatchUtil.addRowToBatchFrom is used by VectorizedOrcAcidRowReader to take the merged rows from and acid read and put them in a vector batch.  But this method appears to have been built to be used by vector operators, not file formats where columns may be missing because they have been projected out or may already have values set as they are partition columns.  So I made the following changes:
# I changed addRowToBatchFrom to skip writing values into ColumnVectors that are null.  This handles the case where columns have been projected out and thus the ColumnVector is null.
# I changed VectorizedRowBatch to have a boolean array to track which columns are partition columns and VectorizedRowBatchCtx.createVectorizedRowBatch to populate this array
# I changed addRowToBatchFrom to skip writing values into ColumnVectors that are marked in VectorizedRowBatch as partition columns, since this results in overwriting the values that have already been put there by VectorizedRowBatchCtx.addPartitionColumnsToBatch

My concern is whether it is appropriate to mix in this functionality to skip projected out and partition columns into addRowToBatchFrom.  If you think it isn't good, I can write a new method to do this.  But that will involve a fair amount of duplicate code.  

[~owen.omalley], I also changed VectorizedOrcAcidRowReader to set the partition column values after every call to VectorizedRowBatch.reset in next.  Without doing this the code was NPEing later in the pipeline because the partition column had been set to null.  It appeared that you had copied the code from VectorizedOrcInputFormat, which only called addPartitionColsToBatch once, but which never called reset.  I tried removing the call to reset but that caused other issues., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12675606/HIVE-8474.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 6567 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_index_in_db
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1332/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1332/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1332/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12675606
 - PreCommit-HIVE-TRUNK-Build, 
Some background on vectorization.

There are are "shadow" VectorizationContext data structures that track which columns of vectorized row batches for used by each vectorized operators.

In row-by-row mode an operator can easily form a new row Object Array to correspond to the outputObjInspector.

However, in Vectorization we mask or project away columns in a VectorizedRowBatch (e.g. VectorFilterOperator) so the same batch can travel down the operators without being copied.  Or, in the case of computing new columns, VectorSelectOperator will compute new scratch columns.

So, the VectorizationContext starts as all the table columns for Map or the keys and values for Reduce and then as we go down the operators new VectorizationContext objects are cloned and their column and scratch column maps are modified.

So, some operators do not use inputObjInspectors or outputObjInspector.  Others, do use them when the vector operator unpacks batches into rows to call an row mode operator., 
I would prefer a clone of addToBatchFrom be cloned and chaged.  I know this duplicates code -- but it provides a cleaner place to have comments on the difference and not have extra code execute that doesn't provide value to the main path..

After 0.14.0 we should look at getting the vector reader(s) and Vectorizer class to create the Map top level VectorizationContext with just the columns that are needed.

Adding [~jnp], Ok, I'll rework it not to use addToBatchFrom.  I do plan on factoring out the switch statement so that can be shared, but hopefully that will be alright.

Are you ok with the changes to VectorizedRowBatch to add tracking the partition columns?, Oh, I see, the partition columns are tracked in the auxiliary object VectoeizedRowBatchCtx that knows which are the partition columns.   You should be looking closely at it., Are you saying that rather than changing VectorizedRowBatch I should just pass along the Ctx to my new acidAddToBatchFrom method and use that to figure out the partition columns?, A second version of the patch that incorporates Matt's feedback.  , 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12676025/HIVE-8474.2.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 6568 tests executed
*Failed tests:*
{noformat}
org.apache.hive.minikdc.TestJdbcWithMiniKdc.testNegativeTokenAuth
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1370/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1370/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1370/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12676025 - PreCommit-HIVE-TRUNK-Build, [~alangates] it looks great!  Thanks for refactoring the changes.

(non-binding) +1

, +1, Committed to trunk and branch 0.14.  Thanks Ashutosh and Matt for the reviews., This has been fixed in 0.14 release. Please open new jira if you see any issues.
]