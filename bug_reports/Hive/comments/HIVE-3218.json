[It's caused by having duplicated taskID for each partition of stream table. Three option is possible.
1. Do not allow this
2. Augment task-ID with partition spec
3. Combine files with same bucket ID in BucketizedHiveInputFormat

I've implemented option-2 and on testing. But option-3 seemed to be more safe (and easier).

I think this is possibly happen with bucket mapjoin. , https://reviews.facebook.net/D3933

Passed all ql/clientpositive tests. Complete test result will be updated next week., This happens with bucket mapjoin, too. It would be better to fix it along with smb join., For BucketedMapJoin it just returns invalid result, which is worse than SMBJoin case. (bucketedmapjoin5.q test is broken), I was thinking about the approaches 1,2,3.

2 seems better, since 3 would mean 1 mapper would be processing multiple files., For quries handling many partitions with many buckets, it would be possibly needed to use option 3 parallelly. I'm thinking it for another issue., comments, Rebased to trunk and added more comments, A	M		data/files/srcsbucket20.txt (118 lines)	-	-
A	M		data/files/srcsbucket21.txt (120 lines)	-	-
A	M		data/files/srcsbucket22.txt (124 lines)	-	-
A	M		data/files/srcsbucket23.txt (138 lines)

Is it sorted and bucketed ?

If yes, can you change the names of these files to 

srcsortbucket1outof4.txt
srcsortbucket2outof4.txt ..


These files might be used for a lot of tests, so it might be a good idea to be clear about the names of these files.
Sorry about being picky on the name of these files., I am missing something:

srcbucket20.txt=[srcbucket20.txt]
srcbucket21.txt=[srcbucket21.txt]
srcbucket22.txt=[srcbucket20.txt]
srcbucket23.txt=[srcbucket21.txt]
ds=2008-04-09/srcbucket20.txt=[srcbucket20.txt]
ds=2008-04-09/srcbucket21.txt=[srcbucket21.txt]
ds=2008-04-09/srcbucket22.txt=[srcbucket20.txt]
ds=2008-04-09/srcbucket23.txt=[srcbucket21.txt]

The mapping is:

small table alias -> big file table name -> list of small table file names

Shouldn't the big table file name and the small table file names be fully qualified ?
In the above example, bigtable file name is srcbucket20.txt and ds=2008-04-09/srcbucket20.txt. Why is it sometimes qualified by partition name and sometimes not ?

Similarly, shouldn't the small table file name be fully qualified ?, comments on phabricator, addressed comments, minor comments on phabricator, @Navis, can you update the test file ?
Let us try to get this in., @Namin Jain, updated test file just now., +1, Committed. Thanks Navis, Integrated in Hive-trunk-h0.21 #1575 (See [https://builds.apache.org/job/Hive-trunk-h0.21/1575/])
    HIVE-3218 Stream table of SMBJoin/BucketMapJoin with two or more 
          partitions is not handled properly (Navis via namit) (Revision 1367012)

     Result = FAILURE
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1367012
Files : 
* /hive/trunk/data/files/srcsortbucket1outof4.txt
* /hive/trunk/data/files/srcsortbucket2outof4.txt
* /hive/trunk/data/files/srcsortbucket3outof4.txt
* /hive/trunk/data/files/srcsortbucket4outof4.txt
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/BucketMatcher.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/DefaultBucketMatcher.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/ExecMapperContext.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/FileSinkOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/HashTableSinkOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/MapredLocalTask.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/BucketMapJoinOptimizer.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/SortedMergeBucketMapJoinOptimizer.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/MapJoinResolver.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/plan/BucketMapJoinContext.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/plan/HashTableSinkDesc.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/plan/MapJoinDesc.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/plan/MapredLocalWork.java
* /hive/trunk/ql/src/test/queries/clientpositive/bucketcontext_1.q
* /hive/trunk/ql/src/test/queries/clientpositive/bucketcontext_2.q
* /hive/trunk/ql/src/test/queries/clientpositive/bucketcontext_3.q
* /hive/trunk/ql/src/test/queries/clientpositive/bucketcontext_4.q
* /hive/trunk/ql/src/test/results/clientpositive/bucketcontext_1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketcontext_2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketcontext_3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketcontext_4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin5.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin_negative2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/stats11.q.out
, Integrated in Hive-trunk-hadoop2 #54 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/54/])
    HIVE-3218 Stream table of SMBJoin/BucketMapJoin with two or more 
          partitions is not handled properly (Navis via namit) (Revision 1367012)

     Result = ABORTED
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1367012
Files : 
* /hive/trunk/data/files/srcsortbucket1outof4.txt
* /hive/trunk/data/files/srcsortbucket2outof4.txt
* /hive/trunk/data/files/srcsortbucket3outof4.txt
* /hive/trunk/data/files/srcsortbucket4outof4.txt
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/BucketMatcher.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/DefaultBucketMatcher.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/ExecMapperContext.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/FileSinkOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/HashTableSinkOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/MapJoinOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/MapredLocalTask.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/BucketMapJoinOptimizer.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/SortedMergeBucketMapJoinOptimizer.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/MapJoinResolver.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/plan/BucketMapJoinContext.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/plan/HashTableSinkDesc.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/plan/MapJoinDesc.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/plan/MapredLocalWork.java
* /hive/trunk/ql/src/test/queries/clientpositive/bucketcontext_1.q
* /hive/trunk/ql/src/test/queries/clientpositive/bucketcontext_2.q
* /hive/trunk/ql/src/test/queries/clientpositive/bucketcontext_3.q
* /hive/trunk/ql/src/test/queries/clientpositive/bucketcontext_4.q
* /hive/trunk/ql/src/test/results/clientpositive/bucketcontext_1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketcontext_2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketcontext_3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketcontext_4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin1.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin5.q.out
* /hive/trunk/ql/src/test/results/clientpositive/bucketmapjoin_negative2.q.out
* /hive/trunk/ql/src/test/results/clientpositive/stats11.q.out
, This issue is fixed and released as part of 0.10.0 release. If you find an issue which seems to be related to this one, please create a new jira and link this one with new jira.]