[  HiveServer2 (HS2) is a thrift base server that enables remote clients to execute queries against hive and retrieve the results. Its an improved version of HiveServer that supports multi-client concurrency and authentication. It uses a new thrift interface with concurrency support. It is  designed to provide better support for open API clients like JDBC and ODBC. The thrift IDL is available at https://github.com/apache/hive/blob/trunk/service/if/TCLIService.thrift

How to configure -
  Configuration properties in hive-site.xml
    hive.server2.thrift.min.worker.threads - Number of minimum worker threads, default 5.
    hive.server2.thrift.max.worker.threads - Number of minimum worker threads, default 100
    hive.server2.thrift.port - Tcp port to listen on , default 10000
    hive.server2.thrift.bind.host - Tcp interface to bind to

  Env 
    HIVE_SERVER2_THRIFT_BIND_HOST - optional tcp host interface to bind to. Overrides the config file setting
    HIVE_SERVER2_THRIFT_PORT - optional tcp port# to listen on, default 10000. Overrides the config file setting

How to start
  hiveserver2.sh
      OR
  hive --service hiveserver2

Authentication -
  HiveServer2 support Anonymous (no auth), Kerberos, pass through LDAP and pluggable custom authentication.
  Configuration -
     hive.server2.authentication - Authentication mode, default NONE. Options are NONE, KERBEROS, LDAP and CUSTOM
     hive.server2.authentication.kerberos.principal - Kerberos principal for server
     hive.server2.authentication.kerberos.keytab - Keytab for server principal
     hive.server2.authentication.ldap.url - LDAP url
     hive.server2.authentication.ldap.baseDN - LDAP base DN
     hive.server2.custom.authentication.class - Custom authentication class that implements org.apache.hive.service.auth.PasswdAuthenticationProvider interface

Impersonation -
   By default HiveServer2 performs the query processing as the user that started the server process. It can be enabled to impersonate the connected user. 
   Configuration -
      hive.server2.enable.impersonation - Impersonate the connected user, default false
   OR
      hive.server2.enable.doAs - Impersonate the connected user, default false
      fs.hdfs.impl.disable.cache - Disable filesystem cache, default false
, JDBC -
   Hive includes a new JDBC client driver for HiveServer2. It supports both embedded and remote access to HiveServer2.
The JDBC connection URL format has prefix is jdbc:hive2:// and the Driver class is  org.apache.hive.jdbc.HiveDriver. Note that this is different from the old hiveserver. For remote server, the URL format is jdbc:hive2://<host>:<port>/<db>. For embedded server, the URL format is jdbc:hive2:// (no host or port)
When connecting to HiveServer2 with kerberos authentication, the URL format is jdbc:hive2://<host>:<port>/<db>;principal=<Server_Principal_of_HiveServer2>. The client needs to have a valid Kerberos ticket in the ticket cache before connecting. In case of LDAP or customer pass through authentication, the client needs to pass the valid user name and password to JDBC connection API.

Beeline Shell -
  Hive includes a new command shell Beeline that works with HiveServer2. Its a JDBC client that is based on SQLLine CLI (http://sqlline.sourceforge.net/). Thereâ€™s an detailed documentation of the SQLLine options available at http://sqlline.sourceforge.net/#manual which is applicable to Beeline., [~cwsteinbach] I can add these initial versions to wiki and update it based on the feedback., [~prasadm] please go ahead and add this to the wiki. What you have looks good to me. One thing I'd like to add is that HiveServer2 was intentionally designed to be independent of the RPC layer. Currently we only support Thrift, but in the future we should also be able to support Avro or Protobufs without having to modify the upper layers of the system., One more thing: the hiveserver2 launch script doesn't have a .sh suffix., Added the documentation under https://cwiki.apache.org/confluence/display/Hive/Setting+up+HiveServer2]