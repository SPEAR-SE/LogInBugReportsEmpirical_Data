[To reproduce this hang, you can follow these steps:
1. Run hadoop in distributed or pseudodistributed mode. (We were running hadoop-2.6.0 on our clusters when I first saw this. I was able to reproduce this in the pseudodistributed mode but not in the local mode.)
2. Install hive. (I was able to reproduce it on 0.13.1 and 1.1.0)
3. Install tez jars in the hadoop classpath (but don't setup tez.lib.uris - because we want SessionState.start to throw an exception.)
4. Run hive
{code}
set hive.exec.parallel=true;
set hive.execution.engine=tez;
create table sometable(somecol INT);
select count(*) from sometable;  --this query will hang after printing an exception. With the attached patch, we will get the prompt back.
{code}, Can someone review this?, I tried this with hive-0.13.1. The query works fine for me
{code}
hive> set hive.exec.parallel=true;
hive> set hive.execution.engine=tez;
hive> create table sometable(somecol INT);
OK
Time taken: 3.363 seconds

hive> select count(*) from sometable;
Query ID = myapp_20150514182020_ac958b79-4939-4092-a1b7-4bf58036dca5
Total jobs = 1
Launching Job 1 out of 1


Status: Running (application id: application_1431616132488_3229)

Map 1: -/-	Reducer 2: 0/1	
Map 1: -/-	Reducer 2: 0/1	
Map 1: -/-	Reducer 2: 0/1	
Map 1: -/-	Reducer 2: 1/1	
Status: Finished successfully
OK
0
Time taken: 14.551 seconds, Fetched: 1 row(s)
{code}, It will work fine if tez is configured properly - if tez is not configured properly, instead of printing an exception and showing the prompt (so that I can run another query) - it prints an exception and gets stuck (no prompt.), +1, Pushed to master. Thanks, Rohit!, [~ragarwal] If you are enabling exec.parallel in your environment you might also get hit by HIVE-10404 so you may want to tackle that one too., Thank you for committing this [~ashutoshc].

We have done some work around cleaning up non-threadsafe code in Hive, will ask around to see if HIVE-10404 can be a problem for us. Thanks for the heads up!]