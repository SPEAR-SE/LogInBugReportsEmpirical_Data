[Here's the query that's failing. It hasn't been touched since 2009 so likely the change happened elsewhere.

{code}
$ cat ql/src/test/queries/clientnegative/script_broken_pipe1.q
set hive.exec.script.allow.partial.consumption = false;
-- Tests exception in ScriptOperator.close() by passing to the operator a small amount of data
SELECT TRANSFORM(*) USING 'true' AS a, b, c FROM (SELECT * FROM src LIMIT 1) tmp;
{code}

The logs are a little difficult to read since other tests throw errors too, but I think this is the actual error. The line number doesn't make sense though because looking at that class it has many fewer lines.

{code}
junit.framework.AssertionFailedError: Client Execution failed with error code = 0
See build/ql/tmp/hive.log, or try "ant test ... -Dtest.silent=false" to get more logs.
	at junit.framework.Assert.fail(Assert.java:50)
	at org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_script_broken_pipe1(TestNegativeCliDriver.java:10737)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:243)
	at junit.framework.TestSuite.run(TestSuite.java:238)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:518)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1052)
	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:906){code}
{code}, The line number discrepancy is because TestNegativeCliDriver.java is generated from {{ql/src/test/templates/TestNegativeCliDriver.vm}}. When running just a single query the generated test driver is much smaller., Curiously, the MR job is failing as expected:

https://builds.apache.org/job/Hive-trunk-h0.21/1467/artifact/hive/build/ql/test/logs/clientnegative/script_broken_pipe1.q.out.orig/*view*/

{code}
PREHOOK: query: -- Tests exception in ScriptOperator.close() by passing to the operator a small amount of data
SELECT TRANSFORM(*) USING 'true' AS a, b, c FROM (SELECT * FROM src LIMIT 1) tmp
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: file:/tmp/jenkins/hive_2012-06-04_14-38-51_416_5197288142356377226/-mr-10000
Execution failed with exit status: 2
Obtaining error information

Task failed!
Task ID:
  Stage-1

Logs:

/home/jenkins/jenkins-slave/workspace/Hive-trunk-h0.21/hive/build/ql/tmp//hive.log
FAILED: Execution Error, return code 2 from org.apache.hadoop.hive.ql.exec.MapRedTask
{code}, The MR job is definitely failing. From hive.log:

{code}
2012-06-03 14:14:00,753 ERROR ql.Driver (SessionState.java:printError(400)) - FAILED: Execution Error, return code 20003 from org.apache.hadoop.hive.ql.exec.MapRedTask. An error occurred when trying to close the Operator running your custom script.
{code}

At this point I'm pretty stumped. Poking through the code and all available logs it looks like this test should be failing on Jenkins, and I can't reproduce locally.

Any objections to disabling the test and leaving this bug open in case anyone wants to revisit looking at why its failing? Since it already fails there's no loss in coverage., Not sure if this is relevant, but {{build/ql/test/logs/clientnegative/script_broken_pipe1.q.out.orig}} appears to be the output of the test query. This might be obvious with someone more familiar with the tests. Looking at builds that passed, the file always exists and looks like the one I copy/pasted above. All builds that failed do not have the file.

For example, the most recent build 1467 passed and this file exists:

https://builds.apache.org/job/Hive-trunk-h0.21/1467/artifact/hive/build/ql/test/logs/clientnegative/script_broken_pipe1.q.out.orig/*view*/


Build 1465 throws a 404 for that same file (build 1464 failed for what looks like a jenkins issue?):

https://builds.apache.org/job/Hive-trunk-h0.21/1465/artifact/hive/build/ql/test/logs/clientnegative/script_broken_pipe1.q.out.orig/*view*/, This file always exists, for both tests that pass and fail, but looks different based on the return status:

SUCCESSFUL JOB: https://builds.apache.org/job/Hive-trunk-h0.21/1467/artifact/hive/build/ql/test/logs/clientnegative/script_broken_pipe1.q.out/*view*/

{code}
PREHOOK: query: -- Tests exception in ScriptOperator.close() by passing to the operator a small amount of data
SELECT TRANSFORM(*) USING 'true' AS a, b, c FROM (SELECT * FROM src LIMIT 1) tmp
PREHOOK: type: QUERY
PREHOOK: Input: default@src
#### A masked pattern was here ####
Execution failed with exit status: 2
Obtaining error information

Task failed!
Task ID:
  Stage-1

Logs:

#### A masked pattern was here ####
FAILED: Execution Error, return code 2 from org.apache.hadoop.hive.ql.exec.MapRedTask
{code}


FAILED JOB: https://builds.apache.org/job/Hive-trunk-h0.21/1465/artifact/hive/build/ql/test/logs/clientnegative/script_broken_pipe1.q.out/*view*/

{code}
PREHOOK: query: -- Tests exception in ScriptOperator.close() by passing to the operator a small amount of data
SELECT TRANSFORM(*) USING 'true' AS a, b, c FROM (SELECT * FROM src LIMIT 1) tmp
PREHOOK: type: QUERY
PREHOOK: Input: default@src
PREHOOK: Output: file:/tmp/jenkins/hive_2012-06-03_14-10-42_578_7952591156793146133/-mr-10000
POSTHOOK: query: -- Tests exception in ScriptOperator.close() by passing to the operator a small amount of data
SELECT TRANSFORM(*) USING 'true' AS a, b, c FROM (SELECT * FROM src LIMIT 1) tmp
POSTHOOK: type: QUERY
POSTHOOK: Input: default@src
POSTHOOK: Output: file:/tmp/jenkins/hive_2012-06-03_14-10-42_578_7952591156793146133/-mr-10000
{code}, This patch disables {{script_broken_pipe1.q}} which from the Jenkins build history should cause the build to start passing.

https://reviews.facebook.net/D3525

Of course, disabling tests is not ideal but since this will cause the build to pass the benefit seems there. A followup issue could be opened to fix it if there's interest., Yeah its really annoying that irregular and inconsistent failure of this test introduce huge irregularity in hudson test outputs. Quite a few svn commits are reported as failure where actual culprit is this test which makes hudson less reliable. If no one wants to investigate this further, I will commit Travis's patch and will open a follow-up jira for later investigation., Looks like no-one is up for it. So, lets disable this.

@Travis, the way we disable the test is via EXCLUDE_MAJOR_VERSION macro. Lets disable this on all versions. See, example on HIVE-3303. I will test and commit your patch., Sg, I'll take a look at how disabling works and update the patch. Thanks! I'm really excited about having a reliable test suite so I have more confidence changes we're making don't break things :), I think it would nice to continue running this test and simply ignore the cases where it fails. It looks like this can be accomplished with JUnit's @Ignore annotation: http://kentbeck.github.com/junit/javadoc/latest/org/junit/Ignore.html

, I ran into the same issue. It affects both script_broken_pipe1.q as well as minimr_broken_pipe.q. script_broken_pipe3.q has the same problem, but it won't cause the test to fail - just to not test what it was intended to do.

The test seems to assume that the user process (bash's "true") exits and closes its stdin before the ScriptOperator closes the associated output (in the close method). There is however no guarantee that things happen in this sequence and if they don't there will be no exception thrown.

I have rewritten the tests using two ScriptOperators in the pipeline. The first one will exit properly, the second one will throw the exception. Closing the first ScriptOperator (flushing buffers, waitFor...) should ensure that the second user process had a chance to exit, although strictly speaking there is still no guarantee. I've run this a number of time and wasn't able to reproduce the issue with the fix. , +1 , Committed to trunk. Thanks, Gunther!, Integrated in Hive-trunk-h0.21 #1845 (See [https://builds.apache.org/job/Hive-trunk-h0.21/1845/])
    HIVE-3084 : Hive CI failing due to script_broken_pipe1.q (Gunther Hagleitner via Ashutosh Chauhan) (Revision 1418841)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1418841
Files : 
* /hive/trunk/ql/src/test/queries/clientnegative/minimr_broken_pipe.q
* /hive/trunk/ql/src/test/queries/clientnegative/script_broken_pipe1.q
* /hive/trunk/ql/src/test/queries/clientnegative/script_broken_pipe3.q
* /hive/trunk/ql/src/test/results/clientnegative/minimr_broken_pipe.q.out
* /hive/trunk/ql/src/test/results/clientnegative/script_broken_pipe1.q.out
* /hive/trunk/ql/src/test/results/clientnegative/script_broken_pipe3.q.out
, Integrated in Hive-trunk-hadoop2 #54 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/54/])
    HIVE-3084 : Hive CI failing due to script_broken_pipe1.q (Gunther Hagleitner via Ashutosh Chauhan) (Revision 1418841)

     Result = ABORTED
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1418841
Files : 
* /hive/trunk/ql/src/test/queries/clientnegative/minimr_broken_pipe.q
* /hive/trunk/ql/src/test/queries/clientnegative/script_broken_pipe1.q
* /hive/trunk/ql/src/test/queries/clientnegative/script_broken_pipe3.q
* /hive/trunk/ql/src/test/results/clientnegative/minimr_broken_pipe.q.out
* /hive/trunk/ql/src/test/results/clientnegative/script_broken_pipe1.q.out
* /hive/trunk/ql/src/test/results/clientnegative/script_broken_pipe3.q.out
]