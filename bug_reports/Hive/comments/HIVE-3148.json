[The ability to specify the location of partitions on a per-partition basis was added in HIVE-91. Unfortunately, if you specify more than one partition in the same statement, the second partition and all subsequent partitions will have the same storage location as the first partition:

{noformat}
hive> CREATE TABLE t(x INT) PARTITIONED BY (p INT);
OK
hive> ALTER TABLE t ADD
        PARTITION (p=1) LOCATION '/Users/carl/1'
        PARTITION (p=2) LOCATION '/Users/carl/2';
OK
hive> DESCRIBE FORMATTED t PARTITION(p=1);
OK
...
Location:           	file:/Users/carl/1  	 
...
hive> DESCRIBE FORMATTED t PARTITION(p=2);
OK
Location:           	file:/Users/carl/1     <----- WRONG!
hive>
{noformat}
, I also encountered the same problem. It's better to fix this, or user just gets an error or warning. It's always bad to silently ignore something without notifying the user the actual behavior.   , Attached a candiate patch for this bug. Slightly modified the grammar and sematic analyzer. Passed the test case above. , @cwsteinbach @shane.huang
Does this patch provide correct behavior (i.e., assigning different storage locations to different partitions),  or does it only provide an error/warning?, This patch provide correct behavior. Result like below:

hive> CREATE TABLE t(x INT) PARTITIONED BY (p INT);
OK
Time taken: 0.183 seconds
hive> ALTER TABLE t ADD PARTITION (p=1) LOCATION '/Users/carl/1' PARTITION (p=2)LOCATION '/Users/carl/2';
OK
Time taken: 0.384 seconds
hive> DESCRIBE FORMATTED t PARTITION(p=1);
OK
...
Location:               hdfs://master:54310/Users/carl/1
...
hive> DESCRIBE FORMATTED t PARTITION(p=2);
OK
...
Location:               hdfs://master:54310/Users/carl/2
..., I dumped the AST of the ALTER command using explain, and found it already build the wrong node, as below.  

  (TOK_ALTERTABLE_ADDPARTS t (TOK_PARTSPEC (TOK_PARTVAL p 1)) (TOK_PARTITIONLOCATION '/Users/carl/1') (TOK_PARTSPEC (TOK_PARTVAL p 2)) (TOK_PARTITIONLOCATION '/Users/carl/1'))

In the above AST, TOK_PARTSPEC (specification of partition) and TOK_PARTITIONLOCATION (partition location) nodes are all siblings, which does not make much sense to me. So in my patch I rearranged the AST a bit by attaching the TOK_PARTITIONLOCATION to TOK_PARTSPEC node, as below:
 
  (TOK_ALTERTABLE_ADDPARTS t (TOK_PARTSPEC (TOK_PARTVAL p 1) (TOK_PARTITIONLOCATION '/Users/carl/1')) (TOK_PARTSPEC (TOK_PARTVAL p 2) (TOK_PARTITIONLOCATION '/Users/carl/2')))

This way locations can correctly identified and analyzed.  
, Prepared a patch for trunk. , Patch ready for review., @Shengsheng: Please submit a code review request on reviews.apache.org. Thanks., @Carl @Shengsheng: This looks a useful fix - we have some of the same issues with our customers too; can anyone help confirm whether this is a valid patch? Thanks., @Carl @JQ I submitted a review request on reviews.apache.org. See https://reviews.apache.org/r/5476/. Changed status to Patch Available., Review request submitted @ https://reviews.apache.org/r/5476/ , @Shengsheng: Doesn't look like the diff was attached to the review request., @Carl attached the diff to review request., @Shengsheng: I left some comments on reviewboard. Thanks., Add a unit test. Also modified QTestUtil to escape pattern mask. Updated the diff on the request on reviews.apache.org. , @Carl @Namit @JQ I've attached the new patch with test case and updated request at reviewboard. https://reviews.apache.org/r/5476/
Is there anything else I need to do?, Do we plan to incorporate this patch in 0.10.0?]