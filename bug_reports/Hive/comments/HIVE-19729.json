[Have you seen this often?

Sadly we do not have any logs for this failing tests, but the exception suggest this is a general problem with metastore client closure, not specific to this test., [~pvary], can we then catch the exception at closure if you consider it meaningless? Test history suggests this happens rather often, hence causes some test runs to fail intermittently. Or maybe the annotating it with retry, i.e., {{RetryTestRunner}}, would help...?, I've seen it today...I've not seen it reported before; yes it seems the "remote" is broken somehow, And that only the client closure. The tests are running fine otherwise...

Strange...

The problem if one metastore.client Test has this problem, then all of them has this problem :(, [~jcamachorodriguez]: To have green results we might want/should to do it as a temporary fix. On the other hand it might indicate a real problem by the way, so fixing only the tests might hide something important., [~pvary], absolutely agree, retry is just a workaround. If we prefer to disable it as [~kgyrtkirk] was proposing till this is fixed, I am fine with that too., [~jcamachorodriguez]: How can I access the test history, which shows how often this test is failing? It would be interesting to see the statistics. I would prefer the solution proposed by you: "catch the exception at closure", since I think the tests are doing important checks, and I think the flakiness comes from a different source. It seems very strange that it is possible to run plenty of requests against a HMS Client, but it fails to when the we try to close it., [~pvary], when you check a certain test in Jenkins, you can click on the History link on the left side to see its runs history., | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 21s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 42s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 16s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  3m  1s{color} | {color:blue} standalone-metastore in master has 215 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 53s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 47s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 39s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 15s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  2m 56s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 53s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 11s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 18m 24s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Optional Tests |  asflicense  javac  javadoc  findbugs  checkstyle  compile  |
| uname | Linux hiveptest-server-upstream 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1+deb8u1 (2016-09-03) x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /data/hiveptest/working/yetus_PreCommit-HIVE-Build-11388/dev-support/hive-personality.sh |
| git revision | master / 338a2d4 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| modules | C: standalone-metastore U: standalone-metastore |
| Console output | http://104.198.109.242/logs//PreCommit-HIVE-Build-11388/yetus.txt |
| Powered by | Apache Yetus    http://yetus.apache.org |


This message was automatically generated.

, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12925563/HIVE-19729.01.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 14377 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.metastore.client.TestDefaultConstraint.getNoSuchCatalog[Remote] (batchId=213)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/11388/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/11388/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-11388/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.YetusPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12925563 - PreCommit-HIVE-Build, I haven't seen this lately]