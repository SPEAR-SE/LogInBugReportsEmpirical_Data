[+1, test dyn_part_empty.q failed - can you take a look ?, dyn_part_empty.q is having intermittent failures. I tried the clean trunk and it sometimes fails as well. The failure is not critical -- exception was printed to log file rather than console. It should not be caused by this patch.

However, I did find 2 diffs in skewjoin.q and bucketmapjoin2.q. The former has a simple fix. I'm looking at why bucketmapjoin2.q has a slightly different plan. , Uploading a new patch that resolved the diff in bucketmapjoin2.q. I'm rerunning unit tests. , I will take a look, combine2.q is failing - , Uploading a new patch that passed all unit tests. The only change is in ConditionalResolveMerge.java by introducing a new boolean doMerge rather than rely on the condition totalSize > 0. , Comments for getMergeSize are wrong - that function never returns 0.

Why are you setting reducers for doing the merge for dynamic partitions - shouldnt it be a
map-only job ?, getMergeSize() could return 0 when there are multiple files generated but each file is an empty file. bucketmapjoin2.q actually hit this case where there are multiple mappers/reducers and non of them produces results. 

The comment about setNumberReducers is taken. The function does not only setup number of reducers but also set up min split size. So I rename it to setupMapRedWork. We cannot assume all merge tasks are map only because the parameters hive.mergejob.maponly may be false and the compiler may generate a MapReduce task. I also found a bug in GenMRFileSink1.createMergeJob() where the hive.mergejob.maponly should be checked rather than hive.merge.mapfiles and hive.merge.mapredfiles. The latter 2 are already checked before createMergeJob() is called. 

Uploading a new patch containing the change. I'm also running unit tests. , Mostly looks good - a minor comment.


In the new test that you added, the merge job is a map-only job although you are using HiveInputFormat
This is because of the fact that you are using hadoop 20 which supports CombineHiveIF.
Do you think that is the correct behavior ? Looks OK, just wanted to confirm. , That's expected behavior. The merge job will check if the CombineHiveInputFormat is supported. If so it will use that for the merge job although the default hive.input.format is different. Setting input format for the merge job is done at GenMRFileSink1.java:375., Thats fine

+1, Committed. Thanks Ning]