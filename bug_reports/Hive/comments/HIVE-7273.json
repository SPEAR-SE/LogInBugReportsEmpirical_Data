[I created this jira because Hive-4605 is closed by not reproducible.

Looks like this issue exists in both 0.11 and 0.12., I went through the code of FileSink operator
The code is like this.
{code:java}
         if ((bDynParts || isSkewedStoredAsSubDirectories)
              && !fs.exists(finalPaths[idx].getParent())) {
            fs.mkdirs(finalPaths[idx].getParent());
          }
{code}
I am wondering why we should check bDynParts and isSkewedStoredAsSubDirectories. In the code, the output is move to finalPath no matter what the values of bDynParts and isSkewedStoredAsSubDirectories are. Since the date move is not avoidable, why not change the code to the following to make sure the path exists before moving the file.
{code:java}
         if (!fs.exists(finalPaths[idx].getParent())) {
            fs.mkdirs(finalPaths[idx].getParent());
          }
{code}, The directory is expected to be created in ExecDriver before job submitting. Could you provide a query which can reproduce the situation? Fail of other tasks in the query also can make exceptions like above., I can not provide a simple query to trigger this issue. 
In our prod environment, the query is a little bit complex. We use lateral view and put multiple insert in one query shot. The data size of the input is roughly about 170GB.
I am trying to reproduce this issue in my local env. So far, I can not reproduce it.
 
But I changed the code logic as my proposal. Then, the query succeeded.

Could you show me the code about create the finalOutputPath in ExecDriver? I would like to go through the code of dir creation. It may be helpful to find out the reproduce step.

Thanks., You can see the code in ExecDriver#416
{code}
      Utilities.createTmpDirs(job, mWork);
      Utilities.createTmpDirs(job, rWork);
{code}
This finds FileSinkOperator which is not for bDynParts or isSkewedStoredAsSubDirectories and creates temporary directory for it., Thanks [~navis]. I will check it. ]