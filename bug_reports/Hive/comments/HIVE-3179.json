[The attached patch fixes the problem as well as changes a unit test that actually tests this behavior. The unit test fails if our fix to {{LazyHBaseRow}} is not applied.

We're not sure if this is the best way to fix this problem as it circumvents the optimization being done by the fieldsInited field. Ideally instead of returning null on an empty HBase cell this would insert some kind of marker but adding an empty ByteArrayRef is not interpreted as NULL but as an empty value (which makes sense).

In short: This fixes the bug at the cost of some performance for NULL (non-existing) fields in HBase., We could add a second boolean array to go with {{fieldsInited}} that's called {{fieldsNull}} that caches those fields. Not sure if that's needed though.

Thanks to my colleague Oliver Meyn who actually looked at the code and found the fix, I only packaged it up and added the unit test.

, @Lars: Please post a review request on reviews.apache.org. Thanks., @Carl: Sure: https://reviews.apache.org/r/5542/ thanks for the reminder., As far as I can tell this is still an issue. Would anyone mind doing a review on this one?, I have verified this is an issue with trunk, the patch applies, and the patch addresses the issue.

{noformat}
hive> select c1, c3, c2, c2, c3, c3, c1 from hive_hbase_test;
Total MapReduce jobs = 1
Launching Job 1 out of 1
Number of reduce tasks is set to 0 since there's no reduce operator
Starting Job = job_201302071609_0002, Tracking URL = http://localhost:50030/jobdetails.jsp?jobid=job_201302071609_0002
Kill Command = /opt/local/hadoop-1.1.1/libexec/../bin/hadoop job  -kill job_201302071609_0002
Hadoop job information for Stage-1: number of mappers: 1; number of reducers: 0
2013-02-07 16:10:31,826 Stage-1 map = 0%,  reduce = 0%
2013-02-07 16:10:34,846 Stage-1 map = 100%,  reduce = 0%
2013-02-07 16:10:36,861 Stage-1 map = 100%,  reduce = 100%
Ended Job = job_201302071609_0002
MapReduce Jobs Launched: 
Job 0: Map: 1   HDFS Read: 260 HDFS Write: 60 SUCCESS
Total MapReduce CPU Time Spent: 0 msec
OK
c1-1	c3-1	c2-1	c2-1	c3-1	c3-1	c1-1
c1-2	NULL	NULL	NULL	NULL	NULL	c1-2
Time taken: 10.702 seconds, Fetched: 2 row(s)
hive> 
{noformat}, +1., Running TestHBaseCliDriver tests..., Mark,

How did the tests turn out?, They timed out on my pseudo-distributed laptop but that most likely is an environment issue local to me. But looks like Lars mentioned that he had run the tests, so that should be ok.

I will try to fix the environment, but don't wait on me., [~cwsteinbach] do you have time to look at this patch?, Passed all tests and committed to trunk. Thanks Lars., Integrated in Hive-trunk-hadoop2 #160 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/160/])
    HIVE-3179 HBase Handler doesn't handle NULLs properly (Lars Francke via Navis) (Revision 1467874)

     Result = FAILURE
navis : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1467874
Files : 
* /hive/trunk/hbase-handler/src/java/org/apache/hadoop/hive/hbase/LazyHBaseRow.java
* /hive/trunk/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java
, Integrated in Hive-trunk-h0.21 #2065 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2065/])
    HIVE-3179 HBase Handler doesn't handle NULLs properly (Lars Francke via Navis) (Revision 1467874)

     Result = FAILURE
navis : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1467874
Files : 
* /hive/trunk/hbase-handler/src/java/org/apache/hadoop/hive/hbase/LazyHBaseRow.java
* /hive/trunk/hbase-handler/src/test/org/apache/hadoop/hive/hbase/TestLazyHBaseObject.java
]