[create table tmp_tx1 (key string, value string);

insert overwrite table tmp_tx1 select * from src where key < 10;

create table tmp_tx2 (key int, value string);

insert overwrite table tmp_tx2 select * from src where key < 10;

select * from
(
  select key, count(1) from tmp_tx1 group by key
    union all
  select key, count(1) from tmp_tx2 group by key
)
u;


The above also fails. Basically, if the types of the union dont match, we get a run-time error.


The query:


select * from
(
  select key, count(1) from tmp_tx1 group by key
    union all
  select cast(key as string) as key, count(1) from tmp_tx2 group by key
)
u;



works fine, Namit, that looks like the issue in the JIRA
https://issues.apache.org/jira/browse/HIVE-2305, Even a error message for now is fine.
The implicit type conversion can be done later., Hi, Kevin Wilfong.
You can try the hql: "from (select key, value, cast( count(1) as int) count from src group by key, value union all select NULL as key, value,cast( count(1) as int) count from src group by value) a select count;". You should modify the data type of ’count‘, otherwise the data type of  'count' in the  intermediate result  is void type, so it will cause "java.lang.NullPointerException". In addition, if the hql sentences have union all operator, you should use 'AS' as the column's alias.]