[The bug is related to outputting the input array.  For example, both of these work correctly:

{code}
select x.b from foo lateral view explode(a) x as b;
select size(a), x.b from foo lateral view explode(a) x as b;
{code}
, This is the exception:

{code}
2011-11-01 10:20:06,139 FATAL ExecMapper (ExecMapper.java:map(160)) - org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row {"a":[1,2]}
        at org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:546)
        at org.apache.hadoop.hive.ql.exec.ExecMapper.map(ExecMapper.java:143)
        at org.apache.hadoop.mapred.MapRunner.run(MapRunner.java:50)
        at org.apache.hadoop.mapred.MapTask.runOldMapper(MapTask.java:358)
        at org.apache.hadoop.mapred.MapTask.run(MapTask.java:307)
        at org.apache.hadoop.mapred.LocalJobRunner$Job.run(LocalJobRunner.java:177)
Caused by: java.util.ConcurrentModificationException
        at java.util.AbstractList$Itr.checkForComodification(AbstractList.java:372)
        at java.util.AbstractList$Itr.next(AbstractList.java:343)
        at org.apache.hadoop.hive.ql.udf.generic.GenericUDTFExplode.process(GenericUDTFExplode.java:73)
        at org.apache.hadoop.hive.ql.exec.UDTFOperator.processOp(UDTFOperator.java:98)
        at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:471)
        at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:744)
        at org.apache.hadoop.hive.ql.exec.SelectOperator.processOp(SelectOperator.java:84)
        at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:471)
        at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:744)
        at org.apache.hadoop.hive.ql.exec.LateralViewForwardOperator.processOp(LateralViewForwardOperator.java:37)
        at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:471)
        at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:744)
        at org.apache.hadoop.hive.ql.exec.TableScanOperator.processOp(TableScanOperator.java:78)
        at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:471)
        at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:744)
        at org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:527)
        ... 5 more
{code}
, The exception is happening when I'm trying to use explode map as well

DDL
CREATE EXTERNAL TABLE ver_data
(
  key STRING,
  id STRING,
  date_time STRING,
  model STRING,
  version STRING,
  sid STRING,
  message STRING,
  tags MAP<STRING,STRING>
);


HQL Query 
SELECT ver_data.*,t1.* FROM ver_data LATERAL VIEW explode(tags) t1 AS param_name,param_value;

This Query throws a concurrent modification exception on a LinkedHashMap while doing the join. If I modify the query and avoids the map column('tags') in the retrieval/join,then the query executes successfully.

The below modified query executes successfully
SELECT ver_data.key, ver_data.id, ver_data.date_time, ver_data.model, ver_data.version, ver_data.sid, ver_data.message,
t1.* FROM ver_data LATERAL VIEW explode(tags) t1 AS param_name,param_value;

Stack Trace When using Joins on maps with Lateral View
	2011-11-07 07:18:22,679 FATAL ExecMapper: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row {"key":"0000","id":"10001",...}
	at org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:546)
	at org.apache.hadoop.hive.ql.exec.ExecMapper.map(ExecMapper.java:143)
	at org.apache.hadoop.mapred.MapRunner.run(MapRunner.java:50)
	at org.apache.hadoop.mapred.MapTask.runOldMapper(MapTask.java:391)
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:325)
	at org.apache.hadoop.mapred.Child$4.run(Child.java:270)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:396)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1127)
	at org.apache.hadoop.mapred.Child.main(Child.java:264)
Caused by: java.util.ConcurrentModificationException
	at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:392)
	at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:391)

, The map issue on explode was seen on a latest build from hive trunk.
Maps were supported with LATERAL VIEW explode() with JIRA HIVE-1735 on 0.8 branch., I am getting the same error.  It seems to work when the array has one element, but as soon as more than one is added this error appears., navis requested code review of "HIVE-2540 [jira] LATERAL VIEW with EXPLODE produces ConcurrentModificationException".
Reviewers: JIRA

  DPAL-1095 LATERAL VIEW with EXPLODE produces ConcurrentModificationException

  The following produces ConcurrentModificationException on the for loop inside EXPLODE:

  create table foo as select array(1, 2) a from src limit 1;
  select a, x.b from foo lateral view explode(a) x as b;

TEST PLAN
  EMPTY

REVISION DETAIL
  https://reviews.facebook.net/D2805

AFFECTED FILES
  hbase-handler/src/java/org/apache/hadoop/hive/hbase/LazyHBaseCellMap.java
  ql/src/test/queries/clientpositive/udf_explode.q
  ql/src/test/queries/clientpositive/udtf_explode.q
  ql/src/test/results/clientpositive/udf_explode.q.out
  ql/src/test/results/clientpositive/udtf_explode.q.out
  serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyArray.java
  serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java

MANAGE HERALD DIFFERENTIAL RULES
  https://reviews.facebook.net/herald/view/differential/

WHY DID I GET THIS EMAIL?
  https://reviews.facebook.net/herald/transcript/6393/

Tip: use the X-Herald-Rules header to filter Herald messages in your client.
, navis updated the revision "HIVE-2540 [jira] LATERAL VIEW with EXPLODE produces ConcurrentModificationException".
Reviewers: JIRA

  Fixed test fails

REVISION DETAIL
  https://reviews.facebook.net/D2805

AFFECTED FILES
  hbase-handler/src/java/org/apache/hadoop/hive/hbase/LazyHBaseCellMap.java
  ql/src/test/queries/clientpositive/udf_explode.q
  ql/src/test/queries/clientpositive/udtf_explode.q
  ql/src/test/results/clientpositive/udf_explode.q.out
  ql/src/test/results/clientpositive/udtf_explode.q.out
  serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyArray.java
  serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java
, passed all tests, navis updated the revision "HIVE-2540 [jira] LATERAL VIEW with EXPLODE produces ConcurrentModificationException".
Reviewers: JIRA

  1. Removed dummy column in LazyHBaseCellMap (mistake)

REVISION DETAIL
  https://reviews.facebook.net/D2805

AFFECTED FILES
  ql/src/test/queries/clientpositive/udf_explode.q
  ql/src/test/queries/clientpositive/udtf_explode.q
  ql/src/test/results/clientpositive/udf_explode.q.out
  ql/src/test/results/clientpositive/udtf_explode.q.out
  serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyArray.java
  serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java
, The test that you added is failing., It passes in my environment. I'll test again after rebasing on trunk., @Namit Jain
I cannot find any failure with this patch. Could this be caused by the difference of environment?, I will try again., Committed. Thanks Navis, Integrated in Hive-trunk-h0.21 #1453 (See [https://builds.apache.org/job/Hive-trunk-h0.21/1453/])
    HIVE-2540 LATERAL VIEW with EXPLODE produces ConcurrentModificationException
(Navis via namit) (Revision 1343036)

     Result = SUCCESS
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1343036
Files : 
* /hive/trunk/ql/src/test/queries/clientpositive/udf_explode.q
* /hive/trunk/ql/src/test/queries/clientpositive/udtf_explode.q
* /hive/trunk/ql/src/test/results/clientpositive/udf_explode.q.out
* /hive/trunk/ql/src/test/results/clientpositive/udtf_explode.q.out
* /hive/trunk/serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyArray.java
* /hive/trunk/serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java
, What is the actual fix version ?, It's not on hive-0.9.x. Would be included hive-0.10.0 maybe? , Integrated in Hive-trunk-hadoop2 #54 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/54/])
    HIVE-2540 LATERAL VIEW with EXPLODE produces ConcurrentModificationException
(Navis via namit) (Revision 1343036)

     Result = ABORTED
namit : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1343036
Files : 
* /hive/trunk/ql/src/test/queries/clientpositive/udf_explode.q
* /hive/trunk/ql/src/test/queries/clientpositive/udtf_explode.q
* /hive/trunk/ql/src/test/results/clientpositive/udf_explode.q.out
* /hive/trunk/ql/src/test/results/clientpositive/udtf_explode.q.out
* /hive/trunk/serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyArray.java
* /hive/trunk/serde/src/java/org/apache/hadoop/hive/serde2/lazy/LazyMap.java
, This issue is fixed and released as part of 0.10.0 release. If you find an issue which seems to be related to this one, please create a new jira and link this one with new jira., We're still seeing this issue with Hive 0.12 (slightly patched as it's the one from CDH5):

{quote}
2014-04-22 16:18:50,304 WARN [main] org.apache.hadoop.mapred.YarnChild: Exception running child : java.lang.RuntimeException: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row {"product_id":140719,"active":null,"avg_product_price":null,"base_cats":[[1247,818,821,902,905],[1247,818,821,902,906],[1247,818,821,902,909]]}
	at org.apache.hadoop.hive.ql.exec.mr.ExecMapper.map(ExecMapper.java:175)
	at org.apache.hadoop.mapred.MapRunner.run(MapRunner.java:54)
	at org.apache.hadoop.mapred.MapTask.runOldMapper(MapTask.java:430)
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:342)
	at org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:168)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:415)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1548)
	at org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:163)
Caused by: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row {"product_id":140719,"active":null,"avg_product_price":null,"base_cats":[[1247,818,821,902,905],[1247,818,821,902,906],[1247,818,821,902,909]]}
	at org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:529)
	at org.apache.hadoop.hive.ql.exec.mr.ExecMapper.map(ExecMapper.java:157)
	... 8 more
Caused by: java.util.ConcurrentModificationException
	at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:859)
	at java.util.ArrayList$Itr.next(ArrayList.java:831)
	at org.apache.hadoop.hive.ql.udf.generic.GenericUDTFExplode.process(GenericUDTFExplode.java:92)
	at org.apache.hadoop.hive.ql.exec.UDTFOperator.processOp(UDTFOperator.java:113)
	at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:504)
	at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:844)
	at org.apache.hadoop.hive.ql.exec.SelectOperator.processOp(SelectOperator.java:87)
	at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:504)
	at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:844)
	at org.apache.hadoop.hive.ql.exec.LateralViewForwardOperator.processOp(LateralViewForwardOperator.java:37)
	at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:504)
	at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:844)
	at org.apache.hadoop.hive.ql.exec.TableScanOperator.processOp(TableScanOperator.java:91)
	at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:504)
	at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:844)
	at org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:519)
	... 9 more
{quote}

I haven't had time to check whether this patch is actually included but I'd expect it to be. Shall I open a new issue?]