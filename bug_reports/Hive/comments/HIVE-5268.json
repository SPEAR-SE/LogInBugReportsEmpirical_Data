[Thanks for raising this Vaibhav. We have a similar patch which cleans up session related info when network issues cause client disconnection or clients fail to close sessions. The patch is available for Hive-11 and am porting that to Hive12 and trunk. Unfortunately I didnt create the JIRA earlier. The patch cleanups aggressively as soon as the client disconnects. Based on Carl's feedback from a hive meetup, we would like to have a session timeout after which all idle/disconnected sessions are cleaned. I was working towards that.

Have you started working on this? If not, can I start by uploading the aggressive patch I have and then go forward with the improvements?, Thanks [~thiruvel]! I haven't started yet and if you post your progress so far, it would be great. What are your thoughts on session timeout? You might want to take a look at [HIVE-5217|https://issues.apache.org/jira/browse/HIVE-5217] which I was thinking of piggybacking on to detect timeouts, but I haven't given a lot of thought to it. , [~thiruvel]: It would be great if you can upload the patch you were mentioning. I was curious about your cleanup the approach. Thanks a lot! , Sorry, my bad. Let me upload what I have., Attaching a preliminary patch for branch 12. As mentioned before, this patch is aggressive (was a start) in cleaning up resources on server side. As soon as a client disconnects the resources are cleaned up on HS2 (if a query is running during disconnection, the resources are cleaned up at the end of the query). This approach was designed for Hive10 and I am working on porting it to trunk and a patch will be available for Hive12 too. The newer approach will handle disconnects during async query execution and also have timeouts after which handles/sessions will be cleaned up instead of the existing aggressive approach.

Vaibhav, can I assign this to myself if you arent working on this? Thanks!, [~thiruvel] Thanks Thiruvel - yes please go ahead and assign it to yourself. It will be awesome if you could upload the patch on review board as well - much easier to browse through.

Would be keen to hear more on the newer design you are proposing., [~vgumashta] Here it is https://reviews.apache.org/r/14809/
Let me dig in and come up with a design., [~thiruvel] Thanks a lot!, [~vaibhavgumashta] [~thiruvel] Thanks for tackling this problem. I took a quick look at the patch and have some thoughts I want to share. One of our design goals with HiveServer2 was to decouple session state from connection state, the motivation being that Hive queries can take a long time to complete, and you probably don't want your session/query to die if someone trips over your network cable. As a result every RPC contains either a logical session ID, or a logical operation ID. Because of this separation we can do interesting things like multiplex multiple sessions over the same physical connection or reference the same session over multiple physical connections. This property will also make it a lot easier to implement session migration between HiveServer2 instances. It looks like this patch creates a coupling between physical connection state and logical session state, and I think we should try to avoid doing this.

I think we should try to view this issue as two separate problems: 1) making sure that Thrift resources (e.g. threads) are reclaimed when a client disconnects or times out due to inactivity, and 2) reclaiming resources associated with the session (excluding the connection state) when a session times out due to inactivity. Note that a connection timeout and session timeout are not linked, i.e. a connection timeout shouldn't trigger a session timeout and a session timeout shouldn't trigger a connection timeout. , The patch uses assert. Java assertions are not enabled by default. Do we really want that check disabled the vast majority of the time?, Thanks Brock and Carl for the comments. I posted the initial patch as sort of an approach I had for branch-10, it was only a first dig at this problem. The intention is to separate the physical disconnect and session timeout as Carl mentioned., Linking a related Jira, I think this issue is related to HIVE-5296.]