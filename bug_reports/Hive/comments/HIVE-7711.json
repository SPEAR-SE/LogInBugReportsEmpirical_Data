[ok, got my UDF to be usable with the config hive.plan.serialization.format=javaXML (after digging through the sourcecode).

I did find the following snippet in https://github.com/apache/hive/blob/branch-0.13/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java, line 934:
    removeField(kryo, Operator.class, "colExprMap");
which is "missing"(?) in cloningQueryPlanKryo (lines 947-958).

IMHO, the best solution to this problem would involve adding appropriate serializers to Kryo, e.g. from the https://github.com/magro/kryo-serializers project (not in my case, but just as an example). To use this, one needs to expose the Kryo registry (not so good) or (in order to be thread-safe) extend the registry with self-registered serializers. One way could expose those serializers in GenericUDF::getSerializerMap to be overwritten, mapping classes to serializers. However, this could result in major security issues I'm not yet aware of., [~cbbetz] Could you try this with attached patch? Looks like UDFs need some new annotation for kryo serialization., Hi,

sorry for answering so late, but I had some other issues to work on more urgently. I really appreciate you fast answer though :)

# I did check sourcecode of hive and kryo (in addition to documentation) and found a solution/workaround: Just providing my own *"does nothing"-Serializer* and "attaching" it to my GenericUDF-Class using the *@DefaultSerializer* annotation (see https://github.com/EsotericSoftware/kryo#default-serializers) solved the problem.
\\
I do not have my a code snippet right now to include/attach, but it basically is an implementation of *com.esotericsoftware.kryo.Serializer* where the write method does nothing and the read method returns a new instance of the class given in the third parameter.
# I reviewed the patch you provided but did not build my own hive version from it. It is basically not a solution to the problem, but emits a warning for a missing serializer. As neither GenericUDF nor my implementation of GenericUDF implement serializable I'm pretty sure I wouldn't see a warning message though. However, the idea of generating a warning message is good. Maybe you could think about implementing the above mentioned "does-nothing"-serializer for GenericUDF (and UDF), as that mimics the behaviour of the orignal code before you moved to kryo.
# I'm totally missing advanced documentation for all of this. I did not find anything about "GenericUDFs should be serializable" on the web or in the GenericUDF-source code. I think there should be something on that somewhere, but I leave it up to you to decide on a new issue / subtask for that. However, thanks in advance if you do it ;)

For me, you could well close that issue as my code is working right now, however I would strongly advise to improve your codebase, your tests, and your documentation on this issue.



, Faced the same problem, setting `hive.plan.serialization.format=javaXML` helped me, thanks [~cbbetz]

Hive-0.13.1, Could you please let me know how i find the kryo version ?

how i find the kryo version that i using ?

Please help]