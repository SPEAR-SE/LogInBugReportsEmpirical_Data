[Stack trace showing the issue (not from the qfile test):

{noformat}
java.lang.NullPointerException
at org.apache.hadoop.hive.hbase.HiveHBaseTableSnapshotInputFormat.setColumns(HiveHBaseTableSnapshotInputFormat.java:48)
at org.apache.hadoop.hive.hbase.HiveHBaseTableSnapshotInputFormat.getSplits(HiveHBaseTableSnapshotInputFormat.java:57)
at org.apache.hadoop.hive.ql.io.HiveInputFormat.addSplitsForGroup(HiveInputFormat.java:305)
at org.apache.hadoop.hive.ql.io.HiveInputFormat.getSplits(HiveInputFormat.java:407)
at org.apache.hadoop.hive.ql.io.CombineHiveInputFormat.getCombineSplits(CombineHiveInputFormat.java:361)
at org.apache.hadoop.hive.ql.io.CombineHiveInputFormat.getSplits(CombineHiveInputFormat.java:571)
at org.apache.hadoop.mapreduce.JobSubmitter.writeOldSplits(JobSubmitter.java:328)
at org.apache.hadoop.mapreduce.JobSubmitter.writeSplits(JobSubmitter.java:320)
at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:196)
at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1290)
at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1287)
at java.security.AccessController.doPrivileged(Native Method)
at javax.security.auth.Subject.doAs(Subject.java:415)
at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1657)
at org.apache.hadoop.mapreduce.Job.submit(Job.java:1287)
at org.apache.hadoop.mapred.JobClient$1.run(JobClient.java:575)
at org.apache.hadoop.mapred.JobClient$1.run(JobClient.java:570)
at java.security.AccessController.doPrivileged(Native Method)
at javax.security.auth.Subject.doAs(Subject.java:415)
at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1657)
at org.apache.hadoop.mapred.JobClient.submitJobInternal(JobClient.java:570)
at org.apache.hadoop.mapred.JobClient.submitJob(JobClient.java:561)
at org.apache.hadoop.hive.ql.exec.mr.ExecDriver.execute(ExecDriver.java:431)
at org.apache.hadoop.hive.ql.exec.mr.MapRedTask.execute(MapRedTask.java:137)
at org.apache.hadoop.hive.ql.exec.Task.executeTask(Task.java:160)
at org.apache.hadoop.hive.ql.exec.TaskRunner.runSequential(TaskRunner.java:89)
at org.apache.hadoop.hive.ql.Driver.launchTask(Driver.java:1655)
at org.apache.hadoop.hive.ql.Driver.execute(Driver.java:1414)
at org.apache.hadoop.hive.ql.Driver.runInternal(Driver.java:1195)
at org.apache.hadoop.hive.ql.Driver.run(Driver.java:1059)
at org.apache.hadoop.hive.ql.Driver.run(Driver.java:1049)
at org.apache.hadoop.hive.cli.CliDriver.processLocalCmd(CliDriver.java:213)
at org.apache.hadoop.hive.cli.CliDriver.processCmd(CliDriver.java:165)
at org.apache.hadoop.hive.cli.CliDriver.processLine(CliDriver.java:376)
at org.apache.hadoop.hive.cli.CliDriver.executeDriver(CliDriver.java:736)
at org.apache.hadoop.hive.cli.CliDriver.run(CliDriver.java:681)
at org.apache.hadoop.hive.cli.CliDriver.main(CliDriver.java:621)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:606)
at org.apache.hadoop.util.RunJar.run(RunJar.java:221)
at org.apache.hadoop.util.RunJar.main(RunJar.java:136)
{noformat}, Offline conversation with Jason, we have noted a couple of things: 
 - HiveHBaseTableSnapshotInputFormat.java uses the mapred API while HiveHBaseTableInputFormat uses the mapreduce API. [~ndimiduk] I remember you were talking about specifically that all Hive IFs use mapred. Is that changed? 
 - mapred version of the HBase's TableMapreduceUtil does not have the utility methods to pass the Scan serialized inside the job configuration. The only supported way is to set the Scan through now-deprecated {{TableInputFormat.COLUMN_LIST}}. 
 - Although the {{mapred.TableMapreduceUtil}} does not support setting the serialized scan, we can still manually set it and have the TSIF work correctly since the mapred and mapreduce versions use the same underlying implementation ({{TableSnapshotInputFormatImpl}}). 
 , Yeah, IIRC, this stuff is a big mess of the two different mapred API's across the two projects. Have a look at some of the linked issues from HIVE-6584. Notable TODO items were HBASE-11179, HBASE-11163 and HIVE-7534., Attaching patch from [~enis] which appears to fix the test case added. [~ndimiduk] or any other folks that work on HBase handler, does this look like the right thing to do?, {noformat}
+  // Copied from HBase's TableMapreduceUtil since it is not public API
+  // mapred does not support it unlike mapreduce.
{noformat}

Would be good if this were tied to a TODO and an HBASE ticket. Otherwise, +1., Thanks Nick for the review. v2 patch expands the comment with the TODO and HBASE-11163. , +1, re-uploading patch v2 to conform to precommit naming scheme, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12761205/HIVE-11849.2.patch

{color:red}ERROR:{color} -1 due to 6 failed/errored test(s), 9452 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_index_auto_mult_tables_compact
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation
org.apache.hive.hcatalog.streaming.TestStreaming.testInterleavedTransactionBatchCommits
org.apache.hive.hcatalog.streaming.TestStreaming.testTransactionBatchEmptyCommit
org.apache.hive.spark.client.TestSparkClient.testJobSubmission
org.apache.hive.spark.client.TestSparkClient.testSyncRpc
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5330/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5330/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5330/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 6 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12761205 - PreCommit-HIVE-TRUNK-Build, The TestHCatClient/TestSparkClient tests have been failing the last few precommit tests, so are existing conditions.

The TestCliDriver/TestStreaming tests do not fail when I run locally. Is TestStreaming a flaky test? I saw other failings on another patch I had submitted., Committed to master/branch-1]