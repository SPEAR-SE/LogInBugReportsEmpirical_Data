[I added some instrumentation to the code (see HIVE-626.1.showinfo.patch)  The result of "explain extended" (below) shows that the order of the output column of the JoinOperator does not match that of the FileSinkOperator:

{code}
hive> explain extended
    > select zshao_foo.foo_name, zshao_bar.bar_name, n from zshao_foo join zshao_bar on zshao_foo.foo_id =
    > zshao_bar.foo_id join zshao_count on zshao_count.bar_id = zshao_bar.bar_id;
OK
ABSTRACT SYNTAX TREE:
  (TOK_QUERY (TOK_FROM (TOK_JOIN (TOK_JOIN (TOK_TABREF zshao_foo) (TOK_TABREF zshao_bar) (= (. (TOK_TABLE_OR_COL zshao_foo) foo_id) (. (TOK_TABLE_OR_COL zshao_bar) foo_id))) (TOK_TABREF zshao_count) (= (. (TOK_TABLE_OR_COL zshao_count) bar_id) (. (TOK_TABLE_OR_COL zshao_bar) bar_id)))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL zshao_foo) foo_name)) (TOK_SELEXPR (. (TOK_TABLE_OR_COL zshao_bar) bar_name)) (TOK_SELEXPR (TOK_TABLE_OR_COL n)))))

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-2 depends on stages: Stage-1
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Map Reduce
      Alias -> Map Operator Tree:
...
      Reduce Operator Tree:
        Join Operator
          condition map:
               Inner Join 0 to 1
          condition expressions:
            0 {VALUE._col1}
            1 {VALUE._col0} {VALUE._col4}
          output names: _col1, _col6, _col10
          File Output Operator
            compressed: true
            GlobalTableId: 0
            directory: hdfs://xxx:9000/tmp/hive-zshao/1413634235/10002
            table:
                input format: org.apache.hadoop.mapred.SequenceFileInputFormat
                output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
                properties:
                  name binary_table
                  serialization.ddl struct binary_table { string _col1, string _col10, i32 _col6}
                  serialization.format com.facebook.thrift.protocol.TBinaryProtocol
                name: binary_table

  Stage: Stage-2
    Map Reduce
      Alias -> Map Operator Tree:
        $INTNAME
...

{code}


The output of the join has the order: output names: _col1, _col6, _col10
The FileSinkOperator expects: struct binary_table { string _col1, string _col10, i32 _col6}
, One hypothesis: the column names got sorted at some places - _col10 < _col6.

I tried to disable "column pruner" but it didn't work as well.
{code}
hive> set hive.optimize.ppd=false;
{code}
, Zheng, you are disabling partition pushdown - not column pruning.
For that, you need to change the code - there is no way to disable column pruning right now., Thanks Namit for pointing that out. This patch adds the capability of disabling column pruner.

The following query runs successfully, so the problem is inside the column pruner.

{code}
hive> set hive.optimize.cp=false;
hive> explain extended
    > select zshao_foo.foo_name, zshao_bar.bar_name, n from zshao_foo join zshao_bar on zshao_foo.foo_id =
    > zshao_bar.foo_id join zshao_count on zshao_count.bar_id = zshao_bar.bar_id;
{code}
, Some comments from briefly looking at the ColumnPruner.java code:

1. selectDesc has boolean selectStar and boolean selectStarNoCompute - "SELECT *" is just a syntactic sugar. We should remove these from the plan.

2. RowResolver is used at compilation stage (to resolve a name like "alias.col" to the actual fields in the input row object). Why do we need to access RowResolver at all in the optimization stage? We only need to use RowSchema which can be obtained through "Operator.getSchema()" call.

3. The following comment from HIVE-460 looks highly suspicious.
"
Yongqiang He added a comment - 13/Jun/09 12:41 AM
Namit, Thanks for correction. Upload a new patch. I guess the diffs came from the order of file output operator's column names. And the new patch sorted field schemas according to their names. Hope this can pass the tests. Again it passed in my local. 
"
, For 3 in the last comment, the right way to do it is to preserve the order of the columns - for each of the original columns, we test if it's needed or not, and then add it to the new column list.
We should not sort the columns by names.
, The reason is the inconsistent of the order of columns in reduceSink's rowschema and the order of columns in reduce sink's output column array.
rowschema is used to create a file output op when splitting mr tasks, and the output column names are used to init the inspector.
will upload a patch soon., Added a new testcase and removed keyinfor and valueinfo from explain plan. 
Passed tests in my local., Committed. Thanks Yonqqiang!
, Doc note:  This added *hive.optimize.cp* (column pruner) to HiveConf.java and changed the default value of *hive.optimize.ppd* to true in 0.4.0 (see HIVE-279).

* [Configuration Properties -- hive.optimize.cp | https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.optimize.cp]
* [Configuration Properties -- hive.optimize.ppd | https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.optimize.ppd]]