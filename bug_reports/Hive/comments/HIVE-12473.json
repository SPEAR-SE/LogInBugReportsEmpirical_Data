[Here's the patch. Can you check it on a real query? With this patch and the other DPP patch pruning appears to work, but on the query I have it doesn't prune anything so I can't be sure., [~sershe]: yes, will do that - seeing your patch gives me another idea.

This can be looked up from the TableScan in the optimizer during generateEventOperatorPlan().

{code}
      eventDesc.setTargetColumnName(column);
      eventDesc.setPartKey(partKey);
{code}, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12773640/HIVE-12473.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 10 failed/errored test(s), 9834 tests executed
*Failed tests:*
{noformat}
TestHWISessionManager - did not produce a TEST-*.xml file
TestMiniLlapCliDriver - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_index_bitmap_auto_partitioned
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_subquery_notin
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_subquery_notin_having
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_explainuser_1
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_tez_dynpart_hashjoin_3
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_tez_smb_empty
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_uri_import
org.apache.hive.jdbc.TestSSL.testSSLVersion
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/6100/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/6100/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-6100/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 10 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12773640 - PreCommit-HIVE-TRUNK-Build, The test failures are unrelated, but we need to look after HIVE-12462 is committed., Updated patch. , Wrong jira, [~gopalv] can you take a look? I think looking for the column should actually be ok since the expression is not expected to have any other columns, they would not be able to evaluate because the row only has one value there. We could even just look for ExprCol... in theory., [~sershe]: LGTM - +1.

I'll make a note & do a bit of type refactoring after talking to [~hagleitn] next sprint., Committed to master and branch-1., [~sershe]/[~gopalv] here's a comment in the code:

{noformat}
      // TODO: this is not necessarily going to work for all cases. At least, table name is needed.
      //       Also it's not clear if this is going to work with subquery columns and such.
{noformat}

Maybe commit when it does?, Also - there's not test in the code, so it's hard to try to repro and see what it does..., I can't figure out why this fix would be doing the right thing. The converter should work off of the final type, it needs to convert the string partition value to the output of the evaluator. I think this should be reverted., bq. The converter should work off of the final type, it needs to convert the string partition value to the output of the evaluator.

What it is doing before fix was {{cast(dt as int)}}, which is wrong - it should do {{cast(dt as date)}}. Even if the final UDF type is an int due to {{year(dt}}., The comment is not actually correct, as I realized later; we only receive one expression currently, so there's no chance of getting a wrong value.
The reason it does the right thing now is that the top-level expression does not need to be cast in general case, Hive already takes care of comparing correctly.
What needs to be cast is the partition column string. It needs to be cast to argument type of whatever it's passed to. Most of the time the partition column is the top-level expression and is passed into UDFCompareBlahBlah, but it's not always the case; it's different if it's wrapped in, and passed into, most UDFs (e.g. YEAR(date)). The patch changes the code to take the type of the argument, instead of taking the type of the top-level expression. 
, Even if that's the case there's no test case and the comment needs to be removed. There are actually test cases in dynamic_partition_pruning.q that use UDF and seem to work fine. It seems there's a patch on the way for HIVE-12462. When that's done I can add a test case plus cleanup to this jira., Things like that are usually done in a follow-up JIRA..., Filed HIVE-12667]