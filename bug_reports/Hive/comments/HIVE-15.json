[Hi Edward, please use the ascii code of the separator for now ( 9 for tab, 32 for space):

create table testlist (id int,name string,favnum ARRAY<int>) ROW FORMAT DELIMITED FIELDS TERMINATED BY '9' COLLECTION ITEMS TERMINATED BY '32';

We will support both the ascii code and the string in the future. (That means we won't be able to use the string '9' as separator but I guess nobody would do that.)
, After some discussions, I think we'd better drop that ascii code thing.

We will work on supporting '\t'.
, 
For an query string
a=b&c=d&e=f
It would be helpful to be able to use = or & 

Are you saying only special escape characters will be supported or ascii will still be supported using the /0001 syntax? , one of the issues is that java bean's xml is 1.0 and we haven't found a way to store ^A like characters in xml 1.0 if there is it would be very trivial to support it., HI Edward, as of now, we support both a decimal number (ascii code of the separator), or the separator character itself (only if it's not a control character).

There is a test case supporting this and it should be working now:
src/contrib/hive/ql/src/test/queries/clientpositive/input_dynamicserde.q

CREATE TABLE dest1(a array<int>, b array<string>, c map<string,string>, d int, e string)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '1'
COLLECTION ITEMS TERMINATED BY '2'
MAP KEYS TERMINATED BY '3'
LINES TERMINATED BY '10'
STORED AS TEXTFILE;

EXPLAIN
FROM src_thrift
INSERT OVERWRITE TABLE dest1 SELECT src_thrift.lint, src_thrift.lstring, src_thrift.mstringstring, src_thrift.aint, src_thrift.astring;

FROM src_thrift
INSERT OVERWRITE TABLE dest1 SELECT src_thrift.lint, src_thrift.lstring, src_thrift.mstringstring, src_thrift.aint, src_thrift.astring;

SELECT dest1.* FROM dest1;

SELECT dest1.a[0], dest1.b[0], dest1.c['key2'], dest1.d, dest1.e FROM dest1;


Please reopen if the problem continue to exist.

]