[Local mode means that the query will run with local job runner - not in the same process, right? So the argument that a udf can bring down HS2 isn't true, is it?

, I meant that heavy processing on same node can degrade the performance hive server2. Bugs in udfs can put additional load on the server, making it almost inaccessible. , Updated the description., What about Map joins? They can use up a tremendous amount of memory and affect the stability if you have multiple concurrent queries, couldn't they? Map join local work can also contain UDFs. Disallowing map joins on hive server 2 seems bad because of the performance penalty., {quote}
By default, HS2 should set these parameters to disallow local execution or send and error message if user tries to set these.
{quote}
I do not agree with this. I can understand the argument for making the default off, but explicitly disabling it is too extreme. , bq. Disallowing map joins on hive server 2 seems bad because of the performance penalty.
By performance penalty, do you mean the increased latency because of MR job launching? Yes, I agree this would be incurred. (Hopefully, the MR framework/Tez improvements will bring that down.)
 But on the other hand, if you have 10's or 100s of queries running concurrently, having them run locally will potentially slow things down, because of high resource utilization on HS2 machine. When we have something like MR framework that does a good job of resource allocation, we should use that. 
That is why a config flag makes sense, so that admins can make this tradeoff.

bq. I can understand the argument for making the default off, but explicitly disabling it is too extreme.
I did a poor job of describing what I meant. What I mean is this should be a HS2 admin flag, that users who connect using jdbc should not be allowed to override for their query. Admins themselves should be able to configure HS2 the way they want.

, {quote}
But on the other hand, if you have 10's or 100s of queries running concurrently, having them run locally will potentially slow things down, because of high resource utilization on HS2 machine. When we have something like MR framework that does a good job of resource allocation, we should use that. 
{quote}

Does the user only have 1 HS2 machine? For redundancy you want 2, but technically you could run N HiveServers and put a load balancer in front of them. That is what we do with hive-server1. Users always do bad things, you can not stop them from shooting themselves :)

{quote}
I did a poor job of describing what I meant. What I mean is this should be a HS2 admin flag, that users who connect using jdbc should not be allowed to override for their query. Admins themselves should be able to configure HS2 the way they want.
{quote}

This sounds good. Although there are plenty of potentially dangerous flags in there outside of this one. This starts getting into the same mess hive auth is in. Like who polices the police? with config options to stop other config options., Admin flag sounds good to me too.

{quote}
By performance penalty, do you mean the increased latency because of MR job launching?
{quote}

It's much worse than that. There's no way right now to run the local stage of a map join anywhere but on the "client" machine, which is the HS2 machine in this case. So, you could either disable map joins altogether for HS2 through admin flag (which means really expensive shuffle joins for everything), or do the work to be able to run the hash table gen in the cluster, which makes this ticket really huge.

, Adding an option is nice, but I do not see how it is enforceable since HiveConf can be changed by the user., [~appodictic] Can you explain what you mean by that some more? You mean an admin can set defaults, but we can't make sure someone submitting a query doesn't overwrite it? HiveConf only exists on the server in this case, so does the rest of the planning/submission code. Why wouldn't be be able to limit the user in what they can do?, In HiveThrift1 I can do:

{code}
client.execute( "SET hive.security.authorization.enabled=false");
client.execute( "SELECT * FROM StuffIamNotSupposedtoSsee");
{code}

Is there some mechanism in hive thrift2 that prevents set commands?

, That is an awesome attack. :-) 

I thought there's already some black list for certain vars in HiveConf for this case. I'm hoping security enabled/disabled is in that list., bq. I thought there's already some black list for certain vars in HiveConf for this case. I'm hoping security enabled/disabled is in that list.
Yes, you can configure that using hive.conf.restricted.list . But it is empty by default.

[~appodictic] That is something that needs to go in the default restricted list ! , Hehe. Yeah, btw: hive.conf.restricted.list should probably also be in the restricted list., The restrict list parameter itself is part of the list implicitly., Have you seen HIVE-5054?

It seems like there is a property that we are about to remove that could help you disable local execution. Lets try to determine if the tickets are conflicting.]