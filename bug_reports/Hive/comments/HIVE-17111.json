[I agree our tests should cover LocalHiveSparkClient. But since the remote mode is what we really use in production, shouldn't we focus on this mode in tests?
I'm even wondering if it makes sense to move all the tests of TestSparkCliDriver to TestMiniSparkOnYarnCliDriver. I believe the local-cluster mode was used as a "workaround" when we couldn't run HoS tests on a mini cluster (and didn't want to use pure local mode).
[~xuefuz], [~csun], [~jxiang], what do you think?, I'm good either way. While TestMiniSparkOnYarnCliDriver is closer to what is used in production, a lot of qtests probably don't need to be run on a mini-cluster of processes. If everything is run in the same process, the test coverage is probably similar. I think Hive-on-MR qtests is all in process, and some of the LLAP qtests are in process too. The main advantage is reduced time to run the tests.

That being said, I'm good with either approach. Basically, I think there should just be a way to run a HoS qtest entirely in process (could just be a config option). It can help a lot with debugging., I don't see a strong reason of migrating the tests to the SparkOnYarn driver: besides the remote spark client, is there anything else covered by the {{TestMiniSparkOnYarnCliDriver}}? , Hi [~stakiar], [~csun], there was some issue specific to yarn-cluster mode, like HIVE-9425 and HIVE-12045. I'm not rushing to move from TestSparkCliDriver to TestMiniSparkOnYarnCliDriver. But basically, I think it's better to keep our tests close to real use case. BTW, even with local-cluster, the executors are still run in separate JVMs, so we can't have everything in process., My take is that local is for dev, local-cluster for precommit test, and miniYarnCluster is for mimicking production. I'm not sure how much it saves by switching to LocalHiveSparkClient. If that's a problem, we can consider running multiple tests with the same local-cluster., Attaching a patch that creates a new CLI Driver called {{TestLocalSparkCliDriver}} which sets {{spark.master=local[*]}}. Adding a very simple q test, with a few basic queries. This provides some test coverage for {{LocalHiveSparkClient}}.

The main advantage is that this new CLI Driver runs the entire HoS query inside a single process. This makes debugging HoS much easier. Users can set breakpoints in portions of the HoS code that are only invoked at runtime. While this does provide some coverage for {{LocalHiveSparkClient}}, I think that main advantage is that it makes debugging HoS easier for developers, especially new developers who may not be as familiar with the HoS code and want to debug things via an IDE like IntelliJ.

The patch doesn't modify anything related to the other Spark CLI Drivers., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12888976/HIVE-17111.1.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 8 failed/errored test(s), 11063 tests executed
*Failed tests:*
{noformat}
TestAccumuloCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=231)
TestDummy - did not produce a TEST-*.xml file (likely timed out) (batchId=231)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[spark_local_queries] (batchId=64)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[unionDistinct_1] (batchId=143)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[union_fast_stats] (batchId=156)
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver[spark_explainuser_1] (batchId=170)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=235)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query23] (batchId=235)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/6982/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/6982/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-6982/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 8 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12888976 - PreCommit-HIVE-Build, [~lirui], [~xuefuz], [~pvary] could you take a look?, [~vihangk1], [~aihuaxu] could you take a look?, TestSparkCliDriver is testing on local cluster. TestMiniSparkOnYarnCliDriver is testing against yarn. I see the value to add TestLocalSparkCliDriver to cover LocalHiveSparkClient and also it will make debugging Spark  easier. Of course we just need one or two tests to cover it as the patch does. 

+1 from me.

[~lirui], [~xuefuz] How do you think?
 , I think this is good. However, I have two questions:

1. Other test driver class is generated, so I'm wondering why we actually have a nongenerated class for TestLocalSparkCliDriver.
2. With this change, are we able to run any .q test using this test driver class?, [~xuefuz]

{quote} 1. Other test driver class is generated, so I'm wondering why we actually have a nongenerated class for TestLocalSparkCliDriver. {quote} I think that was the old way of making these classes, now you can just directly create a new Java class to make a new CLI Driver. Unless I am misunderstanding the question.

{quote} 2. With this change, are we able to run any .q test using this test driver class? {quote}. Yes, the idea is that you can run any .q file with these new CLI Driver, which should help developers debug any HoS issues., Sorry for the delay, I had other tasks which took all of my time, and some :(

I think it would be useful to have the possibility to run every spark test with the local driver - so that is a plus for the TestLocalSparkCliDriver.
We should only add more tests, if we can be sure that it significantly improves runtime.

The old method of adding new driver class is changed by HIVE-14444, so this is the new method.

So this is a +1 from me too., Thanks, guys! This is cool.
+1, Thanks for the reviews everyone! Pushed to master., I think the new test needs order by to give deterministic output. Besides, should it be included in {{master-mr2.properties}}?, Hive 3.0.0 has been released so closing this jira.]