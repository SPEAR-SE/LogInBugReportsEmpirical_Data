[[~bslim]: The masks array loop can be unrolled to remove the array variable entirely - the array variable made more sense when the cache width was not hard-coded as 8. 

You might get the performance back, without invoking a synchronized instruction there (the thread local .get)., [~gopalv]: I'm throwing together a PR for this, but it's non obvious to me how to properly unroll the masks loop, what did you have in mind for the refactor? , The masks object was rough place-holder for an eventual Long8 type to be allocated locally (the jdk value types), to stand in for the __m512i variables

Talked to [~bslim] about this and I'm thinking an even simpler solution than unrolling might work out just fine.

{code}
-      masks[wordOffset] |= (1L << bitPos);
+     final long bloomWord = bitSet.data[wordOffset + i];
+     if (0 == (bloomWord & (1L << bitPos))) return false;
+   }
+   return true;
{code}

And re-run your benchmark?

That makes it similar to the original bloom implementation and better than the ThreadLocal at rejecting rows.

If you do have a linux box with libhsdis, then the output of JMH -prof perfasm would be super useful to look into., Thanks for the explanation! I'll see what I can do about getting perfasm output., Unfortunately the suggested fix is failing most tests when I run them locally., [~cwylie]: I think I munged up that change - attached a proper patch, instead of a comment, Ah, this one works, thanks! I'll apply these changes to the version I've copied into Druid until this is properly released., I did test this locally and added some tests for float case. [^HIVE-20893.patch]

Will run some Benchmark soon on our internal Cluster while tests will run on the patch., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 40s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 10s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 10s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m 24s{color} | {color:blue} storage-api in master has 48 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 10s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 10s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 12s{color} | {color:red} storage-api: The patch generated 299 new + 31 unchanged - 3 fixed = 330 total (was 34) {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 27s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m  9s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 12s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 10m 17s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Optional Tests |  asflicense  javac  javadoc  findbugs  checkstyle  compile  |
| uname | Linux hiveptest-server-upstream 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1+deb8u1 (2016-09-03) x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /data/hiveptest/working/yetus_PreCommit-HIVE-Build-14863/dev-support/hive-personality.sh |
| git revision | master / 7ae4a2c |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.1 |
| checkstyle | http://104.198.109.242/logs//PreCommit-HIVE-Build-14863/yetus/diff-checkstyle-storage-api.txt |
| modules | C: storage-api U: storage-api |
| Console output | http://104.198.109.242/logs//PreCommit-HIVE-Build-14863/yetus.txt |
| Powered by | Apache Yetus    http://yetus.apache.org |


This message was automatically generated.

, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12947658/HIVE-20893.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:green}SUCCESS:{color} +1 due to 15538 tests passed

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/14863/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/14863/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-14863/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.YetusPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12947658 - PreCommit-HIVE-Build, Thanks [~gopalv] pushed this to master, will follow up with some Cluster based benchmark.]