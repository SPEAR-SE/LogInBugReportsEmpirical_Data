[navis updated the revision "HIVE-3464 [jira] Merging join tree may reorder joins which could be invalid".
Reviewers: JIRA

  Rebase on trunk


REVISION DETAIL
  https://reviews.facebook.net/D5409

AFFECTED FILES
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
  ql/src/test/queries/clientpositive/mergejoins_mixed.q
  ql/src/test/results/clientpositive/mergejoins_mixed.q.out

To: JIRA, navis
, Running test, navis updated the revision "HIVE-3464 [jira] Merging join tree may reorder joins which could be invalid".
Reviewers: JIRA

  Fixed test result of recently added tests
  Added comments, rebased on trunk


REVISION DETAIL
  https://reviews.facebook.net/D5409

AFFECTED FILES
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
  ql/src/test/queries/clientpositive/mergejoins_mixed.q
  ql/src/test/results/clientpositive/join_filters_overlap.q.out
  ql/src/test/results/clientpositive/mergejoins_mixed.q.out

To: JIRA, navis
, +1 Running tests., All tests passed., Questions/Comments on phabricator, njain has commented on the revision "HIVE-3464 [jira] Merging join tree may reorder joins which could be invalid".

INLINE COMMENTS
  ql/src/test/queries/clientpositive/mergejoins_mixed.q:19 I am totally confused.

  What is the diff. between the above query and the first query in
  (((a-b)-c)-d)
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java:6273 Can you write a small wiki/note on that explaining the correct behavior ?
  This is very difficult to review otherwise.

REVISION DETAIL
  https://reviews.facebook.net/D5409

To: JIRA, navis
Cc: njain
, navis has commented on the revision "HIVE-3464 [jira] Merging join tree may reorder joins which could be invalid".

INLINE COMMENTS
  ql/src/test/queries/clientpositive/mergejoins_mixed.q:19 1. (a-b-c-d)
  A(a.key=b.key) + B(b.key=c.key) + C(a.key=d.key)
  makes single join ABC(a.key=b.key=c.key=d.key)

  2. ((a-b-d)-c) or (((a-b)-c)-d)
  A(a.key=b.key) + B(b."value"=c.key) + C(a.key=d.key)
  before patch, hive tries merging C->B, C->A, B->A order (outer to inner), and C->A only will be merged, making two joins : AC(a.key=b.key=d.key) + B(b.value=c.key).
  This makes C join is executed prior to B and if join type of C is different from that of B, it's illegal.

  Patch consist of two parts.
  1. reverted merging order (inner to outer). It makes it a little easier to check condition below.
  2. check if it's possible to switch join ordering (if it has same join type)

REVISION DETAIL
  https://reviews.facebook.net/D5409

To: JIRA, navis
Cc: njain
, [~namit] you want to take a relook at this one?, navis updated the revision "HIVE-3464 [jira] Merging join tree may reorder joins which could be invalid".

  Rebased to trunk

Reviewers: JIRA

REVISION DETAIL
  https://reviews.facebook.net/D5409

CHANGE SINCE LAST DIFF
  https://reviews.facebook.net/D5409?vs=23079&id=30549#toc

AFFECTED FILES
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
  ql/src/test/queries/clientpositive/mergejoins_mixed.q
  ql/src/test/results/clientpositive/join_filters_overlap.q.out
  ql/src/test/results/clientpositive/mergejoins_mixed.q.out

To: JIRA, navis
Cc: njain
, vikram has commented on the revision "HIVE-3464 [jira] Merging join tree may reorder joins which could be invalid".

  Question with regard to a new api introduced in the patch.

INLINE COMMENTS
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java:6644 Could you explain the use of the left variable in the api? The only use always seems to set it to true and this variable is not used within the api itself.

REVISION DETAIL
  https://reviews.facebook.net/D5409

To: JIRA, navis
Cc: njain, vikram
, [~navis] I went through the tests and code and I see how this affects the plan. Could you please add tests that produce some output rows. You could add something like

{noformat}
insert overwrite table a select * from src;
{noformat}

in your test file(mergejoins_mixed.q). I see that when I remove the explain statements associated with this test, a complicated query - inner, right outer (different key), full outer is what produces a different output. Others seem fine perhaps lucky. 

Also had a comment on code review., navis has commented on the revision "HIVE-3464 [jira] Merging join tree may reorder joins which could be invalid".

INLINE COMMENTS
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java:6644 Firstly I tried merging in two directions (L to R, R to L) and it's not needed anymore. Will be removed.
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java:6614 It's a bug. HIVE-4212 extended tag value from byte to short, which means it's 16 aliases, not 32 aliases. I'll fix that, too.
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java:6593 %s/tp/to

REVISION DETAIL
  https://reviews.facebook.net/D5409

To: JIRA, navis
Cc: njain, vikram
, navis updated the revision "HIVE-3464 [jira] Merging join tree may reorder joins which could be invalid".

  1. Use largest one as big table if all tables are smaller than threshold
  2. Fix bug on max aliases for outer join
  3. Addressed comments & rebased to trunk

Reviewers: JIRA

REVISION DETAIL
  https://reviews.facebook.net/D5409

CHANGE SINCE LAST DIFF
  https://reviews.facebook.net/D5409?vs=30549&id=30597#toc

AFFECTED FILES
  ql/src/java/org/apache/hadoop/hive/ql/ErrorMsg.java
  ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/CommonJoinResolver.java
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
  ql/src/test/queries/clientpositive/mergejoins_mixed.q
  ql/src/test/queries/clientpositive/smb_mapjoin_17.q
  ql/src/test/results/clientpositive/join_filters_overlap.q.out
  ql/src/test/results/clientpositive/mergejoins_mixed.q.out
  ql/src/test/results/clientpositive/smb_mapjoin_17.q.out

To: JIRA, navis
Cc: njain, vikram
, vikram has commented on the revision "HIVE-3464 [jira] Merging join tree may reorder joins which could be invalid".

  Comments.

INLINE COMMENTS
  ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/CommonJoinResolver.java:332 I am not sure these changes are relevant to this jira. There are already other jiras - HIVE-3996 and HIVE-4071 raised for issues in this section of code and currently blocked on HIVE-3891 which moves these changes into a different class.
  ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/CommonJoinResolver.java:357 Same comment as above.
  ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/CommonJoinResolver.java:369 Same as above.
  ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/CommonJoinResolver.java:381 Same as above.

REVISION DETAIL
  https://reviews.facebook.net/D5409

To: JIRA, navis
Cc: njain, vikram
, navis has commented on the revision "HIVE-3464 [jira] Merging join tree may reorder joins which could be invalid".

INLINE COMMENTS
  ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/CommonJoinResolver.java:332 Ok, it's on other issue. Will be removed.

  Any other comments on changes?

REVISION DETAIL
  https://reviews.facebook.net/D5409

To: JIRA, navis
Cc: njain, vikram
, navis updated the revision "HIVE-3464 [jira] Merging join tree may reorder joins which could be invalid".

  Addressed comments

Reviewers: JIRA

REVISION DETAIL
  https://reviews.facebook.net/D5409

CHANGE SINCE LAST DIFF
  https://reviews.facebook.net/D5409?vs=30597&id=30849#toc

AFFECTED FILES
  ql/src/java/org/apache/hadoop/hive/ql/ErrorMsg.java
  ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
  ql/src/test/queries/clientpositive/mergejoins_mixed.q
  ql/src/test/queries/clientpositive/smb_mapjoin_17.q
  ql/src/test/results/clientpositive/join_filters_overlap.q.out
  ql/src/test/results/clientpositive/mergejoins_mixed.q.out
  ql/src/test/results/clientpositive/smb_mapjoin_17.q.out

To: JIRA, navis
Cc: njain, vikram
, Hi [~navis]

Took a while for me to digest this patch although it is not very big. It looks good to me. +1. Good work!

Regards
Vikram., +1 will commit if tests pass., Committed to trunk. Thanks, Navis!, Integrated in Hive-trunk-h0.21 #2044 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2044/])
    HIVE-3464 : Merging join tree may reorder joins which could be invalid (Navis via Ashutosh Chauhan) (Revision 1464230)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1464230
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ErrorMsg.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
* /hive/trunk/ql/src/test/queries/clientpositive/mergejoins_mixed.q
* /hive/trunk/ql/src/test/queries/clientpositive/smb_mapjoin_17.q
* /hive/trunk/ql/src/test/results/clientpositive/join_filters_overlap.q.out
* /hive/trunk/ql/src/test/results/clientpositive/mergejoins_mixed.q.out
* /hive/trunk/ql/src/test/results/clientpositive/smb_mapjoin_17.q.out
, Integrated in Hive-trunk-hadoop2 #138 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/138/])
    HIVE-3464 : Merging join tree may reorder joins which could be invalid (Navis via Ashutosh Chauhan) (Revision 1464230)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1464230
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/ErrorMsg.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java
* /hive/trunk/ql/src/test/queries/clientpositive/mergejoins_mixed.q
* /hive/trunk/ql/src/test/queries/clientpositive/smb_mapjoin_17.q
* /hive/trunk/ql/src/test/results/clientpositive/join_filters_overlap.q.out
* /hive/trunk/ql/src/test/results/clientpositive/mergejoins_mixed.q.out
* /hive/trunk/ql/src/test/results/clientpositive/smb_mapjoin_17.q.out
]