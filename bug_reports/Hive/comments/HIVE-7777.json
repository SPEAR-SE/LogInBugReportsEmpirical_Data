[Attached is the csv-serde source to the project referenced.

It has already been released under the Apache 2 License.

thanks., Thank [~ogrodnek] for uploading the zip file. I have rebased the code.
https://reviews.apache.org/r/25468/, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12667327/HIVE-7777.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 6188 tests executed
*Failed tests:*
{noformat}
org.apache.hive.jdbc.miniHS2.TestHiveServer2.testConnection
org.apache.hive.service.TestHS2ImpersonationWithRemoteMS.testImpersonation
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/703/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/703/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-703/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12667327, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12667616/HIVE-7777.1.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 6196 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.ql.parse.TestParse.testParse_union
org.apache.hive.jdbc.miniHS2.TestHiveServer2.testConnection
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/723/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/723/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-723/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12667616, add query test, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12668248/HIVE-7777.2.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 6201 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.metastore.txn.TestCompactionTxnHandler.testRevokeTimedOutWorkers
org.apache.hive.service.TestHS2ImpersonationWithRemoteMS.testImpersonation
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/758/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/758/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-758/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12668248, Hi,

This patch looks great! However, since the dependency is not specified here: https://github.com/apache/hive/blob/trunk/ql/pom.xml#L563

I get the following error when using the serde:

{noformat}
Diagnostic Messages for this Task:
Error: java.lang.RuntimeException: java.lang.NoClassDefFoundError: au/com/bytecode/opencsv/CSVReader
	at org.apache.hadoop.hive.ql.exec.mr.ExecMapper.map(ExecMapper.java:195)
	at org.apache.hadoop.mapred.MapRunner.run(MapRunner.java:54)
	at org.apache.hadoop.mapred.MapTask.runOldMapper(MapTask.java:430)
	at org.apache.hadoop.mapred.MapTask.run(MapTask.java:342)
	at org.apache.hadoop.mapred.YarnChild$2.run(YarnChild.java:168)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:415)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1548)
	at org.apache.hadoop.mapred.YarnChild.main(YarnChild.java:163)
Caused by: java.lang.NoClassDefFoundError: au/com/bytecode/opencsv/CSVReader
	at org.apache.hadoop.hive.serde2.OpenCSVSerde.newReader(OpenCSVSerde.java:179)
	at org.apache.hadoop.hive.serde2.OpenCSVSerde.deserialize(OpenCSVSerde.java:147)
	at org.apache.hadoop.hive.ql.exec.MapOperator$MapOpCtx.readRow(MapOperator.java:155)
	at org.apache.hadoop.hive.ql.exec.MapOperator$MapOpCtx.access$200(MapOperator.java:128)
	at org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:509)
	at org.apache.hadoop.hive.ql.exec.mr.ExecMapper.map(ExecMapper.java:177)
	... 8 more
Caused by: java.lang.ClassNotFoundException: au.com.bytecode.opencsv.CSVReader
	at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	... 14 more

{noformat}, Update the patch. Modify the query test to ensure mapred task is triggered., +1 pending tests, 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12668948/HIVE-7777.3.patch

{color:green}SUCCESS:{color} +1 6282 tests passed

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/824/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/824/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-824/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12668948, Attribution for this fix goes to  Larry Ogrodnek and Ferdinand Xu.

Thank you! I have committed this to trunk!, Doc note:  This could be documented in the following wikidocs, with release information and a link back to this JIRA ticket:

* [SerDe Overview -- Built-in SerDes | https://cwiki.apache.org/confluence/display/Hive/SerDe#SerDe-Built-inSerDes]
* [Developer Guide -- Hive SerDe | https://cwiki.apache.org/confluence/display/Hive/DeveloperGuide#DeveloperGuide-HiveSerDe]
* [DDL -- Row Format, Storage Format, and SerDe | https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-RowFormat,StorageFormat,andSerDe], While the serde works fine, it has an issue, which is quite serious IMO - It forces all the column types to String. This means that running a query on data that isn't all string type can return wrong query results. In the unit tests I see a single example of a table using all string columns, and in the tests linked here there are many tables with non-string types, but all the queries seem to be simple COUNT(*), which won't catch the problem.

Consider the following example:

{noformat}
CREATE EXTERNAL TABLE test (totalprice DECIMAL(38,10)) 
ROW FORMAT SERDE 'com.bizo.hive.serde.csv.CSVSerde' with 
serdeproperties ("separatorChar" = ",","quoteChar"= "'","escapeChar"= "\\") 
STORED AS TEXTFILE 
LOCATION '<some location>' 
tblproperties ("skip.header.line.count"="1");
{noformat}

Now consider this sql:

hive> select min(totalprice) from test;

in this case given my data, the result should have been 874.89, but the actual result became 100001.57 (as it is first according to byte ordering of a string type). this is a wrong result.

hive> desc extended test;
OK
o_totalprice        	string              	from deserializer
...

I apologize if it's a false alarm and I'm misusing the DDL somehow. Otherwise - this is a concern as wrong query results is a bad thing...
, After some research, I think that was a limitation of the original Serde: https://github.com/ogrodnek/csv-serde however, we should be able to resolve this. Can you open a JIRA for adding non-string types to the OpenCSV Serde?, I have recently had to deal with this use case and worked around it by using a modified version of the Lazy Simple Serde extended to support quote enclosures , embedded delimiters and trimming of leading spaces in fields. This provides full support for the standard features of delimited textfiles but handles many of the common csv use cases .

I am proposing to add these changes back to the main LazySimpleSerde

See https://issues.apache.org/jira/browse/HIVE-8763
, Either way should work (adding OpenCSV parsing on LazySimpleSerde or adding type support on this new CSV serde). 

IMO the deciding factor should be performance considerations. If adding quote stripping to LazySimpleSerde means it will slow down simple non quoted parsing (e.g, due to introducing the need to examine the state after each byte instead of seeking fast to the next line terminator) - I'd say the solution is best represented in 2 separate serdes (as proposed in this JIRA). If that isn't the case though - a single serde (as proposed by [~rstokes]) is more elegant/friendly. [~rstokes] - can you share information on that respect, or share the code for your modified LazySimpleSerde?, Alon - I agree completely on the performance issue - so I am not proposing addition of opencsv support to LazySimpleSerde but relatively minor modifications to the code for parsing of fields and structs that will handle some of the more common use cases.

Performance should be similar to current implementation and the same when enclosed quotes is not enabled, [~Goldshuv], the code attached to the jira item, [~leftylev] Added a new page and links in top two of three locations to help document this (seems most serde had a new page).  The bottom one seems to be about the 'stored as' clause?  which is not for CSV serde.  Feel fix the format/wording.

[SerDe Overview – Built-in SerDes|https://cwiki.apache.org/confluence/display/Hive/SerDe#SerDe-Built-inSerDes]
[Developer Guide – Hive SerDe|https://cwiki.apache.org/confluence/display/Hive/DeveloperGuide#DeveloperGuide-HiveSerDe]
[DDL – Row Format, Storage Format, and SerDe|https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-RowFormat,StorageFormat,andSerDe], This has been fixed in 0.14 release. Please open new jira if you see any issues.
, Good docs, [~szehon].  I added CSV Serde to the wiki Home page too.

* [Hive Home -- User Documentation | https://cwiki.apache.org/confluence/display/Hive/Home#Home-UserDocumentation]
* [CSV Serde | https://cwiki.apache.org/confluence/display/Hive/CSV+Serde], any plan to support SERDEPROPERTIES("serialization.encoding"='GBK') function in this csv server as mentioned in https://issues.apache.org/jira/browse/HIVE-7142?, Created two jiras to address [~Goldshuv]'s comments.

HIVE-13709 - to improve type support in this serde
HIVE-13708 - to disallow create tables when serde doesn't support the column type specified

Any volunteers for uploading patches for this ?
]