[navis requested code review of "HIVE-3969 [jira] Session state for hive server should be cleanup".

Reviewers: JIRA

DPAL-1975 Session state for hive server should be cleanup

Currently "add jar" command by clients are adding child ClassLoader to worker thread cumulatively, causing various problems.

TEST PLAN
  EMPTY

REVISION DETAIL
  https://reviews.facebook.net/D8325

AFFECTED FILES
  ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java

MANAGE HERALD RULES
  https://reviews.facebook.net/herald/view/differential/

WHY DID I GET THIS EMAIL?
  https://reviews.facebook.net/herald/transcript/20283/

To: JIRA, navis
, Since there are no testcases, it will help if you can describe what specific problems this results in., If a client add jar files for initializing, hive server makes a new classloader and attach it to thread as a context loader. Cause hive server uses thread pool and there is no cleanup for threads, number of class loader increases constantly, which can make possibly a memory issue. And also it prevents using newer library containing class with same name, which means hive server should be restarted for reflecting new library.

But cause current hive server cannot sustain consistent session between invocations from single client, this patch can induce other problems, which makes it incomplete. I know HiveServer2 is already on a way to be committed. Would it be better to fix session problems in hiveserver also or to make it deprecated quickly after hiveserver2 is committed? I don't know. , Now that HS2 is committed which I believe does clean up its state between different sessions, this should no longer be a problem. Or do you still see this leak even with HS2?, [~navis] please see my blog on the subject [here|http://www.qubole.com/blog/qubole-hive-server/]. It is insufficient to reset the classloader as this doesn't close connections to jar files. I've pasted the relevant part of the blog here:

There was one issue that was a little perplexing. After running for a week or so, QHS (Qubole Hive Server) starting throwing “too many files open” exceptions. A quick lsof call confirmed that there were numerous open file handles. Surprisingly, though, these all pointed to jar files. After some investigation, we found that the URLClassLoader leaks file handles to jars it opens (see this [link|http://management-platform.blogspot.in/2009/01/classloaders-keeping-jar-files-open.html] for some dirty details). These are never garbage collected. We ended up using the non-standard ClassLoaderUtil.releaseLoader to free up resources. Java 7 has a nicer solution for this where URLClassLoader has a close method that performs the necessary cleanup., [~snarayanan] Thanks for your comment. I've just read the article.
Then, Should we start with best effort strategy? What I mean is that if there is 'sun.miss.ClassLoaderUtil' then use that. If not, we might borrow some codes from hibernate (as explained http://loracular.blogspot.kr/2009/12/dynamic-class-loader-with.html) if it's not violate something but I'm not sure of license thing (LGPL v2.1?)., Although, HIVE-6364 is marked as duplicate, I don't think it is a duplicate. This one fixes the problem of unloading registered jars, whereas HIVE-6364 talks about setting correct class loader for HS2. So, it seems there are two independent problem, both of which needs to be fixed.
[~navis] Although, you raised the bug for HS1, I think same exact problem is also on HS2. But, I think fix is in same area, so it doesn't really matter.  I think we should use sun.misc.ClassLoaderUtil for now and than switch over to jdk7 in near future for a clean solution. Would  you like to rebase this patch?, Ok, I'll take a look. I wish HIVE-3907 would be considered, too., [~ashutoshc] I just fixed hiveserver2 case. Let's deprecate old hiveserver., Deprecating old HS1 makes sense. Patch looks ok. Wondering if you have done any testing of the patch to verify that file handles are not being leaked anymore?, Didn't verified fd leakage. Just verified newly created loaders are released when session is closed., Left a comment on RB. Also, HIVE-6364 patch has a test-case, which I think can be included in the patch. Also, possibly can be extended to verify that classloader does gets closed when session is closed., I can see FD remains still after session closed.  Should investigate more., Ah, temporary files should be closed before deleted. I will update this and address your comments., +1, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12635702/HIVE-3969.2.patch.txt

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 5441 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_auto_sortmerge_join_16
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_infer_bucket_sort_dyn_part
{noformat}

Test results: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/1908/testReport
Console output: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/1908/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12635702, Committed to trunk & 0.13, [~navis]Could you help look at this issue HIVE-11681? thank you ]