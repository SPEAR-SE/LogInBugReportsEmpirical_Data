[Actually, this JIRA is more about handling backward compatibility. It's possible that there things (JDBC? scripts?) that parsed the text output and depended on the old style., Thiruvel, this is a show-stopper for HIVE-558.
The schema for describe and describe extended cannot be changed.

You can add NULLs at the beginning/end, but the number of columns have to be maintained, ok, will revert back the formatting of the columns (partitions also) and will leave the rest of the changes as is. That would mean the headers also will go away, the formatting doesnt look good with them and tab alone as separator., Maybe another option is to have a pretty qualifier? To get your output, the user would have to type something like 'pretty describe <tablename>'. Otherwise everything defaults to normal., @Thiruvel, can we keep the new output in the old format.
I mean, we just have to make sure that the output has 3 columns separated by a delimiter.

So, if your current output is 'x', you can replace it with:

<TAB>x<TAB>

An implicit null at the beginning and end.


, +1 on keeping the old format but add a "pretty operator" as the child of the explain, so that the execution plan for the EXPLAIN is an explain operator (with the old formatting) followed by an optional "pretty operator" taking the output and do further formatting. , Another issue is that now 'desc extended' displays table/partition parameters in different lines. Since parameters is using a unordered map implementation, it will give non-deterministic display of those parameters. It will be great if the pretty operator will take care of ordering as well., Thiruvel, any updates on this - we need it urgently in order to deploy HIVE-558
, Sorry folks, was out sick for more than a week. Will upload a patch tomorrow., Patch under works.

Changes:

1. 'describe' & 'describe extended' outputs will be the same as pre HIVE-558.
2. 'describe formatted' will use the new format for displaying columns and additional information.

Will implement the changes similar to how extended is implemented, using a boolean in DescTableDesc to denote the formatted keyword and formatting the output in DDLTask.describeTable., Preliminary patch on the above mentioned approach - felt this one to be easier. Comments welcome.

The code needs to be reorganized and cleaned, but I wanted to upload patch before I sign off for the day. Will proceed with test cases on confirmation of the approach., +1. Looks good. Can you do the final patch?, one more thing, if the time information (create time, last access time etc) is 0, can you put some string like "unknown" to the output of desc format?, Cleaned up the code a little bit, will display UNKNOWN if time is 0. Will upload patch for test output tomm., Was writing shell scripts this week that rely on the schema output and there is no straight forward way to differentiate partitions and columns.

What do folks think on adding another column "flags" that displays "-"/"part"? We can add additional tags too later (sort..) if necessary. If I can't get to this tomm, will address it through another JIRA., The patch is ready and tests are running. Will upload patch when tests complete., Thanks Thiruvel! I will take a look. Does this patch subsume HIVE-1669? , Changelog:

1. Updated code changes attached. Fixed a bug in DDLTask that was in last patch.
2. Added describe_table.q test to test various desc scenarios.
3. Updated create_view.q to also include 'desc formatted' for views.
4. hbase_stats.q had a bug and was failing from a fresh checkout too. Have fixed it.
5. All other changes are updates to test output.

desc table - This retains the old behavior.
<field name><tab><type><tab><comment>
<field name><tab><type><tab>   # if no comment, @ Ning: Yes, HIVE-1658_3.patch includes HIVE-1669 changes too., +1. Will commit if tests pass. , Committed. Thanks Thiruvel!]