[snapshot is partitioning column
exception thrown:
{code}
TaskAttempt 3 failed, info=[Error: Failure while running task:java.lang.RuntimeException: java.lang.RuntimeException: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row 
	at org.apache.hadoop.hive.ql.exec.tez.TezProcessor.initializeAndRunProcessor(TezProcessor.java:173)
	at org.apache.hadoop.hive.ql.exec.tez.TezProcessor.run(TezProcessor.java:139)
	at org.apache.tez.runtime.LogicalIOProcessorRuntimeTask.run(LogicalIOProcessorRuntimeTask.java:347)
	at org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable$1.run(TezTaskRunner.java:181)
	at org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable$1.run(TezTaskRunner.java:172)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1724)
	at org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable.callInternal(TezTaskRunner.java:172)
	at org.apache.tez.runtime.task.TezTaskRunner$TaskRunnerCallable.callInternal(TezTaskRunner.java:168)
	at org.apache.tez.common.CallableWithNdc.call(CallableWithNdc.java:36)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.RuntimeException: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row 
	at org.apache.hadoop.hive.ql.exec.tez.MapRecordSource.processRow(MapRecordSource.java:91)
	at org.apache.hadoop.hive.ql.exec.tez.MapRecordSource.pushRecord(MapRecordSource.java:68)
	at org.apache.hadoop.hive.ql.exec.tez.MapRecordProcessor.run(MapRecordProcessor.java:328)
	at org.apache.hadoop.hive.ql.exec.tez.TezProcessor.initializeAndRunProcessor(TezProcessor.java:150)
	... 14 more
Caused by: org.apache.hadoop.hive.ql.metadata.HiveException: Hive Runtime Error while processing row 
	at org.apache.hadoop.hive.ql.exec.vector.VectorMapOperator.process(VectorMapOperator.java:52)
	at org.apache.hadoop.hive.ql.exec.tez.MapRecordSource.processRow(MapRecordSource.java:83)
	... 17 more
Caused by: java.lang.NullPointerException
	at java.lang.System.arraycopy(Native Method)
	at org.apache.hadoop.io.Text.set(Text.java:225)
	at org.apache.hadoop.hive.ql.exec.vector.VectorExtractRow$VarCharExtractorByValue.extract(VectorExtractRow.java:518)
	at org.apache.hadoop.hive.ql.exec.vector.VectorExtractRow.extractRow(VectorExtractRow.java:744)
	at org.apache.hadoop.hive.ql.exec.vector.VectorReduceSinkOperator.process(VectorReduceSinkOperator.java:102)
	at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:838)
	at org.apache.hadoop.hive.ql.exec.TableScanOperator.process(TableScanOperator.java:130)
	at org.apache.hadoop.hive.ql.exec.MapOperator$MapOpCtx.forward(MapOperator.java:167)
	at org.apache.hadoop.hive.ql.exec.vector.VectorMapOperator.process(VectorMapOperator.java:45)
	... 18 more
]], Vertex did not succeed due to OWN_TASK_FAILURE, failedTasks:1 killedTasks:1, Vertex vertex_1498932448021_153317_4_00 [Map 5] killed/failed due to:OWN_TASK_FAILURE]Vertex killed, vertexName=Reducer 4, vertexId=vertex_1498932448021_153317_4_04, diagnostics=[Vertex received Kill while in RUNNING state., Vertex did not succeed due to OTHER_VERTEX_FAILURE, failedTasks:0 killedTasks:1, Vertex vertex_1498932448021_153317_4_04 [Reducer 4] killed/failed due to:OTHER_VERTEX_FAILURE]Vertex killed, vertexName=Reducer 3, vertexId=vertex_1498932448021_153317_4_03, diagnostics=[Vertex received Kill while in RUNNING state., Vertex did not succeed due to OTHER_VERTEX_FAILURE, failedTasks:0 killedTasks:1, Vertex vertex_1498932448021_153317_4_03 [Reducer 3] killed/failed due to:OTHER_VERTEX_FAILURE]DAG did not succeed due to VERTEX_FAILURE. failedVertices:1 killedVertices:2
{code}, When hive.auto.convert.join is set to true than the query finish without exception, Query:
{code}
select count(*) from (select * from EXM_BASE_DATA join (select max(snapshot) max_snapshot from EXM_BASE_DATA) s0 on (snapshot = max_snapshot)) t;
{code}
causes the same error, Hello [~luky],

I was not able to reproduce the issue on the current master...it might be possible that its not anymore present...
I've just guessed the column types..they might be more relevant....and my guess is that the problem might be sensitive to some null value in some column - does the snapshot column contains null values?
Could you check the following case:

{code}
create table EXM_BASE_DATA (key string) partitioned by (snapshot int) stored as orc;
insert into EXM_BASE_DATA partition(snapshot=1) values ('asd') ;
insert into EXM_BASE_DATA partition(snapshot=2) values (null) ;
set hive.auto.convert.join = false;
select count(*) from
        (select * from EXM_BASE_DATA join (select max(snapshot) max_snapshot from EXM_BASE_DATA) s0 on (snapshot = max_snapshot)) t;
{code}


or this more sophisticated one:

{code}
set hive.exec.dynamic.partition.mode=nonstrict;

create table t0 (key string,snapshot int);
insert into t0 values (1,'asd');
insert into t0 values (null,'asd2');
insert into t0 values (2,null);
insert into t0 values (null,null);


create table EXM_BASE_DATA (key string) partitioned by (snapshot int) stored as orc;

from t0
insert into EXM_BASE_DATA partition(snapshot) select key,snapshot;

insert into EXM_BASE_DATA partition(snapshot=1) values ('asdx') ;
insert into EXM_BASE_DATA partition(snapshot=1) values ('asd') ;
insert into EXM_BASE_DATA partition(snapshot=2) values (null) ;

set hive.auto.convert.join = false;

select count(*) from
        (select * from EXM_BASE_DATA join (select max(snapshot) max_snapshot from EXM_BASE_DATA) s0 on (snapshot = max_snapshot)) t;

{code}, Hi Zoltan,
snapshot is indeed partitioning column in my DB and is of type DATE.
Your sample fails on my DB with the same error. However in my db there is no null value in snapshot column.
So I actually tried your sample with only 'asd' row.
And guess what, query fails with the same error

we are using hive 1.2.1 and I don't think we will move to latest version anytime soon :(

, Hello [~luky],
I was not able to reproduce your problem either on branch-1 and using a recent hdp-2.5 release...could you tell some more about your settings/setup?, HDP version 2.4
Ambari stacks and versions view:
{code}
HDFS	2.7.1.2.4	Installed	Apache Hadoop Distributed File System
YARN	2.7.1.2.4	Installed	Apache Hadoop NextGen MapReduce (YARN)
MapReduce2	2.7.1.2.4	Installed	Apache Hadoop NextGen MapReduce (YARN)
Tez	0.7.0.2.4	Installed	Tez is the next generation Hadoop Query Processing framework written on top of YARN.
Hive	1.2.1.2.4	Installed	Data warehouse system for ad-hoc queries & analysis of large datasets and table & storage management service
HBase	1.1.2.2.4	Installed	A Non-relational distributed database, plus Phoenix, a high performance SQL layer for low latency applications.
{code}

If you need some hive settings variable let me know which one. There are too many of them just to post it here :)
, eventually I was able to reproduce this with an hdp-2.4.5.0, but not yet using a hive integration test... seems like something which was fixed ever since]