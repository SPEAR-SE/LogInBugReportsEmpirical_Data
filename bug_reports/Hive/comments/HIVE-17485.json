[Even with setting ( "druid.query.granularity" = "DAY", "druid.segment.granularity" = "YEAR")  still seeing ArrayIndexOutofBound for few segments (But amount of data actually indexed is more- better than earlier)

{code}
0: jdbc:hive2://ctr-e134-1499953498516-98952-> CREATE TABLE  date_dim_store_drd_subset
0: jdbc:hive2://ctr-e134-1499953498516-98952-> STORED BY 'org.apache.hadoop.hive.druid.DruidStorageHandler'
0: jdbc:hive2://ctr-e134-1499953498516-98952-> TBLPROPERTIES ("druid.datasource" = "date_dim_store_drd_subset", "druid.query.granularity" = "DAY", "druid.segment.granularity" = "YEAR") AS
0: jdbc:hive2://ctr-e134-1499953498516-98952-> SELECT CAST(d_date AS TIMESTAMP) AS `__time`,
0: jdbc:hive2://ctr-e134-1499953498516-98952-> s_store_id,s_rec_start_date,s_store_name
0: jdbc:hive2://ctr-e134-1499953498516-98952-> FROM date_dim,store;
....
[1906-06-21 00:00:00.0, "AAAAAAAAIAAAAAAA", "2000-03-13", "eing", 1906-01-01 00:00:00.0]
[1906-06-21 00:00:00.0, "AAAAAAAAKAAAAAAA", "1999-03-14", "ought", 1906-01-01 00:00:00.0]
[1906-06-23 00:00:00.0, "AAAAAAAACAAAAAAA", "1997-03-13", "able", 1906-01-01 00:00:00.0]
[1906-06-23 00:00:00.0, "AAAAAAAAEAAAAAAA", "1997-03-13", "ese", 1906-01-01 00:00:00.0]
[1906-06-23 00:00:00.0, "AAAAAAAAEAAAAAAA", "2001-03-13", "cally", 1906-01-01 00:00:00.0]
[1906-06-23 00:00:00.0, "AAAAAAAAIAAAAAAA", "1997-03-13", "eing", 1906-01-01 00:00:00.0]
[1906-06-23 00:00:00.0, "AAAAAAAAKAAAAAAA", "1997-03-13", "bar", 1906-01-01 00:00:00.0]
[1906-06-23 00:00:00.0, "AAAAAAAAKAAAAAAA", "2001-03-13", "ought", 1906-01-01 00:00:00.0]
[1906-06-23 00:00:00.0, "AAAAAAAABAAAAAAA", "1997-03-13", "ought", 1906-01-01 00:00:00.0]
[1906-06-23 00:00:00.0, "AAAAAAAACAAAAAAA", "2000-03-13", "able", 1906-01-01 00:00:00.0]
[1906-06-23 00:00:00.0, "AAAAAAAAEAAAAAAA", "1999-03-14", "anti", 1906-01-01 00:00:00.0]
[1906-06-23 00:00:00.0, "AAAAAAAAHAAAAAAA", "1997-03-13", "ation", 1906-01-01 00:00:00.0]
[1906-06-23 00:00:00.0, "AAAAAAAAIAAAAAAA", "2000-03-13", "eing", 1906-01-01 00:00:00.0]
[1906-06-23 00:00:00.0, "AAAAAAAAKAAAAAAA", "1999-03-14", "ought", 1906-01-01 00:00:00.0]
[1906-06-25 00:00:00.0, "AAAAAAAACAAAAAAA", "1997-03-13", "able", 1906-01-01 00:00:00.0]
[1906-06-25 00:00:00.0, "AAAAAAAAEAAAAAAA", "1997-03-13", "ese", 1906-01-01 00:00:00.0]
[1906-06-25 00:00:00.0, "AAAAAAAAEAAAAAAA", "2001-03-13", "cally", 1906-01-01 00:00:00.0]
[1906-06-25 00:00:00.0, "AAAAAAAAIAAAAAAA", "1997-03-13", "eing", 1906-01-01 00:00:00.0]
[1906-06-25 00:00:00.0, "AAAAAAAAKAAAAAAA", "1997-03-13", "bar", 1906-01-01 00:00:00.0]
[1906-06-25 00:00:00.0, "AAAAAAAAKAAAAAAA", "2001-03-13", "ought", 1906-01-01 00:00:00.0]
[1906-06-25 00:00:00.0, "AAAAAAAABAAAAAAA", "1997-03-13", "ought", 1906-01-01 00:00:00.0]
[1906-06-25 00:00:00.0, "AAAAAAAACAAAAAAA", "2000-03-13", "able", 1906-01-01 00:00:00.0]
[1906-06-25 00:00:00.0, "AAAAAAAAEAAAAAAA", "1999-03-14", "anti", 1906-01-01 00:00:00.0]
[1906-06-25 00:00:00.0, "AAAAAAAAHAAAAAAA", "1997-03-13", "ation", 1906-01-01 00:00:00.0]
[1906-06-25 00:00:00.0, "AAAAAAAAIAAAAAAA", "2000-03-13", "eing", 1906-01-01 00:00:00.0]
[1906-06-25 00:00:00.0, "AAAAAAAAKAAAAAAA", "1999-03-14", "ought", 1906-01-01 00:00:00.0]
[1906-06-27 00:00:00.0, "AAAAAAAACAAAAAAA", "1997-03-13", "able", 1906-01-01 00:00:00.0]
[1906-06-27 00:00:00.0, "AAAAAAAAEAAAAAAA", "1997-03-13", "ese", 1906-01-01 00:00:00.0]
[1906-06-27 00:00:00.0, "AAAAAAAAEAAAAAAA", "2001-03-13", "cally", 1906-01-01 00:00:00.0]
[1906-06-27 00:00:00.0, "AAAAAAAAIAAAAAAA", "1997-03-13", "eing", 1906-01-01 00:00:00.0]
[1906-06-27 00:00:00.0, "AAAAAAAAKAAAAAAA", "1997-03-13", "bar", 1906-01-01 00:00:00.0]
[1906-06-27 00:00:00.0, "AAAAAAAAKAAAAAAA", "2001-03-13", "ought", 1906-01-01 00:00:00.0]
[1906-06-27 00:00:00.0, "AAAAAAAABAAAAAAA", "1997-03-13", "ought", 1906-01-01 00:00:00.0]
[1906-06-27 00:00:00.0, "AAAAAAAACAAAAAAA", "2000-03-13", "able", 1906-01-01 00:00:00.0]
[1906-06-27 00:00:00.0, "AAAAAAAAEAAAAAAA", "1999-03-14", "anti", 1906-01-01 00:00:00.0]
[1906-06-27 00:00:00.0, "AAAAAAAAHAAAAAAA", "1997-03-13", "ation", 1906-01-01 00:00:00.0]
[1906-06-27 00:00:00.0, "AAAAAAAAIAAAAAAA", "2000-03-13", "eing", 1906-01-01 00:00:00.0]
[1906-06-27 00:00:00.0, "AAAAAAAAKAAAAAAA", "1999-03-14", "ought", 1906-01-01 00:00:00.0]
[1906-06-29 00:00:00.0, "AAAAAAAACAAAAAAA", "1997-03-13", "able", 1906-01-01 00:00:00.0]
[1906-06-29 00:00:00.0, "AAAAAAAAEAAAAAAA", "1997-03-13", "ese", 1906-01-01 00:00:00.0]
[1906-06-29 00:00:00.0, "AAAAAAAAEAAAAAAA", "2001-03-13", "cally", 1906-01-01 00:00:00.0]
	at org.apache.hadoop.hive.ql.exec.tez.ReduceRecordSource.processVectorGroup(ReduceRecordSource.java:489)
	at org.apache.hadoop.hive.ql.exec.tez.ReduceRecordSource.pushRecordVector(ReduceRecordSource.java:397)
	... 18 more
Caused by: java.lang.RuntimeException: java.util.concurrent.ExecutionException: java.lang.ArrayIndexOutOfBoundsException: 129
	at org.apache.hive.druid.com.google.common.base.Throwables.propagate(Throwables.java:160)
	at org.apache.hadoop.hive.druid.io.DruidRecordWriter.pushSegments(DruidRecordWriter.java:218)
	at org.apache.hadoop.hive.druid.io.DruidRecordWriter.getSegmentIdentifierAndMaybePush(DruidRecordWriter.java:156)
	at org.apache.hadoop.hive.druid.io.DruidRecordWriter.write(DruidRecordWriter.java:239)
	at org.apache.hadoop.hive.ql.exec.FileSinkOperator.process(FileSinkOperator.java:752)
	at org.apache.hadoop.hive.ql.exec.vector.VectorFileSinkOperator.process(VectorFileSinkOperator.java:101)
	at org.apache.hadoop.hive.ql.exec.Operator.baseForward(Operator.java:955)
	at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:903)
	at org.apache.hadoop.hive.ql.exec.vector.VectorSelectOperator.process(VectorSelectOperator.java:145)
	at org.apache.hadoop.hive.ql.exec.tez.ReduceRecordSource.processVectorGroup(ReduceRecordSource.java:464)
	... 19 more
Caused by: java.util.concurrent.ExecutionException: java.lang.ArrayIndexOutOfBoundsException: 129
	at org.apache.hive.druid.com.google.common.util.concurrent.AbstractFuture$Sync.getValue(AbstractFuture.java:299)
	at org.apache.hive.druid.com.google.common.util.concurrent.AbstractFuture$Sync.get(AbstractFuture.java:286)
	at org.apache.hive.druid.com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:116)
	at org.apache.hadoop.hive.druid.io.DruidRecordWriter.pushSegments(DruidRecordWriter.java:165)
	... 27 more
Caused by: java.lang.ArrayIndexOutOfBoundsException: 129
	at org.apache.hive.druid.com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(ByteQuadsCanonicalizer.java:870)
	at org.apache.hive.druid.com.fasterxml.jackson.core.json.UTF8StreamJsonParser.addName(UTF8StreamJsonParser.java:2340)
	at org.apache.hive.druid.com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(UTF8StreamJsonParser.java:2224)
	at org.apache.hive.druid.com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongName(UTF8StreamJsonParser.java:1804)
	at org.apache.hive.druid.com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumName2(UTF8StreamJsonParser.java:1786)
	at org.apache.hive.druid.com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumName(UTF8StreamJsonParser.java:1743)
	at org.apache.hive.druid.com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(UTF8StreamJsonParser.java:1678)
	at org.apache.hive.druid.com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextToken(UTF8StreamJsonParser.java:740)
	at org.apache.hive.druid.com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:231)
	at org.apache.hive.druid.com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:118)
	at org.apache.hive.druid.com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:3051)
	at org.apache.hive.druid.com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:2215)
	at org.apache.hive.druid.io.druid.segment.IndexIO$V9IndexLoader.load(IndexIO.java:1008)
	at org.apache.hive.druid.io.druid.segment.IndexIO.loadIndex(IndexIO.java:222)
	at org.apache.hive.druid.io.druid.segment.realtime.appenderator.AppenderatorImpl.persistHydrant(AppenderatorImpl.java:1003)
	at org.apache.hive.druid.io.druid.segment.realtime.appenderator.AppenderatorImpl.access$200(AppenderatorImpl.java:93)
	at org.apache.hive.druid.io.druid.segment.realtime.appenderator.AppenderatorImpl$2.doCall(AppenderatorImpl.java:385)
	at org.apache.hive.druid.io.druid.common.guava.ThreadRenamingCallable.call(ThreadRenamingCallable.java:44)
	... 4 more
]], Vertex did not succeed due to OWN_TASK_FAILURE, failedTasks:1 killedTasks:4, Vertex vertex_1502725432788_0017_7_03 [Reducer 3] killed/failed due to:OWN_TASK_FAILURE]DAG did not succeed due to VERTEX_FAILURE. failedVertices:1 killedVertices:0 (state=08S01,code=2)
[1906-04-26 00:00:00.0, "AAAAAAAAIAAAAAAA", "2000-03-13", "eing", 1906-01-01 00:00:00.0]
[1906-04-26 00:00:00.0, "AAAAAAAAKAAAAAAA", "1999-03-14", "ought", 1906-01-01 00:00:00.0]
......
....

[1906-05-22 00:00:00.0, "AAAAAAAAIAAAAAAA", "1997-03-13", "eing", 1906-01-01 00:00:00.0]
[1906-05-22 00:00:00.0, "AAAAAAAAKAAAAAAA", "1997-03-13", "bar", 1906-01-01 00:00:00.0]
[1906-05-22 00:00:00.0, "AAAAAAAAKAAAAAAA", "2001-03-13", "ought", 1906-01-01 00:00:00.0]
....

[1906-05-26 00:00:00.0, "AAAAAAAAKAAAAAAA", "1999-03-14", "ought", 1906-01-01 00:00:00.0]
[1906-05-28 00:00:00.0, "AAAAAAAACAAAAAAA", "1997-03-13", "able", 1906-01-01 00:00:00.0]
[1906-05-28 00:00:00.0, "AAAAAAAAEAAAAAAA", "1997-03-13", "ese", 1906-01-01 00:00:00.0]
[1906-05-28 00:00:00.0, "AAAAAAAAEAAAAAAA", "2001-03-13", "cally", 1906-01-01 00:00:00.0]
{code}
, [~dileep529] Thanks for reporting this issue, the shading patch should fix it. , This jira is resolved and released with Hive 3.0 If you find an issue with it, please create a new jira.]