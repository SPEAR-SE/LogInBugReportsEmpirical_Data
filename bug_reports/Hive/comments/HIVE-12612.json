[I could not reproduce your test case.

{code:shell}
$ echo "show databases;" | bl -f /dev/stdin
scan complete in 2ms
Connecting to jdbc:hive2://xx.yy.com:10000/default;principal=hive/_HOST@HADOOP
Connected to: Apache Hive (version 1.1.0-cdh5.5.1)
Driver: Hive JDBC (version 1.1.0-cdh5.5.0)
Transaction isolation: TRANSACTION_REPEATABLE_READ
/dev/stdin (No such device or address)
{code}, Ruslan, thank you for looking into this. In order to reproduce the issue, you don't have to read from /dev/stdin (that was in fact used as part of the workaround instead).

To reproduce, type instead the following in a bash shell:

{code}
if echo "boo;" | beeline -u "jdbc:hive2://..." 
then echo 'This is a bug!'
else echo 'Failed as expected'
fi
{code}, Just tested, it works for me (I have bl as an alias for beeline to connect to one of the clusters):

{code}
$ echo "show databases;" | bl
scan complete in 4ms
Connecting to jdbc:hive2://xx.yy:10000/default;principal=hive/_HOST@HADOOP
Connected to: Apache Hive (version 1.1.0-cdh5.5.1)
Driver: Hive JDBC (version 1.1.0-cdh5.5.1)
Transaction isolation: TRANSACTION_REPEATABLE_READ
Beeline version 1.1.0-cdh5.5.1 by Apache Hive
0: jdbc:hive2://xx.yy.com:1> show databases;
+-------------------+--+
|   database_name   |
+-------------------+--+
| default           |
. . . 
+-------------------+--+
13 rows selected (0.832 seconds)
0: jdbc:hive2://xx.yy.com:1> Closing: 0: jdbc:hive2://. . . 
rdautkha $
{code}
, Have you tried feeding Beeline with an invalid statement? The issue is that, if the query is malformed or fails for some other reason, the exit status of the Beeline process is still 0 (which indicates that the command completed successfully) rather than the expected non-zero status indicating that there was a failure.

Note that it will be evident from what Beeline prints on STDOUT and STDERR that it detected the failure, but if you use the shell commands that test the actual exit status (like the 'if' statement or the '&&' operator), then they would behave as if the command ran successfully., Got it. Yep, that's correct. I see that beeline always returns 0 even for bad input. Bummer. Thanks for submitting this., [~psequeirag]  - hey, thanks for the workaround suggestion. we too use tons of here documents and this is a show stopper.   

/dev/stdin  should be treated same as -f flag (a file) when /dev/stdin is not a tty. :), Was able to reproduce this issue earlier, but was wondering on what we want the desired behavior to be. For example, if the user executes something like:

{code}
echo "should-fail; show tables;" | beeline
{code}

what should the output be? Should it return '0' because the last command ran successfully, or should it return some error code because the first command failed? In addition, when running a standard (long-running) beeline session, should we ever return a failure result (if say one of the commands during the session fails)? Seems like the workaround here is the only realistic solution, but would love input., I think beeline should stop as soon as an error occurs. Take mysql as an example:
{noformat}
$ echo "s; show databases;" | mysql
ERROR 1064 (42000) at line 1: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 's' at line 1
{noformat}

The {{s}} command does not exist, so Mysql fails without executing the rest of the commands., I agree with Sergio: if any statement fails to execute for some reason, abort immediately the entire script even if it's a long running one. Many of our scripts run unattended and for long a long time, and we rely on early failure detection to be notified that things went wrong and that we should look at them., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12794805/HIVE-12612.01.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 14 failed/errored test(s), 9831 tests executed
*Failed tests:*
{noformat}
TestCliDriver-tez_union_dynamic_partition.q-udf_in_file.q-mapjoin_filter_on_outerjoin.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-groupby3_map.q-sample2.q-auto_join14.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-groupby_map_ppr_multi_distinct.q-table_access_keys_stats.q-groupby4_noskew.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-join_rc.q-insert1.q-vectorized_rcfile_columnar.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-ppd_join4.q-join9.q-ppd_join3.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-timestamp_lazy.q-bucketsortoptimize_insert_4.q-date_udf.q-and-12-more - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver_llap_udf
org.apache.hive.beeline.cli.TestHiveCli.testErrOutput
org.apache.hive.beeline.cli.TestHiveCli.testInValidCmd
org.apache.hive.beeline.cli.TestHiveCli.testSourceCmd3
org.apache.hive.beeline.cli.TestHiveCli.testUseCurrentDB1
org.apache.hive.beeline.cli.TestHiveCli.testUseCurrentDB2
org.apache.hive.beeline.cli.TestHiveCli.testUseCurrentDB3
org.apache.hive.beeline.cli.TestHiveCli.testUseInvalidDB
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7357/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7357/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-7357/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 14 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12794805 - PreCommit-HIVE-TRUNK-Build, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12795428/HIVE-12612.02.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 9 failed/errored test(s), 9882 tests executed
*Failed tests:*
{noformat}
TestSparkCliDriver-groupby3_map.q-sample2.q-auto_join14.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-groupby_map_ppr_multi_distinct.q-table_access_keys_stats.q-groupby4_noskew.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-join_rc.q-insert1.q-vectorized_rcfile_columnar.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-ppd_join4.q-join9.q-ppd_join3.q-and-12-more - did not produce a TEST-*.xml file
org.apache.hadoop.hive.ql.exec.vector.expressions.TestVectorTimestampExpressions.testVectorUDFMonthString
org.apache.hadoop.hive.ql.exec.vector.expressions.TestVectorTimestampExpressions.testVectorUDFMonthTimestamp
org.apache.hadoop.hive.ql.exec.vector.expressions.TestVectorTimestampExpressions.testVectorUDFYearString
org.apache.hadoop.hive.ql.exec.vector.expressions.TestVectorTimestampExpressions.testVectorUDFYearTimestamp
org.apache.hive.jdbc.TestMultiSessionsHS2WithLocalClusterSpark.testSparkQuery
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7396/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7396/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-7396/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 9 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12795428 - PreCommit-HIVE-TRUNK-Build, [~sircodesalot] The patch looks good.

Just a few of questoins:
- Can we remove the lines that you commented from QueryProfileServlet.java?.
- why is {{lastExecutionResult}} a class variable? I see it is used only on the execute() method.
- I see there is a hive-site.xml on beeline/src/test/resources already. why are we changing the one from conf?
, Ah, sorry about that - picked up some of my local changes. New patch available., code looks good +1
Let's wait for the tests., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12796057/HIVE-12612.03.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 5 failed/errored test(s), 9921 tests executed
*Failed tests:*
{noformat}
TestSparkCliDriver-groupby_map_ppr_multi_distinct.q-groupby10.q-timestamp_comparison.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-parallel_join0.q-union_remove_9.q-smb_mapjoin_21.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-ppd_join4.q-join9.q-ppd_join3.q-and-12-more - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver_index_bitmap3
org.apache.hive.jdbc.TestMultiSessionsHS2WithLocalClusterSpark.testSparkQuery
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7430/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7430/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-7430/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 5 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12796057 - PreCommit-HIVE-TRUNK-Build, Thanks [~sircodesalot] for your contribution.]