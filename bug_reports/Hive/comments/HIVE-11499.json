[cc [~thejas], 

{color:red}Overall{color}: -1 no tests executed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12749388/HIVE-11499.1.patch

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4888/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/4888/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-4888/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Tests exited with: NonZeroExitCodeException
Command 'bash /data/hive-ptest/working/scratch/source-prep.sh' failed with exit status 1 and output '+ [[ -n /usr/java/jdk1.7.0_45-cloudera ]]
+ export JAVA_HOME=/usr/java/jdk1.7.0_45-cloudera
+ JAVA_HOME=/usr/java/jdk1.7.0_45-cloudera
+ export PATH=/usr/java/jdk1.7.0_45-cloudera/bin/:/usr/local/apache-maven-3.0.5/bin:/usr/java/jdk1.7.0_45-cloudera/bin:/usr/local/apache-ant-1.9.1/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/hiveptest/bin
+ PATH=/usr/java/jdk1.7.0_45-cloudera/bin/:/usr/local/apache-maven-3.0.5/bin:/usr/java/jdk1.7.0_45-cloudera/bin:/usr/local/apache-ant-1.9.1/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/hiveptest/bin
+ export 'ANT_OPTS=-Xmx1g -XX:MaxPermSize=256m '
+ ANT_OPTS='-Xmx1g -XX:MaxPermSize=256m '
+ export 'M2_OPTS=-Xmx1g -XX:MaxPermSize=256m -Dhttp.proxyHost=localhost -Dhttp.proxyPort=3128'
+ M2_OPTS='-Xmx1g -XX:MaxPermSize=256m -Dhttp.proxyHost=localhost -Dhttp.proxyPort=3128'
+ cd /data/hive-ptest/working/
+ tee /data/hive-ptest/logs/PreCommit-HIVE-TRUNK-Build-4888/source-prep.txt
+ [[ false == \t\r\u\e ]]
+ mkdir -p maven ivy
+ [[ git = \s\v\n ]]
+ [[ git = \g\i\t ]]
+ [[ -z master ]]
+ [[ -d apache-github-source-source ]]
+ [[ ! -d apache-github-source-source/.git ]]
+ [[ ! -d apache-github-source-source ]]
+ cd apache-github-source-source
+ git fetch origin
+ git reset --hard HEAD
HEAD is now at 835d718 HIVE-11466: HIVE-10166 generates more data on hive.log causing Jenkins to fill all the disk (Reviewed by Prasanth)
+ git clean -f -d
Removing ql/src/java/org/apache/hadoop/hive/ql/hooks/PostExecOrcFileDump.java
Removing ql/src/test/queries/clientpositive/orc_file_dump.q
Removing ql/src/test/results/clientpositive/orc_file_dump.q.out
+ git checkout master
Already on 'master'
+ git reset --hard origin/master
HEAD is now at 835d718 HIVE-11466: HIVE-10166 generates more data on hive.log causing Jenkins to fill all the disk (Reviewed by Prasanth)
+ git merge --ff-only origin/master
Already up-to-date.
+ git gc
+ patchCommandPath=/data/hive-ptest/working/scratch/smart-apply-patch.sh
+ patchFilePath=/data/hive-ptest/working/scratch/build.patch
+ [[ -f /data/hive-ptest/working/scratch/build.patch ]]
+ chmod +x /data/hive-ptest/working/scratch/smart-apply-patch.sh
+ /data/hive-ptest/working/scratch/smart-apply-patch.sh /data/hive-ptest/working/scratch/build.patch
patch: **** unexpected end of file in patch
patch: **** unexpected end of file in patch
patch: **** unexpected end of file in patch
The patch does not appear to apply with p0, p1, or p2
+ exit 1
'
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12749388 - PreCommit-HIVE-TRUNK-Build, [~vgumashta] Looks like the patch needs rebase for master.
 # I think it would be better to create an ObjectStore function that does the cleanup, so that we limit the DN logic to that class.
 # LOG.info(e);  This can be change to LOG.warn("Failed to clean datanucleus classloader cache");
 # Orphan Jira references will clutter the code over time. I assume it was added to show which jira added that change, but we have git blame for that, and over time the code would change and these references would be very unreliable. IMO, Jira references are useful if they are needed to provide more context in a comment. eg "DataNucleus caches classloaders in NucleusContext.classLoaderResolverMap . See references in profiler snapshot in HIVE-11499" . Such references are not as likely to be out of sync.


, Can you also add a unit test for this ? Maybe in testjdbcdriver , have a test that adds jar, then close session and see if this object is empty ?
, [~thejas] Patch attached incorporating your feedback., +1, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12765686/HIVE-11499.4.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 9657 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udaf_histogram_numeric
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarDataNucleusUnCaching
org.apache.hive.jdbc.TestSSL.testSSLVersion
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5583/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5583/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5583/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12765686 - PreCommit-HIVE-TRUNK-Build, TestJdbcWithMiniHS2.testAddJarDataNucleusUnCaching is failing because the test udf jar file is not yet in code base. It passes locally. This looks good to commit., Patch committed to branches. Thanks [~thejas], I noticed this patch checked in a jar file in git repo. Its usually not considered a good practice to check in binary files in source repo. We never know when we need to update source of that jar. Ideally, source code should be checked in and then it should be compiled in build phase and then used in test phase. 
[~hsubramaniyan] spent lot of time last year to make our repo binary-file free. Please reconsider decision of checking in a jar file., Created HIVE-12458 to remove the jar from source.
]