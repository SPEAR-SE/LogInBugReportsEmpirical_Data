[I see similar errors randomly. But, whenever I see doing following always get me past it:

TestRemoteHiveMetaStore.java line number 51:
 -Thread.sleep(5000);
 +Thread.sleep(20000); 

So, not sure if it has to do anything with machine having multiple IPs. I also see "Running metastore!" occurring  2-7 times when there is a random failure., This issue can now be seen on latest builds on apache machines as well https://hudson.apache.org/hudson/job/Hive-trunk-h0.20/465/console, Thank you for confirming. It is good to know that I am not going crazy. I have two separate machines running into this issue. I noticed this test "disipeared" from trunk so I assume someone else is having problems with it not testing as well., Ashutosh's hunch is right -- this doesn't have anything to do with multiple IPs.

The problem is caused by the setUp method in TestRemoteHiveMetaStore:

{code:java}
  protected void setUp() throws Exception {
    super.setUp();
    if(isServerRunning) {
      return;
    }
    Thread t = new Thread(new RunMS());
    t.start();

    // Wait a little bit for the metastore to start. Should probably have
    // a better way of detecting if the metastore has started?
    Thread.sleep(5000);

    // ...

    client = new HiveMetaStoreClient(hiveConf);
    isThriftClient = true;

    // Now you have the client - run necessary tests.
    isServerRunning = true;
  }
{code}

JUnit calls this method once before running each testcase, and if setUp() throws an
exception it will fail the current test before continuing onto the next one.

On slow machines it can take longer than 5 seconds for the MetaStore server process
to initialize and open a listening socket (RunMS()). When this happens the
HiveMetaStoreClient constructor fails with an exception that causes setUp to exit before
setting isServerRunning to true. JUnit then fails the current testcase and immediately begins initializing
the next testcase, which results in another call to setUp(). Since isServerRunning is still false
we end up starting another MetaStore server thread which will attempt to open a listening
socket on the same port as the first thread, which is what causes the TTransportException
that you see in the log above., Right I noticed that isServerRunning check is failing. I do not think it is limited to 'slow machines' this fails on server class hardware as well as my laptop with 4GB ram and a quad core. , This patch attempts to fix the intermittent failures in TestRemoteHiveMetaStore by instituting a 60 second
wait between consecutive connection attempts in HiveMetaStoreClient. This wait period is configurable
via the new configuration property hive.metastore.client.connect.retry.delay. The patch also defines the
new configuration property hive.metastore.client.socket.timeout that is used to set the timeout value on
Thrift socket wrapped by HiveMetaStoreClient.
, Review request: https://reviews.apache.org/r/260/, +1.  Will commit when tests pass.
, Committed.  Thanks Carl!
]