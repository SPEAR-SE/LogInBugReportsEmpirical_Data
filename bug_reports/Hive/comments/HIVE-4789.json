[test expressing the problem, fix that makes said test pass.

[review board for request|https://reviews.apache.org/r/12100/], LGTM. Running test., Failing so many tests but I believe it's environmental problem. I will check that., Is it ~100? getting the same. another dev checked and chased it down to query plan changes caused by the update to MetaStoreUtils, Canceling patch, since .q.out files need to be updated., I applied Sean's patch and then test the tests with overwrite turned on. Attaching here to get another test run., 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12595235/HIVE-4789.2.patch.txt

{color:green}SUCCESS:{color} +1 2749 tests passed

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/265/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/265/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated., Since the latest patch passes test [~navis] or [~ashutoshc] did you want to take alook? Since there are so many qfile updates I think this patch could easily get stale., Some of the changes in golden file (particularly in .xml plans) we should be able to avoid by improving HIVE-4967 I will do investigation to check this., On the second thought I think it doesnt make sense to delay this patch for HIVE-4967 we can update golden files again if it happens so.
I reviewed the patch and I have question for [~busbey]
As far as I can see, problem should have been fixed by your changes in FetchOperator.java? I didn't get why you needed to make changes in MetaStoreUtils.java. Can you briefly explain why is it needed?, When I first implemented this I just did FetchOperator. Rerunning the test on simple fetches failed with an exception in MetaStoreUtils, so I made the set of changes there to include the same fall back to table level information. However, I can't reproduce that failure now either on r1496332 or HEAD.

I still think the change would make things more consistent, but it could wait for a test that can reliably cause MetaStoreUtils to explode. Would you prefer an updated patch that punts on the MetaStoreUtils change (and associated .out changes), or a test that can cause MetaStoreUtils to fail?, Your changes in MetaStoreUtils are indeed reasonable. I just wanted to make sure whether they are really needed. If you can come up with a testcase, which shows the failure without changes in MetaStoreUtils, that will make it easier to concretize why these changes are useful., [~busbey], although your changes to metastoreutil are reasonable, I am wondering how we can move ahead on this issue. If we cannot reproduce without the metastoreutil changes, should we go ahead and remove them?, [~brocknoland], I haven't had time to put together a test to hit the MetaStoreUtil changes and it seems unlikely I will this week. Given that, I think it's probably a good idea to break those changes into a different ticket., OK, cool. Do you have time to do that? If not I'd be willing to help out with that., Yeah sure. I have the changes isolated, waiting for a full unit test run so I can figure out if I need to update any .out files.

Not sure yet how to phrase the follow on ticket title, since I don't have a failure test yet, though I think I just need to get the SimpleFetchOptimizer to go into aggressive mode., Modified patch with just the FetchOperator changes. [reviewboard updated|https://reviews.apache.org/r/12100/], 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12600784/HIVE-4789.3.patch.txt

{color:green}SUCCESS:{color} +1 2902 tests passed

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/573/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/573/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated., +1, Committed to trunk. Thanks, Sean!, FAILURE: Integrated in Hive-trunk-hadoop2 #392 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/392/])
HIVE-4789 : FetchOperator fails on partitioned Avro data (Sean Busbey via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1519132)
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchOperator.java
* /hive/trunk/ql/src/test/queries/clientpositive/avro_partitioned.q
* /hive/trunk/ql/src/test/results/clientpositive/avro_partitioned.q.out
, FAILURE: Integrated in Hive-trunk-hadoop2-ptest #79 (See [https://builds.apache.org/job/Hive-trunk-hadoop2-ptest/79/])
HIVE-4789 : FetchOperator fails on partitioned Avro data (Sean Busbey via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1519132)
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchOperator.java
* /hive/trunk/ql/src/test/queries/clientpositive/avro_partitioned.q
* /hive/trunk/ql/src/test/results/clientpositive/avro_partitioned.q.out
, FAILURE: Integrated in Hive-trunk-hadoop1-ptest #146 (See [https://builds.apache.org/job/Hive-trunk-hadoop1-ptest/146/])
HIVE-4789 : FetchOperator fails on partitioned Avro data (Sean Busbey via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1519132)
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchOperator.java
* /hive/trunk/ql/src/test/queries/clientpositive/avro_partitioned.q
* /hive/trunk/ql/src/test/results/clientpositive/avro_partitioned.q.out
, FAILURE: Integrated in Hive-trunk-h0.21 #2300 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2300/])
HIVE-4789 : FetchOperator fails on partitioned Avro data (Sean Busbey via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1519132)
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchOperator.java
* /hive/trunk/ql/src/test/queries/clientpositive/avro_partitioned.q
* /hive/trunk/ql/src/test/results/clientpositive/avro_partitioned.q.out
, This issue has been fixed and released as part of 0.12 release. If you find further issues, please create a new jira and link it to this one.]