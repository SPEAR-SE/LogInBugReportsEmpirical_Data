[The patch incommensurate with the amount of pain wrought by the debugging session :), [~hagleitn] [~ashutoshc] can you take a look? wrt logging changes, "Initializing..." is already logged at info level, so I changed "Closing" to also be at info level, and to use the same format for the message., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12840352/HIVE-15278.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 5 failed/errored test(s), 10733 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[transform_ppr2] (batchId=133)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[join_acid_non_acid] (batchId=150)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[union_fast_stats] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_4] (batchId=91)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_5] (batchId=90)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/2277/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/2277/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-2277/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 5 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12840352 - PreCommit-HIVE-Build, LGTM +1. This does look like it'd be painful to debug. Is it possible to add a small test to avoid this debug pain for the next person?

One thing I'm not completely sure of: The bug is that the join operator is trying to pump records through it's parents after they have been closed. It's doing that to finish the last pending group when the first of it's parents is closed. Your fix finishes the group after the first parent is closed not the last - do you know for a fact that the join operator won't try to push records through that (closed) parent? (I think that's the case because it's the big table side and all remaining records should be from other branches)., Yes, we make 2 assumptions:
1) That it won't try to pump more records thru the big table side, which won't work in any way; logically, it makes no sense cause the big table side is the one that's causing the operators to get closed in the first place, so it should be done with all records.
2) Main table side is closed first. That is true now; reduceWork vs mergeWorkList in ReduceRecordProducer.

I am not sure if we can add a test. Repro that we have is too specific (and large potentially) for q files and this code is too much of a mess to repro with a unit test., [~hagleitn] ping, does +1 still stand?, Committed to master]