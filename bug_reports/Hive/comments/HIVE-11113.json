[[~shiroy], I tried your queries, the first one passed and the second one has a different error msg which says that there is " Invalid partitioning key/value". Could you update your Hive to the most recent version and double check the quote ' that you use? Thanks. also ccing [~jpullokkaran].
{code}
hive> ANALYZE TABLE people_part PARTITION(dob='2015-10-2',nationality) COMPUTE STATISTICS FOR COLUMNS;
Query ID = pxiong_20150625114030_a4536dbc-6c31-4b89-bc22-6f56981cb6dc
Total jobs = 1
Launching Job 1 out of 1
Number of reduce tasks not specified. Estimated from input data size: 1
In order to change the average load for a reducer (in bytes):
  set hive.exec.reducers.bytes.per.reducer=<number>
In order to limit the maximum number of reducers:
  set hive.exec.reducers.max=<number>
In order to set a constant number of reducers:
  set mapreduce.job.reduces=<number>
Job running in-process (local Hadoop)
2015-06-25 11:40:32,399 Stage-0 map = 100%,  reduce = 100%
Ended Job = job_local728672066_0002
MapReduce Jobs Launched:
Stage-Stage-0:  HDFS Read: 0 HDFS Write: 0 SUCCESS
Total MapReduce CPU Time Spent: 0 msec
OK
Time taken: 1.495 seconds
{code}
{code}
hive> ANALYZE TABLE people_part PARTITION(dob='2015-10-2',nationality='IE') COMPUTE STATISTICS FOR COLUMNS;
FAILED: SemanticException [Error 30007]: Invalid partitioning key/value specified in ANALYZE statement : {dob=2015-10-2, nationality=IE}
{code}
, Thank you Pengcheng Xiong for looking into this.
Could you please tell me the version of hive that ran the following query successfully?
ANALYZE TABLE people_part PARTITION(dob='2015-10-2',nationality) COMPUTE STATISTICS FOR COLUMNS;

Regards
Shiroy

, [~shiroy], Hive 1.2 should work. Thanks., Hi, [~pxiong] and [~shiroy]
I tried this scenario on Hive 1.2.1. And found it could work for a table stored as TEXTFILE, but cant NOT work for the one stored as PARQUET.

Errors
======
Caused by: java.lang.IllegalArgumentException: Column [ds] was not found in schema!
        at parquet.Preconditions.checkArgument(Preconditions.java:55)
        at parquet.filter2.predicate.SchemaCompatibilityValidator.getColumnDescriptor(SchemaCompatibilityValidator.java:190)
        at parquet.filter2.predicate.SchemaCompatibilityValidator.validateColumn(SchemaCompatibilityValidator.java:178)
        at parquet.filter2.predicate.SchemaCompatibilityValidator.validateColumnFilterPredicate(SchemaCompatibilityValidator.java:160)
        at parquet.filter2.predicate.SchemaCompatibilityValidator.visit(SchemaCompatibilityValidator.java:94)
        at parquet.filter2.predicate.SchemaCompatibilityValidator.visit(SchemaCompatibilityValidator.java:59)
        at parquet.filter2.predicate.Operators$Eq.accept(Operators.java:180)
        at parquet.filter2.predicate.SchemaCompatibilityValidator.validate(SchemaCompatibilityValidator.java:64)
        at parquet.filter2.compat.RowGroupFilter.visit(RowGroupFilter.java:59)
        at parquet.filter2.compat.RowGroupFilter.visit(RowGroupFilter.java:40)
        at parquet.filter2.compat.FilterCompat$FilterPredicateCompat.accept(FilterCompat.java:126)
        at parquet.filter2.compat.RowGroupFilter.filterRowGroups(RowGroupFilter.java:46)
        at org.apache.hadoop.hive.ql.io.parquet.read.ParquetRecordReaderWrapper.getSplit(ParquetRecordReaderWrapper.java:275)
        at org.apache.hadoop.hive.ql.io.parquet.read.ParquetRecordReaderWrapper.<init>(ParquetRecordReaderWrapper.java:99)
        at org.apache.hadoop.hive.ql.io.parquet.read.ParquetRecordReaderWrapper.<init>(ParquetRecordReaderWrapper.java:85)
        at org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat.getRecordReader(MapredParquetInputFormat.java:72)
        at org.apache.hadoop.hive.ql.io.CombineHiveRecordReader.<init>(CombineHiveRecordReader.java:67)
        ... 16 more


Reproduced Queries
==================
create table dummy (key string, value string) partitioned by (ds string, hr string);

load data local inpath 'kv1.txt' into table dummy partition (ds='2008',hr='12');
load data local inpath 'kv1.txt' into table dummy partition (ds='2008',hr='11');

select * from dummy;
analyze table dummy partition (ds='2008',hr='12') compute statistics for columns key;


create table dummy2 (key string, value string) partitioned by (ds string, hr string)stored as parquet;
insert into table dummy2 partition (ds='2008',hr='12')
select key, value from dummy where (ds='2008');

select * from dummy2;
analyze table dummy2 partition(ds='2008') compute statistics for columns key;, [~libing], I tried your queries on both 1.2.1 and also latest master. I could not reproduce your problem. In both cases, they ran fine. Thanks., Hi, @Pengcheng Xiong
What's the value of hive.optimize.ppd in your cluster?
I can run into the error if I set it to true., [~libing], i was using default setting of ppd (true). So you have problem when you set it to true and no problem when you set it to false?, Hi, [~pxiong]
Thank you for your quick response.
Yes, I tried the queries on two different cluster. And both of them ran into this error in 

analyze table dummy2 partition(ds='2008') compute statistics for columns key;

Then I tried to set hive.optimize.ppd to false, it would work, but got a bad performance.

Do you have some idea that which classes may lead into it?

Thank you!, [~libing], the initial problem that you were asking is why analyze table people_part does not work. Later, you changed the question to "found it could work for a table stored as TEXTFILE, but cant NOT work for the one stored as PARQUET." Now, you are asking why "analyze table dummy2 partition(ds='2008') compute statistics for columns key;" does not work. I assume table dummy2 has a different schema from table people_part? Could you confirm that? Thanks., Hi, [~pxiong]
I didn't run the query for "people_part".

What I ran list in my previous comment with "Reproduced Queries".

In the "reproduced queries", I tried two different types of tables, one is TEXTFILE, and the other is PARQUET.

The ANALYZE command on TEXTFILE was passed, while failed on PARQUET table with the error.


analyze table dummy partition (ds='2008',hr='12') compute statistics for columns key;    // PASS
analyze table dummy2 partition(ds='2008') compute statistics for columns key;  //FAILED


Then I tried to disable hive.optimize.ppd, set its value to false. Then the following query could work without any error

analyze table dummy2 partition(ds='2008') compute statistics for columns key;  , Hi [~libing], I see. But I still could not reproduce your problem on the latest master. Could you update your Hive to the latest version and try again? Please also post the stack trace as well if possible. Thanks., [~libing], [~pxiong], the error message "Column [ds] was not found in schema!" is a different problem than reported in this JIRA originally and is specific to parquet tables with partitions and not limited to analyze. I opened HIVE-11326 for the parquet problem and added steps to reproduce the problem over there., Thank you, [~tfriedr]
With your fix in HIVE-11326, all the queries could work now., [~tfriedr], thanks for your efforts. So, I am going to close this jira, [~shiroy] and [~libing] please feel free to reopen it if the problem remains. Thanks.]