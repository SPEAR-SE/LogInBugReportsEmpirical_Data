[
[~qf@1314] I was unable to reproduce your problem on current master; could you give the schemas of the tables; or try executing the following example; (note: it drops the tables; and recreates them)

{code:sql}
-- table broadcast_time partitioned by par_date(yyyyMMdd)
-- createtime:yyyy-MM-dd HH:mm:ss
-- 1,when use alias field par_date(same name with partitioned field)

drop table if exists broadcast_time;
drop table if exists room_info;

-- create table broadcast_time (createtime string,par_date string,qid string);
create table broadcast_time (createtime string,qid string) partitioned by (par_date string);
create table room_info (par_date string,qid string);

insert into room_info values ('20171023','13');
insert into room_info values ('20171022','13');

insert into broadcast_time partition (par_date='20171023') values
	('20171023 A','13'),
	('20171023 B','13'),
	('20171023 C','13');

SELECT
  par_date,
  count(1)
FROM
  (
    SELECT
      qid,
      substr(createtime, 1, 11) par_date
    FROM broadcast_time
    WHERE par_date = 20171023 AND qid = 13
  ) t1
 JOIN
  (
    SELECT qid
    FROM room_info
    WHERE par_date = 20171023
  ) r
    ON t1.qid = r.qid
GROUP BY par_date;

-- get reuslt:
-- 20171023	39

-- 2,when use alias field new_par_date(different with partitioned field)

SELECT
  new_par_date,
  count(1)
FROM
  (
    SELECT
      qid,
      substr(createtime, 1, 11) new_par_date
    FROM broadcast_time
    WHERE par_date = 20171023 AND qid = 13
  ) t1
 JOIN
  (
    SELECT qid
    FROM room_info
    WHERE par_date = 20171023
  ) r
    ON t1.qid = r.qid
GROUP BY new_par_date;

-- more results :)
{code}]