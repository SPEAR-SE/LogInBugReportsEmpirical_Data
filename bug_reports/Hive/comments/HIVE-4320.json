[Thought about this some more and did some testing. Comparing storing two's complement in two longs v packing 9 digits shouldn't have a performance impact. The latter method does seem make implementation easier (add/sub will not overflow, multiplication won't overflow in long). So, all in all it's better to be aligned with other DBs than gain a little more leeway in implementing these operations., Review: https://reviews.facebook.net/D10227, +1 will commit if tests pass., It would be good to have this in 0.11 as well, so we don't have different max limit between versions., Test {{decimal_udf.q}} failed., My apologies. I forgot to include the updates to the golden file for decimal_udf.q in the patch. HIVE-4320.2.patch has it (if you diff the two patches you'll see that it's the only change)., Test {{decimal_precision.q}} is now failing, after commit of HIVE-4327, My bad. Test passed when I ran it again. I must be doing something wrong earlier.
Committed to trunk and 0.11. Thanks, Gunther!, Integrated in Hive-trunk-h0.21 #2068 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2068/])
    HIVE-4320 : Consider extending max limit for precision to 38 (Gunther Hagleitner via Ashutosh Chauhan) (Revision 1468588)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1468588
Files : 
* /hive/trunk/common/src/java/org/apache/hadoop/hive/common/type/HiveDecimal.java
* /hive/trunk/data/files/kv8.txt
* /hive/trunk/ql/src/test/results/clientpositive/decimal_precision.q.out
* /hive/trunk/ql/src/test/results/clientpositive/decimal_udf.q.out
]