[OK, did some debugging. Here's how the above step 4) carries out:
1. In the HS2 handler thread, when calling {{Driver#compile}}, a {{BaseSemanticAnalyzer}} is initialized. Since the config is changed,
the old {{Hive}} instance is replaced with a new one. Let's call the old one *A* and the new one *B*. the {{BaseSemanticAnalyzer}} instance
is initialized with *B*.
2. immediately following the above code, a HMS connection is created for *B* for flushing metastore cache.
3. the handler thread launches a background thread for query execution, which will first set the thread-local {{Hive}} instance using the handler's {{parentHive}} field, *which still refers to A*. So now *B* is overwritten by *A*!. There's no variable refers to *B*, and *B* holds a open HMS connection...
4. the background thread executes the query, and opens new HMS connections.
5. after the background thread is done, the handler thread will then set the thread-local {{Hive}} instance with {{sessionHive}}, which also points to *A*. So now the handler thread is using *A* again.

As result, the copy *B* is permanently lost, along with the connection.]