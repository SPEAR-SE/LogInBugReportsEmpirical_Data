[wedcsProperties column starts with [SOH][ETX][STX], where SOH is start of heading with value '\001' in terms of OCT, ETX is end of text with end of text with value '\003' , and STX is start of text with value '\002'. [STX][ETX] is the format good for map's key/value pair representation. 

In the data file, [STX][ETX] means empty map pair, this will make query hanging forever by complaining nothing.

Of course '[' and ']' don't exist, only for notation purpose in the comment. Be sure to use Notepad++ to view these special chars., Just verified, [STX]my-key[ETX] is fine for empty value with specific key, however,  [STX][EXT]my-value doesn't really work. So the conclusion is empty key will hang the query., By debugging, it enters an indefinite loop,
LazyMap.parse() line: 173	
LazyMap.getMap() line: 320	
LazyMapObjectInspector.getMap(Object) line: 104	
SerDeUtils.buildJSONString(StringBuilder, Object, ObjectInspector, String) line: 317	
SerDeUtils.getJSONString(Object, ObjectInspector, String) line: 197	
DelimitedJSONSerDe.serializeField(ByteStream$Output, Object, ObjectInspector, LazySimpleSerDe$SerDeParameters) line: 60	
DelimitedJSONSerDe(LazySimpleSerDe).doSerialize(Object, ObjectInspector) line: 422	
DelimitedJSONSerDe(AbstractEncodingAwareSerDe).serialize(Object, ObjectInspector) line: 50	
DefaultFetchFormatter<T>.convert(Object, ObjectInspector) line: 71	
DefaultFetchFormatter<T>.convert(Object, ObjectInspector) line: 40	
ListSinkOperator.processOp(Object, int) line: 87	
SelectOperator(Operator<T>).forward(Object, ObjectInspector) line: 800	
SelectOperator.processOp(Object, int) line: 84	
TableScanOperator(Operator<T>).forward(Object, ObjectInspector) line: 800	
TableScanOperator.processOp(Object, int) line: 95	
FetchOperator.pushRow(InspectableObject) line: 547	
FetchOperator.pushRow() line: 539	
FetchTask.fetch(List) line: 138	
Driver.getResults(List) line: 1620	
CliDriver.processLocalCmd(String, CommandProcessor, CliSessionState) line: 266	
CliDriver.processCmd(String) line: 198	
CliDriver.processLine(String, boolean) line: 408	
CliDriver.executeDriver(CliSessionState, HiveConf, OptionsProcessor) line: 781	
CliDriver.run(String[]) line: 675	
CliDriver.main(String[]) line: 614	
NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not available [native method]	
NativeMethodAccessorImpl.invoke(Object, Object[]) line: 57	
DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 43	
Method.invoke(Object, Object...) line: 601	
RunJar.run(String[]) line: 221	
RunJar.main(String[]) line: 136	, LazyMap was commented as "LazyMap does not deal with the case of a NULL map. That is handled by the parent LazyObject.", so it'd better to output some warning message regarding empty key or pair in line 173 of LazyMap.parse()., made a patch to warn empty key or empty pair. Can anyone do a quick review? Thanks!, 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12669133/HIVE-8115.1.patch

{color:green}SUCCESS:{color} +1 6279 tests passed

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/839/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/839/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-839/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12669133, [~xiaobingo] Can you explain the fix, I  see that it improves logging by warning the user not to insert null keys. The query can still hang if there is map field having null key.

Thanks
Hari, [~hsubramaniyan] This is intentional because "LazyMap does not deal with the case of a NULL map. That is handled by the parent LazyObject." , This patch lets users know what happened behind., There are 2 options here :
1. Modify Driver.getResults to throw an exception when the data is invalid.
2. Modify LazyMap.parse() something similar to this:
{code}
        if (lazyKey != null) {
        	Object key = lazyKey.getObject();
        	if(!keySet.contains(key)) {
        		mapSize++;
        		keySet.add(key);
        	} else {
        		keyInited[mapSize] = false;
        	}
        } else {

        	// Log the error without throwing an exception
        }
{code}

Thanks
Hari, Made another patch to throw RuntimeException in addition to output warning messages., 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12669865/HIVE-8115.2.patch

{color:green}SUCCESS:{color} +1 6293 tests passed

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/875/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/875/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-875/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12669865, There is an infinite loop due to parsing pointer not advanced in LazyMap.parse that hangs query in the case of bad map with empty entry. The 3rd patch logged warning message and skipped those bad entries, and made queries going on by returning good entries in map., [~alangates] [~prasanth_j] [~jdere] [~ekoifman] [~hsubramaniyan] could you review this patch please? Thanks!, Changes look good to me, +1, MInor thing, but it looks like the 3 lines under "// reset keyValueSeparatorPosition" are done whether or not lazyKey is null.  Maybe get rid of the continue statement and use an if-else so that both cases fall into the reset keyValueSeparatorPosition code afterwards.
Also, is it possible to add a test case for this?, The 4th patch, made a change to remove redundant code according to [~jdere] 'review. Will add test cases in the following patch., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12670529/HIVE-8115.4.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 6313 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.ql.parse.TestParse.testParse_union
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/929/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/929/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-929/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12670529, Made the 5th patch, and added unit test cases., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12670803/HIVE-8115.5.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 6326 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_vectorized_dynamic_partition_pruning
org.apache.hadoop.hive.ql.parse.TestParse.testParse_union
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/952/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/952/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-952/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12670803, Made the sixth patch to adjust unit test., Made the 7th patch, there are minor issues in unit test, fixed them., +1, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12674271/HIVE-8115.7.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 4138 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_parallel
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_tez_smb_1
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1224/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1224/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1224/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12674271, Thanks [~jdere], can you get the patch committed to both trunk and 0.14?, Committed to trunk.  [~vikram.dixit] this one would be good to put into 0.14 as well., Committed to 0.14 branch as well., This has been fixed in 0.14 release. Please open new jira if you see any issues.
]