[I have the fix ready. Will submit soon. Please assign back to me, Raised a Pull Request https://github.com/apache/hive/pull/442, Submitting Patch, Can you add a test case?, Ok - I'll add a test case., Working on adding test case, Hi [~daijy] - There isn't any pre-existing test case for org.apache.hive.service.cli.operation.HiveCommandOperation to which I can add.

Also there seems to be no clean way of testing just the changes made without writing a test set-up for the whole class which seems pretty involved.

Please advise, Sounds like you shall write a .q test for that. Does it reproducible by setting "hive.security.authorization.enabled"=true? It will enable the parameter blacklist check., Well the bug is actually reproducible by using any set command with a space at the beginning.  The issue is related to incorrect calculator of command args.

For example: given statement " set a.b.c.d=xyz" - the command should be "set" and the command argument should be "a.b.c.d=xyz".

However, due to this bug,  the command is derived correctly as "set" but the command argument itself is calculated as "set a.b.c.d=xyz" instead of only "a.b.c.d=xyz" and so it ends up complaining that "Cannot modify set a.b.c.d at runtime"

Hope this makes it clear, Yes, get it. From what you described a .q test is doable., [~daijy]  Submitted second patch with test case included.  (The PR [https://github.com/apache/hive/pull/442] is also updated), | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  8m 10s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 22s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 12s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m 36s{color} | {color:blue} service in master has 48 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 18s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 23s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 24s{color} | {color:green} the patch passed {color} |
| {color:red}-1{color} | {color:red} checkstyle {color} | {color:red}  0m 12s{color} | {color:red} service: The patch generated 2 new + 3 unchanged - 0 fixed = 5 total (was 3) {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  0m 43s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 17s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:red}-1{color} | {color:red} asflicense {color} | {color:red}  0m 13s{color} | {color:red} The patch generated 2 ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 12m 18s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Optional Tests |  asflicense  javac  javadoc  findbugs  checkstyle  compile  |
| uname | Linux hiveptest-server-upstream 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1+deb8u1 (2016-09-03) x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /data/hiveptest/working/yetus_PreCommit-HIVE-Build-14290/dev-support/hive-personality.sh |
| git revision | master / 3068f03 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| checkstyle | http://104.198.109.242/logs//PreCommit-HIVE-Build-14290/yetus/diff-checkstyle-service.txt |
| asflicense | http://104.198.109.242/logs//PreCommit-HIVE-Build-14290/yetus/patch-asflicense-problems.txt |
| modules | C: service U: service |
| Console output | http://104.198.109.242/logs//PreCommit-HIVE-Build-14290/yetus.txt |
| Powered by | Apache Yetus    http://yetus.apache.org |


This message was automatically generated.

, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12942663/HIVE-20608.2.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:green}SUCCESS:{color} +1 due to 15030 tests passed

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/14290/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/14290/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-14290/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.YetusPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12942663 - PreCommit-HIVE-Build, I tried head of master and does not see the issue you described. Both statement and command are trimmed. Actually when beeline send command to hiveserver2, it is already trimmed (https://github.com/apache/hive/blob/master/beeline/src/java/org/apache/hive/beeline/BeeLine.java#L1348). Are you seeing it on a particular version?, Hi [~daijy] - yes beeline trims the command before sending to hiverserver2 which is why this issue of HiveServer2 not handling untrimmed statement does not come to surface.

The issue will be reproducible if you use Java JDBC Driver for HiveServer2. 

Basically do something like:

 
{code:java}
Connection connection = DriverManager.getConnection("jdbc:hive2://localhost:10000/");
connection.createStatement().execute(" set a = b");

{code}
 

Also, if you remove my change to the HiveCommandOperation.java and then run the new test case I introduced you will see that it computes the command arguments incorrectly and it fails., Yes, you are right. I shall not use beeline. However even with jdbc driver, the statement is still get trimmed on current master. The statement is passed in by ExecuteStatementOperation.newExecuteStatementOperation, and it should be cleaned up by https://github.com/apache/hive/blob/master/service/src/java/org/apache/hive/service/cli/operation/ExecuteStatementOperation.java#L47. Possibly it is recently fixed by HIVE-16935?, Hi [~daijy],  thats ExecuteStatementOperation.java that you mention whereas my changes are to HiveCommandOperation.

Do you mean that its ExecuteStatementOperation that routes commands to HiveCommandOperation?, Yes, I did a trace, empty spaces of both "statement" and "command" are trimmed already when reaching the point. Trace back, the trimming is done by the statement I mentioned above., Hi [~daijy]

Yes - the code you pointed out from ExecuteStatementOperation.java does trim the statement and at this moment is the only point from which HiveCommandOperation's runInternal() method may be reached.

However,  I believe HiveCommandOperation.java and runInternal() should be self sufficient and should not depend on operation in another class to trim the statement for it.

In fact, if you look at the current code for HiveCommandOperation.java then it does trim the statement on line 109 (self sufficiency) but fails to use this trimmed version in next line (i.e. line 110).  This is exactly what my change fixes. 

References: 
 # [https://github.com/apache/hive/blob/0d7015468611c485c01bb80cdbe4c89e4e68b680/service/src/java/org/apache/hive/service/cli/operation/HiveCommandOperation.java#L109]
 # [https://github.com/apache/hive/pull/442/files#diff-459cb15e0bcb0c7f00727e0dcf63a3b0] 

I agree that functionally it is not a bug at the moment.  That said, I think this change shall make the code more robust.

I leave it up to your discretion to decide on the course of action.]