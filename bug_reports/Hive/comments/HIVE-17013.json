[[~ekoifman]

I'm seeing this as well.

Oddly even the explain errors out. Any idea what's going on here?

{code}
hive> delete from mydim where mydim.key in (select key from updates_staging_view);
FAILED: IllegalStateException Expected 'insert into table default.mydim select ROW__ID from default.mydim sort by ROW__ID' to be in sub-query or set operation.
hive> explain delete from mydim where mydim.key in (select key from updates_staging_view);
FAILED: IllegalStateException Expected 'insert into table default.mydim select ROW__ID from default.mydim sort by ROW__ID' to be in sub-query or set operation.
hive> select version();
OK
2.1.0.2.6.1.0-128 rd62a574991e4068c4ae7124aa35f4fbf36a12fc1
Time taken: 0.07 seconds, Fetched: 1 row(s)

hive> select key from updates_staging_view;
OK
1
3

hive> select * from mydim;
OK
3	steve	22150	true
1	bob	95136	true
2	joe	70068	true
Time taken: 0.106 seconds, Fetched: 3 row(s)
{code}

Also:
This query works
delete from mydim where mydim.key in (1, 3);
so it's something related to the subquery., We have tests https://github.com/apache/hive/blob/master/ql/src/test/org/apache/hadoop/hive/ql/TestTxnCommands.java#L397-L410 that cover "delete + in" so it probably something to do with how the optimizer deals with views.
cc [~jcamachorodriguez], [~ashutoshc]
, I would like to complete information given in the description of the ticket : 

I'm using Hive 1.2.1000.2.6.0.3-8.

I think this bug could come from the patch of this ticket https://issues.apache.org/jira/browse/HIVE-15970 and more particulary the snippet of code below : 

{code:java}
 throw new IllegalStateException("Expected '" + getMatchedText(curNode) + "' to be in sub-query or set operation.");
{code}

[https://github.com/apache/hive/blob/master/ql/src/java/org/apache/hadoop/hive/ql/Context.java]

{code:java}
/**
   * The suffix is always relative to a given ASTNode
   */
  public DestClausePrefix getDestNamePrefix(ASTNode curNode) {
    assert curNode != null : "must supply curNode";
    if(curNode.getType() != HiveParser.TOK_INSERT_INTO) {
      //select statement
      assert curNode.getType() == HiveParser.TOK_DESTINATION;
      if(operation == Operation.OTHER) {
        //not an 'interesting' op
        return DestClausePrefix.INSERT;
      }
      //if it is an 'interesting' op but it's a select it must be a sub-query or a derived table
      //it doesn't require a special Acid code path - the reset of the code here is to ensure
      //the tree structure is what we expect
      boolean thisIsInASubquery = false;
      parentLoop: while(curNode.getParent() != null) {
        curNode = (ASTNode) curNode.getParent();
        switch (curNode.getType()) {
          case HiveParser.TOK_SUBQUERY_EXPR:
            //this is a real subquery (foo IN (select ...))
          case HiveParser.TOK_SUBQUERY:
            //this is a Derived Table Select * from (select a from ...))
            //strictly speaking SetOps should have a TOK_SUBQUERY parent so next 6 items are redundant
          case HiveParser.TOK_UNIONALL:
          case HiveParser.TOK_UNIONDISTINCT:
          case HiveParser.TOK_EXCEPTALL:
          case HiveParser.TOK_EXCEPTDISTINCT:
          case HiveParser.TOK_INTERSECTALL:
          case HiveParser.TOK_INTERSECTDISTINCT:
            thisIsInASubquery = true;
            break parentLoop;
        }
      }
if(!thisIsInASubquery) {
        throw new IllegalStateException("Expected '" + getMatchedText(curNode) + "' to be in sub-query or set operation.");
      }       return DestClausePrefix.INSERT;
    }
{code}
, it may be because the optimizer manipulates the AST when dealing with views - perhaps the logic in Context doesn't handle that, Thank you [~fescandell] for a great repro.

I easily made a Q file from it (acid_view_bug.q).  FYI [~ekoifman], 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12887511/HIVE-17013.01.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 9 failed/errored test(s), 11041 tests executed
*Failed tests:*
{noformat}
TestAccumuloCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=230)
TestDummy - did not produce a TEST-*.xml file (likely timed out) (batchId=230)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[create_view] (batchId=39)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[udf_mask_hash] (batchId=28)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[union_fast_stats] (batchId=156)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[drop_table_failure2] (batchId=89)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=234)
org.apache.hadoop.hive.ql.TestAcidOnTez.testCtasTezUnion (batchId=215)
org.apache.hadoop.hive.ql.TestAcidOnTez.testNonStandardConversion01 (batchId=215)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/6838/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/6838/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-6838/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 9 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12887511 - PreCommit-HIVE-Build, no related failures  (https://builds.apache.org/job/PreCommit-HIVE-Build/6836/testReport/ for example includes all failures above)
[~mmccline] could you review , I looked at the code.  I'm not familiar with this area of the code.

[~ashutoshc] [~jcamachorodriguez] [~vgarg] can you review ASAP.  Thanks., +1, Thank you [~ashutoshc] for your review.

Committed to master under Eugene's name., Hive 3.0.0 has been released so closing this jira.]