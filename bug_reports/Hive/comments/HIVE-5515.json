[This looks suspiciously similar to HIVE-5431, linking the two., Sushanth did this Jira get fixed with HIVE-5431, The main reason for this error is that:
hive.passthrough.storagehandler.of does not get set. 

Checking why this is the case. The unit tests pass without any problems!!

Viraj, Yeah, the unit test passes with a similar scenario, but this fails when run on a standalone command. It is the same key here too., And no, HIVE-5431 did not fix this problem - that fixed it only on the read side, where it made sense that the property had not been set, and therefore, should not have been copied. In this  case, it makes sense that it should be copied, but does not make sense that it has not yet been set., Sushanth,the main reason this is failing is because:
getOutputFormatSubstitute() function is not called inside the Table.java at the point where the storagehandlerflag is true. Hence the HiveFileFormatUtils.setRealOutputFormatClassName() is not triggered. I am wondering how this is possible when running in real cluster mode and not in the unit testcase mode., Hi Sushanth,
 I think this is a major issue that if tables created using the HBaseStorageHandler in Hive 12 they cannot be populated using the command line. I found out the root cause of the problem. When the unit tests are run the  tTable.getSd().getOutputFormat() in Table.java returns null and the real output format is populated. When a table is already created and we are using an "INSERT OVERWRITE" the  tTable.getSd().getOutputFormat() returns the HivePassThroughOutputFormat and the real output format is not populated hence the null pointer exception. 

Also took this opportunity to make the call in checkOutputSpecs in FileSinkOperator.java from getConf().getTableInfo() to conf.getTableInfo()
Attaching patch and will let the CI build pick this up.

Regards
Viraj, Correct INSERT OVERWRITE for tables created using the HBaseStorageHandler, Hi Nick,
 Can you check if this patch solves the null pointer exception on your cluster.
Viraj, Thanks for the patch Viraj. I'll give this a spin tomorrow, assuming I can work out how to build it ;)

FYI, I saw the same error using both INSERT INTO and INSERT OVERWRITE., 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12608629/HIVE-5515.patch

{color:green}SUCCESS:{color} +1 4411 tests passed

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1140/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1140/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated., Hi Thejas, Sushanth,
 Can we review/ commit this patch if possible, we have tested this internally on the clusters, it works. Without this we cannot populate the table created using the HBaseStorageHandler in Hive.
Regards
Viraj, My hardware was gobbled up recently so I haven't tested the patch yet. Hopefully next week., Hi Nick,
 Our QE tested this on a Hadoop cluster. It now populates data
Viraj, Hi [~viraj].

I'm working with [~sushanth] to get a working build that I can test. In the mean time, I think the patch looks good. Can you also fix the unit test so that it would catch this issue in the future?

Thanks,
Nick, Hi Nick,
 Currently none of the testcases can reproduce this behavior. My suspicion is we need to have an actual Hive set up where the metstore is populated with metadata. 
Viraj, Hi Viraj,

With your changes, my experiments in my vm seem to succeed. However, as with HIVE-5431, we really do need to have a unit test for this. I pushed for that one making it through without a test at that time because it was difficult to re-create as a test, and we could clearly demonstrate an obvious problem and prove we fixed it. Now that we aren't looking at 0.13 release deadlines yet, I think we should spend some time trying to create a test for this.

At the base, it looks like we can create a test for this by writing a junit unit test that manages mulitple hive client instances, each of which resets the conf at the every access.

For HIVE-5431, I was considering something like writing out a hbase table directly using hbase/hfiles and then trying to read it as a hbase table from hive. Also possible is a change to the QTestUtil framework so as to have a param that allows us to reset confs between calls., Thanks again for the patch, [~viraj].

I was able to test your patch on my cluster -- problem solved!

For historical purposes, this is the complete command I ran on my HDP-2.0 cluster. Continuing from my example above:

{noformat}
HADOOP_CLASSPATH=/etc/hbase/conf:/usr/lib/hbase/lib/hbase-server-0.96.0.2.0.6.0-76-hadoop2.jar:/usr/lib/hadoop/lib/guava-11.0.2.jar:/usr/lib/hbase/lib/hbase-hadoop-compat-0.96.0.2.0.6.0-76-hadoop2.jar:/usr/lib/hbase/lib/hbase-common-0.96.0.2.0.6.0-76-hadoop2.jar:/usr/lib/hbase/lib/htrace-core-2.01.jar:/usr/lib/hbase/lib/hbase-protocol-0.96.0.2.0.6.0-76-hadoop2.jar:/usr/lib/hadoop/lib/netty-3.6.2.Final.jar:/usr/lib/hbase/lib/hbase-client-0.96.0.2.0.6.0-76-hadoop2.jar:/usr/lib/zookeeper/zookeeper-3.4.5.2.0.6.0-76.jar:/usr/lib/hadoop/lib/protobuf-java-2.5.0.jar hive -e "SET hive.aux.jars.path = file:///etc/hbase/conf/hbase-site.xml,file:///usr/lib/hive/lib/hive-hbase-handler-0.12.0.2.0.6.0-76.jar,file:///usr/lib/hbase/lib/hbase-server-0.96.0.2.0.6.0-76-hadoop2.jar,file:///usr/lib/hadoop/lib/guava-11.0.2.jar,file:///usr/lib/hbase/lib/hbase-hadoop-compat-0.96.0.2.0.6.0-76-hadoop2.jar,file:///usr/lib/hbase/lib/hbase-common-0.96.0.2.0.6.0-76-hadoop2.jar,file:///usr/lib/hbase/lib/htrace-core-2.01.jar,file:///usr/lib/hbase/lib/hbase-protocol-0.96.0.2.0.6.0-76-hadoop2.jar,file:///usr/lib/hadoop/lib/netty-3.6.2.Final.jar,file:///usr/lib/hbase/lib/hbase-client-0.96.0.2.0.6.0-76-hadoop2.jar,file:///usr/lib/zookeeper/zookeeper-3.4.5.2.0.6.0-76.jar,file:///usr/lib/hadoop/lib/protobuf-java-2.5.0.jar; FROM pgc INSERT INTO TABLE pagecounts_hbase SELECT pgc.* WHERE rowkey LIKE 'en/q%' LIMIT 10;"
{noformat}, Hi Viraj,

I've done some more tests, and am +1 with the solution. A couple of nitpicks though, apart from my request for tests.

a) Please do not use conf directly, stick with getConf()
b) Please try to limit the length of individual lines, having lines with 220 chars make for more unreadable code - I believe hive actually has a stylecheck rule for length, but I forget what's the limit (checkstyle.xml says 2000, but that's ridiculous) - I would try to keep it within about 80 if possible,, Hi Sushanth,
 Thanks for your comments about the unit test case. I think the current test cases do not exercise the path where they read the metadata from the metastore. Also about fixing the patch. Let me use "conf" and also limit the individual lines to 80. I will repost it as soon as possible.
Viraj, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12615700/HIVE-5515.1.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 4684 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_bucket_num_reducers
{noformat}

Test results: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/445/testReport
Console output: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/445/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests failed with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12615700, Ping [~viraj]. Any word on the updated patch?, Hi Nick,
 The updated patch was posted on  HIVE-5515.1.patch was posted on 25/Nov/13 14:40 where I made the changes Sushanth suggested. The 1 test case which failed might be not related. If possible I can re-run it. Please test this patch and it should work.
Regards
Viraj

, Reattaching patch for running CI builds, 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12622363/HIVE-5515.2.patch

{color:green}SUCCESS:{color} +1 4917 tests passed

Test results: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/850/testReport
Console output: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/850/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12622363, Sushanth, Thejas, Ashutosh and Nick, could you please take a look and commit if possible.
Viraj, I'm good with this latest patch, and as to my request for tests, since this is pretty hard to write a test for with our current test framework, but shows up in the e2e tests on actual clusters, I'm okay with committing this, and having a new jira created for a follow up task for that., [~ashutoshc], I'm +1 on this patch. Let's get it in and close this jira.

[~viraj], could you create another jira for a test case that would illustrate this issue?, Sushanth, thanks for your help. Let me create another Jira and link it to HIVE-5260, +1, Ashutosh please commit when you get time.
Viraj, Created HIVE-6195 to address the Sushanth concern., Committed to trunk. Thanks, Viraj & Sushanth!]