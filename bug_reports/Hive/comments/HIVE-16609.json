[

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12867059/HIVE-16609.1.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 8 failed/errored test(s), 10657 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestBeeLineDriver.testCliDriver[select_dummy_source] (batchId=235)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[cte_mat_4] (batchId=6)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[pcr] (batchId=56)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[pointlookup4] (batchId=70)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[row__id] (batchId=73)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_if_expr] (batchId=143)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[pcr] (batchId=123)
org.apache.hadoop.hive.ql.txn.compactor.TestWorker2.minorNoBaseLotsOfDeltas (batchId=254)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/5134/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/5134/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-5134/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 8 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12867059 - PreCommit-HIVE-Build, Fix UT failures., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12867146/HIVE-16609.2.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:green}SUCCESS:{color} +1 due to 10666 tests passed

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/5139/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/5139/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-5139/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12867146 - PreCommit-HIVE-Build, [~aihuaxu][~sershe], mind taking a look?, -0.5 for now.
I don't think this is a valid query... as in, it should search for the literal string, as it does. The correct way to select "invalid" values is "is null" and that has been fixed recently if I remember correctly.
Users should not use the magic constant., If so, we need to fix .q files containing the magic constant in the where statement (eg, alter_partition_change_col.q). How about drop partition statement? Shall we still use magic constant?, Also need to point out
{code}
select * from alter_partition_change_col1 where p1='__HIVE_DEFAULT_PARTITION__';
{code}
works fine, but
{code}
select * from alter_partition_change_col1 where p1='__HIVE_DEFAULT_PARTITION__' or lower(p1)='a';
{code}
is wrong. We need a fix to make them consistent., [~sershe]
It looks like we have support for this query type in some scenarios, but it produces wrong result in some others.
We show this in partition names, and because of the support for this query, users are can be using it.

We need to have consistent behavior here, not what could be seen as incorrect result. The current state is not right.
We should either fix this for broken case or make changes to stop supporting this type of predicate completely (which would be backward incompatible). Thoughts ?
, Hmm... I remember fixing something like that for drop. Frankly I think this is an ugly pattern that should not exist. Perhaps we should fix it in old branches, and then on master/2.4 change partition display to null when we see the magic value, so that the users would never see it; and emit warning if the partition filter has magic value (and perhaps add type casts checks to make it legitimately fail on any non-string partition column).
Although I have no strong preferences. If everything is made consistent to work with this value that would make sense too. , Drop statement is still using the magic constant in syntax. DDLSemanticAnalyzer switches the magic constant into "is null". For select statement, the switch never happen, so underlining code (in metastore) need to deal with mixed inputs (is null and equal to magic constant). That's what the patch try to fix.

In general, I totally agree we shall drop the magic constant in syntax. However, this is a long term goal vs short term fix issue. If the query produces wrong result, we shall fix immediately rather than wait for the long term goal settled IMHO., I agree, it makes sense to have this fix for now.
We can follow up with other jiras for dropping support for this magic constant in 3.x .

cc [~ashutoshc], [~sershe] can you please review the changes in this patch ?
, +1 on that. Is it possible to file a followup to get rid of the constant in user-visible areas? To assume it's just a magic value for null used internally., [~sershe], are you +1 on the patch or the approach?, The patch., Created HIVE-16638 for dropping __HIVE_DEFAULT_PARTITION__ completely. Patch pushed to master. Thanks Sergey for reviewing!, Hive 3.0.0 has been released so closing this jira.]