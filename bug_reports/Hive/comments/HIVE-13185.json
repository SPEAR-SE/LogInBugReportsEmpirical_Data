[I wonder if this should catch all the exceptions, not just IO:
{noformat}
try {
        OrcFile.createReader(file.getPath(),
            OrcFile.readerOptions(conf).filesystem(fs));
      } catch (IOException e) {
        return false;
      }
{noformat}?
The exception from trying to read a corrupted file (from ORC perspective) is expected., I would prefer to check buffer size before accessing it. It seems like more robust way., Both can be done. My point is that the exceptions from corrupt files are often expected, so if there's some other issue like this, it's better to have it caught properly in the validator, to make sure we recognize the file as invalid instead of failing. Note that there isn't even an ORC table in the example, it's just running the validator on all supported formats to see if it happens to be ORC/..., In OrcInputFormat.validateInput(...) it checks that file.size() is not 0. But a valid ORC file should be much larger than 0. Is there a way to come up with a smallest valid ORC file? For instance would it be correct to replace "if (file.getLen() == 0)" with "if (file.getLen() < OrcFile.MAGIC.length() + 1)"?, +1 pending tests, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12792045/HIVE-13185.1.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 7 failed/errored test(s), 9792 tests executed
*Failed tests:*
{noformat}
TestSparkCliDriver-groupby3_map.q-sample2.q-auto_join14.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-groupby_map_ppr_multi_distinct.q-table_access_keys_stats.q-groupby4_noskew.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-join_rc.q-insert1.q-vectorized_rcfile_columnar.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-ppd_join4.q-join9.q-ppd_join3.q-and-12-more - did not produce a TEST-*.xml file
TestSparkCliDriver-timestamp_lazy.q-bucketsortoptimize_insert_4.q-date_udf.q-and-12-more - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_authorization_uri_import
org.apache.hive.jdbc.TestSSL.testSSLVersion
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7206/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7206/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-7206/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 7 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12792045 - PreCommit-HIVE-TRUNK-Build, Test link [1] shows only 2 failed tests. Both of them have been failing for 70+ builds.

1: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/7206/testReport, Committed to master.]