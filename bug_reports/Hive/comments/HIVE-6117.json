[Attaching patch for trunk., Thanks Nick. Looks like this was caused by HBASE-9791. Was hive not correctly using the API or this an API change?, Oh, good catch [~brocknoland]. I think the responsibility lies with Hive because, in this case, the RecordReader is being consumed outside of the MapReduce Framework context. I don't know *where* Hive should initialize the RecordReader -- my patch may result in a double-initialize for the mapreduce case, but corrects the problem for the local query. I think, somehow, processLocalCmd needs to indicate to HiveHBaseTableInputFormat that its RecordReader is being consumed outside of MapReduce. Perhaps you can advise?, Hmm, does this same error not occur during a MR run?, Not sure; can I force the SELECT statement to run as a job?, SELECT count(\*) from table, SELECT count(*) FROM hbase_1; gave me a MR job. It ran without complaint., It ran correctly with or without the patch?, Ran correctly with the patch.

BuildBot should verify as well, yes?, Thanks Nick!  I have seen this error with MR + HBase trunk.

As fair as I can tell we have not yet answered the question "Was hive not correctly using the API or this an API change?" I am fine making the change to Hive, but we should know if hive was simply using HBase incorrectly or if HBase is changing the API.

Brock, Technically speaking, HBase changed the way it initializes this particular MapReduce component via a public API, thus HBase's API has changed. Hive is consuming that component without respecting its API -- that is, Hadoop's mapreduce.RecordReader says the framework will call initialize, so Hive should be calling initialize when consuming it outside of the MapReduce Framework context. I think the answer is "both". Perhaps HBASE-9791 needs to add a release note.

cc [~stack] [~jxiang]., Reuploading the exact same patch with a new file name so HiveQA will pick it up., Thank you for clarifying. I am +1 if the tests pass.

bq. Hadoop's mapreduce.RecordReader says the framework will call initialize,

What's interesting is I have seen this same error occur within an MR job. Additionally we are doing some weird wrapping of RR here. Therefore I think it's likely that Hive should be calling initialize itself even in the MR case. I think this patch will in fact do this., 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12620732/HIVE-6117.0.patch

{color:green}SUCCESS:{color} +1 4818 tests passed

Test results: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/762/testReport
Console output: http://bigtop01.cloudera.org:8080/job/PreCommit-HIVE-Build/762/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12620732, [~ndimiduk], I think HBASE-9791 fixed a bug in HBase that does initialization twice. If some subclass needs to call initialization again, does this mean the fix in HBASE-9791 is not right?  If it is right, why should HIVE need to call init again?, Hey guys,

I think I see the issue here. o.a.h.mapreduce.RecordReader has an initialize method which is called by the mapper. o.a.h.mapred.RecordReader does not have an initialize method. Hive uses the mapred API so you can see here: https://github.com/apache/hive/blob/fb63a28cd5fddb5e5c974cab84cd9c3a4155e40d/hbase-handler/src/java/org/apache/hadoop/hive/hbase/HiveHBaseTableInputFormat.java#L178

that we wrap the mapreduce RR from HBase in a mapred RR. Therefore it's hive's responsibility to call initialize which we are not doing. Therefore the patch looks correct and I will commit., I also verified that this patch fixes the NPE I was seeing with *both* select \* from table (no-MR job) and select count(\*) from table (MR job)., Committed to trunk! Thank you Nick and Jimmy for your help on this one!, bq. that we wrap the mapreduce RR from HBase in a mapred RR. Therefore it's hive's responsibility to call initialize which we are not doing. Therefore the patch looks correct and I will commit.

Yes, that's my understanding too. Thanks [~brocknoland], [~jxiang] for the context and quick response!]