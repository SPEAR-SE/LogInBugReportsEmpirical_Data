[Patch to allow the registry to set PERSISTENT type when registering permanent functions to the session registry. Previously all functions added to session registry had the TEMPORARY tag., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12829917/HIVE-14819.1.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 7 failed/errored test(s), 10558 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[acid_mapjoin]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ctas]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_join_part_col_char]
org.apache.hadoop.hive.cli.TestHBaseCliDriver.testCliDriver[hbase_bulk]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainuser_3]
org.apache.hadoop.hive.metastore.TestMetaStoreMetrics.testMetaDataCounts
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarConstructorUnCaching
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1280/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1280/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-Build-1280/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 7 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12829917 - PreCommit-HIVE-Build, I see another issue related to being able to determine if a function is a permanent UDF:

When Hive attempts to register all of the existing permanent UDFs during Hive initialization, it does not download the JARs and add them to the classloader. However as you can see from the stack trace, it does try to get the UDF class in order to add it to this persistent UDFs list. This fails since Hive has not loaded the resources. As far as I can tell, this is going to fail for any permanent UDFs which require JARs which are not in Hive's classpath at initialization time.
While this does not prevent permanent functions from working in most cases (dynamic lookup works and it's added to the session registry), this does cause problems with being able to tell if this is a permanent function because the UDF's class is never added to the system registry's list of persistent functions. Thus FunctionRegistry.isPermanentFunction() does not work properly.

{noformat}
016-09-23T00:32:47,869 WARN  [main]: metadata.Hive (Hive.java:reloadFunctions(247)) - Failed to register persistent function sleep2:org.apache.hive.udf.generic.GenericUDFSleep. Ignore and continue.
java.lang.RuntimeException: java.lang.ClassNotFoundException: org.apache.hive.udf.generic.GenericUDFSleep
        at org.apache.hadoop.hive.ql.exec.Registry.getPermanentUdfClass(Registry.java:483) ~[hive-exec-2.1.0.jar:2.1.0]
        at org.apache.hadoop.hive.ql.exec.Registry.addFunction(Registry.java:466) ~[hive-exec-2.1.0.jar:2.1.0]
        at org.apache.hadoop.hive.ql.exec.Registry.registerPermanentFunction(Registry.java:239) ~[hive-exec-2.1.0.jar:2.1.0]
        at org.apache.hadoop.hive.ql.exec.FunctionRegistry.registerPermanentFunction(FunctionRegistry.java:1511) ~[hive-exec-2.1.0.jar:2.1.0]
        at org.apache.hadoop.hive.ql.metadata.Hive.reloadFunctions(Hive.java:243) ~[hive-exec-2.1.0.jar:2.1.0]
        at org.apache.hadoop.hive.ql.metadata.Hive.registerAllFunctionsOnce(Hive.java:224) ~[hive-exec-2.1.0.jar:2.1.0]
        at org.apache.hadoop.hive.ql.metadata.Hive.<init>(Hive.java:369) ~[hive-exec-2.1.0.jar:2.1.0]
        at org.apache.hadoop.hive.ql.metadata.Hive.create(Hive.java:313) ~[hive-exec-2.1.0.jar:2.1.0]
        at org.apache.hadoop.hive.ql.metadata.Hive.getInternal(Hive.java:293) ~[hive-exec-2.1.0.jar:2.1.0]
        at org.apache.hadoop.hive.ql.metadata.Hive.get(Hive.java:269) ~[hive-exec-2.1.0.jar:2.1.0]
        at org.apache.hadoop.hive.ql.session.SessionState.start(SessionState.java:558) ~[hive-exec-2.1.0.jar:2.1.0]
        at org.apache.hadoop.hive.ql.session.SessionState.beginStart(SessionState.java:531) ~[hive-exec-2.1.0.jar:2.1.0]
        at org.apache.hadoop.hive.cli.CliDriver.run(CliDriver.java:705) ~[hive-cli-2.1.0.2.5.1.0-46.jar:2.1.0.2.5.1.0-46]
        at org.apache.hadoop.hive.cli.CliDriver.main(CliDriver.java:641) ~[hive-cli-2.1.0.2.5.1.0-46.jar:2.1.0.2.5.1.0-46]
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_91]
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_91]
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_91]
        at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_91]
        at org.apache.hadoop.util.RunJar.run(RunJar.java:233) ~[hadoop-common-2.7.3.2.5.1.0-46.jar:?]
        at org.apache.hadoop.util.RunJar.main(RunJar.java:148) ~[hadoop-common-2.7.3.2.5.1.0-46.jar:?]
Caused by: java.lang.ClassNotFoundException: org.apache.hive.udf.generic.GenericUDFSleep
        at java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[?:1.8.0_91]
        at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[?:1.8.0_91]
        at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[?:1.8.0_91]
        at java.lang.Class.forName0(Native Method) ~[?:1.8.0_91]
        at java.lang.Class.forName(Class.java:348) ~[?:1.8.0_91]
        at org.apache.hadoop.hive.ql.exec.Registry.getPermanentUdfClass(Registry.java:481) ~[hive-exec-2.1.0.jar:2.1.0]
        ... 19 more
{noformat}, Updating patch to fix the persistent function issue that occurs during Hive initialization., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12830125/HIVE-14819.2.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 6 failed/errored test(s), 10633 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[acid_mapjoin]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[ctas]
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[vector_join_part_col_char]
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainuser_3]
org.apache.hadoop.hive.metastore.TestMetaStoreMetrics.testMetaDataCounts
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testAddJarConstructorUnCaching
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1297/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1297/console
Test logs: http://ec2-204-236-174-241.us-west-1.compute.amazonaws.com/logs/PreCommit-HIVE-Build-1297/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 6 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12830125 - PreCommit-HIVE-Build, +1, Committed to master]