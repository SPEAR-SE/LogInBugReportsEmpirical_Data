[The java.io.File.deleteOnExit API is flawed and causes JVM crashes on long running servers ,see [this link|https://bugs.openjdk.java.net/browse/JDK-4872014]
Code path that produce "piepout" file and invoking File.deleteOnExit() is [here|https://github.com/apache/hive/blob/master/ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java#L802]
{code:java}
    File tmpFile = File.createTempFile(sessionID, ".pipeout", tmpDir);
    tmpFile.deleteOnExit();
{code}, [~navis] Thanks for working on this., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12754838/HIVE-11768.1.patch.txt

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 9423 tests executed
*Failed tests:*
{noformat}
TestCustomAuthentication - did not produce a TEST-*.xml file
org.apache.hive.common.util.TestShutdownHookManager.shutdownHookManager
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5220/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5220/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5220/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12754838 - PreCommit-HIVE-TRUNK-Build, changed to synchronized set & minimized diff, [~nemon] Thank for the report!, Isn't patch on HIVE-6091 simpler and deterministic approach for this? Is there any advantage of using ShutdownHook Manager?, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12755331/HIVE-11768.2.patch.txt

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 9424 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_index_auto_mult_tables_compact
org.apache.hive.common.util.TestShutdownHookManager.shutdownHookManager
org.apache.hive.hcatalog.api.TestHCatClient.testTableSchemaPropagation
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5252/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/5252/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-5252/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12755331 - PreCommit-HIVE-TRUNK-Build, [~ashutoshc] If it's so, HIVE-6091 is needed to remove "tmpFile.deleteOnExit()" in createTmpFile, which causes this issue. I'm ok with any direction., This should get fixed via HIVE-6091 Feel free to reopen if you can still repro this., What HIVE-6091 did was trying to make sure the deletion of pipeout file before session close.
As the method deleteOnExit() is still there.
https://github.com/apache/hive/blob/master/ql/src/java/org/apache/hadoop/hive/ql/session/SessionState.java#L828
I will reopen this issue.
This one will deal with the memory leak issue of File.deleteOnExit().
, For better understand:
The deletion of temp file can not fix this memory leak.It's the path string that added to java.io.DeleteOnExitHook causing the leak.Once "File.deleteOnExit()" is invoked ,the path string is leaked.No matter the temp file will be deleted or not .
[~ashutoshc] , Rebased to trunk, anyway., I agree HIVE-6091 will not fix the memory leak. Also, looks like that patch missed the deletion of tmpErrOutputFile.

Thanks for the patch [~navis]! I have added some minor comments in RB .

I also see that there is a call in Context.java and SessionState to FileSystem.deleteOnExit  and we don't call cancelDeleteOnExit on those. Looks like those Path objects can also consume excess memory in a long running HS2. It does not have to be addressed in this jira, we can create a follow up jira for that.
, Addressed comments & fixed test fail, [~thejas] I've left "FileSystem.deleteOnExit" problem for another issue because "FileSystem.close" will not be called ever. Could it be removed from code safely? I'm not sure on that., Thanks for the updates [~navis] !
+1 

I agree, we can investigate the possible leak with FileSystem.deleteOnExit in a separate jira.
, Patch committed to master. It does not apply on branch-1 so I haven't applied it there.
If someone can create that patch, Thanks to [~sseth] for creating HIVE-14421 that follows up on the FileSystem.deleteOnExit  leak issue mentioned above. (I forgot to follow up on that!)
]