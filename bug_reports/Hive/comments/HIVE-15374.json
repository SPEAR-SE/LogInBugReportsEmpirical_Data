[The output for the following commands for the table above
{code}
hive> show create table test;
OK
CREATE TABLE `test`(
  `stringid` string COMMENT 'from deserializer', 
  `value` string COMMENT 'from deserializer')
ROW FORMAT SERDE 
  'org.apache.hadoop.hive.contrib.serde2.RegexSerDe' 
WITH SERDEPROPERTIES ( 
  'input.regex'='(.\n{1}\n\n)') 
STORED AS INPUTFORMAT 
  'org.apache.hadoop.mapred.TextInputFormat' 
OUTPUTFORMAT 
  'org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat'
LOCATION
  'file:/tmp/warehouse/test'
TBLPROPERTIES (
  'transient_lastDdlTime'='1481063482')
Time taken: 0.289 seconds, Fetched: 15 row(s)
hive> describe test;
OK
stringid            	string              	from deserializer   
value               	string              	from deserializer   
Time taken: 0.095 seconds, Fetched: 2 row(s)
hive> 
{code}
, In lieu of HIVE-11985, appears that for any SerDes not listed on this hive property value list, hive will look to the deserializer for the serde to get a column list. Regex SerDe is not one of the SerDe's who columns can be retrieved from an external source and so needs to be added to this list. [~aihuaxu] [~ctang.ma] [~ychena] Could you please review? thanks, I wonder if it makes more sense to fix this issue by adding RegexSerDe to property hive.serdes.using.metastore.for.schema in Hive configuration instead of changing the code since this SerDe is different from other listed SerDe and it is just a contrib SerDe., Thanks Chaoyu. That's basically the fix in the patch. It adds this serde to the list by default.
I think the right way to fix this is to makes serde's implement a separate [marker?] interface if they are meant to be stored in the HMS metastore or the other way around. This is not a good design that hive provides interfaces to provide custom serde's but these do not work the same way as others because of this list that no one probably knows about. Perhaps we could refactor this in the future to make it flexible. , 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12842048/HIVE-15374.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 9 failed/errored test(s), 10775 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[dbtxnmgr_showlocks] (batchId=71)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample2] (batchId=5)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample4] (batchId=15)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample6] (batchId=61)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample7] (batchId=60)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[sample9] (batchId=38)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[transform_ppr2] (batchId=134)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[stats_based_fetch_decision] (batchId=150)
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testCliDriver[alter_table_wrong_regex] (batchId=84)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/2458/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/2458/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-2458/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 9 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12842048 - PreCommit-HIVE-Build]