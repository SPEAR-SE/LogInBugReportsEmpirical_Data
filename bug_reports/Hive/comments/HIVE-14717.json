[Looks like the TestHiveCli tests are not completing after the patch for HIVE-13589. The tests connect beeline in embedded mode which doesn't have any password and due to the patch tests try to prompt for password and hang until the maven process terminates. [~Ferd] [~Ke Jia] I think we should revert this patch because it is breaking tests. Also, it can potentially break backwards compatibility for users who have scripts written already which assumes beeline -u "jdbc:hive2://localhost:10000" to connect in an unsecure cluster. What do you think?, I investigated this more. I think we can satisfy the requirement in HIVE-13589 without breaking any backwards compatibility by making the password option "optional" using the OptionBuilder. That way we are not breaking backwards compatibility since we are widening the scope of the option. So {noformat}beeline -u url -n user -p pass{noformat} {noformat}beeline -u url -p -n user{noformat} and {noformat}beeline -u url -n user -p{noformat} will work.

If the user provides -p on the commandline the user can provide the password on the commandline like current behavior or choose not provide password. In that case Beeline will prompt for the password. So following cases should successfully connect without prompting any password (assuming the authentication mode is default) to make sure it is backwards compatible.

{noformat}
beeline -u url -n user -p pass
beeline -u url -p pass -n user
beeline -u url
beeline -u url -n user
beeline -u url -p password
beeline -u "jdbc:hive2://localhost:10000/default;user=username;password=password"
beeline -u "jdbc:hive2://"
{noformat}

In case the user does not want the password to be seen on the command line or command history he/she can issue the following way to connect and beeline will prompt for password in each case below

{noformat}
beeline -u url -n user -p
beeline -u url -p -n user
beeline -p -u url -n user
beeline -u url -p
beeline -u url -p -n user -e "show tables;"
{noformat}

I have done some testing and it is working as expected. [~Ferd] Let me know if you have any thoughts?, Hi [~vihangk1] Thank you for this suggestion. There's a major issue as discussed in HIVE-13589. e.g. 
{noformat}
beeline -u user -p --property-file <file>
{noformat}

Beeline will treat the string after option p as a password since "-property-file" is not a key in Beeline which is defined in BeeLineOpts instead of BeeLine. So we have to put it in the last place to avoid this case. One possible remedy is to bypass the password check if user name is not specified. Any thoughts? [~Jk_Self] [~vihangk1], Hi [~vihangk1] [~Ferd], Thank  for you suggestion. Before HIVE-13589, Beeline work with the follow cases:
{noformat}
1. beeline –u url –n user –p pass
2. beeline –u url –n user
3. beeline –u url –p pass
4. beeline –u url
5. beeline {noformat}
When the password is null, the code block below set it to empty string.
{noformat}
private String constructCmd(String url, String user, String pass, String driver, boolean stripPasswd) {
    String com = "!connect "
        + url + " "
        + (user == null || user.length() == 0 ? "''" : user) + " ";
    if (stripPasswd) {
      com += PASSWD_MASK + " ";
    } else {
      com += (pass == null || pass.length() == 0 ? "''" : pass) + " ";
    }
    com += (driver == null ? "" : driver);
    return com;
  } {noformat}
Beeline prompt user to enter password when the password is null in follow code. However,  because the above code have assigned the empty string to the password, Beeline will never prompt user to enter password.
{noformat}
if (password == null) {
        password = beeLine.getConsoleReader().readLine("Enter password for " + url + ": ",
          new Character('*'));
      } {noformat}
In the patch of Hive-13589, we add a judgement(password == null || password.length() == 0)) in the follow code.
{noformat}
 if (password == null || password.length() == 0) {
        password = beeLine.getConsoleReader().readLine("Enter password for " + url + ": ",
          new Character('*'));
      } {noformat}
So, After HIVE-13589, if the password is null or empty string, Beeline will prompt user to enter password. So, for case 2 and 4, Beeline will ask user to enter the password. So if want to achieve the goal that prompt user to enter password, we need to add the judgement(password == null || password.length() == 0)) even though we adopt the optional -p argument, I think. And this issue will also occur. What about you?, Do we support ./beeline -n user -p --property-file <file> syntax? For what I looked at the code, --property-file will load all the properties from the file and use it to connect ignoring any other parameters. So I am not sure ./beeline -n user -p --property-file <file> is a valid command.

If you concern is that the argument after -p will be used to assign the value of password by CommandLine then that is not a concern if we make the argument value as optional.

This is what I tried just now and it works as expected:

{noformat}
vihang-MBP:bin vihang$ ./beeline -n hive -p --property-file ~/beeline.properties
Connecting to jdbc:hive2://localhost:10000
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/Users/vihang/work/src/upstream/hive/packaging/target/apache-hive-2.2.0-SNAPSHOT-bin/apache-hive-2.2.0-SNAPSHOT-bin/lib/log4j-slf4j-impl-2.6.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/usr/local/Cellar/hadoop/2.7.2/libexec/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]
Connected to: Apache Hive (version 2.2.0-SNAPSHOT)
Driver: Hive JDBC (version 2.2.0-SNAPSHOT)
16/09/07 21:03:38 [main]: WARN jdbc.HiveConnection: Request to set autoCommit to false; Hive does not support autoCommit=false.
Transaction isolation: TRANSACTION_REPEATABLE_READ
Beeline version 2.2.0-SNAPSHOT by Apache Hive
0: jdbc:hive2://localhost:10000>
{noformat}


Also, this works as expected too

{noformat}
vihang-MBP:bin vihang$ ./beeline -u "jdbc:hive2://localhost:10000" -n hive -p -e "show tables;"
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/Users/vihang/work/src/upstream/hive/packaging/target/apache-hive-2.2.0-SNAPSHOT-bin/apache-hive-2.2.0-SNAPSHOT-bin/lib/log4j-slf4j-impl-2.6.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/usr/local/Cellar/hadoop/2.7.2/libexec/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.apache.logging.slf4j.Log4jLoggerFactory]
Connecting to jdbc:hive2://localhost:10000
Enter password for jdbc:hive2://localhost:10000: ****
Connected to: Apache Hive (version 2.2.0-SNAPSHOT)
Driver: Hive JDBC (version 2.2.0-SNAPSHOT)
16/09/07 21:10:02 [main]: WARN jdbc.HiveConnection: Request to set autoCommit to false; Hive does not support autoCommit=false.
Transaction isolation: TRANSACTION_REPEATABLE_READ
OK
+----------------+
|    tab_name    |
+----------------+
| dummy          |
| likes          |
| longkeyvalues  |
| mydummy        |
| names          |
| s3dummy        |
| s3dummy_ext    |
| s3dummybucket  |
| s3dummypart    |
| s3dummyskewed  |
| src            |
| src2           |
| test123        |
+----------------+
13 rows selected (0.162 seconds)
Beeline version 2.2.0-SNAPSHOT by Apache Hive
Closing: 0: jdbc:hive2://localhost:10000
vihang-MBP:bin vihang$
{noformat}

Let me submit a patch for this so that you can take a closer look. That way it is easier to review and discuss perhaps. Thanks for your input [~Ferd], [~Ferd] [~Ke Jia] Uploading a patch for you to check. I thought it would be easier to discuss when you take a look at the change. Let me know if there are any concerns., "-property-file" may be not a good example since options in BeeLine contains this key. The issue comes when you pass in a property not included in options. e.g. "--force" 
AFAIK, if one argument is marked as optional, CommandLine will firstly check if the following string is a key. If it is, it will set its value empty, otherwise, it will treat the following string as password. This is how optional works. The tricky part is that Beeline option consists of two parts: 1) BeeLineOpts 2) BeeLine. For options like "- r", "- n ", they're contained in options in BeeLine. For "- - force" or some other options defined BeeLineOpts(https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Clients#HiveServer2Clients-BeelineCommands), it will not be parsed as a key when it follows "- p" and will be treated as the password because it's not part of the keyset in options from Beeline.
, Hi [~vihangk1], I run "beeline -u url -n root -p --force=true  -e 'show tables;'" with your uploaded patch. However Beeline assign --force as the value of password and not prompt user to enter the password., Ah .. I see now. Let me look into it. Thanks!, Closing this issue now since the change which caused the test failure has been reverted. We can continue this discussion on the original JIRA., Change which caused the failure was reverted. Tests are working now. See HIVE-13589 for more details.]