[A workaround is to use the original expression:

select col1, count(col2) from test group by col1;, This is not a bug and should be closed as invalid.  Conceptually, GROUP BY processing happens before SELECT list computation, so it would be circular to allow such references., John's explanation makes sense. Projections are handled after aggregations. There is no easy way to make it work. , This isn't allowed by the ANSI standard and is a bit weird conceptually.  MySQL does allow it, which might cause confusion for users.  A problem with their implementation is when the column is ambiguous (i.e. an output column named the same as an input column):

{code}
CREATE TABLE foo (a string, b int);
SELECT length(a) AS b FROM foo GROUP BY b;
{code}

In this case, MySQL will choose the output column and emit a warning.  I believe the correct behavior here is to error at compile time.

A common work around for complex expressions is to use an inline view (which works for both WHERE and GROUP BY):

{code}
SELECT t, COUNT(*)
FROM (
    SELECT complex(expression(a)) t
    FROM foo
) x
WHERE t > 5
GROUP BY t
;
{code}, There was no reason to close this issue.
The execution flow is not relevant, the important thing is that the full query is known at parsing time and therefore aliases can be expand to their source expressions no matter where they are located.
Teradata for example supports aliases in every part of the query including SELECT and WHERE.

e.g.
{code}
    select  length(x) as len_x,case when len_x > 10 then 'Y' else 'N' end ...
    select length(x) as len_x from ... where len_x > 10
{\code}
, For anyone reaching this comments, it is possible to set the group by position (not by alias, but in much cases will be enough) configuring {{set hive.groupby.orderby.position.alias=true;}}.

From [https://cwiki.apache.org/confluence/display/Hive/LanguageManual+GroupBy] :

bq. In groupByExpression columns are specified by name, not by position number. However in Hive 0.11.0 and later, columns can be specified by position when configured as follows:
bq.    For Hive 0.11.0 through 2.1.x, set hive.groupby.orderby.position.alias to true (the default is false).
bq.    For Hive 2.2.0 and later, set hive.groupby.position.alias to true (the default is false).

]