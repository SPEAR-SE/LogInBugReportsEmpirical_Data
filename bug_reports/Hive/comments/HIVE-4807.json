[The change currently just pulls down BoneCp artifact and does not change the default value to BoneCP. To enable BoneCp, the setting “datanucleus.connectionPoolingType” in hive-site.xml should be set to “BoneCP”. All the hive systems test pass with this setting. , Couple of questions:
* Could there be a performance implication of this? I know perf is irrelevant if functionality doesn't work, but it will be comforting to know that BoneCP is not 10x (randomly picked number) than DBCP.
* If we find (hopefully) that earlier statement is true, than we should just rip off DBCP and only use BoneCP as default., BoneCP is faster that DBCP so we should be good here. BoneCP claims that they are upto 25X faster then DBCP and C3P0. Online resources also claim the same. 
Agree that we could make BoneCP as default. Let me submit a new patch for this., Addressing Ashutosh's comments and making BoneCP the default connection pool for Hive., +1, All 34 & 22 tests in TestJdbcDriver & TestJdbcDriver2 failed with following stacktrace:
{code}
org.apache.hive.service.ServiceException: Unable to connect to MetaStore!
        at org.apache.hive.service.cli.CLIService.start(CLIService.java:85)
        at org.apache.hive.service.cli.thrift.EmbeddedThriftCLIService.&lt;init&gt;(EmbeddedThriftCLIService.java:35)
        at org.apache.hive.jdbc.HiveConnection.&lt;init&gt;(HiveConnection.java:87)
        at org.apache.hive.jdbc.HiveDriver.connect(HiveDriver.java:111)
        at java.sql.DriverManager.getConnection(DriverManager.java:582)
        at java.sql.DriverManager.getConnection(DriverManager.java:185)
        at org.apache.hive.jdbc.TestJdbcDriver2.setUp(TestJdbcDriver2.java:90)
        at junit.framework.TestCase.runBare(TestCase.java:125)
        at junit.framework.TestResult$1.protect(TestResult.java:106)
        at junit.framework.TestResult.runProtected(TestResult.java:124)
        at junit.framework.TestResult.run(TestResult.java:109)
        at junit.framework.TestCase.run(TestCase.java:118)
        at junit.framework.TestSuite.runTest(TestSuite.java:208)
        at junit.framework.TestSuite.run(TestSuite.java:203)
        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:518)
        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1052)
        at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:906)
Caused by: javax.jdo.JDOFatalInternalException: Error creating transactional connection factory
NestedThrowables:
java.lang.reflect.InvocationTargetException
        at org.datanucleus.jdo.NucleusJDOHelper.getJDOExceptionForNucleusException(NucleusJDOHelper.java:425)
        at org.datanucleus.jdo.JDOPersistenceManagerFactory.freezeConfiguration(JDOPersistenceManagerFactory.java:601)
        at org.datanucleus.jdo.JDOPersistenceManagerFactory.createPersistenceManagerFactory(JDOPersistenceManagerFactory.java:286)
        at org.datanucleus.jdo.JDOPersistenceManagerFactory.getPersistenceManagerFactory(JDOPersistenceManagerFactory.java:182)
        at sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at javax.jdo.JDOHelper$16.run(JDOHelper.java:1958)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.jdo.JDOHelper.invoke(JDOHelper.java:1953)
        at javax.jdo.JDOHelper.invokeGetPersistenceManagerFactoryOnImplementation(JDOHelper.java:1159)
        at javax.jdo.JDOHelper.getPersistenceManagerFactory(JDOHelper.java:803)
        at javax.jdo.JDOHelper.getPersistenceManagerFactory(JDOHelper.java:698)
        at org.apache.hadoop.hive.metastore.ObjectStore.getPMF(ObjectStore.java:263)
        at org.apache.hadoop.hive.metastore.ObjectStore.getPersistenceManager(ObjectStore.java:292)
        at org.apache.hadoop.hive.metastore.ObjectStore.initialize(ObjectStore.java:225)
        at org.apache.hadoop.hive.metastore.ObjectStore.setConf(ObjectStore.java:200)
        at org.apache.hadoop.util.ReflectionUtils.setConf(ReflectionUtils.java:62)
        at org.apache.hadoop.util.ReflectionUtils.newInstance(ReflectionUtils.java:117)
        at org.apache.hadoop.hive.metastore.RetryingRawStore.&lt;init&gt;(RetryingRawStore.java:62)
        at org.apache.hadoop.hive.metastore.RetryingRawStore.getProxy(RetryingRawStore.java:71)
        at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.newRawStore(HiveMetaStore.java:414)
        at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.getMS(HiveMetaStore.java:402)
        at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.createDefaultDB(HiveMetaStore.java:440)
        at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.init(HiveMetaStore.java:326)
        at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.&lt;init&gt;(HiveMetaStore.java:286)
        at org.apache.hadoop.hive.metastore.RetryingHMSHandler.&lt;init&gt;(RetryingHMSHandler.java:54)
        at org.apache.hadoop.hive.metastore.RetryingHMSHandler.getProxy(RetryingHMSHandler.java:59)
        at org.apache.hadoop.hive.metastore.HiveMetaStore.newHMSHandler(HiveMetaStore.java:4183)
        at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.<init>(HiveMetaStoreClient.java:121)
        at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.<init>(HiveMetaStoreClient.java:104)
        at org.apache.hive.service.cli.CLIService.start(CLIService.java:82)
        ... 16 more
Caused by: java.lang.reflect.InvocationTargetException
        at sun.reflect.GeneratedConstructorAccessor18.newInstance(Unknown Source)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
        at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:588)
        at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:324)
        at org.datanucleus.store.AbstractStoreManager.registerConnectionFactory(AbstractStoreManager.java:215)
        at org.datanucleus.store.AbstractStoreManager.&lt;init&gt;(AbstractStoreManager.java:190)
        at org.datanucleus.store.mapped.MappedStoreManager.&lt;init&gt;(MappedStoreManager.java:137)
        at org.datanucleus.store.rdbms.RDBMSStoreManager.&lt;init&gt;(RDBMSStoreManager.java:253)
        at sun.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
        at org.datanucleus.plugin.NonManagedPluginRegistry.createExecutableExtension(NonManagedPluginRegistry.java:588)
        at org.datanucleus.plugin.PluginManager.createExecutableExtension(PluginManager.java:300)
        at org.datanucleus.ObjectManagerFactoryImpl.initialiseStoreManager(ObjectManagerFactoryImpl.java:161)
        at org.datanucleus.jdo.JDOPersistenceManagerFactory.freezeConfiguration(JDOPersistenceManagerFactory.java:583)
        ... 46 more
Caused by: java.lang.NoClassDefFoundError: Could not initialize class com.jolbox.bonecp.BoneCPDataSource
        at org.datanucleus.store.rdbms.datasource.bonecp.BoneCPDataSourceFactory.makePooledDataSource(BoneCPDataSourceFactory.java:77)
        at org.datanucleus.store.rdbms.ConnectionFactoryImpl.initDataSourceTx(ConnectionFactoryImpl.java:144)
        at org.datanucleus.store.rdbms.ConnectionFactoryImpl.&lt;init&gt;(ConnectionFactoryImpl.java:84)
        ... 62 more
{code}

All other tests did pass., Looks like a class path issue to me. Will take a look., Uploading a patch that fixes this test break by fixing the test class path in jdbc/build.xml. , Committed to trunk. Thanks, Sarvesh!, Integrated in Hive-trunk-h0.21 #2190 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2190/])
    HIVE-4807 : Hive metastore hangs (Sarvesh Sakalanaga via Ashutosh Chauhan) (Revision 1501675)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1501675
Files : 
* /hive/trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
* /hive/trunk/ivy/libraries.properties
* /hive/trunk/jdbc/build.xml
* /hive/trunk/metastore/ivy.xml
, Integrated in Hive-trunk-hadoop1-ptest #61 (See [https://builds.apache.org/job/Hive-trunk-hadoop1-ptest/61/])
    HIVE-4807 : Hive metastore hangs (Sarvesh Sakalanaga via Ashutosh Chauhan) (Revision 1501675)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1501675
Files : 
* /hive/trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
* /hive/trunk/ivy/libraries.properties
* /hive/trunk/jdbc/build.xml
* /hive/trunk/metastore/ivy.xml
, Integrated in Hive-trunk-hadoop2 #282 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/282/])
    HIVE-4807 : Hive metastore hangs (Sarvesh Sakalanaga via Ashutosh Chauhan) (Revision 1501675)

     Result = ABORTED
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1501675
Files : 
* /hive/trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
* /hive/trunk/ivy/libraries.properties
* /hive/trunk/jdbc/build.xml
* /hive/trunk/metastore/ivy.xml
, FAILURE: Integrated in Hive-trunk-hadoop2-ptest #14 (See [https://builds.apache.org/job/Hive-trunk-hadoop2-ptest/14/])
HIVE-4807 : Hive metastore hangs (Sarvesh Sakalanaga via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1501675)
* /hive/trunk/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
* /hive/trunk/ivy/libraries.properties
* /hive/trunk/jdbc/build.xml
* /hive/trunk/metastore/ivy.xml
, Can you guys also change the config template?, This issue has been fixed and released as part of 0.12 release. If you find further issues, please create a new jira and link it to this one.]