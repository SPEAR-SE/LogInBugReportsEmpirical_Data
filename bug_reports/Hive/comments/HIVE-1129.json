[Here's the assertion stack:

    [junit] Exception in thread "main" java.lang.AssertionError
    [junit] 	at org.apache.hadoop.hive.conf.HiveConf.getVar(HiveConf.java:292)
    [junit] 	at org.apache.hadoop.hive.ql.exec.ExecDriver.execute(ExecDriver.java:569)
    [junit] 	at org.apache.hadoop.hive.ql.exec.ExecDriver.main(ExecDriver.java:946)
, Also, I don't really understand what this code is doing.  Why is doing setVar using the current result of getVar?  Doesn't that mean it has no effect?
, Aren't those two different variables - getVar is accessing HIVESPECULATIVEEXECREDUCERS, while the setVar is setting HADOOPSPECULATIVEEXECREDUCERS., Haha, you're right, I should get my eyes checked.
, A parameter exists for enabling speculative execution for reducers in hive - the reason we added it about a month back was that we 
wanted to test it easily -- there were some bugs in speculative execution for reducers in hadoop 17, which is why we had disabled it.
Now that those bugs have been solved, we wanted to test it gradually., Here's a patch for getting/setting the variables in such a way that the assertions are not triggered.
, Hi John, can you add the setBoolVar() function to HiveConf class just like the getBoolVar()? That makes the code easier to read and also more consistent.
, In the spirit of keeping patch transactions small and focused, maybe it would be better to commit this patch as is and assign me a separate JIRA for adding and using the setter methods?  The reason I say this is that my patch followed the existing pattern here in the same file:

    if(work.getMinSplitSize() != null) {
      job.setInt(HiveConf.ConfVars.MAPREDMINSPLITSIZE.varname, 
         work.getMinSplitSize().intValue());
    }

So that code will need to be changed too as part of consistently using the new setters, and that change is unrelated to my fix for the existing bug with assertions.
, Resubmitting patch as is.  If you agree with me, I'll create a followup for adding the setters; otherwise, cancel it and I'll combine the two changes., +1. That makes sense to me.
Please open a follow-up as an "improvement"., Committed. Thanks John!]