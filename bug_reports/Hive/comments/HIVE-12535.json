[[~jdere]: any idea why it would do this? The vectorizer picks up the wrong column types from this reference., It looks like that output is due to the user-level explain formatting that is done in common/src/java/org/apache/hadoop/hive/common/jsonexplain/tez/Op.java. 

After the initial plan is created the MapJoin operator looks like this:

{noformat}
"keys:":{"0":"KEY.reducesinkkey0 (type: int)","1":"KEY.reducesinkkey0 (type: int)"}
"input vertices:":{"1":"Map 3"}
{noformat}

Because input "0" (which I think is the big table in this case) is not in the "input vertices" list, it gets resolved during Op.java as the current vertex ("Reducer 2"). 

So this issue in the explain output is simply cosmetic, but if there is a similar issue in the vectorizer, it could also be related to the fact that the input vertices for the MapJoin do not include the big table. Tho I'm not sure if whether that mapping is supposed to include the big table, someone else may need to comment on that., [~pxiong] Could you take a look?, [~jdere], thanks for your investigation. Do you have any idea why big table 0 is not in the input vertices? Thanks.]