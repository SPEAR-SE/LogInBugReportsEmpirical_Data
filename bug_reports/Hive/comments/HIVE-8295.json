[In this patch, I did not add configuration parameter to control the batch size, for 1000 is hard limit and not configurable. 
, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12671876/HIVE-8295.1.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 6370 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_schemeAuthority
org.apache.hive.hcatalog.pig.TestOrcHCatLoader.testReadDataPrimitiveTypes
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1048/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1048/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1048/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12671876, Nit: is it possible to make batch size static final?
Also, given that this is not necessary for normal databases, is it possible to either make it configurable, off by default, or detect Oracle if that is easy? Like the way it does quote handling in MySQL, I'll make some changes to the patch, coming today afternoon, Add Oracle detection, remove batching from retrieval by name (since first of all list of names is already a batch, and 2nd max was always passed as null there from callers), clean up method signature, some other cleanup not related to the patch, [~ashutoshc] can you please review? https://reviews.apache.org/r/27847/
I haven't tested Oracle detection on Oracle yet, need to get access to a machine with one, Looks good overall. Few comments on RB., CR feedback. After discussion, add config setting and also check for MSSQL - it has perf problems in such cases., Can we make sure the fix for this Jira also fixes HIVE-7999?  That's a problem with SQL Server, where the query is just to long to parse.
{quote}
For a select * on a Hive Table, a query like this:

SELECT PARTITIONS.PART_ID, SDS.SD_ID, SDS.CD_ID, SERDES.SERDE_ID, PARTITIONS.CREATE_TIME, ... SERDES.SLIB from PARTITIONS LEFT OUTER JOIN SDS ON PARTITIONS.SD_ID = SDS.SD_ID LEFT OUTER JOIN SERDES ON SDS.SERDE_ID = SERDES.SERDE_ID where PART_ID in (1,2,3,4 ... 10000000 ...

is generated and executed on metastore, however, due the query lists all the partitions in it, SQL server is unable to compile/execute such a long query and causing the whole query to fail.
{quote}, The recent iteration of the patch also adds batching in SQL server case. Whether it will fix SQL server is another question; if sending many queries (batching by 1000 by default) will help, then it will. But if individual queries together are as slow as the big query, different approach would be needed (batching on the client, which will be much slower overall but won't time out).
, On SQL Server, the issue is not about being slow, it is about not being able to parse and compile the query, since the query text is to long.  I strongly suspect that splitting the query into batches of 1000 will fix that problem as well.  I just wanted to make sure we were not limiting this change to just Oracle, but are having it be applicable to other DBs as well., I think patch needs system testing for both Oracle & MS-SQL. However, code changes seems like they will address the problem so +1 for patch, One thing that may be useful (for Oracle) is to make the query like " ... a IN (1,....1000) or a IN (1001, ... 2000)..." it should still avoid the 1000 limit and run only 1 query., There are comments where this fix is suggested online that it is slow., Tested, appears to work on Oracle now, ping?, nm, didn't see the +1, same patch, need HiveQA for this patch, [~hagleitn] ok for 14 branch, for 14.1?, yes +1 for that., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12681142/HIVE-8295.04.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 6687 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_schemeAuthority
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1765/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1765/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1765/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12681142 - PreCommit-HIVE-TRUNK-Build, committed to both, Updating release version for jiras resolved in 1.0.0 .
, This issue has been fixed in Apache Hive 1.0.0. If there is any issue with the fix, please open a new jira to address it.
]