[Chris, I am seeing the errors too, I am investigating it. Meanwhile if someone has any clue on the following exception that I am seeing for the test failures:

{code}
    [junit] Running org.apache.hadoop.hive.ql.parse.TestContribParse
    [junit] Cleaning up TestContribParse
    [junit] Exception: MetaException(message:Got exception: java.lang.IllegalArgumentException Wrong FS: pfile:/Users/malakar/code/oss/hive_09/hive/build/contrib/test/data/warehouse/src_json, expected: file:///)
    [junit] Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 4.433 sec
    [junit] org.apache.hadoop.hive.ql.metadata.HiveException: MetaException(message:Got exception: java.lang.IllegalArgumentException Wrong FS: pfile:/Users/malakar/code/oss/hive_09/hive/build/contrib/test/data/warehouse/src_json, expected: file:///)
    [junit] 	at org.apache.hadoop.hive.ql.metadata.Hive.dropTable(Hive.java:813)
    [junit] 	at org.apache.hadoop.hive.ql.metadata.Hive.dropTable(Hive.java:789)
    [junit] 	at org.apache.hadoop.hive.ql.QTestUtil.cleanUp(QTestUtil.java:421)
    [junit] 	at org.apache.hadoop.hive.ql.QTestUtil.shutdown(QTestUtil.java:278)
    [junit] 	at org.apache.hadoop.hive.ql.parse.TestContribParse.tearDown(TestContribParse.java:59)
    [junit] 	at junit.framework.TestCase.runBare(TestCase.java:140)
    [junit] 	at junit.framework.TestResult$1.protect(TestResult.java:110)
    [junit] 	at junit.framework.TestResult.runProtected(TestResult.java:128)
    [junit] 	at junit.framework.TestResult.run(TestResult.java:113)
    [junit] 	at junit.framework.TestCase.run(TestCase.java:124)
    [junit] 	at junit.framework.TestSuite.runTest(TestSuite.java:243)
    [junit] 	at junit.framework.TestSuite.run(TestSuite.java:238)
    [junit] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:520)
    [junit] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1060)
    [junit] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:911)
    [junit] Caused by: MetaException(message:Got exception: java.lang.IllegalArgumentException Wrong FS: pfile:/Users/malakar/code/oss/hive_09/hive/build/contrib/test/data/warehouse/src_json, expected: file:///)
    [junit] 	at org.apache.hadoop.hive.metastore.MetaStoreUtils.logAndThrowMetaException(MetaStoreUtils.java:785)
    [junit] 	at org.apache.hadoop.hive.metastore.HiveMetaStoreFsImpl.deleteDir(HiveMetaStoreFsImpl.java:61)
    [junit] 	at org.apache.hadoop.hive.metastore.Warehouse.deleteDir(Warehouse.java:200)
    [junit] 	at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.drop_table_core(HiveMetaStore.java:929)
    [junit] 	at org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.drop_table(HiveMetaStore.java:944)
    [junit] 	at org.apache.hadoop.hive.metastore.HiveMetaStoreClient.dropTable(HiveMetaStoreClient.java:553)
    [junit] 	at org.apache.hadoop.hive.ql.metadata.Hive.dropTable(Hive.java:807)
    [junit] 	... 14 more
    [junit] Test org.apache.hadoop.hive.ql.parse.TestContribParse FAILED
      [for] /Users/malakar/code/oss/hive_09/hive/contrib/build.xml: The following error occurred while executing this line:
      [for] /Users/malakar/code/oss/hive_09/hive/build.xml:321: The following error occurred while executing this line:
      [for] /Users/malakar/code/oss/hive_09/hive/build-common.xml:448: Tests failed!
{code}, The exception gets eaten up and doesn't show up in console. Here is the exact stacktrace which I caught and logged, before rethrowing.

{code}
[junit] Something wrong happened while moving to trash Wrong FS: pfile:/Users/malakar/code/oss/hive_09/hive/build/metastore/test/data/warehouse/testtablefilter.db/table1, expected: file:///    [junit] org.apache.hadoop.fs.FileSystem.checkPath(FileSystem.java:581)
    [junit] org.apache.hadoop.fs.FileSystem.resolvePath(FileSystem.java:680)
    [junit] org.apache.hadoop.fs.FilterFileSystem.resolvePath(FilterFileSystem.java:139)
    [junit] org.apache.hadoop.fs.FilterFileSystem.resolvePath(FilterFileSystem.java:139)
    [junit] org.apache.hadoop.fs.FilterFileSystem.resolvePath(FilterFileSystem.java:139)
    [junit] org.apache.hadoop.fs.Trash.moveToAppropriateTrash(Trash.java:70)
    [junit] org.apache.hadoop.hive.shims.Hadoop23Shims.moveToAppropriateTrash(Hadoop23Shims.java:133)
    [junit] org.apache.hadoop.hive.metastore.HiveMetaStoreFsImpl.deleteDir(HiveMetaStoreFsImpl.java:45)
    [junit] org.apache.hadoop.hive.metastore.Warehouse.deleteDir(Warehouse.java:201)
    [junit] org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.drop_table_core(HiveMetaStore.java:929)
    [junit] org.apache.hadoop.hive.metastore.HiveMetaStore$HMSHandler.drop_table(HiveMetaStore.java:944)
    [junit] org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Processor$drop_table.getResult(ThriftHiveMetastore.java:4955)
    [junit] org.apache.hadoop.hive.metastore.api.ThriftHiveMetastore$Processor$drop_table.getResult(ThriftHiveMetastore.java:4943)
    [junit] org.apache.thrift.ProcessFunction.process(ProcessFunction.java:32)
    [junit] org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:34)
    [junit] org.apache.hadoop.hive.metastore.TSetIpAddressProcessor.process(TSetIpAddressProcessor.java:48)
    [junit] org.apache.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:176)
    [junit] java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    [junit] java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    [junit] java.lang.Thread.run(Thread.java:680)
{code}, Trash.moveToAppropriateTrash calls resolvePath, whose implementation is in the actual FileSystem behind ProxyFileSystem. resolvePath checks if the path being moved belongs to that filessystem or not. This check fails since it sees the proxy schema( "pfile") in the path instead of its own schema ("file"). Overriding resolvePath to call the checkPath in ProxyFileSystem, fixed the problem.

Also the old implementation of checkPath was incorrect, as it throws away the schema/authority being passed before calling super. It should check if they match the proxy schema/authority.

The problem here was that ProxyFileSystem contains the FileSystem as a class member and it doesn't extend it. Because of this reason if a method in FileSystem calls another method in it, the method in FileSystem gets called not the overriden method in ProxyFileSystem. In this case resolvePath internally calls checkPath(), but the checkPath of RawFileSystem gets called instead of the overridden checkPath() in ProxyFileSystem. , Trunk review: https://reviews.facebook.net/D7467

Branch-0.9 review: https://reviews.facebook.net/D7473, I get the need of adding resolvePath(), but I didn't get the need of modifying checkPath(). I don't see that current impl as being necessarily incorrect. I guess you are thinking that passed in path must be checked for pfile:// scheme if its non-relative and all other edge cases. But I am not sure we should make these checks.  super.checkPath(swizzleParamPath(path)) will replace real scheme and authority in the path and then checks are made against the real FS in super(). I think that is sufficient. If you revert the changes in checkPath() do test cases fail? If they don't, I will suggest to revert changes in checkPath(). , Hi Ashutosh, you are right. My concern was that checkPath() should look for pfile:// scheme in the path that is passed. It  

For the test cases to pass adding resolvePath() is sufficient. I will submit a patch without the modification in checkPath()., Patch with reverted checkPath(), +1, Committed to trunk and 0.9 branch. Thanks, Arup!, Integrated in Hive-0.9.1-SNAPSHOT-h0.21-keepgoing=false #255 (See [https://builds.apache.org/job/Hive-0.9.1-SNAPSHOT-h0.21-keepgoing=false/255/])
    HIVE-3789 : Patch 3648 causing the majority of unit tests to fail on branch 0.9 (Arup Malakar via Ashutosh Chauhan) (Revision 1430427)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1430427
Files : 
* /hive/branches/branch-0.9/shims/src/common/java/org/apache/hadoop/fs/ProxyFileSystem.java
, Integrated in Hive-0.9.1-SNAPSHOT-h0.21 #255 (See [https://builds.apache.org/job/Hive-0.9.1-SNAPSHOT-h0.21/255/])
    HIVE-3789 : Patch 3648 causing the majority of unit tests to fail on branch 0.9 (Arup Malakar via Ashutosh Chauhan) (Revision 1430427)

     Result = SUCCESS
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1430427
Files : 
* /hive/branches/branch-0.9/shims/src/common/java/org/apache/hadoop/fs/ProxyFileSystem.java
, Integrated in Hive-trunk-h0.21 #1902 (See [https://builds.apache.org/job/Hive-trunk-h0.21/1902/])
    HIVE-3789 : Patch 3648 causing the majority of unit tests to fail on branch 0.9 (Arup Malakar via Ashutosh Chauhan) (Revision 1430420)

     Result = SUCCESS
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1430420
Files : 
* /hive/trunk/shims/src/common/java/org/apache/hadoop/fs/ProxyFileSystem.java
, Integrated in Hive-trunk-hadoop2 #54 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/54/])
    HIVE-3789 : Patch 3648 causing the majority of unit tests to fail on branch 0.9 (Arup Malakar via Ashutosh Chauhan) (Revision 1430420)

     Result = ABORTED
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1430420
Files : 
* /hive/trunk/shims/src/common/java/org/apache/hadoop/fs/ProxyFileSystem.java
, Hi Ashutosh, can you also commit the changes for branch-0.10?]