[Here's a patch for a q test which demonstrates the problem. The flow goes like this:
* AvroSerde is initialized with the right columns
* Avro doesn't have a tinyint type, so it is stored as int. Internally, the AvroSerde translates the column types to an Avro schema, then generates an OI from that. This OI then has a IntegerColumnInspector in it instead of a TinyintColumnInspector.
* Table.getColsInternal gets to this section:
{code}

    try {
      // Do the lightweight check for general case.
      if (hasMetastoreBasedSchema(SessionState.getSessionConf(), serializationLib)) {
        return tTable.getSd().getCols();
      } else if (forMs && !shouldStoreFieldsInMetastore(
          SessionState.getSessionConf(), serializationLib, tTable.getParameters())) {
        return Hive.getFieldsFromDeserializerForMsStorage(this, getDeserializer());
      } else {
        return MetaStoreUtils.getFieldsFromDeserializer(getTableName(), getDeserializer());
      }
{code}
which dutifully sets the columns according to the OI returned by the Serde.]