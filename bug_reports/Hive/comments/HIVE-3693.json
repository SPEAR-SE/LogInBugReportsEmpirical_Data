[Sorry about that !  I see it can cause performance issues where there are large number of partitions. Working on a simpler patch that does not try to deal with so many issues.
, A simpler and quicker way is to check shell.window before the method. may we do this before the simpler patch you refer to? Also it is consistent to other windows related patches.

Thanks a lot

Sent from my iPhone


, There is more change required than just adding a Shell.windows check in one place, because the code has been changed to use Path instead of Strings representation of paths. This was done because Path handles issues like some string representations have paths that start with "/C:" (result of Path.toUri().getPath()), while others have "C:" (Path.toString()). But once when Path comparison were introduced, I saw issues because given path in CombineFilter.accept(path) didn't have scheme but paths CombineFilter.filterPaths had scheme, and hence the change to make given path fully qualified in checkFilterPathContains.
Though using Path makes the code more extensible (eg in case of query against files on different file system, scheme should be considered), I think it needs a more holistic change is required to use it (HIVE-3616).

As a quick fix,I think the code can be changed back to using strings instead of path, and change the way path in accept(Path path) is converted to string - (replace Path.toString() with Path.toUri().toString().)
, OK.

Maybe we revert HIVE-3483 first? Then, find another solution for HIVE-3483.

thanks a lot, I agree.

Tim, can you file a patch which undoes HIVE-3483 ?
We can think about how to fix HIVE-3483 subsequently., Yes, Namit., use hive-3696 to track patch revert. so this issue is not urgent. downgrade from critical to minor.

please change priority as you feel.

thanks
, HIVE-3693.1.patch - Changes the Path to string conversions in CombineFilter to be consistent. Instead of using Path.toString() in one place and using Path.toUri().getPath() in other, using Path.toUri().getPath() in both places. 
, Review board request - https://reviews.apache.org/r/8246/, +1. Will commit if tests pass., Committed to trunk and 0.10. Thanks, Thejas!, Integrated in Hive-trunk-h0.21 #1825 (See [https://builds.apache.org/job/Hive-trunk-h0.21/1825/])
    HIVE-3693 : Performance regression introduced by HIVE-3483 (Thejas Nair via Ashutosh Chauhan) (Revision 1415098)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1415098
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java
, Integrated in Hive-trunk-hadoop2 #54 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/54/])
    HIVE-3693 : Performance regression introduced by HIVE-3483 (Thejas Nair via Ashutosh Chauhan) (Revision 1415098)

     Result = ABORTED
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1415098
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/io/CombineHiveInputFormat.java
, This issue is fixed and released as part of 0.10.0 release. If you find an issue which seems to be related to this one, please create a new jira and link this one with new jira.]