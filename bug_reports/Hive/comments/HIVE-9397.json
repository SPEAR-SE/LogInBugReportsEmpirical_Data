[Complete stack :
{noformat}
java.lang.RuntimeException: org.apache.hive.service.cli.HiveSQLException: java.lang.ClassCastException
        at org.apache.hive.beeline.IncrementalRows.hasNext(IncrementalRows.java:84)
        at org.apache.hive.beeline.TableOutputFormat.print(TableOutputFormat.java:49)
        at org.apache.hive.beeline.BeeLine.print(BeeLine.java:1722)
        at org.apache.hive.beeline.Commands.execute(Commands.java:793)
        at org.apache.hive.beeline.Commands.sql(Commands.java:665)
        at org.apache.hive.beeline.BeeLine.dispatch(BeeLine.java:938)
        at org.apache.hive.beeline.BeeLine.execute(BeeLine.java:778)
        at org.apache.hive.beeline.BeeLine.begin(BeeLine.java:740)
        at org.apache.hive.beeline.BeeLine.mainWithInputRedirection(BeeLine.java:470)
        at org.apache.hive.beeline.BeeLine.main(BeeLine.java:453)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.apache.hadoop.util.RunJar.main(RunJar.java:212)
{noformat}, Everything is fine with this one :
{code:sql}
SELECT max(cast(id as bigint)) FROM foo;
{code}
{noformat}
+-----------------+--+
|       _c0       |
+-----------------+--+
| 5               |
+-----------------+--+
1 row selected (15.66 seconds)
{noformat}, This looks rather odd, let me take a look., Took a quick look, since I was working on FetchTask.

Got a clearer backtrace.

{code}
Caused by: java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.Integer
        at org.apache.hive.service.cli.Column.addValue(Column.java:344)
        at org.apache.hive.service.cli.ColumnBasedSet.addRow(ColumnBasedSet.java:65)
        at org.apache.hive.service.cli.ColumnBasedSet.addRow(ColumnBasedSet.java:32)
        at org.apache.hive.service.cli.operation.SQLOperation.prepareFromRow(SQLOperation.java:363)
        at org.apache.hive.service.cli.operation.SQLOperation.decode(SQLOperation.java:355)
        at org.apache.hive.service.cli.operation.SQLOperation.getNextRowSet(SQLOperation.java:339)
        ... 13 more
{code}

Not really closer to fixing this, but bouncing it back to unassigned., Tested with CLI, it seems to works well.
{noformat}
hive> select max(idmagasin) from magasin;
OK
_c0
1871
Time taken: 0.624 seconds, Fetched: 1 row(s)
{noformat}
CLI use only metadata :
{noformat}
hive> explain
    > select max(idmagasin) from magasin;
OK
Explain
STAGE DEPENDENCIES:
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-0
    Fetch Operator
      limit: 1
      Processor Tree:
        ListSink

Time taken: 0.233 seconds, Fetched: 10 row(s)
{noformat}, CLI uses OI in fetch task to read rows, which is provided by StatsOptimizer. But beeline uses schema in SemanticAnalyzer which is acquired from RR of final FS. I think StatsOptimizer should not override return schema., LGTM - +1., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12694706/HIVE-9397.1.patch.txt

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 7399 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_metadata_only_queries
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udaf_histogram_numeric
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_metadata_only_queries
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_metadata_only_queries
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/2531/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/2531/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-2531/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12694706 - PreCommit-HIVE-TRUNK-Build, Thanks [~navis] for working on it.

I have few comments :
* trailing spaces in enum [[IntegerSubType]]
* trailing spaces x9 in [[ql/src/java/org/apache/hadoop/hive/ql/optimizer/StatsOptimizer.java]]

You can create a review board if you want, I will report in it.
Again thanks a lots for working on it., Tested with bigint/int/tinyint. seems to work well., These tests pass localy :
* {{org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_metadata_only_queries}}
* {{org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_udaf_histogram_numeric}}, I agree. StatsOptimizer shouldn't try to build and provide schema. After the good work by [~jcamachorodriguez] on HIVE-9327 we are guaranteed to have a valid Row Schema with any operator at any point in query compilation. So, stats optimizer can just Row Schema of FileSink Op of matched tree to infer return schema, instead of building one itself.  If we do that, than we can eliminate family of bugs like this. [~navis] would you like to do that? Alternatively, we can check in this patch and take on the improvement in a follow-up jira., Addressed comments & fixed double sub-type, Now OIs are acquired directly from row schema of final GBY operator. And also I've fixed double to float type casting, making identical result between stat-optimized and not. 
It would be possible to extend StatsOptimizer to accept queries like "select min(x)+max(x) from tbl" but seemed better to be done in following issue. , 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12696106/HIVE-9397.2.patch.txt

{color:red}ERROR:{color} -1 due to 6 failed/errored test(s), 7418 tests executed
*Failed tests:*
{noformat}
TestNoSaslAuth - did not produce a TEST-*.xml file
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_distinct_stats
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_metadata_only_queries
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_metadata_only_queries
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver_metadata_only_queries_with_filters
org.apache.hive.hcatalog.hbase.TestPigHBaseStorageHandler.org.apache.hive.hcatalog.hbase.TestPigHBaseStorageHandler
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/2632/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/2632/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-2632/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 6 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12696106 - PreCommit-HIVE-TRUNK-Build, Thanks Navis for considering suggestion. Code changes look good. Test failures are as expected, except for distinict_stats That looks like unintentional., please keep in mind that's this bug is in 0.14 AND 0.15.

Damien CAROL
gopher://dams.zapto.org/1/


, Updated result & fixed further more(distinct_stats was fall back to normal plan by exception making struct OI), +1, 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12696353/HIVE-9397.3.patch.txt

{color:green}SUCCESS:{color} +1 7425 tests passed

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/2655/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/2655/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-2655/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12696353 - PreCommit-HIVE-TRUNK-Build, Committed to trunk. Thanks, Navis!, This issue has been fixed and released as part of the 1.2.0 release. If you find an issue which seems to be related to this one, please create a new jira and link this one with new jira.]