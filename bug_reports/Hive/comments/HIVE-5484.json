[If we change the HiveVersionAnnotation to just show the major/minor/change numbers, it looks like things work ok., patch v1, +1, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12607277/HIVE-5484.1.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 4061 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestNegativeCliDriver.testNegativeCliDriver_script_broken_pipe1
org.apache.hive.jdbc.TestJdbcDriver2.testDatabaseMetaData
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1075/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1075/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests failed with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated., This failure is real

https://builds.apache.org/job/PreCommit-HIVE-Build/1075/testReport/org.apache.hive.jdbc/TestJdbcDriver2/testDatabaseMetaData/, [~jdere] As Brock pointed out, the patch is chopping off the 'SNAPSHOT' part which might not be a good idea. The version string is also returned to HiveServer2 clients and can be extracted on the command line (eg the proposed patch of [HIVE-5459|https://issues.apache.org/jira/browse/HIVE-5459]). 

An alternative could be to handle that in the code eg. MetaStoreSchemaInfo.java:getHiveSchemaVersion()., Thanks for the feedback Prasad. I'll try out your suggestion., We need to make sure HiveVersionInfo::getVersion() returns 0.12.0 on 0.12 branch and 0.13.0-snapshot on trunk irrespective of what version string is specified in build.properties., Sounds like there's some differing opinions of what the version string should be returning here. 
From talking to Ashutosh he was of the opinion that getVersion() should return consistent version numbering, to make it more consistent for clients who might be calling this API.  So 0.12.0 for 0.12 branch, and 0.13.0 on trunk (though that doesn't match with the comment above, Ashutosh can you confirm?). 
Which is different from the current behavior which is to simply use the version string supplied in the build properties. Anyone have any strong opinions either way?, Thinking more about it, here is my proposal :
* lets not strip any info coming in via build.properties (which is what this patch is doing)
* Add a new api in HiveVersionInfo getShortVersion() which strictly returns version of form majorVersion.minorVersion.changeVersion 
* In metastore, this short version should be stored (storing build # or "snapshot" in there doesn't make sense).  
* bin/hive --version should return full version 
* Jdbc client should see short version (though I am less certain here)
* Downstream projects which integrate with Hive (like oozie) can use either java api as they see fit, though I assume they would be more interested in short version as well., [~ashutoshc] Thanks for the feedback. Looks mostly fine. That's pretty much they way it happens to be on the trunk, except the Jdbc clients are seeing the full version. 
The version stored in the metastore is the short version and the wrapper API MetaStoreSchemaInfo.java:getHiveSchemaVersion() strips off the '-SNAPSHOT' part which can be handled into this new getShortVersion().
Alternately we can define the short version in the build itself. This way we don't need any add any formatting logic in code that needs to keep up with product version format changes.
, bq. Alternately we can define the short version in the build itself. 

I like this plan., Attaching patch v2, which adds the short version string in the build.  I think the Jdbc should still show the full version string - it looks like JDBC has getMajorVersion/getMinorVersion APIs (currently unimplemented in Hive) which could serve a similar purpose to the short version string., +1 LGTM. [~prasadm] Would you also want to take a look?, Looks fine to me. 
It would be nice to make the shortVersion configurable via a build property, but that can be a followup up patch.

[~jdere] Thanks for taking care of the issue.
, Marking Patch Available to get QA run., 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12607452/HIVE-5484.2.patch

{color:green}SUCCESS:{color} +1 4390 tests passed

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1084/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1084/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated., Committed to trunk. Thanks, Jason!, FAILURE: Integrated in Hive-trunk-hadoop2-ptest #133 (See [https://builds.apache.org/job/Hive-trunk-hadoop2-ptest/133/])
HIVE-5484 : TestSchemaTool failures when Hive version has more than 3 revision numbers (Jason Dere via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1530688)
* /hive/trunk/common/build.xml
* /hive/trunk/common/src/java/org/apache/hive/common/HiveVersionAnnotation.java
* /hive/trunk/common/src/java/org/apache/hive/common/util/HiveVersionInfo.java
* /hive/trunk/common/src/scripts/saveVersion.sh
* /hive/trunk/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreSchemaInfo.java
, SUCCESS: Integrated in Hive-trunk-hadoop1-ptest #198 (See [https://builds.apache.org/job/Hive-trunk-hadoop1-ptest/198/])
HIVE-5484 : TestSchemaTool failures when Hive version has more than 3 revision numbers (Jason Dere via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1530688)
* /hive/trunk/common/build.xml
* /hive/trunk/common/src/java/org/apache/hive/common/HiveVersionAnnotation.java
* /hive/trunk/common/src/java/org/apache/hive/common/util/HiveVersionInfo.java
* /hive/trunk/common/src/scripts/saveVersion.sh
* /hive/trunk/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreSchemaInfo.java
, ABORTED: Integrated in Hive-trunk-hadoop2 #493 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/493/])
HIVE-5484 : TestSchemaTool failures when Hive version has more than 3 revision numbers (Jason Dere via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1530688)
* /hive/trunk/common/build.xml
* /hive/trunk/common/src/java/org/apache/hive/common/HiveVersionAnnotation.java
* /hive/trunk/common/src/java/org/apache/hive/common/util/HiveVersionInfo.java
* /hive/trunk/common/src/scripts/saveVersion.sh
* /hive/trunk/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreSchemaInfo.java
, FAILURE: Integrated in Hive-trunk-h0.21 #2391 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2391/])
HIVE-5484 : TestSchemaTool failures when Hive version has more than 3 revision numbers (Jason Dere via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1530688)
* /hive/trunk/common/build.xml
* /hive/trunk/common/src/java/org/apache/hive/common/HiveVersionAnnotation.java
* /hive/trunk/common/src/java/org/apache/hive/common/util/HiveVersionInfo.java
* /hive/trunk/common/src/scripts/saveVersion.sh
* /hive/trunk/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreSchemaInfo.java
]