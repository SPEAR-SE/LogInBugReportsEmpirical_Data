[

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12892927/HIVE17832.1.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 9 failed/errored test(s), 11281 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[unionDistinct_1] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[optimize_nullscan] (batchId=163)
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver[spark_dynamic_partition_pruning] (batchId=171)
org.apache.hadoop.hive.cli.TestSparkPerfCliDriver.testCliDriver[query16] (batchId=243)
org.apache.hadoop.hive.cli.TestSparkPerfCliDriver.testCliDriver[query94] (batchId=243)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query14] (batchId=241)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query16] (batchId=241)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query94] (batchId=241)
org.apache.hadoop.hive.cli.control.TestDanglingQOuts.checkDanglingQOut (batchId=204)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/7375/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/7375/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-7375/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 9 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12892927 - PreCommit-HIVE-Build, I think this is by design that it cannot be changed. This is a correctness setting that should only be settable by administrator., Thanks [~sershe].  I would like to understand the reasons behind such a design decision.

I think making this parameter modifiable at session level is beneficial for the following reasons.
1.  If a user made a mistake in defining the table, then the user doesn't have an option to change the definition.  The user needs to drop the table and recreate it.  That can be a bit tedious if the table definition is quite big.
2.  This is a DDL operation that is most likely not exposed to the end user.  The setup of tables is typically handled by an administrator.
3.  HMS embedded with HS2 is also a accepted configuration.  If the parameter is not modifiable for standalone HMS, then it shouldn't be modifiable for embedded HMS as well, which is not the case today.  You see a lot of qfile tests that modifies this parameter.
4.  Please refer to the following comment from [~ashutoshc] in JIRA HIVE-12320 (cut and pasted for your reference):
_Ashutosh Chauhan added a comment - 03/Nov/15 10:05
Its better to be strict (default this to true) than leaving potential to corrupt data. This is only a safeguard since behavior is governed by a config param. An advance user who know what they are doing can still set this to false to potentially do dangerous schema changes.
_
I don't think the implication was also to restart the HMS after changing the parameter value.  

I would be very grateful if you can elaborate on why you feel this was by design, and the benefits for having such a design.

Thanks,
Janaki., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12893593/HIVE17832.2.patch

{color:green}SUCCESS:{color} +1 due to 2 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 6 failed/errored test(s), 11317 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[unionDistinct_1] (batchId=145)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[optimize_nullscan] (batchId=163)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_2] (batchId=101)
org.apache.hadoop.hive.cli.control.TestDanglingQOuts.checkDanglingQOut (batchId=204)
org.apache.hadoop.hive.ql.parse.TestReplicationScenarios.testConstraints (batchId=221)
org.apache.hadoop.hive.ql.parse.authorization.plugin.sqlstd.TestOperation2Privilege.checkHiveOperationTypeMatch (batchId=269)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/7448/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/7448/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-7448/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 6 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12893593 - PreCommit-HIVE-Build, Hmm, sure. 
As for the embedded metastore, it implies that the user is the admin because they have full control over metastore (and direct access to the database).
But yeah, I guess it's similar to strict check parameters and we should allow users to shoot themselves in the foot :P
+1, +1. I will be committing this patch EOD unless someone has any other objections., Committed in branch-2 and master. Thanks [~janulatha] for your contribution., Should the ability to reset *hive.metastore.disallow.incompatible.col.type.changes* in the metastore be documented in the wiki?

* [Configuration Properties -- hive.metastore.disallow.incompatible.col.type.changes | https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.metastore.disallow.incompatible.col.type.changes]
* [Alter Table -- Change Column Name/Type/Position/Comment | https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-ChangeColumnName/Type/Position/Comment], Thanks [~leftylev].  From the wording I see in the documentation for https://cwiki.apache.org/confluence/display/Hive/Configuration+Properties#ConfigurationProperties-hive.metastore.disallow.incompatible.col.type.changes, it could be interpreted that this parameter can be changed to allow or disallow incompatible column type changes.  So, unable to see the effect of the parameter change with remote HMS, IMHO is a bug that is fixed in this JIRA.  So, I think we don't need additional documentation.  
, Okay, thanks for explaining why no documentation is needed., This jira is resolved and released with Hive 3.0 If you find an issue with it, please create a new jira.]