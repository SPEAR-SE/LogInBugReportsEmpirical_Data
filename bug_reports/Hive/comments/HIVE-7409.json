[

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12655705/HIVE-7409.1.patch

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 5732 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_temp_table
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_ql_rewrite_gbtoidx
org.apache.hive.hcatalog.pig.TestHCatLoader.testReadDataPrimitiveTypes
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-Build/793/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-Build/793/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-Build-793/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12655705, [~ozawa] Thanks for pointing out the potential deadlock issue in JDK. However, according to the referenced JDK issue, the deadlock is happening between getAnnotations() and isAnnotationPresent(). Since Hive only calls the first method, is it possible that Hive doesn't suffer so said deadlock problem?, [~xuefuz], Thanks for your comment. The issue is fixed on [JDK-7122142|https://bugs.openjdk.java.net/browse/JDK-7122142], but the issue 
has potential deadlock problem, which is described on [JDK-7031759|https://bugs.openjdk.java.net/browse/JDK-7031759], duplicated ticket of [JDK-7122142|https://bugs.openjdk.java.net/browse/JDK-7122142]  - calling {{getAnnotations()}} from synchronized static method(e.g. {{isStateful}}) can cause deadlock on JDK7 and JDK8. Therefore, IMHO, we should fix it on Hive side., Not sure if I follow completely. JDK-7031759 is caused by calling getAnnotations() from sysnchronized static method. However, I don't see any of getAnnotations calls is called from such kind of method, including isStateful.

Just curious, have you seen such deadlock occurring in Hive? I can undersatnd if your patch is for the sake of precaution. Nevertheless, I think we should probably create an utility method for this so that we don't have to repeat the same code pattern., Attached stack trace., {quote}
Just curious, have you seen such deadlock occurring in Hive? I can undersatnd if your patch is for the sake of precaution
{quote}

Yes, we've seen the problem. Please see the attached stack trace. And, your point is correct. Let me check the code again., Fair enough. Let's get this in. Refactored a little by using utility method., I think [~ozawa] still has some research ongoing:
{quote}
 And, your point is correct. Let me check the code again.
{quote}, Sorry, I've missed that., [~xuefuz] and [~navis], [JDK-7171421|https://bugs.openjdk.java.net/browse/JDK-7171421] is correct way which reproduce deadlock:

1. Thread 1: {{Class.getAnnotations}} or {{Class.getAnnotation}} -> {{initAnnotationsIfNecessary(synchronized)}} -> {{AnnotationType.getInstance(synchronized)}}
2. Thread 2: {{AnnotationType.getInstance(synchronized)}} -> {{Class.getAnnotation}} -> {{initAnnotationsIfNecessary(synchronized)}}

This is deadlock between {{Class.getAnnotations}} and{{AnnotationType.getInstance}}. JDK-side fix will be merged on future release - [JDK-8047613|https://bugs.openjdk.java.net/browse/JDK-8047613]. Do you have additional questions?, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12656205/HIVE-7409.2.patch.txt

{color:red}ERROR:{color} -1 due to 3 failed/errored test(s), 5725 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_temp_table
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_ql_rewrite_gbtoidx
org.apache.hive.jdbc.miniHS2.TestHiveServer2.testConnection
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-Build/831/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-Build/831/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-Build-831/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 3 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12656205, [~ozawa] Thanks for sharing your research result. I compared [~navis]'s changes with yours. 1. he identified more places of changes. 2. your synchronization is all on UDFType.class, yet Navis' synchronization happens on different classes. What's your thoughts on this?, [~xuefuz], I think [~navis]'s approach is better - the approach is more readable and fixes potential deadlock place my approach didn't address., Committed to trunk. Thanks, Tsuyoshi OZAWA., If my understanding is right, our current bylaw requires a +1 in order to commit. I don't see a +1 yet., [~xuefuz] Sorry, my mistake. I've seen OZAWA's confirmation a few days ago and confused it as +1. I'll make rollback issue for this., Don't worry. It happened to me as well. Let me take a look at the patch, and +1 if everything is good (I hope so). This way, you don't have to roll it back., Patch looks good. +1. There seems a minor format issue:
{code}
+		WindowFunctionDescription def =
+        AnnotationUtils.getAnnotation(wfnCls, WindowFunctionDescription.class);
{code}
This can be addressed in a subsequent JIRA if confirmed., +1(non-binding) for [~navis] patch. Sorry, I meant +1, but I didn't say it clearly., Ok, I'll closed this with HIVE-7466. Will be more precautious from now on., This has been fixed in 0.14 release. Please open new jira if you see any issues.
]