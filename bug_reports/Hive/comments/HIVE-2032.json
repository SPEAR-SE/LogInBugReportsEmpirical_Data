[Preliminary patch. Test cases are added., I see changes for alter Database also to change the location URI. What are semantics of alter database for changing location uri? Is it going to create the tables under the new location after altering? If so, what happens to earlier tables. I see that location uri is accessed only in create db and drop db. So, I think we should not allow altering the location uri. Shall we throw an error if it altered?

Changes for create DB look fine. Can you update TestHiveMetaStore.testDatabase() to test the same?, @Amareshwari

Post altering, new tables will be created under new location. Old tables' have the fully qualified location in metadata and they should continue to work as before.

The reasons I went with alter location are:

1. Allow migration to happen if one would like to reorganize or if quota runs out. Not sure how many folks have this situation.
2. One can migrate new tables to another DFS cluster (existing cluster becoming full).
3. One can migrate between file systems if they have sufficient use cases.

Do you think these are valid use cases?, Use cases make sense. But, drop database would remove tables only from new location. 
Does anyone have the idea why alter Database currently allows to change only DB properties? Namit/Ning?

bq.Post altering, new tables will be created under new location. Old tables' have the fully qualified location in metadata and they should continue to work as before.
Thiruvel, did you get a chance to test this? Because, your changes in patch does not look complete. Changes should be propagated to PersistentManager through ObjectStore., > Use cases make sense. But, drop database would remove tables only from new location.

If I am not wrong, drop db succeeds only if all tables under it are dropped.

> Thiruvel, did you get a chance to test this? Because, your changes in patch does not look complete. Changes should be propagated to PersistentManager through ObjectStore.

Will take a look., HIVE-1537 is supporting LOCATION in create database command
HIVE-675 - first comment is consistent with HIVE-1537
HIVE-1820 is about warehouse location through DBPROPERTIES

My approach on this JIRA so far was based on HIVE-1820.

What is the suggested way to specify location during create database?

@Carl, @Ning, @He Yongqiang - suggestions?, Thiruvel, HIVE-1820 (actually the subtask of it HIVE-1836) is not intended to define the database LOCATION. The database metastore schema already contains a LOCATION field, but it was not currently exposed through the CREATE DATABASE syntax. That's what HIVE-1537 is about to solve. HIVE-1836 is to introduce dbproperties of generic key-value pairs. The dbproperties can be used/interpreted by application-level pre-execution hooks. We currently do not require the warehouse.dir (if it is one of the keys) must be consistent with the LOCATION field, and I think probably we don't need to keep 2 piece of information with the same semantics. 

If you want to change the database location URL I think probably a better way is to change the CREATE DATABASE syntax to add location (HIVE-1537) and any table created under that database should honor the database location property. What do you think?
, I agree with Ning. There should not be two piece of information with same semantics. Location should be added to create database and alter database if it can be altered. Also, We should document that dbproperties are interpreted at application level. , I prefer HIVE-1537 approach. I got confused by the test queries and found 1537 only later.

Thanks for the clarification., HIVE-1537 will address specifying a location for a db.]