[The patch fixes the issue with the Selectivity estimate for SemiJoins.
But as far as i can tell, Optiq MultiJoinRel doesn't handle SemiJoins. So for the query above, you are not going to get the optimal order.
[~julianhyde] can you confirm that MultiJoinRel doesn't support SemiJoins., [~rhbutani]
Using the patch the wrong join order is still generated

{code}
2014-10-28 01:08:59,970 DEBUG [main]: parse.SemanticAnalyzer (SemanticAnalyzer.java:apply(12601)) - Plan After Join Reordering:
HiveSortRel(fetch=[100]): rowcount = 319777.48643073987, cumulative cost = {2.4340839576240274E8 rows, 639555.9728614797 cpu, 0.0 io}, id = 616
  HiveSortRel(sort0=[$0], sort1=[$1], dir0=[ASC], dir1=[ASC]): rowcount = 319777.48643073987, cumulative cost = {1.9476877928923708E8 rows, 319778.48643073987 cpu, 0.0 io}, id = 614
    HiveProjectRel(ca_zip=[$0], ca_county=[$1], _o__c2=[$2]): rowcount = 319777.48643073987, cumulative cost = {1.4612916281607142E8 rows, 1.0 cpu, 0.0 io}, id = 612
      HiveAggregateRel(group=[{0, 1}], agg#0=[sum($2)]): rowcount = 319777.48643073987, cumulative cost = {1.4612916281607142E8 rows, 1.0 cpu, 0.0 io}, id = 610
        HiveProjectRel($f0=[$2], $f1=[$1], $f2=[$0]): rowcount = 8.94102670242874, cumulative cost = {1.4612916281607142E8 rows, 1.0 cpu, 0.0 io}, id = 608
          HiveProjectRel(ws_sales_price=[$2], ca_county=[$7], ca_zip=[$8]): rowcount = 8.94102670242874, cumulative cost = {1.4612916281607142E8 rows, 1.0 cpu, 0.0 io}, id = 606
            SemiJoinRel(condition=[=($13, $14)], joinType=[inner]): rowcount = 8.94102670242874, cumulative cost = {1.4612916281607142E8 rows, 1.0 cpu, 0.0 io}, id = 604
              HiveProjectRel(ws_item_sk=[$5], ws_bill_customer_sk=[$6], ws_sales_price=[$7], ws_sold_date_sk=[$8], c_customer_sk=[$0], c_current_addr_sk=[$1], ca_address_sk=[$2], ca_county=[$3], ca_zip=[$4], d_date_sk=[$9], d_year=[$10], d_qoy=[$11], i_item_sk=[$12], i_item_id=[$13]): rowcount = 429169.2817165796, cumulative cost = {1.4612916181607142E8 rows, 0.0 cpu, 0.0 io}, id = 703
                HiveJoinRel(condition=[=($6, $0)], joinType=[inner]): rowcount = 429169.2817165796, cumulative cost = {1.4612916181607142E8 rows, 0.0 cpu, 0.0 io}, id = 701
                  HiveJoinRel(condition=[=($1, $2)], joinType=[inner]): rowcount = 1600000.0, cumulative cost = {2400000.0 rows, 0.0 cpu, 0.0 io}, id = 634
                    HiveProjectRel(c_customer_sk=[$0], c_current_addr_sk=[$4]): rowcount = 1600000.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 537
                      HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200_orig.customer]]): rowcount = 1600000.0, cumulative cost = {0}, id = 360
                    HiveProjectRel(ca_address_sk=[$0], ca_county=[$7], ca_zip=[$9]): rowcount = 800000.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 584
                      HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200_orig.customer_address]]): rowcount = 800000.0, cumulative cost = {0}, id = 356
                  HiveJoinRel(condition=[=($0, $7)], joinType=[inner]): rowcount = 257083.68571428573, cumulative cost = {1.4427207813035715E8 rows, 0.0 cpu, 0.0 io}, id = 699
                    HiveJoinRel(condition=[=($3, $4)], joinType=[inner]): rowcount = 257083.68571428573, cumulative cost = {1.4396699444464287E8 rows, 0.0 cpu, 0.0 io}, id = 637
                      HiveProjectRel(ws_item_sk=[$2], ws_bill_customer_sk=[$3], ws_sales_price=[$20], ws_sold_date_sk=[$33]): rowcount = 1.43966864E8, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 534
                        HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200_orig.web_sales]]): rowcount = 1.43966864E8, cumulative cost = {0}, id = 358
                      HiveProjectRel(d_date_sk=[$0], d_year=[$6], d_qoy=[$10]): rowcount = 130.44464285714287, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 590
                        HiveFilterRel(condition=[AND(=($10, 2), =($6, 2000))]): rowcount = 130.44464285714287, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 588
                          HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200_orig.date_dim]]): rowcount = 73049.0, cumulative cost = {0}, id = 359
                    HiveProjectRel(i_item_sk=[$0], i_item_id=[$1]): rowcount = 48000.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 594
                      HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200_orig.item]]): rowcount = 48000.0, cumulative cost = {0}, id = 357
              HiveProjectRel(i_item_id=[$1]): rowcount = 1.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 602
                HiveProjectRel(i_item_sk=[$0], i_item_id=[$1]): rowcount = 1.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 600
                  HiveFilterRel(condition=[in($0, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29)]): rowcount = 1.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 598
                    HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200_orig.item]]): rowcount = 48000.0, cumulative cost = {0}, id = 357
{code}, 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12677477/HIVE-8526.1.patch

{color:red}ERROR:{color} -1 due to 2 failed/errored test(s), 6587 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_optimize_nullscan
org.apache.hive.minikdc.TestJdbcWithMiniKdc.testNegativeTokenAuth
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1517/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1517/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1517/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 2 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12677477 - PreCommit-HIVE-TRUNK-Build, [~rhbutani] [~hagleitn] [~jpullokkaran]

Issue resolved in latest build 
{code}
STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Map 1 <- Map 8 (BROADCAST_EDGE)
        Map 6 <- Map 5 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE)
        Map 9 <- Map 7 (BROADCAST_EDGE)
        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 6 (SIMPLE_EDGE)
        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
        Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
      DagName: mmokhtar_20141031145858_4f12c0f7-13ef-46e8-9535-81b02cc8a937:1
      Vertices:
        Map 1
            Map Operator Tree:
                TableScan
                  alias: customer_address
                  filterExpr: ca_address_sk is not null (type: boolean)
                  Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ca_address_sk is not null (type: boolean)
                    Statistics: Num rows: 40000000 Data size: 7640000000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ca_address_sk (type: int), ca_county (type: string), ca_zip (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 40000000 Data size: 7640000000 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        condition expressions:
                          0 {_col0}
                          1 {_col1} {_col2}
                        keys:
                          0 _col1 (type: int)
                          1 _col0 (type: int)
                        outputColumnNames: _col0, _col3, _col4
                        input vertices:
                          0 Map 8
                        Statistics: Num rows: 80000000 Data size: 14960000000 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: int)
                          sort order: +
                          Map-reduce partition columns: _col0 (type: int)
                          Statistics: Num rows: 80000000 Data size: 14960000000 Basic stats: COMPLETE Column stats: COMPLETE
                          value expressions: _col3 (type: string), _col4 (type: string)
            Execution mode: vectorized
        Map 5
            Map Operator Tree:
                TableScan
                  alias: date_dim
                  filterExpr: (((d_qoy = 2) and (d_year = 2000)) and d_date_sk is not null) (type: boolean)
                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (((d_qoy = 2) and (d_year = 2000)) and d_date_sk is not null) (type: boolean)
                    Statistics: Num rows: 635 Data size: 7620 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: d_date_sk (type: int)
                      outputColumnNames: _col0
                      Statistics: Num rows: 635 Data size: 2540 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col0 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col0 (type: int)
                        Statistics: Num rows: 635 Data size: 2540 Basic stats: COMPLETE Column stats: COMPLETE
                      Select Operator
                        expressions: _col0 (type: int)
                        outputColumnNames: _col0
                        Statistics: Num rows: 635 Data size: 2540 Basic stats: COMPLETE Column stats: COMPLETE
                        Group By Operator
                          keys: _col0 (type: int)
                          mode: hash
                          outputColumnNames: _col0
                          Statistics: Num rows: 317 Data size: 1268 Basic stats: COMPLETE Column stats: COMPLETE
                          Dynamic Partitioning Event Operator
                            Target Input: web_sales
                            Partition key expr: ws_sold_date_sk
                            Statistics: Num rows: 317 Data size: 1268 Basic stats: COMPLETE Column stats: COMPLETE
                            Target column: ws_sold_date_sk
                            Target Vertex: Map 6
            Execution mode: vectorized
        Map 6
            Map Operator Tree:
                TableScan
                  alias: web_sales
                  filterExpr: (ws_item_sk is not null and ws_bill_customer_sk is not null) (type: boolean)
                  Statistics: Num rows: 21594638446 Data size: 2850189889652 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (ws_item_sk is not null and ws_bill_customer_sk is not null) (type: boolean)
                    Statistics: Num rows: 21591944812 Data size: 345449542868 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: ws_item_sk (type: int), ws_bill_customer_sk (type: int), ws_sales_price (type: float), ws_sold_date_sk (type: int)
                      outputColumnNames: _col0, _col1, _col2, _col3
                      Statistics: Num rows: 21591944812 Data size: 345449542868 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Inner Join 0 to 1
                        condition expressions:
                          0 {_col0} {_col1} {_col2}
                          1
                        keys:
                          0 _col3 (type: int)
                          1 _col0 (type: int)
                        outputColumnNames: _col0, _col1, _col2
                        input vertices:
                          1 Map 5
                        Statistics: Num rows: 24138881964 Data size: 289666583568 Basic stats: COMPLETE Column stats: COMPLETE
                        Map Join Operator
                          condition map:
                               Inner Join 0 to 1
                          condition expressions:
                            0 {_col1} {_col2}
                            1
                          keys:
                            0 _col0 (type: int)
                            1 _col0 (type: int)
                          outputColumnNames: _col1, _col2
                          input vertices:
                            1 Map 9
                          Statistics: Num rows: 6034720256 Data size: 48277762048 Basic stats: COMPLETE Column stats: COMPLETE
                          Select Operator
                            expressions: _col1 (type: int), _col2 (type: float)
                            outputColumnNames: _col1, _col2
                            Statistics: Num rows: 6034720256 Data size: 48277762048 Basic stats: COMPLETE Column stats: COMPLETE
                            Reduce Output Operator
                              key expressions: _col1 (type: int)
                              sort order: +
                              Map-reduce partition columns: _col1 (type: int)
                              Statistics: Num rows: 6034720256 Data size: 48277762048 Basic stats: COMPLETE Column stats: COMPLETE
                              value expressions: _col2 (type: float)
            Execution mode: vectorized
        Map 7
            Map Operator Tree:
                TableScan
                  alias: item
                  filterExpr: ((i_item_sk) IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29) and i_item_id is not null) (type: boolean)
                  Statistics: Num rows: 462000 Data size: 663862160 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: ((i_item_sk) IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29) and i_item_id is not null) (type: boolean)
                    Statistics: Num rows: 231000 Data size: 24024000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: i_item_id (type: string)
                      outputColumnNames: _col0
                      Statistics: Num rows: 231000 Data size: 23100000 Basic stats: COMPLETE Column stats: COMPLETE
                      Group By Operator
                        keys: _col0 (type: string)
                        mode: hash
                        outputColumnNames: _col0
                        Statistics: Num rows: 115500 Data size: 11550000 Basic stats: COMPLETE Column stats: COMPLETE
                        Reduce Output Operator
                          key expressions: _col0 (type: string)
                          sort order: +
                          Map-reduce partition columns: _col0 (type: string)
                          Statistics: Num rows: 115500 Data size: 11550000 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized
        Map 8
            Map Operator Tree:
                TableScan
                  alias: customer
                  filterExpr: (c_current_addr_sk is not null and c_customer_sk is not null) (type: boolean)
                  Statistics: Num rows: 80000000 Data size: 68801615852 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (c_current_addr_sk is not null and c_customer_sk is not null) (type: boolean)
                    Statistics: Num rows: 80000000 Data size: 640000000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: c_customer_sk (type: int), c_current_addr_sk (type: int)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 80000000 Data size: 640000000 Basic stats: COMPLETE Column stats: COMPLETE
                      Reduce Output Operator
                        key expressions: _col1 (type: int)
                        sort order: +
                        Map-reduce partition columns: _col1 (type: int)
                        Statistics: Num rows: 80000000 Data size: 640000000 Basic stats: COMPLETE Column stats: COMPLETE
                        value expressions: _col0 (type: int)
            Execution mode: vectorized
        Map 9
            Map Operator Tree:
                TableScan
                  alias: item
                  filterExpr: (i_item_id is not null and i_item_sk is not null) (type: boolean)
                  Statistics: Num rows: 462000 Data size: 663862160 Basic stats: COMPLETE Column stats: COMPLETE
                  Filter Operator
                    predicate: (i_item_id is not null and i_item_sk is not null) (type: boolean)
                    Statistics: Num rows: 462000 Data size: 48048000 Basic stats: COMPLETE Column stats: COMPLETE
                    Select Operator
                      expressions: i_item_sk (type: int), i_item_id (type: string)
                      outputColumnNames: _col0, _col1
                      Statistics: Num rows: 462000 Data size: 48048000 Basic stats: COMPLETE Column stats: COMPLETE
                      Map Join Operator
                        condition map:
                             Left Semi Join 0 to 1
                        condition expressions:
                          0 {_col0}
                          1
                        keys:
                          0 _col1 (type: string)
                          1 _col0 (type: string)
                        outputColumnNames: _col0
                        input vertices:
                          1 Map 7
                        Statistics: Num rows: 343407 Data size: 1373628 Basic stats: COMPLETE Column stats: COMPLETE
                        Select Operator
                          expressions: _col0 (type: int)
                          outputColumnNames: _col0
                          Statistics: Num rows: 343407 Data size: 1373628 Basic stats: COMPLETE Column stats: COMPLETE
                          Reduce Output Operator
                            key expressions: _col0 (type: int)
                            sort order: +
                            Map-reduce partition columns: _col0 (type: int)
                            Statistics: Num rows: 343407 Data size: 1373628 Basic stats: COMPLETE Column stats: COMPLETE
            Execution mode: vectorized
        Reducer 2
            Reduce Operator Tree:
              Merge Join Operator
                condition map:
                     Inner Join 0 to 1
                condition expressions:
                  0 {VALUE._col2} {VALUE._col3}
                  1 {VALUE._col1}
                outputColumnNames: _col3, _col4, _col7
                Statistics: Num rows: 137325482305 Data size: 26229167120255 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col4 (type: string), _col3 (type: string), _col7 (type: float)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 137325482305 Data size: 26229167120255 Basic stats: COMPLETE Column stats: COMPLETE
                  Group By Operator
                    aggregations: sum(_col2)
                    keys: _col0 (type: string), _col1 (type: string)
                    mode: hash
                    outputColumnNames: _col0, _col1, _col2
                    Statistics: Num rows: 137325482305 Data size: 26778469049475 Basic stats: COMPLETE Column stats: COMPLETE
                    Reduce Output Operator
                      key expressions: _col0 (type: string), _col1 (type: string)
                      sort order: ++
                      Map-reduce partition columns: _col0 (type: string), _col1 (type: string)
                      Statistics: Num rows: 137325482305 Data size: 26778469049475 Basic stats: COMPLETE Column stats: COMPLETE
                      value expressions: _col2 (type: double)
        Reducer 3
            Reduce Operator Tree:
              Group By Operator
                aggregations: sum(VALUE._col0)
                keys: KEY._col0 (type: string), KEY._col1 (type: string)
                mode: mergepartial
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 137325482305 Data size: 27190445496390 Basic stats: COMPLETE Column stats: COMPLETE
                Select Operator
                  expressions: _col0 (type: string), _col1 (type: string), _col2 (type: double)
                  outputColumnNames: _col0, _col1, _col2
                  Statistics: Num rows: 137325482305 Data size: 27190445496390 Basic stats: COMPLETE Column stats: COMPLETE
                  Reduce Output Operator
                    key expressions: _col0 (type: string), _col1 (type: string)
                    sort order: ++
                    Statistics: Num rows: 137325482305 Data size: 27190445496390 Basic stats: COMPLETE Column stats: COMPLETE
                    TopN Hash Memory Usage: 0.04
                    value expressions: _col2 (type: double)
            Execution mode: vectorized
        Reducer 4
            Reduce Operator Tree:
              Select Operator
                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string), VALUE._col0 (type: double)
                outputColumnNames: _col0, _col1, _col2
                Statistics: Num rows: 137325482305 Data size: 27190445496390 Basic stats: COMPLETE Column stats: COMPLETE
                Limit
                  Number of rows: 100
                  Statistics: Num rows: 100 Data size: 19800 Basic stats: COMPLETE Column stats: COMPLETE
                  File Output Operator
                    compressed: false
                    Statistics: Num rows: 100 Data size: 19800 Basic stats: COMPLETE Column stats: COMPLETE
                    table:
                        input format: org.apache.hadoop.mapred.TextInputFormat
                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
            Execution mode: vectorized

  Stage: Stage-0
    Fetch Operator
      limit: 100
      Processor Tree:
        ListSink
{code}, HIVE-8653 fixes the problem. Closing as duplicate., This has been fixed in 0.14 release. Please open new jira if you see any issues.
]