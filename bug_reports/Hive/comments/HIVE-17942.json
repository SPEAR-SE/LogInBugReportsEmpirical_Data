[

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12895956/HIVE-17942.1.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 18 failed/errored test(s), 11355 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[insert_values_orig_table_use_metadata] (batchId=62)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[sysdb] (batchId=156)
org.apache.hadoop.hive.cli.TestNegativeMinimrCliDriver.testCliDriver[ct_noperm_loc] (batchId=94)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[subquery_multi] (batchId=111)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query64] (batchId=243)
org.apache.hadoop.hive.cli.control.TestDanglingQOuts.checkDanglingQOut (batchId=206)
org.apache.hadoop.hive.ql.exec.tez.TestWorkloadManager.testAmPoolInteractions (batchId=281)
org.apache.hadoop.hive.ql.exec.tez.TestWorkloadManager.testApplyPlanQpChanges (batchId=281)
org.apache.hadoop.hive.ql.exec.tez.TestWorkloadManager.testApplyPlanUserMapping (batchId=281)
org.apache.hadoop.hive.ql.exec.tez.TestWorkloadManager.testAsyncSessionInitFailures (batchId=281)
org.apache.hadoop.hive.ql.exec.tez.TestWorkloadManager.testClusterFractions (batchId=281)
org.apache.hadoop.hive.ql.exec.tez.TestWorkloadManager.testDestroyAndReturn (batchId=281)
org.apache.hadoop.hive.ql.exec.tez.TestWorkloadManager.testQueueing (batchId=281)
org.apache.hadoop.hive.ql.exec.tez.TestWorkloadManager.testReopen (batchId=281)
org.apache.hadoop.hive.ql.exec.tez.TestWorkloadManager.testReuse (batchId=281)
org.apache.hadoop.hive.ql.exec.tez.TestWorkloadManager.testReuseWithDifferentPool (batchId=281)
org.apache.hadoop.hive.ql.exec.tez.TestWorkloadManager.testReuseWithQueueing (batchId=281)
org.apache.hadoop.hive.ql.parse.TestReplicationScenarios.testConstraints (batchId=223)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/7634/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/7634/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-7634/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 18 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12895956 - PreCommit-HIVE-Build, Incorporated comments from Vihang., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12896264/HIVE-17942.2.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 8 failed/errored test(s), 11368 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[insert_values_orig_table_use_metadata] (batchId=62)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[llap_acid_fast] (batchId=157)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[sysdb] (batchId=156)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_2] (batchId=102)
org.apache.hadoop.hive.cli.TestNegativeMinimrCliDriver.testCliDriver[ct_noperm_loc] (batchId=94)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[subquery_multi] (batchId=111)
org.apache.hadoop.hive.cli.control.TestDanglingQOuts.checkDanglingQOut (batchId=206)
org.apache.hadoop.hive.ql.parse.TestReplicationScenarios.testConstraints (batchId=223)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/7670/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/7670/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-7670/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 8 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12896264 - PreCommit-HIVE-Build, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12896502/HIVE-17942.3.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 13 failed/errored test(s), 11373 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[groupby_complex_types_multi_single_reducer] (batchId=87)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[insert_values_orig_table_use_metadata] (batchId=62)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[unionDistinct_1] (batchId=146)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[sysdb] (batchId=156)
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver[bucketmapjoin7] (batchId=173)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_2] (batchId=102)
org.apache.hadoop.hive.cli.TestNegativeMinimrCliDriver.testCliDriver[ct_noperm_loc] (batchId=94)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[bucketmapjoin7] (batchId=116)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[subquery_multi] (batchId=111)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query14] (batchId=243)
org.apache.hadoop.hive.cli.TestTezPerfCliDriver.testCliDriver[query23] (batchId=243)
org.apache.hadoop.hive.cli.control.TestDanglingQOuts.checkDanglingQOut (batchId=206)
org.apache.hadoop.hive.ql.parse.TestReplicationScenarios.testConstraints (batchId=223)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/7699/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/7699/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-7699/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 13 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12896502 - PreCommit-HIVE-Build, +1, Can you clarify what local changes should be visible? What breaks because of that?, Looking at the patch, it isn't about using thread-local config but about using config provided by the passed in handler., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12896711/HIVE-17942.4.patch

{color:green}SUCCESS:{color} +1 due to 1 test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 9 failed/errored test(s), 11373 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[dbtxnmgr_showlocks] (batchId=77)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[insert_values_orig_table_use_metadata] (batchId=62)
org.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[unionDistinct_1] (batchId=146)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[llap_acid_fast] (batchId=157)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[sysdb] (batchId=156)
org.apache.hadoop.hive.cli.TestNegativeMinimrCliDriver.testCliDriver[ct_noperm_loc] (batchId=94)
org.apache.hadoop.hive.cli.TestSparkCliDriver.testCliDriver[subquery_multi] (batchId=111)
org.apache.hadoop.hive.cli.control.TestDanglingQOuts.checkDanglingQOut (batchId=206)
org.apache.hadoop.hive.ql.parse.TestReplicationScenarios.testConstraints (batchId=223)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/7721/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/7721/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-7721/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 9 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12896711 - PreCommit-HIVE-Build, Thanks [~akolb] for reviewing this patch.
Based on what I understand about the interactions between HS2 and HMS: for every end user connection there is a thread in HS2 and an associated thread in HMS.  The configuration changes that are done by the end user in that connection are supposed to be applicable only to that connection.  The configuration changes in HMS are handled through a thread local variable (threadLocalConf in HMSHandler).  
https://github.com/apache/hive/blob/master/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java#L273
The first attempt to get configuration from HMS Handler will result in the initialization of the thread local.
https://github.com/apache/hive/blob/master/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java#L576

HiveAlterHandler when instantiated in HMS will be instantiated as a single object.  IOW, only one object of HiveAlterHandler will be in the JVM and will be shared amongst all the HMS threads.  We need the end user configuration change to be visible only for that end user connection - the threadLocalConf exists in HMSHandler for this purpose.  So, the bug here is that HiveAlterHandler is using not using the conf from HMSHandler, and the result is that the configuration changes are not visible to the end user after a set command., [~janulatha] Thanks for the explanation. Can you provide some example showing how HMSHandler configuration may be customized by a user?

Looking at the fix and at your comment - the most important part is that HMSHandler's configuration may be different from general server configuration and that's the one we should use during alterTable. The fact that it is thread-local is interesting, but this is really an implementation detail of HMSHandler.

It would be good to explain this in the story in the code comments.

Another question that I asked - since now the server configuration isn't used by HiveAlterHandle, should it still be Configurable?  What is the value of setConf()/getConf() calls in the new code?, Added comments to HiveAlterHandler.java and TestHiveMetaStoreAlterColumnPar., [~akolb] Changing AlterHandler to be not configurable is a significant change - potentially backward incompatible.  There can be other implementations that can be used other than HiveAlterHandler.
https://github.com/apache/hive/blob/master/metastore/src/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java#L485
Also, though this can be considered as a good code cleanup, it is in theory cosmetic and not needed for this bug fix.
And, the story about the way HMS Handler works with DDL handlers is a design detail that is common to all DDL handlers, hence doesn't necessarily belong in any DDL handler, but rather in a design document or possibly in HMS Handler implementation, which again IMHO outside the scope of this bug fix.

There is an example in the test.

Configuration changes within a connection is to be made using
set <parameter>=value
If the configuration change is to be effective in HMS it is to be prepended with metaconf:
set metaconf:<parameter>=value
Example:
set metaconf:hive.metastore.disallow.incompatible.col.type.changes=false
, patch merged to master branch but doesn't apply cleanly on branch-2 Hi [~janulatha] can you please attach the branch-2 patch as well?, patch merged to branch-2 as well. Thanks for your contribution [~janulatha], This jira is resolved and released with Hive 3.0 If you find an issue with it, please create a new jira.]