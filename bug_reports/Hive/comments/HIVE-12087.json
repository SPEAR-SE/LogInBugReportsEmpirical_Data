[The method {{runDistCp(Path src, Path dst, Configuration conf)}} of Hadoop23Shims, that is used for Hadoop 0.23, is not compatible with the distributed copy tool {{org.apache.hadoop.tools.DistCp}}. That {{DistCp}} class does not have a parameter-less constructor but an object is constructed by calling {{Constructor c = clazzDistCp.getConstructor()}} on that class.

A work-around is to set property {{hive.exec.copyfile.maxsize}} to a large enough size so that copying files is not done using distributed copy - and thus bypassing this erroneous code., This patch uses the constructor that takes a {{Configuration}} as a parameter: {{public DistCp(Configuration conf)}}., {code}
diff --git a/shims/0.23/src/main/java/org/apache/hadoop/hive/shims/Hadoop23Shims.java b/shims/0.23/src/main/java/org/apache/hadoop/hive/shims/Hadoop23Shims.java
index d349068..1165db4 100644
--- a/shims/0.23/src/main/java/org/apache/hadoop/hive/shims/Hadoop23Shims.java
+++ b/shims/0.23/src/main/java/org/apache/hadoop/hive/shims/Hadoop23Shims.java
@@ -1149,10 +1149,10 @@
 
     try {
       Class clazzDistCp = Class.forName("org.apache.hadoop.tools.DistCp");
-      Constructor c = clazzDistCp.getConstructor();
+      Constructor c = clazzDistCp.getConstructor(Configuration.class);
       c.setAccessible(true);
-      Tool distcp = (Tool)c.newInstance();
-      distcp.setConf(conf);
+      Tool distcp = (Tool)c.newInstance(conf);
+      //distcp.setConf(conf);
       rc = distcp.run(params);
     } catch (ClassNotFoundException e) {
       throw new IOException("Cannot find DistCp class package: " + e.getMessage());
{code}, Why is setConf commented out? If it's not needed anymore (probably worth double checking) it should be removed.
Otherwise looks good, Ah nm, I see it has been marked duplicate.]