[The patch addresses both HIVE-5003 and HIVE-5004. I will close HIVE-5004 once this is committed., Remove some cruft., Rest of the patch., What does this mean for adding jars to load UDFs or adding files to the distributed cache to run a job, are we going to create folders under this HDFS folder? , Hi [~appodictic]

Here is a short design doc on what I am proposing in this jira. Please take a look.

Thanks
Vikram., Updated to better re-use code., I think we are repeating a semi-disturbing trend of writing a lot of code we have little direct coverage for. For example take a method like:

{code}
 private static Path getDefaultDestDir(Configuration conf) throws LoginException, IOException {
{code}

or 
{code}
 private static String getExecJarPathLocal () {
{code}

I think we should have direct junit style tests around these methods. The code clean (for its development state) and well documented. But I think we have the chance to "do it better".

Right now, for our current code, and this code. We are totally reliant on our end-to-end system to validate every minor change. If we have smaller unit tests on things like this we can have more coverage and enhance our ability to make changes to the project without having as many worries around side effects that will not manifest until final end to end tests. 

I think we should draw a line in the sand and here and attempt to write unit tests and design code in a testable way. Not just write it and worry about unit tests later. What do you think?

, [~appodictic] I agree with you and I don't mind the tez integration being a test bed for this. I'll open a tez blocker jira for this - the reason being that we need to put some serious thought into this first. 

For instance:
- private methods should not have unit tests, but public should I think (private should be covered implicitly, I don't want to make everything package private for testing and I don't want reflection to call those)
- Mocking: We have to investigate how we do this cleanly
- Dependency injection: We might have to redesign parts of the code allow proper testing easily


, [~vikram.dixit] Some review comments (RB would be great):

- CANNOT_FIND_EXEC_JAR isn't used/ please remove
- hive.jar.directory should be /user/hive/...
- DagUtils class level javadoc comment is already there (seems you're adding a second one)
- e.printStackTrace is not good as a debugging method. Either log or pass it on to the caller
- // java magic isn't a great comment, be good to say what the magic is achieving
- getResourceVersion comment doesn't match the logic. it will return the basename not the version string
- There's a system.out.println in the code
, I understand what you are saying. I am ok with the package private idea and dependency injection, I generally prefer that to a heavy solution like mocking. 

I would not call this a blocker, but I think we need to design more with testing in mind. Lets talk it over elsewhere. , Addressed Gunther's comments., RB entry:

https://reviews.apache.org/r/13507/, Committed to branch. Thanks Vikram!]