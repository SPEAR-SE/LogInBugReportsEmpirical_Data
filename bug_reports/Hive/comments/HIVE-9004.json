[[~namit] sorry, I am not sure the review process, can you review this for me please?, Hi, I took a look and patch looks good.  Please name it 'HIVE-9004.patch' to trigger the pre-commit test., Thank you [~szehon], updated., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12687952/HIVE-9004.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 6714 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver_optimize_nullscan
{noformat}

Test results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/2123/testReport
Console output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/2123/console
Test logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-2123/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12687952 - PreCommit-HIVE-TRUNK-Build, Thanks.  Looks good to me, +1, [~thejas] [~brocknoland] this is a good change in my opinion.  Strictly speaking it is backward incompatible, and i marked it as such.  I dont see any issue in putting it in with proper documentation as its not very intrusive, but wanted to double check if there's any concern before going ahead.  Thanks, Yes, I agree this is not very intrusive behavior change, not many users are likely to see issues because of this. I think documenting it should be OK.
However, some comments regarding the patch -
1. I think we should include a unit test for this.
2. I don't think the change would work. The properties object returned is a copy, it won't update the HiveConf - 
In HiveConf.java -
{code} 
  public Properties getAllProperties() {
    return getProperties(this);
  }

  private static Properties getProperties(Configuration conf) {
    Iterator<Map.Entry<String, String>> iter = conf.iterator();
    Properties p = new Properties();
    while (iter.hasNext()) {
      Map.Entry<String, String> e = iter.next();
      p.setProperty(e.getKey(), e.getValue());
    }
    return p;
  }

{code} , Ah, thanks for catching that., bq. Yes, I agree this is not very intrusive behavior change, not many users are likely to see issues because of this. I think documenting it should be OK.


+1, May be you can unsetlike this :
{code}
 ss.getConf().unset(key);
{code}, Removing fix version of 1.2.0 in preparation of release, since this is not a blocker for 1.2.0.]