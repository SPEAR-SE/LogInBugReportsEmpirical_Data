[Patch added. 

Note in clonePlan() we need to use HiveConf() instead of Configuration(), otherwise, we're only reading "hive.plan.serialization.format" from the hadoop site configuration files instead of hive-site.xml., 

{color:red}Overall{color}: -1 at least one tests failed

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12606026/HIVE-5405.patch

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 4070 tests executed
*Failed tests:*
{noformat}
org.apache.hadoop.hive.cli.TestMinimrCliDriver.testCliDriver_bucket_num_reducers
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/979/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/979/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests failed with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated., I don't think the failure is related. I am +1 on the patch, but I do have a question, did the patch fix your issue as the unit tests won't test this format., [~brocknoland] Yes, this patch fixed my issues if I set hive.plan.serialization.format to javaXML. I believe this is the real cause for HIVE-5068, which is "fixed" by HIVE-5263 because HIVE-5263 uses Kryo serializer instead of javaXML., RIght, in HIVE-5263 we didn't perform this update so hive.plan.serialization.format=javaXML won't actually work.  One more question, I am just curious as to why you are setting hive.plan.serialization.format to javaXML? It's useful in our tests but in general it should be a unperformant configuration choice., I understand that javaXML is not a preferred configuration choice. But since we are providing a configuration option instead of removing JavaXML support in HIVE-1511 we need to make sure they actually work., Hey,

Sorry I wasn't clear, I am in favor of this patch ("I am +1 on the patch") and feel we should have done this in HIVE-5263 ("RIght, in HIVE-5263 we didn't perform this update so hive.plan.serialization.format=javaXML won't actually work."), but I want to understand why you want to do this so I can understand what scenarios javaXML is preferable.

Looking forward to your response., Oh sorry I couldn't answer your question. I was just chasing a bug similar to HIVE-5068 before HIVE-5263 and concluded CommonToken was the problem. That's why I did this patch. I don't actually know when javaXML is preferable in reality., +1, I think it might make sense to have this in 0.12 as well. Since, 0.12 users won't enjoy Kryo benefits. 
cc: [~thejas] What do you think?, Yes, I will include it in 0.12 . This looks like a reasonably safe fix.
, Thank you very much for your contribution Shanyu!  Committed to trunk! 

Thejas I set the fix version to 0.13, please update when you merge., The current patch didn't apply on 0.12 branch. But it seems to me that only what has applied is actually needed.

The rejects in patch -
{code}
cat ./ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java.rej 
***************
*** 680,686 ****
      PerfLogger perfLogger = PerfLogger.getPerfLogger();
      perfLogger.PerfLogBegin(LOG, PerfLogger.CLONE_PLAN);
      ByteArrayOutputStream baos = new ByteArrayOutputStream(4096);
-     Configuration conf = new Configuration();
      serializePlan(plan, baos, conf, true);
      MapredWork newPlan = deserializePlan(new ByteArrayInputStream(baos.toByteArray()),
          MapredWork.class, conf, true);
--- 692,698 ----
      PerfLogger perfLogger = PerfLogger.getPerfLogger();
      perfLogger.PerfLogBegin(LOG, PerfLogger.CLONE_PLAN);
      ByteArrayOutputStream baos = new ByteArrayOutputStream(4096);
+     Configuration conf = (Configuration)new HiveConf();
      serializePlan(plan, baos, conf, true);
      MapredWork newPlan = deserializePlan(new ByteArrayInputStream(baos.toByteArray()),
          MapredWork.class, conf, true);
{code}

HIVE-5405-branch-0.12.patch - patch for 0.12 branch

[~shanyu] [~brocknoland] Can you please check if the 0.12 patch looks good ?
, Sorry, that patch does not work with 0.12 . Looks like CommonToken is not used in 0.12 .  Do we need this patch for 0.12 ?

{code}
compile:
     [echo] Project: ql
    [javac] Compiling 922 source files to /home/hortonth/hive_apache/build/ql/classes
    [javac] /home/hortonth/hive_apache/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java:464: cannot find symbol
    [javac] symbol  : class CommonToken
    [javac] location: class org.apache.hadoop.hive.ql.exec.Utilities.CommonTokenDelegate
    [javac]       CommonToken ct = (CommonToken)oldInstance;
    [javac]       ^
    [javac] /home/hortonth/hive_apache/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java:464: cannot find symbol
    [javac] symbol  : class CommonToken
    [javac] location: class org.apache.hadoop.hive.ql.exec.Utilities.CommonTokenDelegate
    [javac]       CommonToken ct = (CommonToken)oldInstance;
    [javac]                         ^
    [javac] /home/hortonth/hive_apache/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java:466: internal error; cannot instantiate java.beans.Expression.<init> at java.beans.Expression to ()
    [javac]       return new Expression(ct, ct.getClass(), "new", args);
    [javac]              ^
    [javac] Note: Some input files use or override a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] Note: Some input files use unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
    [javac] 3 errors

{code}, [~thejas] I think you are missing this import in Utilities.java:
import org.antlr.runtime.CommonToken;, I should have read the code more carefully. I see that the change is only to serializing this class. New patch with import.

, Hi,

Can't you just merge the commit?

http://svn.apache.org/viewvc?view=revision&revision=1528531

On commit I changed to very minor items:

1) Remove the cast of the HiveConf to Configuration as it's already of type Configuration
2) DId not use the FQCN in setPersistenceDelegate since we've already imported it., bq. Can't you just merge the commit?

nevermind, I see. Yes the patch looks good to me though you don't need to use the FQCN in the later portion of the patch. Minor issue., I think it will be a good practice to upload any final patch (after any minor rebase or other minor pre-commit changes are made)  to the jira, so that it is clear that there is some change that went it before commit. I don't think such minor changes need another review. 

, Patch committed to 0.12 branch., ABORTED: Integrated in Hive-branch-0.12-hadoop1 #4 (See [https://builds.apache.org/job/Hive-branch-0.12-hadoop1/4/])
HIVE-5405 : Need to implement PersistenceDelegate for org.antlr.runtime.CommonToken (shanyu zhao via Brock Noland) (thejas: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1528659)
* /hive/branches/branch-0.12/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java
, FAILURE: Integrated in Hive-trunk-hadoop2 #470 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/470/])
HIVE-5405 - Need to implement PersistenceDelegate for org.antlr.runtime.CommonToken (shanyu zhao via Brock Noland) (brock: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1528531)
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java
, FAILURE: Integrated in Hive-trunk-h0.21 #2374 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2374/])
HIVE-5405 - Need to implement PersistenceDelegate for org.antlr.runtime.CommonToken (shanyu zhao via Brock Noland) (brock: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1528531)
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java
, FAILURE: Integrated in Hive-trunk-hadoop2-ptest #123 (See [https://builds.apache.org/job/Hive-trunk-hadoop2-ptest/123/])
HIVE-5405 - Need to implement PersistenceDelegate for org.antlr.runtime.CommonToken (shanyu zhao via Brock Noland) (brock: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1528531)
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java
, SUCCESS: Integrated in Hive-trunk-hadoop1-ptest #189 (See [https://builds.apache.org/job/Hive-trunk-hadoop1-ptest/189/])
HIVE-5405 - Need to implement PersistenceDelegate for org.antlr.runtime.CommonToken (shanyu zhao via Brock Noland) (brock: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1528531)
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java
, This issue has been fixed and released as part of 0.12 release. If you find further issues, please create a new jira and link it to this one.]