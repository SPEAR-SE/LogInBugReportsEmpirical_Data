[replaced standard backtracking with SEL merge function., still running tests on patch., Query:

{noformat}
insert overwrite table outputTbl1
SELECT a.key, concat(a.values, a.values), concat(a.values, a.values)
FROM (
  SELECT key, count(1) as values from inputTbl1 group by key
  UNION ALL
  SELECT key, count(1) as values from inputTbl1 group by key
) a;
{noformat}

Before:

{noformat}
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: UDFToLong(_col1)
                  type: bigint
                  expr: UDFToLong(_col2)
                  type: bigint
            outputColumnNames: _col0, _col1, _col2
{noformat}

After:

{noformat}        
          outputColumnNames: _col0, _col1
          Select Operator
            expressions:
                  expr: _col0
                  type: string
                  expr: UDFToLong(concat(_col1, _col1))
                  type: bigint
                  expr: UDFToLong(concat(_col1, _col1))
                  type: bigint
            outputColumnNames: _col0, _col1, _col2
{noformat}, https://reviews.facebook.net/D9471, [~navis] Would you like to review this?, [~navis] I think you'd be the best person to take a look. Can you spare a moment?, I've took a look at this. The root cause is from UnionProcessor which does not copy colExprMapping of parent SEL operator. After applying that, I've confirmed the result is valid.

[~hagleitn] The patch you've provided is valid but the missing colExprMap info can make problems in anytime. So I prefer to revise it as suggested above. Could you do that?, Much better fix! Thanks [~navis]. Testing it right now, will be up shortly., Adjusted fix per Navis' instructions. I've also checked other union_remove* testcases and updated their golden file after verifying.

There are still failures in some of the union_remove testcases - but I think those are unrelated and I will open separate jiras for them (8,9,10,12,13,24), minor comments on phabricator, Addressing comment from phabricator (cloning schema and columnExprMap), I've ran union_remove_* tests and found mapping information is missing for type casting SEL operator, which is generated in SemanticAnalyzer.genInputSelectForUnion().

Packing needed colExprMap seemed to fix some part of problems. Could you do that?, And.. failing of 12, 13 is caused by mis-configuration in data/hive-site.xml (hive.ignore.mapjoin.hint should be true). I don't know why those are failing if it's set false., [~navis] I'd be happy to work on those as well. As I said before, there's additional issues with the union_remove testcases. I think those can/should be handled in follow up jiras though. This one fixes one particular issue and can be committed. Do you agree?, Am I missing something? I get result of union_remove_5,8,9,14,24 are changed., [~navis]: Here's what you should see with this patch:

{noformat}
failures before: 10, 12, 13, 14, 22, 23, 24, 3, 4, 5, 7, 8, 9
 failures after: 10, 12, 13, 14,         24,       5,    8, 9
{noformat}

So, this patch fixes: 22, 23, 2, 3 and 7

Is that what you're asking?, Oh - yes, I think you're result is right. The ones you list are still failing because of mismatch with the golden file (fixed in other patches). 10, 12 and 13 actually get an exception before they even get to the diff with golden file., +1 will commit if tests pass., I know results of 5,8,9,14,24 would be fixed by other issues. But IMHO, those changes should be included anyway. Isn't it? And, sorry for slow progress. I'm barely not good reviewer but trying to be like a committer., No worries [~navis] I dont feel strongly one way or the other. [~hagleitn] would you like to update the results in this patch or in HIVE-4259 ?, I've split the golden file updates to go along with the code changes in the patches. I prefer it this way, but will change if it makes things easier. This is a somewhat special case I think, because the hadoop 2 build is already broken (so even though this fixes some tests others will still fail)., Committed to trunk. Thanks, Gunther!, Integrated in Hive-trunk-h0.21 #2043 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2043/])
    HIVE-4179 : NonBlockingOpDeDup does not merge SEL operators correctly (Gunther Hagleitner via Ashutosh Chauhan) (Revision 1464042)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1464042
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/OperatorFactory.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/RowSchema.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcFactory.java
* /hive/trunk/ql/src/test/results/clientpositive/union_remove_22.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union_remove_23.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union_remove_3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union_remove_4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union_remove_7.q.out
, Integrated in Hive-trunk-hadoop2 #138 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/138/])
    HIVE-4179 : NonBlockingOpDeDup does not merge SEL operators correctly (Gunther Hagleitner via Ashutosh Chauhan) (Revision 1464042)

     Result = FAILURE
hashutosh : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1464042
Files : 
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/OperatorFactory.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/exec/RowSchema.java
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/optimizer/unionproc/UnionProcFactory.java
* /hive/trunk/ql/src/test/results/clientpositive/union_remove_22.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union_remove_23.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union_remove_3.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union_remove_4.q.out
* /hive/trunk/ql/src/test/results/clientpositive/union_remove_7.q.out
]