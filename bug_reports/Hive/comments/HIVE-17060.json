[My investigation shows, that CBO initiates the UDF twice:
1. CalcitePlannerAction.genLogicalPlan() - When generating the logical plan the UDF is initiated
2. CalcitePlannerAction.applyPreJoinOrderingTransforms() - When the hep planner optimizes the plan (planner.findBestExp()) it also initiates the UDF.

[~sershe]: I do not see an easy way to fix this. Any ideas?

Thanks,
Peter, Well, we can remove the overload and the warning in 3.0; not sure about 2.4. There isn't really a good way to de-dup it if the UDF is being created twice.]