[[~zamsden] Thanks for the patch. Can you rename the patch name to HIVE-17429.1.patch to trigger the pre-commit build? , That doesn't seem to have triggered the pre-commit build and it's taken far too long.  Any way to kick that build off manually?, I see your patch next in the line in the queue. https://builds.apache.org/job/PreCommit-HIVE-Build/, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12885449/HIVE-17429.2.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 5 failed/errored test(s), 11026 tests executed
*Failed tests:*
{noformat}
TestAccumuloCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=230)
TestDummy - did not produce a TEST-*.xml file (likely timed out) (batchId=230)
TestTxnCommandsBase - did not produce a TEST-*.xml file (likely timed out) (batchId=280)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[insert_values_orig_table_use_metadata] (batchId=61)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=234)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/6680/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/6680/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-6680/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 5 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12885449 - PreCommit-HIVE-Build, Oh, now that I looked at this again it was running it for HIVE-17428 not this one. My bad. I don't know whats going on with this patch. I see it is running HIVE-17426 and I see it picks up HIVE-17428 but not this one., I was about to attach the patch again but looks like it posted the results just in time., Hmm, these test failures seem to indicate possible timeouts, but missing .xml files could also indicate that metadata wasn't picked up.  Can someone from Hive take a quick look and see if these might be expected failures?, org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] looks like a difference in test output caused by a WARNING line output in different order.

Running org.apache.hadoop.hive.cli.TestAccumuloCliDriver definitely looks like a timeout, this is the last output from Maven:
{noformat}
[INFO] 
[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ hive-it-qfile-accumulo ---
[INFO] Surefire report directory: /home/hiveptest/35.193.110.99-hiveptest-0/apache-github-source-source/itests/qtest-accumulo/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.hadoop.hive.cli.TestAccumuloCliDriver
{noformat}
, The tests don't look related to the change. +1. , Pushed to master (3.0). Thanks Zach for the work., Hey [~aihuaxu], just a heads-up that while this fix is in the 2.1.x branch and master, it's not in the 2.2.x or 2.3.x branches.  Since 2.3.x is the latest release available on maven central just now, it'll probably bite quite a few people trying to use it with Impala.

I've added the relevant releases to the 'Affects Versions' field, but you may want to consider porting the fix to 2.3 if you're planning to do any more releases before 3.0, since it's not really usable with Impala without it., [~markmsmith] The change has been backported to 2.2 and 2.3 branches., [~aihuaxu] thank you very much for backporting it, I'm sorry it's taken me some time to circle back and try upgrading again. 

Unfortunately, I'm still seeing the same problem with 2.2.1 and 2.3.3 with an exception being thrown from here:  

https://github.com/apache/hive/blob/rel/release-2.3.3/jdbc/src/java/org/apache/hive/jdbc/HiveStatement.java#L477

so I think there must be some other issue with how GetOperationStatus() is being built in the underlying TCLIService.Iface client:  

[https://github.com/apache/hive/blob/rel/release-2.3.3/jdbc/src/java/org/apache/hive/jdbc/HiveStatement.java#L254
https://github.com/apache/hive/blob/rel/release-2.3.3/jdbc/src/java/org/apache/hive/jdbc/HiveStatement.java#L367|https://github.com/apache/hive/blob/rel/release-2.3.3/jdbc/src/java/org/apache/hive/jdbc/HiveStatement.java#L367]  

Unless the underlying client's response is fixed, I think the 2.2.x and 2.3.x branches will need to do the same workaround/fix as master, also checking the `stmtHandle` for a resultSet:  

[https://github.com/apache/hive/blob/master/jdbc/src/java/org/apache/hive/jdbc/HiveStatement.java#L269]  

In case you want to test the same queries as I'm running against Impala via JDBC, I'm doing the following:
 * "SHOW TABLE STATS foo.oldTable"
 * "CREATE EXTERNAL TABLE foo.newTable LIKE foo.oldTable STORED AS PARQUET LOCATION 'hdfs://MyNameServer/location/newFooDir'"
 * "SHOW CREATE TABLE foo.TEMP_newTable"

I admit that the two "SHOW" ones are a little unusual as 'queries', but they seem to work fine with the 2.1.1 driver., [~markmsmith] I guess I may have marked the wrong version since 2.3.3 is already released. It will be in the next 2.3.x. 2.2.1 is not releases so should have such change. How did you test out against 2.2.1? Did you sync and build against the latest branch-2.2 branch?, This jira is resolved and released with Hive 3.0 If you find an issue with it, please create a new jira.]