[Hi [~taksaito]

Isn't part of a standard to have 4 digit year? 

I was taking a look at time and dates standard regarding the expansion of year representation, and it states we should prefix it with + or - (YYYY or Â±YYYYY).
https://en.wikipedia.org/wiki/ISO_8601

Should we stick to a standard by allowing + or -? is there a use case on Hive for having an expansion of the digit year?, [~spena]
[~taksaito] Found this issue while writing some end-to-end internal tests for ORC schema evolution, where bigint type was changed to timestamp type. The actual intent wasn't really to test larger dates. This was resulting in errors in beeline, such as the following. It seems like in thrift api/jdbc we are sending the timestamp across as strings and then failing to read the values because jdbc is using java.sql.Timestamp.valueOf(String). 

{noformat}
0: jdbc:hive2://host-> select * from test;
java.lang.IllegalArgumentException: Timestamp format must be yyyy-mm-dd hh:mm:ss[.fffffffff]
	at java.sql.Timestamp.valueOf(Timestamp.java:237)
	at org.apache.hive.jdbc.HiveBaseResultSet.evaluate(HiveBaseResultSet.java:443)
	at org.apache.hive.jdbc.HiveBaseResultSet.getColumnValue(HiveBaseResultSet.java:423)
	at org.apache.hive.jdbc.HiveBaseResultSet.getString(HiveBaseResultSet.java:536)
	at org.apache.hive.beeline.Rows$Row.<init>(Rows.java:166)
	at org.apache.hive.beeline.BufferedRows.<init>(BufferedRows.java:43)
	at org.apache.hive.beeline.BeeLine.print(BeeLine.java:1813)
	at org.apache.hive.beeline.Commands.execute(Commands.java:875)
	at org.apache.hive.beeline.Commands.sql(Commands.java:728)
	at org.apache.hive.beeline.BeeLine.dispatch(BeeLine.java:992)
	at org.apache.hive.beeline.BeeLine.execute(BeeLine.java:832)
	at org.apache.hive.beeline.BeeLine.begin(BeeLine.java:790)
	at org.apache.hive.beeline.BeeLine.mainWithInputRedirection(BeeLine.java:490)
	at org.apache.hive.beeline.BeeLine.main(BeeLine.java:473)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:221)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:136)
Error: Unrecognized column type:TIMESTAMP_TYPE (state=,code=0)
{noformat}, [~spena]
I agree about using standard string representation for larger dates. Thanks for pointing out what the standard says.

FYI, I am not actively looking into this issue now., Thanks [~thejas] for the explanation.
I've seen some issues in Thrift regarding types as well. Maybe we can lower the priority on this and a newbie can take it later to identify if it is possible to fix it., [~spena]: I am interested in taking this further, Good, that's great [~akhetarp]. I think is a good feature to add as long as we stick to the standard.]