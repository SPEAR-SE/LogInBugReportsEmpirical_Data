[Does this happen when HMS is embedded in HS2? In case of remote HMS we avoid leaking {{JDOPersistenceManager}} by issuing a {{cleanupRawStore}} in {{deleteContext}}. May be we need to the same in HS2 by detecting if HMS is in embedded mode., Yes, it is happening with embedded metastore in HS2.Â , GitHub user sankarh opened a pull request:

    https://github.com/apache/hive/pull/402

    HIVE-20192: HS2 with embedded metastore is leaking JDOPersistenceManager objects.

    

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/sankarh/hive HIVE-20192

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/hive/pull/402.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #402
    
----
commit fdd94019ca5c2616d796905fd7748c9aa77c9a12
Author: Sankar Hariappan <mailtosankarh@...>
Date:   2018-07-18T14:14:55Z

    HIVE-20192: HS2 with embedded metastore is leaking JDOPersistenceManager objects.

----
, | (/) *{color:green}+1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  1m 24s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  6m 45s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  8s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 19s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  3m  2s{color} | {color:blue} standalone-metastore/metastore-common in master has 218 extant Findbugs warnings. {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m 40s{color} | {color:blue} service in master has 48 extant Findbugs warnings. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 30s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 24s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  1m 14s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  1m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  1m  3s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 18s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:green}+1{color} | {color:green} findbugs {color} | {color:green}  3m 53s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  1m 30s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 14s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 24m  3s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Optional Tests |  asflicense  javac  javadoc  findbugs  checkstyle  compile  |
| uname | Linux hiveptest-server-upstream 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1+deb8u1 (2016-09-03) x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /data/hiveptest/working/yetus_PreCommit-HIVE-Build-12672/dev-support/hive-personality.sh |
| git revision | master / bac1d98 |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| modules | C: standalone-metastore/metastore-common service U: . |
| Console output | http://104.198.109.242/logs//PreCommit-HIVE-Build-12672/yetus.txt |
| Powered by | Apache Yetus    http://yetus.apache.org |


This message was automatically generated.

, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12932101/HIVE-20192.01.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 14638 tests executed
*Failed tests:*
{noformat}
TestCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=1)
	[udf_upper.q,ctas_date.q,schema_evol_orc_acidvec_table_update.q,groupby_grouping_sets3.q,vector_decimal_5.q,bucket_map_join_spark4.q,timestamp_2.q,schema_evol_orc_acid_table_update_llap_io.q,date_join1.q,constprog_type.q,timestamp_ints_casts.q,udf_negative.q,orc_merge_diff_fs.q,udf_substring_index.q,results_cache_lifetime.q,cross_prod_3.q,masking_12.q,diff_part_input_formats.q,auto_join_without_localtask.q,join46.q,ctas_uses_table_location.q,tez_bmj_schema_evolution.q,bucketmapjoin4.q,udf_context_aware.q,groupby2_noskew.q,authorization_non_id.q,mapjoin_test_outer.q,vectorization_9.q,input15.q,udf_PI.q]
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/12672/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/12672/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-12672/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.YetusPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 1 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12932101 - PreCommit-HIVE-Build, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12932101/HIVE-20192.01.patch

{color:red}ERROR:{color} -1 due to build exiting with an error

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/12679/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/12679/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-12679/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Tests exited with: Exception: Patch URL https://issues.apache.org/jira/secure/attachment/12932101/HIVE-20192.01.patch was found in seen patch url's cache and a test was probably run already on it. Aborting...
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12932101 - PreCommit-HIVE-Build, [~vgumashta], [~vihangk1], would you like to take a look at the patch?, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12932101/HIVE-20192.01.patch

{color:red}ERROR:{color} -1 due to build exiting with an error

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/12702/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/12702/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-12702/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Tests exited with: Exception: Patch URL https://issues.apache.org/jira/secure/attachment/12932101/HIVE-20192.01.patch was found in seen patch url's cache and a test was probably run already on it. Aborting...
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12932101 - PreCommit-HIVE-Build, I took a look at the patch it is unclear to me why the leak is happening. I see that in the initializeHelper method if there is a exception you are issuing a shutdown on the ObjectStore to clean up persistenceManager but shouldn't this uncaught exception cause the thread to be closed in the first place and thereby cleaning up the threadlocal rawstore anyways? Is it better to issue a shutdown on the threadlocal rawstore from {{ThriftBinaryCLIService#deleteContext}} method instead? Based on my understanding it looks like we are trying to keep track of the threadlocal rawstore using custom implementation of Thread in a map and depend on finalize method to do cleanup. This in theory means that cleanup is only happening when the threads are GCed instead of doing it as soon as when sessions are closed. Also, if a thrift thread is reused there would already be an entry in the {{threadRawStoreMap}} and {{cacheThreadLocalRawStore}} will overwrite that entry which can also cause a leak. This can potentially be verified by keeping the min threads and max threads as equal (so no thread is ever GCed) you keep opening and closing connections to HMS, eventually these threadLocalRawstore should pile up., Thanks for the feedback [~vihangk1]!

{quote}

I see that in the initializeHelper method if there is a exception you are issuing a shutdown on the ObjectStore to clean up persistenceManager but shouldn't this uncaught exception cause the thread to be closed in the first place and thereby cleaning up the threadlocal rawstore anyways?

{quote}

- The PersistenceManagerFactory object "pmf" is a static object which keeps references of the allocated PersistenceManager in pmCache Map. That's why PersistenceManager doesn't get GC'ed and need explicit shutdown for any exception. In this case we retry instead of closing the thread which overwrites the pm object and leaks the old one.

{quote}

Is it better to issue a shutdown on the threadlocal rawstore from {{ThriftBinaryCLIService#deleteContext}} method instead?

{quote}

-Â That's a good point. But, I'm not sure if there is any reason for keeping the current implementation withÂ  threadRawStoreMap.

{quote}

Based on my understanding it looks like we are trying to keep track of the threadlocal rawstore using custom implementation of Thread in a map and depend on finalize method to do cleanup. This in theory means that cleanup is only happening when the threads are GCed instead of doing it as soon as when sessions are closed. Also, if a thrift thread is reused there would already be an entry in the {{threadRawStoreMap}} and {{cacheThreadLocalRawStore}} will overwrite that entry which can also cause a leak. This can potentially be verified by keeping the min threads and max threads as equal (so no thread is ever GCed) you keep opening and closing connections to HMS, eventually these threadLocalRawstore should pile up.

{quote}

- I think, overwriting the entryÂ byÂ cacheThreadLocalRawStore doesn't cause any leak,Â because, it overwrites withÂ thread local rawStore which is active in this thread. If the thread local rawStore is changed, it means, the older one was already shutdown gracefully before re-create. Also, threadRawStoreMap shouldn't pile up as we use the same thread id.Â 

Please let me know if I miss anything., {quote} The PersistenceManagerFactory object "pmf" is a static object which keeps references of the allocated PersistenceManager in pmCache Map. That's why PersistenceManager doesn't get GC'ed and need explicit shutdown for any exception. In this case we retry instead of closing the thread which overwrites the pm object and leaks the old one. {quote}

I see. Thanks for the explanation.

{quote}I think, overwriting the entry by cacheThreadLocalRawStore doesn't cause any leak, because, it overwrites with thread local rawStore which is active in this thread. If the thread local rawStore is changed, it means, the older one was already shutdown gracefully before re-create. Also, threadRawStoreMap shouldn't pile up as we use the same thread id. {quote}

I think you are right. Looks like the model of cleaning up is optimistic in the sense in case the thread is reused, {{Hive#getInternal}} method does some checks to make sure if we can reuse this threadlocal rawstore and cleans it up in case the owner is different or the config is not compatible. So looks like we are good in case of thread re-use because the object which is being overwritten in the {{ThreadWithGarbageCleanup.threadRawStoreMap}} is either replaced with the same object or when the previous one was closed. So that code path looks good to me. This is all very tricky business and I hope there is no other code path which is still leaking the rawstore. 

This patch looks good to me. +1, Thanks for the review [~vihangk1]!

Attaching 02.patch after rebasing with master. No code changes., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
|| || || || {color:brown} Prechecks {color} ||
| {color:green}+1{color} | {color:green} @author {color} | {color:green}  0m  0s{color} | {color:green} The patch does not contain any @author tags. {color} |
|| || || || {color:brown} master Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m 46s{color} | {color:blue} Maven dependency ordering for branch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  7m 20s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 50s{color} | {color:green} master passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 19s{color} | {color:green} master passed {color} |
| {color:blue}0{color} | {color:blue} findbugs {color} | {color:blue}  0m 39s{color} | {color:blue} service in master has 48 extant Findbugs warnings. {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  0m 14s{color} | {color:red} metastore-server in master failed. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 40s{color} | {color:green} master passed {color} |
|| || || || {color:brown} Patch Compile Tests {color} ||
| {color:blue}0{color} | {color:blue} mvndep {color} | {color:blue}  0m  9s{color} | {color:blue} Maven dependency ordering for patch {color} |
| {color:green}+1{color} | {color:green} mvninstall {color} | {color:green}  0m 58s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} compile {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} javac {color} | {color:green}  0m 51s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} checkstyle {color} | {color:green}  0m 19s{color} | {color:green} the patch passed {color} |
| {color:green}+1{color} | {color:green} whitespace {color} | {color:green}  0m  0s{color} | {color:green} The patch has no whitespace issues. {color} |
| {color:red}-1{color} | {color:red} findbugs {color} | {color:red}  0m 13s{color} | {color:red} metastore-server in the patch failed. {color} |
| {color:green}+1{color} | {color:green} javadoc {color} | {color:green}  0m 38s{color} | {color:green} the patch passed {color} |
|| || || || {color:brown} Other Tests {color} ||
| {color:green}+1{color} | {color:green} asflicense {color} | {color:green}  0m 13s{color} | {color:green} The patch does not generate ASF License warnings. {color} |
| {color:black}{color} | {color:black} {color} | {color:black} 15m 30s{color} | {color:black} {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Optional Tests |  asflicense  javac  javadoc  findbugs  checkstyle  compile  |
| uname | Linux hiveptest-server-upstream 3.16.0-4-amd64 #1 SMP Debian 3.16.36-1+deb8u1 (2016-09-03) x86_64 GNU/Linux |
| Build tool | maven |
| Personality | /data/hiveptest/working/yetus_PreCommit-HIVE-Build-12787/dev-support/hive-personality.sh |
| git revision | master / 68b129d |
| Default Java | 1.8.0_111 |
| findbugs | v3.0.0 |
| findbugs | http://104.198.109.242/logs//PreCommit-HIVE-Build-12787/yetus/branch-findbugs-standalone-metastore_metastore-server.txt |
| findbugs | http://104.198.109.242/logs//PreCommit-HIVE-Build-12787/yetus/patch-findbugs-standalone-metastore_metastore-server.txt |
| modules | C: service standalone-metastore/metastore-server U: . |
| Console output | http://104.198.109.242/logs//PreCommit-HIVE-Build-12787/yetus.txt |
| Powered by | Apache Yetus    http://yetus.apache.org |


This message was automatically generated.

, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12932642/HIVE-20192.02.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:green}SUCCESS:{color} +1 due to 14681 tests passed

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/12787/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/12787/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-12787/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.YetusPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12932642 - PreCommit-HIVE-Build, 02.patch is committed to master!, Github user sankarh closed the pull request at:

    https://github.com/apache/hive/pull/402
, Attached patch for branch-3., | (x) *{color:red}-1 overall{color}* |
\\
\\
|| Vote || Subsystem || Runtime || Comment ||
| {color:red}-1{color} | {color:red} patch {color} | {color:red}  0m 15s{color} | {color:red} /data/hiveptest/logs/PreCommit-HIVE-Build-12790/patches/PreCommit-HIVE-Build-12790.patch does not apply to master. Rebase required? Wrong Branch? See http://cwiki.apache.org/confluence/display/Hive/HowToContribute for help. {color} |
\\
\\
|| Subsystem || Report/Notes ||
| Console output | http://104.198.109.242/logs//PreCommit-HIVE-Build-12790/yetus.txt |
| Powered by | Apache Yetus    http://yetus.apache.org |


This message was automatically generated.

, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12932678/HIVE-20192.01-branch-3.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 97 failed/errored test(s), 14404 tests executed
*Failed tests:*
{noformat}
TestAddPartitions - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestAddPartitionsFromPartSpec - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestAdminUser - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestAggregateStatsCache - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestAlterPartitions - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestAppendPartitions - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestBeeLineDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=271)
TestCachedStore - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestCatalogCaching - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestCatalogNonDefaultClient - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestCatalogNonDefaultSvr - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestCatalogOldClient - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestCatalogs - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestCheckConstraint - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestDataSourceProviderFactory - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestDatabases - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestDeadline - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestDefaultConstraint - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestDropPartitions - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestDummy - did not produce a TEST-*.xml file (likely timed out) (batchId=271)
TestEmbeddedHiveMetaStore - did not produce a TEST-*.xml file (likely timed out) (batchId=229)
TestExchangePartitions - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestFMSketchSerialization - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestFilterHooks - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestForeignKey - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestFunctions - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestGetPartitions - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestGetTableMeta - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestHLLNoBias - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestHLLSerialization - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestHdfsUtils - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestHiveAlterHandler - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestHiveMetaStoreGetMetaConf - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestHiveMetaStorePartitionSpecs - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestHiveMetaStoreSchemaMethods - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestHiveMetaStoreTimeout - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestHiveMetaStoreTxns - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestHiveMetaStoreWithEnvironmentContext - did not produce a TEST-*.xml file (likely timed out) (batchId=231)
TestHiveMetastoreCli - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestHyperLogLog - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestHyperLogLogDense - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestHyperLogLogMerge - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestHyperLogLogSparse - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestJSONMessageDeserializer - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestListPartitions - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestLockRequestBuilder - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestMarkPartition - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestMarkPartitionRemote - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestMetaStoreConnectionUrlHook - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestMetaStoreEndFunctionListener - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestMetaStoreEventListener - did not produce a TEST-*.xml file (likely timed out) (batchId=232)
TestMetaStoreEventListenerOnlyOnCommit - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestMetaStoreEventListenerWithOldConf - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestMetaStoreInitListener - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestMetaStoreListenersError - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestMetaStoreSchemaFactory - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestMetaStoreSchemaInfo - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestMetaStoreUtils - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestMetastoreConf - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestMetastoreSchemaTool - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestMetrics - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestMiniDruidCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=271)
TestMiniDruidKafkaCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=271)
TestNotNullConstraint - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestObjectStore - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestObjectStoreInitRetry - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestObjectStoreSchemaMethods - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestOldSchema - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestPartitionNameWhitelistValidation - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestPrimaryKey - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestRawStoreProxy - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestRemoteHiveMetaStore - did not produce a TEST-*.xml file (likely timed out) (batchId=230)
TestRemoteHiveMetaStoreIpAddress - did not produce a TEST-*.xml file (likely timed out) (batchId=224)
TestRemoteUGIHiveMetaStoreIpAddress - did not produce a TEST-*.xml file (likely timed out) (batchId=233)
TestRetriesInRetryingHMSHandler - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestRetryingHMSHandler - did not produce a TEST-*.xml file (likely timed out) (batchId=234)
TestRuntimeStats - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestSchemaToolForMetastore - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestSetUGIOnBothClientServer - did not produce a TEST-*.xml file (likely timed out) (batchId=227)
TestSetUGIOnOnlyClient - did not produce a TEST-*.xml file (likely timed out) (batchId=225)
TestSetUGIOnOnlyServer - did not produce a TEST-*.xml file (likely timed out) (batchId=235)
TestSparseEncodeHash - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestStats - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestStatsSetupConst - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestTableIterable - did not produce a TEST-*.xml file (likely timed out) (batchId=236)
TestTablesCreateDropAlterTruncate - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestTablesGetExists - did not produce a TEST-*.xml file (likely timed out) (batchId=228)
TestTablesList - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestTezPerfCliDriver - did not produce a TEST-*.xml file (likely timed out) (batchId=271)
TestTxnHandlerNegative - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestTxnUtils - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
TestUniqueConstraint - did not produce a TEST-*.xml file (likely timed out) (batchId=226)
org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[results_cache_with_masking] (batchId=174)
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver[vector_outer_join2] (batchId=185)
org.apache.hadoop.hive.ql.TestWarehouseExternalDir.testManagedPaths (batchId=248)
org.apache.hive.service.TestHS2ImpersonationWithRemoteMS.testImpersonation (batchId=256)
org.apache.hive.spark.client.rpc.TestRpc.testServerPort (batchId=323)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/12790/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/12790/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-12790/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.YetusPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 97 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12932678 - PreCommit-HIVE-Build, Test failures are irrelevant to this patch and also fails for some other builds too.

01-branch-3.patch is committed to branch-3.]