[{code}  
private void startTimeoutChecker() {
  ...
    final Runnable timeoutChecker = new Runnable() {
      @Override
      public void run() {
        sleepFor(interval);
        while (!shutdown) {
          ...
            if (sessionTimeout > 0 && session.getLastAccessTime() + sessionTimeout <= current
                && (!checkOperation || session.getNoOperationTime() > sessionTimeout)) {
              ...
            } else {
              session.closeExpiredOperations();
            }
          }
          sleepFor(interval);
        }
      }
{code}
In the condition {{session.getNoOperationTime() > sessionTimeout}} is not true, execution will go to else clause. However, {{session.closeExpiredOperations();}} will eventually call HiveSessionImpl.acquire(), which will set {{lastIdleTime = 0}}. This will make the condition {{session.getNoOperationTime() > sessionTimeout}} never true, causing a session leak., With the change in patch, I found activeCalls variable is no longer used. Patch #1 removes it. Plus, I don't feel it's strongly needed in the first place as well., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12884141/HIVE-17401.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 11014 tests executed
*Failed tests:*
{noformat}
TestTxnCommandsBase - did not produce a TEST-*.xml file (likely timed out) (batchId=280)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[insert_values_orig_table_use_metadata] (batchId=61)
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver[spark_vectorized_dynamic_partition_pruning] (batchId=169)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=234)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/6569/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/6569/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-6569/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12884141 - PreCommit-HIVE-Build, 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12884150/HIVE-17401.1.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 5 failed/errored test(s), 11014 tests executed
*Failed tests:*
{noformat}
TestTxnCommandsBase - did not produce a TEST-*.xml file (likely timed out) (batchId=280)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[insert_values_orig_table_use_metadata] (batchId=61)
org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.testCliDriver[spark_vectorized_dynamic_partition_pruning] (batchId=169)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=234)
org.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query23] (batchId=234)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/6571/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/6571/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-6571/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 5 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12884150 - PreCommit-HIVE-Build, Hi [~xuefuz],

I have taken a look at the patch. Looks logical, and much easier to read than the previous version. No to mention that clears up a bug :).
Quick question? Do we need {{lastIdleTime}} as a long after this change? It might be enough to have it as a boolean, since we only use it as a flag that the operation lock is acquired, since otherwise lastIdleTime equals lastAccessTime.

Thanks for the investigation and the patch!
Peter, Hi [~pvary], Thanks for the review. I think your suggestion makes sense except that we have to initialize {{lastAccessTime}} to current time (instead of 0). Otherwise, there is a slim chance that a session gets timed out before it's completed opened.

I will post a new patch for this., 

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12885425/HIVE-17401.2.patch

{color:red}ERROR:{color} -1 due to no test(s) being added or modified.

{color:red}ERROR:{color} -1 due to 4 failed/errored test(s), 11033 tests executed
*Failed tests:*
{noformat}
TestTxnCommandsBase - did not produce a TEST-*.xml file (likely timed out) (batchId=280)
org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver[insert_values_orig_table_use_metadata] (batchId=61)
org.apache.hadoop.hive.cli.TestMiniTezCliDriver.testCliDriver[explainanalyze_2] (batchId=100)
org.apache.hive.jdbc.TestJdbcWithMiniHS2.testHttpRetryOnServerIdleTimeout (batchId=227)
{noformat}

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/6676/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/6676/console
Test logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-6676/

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.TestCheckPhase
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
Tests exited with: TestsFailedException: 4 tests failed
{noformat}

This message is automatically generated.

ATTACHMENT ID: 12885425 - PreCommit-HIVE-Build, Thanks for the patch [~xuefuz]. HIVE-17401.2.patch looks good to me.
+1, Above test failures don't seem related to the patch. The patch fixes the implementation bug that causes session and so memory leak for HS2, and corrects a potential synchronization problem. It also refactored the code a little to make it easier to read and understand.

Patch #2 is committed to master. Thanks to Peter for the review., This jira is resolved and released with Hive 3.0 If you find an issue with it, please create a new jira.]