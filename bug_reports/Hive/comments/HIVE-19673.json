[fyi: [~jcamachorodriguez] - this is the kind I had in mind...not sure if something is "changed" in the background by the ctas test ..., turns out that this sample6 test will fail if there is an earlier test which does: {{set hive.vectorized.execution.enabled=false}}
I'm don't know why that might matter; afaik the conf should be reset between tests

[~djaiswal] seems like probably HIVE-18910 might be connected - since that ticket have changed the resultsets for these tests - is that ok?

{code}
kirk@savara:~/projects/hive/master$ git show ac6b2a3fb195916e22b2e5f465add2ffbcdc7430 ql/src/test/results/clientpositive/spark/sample6.q.out|grep val_307|sort
 306	val_307
-306	val_307
-307	val_307
-307	val_307
-307	val_307
-307	val_307
+307	val_307
+307	val_307
+307	val_307
+307	val_307
+307	val_307
+307	val_307
kirk@savara:~/projects/hive/master$ git show ac6b2a3fb195916e22b2e5f465add2ffbcdc7430 ql/src/test/results/clientpositive/sample6.q.out|grep val_307|sort
 306	val_307
-306	val_307
-307	val_307
-307	val_307
-307	val_307
-307	val_307
{code}
, [~kgyrtkirk], thanks for opening this. Saw similar issues with {{sample2}} and {{sample4}} while we were working on getting green runs, and we disabled those two tests. If this happens frequently, we can disable the test., I disabled {{sample6.q}} and added it to HIVE-19657, the failure is the same. It does not make sense that this is failing intermittently and blocking some clean runs., [~jcamachorodriguez] the following happens in the ptest server:

* there is some logic which assigns buckets for each qtest ; this is stable - for the same input it gives the same output
* if the patch adds a new qtest the logic might end up with a different test groups - and if 2 tests which don't like eachother gets into the same group ; then there will be a failure
, there seems to be some inconsistency caused by the fact that the next q file "starts" with the previous qfile's session; this thing keeps hitting back....QTestUtil has a very sophisticated operation...it even prevented setting proper per case timeouts..., fixed by HIVE-19882]