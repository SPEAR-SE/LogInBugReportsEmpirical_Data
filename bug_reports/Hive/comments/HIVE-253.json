[marking as blocker as per athusoo's recommendation. , Marking this for 0.2.0 version., Load balancing..., Created an annotation called UDFType. If a UDF is not deterministic, dont include it in the partition pruner., Looks good: I have some minor comments:

1. No need to include UDFRand in PartitionPruner
2. test rand_partitionpruner.q:
     can you add that on a partitioned table, srcpart, instead ?
     can you add a explain plan which will show that all partitions are included ? 
3. Can you add another tests for AND/OR of some expression and rand(), like
    Again can you perform a explain plan ?, Incorporated Namit's comments. Created a couple more test cases., +1

looks good, I am getting some failures in the tests...

    [junit] Begin query: input_testxpath2.q
    [junit] Loading data to table srcpart partition {ds=2008-04-08, hr=11}
    [junit] OK
    [junit] Loading data to table srcpart partition {ds=2008-04-08, hr=12}
    [junit] OK
    [junit] Loading data to table srcpart partition {ds=2008-04-09, hr=11}
    [junit] OK
    [junit] Loading data to table srcpart partition {ds=2008-04-09, hr=12}
    [junit] OK
    [junit] Loading data to table srcbucket
    [junit] OK
    [junit] Loading data to table srcbucket
    [junit] OK
    [junit] Loading data to table src
    [junit] OK
    [junit] Exception: Client Execution failed with error code = 10
    [junit] junit.framework.AssertionFailedError: Client Execution failed with error code = 10
    [junit]     at junit.framework.Assert.fail(Assert.java:47)
    [junit]     at org.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_input_testxpath2(TestCliDriver.java:3815)
    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    [junit]     at java.lang.reflect.Method.invoke(Method.java:597)
    [junit]     at junit.framework.TestCase.runTest(TestCase.java:154)
    [junit]     at junit.framework.TestCase.runBare(TestCase.java:127)
    [junit]     at junit.framework.TestResult$1.protect(TestResult.java:106)
    [junit]     at junit.framework.TestResult.runProtected(TestResult.java:124)
    [junit]     at junit.framework.TestResult.run(TestResult.java:109)
    [junit]     at junit.framework.TestCase.run(TestCase.java:118)
    [junit]     at junit.framework.TestSuite.runTest(TestSuite.java:208)
    [junit]     at junit.framework.TestSuite.run(TestSuite.java:203)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:297)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:672)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:567)
    [junit] Hive history file=/data/users/athusoo/commits/hive_trunk_ws6/ql/../build/ql/tmp/hive_job_log_athusoo, The problem was a bug in the patch. In the process of trying to not duplicate code, I introduced a bug where not all UDFs were getting nulled in the pruneExpr. I have now fixed the condition where the nodes are replaced with null., running tests for committing now, committed. Thanks Raghu!]