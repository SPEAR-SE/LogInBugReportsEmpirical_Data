[This has the following requirements:

1. Pass the type info. in getFileSinkPlan
2. Enhance LazySerde to use json to serialize for complex types under certain conditions
3. Return a new thrift type instead of string from Driver.getSchema(), changes look good for the most part. a few comments:

* we should provide an additional method in HiveInterface.java which returns a SerDe given a Schema. If we implement it once - we can reuse it in all the tests and in HiveResultSet.java instead of duplicating the serde creation logic everywhere (including the dsp.setProperty() calls). We can choose to do it in a later jira.
* use standard name for get method:   public boolean isUseJSONSerialize() {
* includes unnecessary changes to test results,  1. Will do in a follow-up
 2. will do
 3. All those results have changed - since the plan has changed. There is no extra stuff 
, 2. I am already using a standard name - it was generated by eclipse, resolved conflicts with 136, Committed. Thanks Namit!, I don't think the new Schema object should be in metastore as it is not going to be used by it. There is no corresponding object in metadb. It will be used only by HiveServer so it should be in the thrift interface of HiveServer. Namit and I had a chat about it and he agreed to move it there.
, IMO, HiveServer should return a Table object for the results set instead of this new object., In most cases, HiveServer is called to get information about SELECT queries which dont create tables. Also, these transient query results dont have partitionkeys, bucketcols, sortcols etc. So a Table object seems to be an overkill. 

I do agree that we should support a getTableObject or some such metastore api call which returns the Table object for a table in the warehouse. This call can then be used instead of doing a 'describe extended' query on a table and parsing that blob that gets returned., well, there is get_table() call that returns Table object. You can use that one., Moving discussion to HIVE-604.]