[GitHub user chitin opened a pull request:

    https://github.com/apache/hive/pull/203

    HIVE-17077 Hive should raise StringIndexOutOfBoundsException when LPAD/RPAD len character's value is negative number

    [HIVE-17077] Hive should raise StringIndexOutOfBoundsException when LPAD/RPAD len character's value is negative number
    - return null when len character's value is negative number
    
    https://issues.apache.org/jira/browse/HIVE-17077

You can merge this pull request into a Git repository by running:

    $ git pull https://github.com/chitin/hive hive17077

Alternatively you can review and apply these changes as the patch at:

    https://github.com/apache/hive/pull/203.patch

To close this pull request, make a commit to your master/trunk branch
with (at least) the following in the commit message:

    This closes #203
    
----
commit 8715915839f76f6d60d6b40400d3bb826cbeb8b5
Author: chitin <chitin1027@gmail.com>
Date:   2017-07-12T07:56:47Z

    HIVE-17077 Hive should raise StringIndexOutOfBoundsException when LPAD/RPAD len character's value is negative number
    - Add len judgment logic

----
, CC [~sershe], cc [~ashutoshc] what's the default behavior in Hive for these things? I think throwing a better exception (invalid argument) would be better. But we do return null for some invalid type conversions iirc, General principle in such cases is to throw exception at query compile time if we can detect illegal argument in udf. But to return null if its runtime since there likely it depends on data and we don't fail query for malformed rows.]