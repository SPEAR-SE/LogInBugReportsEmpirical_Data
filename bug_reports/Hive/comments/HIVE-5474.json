[This looks like a test only issue. I tried connecting with beeline in http mode (note: http currently works in auth: NOSASL and does not support doAs), and it works fine. 

In the tests, I'm setting lock manager to embedded, but looks like the test run in the previous test case is not releasing the lock on the table. I tried running TestThriftBinaryCLIService and TestThriftHttpCLIService sequentially using the patch in: [HIVE-4907|https://issues.apache.org/jira/browse/HIVE-4907]. 

However, in my opinion, this should not be a blocker for 0.12., I also tried running TestThriftHttpCLIService and TestThriftBinaryCLIService in isolation and the failure did not happen.
This is a problem caused by state left behind by previous test. I would not consider this to be a blocker for 0.12 release.
, Digging around this one, looks like there may be an issue with the EmbeddedLockManager. The test is trying to run "DROP TABLE test_exec_thrift", and is attempting to acquire the following locks from the EmbeddedLockManager:

[SHARED, default/test_exec_thrift]
[SHARED, default]
[EXCLUSIVE, default/test_exec_thrift]
[SHARED, default]
[SHARED, default]

After EmbeddedLockManager.sortLocks(), the locks are sorted and acquired in this order:
[SHARED, default]
[SHARED, default]
[SHARED, default]
[EXCLUSIVE, default/test_exec_thrift]
[SHARED, default/test_exec_thrift]

The problem is that once the exclusive lock on test_exec_thrift is acquired, the EmbeddedLockManager is unable to get the shared lock on that table.
So I think the fix here is that the lock requests generated by Driver.acquireReadWriteLocks() should be de-duped, so that we fetch either a shared or exclusive lock, not both. Either that, or the lock managers need to be updated to allow multiple locks on the same object to succeed if it's from the same query. But I think the first solution would be more appropriate, and would be more in line with https://cwiki.apache.org/confluence/display/Hive/Locking., Uploading patch v1.  Dedup the locks requested, preferring exclusive locks over shared locks., patch v2 - adds q file test, 

{color:green}Overall{color}: +1 all checks pass

Here are the results of testing the latest attachment:
https://issues.apache.org/jira/secure/attachment/12607918/HIVE-5474.2.patch

{color:green}SUCCESS:{color} +1 4396 tests passed

Test results: https://builds.apache.org/job/PreCommit-HIVE-Build/1110/testReport
Console output: https://builds.apache.org/job/PreCommit-HIVE-Build/1110/console

Messages:
{noformat}
Executing org.apache.hive.ptest.execution.PrepPhase
Executing org.apache.hive.ptest.execution.ExecutionPhase
Executing org.apache.hive.ptest.execution.ReportingPhase
{noformat}

This message is automatically generated., Is it better to change List<HiveLockObj> to Set<HiveLockObj> ?, I don't think a set helps with the de-duping effort, if there is a shared lock request and exclusive lock request we want to make sure that the exclusive lock is the one that is kept. So either way we need extra logic to take care of that., Thats correct.. dedup logic would still be required.. but using set makes the intent clear that we cannot have duplicates which are possible in list., Still disagree here, since the set is not actually helping here - you could insert both [EXCLUSIVE, default/test_exec_thrift] and [SHARED, default/test_exec_thrift] into the set because the two locks wouldn't be considere equivalent to each other.  And we'd have to implement equals() and hashCode(), for something that isn't actually helping. 
Also I think that having a Set here gives the sense that users do not have to worry about handling duplicates themselves, when in fact they do., Makes sense. +1, Committed to trunk. Thanks, Jason!, FAILURE: Integrated in Hive-trunk-hadoop1-ptest #203 (See [https://builds.apache.org/job/Hive-trunk-hadoop1-ptest/203/])
HIVE-5474 : drop table hangs when concurrency=true (Jason Dere via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1531704)
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
* /hive/trunk/ql/src/test/org/apache/hadoop/hive/ql/TestDriver.java
* /hive/trunk/ql/src/test/queries/clientpositive/drop_with_concurrency.q
* /hive/trunk/ql/src/test/results/clientpositive/drop_with_concurrency.q.out
* /hive/trunk/service/src/test/org/apache/hive/service/cli/thrift/ThriftCLIServiceTest.java
, FAILURE: Integrated in Hive-trunk-h0.21 #2398 (See [https://builds.apache.org/job/Hive-trunk-h0.21/2398/])
HIVE-5474 : drop table hangs when concurrency=true (Jason Dere via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1531704)
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
* /hive/trunk/ql/src/test/org/apache/hadoop/hive/ql/TestDriver.java
* /hive/trunk/ql/src/test/queries/clientpositive/drop_with_concurrency.q
* /hive/trunk/ql/src/test/results/clientpositive/drop_with_concurrency.q.out
* /hive/trunk/service/src/test/org/apache/hive/service/cli/thrift/ThriftCLIServiceTest.java
, FAILURE: Integrated in Hive-trunk-hadoop2-ptest #138 (See [https://builds.apache.org/job/Hive-trunk-hadoop2-ptest/138/])
HIVE-5474 : drop table hangs when concurrency=true (Jason Dere via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1531704)
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
* /hive/trunk/ql/src/test/org/apache/hadoop/hive/ql/TestDriver.java
* /hive/trunk/ql/src/test/queries/clientpositive/drop_with_concurrency.q
* /hive/trunk/ql/src/test/results/clientpositive/drop_with_concurrency.q.out
* /hive/trunk/service/src/test/org/apache/hive/service/cli/thrift/ThriftCLIServiceTest.java
, ABORTED: Integrated in Hive-trunk-hadoop2 #500 (See [https://builds.apache.org/job/Hive-trunk-hadoop2/500/])
HIVE-5474 : drop table hangs when concurrency=true (Jason Dere via Ashutosh Chauhan) (hashutosh: http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1531704)
* /hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
* /hive/trunk/ql/src/test/org/apache/hadoop/hive/ql/TestDriver.java
* /hive/trunk/ql/src/test/queries/clientpositive/drop_with_concurrency.q
* /hive/trunk/ql/src/test/results/clientpositive/drop_with_concurrency.q.out
* /hive/trunk/service/src/test/org/apache/hive/service/cli/thrift/ThriftCLIServiceTest.java
]