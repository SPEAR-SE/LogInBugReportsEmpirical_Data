{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "fields": {
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "aggregatetimeestimate": null,
        "aggregatetimeoriginalestimate": null,
        "aggregatetimespent": null,
        "assignee": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Rui Li",
            "key": "lirui",
            "name": "lirui",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lirui",
            "timeZone": "Asia/Shanghai"
        },
        "components": [{
            "description": "Hive on Spark",
            "id": "12323200",
            "name": "Spark",
            "self": "https://issues.apache.org/jira/rest/api/2/component/12323200"
        }],
        "created": "2015-10-06T12:44:37.000+0000",
        "creator": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Zsolt TÃ³th",
            "key": "ztoth",
            "name": "ztoth",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ztoth",
            "timeZone": "Etc/UTC"
        },
        "customfield_10010": null,
        "customfield_12310191": null,
        "customfield_12310192": null,
        "customfield_12310220": "2015-10-06T23:55:40.813+0000",
        "customfield_12310222": "1_*:*_1_*:*_2685453783_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_1_*:*_1237013217",
        "customfield_12310230": null,
        "customfield_12310250": null,
        "customfield_12310290": null,
        "customfield_12310291": null,
        "customfield_12310300": null,
        "customfield_12310310": "9.0",
        "customfield_12310320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12310920": "9223372036854775807",
        "customfield_12310921": null,
        "customfield_12311020": null,
        "customfield_12311024": null,
        "customfield_12311120": null,
        "customfield_12311820": "0|i2mmxr:",
        "customfield_12312022": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "customfield_12312026": null,
        "customfield_12312220": null,
        "customfield_12312320": null,
        "customfield_12312321": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312324": null,
        "customfield_12312325": null,
        "customfield_12312326": null,
        "customfield_12312327": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312330": null,
        "customfield_12312331": null,
        "customfield_12312332": null,
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12312335": null,
        "customfield_12312336": null,
        "customfield_12312337": null,
        "customfield_12312338": null,
        "customfield_12312339": null,
        "customfield_12312340": null,
        "customfield_12312341": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Mar 04 18:23:20 UTC 2016",
        "customfield_12312720": null,
        "customfield_12312823": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "customfield_12312923": null,
        "customfield_12313422": "false",
        "customfield_12313520": null,
        "description": "If I execute the following query in beeline, I get ClassNotFoundException for the UDF class.\n{code}\ndrop function myGenericUdf;\ncreate function myGenericUdf as 'org.example.myGenericUdf' using jar 'hdfs:///tmp/myudf.jar';\nselect distinct myGenericUdf(1,2,1) from mytable;\n{code}\nIn my example, myGenericUdf just looks for the 1st argument's value in the others and returns the index. I don't think this is related to the actual GenericUDF function.\n\nNote that:\n\"select myGenericUdf(1,2,1) from mytable;\" succeeds\nIf I use the non-generic implementation of the same UDF, the select distinct call succeeds.\n\nStackTrace:\n{code}\n15/10/06 05:20:25 ERROR exec.Utilities: Failed to load plan: hdfs://quickstart.cloudera:8020/tmp/hive/hive/f9de3f09-c12d-4528-9ee6-1f12932a14ae/hive_2015-10-06_05-20-07_438_6519207588897968406-20/-mr-10003/27cd7226-3e22-46f4-bddd-fb8fd4aa4b8d/map.xml: org.apache.hive.com.esotericsoftware.kryo.KryoException: Unable to find class: org.example.myGenericUDF\nSerialization trace:\ngenericUDF (org.apache.hadoop.hive.ql.plan.ExprNodeGenericFuncDesc)\nchidren (org.apache.hadoop.hive.ql.plan.ExprNodeGenericFuncDesc)\ncolExprMap (org.apache.hadoop.hive.ql.exec.GroupByOperator)\nchildOperators (org.apache.hadoop.hive.ql.exec.SelectOperator)\nchildOperators (org.apache.hadoop.hive.ql.exec.TableScanOperator)\naliasToWork (org.apache.hadoop.hive.ql.plan.MapWork)\norg.apache.hive.com.esotericsoftware.kryo.KryoException: Unable to find class: org.example.myGenericUDF\nSerialization trace:\ngenericUDF (org.apache.hadoop.hive.ql.plan.ExprNodeGenericFuncDesc)\nchidren (org.apache.hadoop.hive.ql.plan.ExprNodeGenericFuncDesc)\ncolExprMap (org.apache.hadoop.hive.ql.exec.GroupByOperator)\nchildOperators (org.apache.hadoop.hive.ql.exec.SelectOperator)\nchildOperators (org.apache.hadoop.hive.ql.exec.TableScanOperator)\naliasToWork (org.apache.hadoop.hive.ql.plan.MapWork)\n\tat org.apache.hive.com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:138)\n\tat org.apache.hive.com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:115)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:656)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:99)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:776)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:112)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:18)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:776)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.MapSerializer.read(MapSerializer.java:139)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.MapSerializer.read(MapSerializer.java:17)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:776)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:112)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:18)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:776)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:112)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:18)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:776)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.MapSerializer.read(MapSerializer.java:139)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.MapSerializer.read(MapSerializer.java:17)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:672)\n\tat org.apache.hadoop.hive.ql.exec.Utilities.deserializeObjectByKryo(Utilities.java:1069)\n\tat org.apache.hadoop.hive.ql.exec.Utilities.deserializePlan(Utilities.java:960)\n\tat org.apache.hadoop.hive.ql.exec.Utilities.deserializePlan(Utilities.java:974)\n\tat org.apache.hadoop.hive.ql.exec.Utilities.getBaseWork(Utilities.java:416)\n\tat org.apache.hadoop.hive.ql.exec.Utilities.getMapWork(Utilities.java:296)\n\tat org.apache.hadoop.hive.ql.io.HiveInputFormat.init(HiveInputFormat.java:268)\n\tat org.apache.hadoop.hive.ql.io.CombineHiveInputFormat.getSplits(CombineHiveInputFormat.java:505)\n\tat org.apache.spark.rdd.HadoopRDD.getPartitions(HadoopRDD.scala:203)\n\tat org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:219)\n\tat org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:217)\n\tat scala.Option.getOrElse(Option.scala:120)\n\tat org.apache.spark.rdd.RDD.partitions(RDD.scala:217)\n\tat org.apache.spark.rdd.MapPartitionsRDD.getPartitions(MapPartitionsRDD.scala:32)\n\tat org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:219)\n\tat org.apache.spark.rdd.RDD$$anonfun$partitions$2.apply(RDD.scala:217)\n\tat scala.Option.getOrElse(Option.scala:120)\n\tat org.apache.spark.rdd.RDD.partitions(RDD.scala:217)\n\tat org.apache.spark.ShuffleDependency.<init>(Dependency.scala:82)\n\tat org.apache.spark.rdd.ShuffledRDD.getDependencies(ShuffledRDD.scala:80)\n\tat org.apache.spark.rdd.RDD$$anonfun$dependencies$2.apply(RDD.scala:206)\n\tat org.apache.spark.rdd.RDD$$anonfun$dependencies$2.apply(RDD.scala:204)\n\tat scala.Option.getOrElse(Option.scala:120)\n\tat org.apache.spark.rdd.RDD.dependencies(RDD.scala:204)\n\tat org.apache.spark.scheduler.DAGScheduler.visit$2(DAGScheduler.scala:338)\n\tat org.apache.spark.scheduler.DAGScheduler.getAncestorShuffleDependencies(DAGScheduler.scala:355)\n\tat org.apache.spark.scheduler.DAGScheduler.registerShuffleDependencies(DAGScheduler.scala:317)\n\tat org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$getShuffleMapStage(DAGScheduler.scala:218)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$visit$1$1.apply(DAGScheduler.scala:301)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$visit$1$1.apply(DAGScheduler.scala:298)\n\tat scala.collection.immutable.List.foreach(List.scala:318)\n\tat org.apache.spark.scheduler.DAGScheduler.visit$1(DAGScheduler.scala:298)\n\tat org.apache.spark.scheduler.DAGScheduler.getParentStages(DAGScheduler.scala:310)\n\tat org.apache.spark.scheduler.DAGScheduler.newStage(DAGScheduler.scala:244)\n\tat org.apache.spark.scheduler.DAGScheduler.handleJobSubmitted(DAGScheduler.scala:731)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1362)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1354)\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\nCaused by: java.lang.ClassNotFoundException: org.example.myGenericUDF\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:366)\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:355)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:354)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:425)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:358)\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Class.java:270)\n\tat org.apache.hive.com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:136)\n\t... 72 more\n{code}",
        "duedate": null,
        "environment": "Cloudera QuickStart VM - CDH5.4.2\nbeeline",
        "fixVersions": [
            {
                "archived": false,
                "description": "Dev branch for Hive on Spark",
                "id": "12327352",
                "name": "spark-branch",
                "released": false,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12327352"
            },
            {
                "archived": false,
                "id": "12334255",
                "name": "2.1.0",
                "releaseDate": "2016-06-20",
                "released": true,
                "self": "https://issues.apache.org/jira/rest/api/2/version/12334255"
            }
        ],
        "issuelinks": [],
        "issuetype": {
            "avatarId": 21133,
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "id": "1",
            "name": "Bug",
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "subtask": false
        },
        "labels": [],
        "lastViewed": null,
        "priority": {
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "id": "3",
            "name": "Major",
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3"
        },
        "progress": {
            "progress": 0,
            "total": 0
        },
        "project": {
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935",
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935"
            },
            "id": "12310843",
            "key": "HIVE",
            "name": "Hive",
            "projectCategory": {
                "description": "Scalable Distributed Computing",
                "id": "10292",
                "name": "Hadoop",
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10292"
            },
            "self": "https://issues.apache.org/jira/rest/api/2/project/12310843"
        },
        "reporter": {
            "active": true,
            "avatarUrls": {
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452",
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452"
            },
            "displayName": "Zsolt TÃ³th",
            "key": "ztoth",
            "name": "ztoth",
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ztoth",
            "timeZone": "Etc/UTC"
        },
        "resolution": {
            "description": "A fix for this issue is checked into the tree and tested.",
            "id": "1",
            "name": "Fixed",
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1"
        },
        "resolutiondate": "2015-11-20T22:19:04.000+0000",
        "status": {
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "id": "6",
            "name": "Closed",
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "statusCategory": {
                "colorName": "green",
                "id": 3,
                "key": "done",
                "name": "Done",
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3"
            }
        },
        "subtasks": [],
        "summary": "ClassNotFoundException for GenericUDF [Spark Branch]",
        "timeestimate": null,
        "timeoriginalestimate": null,
        "timespent": null,
        "updated": "2016-06-21T15:53:11.000+0000",
        "versions": [],
        "votes": {
            "hasVoted": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-12045/votes",
            "votes": 1
        },
        "watches": {
            "isWatching": false,
            "self": "https://issues.apache.org/jira/rest/api/2/issue/HIVE-12045/watchers",
            "watchCount": 5
        },
        "workratio": -1
    },
    "id": "12902686",
    "key": "HIVE-12045",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12902686"
}