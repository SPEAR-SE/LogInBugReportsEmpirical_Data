{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12733732","self":"https://issues.apache.org/jira/rest/api/2/issue/12733732","key":"HIVE-7711","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2014-08-18T09:10:05.878+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Apr 23 17:39:15 UTC 2015","customfield_12310420":"411760","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-7711/watchers","watchCount":6,"isWatching":false},"created":"2014-08-13T10:50:53.435+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"1.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324986","id":"12324986","description":"released","name":"0.13.0","archived":false,"released":true,"releaseDate":"2014-04-21"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-04-23T17:39:15.514+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[],"timeoriginalestimate":null,"description":"I get an exception running a job with a GenericUDF in HIVE 0.13.0 (which was ok in HIVE 0.12.0).\n\nThe org.apache.hadoop.hive.ql.plan.ExprNodeGenericFuncDesc is serialized using Kryo, trying to serialize stuff in my GenericUDF which is not serializable (doesn't implement Serializable).\n\nSwitching to Kryo made the comment in ExprNodeGenericFuncDesc obsolte:\n\"/**\n   * In case genericUDF is Serializable, we will serialize the object.\n   *\n   * In case genericUDF does not implement Serializable, Java will remember the\n   * class of genericUDF and creates a new instance when deserialized. This is\n   * exactly what we want.\n   */\"\n\nFind the stacktrace below, however, the description above should be clear.\n\n\n\nException in thread \"main\" org.apache.hive.com.esotericsoftware.kryo.KryoException: java.lang.UnsupportedOperationException\nSerialization trace:\nvalue (java.util.concurrent.atomic.AtomicReference)\nstate (clojure.lang.Atom)\nstate (udfs.ArraySum)\ngenericUDF (org.apache.hadoop.hive.ql.plan.ExprNodeGenericFuncDesc)\ncolExprMap (org.apache.hadoop.hive.ql.exec.SelectOperator)\nchildOperators (org.apache.hadoop.hive.ql.exec.TableScanOperator)\naliasToWork (org.apache.hadoop.hive.ql.plan.MapWork)\nmapWork (org.apache.hadoop.hive.ql.plan.MapredWork)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:125)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:776)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.MapSerializer.read(MapSerializer.java:139)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.MapSerializer.read(MapSerializer.java:17)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:776)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:112)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.CollectionSerializer.read(CollectionSerializer.java:18)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:776)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.MapSerializer.read(MapSerializer.java:139)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.MapSerializer.read(MapSerializer.java:17)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:507)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:672)\n\tat org.apache.hadoop.hive.ql.exec.Utilities.deserializeObjectByKryo(Utilities.java:918)\n\tat org.apache.hadoop.hive.ql.exec.Utilities.deserializePlan(Utilities.java:826)\n\tat org.apache.hadoop.hive.ql.exec.Utilities.deserializePlan(Utilities.java:840)\n\tat org.apache.hadoop.hive.ql.exec.mr.ExecDriver.main(ExecDriver.java:738)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.apache.hadoop.util.RunJar.main(RunJar.java:212)\nCaused by: java.lang.UnsupportedOperationException\n\tat clojure.lang.APersistentMap.put(APersistentMap.java:287)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.MapSerializer.read(MapSerializer.java:140)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.MapSerializer.read(MapSerializer.java:17)\n\tat org.apache.hive.com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:694)\n\tat org.apache.hive.com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:106)\n\t... 41 more\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12662458","id":"12662458","filename":"HIVE-7711.1.patch.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=navis","name":"navis","key":"navis","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=navis&avatarId=19885","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=navis&avatarId=19885","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=navis&avatarId=19885","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=navis&avatarId=19885"},"displayName":"Navis","active":true,"timeZone":"Asia/Seoul"},"created":"2014-08-18T09:07:43.024+0000","size":2937,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12662458/HIVE-7711.1.patch.txt"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"411751","customfield_12312823":null,"summary":"Error Serializing GenericUDF","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cbbetz","name":"cbbetz","key":"cbbetz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dr. Christian Betz","active":true,"timeZone":"Europe/Berlin"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cbbetz","name":"cbbetz","key":"cbbetz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dr. Christian Betz","active":true,"timeZone":"Europe/Berlin"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12733732/comment/14096789","id":"14096789","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cbbetz","name":"cbbetz","key":"cbbetz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dr. Christian Betz","active":true,"timeZone":"Europe/Berlin"},"body":"ok, got my UDF to be usable with the config hive.plan.serialization.format=javaXML (after digging through the sourcecode).\n\nI did find the following snippet in https://github.com/apache/hive/blob/branch-0.13/ql/src/java/org/apache/hadoop/hive/ql/exec/Utilities.java, line 934:\n    removeField(kryo, Operator.class, \"colExprMap\");\nwhich is \"missing\"(?) in cloningQueryPlanKryo (lines 947-958).\n\nIMHO, the best solution to this problem would involve adding appropriate serializers to Kryo, e.g. from the https://github.com/magro/kryo-serializers project (not in my case, but just as an example). To use this, one needs to expose the Kryo registry (not so good) or (in order to be thread-safe) extend the registry with self-registered serializers. One way could expose those serializers in GenericUDF::getSerializerMap to be overwritten, mapping classes to serializers. However, this could result in major security issues I'm not yet aware of.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cbbetz","name":"cbbetz","key":"cbbetz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dr. Christian Betz","active":true,"timeZone":"Europe/Berlin"},"created":"2014-08-14T09:32:11.283+0000","updated":"2014-08-14T09:32:11.283+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12733732/comment/14100455","id":"14100455","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=navis","name":"navis","key":"navis","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=navis&avatarId=19885","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=navis&avatarId=19885","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=navis&avatarId=19885","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=navis&avatarId=19885"},"displayName":"Navis","active":true,"timeZone":"Asia/Seoul"},"body":"[~cbbetz] Could you try this with attached patch? Looks like UDFs need some new annotation for kryo serialization.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=navis","name":"navis","key":"navis","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=navis&avatarId=19885","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=navis&avatarId=19885","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=navis&avatarId=19885","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=navis&avatarId=19885"},"displayName":"Navis","active":true,"timeZone":"Asia/Seoul"},"created":"2014-08-18T09:10:05.878+0000","updated":"2014-08-18T09:10:05.878+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12733732/comment/14123099","id":"14123099","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cbbetz","name":"cbbetz","key":"cbbetz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dr. Christian Betz","active":true,"timeZone":"Europe/Berlin"},"body":"Hi,\n\nsorry for answering so late, but I had some other issues to work on more urgently. I really appreciate you fast answer though :)\n\n# I did check sourcecode of hive and kryo (in addition to documentation) and found a solution/workaround: Just providing my own *\"does nothing\"-Serializer* and \"attaching\" it to my GenericUDF-Class using the *@DefaultSerializer* annotation (see https://github.com/EsotericSoftware/kryo#default-serializers) solved the problem.\n\\\\\nI do not have my a code snippet right now to include/attach, but it basically is an implementation of *com.esotericsoftware.kryo.Serializer* where the write method does nothing and the read method returns a new instance of the class given in the third parameter.\n# I reviewed the patch you provided but did not build my own hive version from it. It is basically not a solution to the problem, but emits a warning for a missing serializer. As neither GenericUDF nor my implementation of GenericUDF implement serializable I'm pretty sure I wouldn't see a warning message though. However, the idea of generating a warning message is good. Maybe you could think about implementing the above mentioned \"does-nothing\"-serializer for GenericUDF (and UDF), as that mimics the behaviour of the orignal code before you moved to kryo.\n# I'm totally missing advanced documentation for all of this. I did not find anything about \"GenericUDFs should be serializable\" on the web or in the GenericUDF-source code. I think there should be something on that somewhere, but I leave it up to you to decide on a new issue / subtask for that. However, thanks in advance if you do it ;)\n\nFor me, you could well close that issue as my code is working right now, however I would strongly advise to improve your codebase, your tests, and your documentation on this issue.\n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cbbetz","name":"cbbetz","key":"cbbetz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dr. Christian Betz","active":true,"timeZone":"Europe/Berlin"},"created":"2014-09-05T16:18:57.415+0000","updated":"2014-09-05T16:18:57.415+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12733732/comment/14260777","id":"14260777","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=buryat","name":"buryat","key":"buryat","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vadim Semenov","active":true,"timeZone":"Etc/UTC"},"body":"Faced the same problem, setting `hive.plan.serialization.format=javaXML` helped me, thanks [~cbbetz]\n\nHive-0.13.1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=buryat","name":"buryat","key":"buryat","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vadim Semenov","active":true,"timeZone":"Etc/UTC"},"created":"2014-12-30T04:34:49.205+0000","updated":"2014-12-30T04:34:49.205+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12733732/comment/14509422","id":"14509422","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ankush13","name":"ankush13","key":"ankush13","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ankush","active":true,"timeZone":"Etc/UTC"},"body":"Could you please let me know how i find the kryo version ?\n\nhow i find the kryo version that i using ?\n\nPlease help","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ankush13","name":"ankush13","key":"ankush13","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ankush","active":true,"timeZone":"Etc/UTC"},"created":"2015-04-23T17:39:15.514+0000","updated":"2015-04-23T17:39:15.514+0000"}],"maxResults":5,"total":5,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-7711/votes","votes":3,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1yu6n:"}}