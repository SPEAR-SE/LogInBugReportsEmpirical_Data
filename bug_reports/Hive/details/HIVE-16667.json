{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13072020","self":"https://issues.apache.org/jira/rest/api/2/issue/13072020","key":"HIVE-16667","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12340269","id":"12340269","name":"2.3.0","archived":false,"released":true,"releaseDate":"2017-07-18"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12340268","id":"12340268","name":"3.0.0","archived":false,"released":true,"releaseDate":"2018-05-21"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2017-05-15T18:58:24.277+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed May 23 00:00:20 UTC 2018","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_3_*:*_630147099_*|*_5_*:*_1_*:*_0_*|*_10002_*:*_3_*:*_1602157484","customfield_12312321":null,"resolutiondate":"2017-06-10T09:59:39.380+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-16667/watchers","watchCount":6,"isWatching":false},"created":"2017-05-15T13:54:34.868+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"5.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[{"id":"12503615","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12503615","type":{"id":"12310050","name":"Regression","inward":"is broken by","outward":"breaks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310050"},"inwardIssue":{"id":"12908275","key":"HIVE-12274","self":"https://issues.apache.org/jira/rest/api/2/issue/12908275","fields":{"summary":"Increase width of columns used for general configuration in the metastore.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2018-05-23T00:00:20.903+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"timeoriginalestimate":null,"description":"The CLOB JDO type introduced with HIVE-12274 does not work correctly with PostgreSQL. The value is written out-of-band and the LOB handle is written,as an INT, into the table. SELECTs return the INT value, which should had been read via the {{lo_get}} PG built-in, and then cast into string.\n\nFurthermore, the behavior is different between fields upgraded from earlier metastore versions (they retain their string storage) vs. values inserted after the upgrade (inserted as LOB roots).\n\nTeh code in {{MetasoreDirectSql.getPartitionsFromPartitionIds/extractSqlClob}} expects the underlying JDO/Datanucleus to map the column to a {{Clob}} but that does not happen, the value is a Java String containing the int which is the LOB root saved by PG.\n\nThis manifests at runtime with errors like:\n{code}\nhive> select * from srcpart;\nFailed with exception java.io.IOException:java.lang.IllegalArgumentException: Error: type expected at the position 0 of '24030:24031' but '24030' is found.\n{code}\n\nthe 24030:24031 should be 'string:string'.\n\nrepro:\n\n{code}\nCREATE TABLE srcpart (key STRING COMMENT 'default', value STRING COMMENT 'default') PARTITIONED BY (ds STRING, hr STRING) STORED AS TEXTFILE;\nLOAD DATA LOCAL INPATH \"${hiveconf:test.data.dir}/kv1.txt\" OVERWRITE INTO TABLE srcpart PARTITION (ds=\"2008-04-09\", hr=\"11\");\nselect * from srcpart;\n{code}\n\nI did not see the issue being hit by non-partitioned/textfile tables, but that is just the luck of the path taken by the code. Inspection of my PG metastore shows all the CLOB fields suffering from this issue.","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12871687","id":"12871687","filename":"HIVE-16667.2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-06-06T20:57:34.529+0000","size":2222,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12871687/HIVE-16667.2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12871754","id":"12871754","filename":"HIVE-16667.3.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-06-07T03:28:13.750+0000","size":2098,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12871754/HIVE-16667.3.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12869329","id":"12869329","filename":"HIVE-16667.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-22T20:55:33.289+0000","size":2672,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12869329/HIVE-16667.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12868612","id":"12868612","filename":"HiveCLIOutput.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-17T21:55:04.882+0000","size":100705,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12868612/HiveCLIOutput.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12868613","id":"12868613","filename":"PostgresDBOutput.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-17T21:55:04.888+0000","size":3043,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12868613/PostgresDBOutput.txt"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"PostgreSQL metastore handling of CLOB types for COLUMNS_V2.TYPE_NAME and other field is incorrect","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16011121","id":"16011121","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"body":"[~pxiong] FYI, this looks like a blocker for 2.3.0 release.\n\n[~ngangam] Have you tried similar tests after the changes with postgres ?\n\ncc [~aihuaxu]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-05-15T18:58:24.277+0000","updated":"2017-05-15T18:58:24.277+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16012429","id":"16012429","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aihuaxu","name":"aihuaxu","key":"aihuaxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aihua Xu","active":true,"timeZone":"America/Los_Angeles"},"body":"[~ngangam] Can you take a look? I remember you did the tests against various DBs?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=aihuaxu","name":"aihuaxu","key":"aihuaxu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Aihua Xu","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-05-16T14:00:51.651+0000","updated":"2017-05-16T14:00:51.651+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16012468","id":"16012468","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"I am taking a look. I have run upgrade tests with postgres as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-16T14:20:27.176+0000","updated":"2017-05-16T14:20:27.176+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16012469","id":"16012469","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"The problem will not reproduce on Hive tables that were present at metastore upgrade. It must be a (partitioned?) table, created after the upgrade.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2017-05-16T14:23:18.348+0000","updated":"2017-05-16T14:23:18.348+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16012517","id":"16012517","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"[~rusanu] Could you please post the full stack trace if you still have it? I do not know of these nuanes across these different DBs, so apologize if some of these questions seem obvious.\n\nIn the upgrade script, when we cast the existing String values as text, shouldnt the existing columns values also be treated the same as any new inserts? If not, is there an alternate way of making existing column values be the same format as new values during the upgrade?\n{{alter table \"COLUMNS_V2\" alter column \"TYPE_NAME\" type text using cast(\"TYPE_NAME\" as text);}}\n\nIf the JDO mapping file defines a column as CLOB, wouldnt the column type be of Clob irrespective of the underlying DB? Thanks ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-16T14:57:35.596+0000","updated":"2017-05-16T14:57:35.596+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16012594","id":"16012594","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"[~ngangam] I think the easiest is to set up a local PG metastore, inititalize it with schematool, then run the repro I attached.    \n\nLike you, I would have expected the value to come as Clob, but is String in the debugger.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2017-05-16T15:35:58.721+0000","updated":"2017-05-16T15:35:58.721+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16014175","id":"16014175","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"[~rusanu] I have run some tests with my postgres installation running on {{Linux <snip> 2.6.32-504.16.2.el6.x86_64 #1 SMP Wed Apr 22 06:48:29 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux}} and the CLOB values inserted into the database are inline.\n{code}\nhive1=> \\d \"TABLE_PARAMS\"\n                      Table \"public.TABLE_PARAMS\"\n   Column    |          Type          |            Modifiers            \n-------------+------------------------+---------------------------------\n TBL_ID      | bigint                 | not null\n PARAM_KEY   | character varying(256) | not null\n PARAM_VALUE | text                   | default NULL::character varying\nIndexes:\n    \"TABLE_PARAMS_pkey\" PRIMARY KEY, btree (\"TBL_ID\", \"PARAM_KEY\")\n    \"TABLE_PARAMS_N49\" btree (\"TBL_ID\")\nForeign-key constraints:\n    \"TABLE_PARAMS_TBL_ID_fkey\" FOREIGN KEY (\"TBL_ID\") REFERENCES \"TBLS\"(\"TBL_ID\") DEFERRABLE\n\nhive1=> select \"PARAM_VALUE\" from \"TABLE_PARAMS\";\n1\n true\n 0\n 46055\n 1494964727\n 0\n 1\n 46069\n true\n 1494964728\n 0\n 0\n 1\n true\n 15812\n 1494964729\n 0\n 0\n 1494964729\n STRING,myField2 : STRING, myField3 : STRING, myField4 : STRING, myField5 : STRING, myField6 : STRING, myField7 : STRING, myField8 : STRING, myField9 : STRING, myField10 : STRING, myField11 : STRING, my\nField12 : STRING, myField13 : STRING, myField14 : STRING, myField15 : STRING, myField16 : STRING, myField17 : STRING, myField18 : STRING, myField19 : STRING, myField20 : STRING, myField21 : STRING, myFi\neld22 : STRING, myField23 : STRING, myField24 : STRING, myField25 : STRING, \n{code}\n\nThe last value has been snipped for brevity but it is a long value beyond the prior 4000 character limit. I am not sure why my \"text\" values are inline whereas your values show an integer. Could this be a database config setting? Thanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-17T15:07:40.880+0000","updated":"2017-05-17T15:07:40.880+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16014204","id":"16014204","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"What PG and PG client version do you have?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2017-05-17T15:24:08.604+0000","updated":"2017-05-17T15:24:08.604+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16014224","id":"16014224","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"I am at 8.4.20 for both server and client.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-17T15:34:42.942+0000","updated":"2017-05-17T15:34:42.942+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16014306","id":"16014306","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"the last value reported above for column {{PARAM_VALUE}} is roughly 21k in length. Is your value much larger?\n{code}\nhive1=> select max(length(\"PARAM_VALUE\")) from \"TABLE_PARAMS\";\n  max  \n-------\n 20879\n(1 row)\n\nhive1=> select version();\n                                                      version                                                      \n-------------------------------------------------------------------------------------------------------------------\n PostgreSQL 8.4.20 on x86_64-redhat-linux-gnu, compiled by GCC gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-18), 64-bit\n(1 row)\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-17T16:02:27.548+0000","updated":"2017-05-17T16:02:27.548+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16014370","id":"16014370","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"For me it happens with even tiny strings, like {{INT}}:\n{code}\nmetastore=# select *, CAST(lo_get(CAST(\"TYPE_NAME\" as bigint)) as TEXT) from \"COLUMNS_V2\"  LIMIT 1;\nCD_ID | COMMENT | COLUMN_NAME | TYPE_NAME | INTEGER_IDX |  lo_get\n-------+---------+-------------+-----------+-------------+----------\n     2 |         | customer    | 21664     |           0 | \\x696e74\n{code}\n\nCan you tell me what JDBC Driver do you use? My settings are:\n{code}\n    <property>\n        <name>javax.jdo.option.ConnectionURL</name>\n        <value>jdbc:postgresql://localhost:5432/metastore</value>\n    </property>\n    <property>\n        <name>javax.jdo.option.ConnectionDriverName</name>\n        <value>org.postgresql.Driver</value>\n    </property>\n{code}\nI think the classpath resolves the driver to {{postgresql-9.3-1102-jdbc3.jar}}. The PG server itself is 9.6.2:\n{code}\nrrusanu=# select version();\n                                                    version\n----------------------------------------------------------------------------------------------------------------\n PostgreSQL 9.6.2 on x86_64-apple-darwin15.6.0, compiled by Apple LLVM version 8.0.0 (clang-800.0.42.1), 64-bit\n(1 row)\n{code}\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2017-05-17T16:43:15.790+0000","updated":"2017-05-17T16:43:15.790+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16014383","id":"16014383","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"BTW, to show {{PARAM_VALUE}} value in PG:\n{code}\nmetastore=# select \"PARAM_VALUE\", lo_get(cast(\"PARAM_VALUE\" as INT)) from \"TABLE_PARAMS\" limit 3;\n PARAM_VALUE |         lo_get\n-------------+------------------------\n 21665       | \\x31343934333230383636\n 21742       | \\x30\n 21743       | \\x30\n(3 rows)\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2017-05-17T16:54:10.409+0000","updated":"2017-05-17T16:54:10.409+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16014450","id":"16014450","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"I only have these 2 jars for the driver. It has to be one of them {{postgresql-9.0-801.jdbc4.jar}} and {{postgresql-9.1-901.jdbc4.jar}}. They are exactly the same size, so I am assuming they are the same.\n\n{code}\nhive> CREATE TABLE srcpart (key STRING COMMENT 'default', value STRING COMMENT 'default') PARTITIONED BY (ds STRING, hr STRING) STORED AS TEXTFILE;\nOK\nTime taken: 13.775 seconds\nhive> LOAD DATA LOCAL INPATH \"/Users/ngangam/apache/hive/data/files/kv1.txt\" OVERWRITE INTO TABLE srcpart PARTITION (ds=\"2008-04-09\",hr=\"11\");\nLoading data to table default.srcpart partition (ds=2008-04-09, hr=11)\nOK\nTime taken: 132.365 seconds\nhive> select * from srcpart;\nOK\n238\tval_238\t2008-04-09\t11\n86\tval_86\t2008-04-09\t11\n311\tval_311\t2008-04-09\t11\n27\tval_27\t2008-04-09\t11\n165\tval_165\t2008-04-09\t11\n409\tval_409\t2008-04-09\t11\n....\n200\tval_200\t2008-04-09\t11\n97\tval_97\t2008-04-09\t11\nTime taken: 17.693 seconds, Fetched: 500 row(s)\n{code}\n\nMy hive-site.xml has the following .. should be the same as yours as far as connection params and a driver are concerned. \n{code}\n  <property>\n    <name>javax.jdo.option.ConnectionDriverName</name>\n    <value>org.postgresql.Driver</value>\n  </property>\n  <property>\n    <name>javax.jdo.option.ConnectionUserName</name>\n    <value>hive1</value>\n  </property>\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-17T17:26:22.268+0000","updated":"2017-05-17T17:26:22.268+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16014727","id":"16014727","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"[~rusanu] Thank you for your continued help. \nI dont quite understand the need to use {{lo_get}} on a text column. For me, its working without any transformation. Could you please elaborate? Thanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-17T20:43:48.888+0000","updated":"2017-05-17T20:43:48.888+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16014828","id":"16014828","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"[~rusanu] I created a new database {{apachehive}} as a new user {{apachehive}} within postgres using {{create user apachehive createdb createuser password 'apachehive'; create database apachehive owner apachehive}}. I then installed the hive schema for 3.0.0. \nI can now see that the text columns are storing integers.\n{code}\napachehive=# select * from \"TBLS\";\n TBL_ID | CREATE_TIME | DB_ID | LAST_ACCESS_TIME |  OWNER  | RETENTION | SD_ID |     TBL_NAME     |    TBL_TYPE    | VIEW_EXPANDED_TEXT | VIEW_ORIGINAL_TEXT | IS_REWRITE_ENABLED \n--------+-------------+-------+------------------+---------+-----------+-------+------------------+----------------+--------------------+--------------------+--------------------\n      1 |  1495055598 |     1 |                0 | ngangam |         0 |     1 | srcpart          | MANAGED_TABLE  |                    |                    | f\n      2 |  1495055786 |     1 |                0 | ngangam |         0 |     3 | largeserdeparams | EXTERNAL_TABLE |                    |                    | f\n      3 |  1495055859 |     1 |                0 | ngangam |         0 |     4 | largetblparams   | EXTERNAL_TABLE |                    |                    | f\n(3 rows)\n\napachehive=# select * from \"TABLE_PARAMS\" where \"TBL_ID\"=2;\n TBL_ID |       PARAM_KEY       | PARAM_VALUE \n--------+-----------------------+-------------\n      2 | EXTERNAL              | 24881\n      2 | transient_lastDdlTime | 24880\n(2 rows)\n{code}\n\nHowever, I am able to retrieve the values correctly using both JDO and DirectSQL, without any changes to the code. Please see the results and the hive CLI output in the attached files. I am wondering if somehow your JDO mapping file does NOT reflect this change to CLOB so JDO layer is treating it as a String while the value is CLOB. \n\nWould you be able to retry by starting with a fresh DB and installing just 3.0.0 schema (instead of upgrading from an older hive release)? In my prior tests, I was using an upgraded schema (initially installed hive1.1.0 schema and then upgraded to hive3.0.0 using the upgrade scripts). In that database, the {{text}} values for columns still seem to be stored in-line. I am wondering if this was due to the fact that it was initally a {{character}} type and then converted to {{text}}.\nThanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-17T21:54:05.085+0000","updated":"2017-05-17T21:54:05.085+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16015291","id":"16015291","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"[~ngangam] Thanks! I Can you please run the repro I attached originally?\n{code}\nCREATE TABLE srcpart (key STRING COMMENT 'default', value STRING COMMENT 'default') PARTITIONED BY (ds STRING, hr STRING) STORED AS TEXTFILE;\nLOAD DATA LOCAL INPATH \"${hiveconf:test.data.dir}/kv1.txt\" OVERWRITE INTO TABLE srcpart PARTITION (ds=\"2008-04-09\", hr=\"11\");\nselect * from srcpart;\n{code}\nThere is a reason for this specific repro. If simply look at any CLOB field, like {{TABLE_PARAMS.PARAM_VALUE}}, then this field may well be loaded by JDO, via the ObjectStore. JDO knows how to handle this field appropriately. But my repro triggers a code path which goes through the [MetasoreDirectSql.getPartitionsFromPartitionIds|https://github.com/apache/hive/blob/master/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreDirectSql.java#L787]:\n{code}\n   // Get FieldSchema stuff if any.\n    if (!colss.isEmpty()) {\n      // We are skipping the CDS table here, as it seems to be totally useless.\n      queryText = \"select \\\"CD_ID\\\", \\\"COMMENT\\\", \\\"COLUMN_NAME\\\", \\\"TYPE_NAME\\\"\"\n          + \" from \\\"COLUMNS_V2\\\" where \\\"CD_ID\\\" in (\" + colIds + \") and \\\"INTEGER_IDX\\\" >= 0\"\n          + \" order by \\\"CD_ID\\\" asc, \\\"INTEGER_IDX\\\" asc\";\n      loopJoinOrderedResult(colss, queryText, 0, new ApplyFunc<List<FieldSchema>>() {\n        @Override\n        public void apply(List<FieldSchema> t, Object[] fields) {\n          t.add(new FieldSchema((String)fields[2], extractSqlClob(fields[3]), (String)fields[1]));\n        }});\n    }\n{code}\nThis particular code is the one I'm reporting the problem on. For me, this does not handle Clobs appropriately and reads the lob handle value instead of the lob content.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2017-05-18T06:38:12.436+0000","updated":"2017-05-18T06:39:33.536+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16015729","id":"16015729","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"[~rusanu] I did run the exact repro you provided. Thats the first test in the attached HiveCLIOutput.txt file.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-18T13:19:56.827+0000","updated":"2017-05-18T13:19:56.827+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16015775","id":"16015775","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"Can you confirm with a debugger that that line is being executed? I want to figure out whether is a different Hive setting that causes this code not to run in your case, or the line is being executed but behave differently (loads the lobs as strings), which would point toward a difference in Env/PG/JDO/Driver.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2017-05-18T13:51:09.023+0000","updated":"2017-05-18T13:51:09.023+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16015780","id":"16015780","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"I will use a standalone JDBC client to be able to play around with this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-18T13:55:45.073+0000","updated":"2017-05-18T13:55:45.073+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16015947","id":"16015947","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"I am able to reproduce the issue now. Nothing has changed since last night except I rebuilt the product from scratch this morning. So the HiveConf changes for it to use DirectSQL might not have picked up last night.\n\n{code}\nhive> CREATE TABLE srcpart (key STRING COMMENT 'default', value STRING COMMENT 'default') PARTITIONED BY (ds STRING, hr STRING) STORED AS TEXTFILE;\nOK\nTime taken: 11.637 seconds\nhive> LOAD DATA LOCAL INPATH \"/Users/ngangam/THIRD/apache/hive/data/files/kv1.txt\" OVERWRITE INTO TABLE srcpart PARTITION (ds=\"2008-04-09\",hr=\"11\");\nLoading data to table default.srcpart partition (ds=2008-04-09, hr=11)\nOK\nTime taken: 132.753 seconds\nhive> select * from srcpart;\nOK\nFailed with exception java.io.IOException:java.lang.IllegalArgumentException: Error: type expected at the position 0 of '25200:25201' but '25200' is found.\nTime taken: 24.4 seconds\nhive> \n{code}\n\nLet me debug thru this and see if I can come up with a fix. So from ur experience, how do we determine if text is being stored in-line or out-of-line by the database?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-18T15:29:06.308+0000","updated":"2017-05-18T15:29:06.308+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16015957","id":"16015957","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"While debugging this I found that there is a relevant JDO driver setting: {{DatastoreAdapter.CLOB_SET_USING_SETSTRING}}, that controls this, see [ClobRDBMSMapping.setString|https://github.com/datanucleus/datanucleus-rdbms/blob/master/src/main/java/org/datanucleus/store/rdbms/mapping/datastore/ClobRDBMSMapping.java#L60]:\n{code}\n    public void setString(PreparedStatement ps, int param, String value)\n    {\n        if (getDatastoreAdapter().supportsOption(DatastoreAdapter.CLOB_SET_USING_SETSTRING))\n        {\n            super.setString(ps, param ,value);\n        }\n        else\n        {\n            setObject(ps, param, value);\n        }\n    }\n...\n    public String getString(ResultSet rs, int param)\n    {\n        if (getDatastoreAdapter().supportsOption(DatastoreAdapter.CLOB_SET_USING_SETSTRING))\n        {\n            return super.getString(rs, param);\n        }\n        return (String) getObject(rs, param);\n    }\n{code}\n\nHowever, I could not find any way to *configure* this. It is pre-set for [MySQL Adapter|https://github.com/datanucleus/datanucleus-rdbms/blob/master/src/main/java/org/datanucleus/store/rdbms/adapter/MySQLAdapter.java#L119], but not for PG. I don't know if the connection URL/string can somehow set this preference/setting. My experience with Datanucleus is rather limited.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2017-05-18T15:41:10.631+0000","updated":"2017-05-18T15:41:10.631+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16017812","id":"16017812","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"I have tried a couple of means to force PosgresSQL to store the values inline instead of TOASTed values via OIDs.  According to their documentation, setting storage to {{PLAIN || MAIN}} should force the DB to store them in-line.\n\n{code}\nThe TOAST code recognizes four different strategies for storing TOAST-able columns:\nPLAIN prevents either compression or out-of-line storage; furthermore it disables use of single-byte headers for varlena types. This is the only possible strategy for columns of non-TOAST-able data types.\n\nEXTENDED allows both compression and out-of-line storage. This is the default for most TOAST-able data types. Compression will be attempted first, then out-of-line storage if the row is still too big.\n\nEXTERNAL allows out-of-line storage but not compression. Use of EXTERNAL will make substring operations on wide text and bytea columns faster (at the penalty of increased storage space) because these operations are optimized to fetch only the required parts of the out-of-line value when it is not compressed.\n\nMAIN allows compression but not out-of-line storage. (Actually, out-of-line storage will still be performed for such columns, but only as a last resort when there is no other way to make the row small enough.)\n{code}\nEven with either of the setting, I cannot get it to store these values in-line.\n\nI am still researching .. based on a hint in a usergroups, I found this\n{code}\nselect * from \"COLUMNS_V2\";\nCD_ID | COMMENT | COLUMN_NAME | TYPE_NAME | INTEGER_IDX \n-------+---------+-------------+-----------+-------------\n    1 | default | key        | 27118    |          0\n    1 | default | value      | 27119    |          1\n(2 rows)\n\nselect \"CD_ID\", \"COMMENT\", \"COLUMN_NAME\", convert_from(loread(lo_open(\"TYPE_NAME\"::int, x'40000'::int), x'40000'::int),  'UTF8') as \"TYPE_NAME\" from \"COLUMNS_V2\" where \"CD_ID\" in (1) and \"INTEGER_IDX\" >= 0 order by \"CD_ID\" asc, \"INTEGER_IDX\" asc;\nCD_ID | COMMENT | COLUMN_NAME | TYPE_NAME \n-------+---------+-------------+-----------\n    1 | default | key        | string\n    1 | default | value      | string\n{code}\n\nWhile the above conversion works fine in native client, the same does not work via hive/JDO. However, the overall request to getPartitions succeeds because it falls back to using datanucleus when DirectSQL fails.\n\n{{2017-05-19T11:24:46,604  WARN [pool-7-thread-2] metastore.MetaStoreDirectSql: Getting partitions:query=select \"CD_ID\", \"COMMENT\", \"COLUMN_NAME\", convert_from(loread(lo_open(\"TYPE_NAME\"::int, x'40000'::int), x'40000'::int),  'UTF8') as \"TYPE_NAME\" from \"COLUMNS_V2\" where \"CD_ID\" in (1) and \"INTEGER_IDX\" >= 0 order by \"CD_ID\" asc, \"INTEGER_IDX\" asc\n\n2017-05-19T11:24:46,605  WARN [pool-7-thread-2] metastore.ObjectStore: Falling back to ORM path due to direct SQL failure (this is not an error): SQL query \"select \"CD_ID\", \"COMMENT\", \"COLUMN_NAME\", convert_from(loread(lo_open(\"TYPE_NAME\"::int, x'40000'::int), x'40000'::int),  'UTF8') as \"TYPE_NAME\" from \"COLUMNS_V2\" where \"CD_ID\" in (1) and \"INTEGER_IDX\" >= 0 order by \"CD_ID\" asc, \"INTEGER_IDX\" asc\" requires 3 parameters yet none have been supplied at org.datanucleus.api.jdo.NucleusJDOHelper.getJDOExceptionForNucleusException(NucleusJDOHelper.java:636) at }}\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-19T18:37:50.297+0000","updated":"2017-05-19T18:37:50.297+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16017815","id":"16017815","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"I have looked thru the code to see if there is a way to set {{CLOB_SET_USING_SETSTRING}}. There is no API to add to {{supportedOptions}} list. and like you said it is only enabled for MySQL.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-19T18:40:11.976+0000","updated":"2017-05-19T18:40:11.976+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16019988","id":"16019988","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"[~rusanu] I have tried a couple of means to change the query in direct sql to get it to read thru the {{text}} columns. They work via native postgresql client {{psql}} but fail via JDO. I have also tried to alter the table definition to force in-line storage of the column {{plain || main}} value but it seems to have no impact on how it is actually persisted. This is going to need a bit more research.\n\nUnblocking the release is now a priority. Until we can figure out a proper solution, we can fix it so that extractSqlClob throws an exception if the value is not clob type and that should get it to retry using ORM. I have test this fix locally and seems to be working. Thoughts?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-22T18:36:08.735+0000","updated":"2017-05-22T18:36:08.735+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16020185","id":"16020185","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"Attaching a patch that would allow the fallback to ORM for Clob datatypes, so the pre-commits gets run to ensure there are no test failures. This should unblock the release.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-05-22T20:55:33.295+0000","updated":"2017-05-22T20:55:33.295+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16020285","id":"16020285","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"\n\nHere are the results of testing the latest attachment:\nhttps://issues.apache.org/jira/secure/attachment/12869329/HIVE-16667.patch\n\n{color:red}ERROR:{color} -1 due to no test(s) being added or modified.\n\n{color:green}SUCCESS:{color} +1 due to 10742 tests passed\n\nTest results: https://builds.apache.org/job/PreCommit-HIVE-Build/5386/testReport\nConsole output: https://builds.apache.org/job/PreCommit-HIVE-Build/5386/console\nTest logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-5386/\n\nMessages:\n{noformat}\nExecuting org.apache.hive.ptest.execution.TestCheckPhase\nExecuting org.apache.hive.ptest.execution.PrepPhase\nExecuting org.apache.hive.ptest.execution.ExecutionPhase\nExecuting org.apache.hive.ptest.execution.ReportingPhase\n{noformat}\n\nThis message is automatically generated.\n\nATTACHMENT ID: 12869329 - PreCommit-HIVE-Build","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2017-05-22T22:14:41.077+0000","updated":"2017-05-22T22:14:41.077+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16020759","id":"16020759","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"I don't see how your patch will address the problem of mixing  pre v3.0 upgraded tables and post v.30 created one. the new ones will store the {{TYPE_NAME}} as a LOB handle, while the upgraded ones will have the inlined string value.\n\nCan we explore instead reverting the column type mapping to {{VARCHAR}} in the package.jdo, (or {{LONGVARCHAR}} if need be) instead of {{CLOB}}? Keep the metastore upgrade scripts, change the underlying storage tyopes to respective large types, but have JDO map them to String, not Clob. On my testing with PG, this works correctly on all cases I tested (my repro, your large serde DDL from HIVE-12274), and should handle upgrade correctly. But I did not test this with other metastore engines, Oracle, MySQL etc.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2017-05-23T07:28:23.988+0000","updated":"2017-05-23T07:28:23.988+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16039623","id":"16039623","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"[~rusanu] I have had a chance to test with VARCHAR in the JDO mappings file with Oracle, Postgres and Derby. Seems to be working without any issues.\nI am uploading the patch with the changes. Could you please review it when you get a chance? Thanks\n\n{code}\n2017-06-06T15:50:41,716 DEBUG [pool-7-thread-4] metastore.MetaStoreDirectSql: Direct SQL query in 280.51028ms + 0.084425ms, the query is [select \"PARTITIONS\".\"PART_ID\" from \"PARTITIONS\"  inner join \"TBLS\" on \"PARTITIONS\".\"TBL_ID\" = \"TBLS\".\"TBL_ID\"     and \"TBLS\".\"TBL_NAME\" = ?   inner join \"DBS\" on \"TBLS\".\"DB_ID\" = \"DBS\".\"DB_ID\"      and \"DBS\".\"NAME\" = ? ]\n2017-06-06T15:50:41,858 DEBUG [pool-7-thread-4] metastore.MetaStoreDirectSql: Direct SQL query in 141.674264ms + 0.379869ms, the query is [select \"PARTITIONS\".\"PART_ID\", \"SDS\".\"SD_ID\", \"SDS\".\"CD_ID\", \"SERDES\".\"SERDE_ID\", \"PARTITIONS\".\"CREATE_TIME\", \"PARTITIONS\".\"LAST_ACCESS_TIME\", \"SDS\".\"INPUT_FORMAT\", \"SDS\".\"IS_COMPRESSED\", \"SDS\".\"IS_STOREDASSUBDIRECTORIES\", \"SDS\".\"LOCATION\", \"SDS\".\"NUM_BUCKETS\", \"SDS\".\"OUTPUT_FORMAT\", \"SERDES\".\"NAME\", \"SERDES\".\"SLIB\" from \"PARTITIONS\"  left outer join \"SDS\" on \"PARTITIONS\".\"SD_ID\" = \"SDS\".\"SD_ID\"   left outer join \"SERDES\" on \"SDS\".\"SERDE_ID\" = \"SERDES\".\"SERDE_ID\" where \"PART_ID\" in (1) order by \"PART_NAME\" asc]\n2017-06-06T15:50:42,002 DEBUG [pool-7-thread-4] metastore.MetaStoreDirectSql: Direct SQL query in 142.592725ms + 0.294649ms, the query is [select \"PART_ID\", \"PARAM_KEY\", \"PARAM_VALUE\" from \"PARTITION_PARAMS\" where \"PART_ID\" in (1) and \"PARAM_KEY\" is not null order by \"PART_ID\" asc]\n2017-06-06T15:50:42,142 DEBUG [pool-7-thread-4] metastore.MetaStoreDirectSql: Direct SQL query in 139.308419ms + 0.229592ms, the query is [select \"PART_ID\", \"PART_KEY_VAL\" from \"PARTITION_KEY_VALS\" where \"PART_ID\" in (1) and \"INTEGER_IDX\" >= 0 order by \"PART_ID\" asc, \"INTEGER_IDX\" asc]\n2017-06-06T15:50:42,281 DEBUG [pool-7-thread-4] metastore.MetaStoreDirectSql: Direct SQL query in 139.136081ms + 0.092378ms, the query is [select \"SD_ID\", \"PARAM_KEY\", \"PARAM_VALUE\" from \"SD_PARAMS\" where \"SD_ID\" in (2) and \"PARAM_KEY\" is not null order by \"SD_ID\" asc]\n2017-06-06T15:50:42,423 DEBUG [pool-7-thread-4] metastore.MetaStoreDirectSql: Direct SQL query in 141.601391ms + 0.08076ms, the query is [select \"SD_ID\", \"COLUMN_NAME\", \"SORT_COLS\".\"ORDER\" from \"SORT_COLS\" where \"SD_ID\" in (2) and \"INTEGER_IDX\" >= 0 order by \"SD_ID\" asc, \"INTEGER_IDX\" asc]\n2017-06-06T15:50:42,564 DEBUG [pool-7-thread-4] metastore.MetaStoreDirectSql: Direct SQL query in 140.216113ms + 0.114448ms, the query is [select \"SD_ID\", \"BUCKET_COL_NAME\" from \"BUCKETING_COLS\" where \"SD_ID\" in (2) and \"INTEGER_IDX\" >= 0 order by \"SD_ID\" asc, \"INTEGER_IDX\" asc]\n2017-06-06T15:50:42,703 DEBUG [pool-7-thread-4] metastore.MetaStoreDirectSql: Direct SQL query in 139.086542ms + 0.094296ms, the query is [select \"SD_ID\", \"SKEWED_COL_NAME\" from \"SKEWED_COL_NAMES\" where \"SD_ID\" in (2) and \"INTEGER_IDX\" >= 0 order by \"SD_ID\" asc, \"INTEGER_IDX\" asc]\n2017-06-06T15:50:42,847 DEBUG [pool-7-thread-4] metastore.MetaStoreDirectSql: Direct SQL query in 142.786353ms + 0.433393ms, the query is [select \"CD_ID\", \"COMMENT\", \"COLUMN_NAME\", \"TYPE_NAME\" from \"COLUMNS_V2\" where \"CD_ID\" in (1) and \"INTEGER_IDX\" >= 0 order by \"CD_ID\" asc, \"INTEGER_IDX\" asc]\n2017-06-06T15:50:42,990 DEBUG [pool-7-thread-4] metastore.MetaStoreDirectSql: Direct SQL query in 142.115654m\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-06-06T20:56:53.723+0000","updated":"2017-06-06T20:56:53.723+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16039922","id":"16039922","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"\n\nHere are the results of testing the latest attachment:\nhttps://issues.apache.org/jira/secure/attachment/12871687/HIVE-16667.2.patch\n\n{color:red}ERROR:{color} -1 due to no test(s) being added or modified.\n\n{color:red}ERROR:{color} -1 due to 264 failed/errored test(s), 6622 tests executed\n*Failed tests:*\n{noformat}\norg.apache.hadoop.hive.cli.TestAccumuloCliDriver.testCliDriver[accumulo_index] (batchId=228)\norg.apache.hadoop.hive.cli.TestBeeLineDriver.testCliDriver[create_merge_compressed] (batchId=237)\norg.apache.hadoop.hive.cli.TestBeeLineDriver.testCliDriver[insert_overwrite_local_directory_1] (batchId=237)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=1)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=10)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=11)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=12)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=13)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=14)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=15)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=16)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=17)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=18)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=19)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=2)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=20)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=21)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=22)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=23)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=24)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=25)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=26)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=27)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=28)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=29)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=3)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=30)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=31)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=32)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=33)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=34)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=35)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=36)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=37)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=38)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=39)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=4)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=40)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=41)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=42)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=43)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=44)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=45)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=46)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=47)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=48)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=49)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=5)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=50)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=51)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=52)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=53)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=54)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=55)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=56)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=57)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=58)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=59)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=6)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=60)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=61)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=62)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=63)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=64)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=65)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=66)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=67)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=68)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=69)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=7)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=70)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=71)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=72)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=73)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=74)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=75)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=76)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=77)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=78)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=79)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=8)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=80)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=81)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=82)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=83)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=84)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=85)\norg.apache.hadoop.hive.cli.TestCliDriver.org.apache.hadoop.hive.cli.TestCliDriver (batchId=9)\norg.apache.hadoop.hive.cli.TestCompareCliDriver.org.apache.hadoop.hive.cli.TestCompareCliDriver (batchId=233)\norg.apache.hadoop.hive.cli.TestContribCliDriver.testCliDriver[serde_s3] (batchId=231)\norg.apache.hadoop.hive.cli.TestContribNegativeCliDriver.org.apache.hadoop.hive.cli.TestContribNegativeCliDriver (batchId=234)\norg.apache.hadoop.hive.cli.TestMiniLlapCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapCliDriver (batchId=139)\norg.apache.hadoop.hive.cli.TestMiniLlapCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapCliDriver (batchId=140)\norg.apache.hadoop.hive.cli.TestMiniLlapCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapCliDriver (batchId=141)\norg.apache.hadoop.hive.cli.TestMiniLlapCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapCliDriver (batchId=142)\norg.apache.hadoop.hive.cli.TestMiniLlapCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapCliDriver (batchId=143)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=144)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=145)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=146)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=147)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=148)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=149)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=150)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=151)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=152)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=153)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=154)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=155)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=156)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=157)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=158)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=159)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=160)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.org.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver (batchId=161)\norg.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver (batchId=167)\norg.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver (batchId=168)\norg.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver.org.apache.hadoop.hive.cli.TestMiniSparkOnYarnCliDriver (batchId=169)\norg.apache.hadoop.hive.cli.TestMiniTezCliDriver.org.apache.hadoop.hive.cli.TestMiniTezCliDriver (batchId=98)\norg.apache.hadoop.hive.cli.TestMiniTezCliDriver.org.apache.hadoop.hive.cli.TestMiniTezCliDriver (batchId=99)\norg.apache.hadoop.hive.cli.TestNegativeCliDriver.org.apache.hadoop.hive.cli.TestNegativeCliDriver (batchId=88)\norg.apache.hadoop.hive.cli.TestNegativeCliDriver.org.apache.hadoop.hive.cli.TestNegativeCliDriver (batchId=89)\norg.apache.hadoop.hive.cli.TestNegativeCliDriver.org.apache.hadoop.hive.cli.TestNegativeCliDriver (batchId=90)\norg.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=232)\norg.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query78] (batchId=232)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=100)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=101)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=102)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=103)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=104)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=105)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=106)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=107)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=108)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=109)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=110)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=111)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=112)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=113)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=114)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=115)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=116)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=117)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=118)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=119)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=120)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=121)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=122)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=123)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=124)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=125)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=126)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=127)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=128)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=129)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=130)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=131)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=132)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=133)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=134)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=135)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=136)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=137)\norg.apache.hadoop.hive.cli.TestSparkCliDriver.org.apache.hadoop.hive.cli.TestSparkCliDriver (batchId=138)\norg.apache.hadoop.hive.cli.TestSparkNegativeCliDriver.org.apache.hadoop.hive.cli.TestSparkNegativeCliDriver (batchId=239)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[ambiguous_join_col] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[duplicate_alias] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[garbage] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[insert_wrong_number_columns] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[invalid_create_table] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[invalid_dot] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[invalid_function_param2] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[invalid_index] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[invalid_select] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[macro_reserved_word] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[missing_overwrite] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[nonkey_groupby] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[quoted_string] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_column1] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_column2] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_column3] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_column4] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_column5] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_column6] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_function1] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_function2] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_function3] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_function4] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_table1] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[unknown_table2] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[wrong_distinct1] (batchId=236)\norg.apache.hadoop.hive.ql.parse.TestParseNegativeDriver.testCliDriver[wrong_distinct2] (batchId=236)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testColumnarStorePushdown (batchId=180)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testColumnarStorePushdown2 (batchId=180)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testConvertBooleanToInt (batchId=180)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testDatePartitionPushUp (batchId=180)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testGetInputBytes (batchId=180)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testProjectionsBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testReadDataBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testReadDataPrimitiveTypes (batchId=180)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testReadMissingPartitionBasicNeg (batchId=180)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testReadPartitionedBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testSchemaLoadBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testSchemaLoadComplex (batchId=180)\norg.apache.hive.hcatalog.pig.TestAvroHCatLoader.testSchemaLoadPrimitiveTypes (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testColumnarStorePushdown (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testColumnarStorePushdown2 (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testConvertBooleanToInt (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testDatePartitionPushUp (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testGetInputBytes (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testProjectionsBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testReadDataBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testReadDataPrimitiveTypes (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testReadMissingPartitionBasicNeg (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testReadPartitionedBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testSchemaLoadBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testSchemaLoadComplex (batchId=180)\norg.apache.hive.hcatalog.pig.TestOrcHCatLoader.testSchemaLoadPrimitiveTypes (batchId=180)\norg.apache.hive.hcatalog.pig.TestParquetHCatLoader.testColumnarStorePushdown (batchId=180)\norg.apache.hive.hcatalog.pig.TestParquetHCatLoader.testConvertBooleanToInt (batchId=180)\norg.apache.hive.hcatalog.pig.TestParquetHCatLoader.testGetInputBytes (batchId=180)\norg.apache.hive.hcatalog.pig.TestParquetHCatLoader.testReadDataPrimitiveTypes (batchId=180)\norg.apache.hive.hcatalog.pig.TestParquetHCatLoader.testSchemaLoadBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestParquetHCatLoader.testSchemaLoadComplex (batchId=180)\norg.apache.hive.hcatalog.pig.TestParquetHCatLoader.testSchemaLoadPrimitiveTypes (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testColumnarStorePushdown (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testColumnarStorePushdown2 (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testConvertBooleanToInt (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testDatePartitionPushUp (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testGetInputBytes (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testProjectionsBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testReadDataBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testReadDataPrimitiveTypes (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testReadMissingPartitionBasicNeg (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testReadPartitionedBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testSchemaLoadBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testSchemaLoadComplex (batchId=180)\norg.apache.hive.hcatalog.pig.TestRCFileHCatLoader.testSchemaLoadPrimitiveTypes (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testColumnarStorePushdown (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testColumnarStorePushdown2 (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testConvertBooleanToInt (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testDatePartitionPushUp (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testGetInputBytes (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testProjectionsBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testReadDataBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testReadDataPrimitiveTypes (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testReadMissingPartitionBasicNeg (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testReadPartitionedBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testSchemaLoadBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testSchemaLoadComplex (batchId=180)\norg.apache.hive.hcatalog.pig.TestSequenceFileHCatLoader.testSchemaLoadPrimitiveTypes (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testColumnarStorePushdown (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testColumnarStorePushdown2 (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testConvertBooleanToInt (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testDatePartitionPushUp (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testGetInputBytes (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testProjectionsBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testReadDataBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testReadDataPrimitiveTypes (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testReadMissingPartitionBasicNeg (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testReadPartitionedBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testSchemaLoadBasic (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testSchemaLoadComplex (batchId=180)\norg.apache.hive.hcatalog.pig.TestTextFileHCatLoader.testSchemaLoadPrimitiveTypes (batchId=180)\norg.apache.hive.jdbc.TestJdbcWithMiniLlap.testDataTypes (batchId=226)\n{noformat}\n\nTest results: https://builds.apache.org/job/PreCommit-HIVE-Build/5555/testReport\nConsole output: https://builds.apache.org/job/PreCommit-HIVE-Build/5555/console\nTest logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-5555/\n\nMessages:\n{noformat}\nExecuting org.apache.hive.ptest.execution.TestCheckPhase\nExecuting org.apache.hive.ptest.execution.PrepPhase\nExecuting org.apache.hive.ptest.execution.ExecutionPhase\nExecuting org.apache.hive.ptest.execution.ReportingPhase\nTests exited with: TestsFailedException: 264 tests failed\n{noformat}\n\nThis message is automatically generated.\n\nATTACHMENT ID: 12871687 - PreCommit-HIVE-Build","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2017-06-07T00:34:38.504+0000","updated":"2017-06-07T00:34:38.504+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16040097","id":"16040097","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"The unit test failures are related to the patch. I had not specified VARCHAR length in the mapping hoping the datanucleus would map it max length permitted for {{java.lang.String}}. Based on the error message in the test failures {{Caused by: java.sql.SQLDataException: A truncation error was encountered trying to shrink VARCHAR '{\"BASIC_STATS\":\"true\",\"COLUMN_STATS\":{\"c_bigint\":\"true\",\"c_b&' to length 255}}\nit appears that it is attempting to limit to 255 which is too short. I then tried testing with max length which also caused problems with DERBY as it has a checks the lengh\nhttps://fossies.org/dox/db-derby-10.13.1.1-src/interfaceorg_1_1apache_1_1derby_1_1iapi_1_1reference_1_1Limits.html#a4e223303a7751ae27dfdd8e62e993588\n\nSo for I think we are kinda limited to ~32k for max value. As this is an improvement compared to where we were at and only a limitation for derby, we should use this value for this release and fix the postgres issue in the next release.\n\nI am uploading a patch with a length in the JDO mapping file. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-06-07T03:27:35.420+0000","updated":"2017-06-07T03:27:35.420+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16040454","id":"16040454","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"\n\nHere are the results of testing the latest attachment:\nhttps://issues.apache.org/jira/secure/attachment/12871754/HIVE-16667.3.patch\n\n{color:red}ERROR:{color} -1 due to no test(s) being added or modified.\n\n{color:red}ERROR:{color} -1 due to 5 failed/errored test(s), 10820 tests executed\n*Failed tests:*\n{noformat}\norg.apache.hadoop.hive.cli.TestBeeLineDriver.testCliDriver[insert_overwrite_local_directory_1] (batchId=237)\norg.apache.hadoop.hive.cli.TestMiniLlapCliDriver.testCliDriver[orc_ppd_basic] (batchId=140)\norg.apache.hadoop.hive.cli.TestMiniLlapLocalCliDriver.testCliDriver[vector_if_expr] (batchId=145)\norg.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query14] (batchId=232)\norg.apache.hadoop.hive.cli.TestPerfCliDriver.testCliDriver[query78] (batchId=232)\n{noformat}\n\nTest results: https://builds.apache.org/job/PreCommit-HIVE-Build/5563/testReport\nConsole output: https://builds.apache.org/job/PreCommit-HIVE-Build/5563/console\nTest logs: http://104.198.109.242/logs/PreCommit-HIVE-Build-5563/\n\nMessages:\n{noformat}\nExecuting org.apache.hive.ptest.execution.TestCheckPhase\nExecuting org.apache.hive.ptest.execution.PrepPhase\nExecuting org.apache.hive.ptest.execution.ExecutionPhase\nExecuting org.apache.hive.ptest.execution.ReportingPhase\nTests exited with: TestsFailedException: 5 tests failed\n{noformat}\n\nThis message is automatically generated.\n\nATTACHMENT ID: 12871754 - PreCommit-HIVE-Build","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2017-06-07T08:03:26.560+0000","updated":"2017-06-07T08:03:26.560+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16041374","id":"16041374","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"These failures do not appear to be related to the patch. The prior build also has these failures. [~rusanu] Could you please review the patch when you get a chance? Thanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-06-07T18:26:13.890+0000","updated":"2017-06-07T18:26:13.890+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16041390","id":"16041390","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"LGTM\n\n+1\n\nThanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2017-06-07T18:37:26.904+0000","updated":"2017-06-07T18:37:26.904+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16045481","id":"16045481","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"body":"Fixed with https://git1-us-west.apache.org/repos/asf?p=hive.git;a=commit;h=5861b6af52839794c18f5aa686c24aabdb737b93\n\nNote that any PostgreSQL metastore DB created between {{b3462503ec6cc6aebb375c30d9295e59411a4ea7}} and {{5861b6af52839794c18f5aa686c24aabdb737b93}} will have to be recreated as it contains invalid values (IDs). ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rusanu","name":"rusanu","key":"rusanu","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rusanu&avatarId=16791","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rusanu&avatarId=16791","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rusanu&avatarId=16791","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rusanu&avatarId=16791"},"displayName":"Remus Rusanu","active":true,"timeZone":"Europe/Bucharest"},"created":"2017-06-10T09:59:39.432+0000","updated":"2017-06-10T09:59:39.432+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16045845","id":"16045845","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftylev","name":"leftylev","key":"lefty@hortonworks.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lefty%40hortonworks.com&avatarId=15906","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lefty%40hortonworks.com&avatarId=15906","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lefty%40hortonworks.com&avatarId=15906","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lefty%40hortonworks.com&avatarId=15906"},"displayName":"Lefty Leverenz","active":true,"timeZone":"America/New_York"},"body":"[~ngangam], you committed this to branch-2.3 as well as master, so the fix version should include 2.3.0.  (Are you also going to commit it to branch-2 for 2.4.0+?)\n\nSee commit 8563794b4e7f4175773a70af4145032dfcc6454e.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftylev","name":"leftylev","key":"lefty@hortonworks.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lefty%40hortonworks.com&avatarId=15906","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lefty%40hortonworks.com&avatarId=15906","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lefty%40hortonworks.com&avatarId=15906","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lefty%40hortonworks.com&avatarId=15906"},"displayName":"Lefty Leverenz","active":true,"timeZone":"America/New_York"},"created":"2017-06-11T06:02:42.198+0000","updated":"2017-06-11T06:02:42.198+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16046583","id":"16046583","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"body":"[~leftylev] I intend to commit this to branch-2 as well for 2.3. I have seeing build issues with branch-2 which I have been able to resolve. I will commit it today. Thanks","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ngangam","name":"ngangam","key":"ngangam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Naveen Gangam","active":true,"timeZone":"America/New_York"},"created":"2017-06-12T13:53:47.661+0000","updated":"2017-06-12T13:53:47.661+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16047444","id":"16047444","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftylev","name":"leftylev","key":"lefty@hortonworks.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lefty%40hortonworks.com&avatarId=15906","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lefty%40hortonworks.com&avatarId=15906","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lefty%40hortonworks.com&avatarId=15906","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lefty%40hortonworks.com&avatarId=15906"},"displayName":"Lefty Leverenz","active":true,"timeZone":"America/New_York"},"body":"Thanks Naveen, and sorry for pestering you.  ;)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=leftylev","name":"leftylev","key":"lefty@hortonworks.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=lefty%40hortonworks.com&avatarId=15906","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=lefty%40hortonworks.com&avatarId=15906","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=lefty%40hortonworks.com&avatarId=15906","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=lefty%40hortonworks.com&avatarId=15906"},"displayName":"Lefty Leverenz","active":true,"timeZone":"America/New_York"},"created":"2017-06-13T05:34:53.279+0000","updated":"2017-06-13T05:34:53.279+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13072020/comment/16486365","id":"16486365","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vgarg","name":"vgarg","key":"vgarg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=vgarg&avatarId=30430","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=vgarg&avatarId=30430","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=vgarg&avatarId=30430","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=vgarg&avatarId=30430"},"displayName":"Vineet Garg","active":true,"timeZone":"America/Los_Angeles"},"body":"Hive 3.0.0 has been released so closing this jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vgarg","name":"vgarg","key":"vgarg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=vgarg&avatarId=30430","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=vgarg&avatarId=30430","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=vgarg&avatarId=30430","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=vgarg&avatarId=30430"},"displayName":"Vineet Garg","active":true,"timeZone":"America/Los_Angeles"},"created":"2018-05-23T00:00:20.898+0000","updated":"2018-05-23T00:00:20.898+0000"}],"maxResults":38,"total":38,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-16667/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3ezcv:"}}