{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12819947","self":"https://issues.apache.org/jira/rest/api/2/issue/12819947","key":"HIVE-10296","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2015-04-10T05:54:28.664+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Mon Aug 24 18:20:55 UTC 2015","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-10296/watchers","watchCount":5,"isWatching":false},"created":"2015-04-10T05:22:50.136+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326829","id":"12326829","description":"0.13 maintenance release 1","name":"0.13.1","archived":false,"released":true,"releaseDate":"2014-06-06"}],"issuelinks":[{"id":"12506607","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12506607","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12752934","key":"HIVE-8739","self":"https://issues.apache.org/jira/rest/api/2/issue/12752934","fields":{"summary":"handle Derby and Oracle errors with joins and filters in Direct SQL in a invalid-DB-specific path","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-06-15T03:30:48.212+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[],"timeoriginalestimate":null,"description":"Try to drop a partition from hive:\n\nALTER TABLE f___edr_bin_source___900_sub_id DROP IF EXISTS PARTITION ( exporttimestamp=1427824800, timestamp=1427824800)\n\nThis triggers a query on the metastore like this :\n\n \"select \"PARTITIONS\".\"PART_ID\" from \"PARTITIONS\" inner join \"TBLS\" on \"PARTITIONS\".\"TBL_ID\" = \"TBLS\".\"TBL_ID\" and \"TBLS\".\"TBL_NAME\" = ? inner join \"DBS\" on \"TBLS\".\"DB_ID\" = \"DBS\".\"DB_ID\" and \"DBS\".\"NAME\" = ? inner join \"PARTITION_KEY_VALS\" \"FILTER0\" on \"FILTER0\".\"PART_ID\" = \"PARTITIONS\".\"PART_ID\" and \"FILTER0\".\"INTEGER_IDX\" = 0 inner join \"PARTITION_KEY_VALS\" \"FILTER1\" on \"FILTER1\".\"PART_ID\" = \"PARTITIONS\".\"PART_ID\" and \"FILTER1\".\"INTEGER_IDX\" = 1 where ( (((case when \"TBLS\".\"TBL_NAME\" = ? and \"DBS\".\"NAME\" = ? then cast(\"FILTER0\".\"PART_KEY_VAL\" as decimal(21,0)) else null end) = ?) and ((case when \"TBLS\".\"TBL_NAME\" = ? and \"DBS\".\"NAME\" = ? then cast(\"FILTER1\".\"PART_KEY_VAL\" as decimal(21,0)) else null end) = ?)) )\"\n\n\nIn some cases, when the internal tables in postgres (metastore) have some amount of data, the query plan pushes the condition down into the join.\nNow because of DERBY-6358 , case when clause is used before the cast, but in this case , cast is evaluated before condition being evaluated. So in case we have different tables partitioned on string and integer columns, cast exception is observed!\n\n\n15/04/06 08:41:20 ERROR metastore.ObjectStore: Direct SQL failed, falling back to ORM \njavax.jdo.JDODataStoreException: Error executing SQL query \"select \"PARTITIONS\".\"PART_ID\" from \"PARTITIONS\" inner join \"TBLS\" on \"PARTITIONS\".\"TBL_ID\" = \"TBLS\".\"TBL_ID\" and \"TBLS\".\"TBL_NAME\" = ? inner join \"DBS\" on \"TBLS\".\"DB_ID\" = \"DBS\".\"DB_ID\" and \"DBS\".\"NAME\" = ? inner join \"PARTITION_KEY_VALS\" \"FILTER0\" on \"FILTER0\".\"PART_ID\" = \"PARTITIONS\".\"PART_ID\" and \"FILTER0\".\"INTEGER_IDX\" = 0 inner join \"PARTITION_KEY_VALS\" \"FILTER1\" on \"FILTER1\".\"PART_ID\" = \"PARTITIONS\".\"PART_ID\" and \"FILTER1\".\"INTEGER_IDX\" = 1 where ( (((case when \"TBLS\".\"TBL_NAME\" = ? and \"DBS\".\"NAME\" = ? then cast(\"FILTER0\".\"PART_KEY_VAL\" as decimal(21,0)) else null end) = ?) and ((case when \"TBLS\".\"TBL_NAME\" = ? and \"DBS\".\"NAME\" = ? then cast(\"FILTER1\".\"PART_KEY_VAL\" as decimal(21,0)) else null end) = ?)) )\". \n        at org.datanucleus.api.jdo.NucleusJDOHelper.getJDOExceptionForNucleusException(NucleusJDOHelper.java:451) \n        at org.datanucleus.api.jdo.JDOQuery.executeWithArray(JDOQuery.java:321) \n        at org.apache.hadoop.hive.metastore.MetaStoreDirectSql.getPartitionsViaSqlFilterInternal(MetaStoreDirectSql.java:300) \n        at org.apache.hadoop.hive.metastore.MetaStoreDirectSql.getPartitionsViaSqlFilter(MetaStoreDirectSql.java:211) \n        at org.apache.hadoop.hive.metastore.ObjectStore$3.getSqlResult(ObjectStore.java:1915) \n        at org.apache.hadoop.hive.metastore.ObjectStore$3.getSqlResult(ObjectStore.java:1909) \n        at org.apache.hadoop.hive.metastore.ObjectStore$GetHelper.run(ObjectStore.java:2208) \n        at org.apache.hadoop.hive.metastore.ObjectStore.getPartitionsByExprInternal(ObjectStore.java:1909) \n        at org.apache.hadoop.hive.metastore.ObjectStore.getPartitionsByExpr(ObjectStore.java:1882) \n\n\n\n\norg.postgresql.util.PSQLException: ERROR: invalid input syntax for type numeric: \"__DEFAULT_BINSRC__\" \n\n\n\n15/04/06 08:41:20 INFO metastore.ObjectStore: JDO filter pushdown cannot be used: Filtering is supported only on partition keys of type string \n15/04/06 08:41:20 ERROR metastore.ObjectStore: \njavax.jdo.JDOException: Exception thrown when executing query \n        at org.datanucleus.api.jdo.NucleusJDOHelper.getJDOExceptionForNucleusException(NucleusJDOHelper.java:596) \n        at org.datanucleus.api.jdo.JDOQuery.execute(JDOQuery.java:275) \n        at org.apache.hadoop.hive.metastore.ObjectStore.getPartitionNamesNoTxn(ObjectStore.java:1700) \n        at org.apache.hadoop.hive.metastore.ObjectStore.getPartitionNamesPrunedByExprNoTxn(ObjectStore.java:2003) \n        at org.apache.hadoop.hive.metastore.ObjectStore.access$400(ObjectStore.java:146) \n        at org.apache.hadoop.hive.metastore.ObjectStore$3.getJdoResult(ObjectStore.java:1937) \n        at org.apache.hadoop.hive.metastore.ObjectStore$3.getJdoResult(ObjectStore.java:1909) \n        at org.apache.hadoop.hive.metastore.ObjectStore$GetHelper.run(ObjectStore.java:2214) \n        at org.apache.hadoop.hive.metastore.ObjectStore.getPartitionsByExprInternal(ObjectStore.java:1909) \n        at org.apache.hadoop.hive.metastore.ObjectStore.getPartitionsByExpr(ObjectStore.java:1882) ","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Cast exception observed when hive runs a multi join query on metastore (postgres), since postgres pushes the filter into the join, and ignores the condition before applying cast","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=saucam","name":"saucam","key":"saucam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yash Datta","active":true,"timeZone":"Asia/Singapore"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=saucam","name":"saucam","key":"saucam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yash Datta","active":true,"timeZone":"Asia/Singapore"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12819947/comment/14488978","id":"14488978","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"body":"GitHub user saucam opened a pull request:\n\n    https://github.com/apache/hive/pull/32\n\n    HIVE-10296: Remove cast since it might result in exceptions when filter conditions are pushed into joins in postgres\n\n    Try to drop a partition from hive:\n    ALTER TABLE f__edr_bin_source__900_sub_id DROP IF EXISTS PARTITION ( exporttimestamp=1427824800, timestamp=1427824800)\n    This triggers a query on the metastore like this :\n    \"select \"PARTITIONS\".\"PART_ID\" from \"PARTITIONS\" inner join \"TBLS\" on \"PARTITIONS\".\"TBL_ID\" = \"TBLS\".\"TBL_ID\" and \"TBLS\".\"TBL_NAME\" = ? inner join \"DBS\" on \"TBLS\".\"DB_ID\" = \"DBS\".\"DB_ID\" and \"DBS\".\"NAME\" = ? inner join \"PARTITION_KEY_VALS\" \"FILTER0\" on \"FILTER0\".\"PART_ID\" = \"PARTITIONS\".\"PART_ID\" and \"FILTER0\".\"INTEGER_IDX\" = 0 inner join \"PARTITION_KEY_VALS\" \"FILTER1\" on \"FILTER1\".\"PART_ID\" = \"PARTITIONS\".\"PART_ID\" and \"FILTER1\".\"INTEGER_IDX\" = 1 where ( (((case when \"TBLS\".\"TBL_NAME\" = ? and \"DBS\".\"NAME\" = ? then cast(\"FILTER0\".\"PART_KEY_VAL\" as decimal(21,0)) else null end) = ?) and ((case when \"TBLS\".\"TBL_NAME\" = ? and \"DBS\".\"NAME\" = ? then cast(\"FILTER1\".\"PART_KEY_VAL\" as decimal(21,0)) else null end) = ?)) )\"\n    In some cases, when the internal tables in postgres (metastore) have some amount of data, the query plan pushes the condition down into the join.\n    Now because of DERBY-6358 , case when clause is used before the cast, but in this case , cast is evaluated before condition being evaluated. So in case we have different tables partitioned on string and integer columns, cast exception is observed!\n    15/04/06 08:41:20 ERROR metastore.ObjectStore: Direct SQL failed, falling back to ORM \n    javax.jdo.JDODataStoreException: Error executing SQL query \"select \"PARTITIONS\".\"PART_ID\" from \"PARTITIONS\" inner join \"TBLS\" on \"PARTITIONS\".\"TBL_ID\" = \"TBLS\".\"TBL_ID\" and \"TBLS\".\"TBL_NAME\" = ? inner join \"DBS\" on \"TBLS\".\"DB_ID\" = \"DBS\".\"DB_ID\" and \"DBS\".\"NAME\" = ? inner join \"PARTITION_KEY_VALS\" \"FILTER0\" on \"FILTER0\".\"PART_ID\" = \"PARTITIONS\".\"PART_ID\" and \"FILTER0\".\"INTEGER_IDX\" = 0 inner join \"PARTITION_KEY_VALS\" \"FILTER1\" on \"FILTER1\".\"PART_ID\" = \"PARTITIONS\".\"PART_ID\" and \"FILTER1\".\"INTEGER_IDX\" = 1 where ( (((case when \"TBLS\".\"TBL_NAME\" = ? and \"DBS\".\"NAME\" = ? then cast(\"FILTER0\".\"PART_KEY_VAL\" as decimal(21,0)) else null end) = ?) and ((case when \"TBLS\".\"TBL_NAME\" = ? and \"DBS\".\"NAME\" = ? then cast(\"FILTER1\".\"PART_KEY_VAL\" as decimal(21,0)) else null end) = ?)) )\". \n    at org.datanucleus.api.jdo.NucleusJDOHelper.getJDOExceptionForNucleusException(NucleusJDOHelper.java:451) \n    at org.datanucleus.api.jdo.JDOQuery.executeWithArray(JDOQuery.java:321) \n    at org.apache.hadoop.hive.metastore.MetaStoreDirectSql.getPartitionsViaSqlFilterInternal(MetaStoreDirectSql.java:300) \n    at org.apache.hadoop.hive.metastore.MetaStoreDirectSql.getPartitionsViaSqlFilter(MetaStoreDirectSql.java:211) \n    at org.apache.hadoop.hive.metastore.ObjectStore$3.getSqlResult(ObjectStore.java:1915) \n    at org.apache.hadoop.hive.metastore.ObjectStore$3.getSqlResult(ObjectStore.java:1909) \n    at org.apache.hadoop.hive.metastore.ObjectStore$GetHelper.run(ObjectStore.java:2208) \n    at org.apache.hadoop.hive.metastore.ObjectStore.getPartitionsByExprInternal(ObjectStore.java:1909) \n    at org.apache.hadoop.hive.metastore.ObjectStore.getPartitionsByExpr(ObjectStore.java:1882)\n    org.postgresql.util.PSQLException: ERROR: invalid input syntax for type numeric: \"_DEFAULT_BINSRC_\"\n    15/04/06 08:41:20 INFO metastore.ObjectStore: JDO filter pushdown cannot be used: Filtering is supported only on partition keys of type string \n    15/04/06 08:41:20 ERROR metastore.ObjectStore: \n    javax.jdo.JDOException: Exception thrown when executing query \n    at org.datanucleus.api.jdo.NucleusJDOHelper.getJDOExceptionForNucleusException(NucleusJDOHelper.java:596) \n    at org.datanucleus.api.jdo.JDOQuery.execute(JDOQuery.java:275) \n    at org.apache.hadoop.hive.metastore.ObjectStore.getPartitionNamesNoTxn(ObjectStore.java:1700) \n    at org.apache.hadoop.hive.metastore.ObjectStore.getPartitionNamesPrunedByExprNoTxn(ObjectStore.java:2003) \n    at org.apache.hadoop.hive.metastore.ObjectStore.access$400(ObjectStore.java:146) \n    at org.apache.hadoop.hive.metastore.ObjectStore$3.getJdoResult(ObjectStore.java:1937) \n    at org.apache.hadoop.hive.metastore.ObjectStore$3.getJdoResult(ObjectStore.java:1909) \n    at org.apache.hadoop.hive.metastore.ObjectStore$GetHelper.run(ObjectStore.java:2214) \n    at org.apache.hadoop.hive.metastore.ObjectStore.getPartitionsByExprInternal(ObjectStore.java:1909) \n    at org.apache.hadoop.hive.metastore.ObjectStore.getPartitionsByExpr(ObjectStore.java:1882)\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/saucam/hive HIVE-10296\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/hive/pull/32.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #32\n    \n----\ncommit 35ceabecf27c644d7c91051be95b620a2b71ec63\nAuthor: Yash Datta <yash.datta@guavus.com>\nDate:   2015-04-10T05:33:50Z\n\n    HIVE-10296: Remove cast since it might result in exceptions when filter conditions are pushed into joins in postgres\n\n----\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=githubbot","name":"githubbot","key":"githubbot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF GitHub Bot","active":true,"timeZone":"Etc/UTC"},"created":"2015-04-10T05:54:28.664+0000","updated":"2015-04-10T05:54:28.664+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12819947/comment/14488979","id":"14488979","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=saucam","name":"saucam","key":"saucam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yash Datta","active":true,"timeZone":"Asia/Singapore"},"body":"https://github.com/apache/hive/pull/32","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=saucam","name":"saucam","key":"saucam","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yash Datta","active":true,"timeZone":"Asia/Singapore"},"created":"2015-04-10T05:54:38.643+0000","updated":"2015-04-10T05:54:38.643+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12819947/comment/14709783","id":"14709783","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"body":"this case was incomplete and was recently improved to include other join filters (see \"dbHasJoinCastBug\" there). However, we didn't realize postgres also has this bug, so it needs to be added to the list.\nWith the full case filter it should not try to cast non-numerics unless they are actually stored in the numeric column. Can you check where \"DEFAULT_BINSRC\" value is coming from?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sershe","name":"sershe","key":"sershe","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sergey Shelukhin","active":true,"timeZone":"America/Los_Angeles"},"created":"2015-08-24T18:20:55.748+0000","updated":"2015-08-24T18:20:55.748+0000"}],"maxResults":3,"total":3,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-10296/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i2d2xj:"}}