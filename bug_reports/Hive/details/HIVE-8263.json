{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12744161","self":"https://issues.apache.org/jira/rest/api/2/issue/12744161","key":"HIVE-8263","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326450","id":"12326450","description":"released","name":"0.14.0","archived":false,"released":true,"releaseDate":"2014-11-12"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12310220":"2014-09-30T14:53:31.771+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Nov 13 19:43:35 UTC 2014","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"10002_*:*_1_*:*_99569409_*|*_1_*:*_1_*:*_354861589_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2014-10-01T05:29:02.494+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-8263/watchers","watchCount":4,"isWatching":false},"created":"2014-09-25T23:15:11.770+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"2.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326450","id":"12326450","description":"released","name":"0.14.0","archived":false,"released":true,"releaseDate":"2014-11-12"}],"issuelinks":[{"id":"12397705","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12397705","type":{"id":"10020","name":"Cloners","inward":"is cloned by","outward":"is a clone of","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10020"},"outwardIssue":{"id":"12744155","key":"HIVE-8261","self":"https://issues.apache.org/jira/rest/api/2/issue/12744155","fields":{"summary":"CBO : Predicate pushdown is removed by Optiq ","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12397822","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12397822","type":{"id":"10020","name":"Cloners","inward":"is cloned by","outward":"is a clone of","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10020"},"inwardIssue":{"id":"12744431","key":"HIVE-8280","self":"https://issues.apache.org/jira/rest/api/2/issue/12744431","fields":{"summary":"CBO : When filter is applied on dimension table PK/FK code path is not in effect.","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12398030","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12398030","type":{"id":"10020","name":"Cloners","inward":"is cloned by","outward":"is a clone of","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10020"},"inwardIssue":{"id":"12745084","key":"HIVE-8315","self":"https://issues.apache.org/jira/rest/api/2/issue/12745084","fields":{"summary":"CBO : Negate condition underestimates selectivity which results in an in-efficient plan","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhbutani","name":"rhbutani","key":"rhbutani","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Harish Butani","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-11-13T19:43:35.363+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12323402","id":"12323402","name":"CBO","description":"All issues dealing with Hive's cost based optimizer and its interaction with Optiq"}],"timeoriginalestimate":null,"description":"Plan for TPC-DS Q64 shows that item is joined last with store_sales while store_sales x item is the most selective join in the plan.\nInterestingly predicate push down is applied on item but item comes so late in the join which most likely means that calculation of the join selectivity gave too high of a number of it was never considered.\n\n\nThis is a subset of the logical plan showing that item was joined very last\n{code}\nHiveProjectRel(_o__col0=[$0], _o__col1=[$2], _o__col2=[$3], _o__col3=[$4], _o__col4=[$5], _o__col5=[$6], _o__col6=[$7], _o__col7=[$8], _o__col8=[$9], _o__col9=[$10], _o__col10=[$11], _o__col11=[$12], _o__col12=[$13], _o__col13=[$14], _o__col14=[$15], _o__col15=[$16], _o__col16=[$22], _o__col17=[$23], _o__col18=[$24], _o__col19=[$20], _o__col20=[$21]): rowcount = 1.0, cumulative cost = {1.1593403796322412E9 rows, 0.0 cpu, 0.0 io}, id = 990\n    HiveFilterRel(condition=[<=($21, $13)]): rowcount = 1.0, cumulative cost = {1.1593403796322412E9 rows, 0.0 cpu, 0.0 io}, id = 988\n      HiveProjectRel(_o__col0=[$0], _o__col1=[$1], _o__col2=[$2], _o__col3=[$3], _o__col4=[$4], _o__col5=[$5], _o__col6=[$6], _o__col7=[$7], _o__col8=[$8], _o__col9=[$9], _o__col10=[$10], _o__col11=[$11], _o__col12=[$12], _o__col15=[$13], _o__col16=[$14], _o__col17=[$15], _o__col18=[$16], _o__col13=[$17], _o__col20=[$18], _o__col30=[$19], _o__col120=[$20], _o__col150=[$21], _o__col160=[$22], _o__col170=[$23], _o__col180=[$24]): rowcount = 1.0, cumulative cost = {1.1593403796322412E9 rows, 0.0 cpu, 0.0 io}, id = 3571\n        HiveJoinRel(condition=[AND(AND(=($1, $17), =($2, $18)), =($3, $19))], joinType=[inner]): rowcount = 1.0, cumulative cost = {1.1593403796322412E9 rows, 0.0 cpu, 0.0 io}, id = 3566\n          HiveProjectRel(_o__col0=[$0], _o__col1=[$1], _o__col2=[$2], _o__col3=[$3], _o__col4=[$4], _o__col5=[$5], _o__col6=[$6], _o__col7=[$7], _o__col8=[$8], _o__col9=[$9], _o__col10=[$10], _o__col11=[$11], _o__col12=[$12], _o__col15=[$15], _o__col16=[$16], _o__col17=[$17], _o__col18=[$18]): rowcount = 1.0, cumulative cost = {1.1593403776322412E9 rows, 0.0 cpu, 0.0 io}, id = 890\n            HiveFilterRel(condition=[=($12, 2000)]): rowcount = 1.0, cumulative cost = {1.1593403776322412E9 rows, 0.0 cpu, 0.0 io}, id = 888\n              HiveAggregateRel(group=[{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}], agg#0=[count()], agg#1=[sum($15)], agg#2=[sum($16)], agg#3=[sum($17)]): rowcount = 1.0, cumulative cost = {1.1593403776322412E9 rows, 0.0 cpu, 0.0 io}, id = 886\n                HiveProjectRel($f0=[$53], $f1=[$50], $f2=[$27], $f3=[$28], $f4=[$39], $f5=[$40], $f6=[$41], $f7=[$42], $f8=[$44], $f9=[$45], $f10=[$46], $f11=[$47], $f12=[$21], $f13=[$23], $f14=[$25], $f15=[$9], $f16=[$10], $f17=[$11]): rowcount = 1.0, cumulative cost = {1.1593403776322412E9 rows, 0.0 cpu, 0.0 io}, id = 884\n                  HiveProjectRel(ss_sold_date_sk=[$17], ss_item_sk=[$18], ss_customer_sk=[$19], ss_cdemo_sk=[$20], ss_hdemo_sk=[$21], ss_addr_sk=[$22], ss_store_sk=[$23], ss_promo_sk=[$24], ss_ticket_number=[$25], ss_wholesale_cost=[$26], ss_list_price=[$27], ss_coupon_amt=[$28], sr_item_sk=[$29], sr_ticket_number=[$30], c_customer_sk=[$31], c_current_cdemo_sk=[$32], c_current_hdemo_sk=[$33], c_current_addr_sk=[$34], c_first_shipto_date_sk=[$35], c_first_sales_date_sk=[$36], d_date_sk=[$37], d_year=[$38], d_date_sk0=[$39], d_year0=[$40], d_date_sk1=[$41], d_year1=[$42], s_store_sk=[$43], s_store_name=[$44], s_zip=[$45], cd_demo_sk=[$46], cd_marital_status=[$47], cd_demo_sk0=[$48], cd_marital_status0=[$49], p_promo_sk=[$0], hd_demo_sk=[$15], hd_income_band_sk=[$16], hd_demo_sk0=[$13], hd_income_band_sk0=[$14], ca_address_sk=[$6], ca_street_number=[$7], ca_street_name=[$8], ca_city=[$9], ca_zip=[$10], ca_address_sk0=[$1], ca_street_number0=[$2], ca_street_name0=[$3], ca_city0=[$4], ca_zip0=[$5], ib_income_band_sk=[$12], ib_income_band_sk0=[$11], i_item_sk=[$51], i_current_price=[$52], i_color=[$53], i_product_name=[$54], _o__col0=[$50]): rowcount = 1.0, cumulative cost = {1.1593403776322412E9 rows, 0.0 cpu, 0.0 io}, id = 3564\n                    HiveJoinRel(condition=[=($24, $0)], joinType=[inner]): rowcount = 1.0, cumulative cost = {1.1593403776322412E9 rows, 0.0 cpu, 0.0 io}, id = 3562\n                      HiveProjectRel(p_promo_sk=[$0]): rowcount = 450.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 928\n                        HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.promotion]]): rowcount = 450.0, cumulative cost = {0}, id = 58\n                      HiveJoinRel(condition=[=($33, $0)], joinType=[inner]): rowcount = 1.0, cumulative cost = {1.1593399266322412E9 rows, 0.0 cpu, 0.0 io}, id = 3560\n                        HiveProjectRel(ca_address_sk=[$0], ca_street_number=[$2], ca_street_name=[$3], ca_city=[$6], ca_zip=[$9]): rowcount = 800000.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 940\n                          HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.customer_address]]): rowcount = 800000.0, cumulative cost = {0}, id = 61\n                        HiveJoinRel(condition=[=($16, $0)], joinType=[inner]): rowcount = 1.0, cumulative cost = {1.1585399256322412E9 rows, 0.0 cpu, 0.0 io}, id = 3558\n                          HiveProjectRel(ca_address_sk=[$0], ca_street_number=[$2], ca_street_name=[$3], ca_city=[$6], ca_zip=[$9]): rowcount = 800000.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 940\n                            HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.customer_address]]): rowcount = 800000.0, cumulative cost = {0}, id = 61\n                          HiveJoinRel(condition=[=($3, $0)], joinType=[inner]): rowcount = 1.0, cumulative cost = {1.1577399246322412E9 rows, 0.0 cpu, 0.0 io}, id = 3556\n                            HiveProjectRel(ib_income_band_sk=[$0]): rowcount = 20.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 948\n                              HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.income_band]]): rowcount = 20.0, cumulative cost = {0}, id = 63\n                            HiveJoinRel(condition=[=($4, $0)], joinType=[inner]): rowcount = 1.0, cumulative cost = {1.1577399036322412E9 rows, 0.0 cpu, 0.0 io}, id = 3554\n                              HiveProjectRel(ib_income_band_sk=[$0]): rowcount = 20.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 948\n                                HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.income_band]]): rowcount = 20.0, cumulative cost = {0}, id = 63\n                              HiveJoinRel(condition=[=($5, $38)], joinType=[inner]): rowcount = 1.0, cumulative cost = {1.1577398826322412E9 rows, 0.0 cpu, 0.0 io}, id = 3552\n                                HiveJoinRel(condition=[=($20, $0)], joinType=[inner]): rowcount = 1.0, cumulative cost = {1.1577398806322412E9 rows, 0.0 cpu, 0.0 io}, id = 3550\n                                  HiveProjectRel(hd_demo_sk=[$0], hd_income_band_sk=[$1]): rowcount = 7200.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 932\n                                    HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.household_demographics]]): rowcount = 7200.0, cumulative cost = {0}, id = 53\n                                  HiveJoinRel(condition=[=($6, $0)], joinType=[inner]): rowcount = 1.0, cumulative cost = {1.1577326796322412E9 rows, 0.0 cpu, 0.0 io}, id = 3548\n                                    HiveProjectRel(hd_demo_sk=[$0], hd_income_band_sk=[$1]): rowcount = 7200.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 932\n                                      HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.household_demographics]]): rowcount = 7200.0, cumulative cost = {0}, id = 53\n                                    HiveJoinRel(condition=[=($1, $33)], joinType=[inner]): rowcount = 1.0, cumulative cost = {1.1577254786322412E9 rows, 0.0 cpu, 0.0 io}, id = 2795\n                                      HiveFilterRel(condition=[<>($30, $32)]): rowcount = 1.0, cumulative cost = {1.1577254766322412E9 rows, 0.0 cpu, 0.0 io}, id = 832\n                                        HiveProjectRel(ss_sold_date_sk=[$0], ss_item_sk=[$1], ss_customer_sk=[$2], ss_cdemo_sk=[$3], ss_hdemo_sk=[$4], ss_addr_sk=[$5], ss_store_sk=[$6], ss_promo_sk=[$7], ss_ticket_number=[$8], ss_wholesale_cost=[$9], ss_list_price=[$10], ss_coupon_amt=[$11], sr_item_sk=[$31], sr_ticket_number=[$32], c_customer_sk=[$21], c_current_cdemo_sk=[$22], c_current_hdemo_sk=[$23], c_current_addr_sk=[$24], c_first_shipto_date_sk=[$25], c_first_sales_date_sk=[$26], d_date_sk=[$14], d_year=[$15], d_date_sk0=[$27], d_year0=[$28], d_date_sk1=[$29], d_year1=[$30], s_store_sk=[$16], s_store_name=[$17], s_zip=[$18], cd_demo_sk=[$12], cd_marital_status=[$13], cd_demo_sk0=[$19], cd_marital_status0=[$20]): rowcount = 3.9579965360452816, cumulative cost = {1.1577254766322412E9 rows, 0.0 cpu, 0.0 io}, id = 1998\n                                          HiveJoinRel(condition=[AND(=($1, $31), =($8, $32))], joinType=[inner]): rowcount = 3.9579965360452816, cumulative cost = {1.1577254766322412E9 rows, 0.0 cpu, 0.0 io}, id = 1996\n                                            HiveJoinRel(condition=[=($2, $21)], joinType=[inner]): rowcount = 1.0, cumulative cost = {1.1021474706322412E9 rows, 0.0 cpu, 0.0 io}, id = 1994\n                                              HiveJoinRel(condition=[=($6, $16)], joinType=[inner]): rowcount = 1.0, cumulative cost = {1.1021474686322412E9 rows, 0.0 cpu, 0.0 io}, id = 1987\n                                                HiveJoinRel(condition=[=($0, $14)], joinType=[inner]): rowcount = 299.6322411714753, cumulative cost = {1.102146957E9 rows, 0.0 cpu, 0.0 io}, id = 1985\n                                                  HiveJoinRel(condition=[=($3, $12)], joinType=[inner]): rowcount = 5.50076554E8, cumulative cost = {5.51997354E8 rows, 0.0 cpu, 0.0 io}, id = 1569\n                                                    HiveProjectRel(ss_sold_date_sk=[$0], ss_item_sk=[$2], ss_customer_sk=[$3], ss_cdemo_sk=[$4], ss_hdemo_sk=[$5], ss_addr_sk=[$6], ss_store_sk=[$7], ss_promo_sk=[$8], ss_ticket_number=[$9], ss_wholesale_cost=[$11], ss_list_price=[$12], ss_coupon_amt=[$19]): rowcount = 5.50076554E8, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 892\n                                                      HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.store_sales]]): rowcount = 5.50076554E8, cumulative cost = {0}, id = 55\n                                                    HiveProjectRel(cd_demo_sk=[$0], cd_marital_status=[$2]): rowcount = 1920800.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 918\n                                                      HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.customer_demographics]]): rowcount = 1920800.0, cumulative cost = {0}, id = 56\n                                                  HiveProjectRel(d_date_sk=[$0], d_year=[$6]): rowcount = 73049.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 902\n                                                    HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.date_dim]]): rowcount = 73049.0, cumulative cost = {0}, id = 65\n                                                HiveProjectRel(s_store_sk=[$0], s_store_name=[$5], s_zip=[$25]): rowcount = 212.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 914\n                                                  HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.store]]): rowcount = 212.0, cumulative cost = {0}, id = 54\n                                              HiveJoinRel(condition=[=($6, $10)], joinType=[inner]): rowcount = 1.0, cumulative cost = {5266899.0 rows, 0.0 cpu, 0.0 io}, id = 1992\n                                                HiveJoinRel(condition=[=($7, $8)], joinType=[inner]): rowcount = 1.0, cumulative cost = {5193849.0 rows, 0.0 cpu, 0.0 io}, id = 1990\n                                                  HiveJoinRel(condition=[=($3, $0)], joinType=[inner]): rowcount = 1600000.0, cumulative cost = {3520800.0 rows, 0.0 cpu, 0.0 io}, id = 1578\n                                                    HiveProjectRel(cd_demo_sk=[$0], cd_marital_status=[$2]): rowcount = 1920800.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 918\n                                                      HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.customer_demographics]]): rowcount = 1920800.0, cumulative cost = {0}, id = 56\n                                                    HiveProjectRel(c_customer_sk=[$0], c_current_cdemo_sk=[$2], c_current_hdemo_sk=[$3], c_current_addr_sk=[$4], c_first_shipto_date_sk=[$5], c_first_sales_date_sk=[$6]): rowcount = 1600000.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 898\n                                                      HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.customer]]): rowcount = 1600000.0, cumulative cost = {0}, id = 59\n                                                  HiveProjectRel(d_date_sk=[$0], d_year=[$6]): rowcount = 73049.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 902\n                                                    HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.date_dim]]): rowcount = 73049.0, cumulative cost = {0}, id = 65\n                                                HiveProjectRel(d_date_sk=[$0], d_year=[$6]): rowcount = 73049.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 902\n                                                  HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.date_dim]]): rowcount = 73049.0, cumulative cost = {0}, id = 65\n                                            HiveProjectRel(sr_item_sk=[$2], sr_ticket_number=[$9]): rowcount = 5.5578005E7, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 894\n                                              HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.store_returns]]): rowcount = 5.5578005E7, cumulative cost = {0}, id = 62\n                                      HiveProjectRel(_o__col0=[$0]): rowcount = 1.0, cumulative cost = {3.15348608E8 rows, 0.0 cpu, 0.0 io}, id = 880\n                                        HiveFilterRel(condition=[>($1, *(CAST(2):DOUBLE NOT NULL, $2))]): rowcount = 1.0, cumulative cost = {3.15348608E8 rows, 0.0 cpu, 0.0 io}, id = 878\n                                          HiveAggregateRel(group=[{0}], agg#0=[sum($1)], agg#1=[sum($2)]): rowcount = 38846.0, cumulative cost = {3.15348608E8 rows, 0.0 cpu, 0.0 io}, id = 876\n                                            HiveProjectRel($f0=[$0], $f1=[$2], $f2=[+(+($5, $6), $7)]): rowcount = 6.692553251460564E8, cumulative cost = {3.15348608E8 rows, 0.0 cpu, 0.0 io}, id = 874\n                                              HiveProjectRel(cs_item_sk=[$0], cs_order_number=[$1], cs_ext_list_price=[$2], cr_item_sk=[$3], cr_order_number=[$4], cr_refunded_cash=[$5], cr_reversed_charge=[$6], cr_store_credit=[$7]): rowcount = 6.692553251460564E8, cumulative cost = {3.15348608E8 rows, 0.0 cpu, 0.0 io}, id = 1132\n                                                HiveJoinRel(condition=[AND(=($0, $3), =($1, $4))], joinType=[inner]): rowcount = 6.692553251460564E8, cumulative cost = {3.15348608E8 rows, 0.0 cpu, 0.0 io}, id = 1127\n                                                  HiveProjectRel(cs_item_sk=[$15], cs_order_number=[$17], cs_ext_list_price=[$25]): rowcount = 2.86549727E8, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 962\n                                                    HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.catalog_sales]]): rowcount = 2.86549727E8, cumulative cost = {0}, id = 45\n                                                  HiveProjectRel(cr_item_sk=[$2], cr_order_number=[$16], cr_refunded_cash=[$23], cr_reversed_charge=[$24], cr_store_credit=[$25]): rowcount = 2.8798881E7, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 964\n                                                    HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.catalog_returns]]): rowcount = 2.8798881E7, cumulative cost = {0}, id = 46\n                                HiveFilterRel(condition=[AND(in($2, 'maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate'), between(false, $1, 35, +(35, 10)), between(false, $1, +(35, 1), +(35, 15)))]): rowcount = 1.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 864\n                                  HiveProjectRel(i_item_sk=[$0], i_current_price=[$5], i_color=[$17], i_product_name=[$21]): rowcount = 48000.0, cumulative cost = {0.0 rows, 0.0 cpu, 0.0 io}, id = 862\n                                    HiveTableScanRel(table=[[tpcds_bin_partitioned_orc_200.item]]): rowcount = 48000.0, cumulative cost = {0}, id = 68\n\n{code}\n\nPhysical plan \n{code}\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n      Edges:\n        Map 10 <- Map 40 (BROADCAST_EDGE)\n        Map 16 <- Map 2 (BROADCAST_EDGE), Map 23 (BROADCAST_EDGE), Map 6 (BROADCAST_EDGE)\n        Map 19 <- Map 42 (BROADCAST_EDGE)\n        Map 33 <- Map 35 (BROADCAST_EDGE)\n        Map 35 <- Map 1 (BROADCAST_EDGE), Map 16 (BROADCAST_EDGE), Map 3 (BROADCAST_EDGE), Map 8 (BROADCAST_EDGE)\n        Map 36 <- Map 18 (BROADCAST_EDGE), Map 25 (BROADCAST_EDGE), Map 41 (BROADCAST_EDGE)\n        Map 38 <- Map 15 (BROADCAST_EDGE), Map 31 (BROADCAST_EDGE), Map 36 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)\n        Map 4 <- Map 38 (BROADCAST_EDGE)\n        Reducer 11 <- Map 10 (SIMPLE_EDGE), Map 22 (BROADCAST_EDGE), Map 24 (BROADCAST_EDGE), Map 26 (BROADCAST_EDGE), Map 27 (BROADCAST_EDGE), Map 30 (BROADCAST_EDGE), Map 32 (BROADCAST_EDGE), Map 39 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE)\n        Reducer 12 <- Reducer 11 (SIMPLE_EDGE)\n        Reducer 13 <- Reducer 12 (SIMPLE_EDGE), Reducer 21 (SIMPLE_EDGE)\n        Reducer 14 <- Reducer 13 (SIMPLE_EDGE)\n        Reducer 20 <- Map 17 (BROADCAST_EDGE), Map 19 (SIMPLE_EDGE), Map 28 (BROADCAST_EDGE), Map 29 (BROADCAST_EDGE), Map 33 (BROADCAST_EDGE), Map 34 (BROADCAST_EDGE), Map 37 (BROADCAST_EDGE), Map 43 (BROADCAST_EDGE), Map 44 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE)\n        Reducer 21 <- Reducer 20 (SIMPLE_EDGE)\n      DagName: mmokhtar_20140925174747_6fa8c67a-6d24-43cc-8fbb-3be14937b8b1:1\n      Vertices:\n        Map 1 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: d_date_sk is not null (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: d_date_sk (type: int), d_year (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 10 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 286549727 Data size: 38890158232 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 71637432 Data size: 9722539591 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: cs_item_sk (type: int), cs_order_number (type: int), cs_ext_list_price (type: float)\n                      outputColumnNames: _col0, _col1, _col2\n                      Statistics: Num rows: 71637432 Data size: 9722539591 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col0} {_col2}\n                          1 {_col2} {_col3} {_col4}\n                        keys:\n                          0 _col0 (type: int), _col1 (type: int)\n                          1 _col0 (type: int), _col1 (type: int)\n                        outputColumnNames: _col0, _col2, _col5, _col6, _col7\n                        input vertices:\n                          1 Map 40\n                        Statistics: Num rows: 78801176 Data size: 10694794240 Basic stats: COMPLETE Column stats: NONE\n                        Select Operator\n                          expressions: _col0 (type: int), _col2 (type: float), ((_col5 + _col6) + _col7) (type: float)\n                          outputColumnNames: _col0, _col1, _col2\n                          Statistics: Num rows: 78801176 Data size: 10694794240 Basic stats: COMPLETE Column stats: NONE\n                          Group By Operator\n                            aggregations: sum(_col1), sum(_col2)\n                            keys: _col0 (type: int)\n                            mode: hash\n                            outputColumnNames: _col0, _col1, _col2\n                            Statistics: Num rows: 78801176 Data size: 10694794240 Basic stats: COMPLETE Column stats: NONE\n                            Reduce Output Operator\n                              key expressions: _col0 (type: int)\n                              sort order: +\n                              Map-reduce partition columns: _col0 (type: int)\n                              Statistics: Num rows: 78801176 Data size: 10694794240 Basic stats: COMPLETE Column stats: NONE\n                              value expressions: _col1 (type: double), _col2 (type: double)\n            Execution mode: vectorized\n        Map 15 \n            Map Operator Tree:\n                TableScan\n                  alias: customer\n                  filterExpr: (((((c_current_cdemo_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_customer_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                  Statistics: Num rows: 1600000 Data size: 1376033128 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((c_current_cdemo_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_customer_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 25000 Data size: 21500517 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: c_customer_sk (type: int), c_current_cdemo_sk (type: int), c_current_hdemo_sk (type: int), c_current_addr_sk (type: int), c_first_shipto_date_sk (type: int), c_first_sales_date_sk (type: int)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5\n                      Statistics: Num rows: 25000 Data size: 21500517 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col1 (type: int)\n                        Statistics: Num rows: 25000 Data size: 21500517 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col0 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int)\n            Execution mode: vectorized\n        Map 16 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  filterExpr: cd_demo_sk is not null (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: cd_demo_sk (type: int), cd_marital_status (type: string)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col0} {_col1} {_col2} {_col4} {_col5} {_col6} {_col7} {_col8} {_col9} {_col10} {_col11}\n                          1 {_col1}\n                        keys:\n                          0 _col3 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col0, _col1, _col2, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col13\n                        input vertices:\n                          0 Map 6\n                        Statistics: Num rows: 1181805 Data size: 51579732 Basic stats: COMPLETE Column stats: NONE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          condition expressions:\n                            0 {_col1} {_col2} {_col4} {_col5} {_col6} {_col7} {_col8} {_col9} {_col10} {_col11} {_col13}\n                            1 \n                          keys:\n                            0 _col0 (type: int)\n                            1 _col0 (type: int)\n                          outputColumnNames: _col1, _col2, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col13\n                          input vertices:\n                            1 Map 23\n                          Statistics: Num rows: 1299985 Data size: 56737708 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            condition expressions:\n                              0 {_col1} {_col2} {_col4} {_col5} {_col7} {_col8} {_col9} {_col10} {_col11} {_col13}\n                              1 {_col1} {_col2}\n                            keys:\n                              0 _col6 (type: int)\n                              1 _col0 (type: int)\n                            outputColumnNames: _col1, _col2, _col4, _col5, _col7, _col8, _col9, _col10, _col11, _col13, _col17, _col18\n                            input vertices:\n                              1 Map 2\n                            Statistics: Num rows: 1429983 Data size: 62411480 Basic stats: COMPLETE Column stats: NONE\n                            Reduce Output Operator\n                              key expressions: _col2 (type: int)\n                              sort order: +\n                              Map-reduce partition columns: _col2 (type: int)\n                              Statistics: Num rows: 1429983 Data size: 62411480 Basic stats: COMPLETE Column stats: NONE\n                              value expressions: _col1 (type: int), _col4 (type: int), _col5 (type: int), _col7 (type: int), _col8 (type: int), _col9 (type: float), _col10 (type: float), _col11 (type: float), _col13 (type: string), _col17 (type: string), _col18 (type: string)\n            Execution mode: vectorized\n        Map 17 \n            Map Operator Tree:\n                TableScan\n                  alias: ib1\n                  filterExpr: ib_income_band_sk is not null (type: boolean)\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: ib_income_band_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 18 \n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: ((((((((ss_cdemo_sk is not null and ss_sold_date_sk is not null) and ss_store_sk is not null) and ss_customer_sk is not null) and ss_item_sk is not null) and ss_ticket_number is not null) and ss_hdemo_sk is not null) and ss_addr_sk is not null) and ss_promo_sk is not null) (type: boolean)\n                  Statistics: Num rows: 550076554 Data size: 24008004411 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ((((((((ss_cdemo_sk is not null and ss_sold_date_sk is not null) and ss_store_sk is not null) and ss_customer_sk is not null) and ss_item_sk is not null) and ss_ticket_number is not null) and ss_hdemo_sk is not null) and ss_addr_sk is not null) and ss_promo_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1074369 Data size: 46890665 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: ss_sold_date_sk (type: int), ss_item_sk (type: int), ss_customer_sk (type: int), ss_cdemo_sk (type: int), ss_hdemo_sk (type: int), ss_addr_sk (type: int), ss_store_sk (type: int), ss_promo_sk (type: int), ss_ticket_number (type: int), ss_wholesale_cost (type: float), ss_list_price (type: float), ss_coupon_amt (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11\n                      Statistics: Num rows: 1074369 Data size: 46890665 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col3 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col3 (type: int)\n                        Statistics: Num rows: 1074369 Data size: 46890665 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: int), _col7 (type: int), _col8 (type: int), _col9 (type: float), _col10 (type: float), _col11 (type: float)\n            Execution mode: vectorized\n        Map 19 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_sales\n                  filterExpr: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 286549727 Data size: 38890158232 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (cs_item_sk is not null and cs_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 71637432 Data size: 9722539591 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: cs_item_sk (type: int), cs_order_number (type: int), cs_ext_list_price (type: float)\n                      outputColumnNames: _col0, _col1, _col2\n                      Statistics: Num rows: 71637432 Data size: 9722539591 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col0} {_col2}\n                          1 {_col2} {_col3} {_col4}\n                        keys:\n                          0 _col0 (type: int), _col1 (type: int)\n                          1 _col0 (type: int), _col1 (type: int)\n                        outputColumnNames: _col0, _col2, _col5, _col6, _col7\n                        input vertices:\n                          1 Map 42\n                        Statistics: Num rows: 78801176 Data size: 10694794240 Basic stats: COMPLETE Column stats: NONE\n                        Select Operator\n                          expressions: _col0 (type: int), _col2 (type: float), ((_col5 + _col6) + _col7) (type: float)\n                          outputColumnNames: _col0, _col1, _col2\n                          Statistics: Num rows: 78801176 Data size: 10694794240 Basic stats: COMPLETE Column stats: NONE\n                          Group By Operator\n                            aggregations: sum(_col1), sum(_col2)\n                            keys: _col0 (type: int)\n                            mode: hash\n                            outputColumnNames: _col0, _col1, _col2\n                            Statistics: Num rows: 78801176 Data size: 10694794240 Basic stats: COMPLETE Column stats: NONE\n                            Reduce Output Operator\n                              key expressions: _col0 (type: int)\n                              sort order: +\n                              Map-reduce partition columns: _col0 (type: int)\n                              Statistics: Num rows: 78801176 Data size: 10694794240 Basic stats: COMPLETE Column stats: NONE\n                              value expressions: _col1 (type: double), _col2 (type: double)\n            Execution mode: vectorized\n        Map 2 \n            Map Operator Tree:\n                TableScan\n                  alias: store\n                  filterExpr: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                  Statistics: Num rows: 212 Data size: 405680 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                    Statistics: Num rows: 27 Data size: 51666 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: s_store_sk (type: int), s_store_name (type: string), s_zip (type: string)\n                      outputColumnNames: _col0, _col1, _col2\n                      Statistics: Num rows: 27 Data size: 51666 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 27 Data size: 51666 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: string), _col2 (type: string)\n            Execution mode: vectorized\n        Map 22 \n            Map Operator Tree:\n                TableScan\n                  alias: ib1\n                  filterExpr: ib_income_band_sk is not null (type: boolean)\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: ib_income_band_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 23 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: (d_date_sk is not null and (d_year = 2000)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2000)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 24 \n            Map Operator Tree:\n                TableScan\n                  alias: hd1\n                  filterExpr: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                  Statistics: Num rows: 7200 Data size: 799 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1800 Data size: 199 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: hd_demo_sk (type: int), hd_income_band_sk (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 1800 Data size: 199 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 1800 Data size: 199 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 25 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (d_date_sk is not null and (d_year = 2001)) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 26 \n            Map Operator Tree:\n                TableScan\n                  alias: promotion\n                  filterExpr: p_promo_sk is not null (type: boolean)\n                  Statistics: Num rows: 450 Data size: 530848 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: p_promo_sk is not null (type: boolean)\n                    Statistics: Num rows: 225 Data size: 265424 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: p_promo_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 225 Data size: 265424 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 225 Data size: 265424 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 27 \n            Map Operator Tree:\n                TableScan\n                  alias: hd1\n                  filterExpr: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                  Statistics: Num rows: 7200 Data size: 799 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1800 Data size: 199 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: hd_demo_sk (type: int), hd_income_band_sk (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 1800 Data size: 199 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 1800 Data size: 199 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 28 \n            Map Operator Tree:\n                TableScan\n                  alias: ad1\n                  filterExpr: ca_address_sk is not null (type: boolean)\n                  Statistics: Num rows: 800000 Data size: 811903688 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: ca_address_sk (type: int), ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string)\n            Execution mode: vectorized\n        Map 29 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: ((((i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate') and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) and i_item_sk is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ((((i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate') and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) and i_item_sk is not null) (type: boolean)\n                    Statistics: Num rows: 3000 Data size: 4295794 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: i_item_sk (type: int), i_product_name (type: string)\n                      outputColumnNames: _col0, _col3\n                      Statistics: Num rows: 3000 Data size: 4295794 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 3000 Data size: 4295794 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col3 (type: string)\n            Execution mode: vectorized\n        Map 3 \n            Map Operator Tree:\n                TableScan\n                  alias: customer\n                  filterExpr: (((((c_current_cdemo_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_customer_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                  Statistics: Num rows: 1600000 Data size: 1376033128 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (((((c_current_cdemo_sk is not null and c_first_sales_date_sk is not null) and c_first_shipto_date_sk is not null) and c_customer_sk is not null) and c_current_hdemo_sk is not null) and c_current_addr_sk is not null) (type: boolean)\n                    Statistics: Num rows: 25000 Data size: 21500517 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: c_customer_sk (type: int), c_current_cdemo_sk (type: int), c_current_hdemo_sk (type: int), c_current_addr_sk (type: int), c_first_shipto_date_sk (type: int), c_first_sales_date_sk (type: int)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5\n                      Statistics: Num rows: 25000 Data size: 21500517 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col1 (type: int)\n                        Statistics: Num rows: 25000 Data size: 21500517 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col0 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int)\n            Execution mode: vectorized\n        Map 30 \n            Map Operator Tree:\n                TableScan\n                  alias: ib1\n                  filterExpr: ib_income_band_sk is not null (type: boolean)\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: ib_income_band_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 31 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: d_date_sk is not null (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: d_date_sk (type: int), d_year (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 32 \n            Map Operator Tree:\n                TableScan\n                  alias: ad1\n                  filterExpr: ca_address_sk is not null (type: boolean)\n                  Statistics: Num rows: 800000 Data size: 811903688 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: ca_address_sk (type: int), ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string)\n            Execution mode: vectorized\n        Map 33 \n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  filterExpr: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                  Statistics: Num rows: 55578005 Data size: 4377627636 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                    Statistics: Num rows: 13894502 Data size: 1094406968 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: sr_item_sk (type: int), sr_ticket_number (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 13894502 Data size: 1094406968 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col1} {_col4} {_col5} {_col7} {_col9} {_col10} {_col11} {_col13} {_col17} {_col18} {_col20} {_col23} {_col24} {_col28} {_col30}\n                          1 \n                        keys:\n                          0 _col1 (type: int), _col8 (type: int)\n                          1 _col0 (type: int), _col1 (type: int)\n                        outputColumnNames: _col1, _col4, _col5, _col7, _col9, _col10, _col11, _col13, _col17, _col18, _col20, _col23, _col24, _col28, _col30\n                        input vertices:\n                          0 Map 35\n                        Statistics: Num rows: 15283953 Data size: 1203847680 Basic stats: COMPLETE Column stats: NONE\n                        Filter Operator\n                          predicate: (_col13 <> _col20) (type: boolean)\n                          Statistics: Num rows: 15283953 Data size: 1203847680 Basic stats: COMPLETE Column stats: NONE\n                          Select Operator\n                            expressions: _col1 (type: int), _col10 (type: float), _col11 (type: float), _col23 (type: int), _col24 (type: int), 2000 (type: int), _col28 (type: int), _col30 (type: int), _col17 (type: string), _col18 (type: string), _col4 (type: int), _col5 (type: int), _col7 (type: int), _col9 (type: float)\n                            outputColumnNames: _col1, _col10, _col11, _col16, _col17, _col21, _col23, _col25, _col27, _col28, _col4, _col5, _col7, _col9\n                            Statistics: Num rows: 15283953 Data size: 1203847680 Basic stats: COMPLETE Column stats: NONE\n                            Reduce Output Operator\n                              key expressions: _col1 (type: int)\n                              sort order: +\n                              Map-reduce partition columns: _col1 (type: int)\n                              Statistics: Num rows: 15283953 Data size: 1203847680 Basic stats: COMPLETE Column stats: NONE\n                              value expressions: _col4 (type: int), _col5 (type: int), _col7 (type: int), _col9 (type: float), _col10 (type: float), _col11 (type: float), _col16 (type: int), _col17 (type: int), _col21 (type: int), _col23 (type: int), _col25 (type: int), _col27 (type: string), _col28 (type: string)\n            Execution mode: vectorized\n        Map 34 \n            Map Operator Tree:\n                TableScan\n                  alias: promotion\n                  filterExpr: p_promo_sk is not null (type: boolean)\n                  Statistics: Num rows: 450 Data size: 530848 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: p_promo_sk is not null (type: boolean)\n                    Statistics: Num rows: 225 Data size: 265424 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: p_promo_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 225 Data size: 265424 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 225 Data size: 265424 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 35 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  filterExpr: cd_demo_sk is not null (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: cd_demo_sk (type: int), cd_marital_status (type: string)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col1}\n                          1 {_col0} {_col2} {_col3} {_col4} {_col5}\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col1 (type: int)\n                        outputColumnNames: _col1, _col2, _col4, _col5, _col6, _col7\n                        input vertices:\n                          1 Map 3\n                        Statistics: Num rows: 1056440 Data size: 395108576 Basic stats: COMPLETE Column stats: NONE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          condition expressions:\n                            0 {_col1} {_col2} {_col4} {_col5} {_col6}\n                            1 {_col1}\n                          keys:\n                            0 _col7 (type: int)\n                            1 _col0 (type: int)\n                          outputColumnNames: _col1, _col2, _col4, _col5, _col6, _col9\n                          input vertices:\n                            1 Map 8\n                          Statistics: Num rows: 1162084 Data size: 434619456 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            condition expressions:\n                              0 {_col1} {_col2} {_col4} {_col5} {_col9}\n                              1 {_col1}\n                            keys:\n                              0 _col6 (type: int)\n                              1 _col0 (type: int)\n                            outputColumnNames: _col1, _col2, _col4, _col5, _col9, _col11\n                            input vertices:\n                              1 Map 1\n                            Statistics: Num rows: 1278292 Data size: 478081408 Basic stats: COMPLETE Column stats: NONE\n                            Select Operator\n                              expressions: _col1 (type: string), _col11 (type: int), _col2 (type: int), _col4 (type: int), _col5 (type: int), _col9 (type: int)\n                              outputColumnNames: _col1, _col11, _col2, _col4, _col5, _col9\n                              Statistics: Num rows: 1278292 Data size: 478081408 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                condition expressions:\n                                  0 {_col1} {_col4} {_col5} {_col7} {_col8} {_col9} {_col10} {_col11} {_col13} {_col17} {_col18}\n                                  1 {_col1} {_col4} {_col5} {_col9} {_col11}\n                                keys:\n                                  0 _col2 (type: int)\n                                  1 _col2 (type: int)\n                                outputColumnNames: _col1, _col4, _col5, _col7, _col8, _col9, _col10, _col11, _col13, _col17, _col18, _col20, _col23, _col24, _col28, _col30\n                                input vertices:\n                                  0 Map 16\n                                Statistics: Num rows: 1572981 Data size: 68652632 Basic stats: COMPLETE Column stats: NONE\n                                Reduce Output Operator\n                                  key expressions: _col1 (type: int), _col8 (type: int)\n                                  sort order: ++\n                                  Map-reduce partition columns: _col1 (type: int), _col8 (type: int)\n                                  Statistics: Num rows: 1572981 Data size: 68652632 Basic stats: COMPLETE Column stats: NONE\n                                  value expressions: _col4 (type: int), _col5 (type: int), _col7 (type: int), _col9 (type: float), _col10 (type: float), _col11 (type: float), _col13 (type: string), _col17 (type: string), _col18 (type: string), _col20 (type: string), _col23 (type: int), _col24 (type: int), _col28 (type: int), _col30 (type: int)\n            Execution mode: vectorized\n        Map 36 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  filterExpr: cd_demo_sk is not null (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: cd_demo_sk (type: int), cd_marital_status (type: string)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col0} {_col1} {_col2} {_col4} {_col5} {_col6} {_col7} {_col8} {_col9} {_col10} {_col11}\n                          1 {_col1}\n                        keys:\n                          0 _col3 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col0, _col1, _col2, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col13\n                        input vertices:\n                          0 Map 18\n                        Statistics: Num rows: 1181805 Data size: 51579732 Basic stats: COMPLETE Column stats: NONE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          condition expressions:\n                            0 {_col1} {_col2} {_col4} {_col5} {_col6} {_col7} {_col8} {_col9} {_col10} {_col11} {_col13}\n                            1 \n                          keys:\n                            0 _col0 (type: int)\n                            1 _col0 (type: int)\n                          outputColumnNames: _col1, _col2, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col13\n                          input vertices:\n                            1 Map 25\n                          Statistics: Num rows: 1299985 Data size: 56737708 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            condition expressions:\n                              0 {_col1} {_col2} {_col4} {_col5} {_col7} {_col8} {_col9} {_col10} {_col11} {_col13}\n                              1 {_col1} {_col2}\n                            keys:\n                              0 _col6 (type: int)\n                              1 _col0 (type: int)\n                            outputColumnNames: _col1, _col2, _col4, _col5, _col7, _col8, _col9, _col10, _col11, _col13, _col17, _col18\n                            input vertices:\n                              1 Map 41\n                            Statistics: Num rows: 1429983 Data size: 62411480 Basic stats: COMPLETE Column stats: NONE\n                            Reduce Output Operator\n                              key expressions: _col2 (type: int)\n                              sort order: +\n                              Map-reduce partition columns: _col2 (type: int)\n                              Statistics: Num rows: 1429983 Data size: 62411480 Basic stats: COMPLETE Column stats: NONE\n                              value expressions: _col1 (type: int), _col4 (type: int), _col5 (type: int), _col7 (type: int), _col8 (type: int), _col9 (type: float), _col10 (type: float), _col11 (type: float), _col13 (type: string), _col17 (type: string), _col18 (type: string)\n            Execution mode: vectorized\n        Map 37 \n            Map Operator Tree:\n                TableScan\n                  alias: ib1\n                  filterExpr: ib_income_band_sk is not null (type: boolean)\n                  Statistics: Num rows: 20 Data size: 240 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ib_income_band_sk is not null (type: boolean)\n                    Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: ib_income_band_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 10 Data size: 120 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 38 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  filterExpr: cd_demo_sk is not null (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: cd_demo_sk is not null (type: boolean)\n                    Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: cd_demo_sk (type: int), cd_marital_status (type: string)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 960400 Data size: 359189600 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col1}\n                          1 {_col0} {_col2} {_col3} {_col4} {_col5}\n                        keys:\n                          0 _col0 (type: int)\n                          1 _col1 (type: int)\n                        outputColumnNames: _col1, _col2, _col4, _col5, _col6, _col7\n                        input vertices:\n                          1 Map 15\n                        Statistics: Num rows: 1056440 Data size: 395108576 Basic stats: COMPLETE Column stats: NONE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          condition expressions:\n                            0 {_col1} {_col2} {_col4} {_col5} {_col6}\n                            1 {_col1}\n                          keys:\n                            0 _col7 (type: int)\n                            1 _col0 (type: int)\n                          outputColumnNames: _col1, _col2, _col4, _col5, _col6, _col9\n                          input vertices:\n                            1 Map 31\n                          Statistics: Num rows: 1162084 Data size: 434619456 Basic stats: COMPLETE Column stats: NONE\n                          Map Join Operator\n                            condition map:\n                                 Inner Join 0 to 1\n                            condition expressions:\n                              0 {_col1} {_col2} {_col4} {_col5} {_col9}\n                              1 {_col1}\n                            keys:\n                              0 _col6 (type: int)\n                              1 _col0 (type: int)\n                            outputColumnNames: _col1, _col2, _col4, _col5, _col9, _col11\n                            input vertices:\n                              1 Map 5\n                            Statistics: Num rows: 1278292 Data size: 478081408 Basic stats: COMPLETE Column stats: NONE\n                            Select Operator\n                              expressions: _col1 (type: string), _col11 (type: int), _col2 (type: int), _col4 (type: int), _col5 (type: int), _col9 (type: int)\n                              outputColumnNames: _col1, _col11, _col2, _col4, _col5, _col9\n                              Statistics: Num rows: 1278292 Data size: 478081408 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                condition expressions:\n                                  0 {_col1} {_col4} {_col5} {_col7} {_col8} {_col9} {_col10} {_col11} {_col13} {_col17} {_col18}\n                                  1 {_col1} {_col4} {_col5} {_col9} {_col11}\n                                keys:\n                                  0 _col2 (type: int)\n                                  1 _col2 (type: int)\n                                outputColumnNames: _col1, _col4, _col5, _col7, _col8, _col9, _col10, _col11, _col13, _col17, _col18, _col20, _col23, _col24, _col28, _col30\n                                input vertices:\n                                  0 Map 36\n                                Statistics: Num rows: 1572981 Data size: 68652632 Basic stats: COMPLETE Column stats: NONE\n                                Reduce Output Operator\n                                  key expressions: _col1 (type: int), _col8 (type: int)\n                                  sort order: ++\n                                  Map-reduce partition columns: _col1 (type: int), _col8 (type: int)\n                                  Statistics: Num rows: 1572981 Data size: 68652632 Basic stats: COMPLETE Column stats: NONE\n                                  value expressions: _col4 (type: int), _col5 (type: int), _col7 (type: int), _col9 (type: float), _col10 (type: float), _col11 (type: float), _col13 (type: string), _col17 (type: string), _col18 (type: string), _col20 (type: string), _col23 (type: int), _col24 (type: int), _col28 (type: int), _col30 (type: int)\n            Execution mode: vectorized\n        Map 39 \n            Map Operator Tree:\n                TableScan\n                  alias: item\n                  filterExpr: ((((i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate') and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) and i_item_sk is not null) (type: boolean)\n                  Statistics: Num rows: 48000 Data size: 68732712 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ((((i_color) IN ('maroon', 'burnished', 'dim', 'steel', 'navajo', 'chocolate') and i_current_price BETWEEN 35 AND 45) and i_current_price BETWEEN 36 AND 50) and i_item_sk is not null) (type: boolean)\n                    Statistics: Num rows: 3000 Data size: 4295794 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: i_item_sk (type: int), i_product_name (type: string)\n                      outputColumnNames: _col0, _col3\n                      Statistics: Num rows: 3000 Data size: 4295794 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 3000 Data size: 4295794 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col3 (type: string)\n            Execution mode: vectorized\n        Map 4 \n            Map Operator Tree:\n                TableScan\n                  alias: store_returns\n                  filterExpr: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                  Statistics: Num rows: 55578005 Data size: 4377627636 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (sr_item_sk is not null and sr_ticket_number is not null) (type: boolean)\n                    Statistics: Num rows: 13894502 Data size: 1094406968 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: sr_item_sk (type: int), sr_ticket_number (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 13894502 Data size: 1094406968 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col1} {_col4} {_col5} {_col7} {_col9} {_col10} {_col11} {_col13} {_col17} {_col18} {_col20} {_col23} {_col24} {_col28} {_col30}\n                          1 \n                        keys:\n                          0 _col1 (type: int), _col8 (type: int)\n                          1 _col0 (type: int), _col1 (type: int)\n                        outputColumnNames: _col1, _col4, _col5, _col7, _col9, _col10, _col11, _col13, _col17, _col18, _col20, _col23, _col24, _col28, _col30\n                        input vertices:\n                          0 Map 38\n                        Statistics: Num rows: 15283953 Data size: 1203847680 Basic stats: COMPLETE Column stats: NONE\n                        Filter Operator\n                          predicate: (_col13 <> _col20) (type: boolean)\n                          Statistics: Num rows: 15283953 Data size: 1203847680 Basic stats: COMPLETE Column stats: NONE\n                          Select Operator\n                            expressions: _col1 (type: int), _col10 (type: float), _col11 (type: float), _col23 (type: int), _col24 (type: int), 2001 (type: int), _col28 (type: int), _col30 (type: int), _col17 (type: string), _col18 (type: string), _col4 (type: int), _col5 (type: int), _col7 (type: int), _col9 (type: float)\n                            outputColumnNames: _col1, _col10, _col11, _col16, _col17, _col21, _col23, _col25, _col27, _col28, _col4, _col5, _col7, _col9\n                            Statistics: Num rows: 15283953 Data size: 1203847680 Basic stats: COMPLETE Column stats: NONE\n                            Reduce Output Operator\n                              key expressions: _col1 (type: int)\n                              sort order: +\n                              Map-reduce partition columns: _col1 (type: int)\n                              Statistics: Num rows: 15283953 Data size: 1203847680 Basic stats: COMPLETE Column stats: NONE\n                              value expressions: _col4 (type: int), _col5 (type: int), _col7 (type: int), _col9 (type: float), _col10 (type: float), _col11 (type: float), _col16 (type: int), _col17 (type: int), _col21 (type: int), _col23 (type: int), _col25 (type: int), _col27 (type: string), _col28 (type: string)\n            Execution mode: vectorized\n        Map 40 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  filterExpr: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 28798881 Data size: 3057234680 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 7199721 Data size: 764308749 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: cr_item_sk (type: int), cr_order_number (type: int), cr_refunded_cash (type: float), cr_reversed_charge (type: float), cr_store_credit (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 7199721 Data size: 764308749 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int)\n                        sort order: ++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int)\n                        Statistics: Num rows: 7199721 Data size: 764308749 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col2 (type: float), _col3 (type: float), _col4 (type: float)\n            Execution mode: vectorized\n        Map 41 \n            Map Operator Tree:\n                TableScan\n                  alias: store\n                  filterExpr: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                  Statistics: Num rows: 212 Data size: 405680 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ((s_store_sk is not null and s_store_name is not null) and s_zip is not null) (type: boolean)\n                    Statistics: Num rows: 27 Data size: 51666 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: s_store_sk (type: int), s_store_name (type: string), s_zip (type: string)\n                      outputColumnNames: _col0, _col1, _col2\n                      Statistics: Num rows: 27 Data size: 51666 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 27 Data size: 51666 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: string), _col2 (type: string)\n            Execution mode: vectorized\n        Map 42 \n            Map Operator Tree:\n                TableScan\n                  alias: catalog_returns\n                  filterExpr: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 28798881 Data size: 3057234680 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (cr_item_sk is not null and cr_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 7199721 Data size: 764308749 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: cr_item_sk (type: int), cr_order_number (type: int), cr_refunded_cash (type: float), cr_reversed_charge (type: float), cr_store_credit (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 7199721 Data size: 764308749 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: int)\n                        sort order: ++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: int)\n                        Statistics: Num rows: 7199721 Data size: 764308749 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col2 (type: float), _col3 (type: float), _col4 (type: float)\n            Execution mode: vectorized\n        Map 43 \n            Map Operator Tree:\n                TableScan\n                  alias: ad1\n                  filterExpr: ca_address_sk is not null (type: boolean)\n                  Statistics: Num rows: 800000 Data size: 811903688 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: ca_address_sk (type: int), ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string)\n            Execution mode: vectorized\n        Map 44 \n            Map Operator Tree:\n                TableScan\n                  alias: hd1\n                  filterExpr: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                  Statistics: Num rows: 7200 Data size: 799 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1800 Data size: 199 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: hd_demo_sk (type: int), hd_income_band_sk (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 1800 Data size: 199 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 1800 Data size: 199 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 5 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: d_date_sk is not null (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: d_date_sk (type: int), d_year (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 6 \n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: ((((((((ss_cdemo_sk is not null and ss_sold_date_sk is not null) and ss_store_sk is not null) and ss_customer_sk is not null) and ss_item_sk is not null) and ss_ticket_number is not null) and ss_hdemo_sk is not null) and ss_addr_sk is not null) and ss_promo_sk is not null) (type: boolean)\n                  Statistics: Num rows: 550076554 Data size: 24008004411 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ((((((((ss_cdemo_sk is not null and ss_sold_date_sk is not null) and ss_store_sk is not null) and ss_customer_sk is not null) and ss_item_sk is not null) and ss_ticket_number is not null) and ss_hdemo_sk is not null) and ss_addr_sk is not null) and ss_promo_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1074369 Data size: 46890665 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: ss_sold_date_sk (type: int), ss_item_sk (type: int), ss_customer_sk (type: int), ss_cdemo_sk (type: int), ss_hdemo_sk (type: int), ss_addr_sk (type: int), ss_store_sk (type: int), ss_promo_sk (type: int), ss_ticket_number (type: int), ss_wholesale_cost (type: float), ss_list_price (type: float), ss_coupon_amt (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11\n                      Statistics: Num rows: 1074369 Data size: 46890665 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col3 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col3 (type: int)\n                        Statistics: Num rows: 1074369 Data size: 46890665 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: int), _col7 (type: int), _col8 (type: int), _col9 (type: float), _col10 (type: float), _col11 (type: float)\n            Execution mode: vectorized\n        Map 7 \n            Map Operator Tree:\n                TableScan\n                  alias: ad1\n                  filterExpr: ca_address_sk is not null (type: boolean)\n                  Statistics: Num rows: 800000 Data size: 811903688 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ca_address_sk is not null (type: boolean)\n                    Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: ca_address_sk (type: int), ca_street_number (type: string), ca_street_name (type: string), ca_city (type: string), ca_zip (type: string)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4\n                      Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 400000 Data size: 405951844 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string)\n            Execution mode: vectorized\n        Map 8 \n            Map Operator Tree:\n                TableScan\n                  alias: d1\n                  filterExpr: d_date_sk is not null (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: d_date_sk is not null (type: boolean)\n                    Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: d_date_sk (type: int), d_year (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 36525 Data size: 40871475 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Map 9 \n            Map Operator Tree:\n                TableScan\n                  alias: hd1\n                  filterExpr: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                  Statistics: Num rows: 7200 Data size: 799 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (hd_demo_sk is not null and hd_income_band_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1800 Data size: 199 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: hd_demo_sk (type: int), hd_income_band_sk (type: int)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 1800 Data size: 199 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 1800 Data size: 199 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col1 (type: int)\n            Execution mode: vectorized\n        Reducer 11 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2\n                Statistics: Num rows: 39400588 Data size: 5347397120 Basic stats: COMPLETE Column stats: NONE\n                Filter Operator\n                  predicate: (_col1 > (UDFToDouble(2) * _col2)) (type: boolean)\n                  Statistics: Num rows: 13133529 Data size: 1782465661 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: _col0 (type: int)\n                    outputColumnNames: _col0\n                    Statistics: Num rows: 13133529 Data size: 1782465661 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {_col1} {_col4} {_col5} {_col7} {_col9} {_col10} {_col11} {_col16} {_col17} {_col21} {_col23} {_col25} {_col27} {_col28}\n                        1 \n                      keys:\n                        0 _col1 (type: int)\n                        1 _col0 (type: int)\n                      outputColumnNames: _col1, _col4, _col5, _col7, _col9, _col10, _col11, _col16, _col17, _col21, _col23, _col25, _col27, _col28\n                      input vertices:\n                        0 Map 4\n                      Statistics: Num rows: 16812348 Data size: 1324232448 Basic stats: COMPLETE Column stats: NONE\n                      Select Operator\n                        expressions: _col1 (type: int), _col10 (type: float), _col11 (type: float), _col16 (type: int), _col17 (type: int), _col21 (type: int), _col23 (type: int), _col25 (type: int), _col27 (type: string), _col28 (type: string), _col4 (type: int), _col5 (type: int), _col7 (type: int), _col9 (type: float)\n                        outputColumnNames: _col1, _col10, _col11, _col16, _col17, _col21, _col23, _col25, _col27, _col28, _col4, _col5, _col7, _col9\n                        Statistics: Num rows: 16812348 Data size: 1324232448 Basic stats: COMPLETE Column stats: NONE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          condition expressions:\n                            0 {_col1}\n                            1 {_col1} {_col5} {_col7} {_col9} {_col10} {_col11} {_col16} {_col17} {_col21} {_col23} {_col25} {_col27} {_col28}\n                          keys:\n                            0 _col0 (type: int)\n                            1 _col4 (type: int)\n                          outputColumnNames: _col1, _col3, _col7, _col9, _col11, _col12, _col13, _col18, _col19, _col23, _col25, _col27, _col29, _col30\n                          input vertices:\n                            0 Map 24\n                          Statistics: Num rows: 18493584 Data size: 1456655744 Basic stats: COMPLETE Column stats: NONE\n                          Select Operator\n                            expressions: _col1 (type: int), _col11 (type: float), _col12 (type: float), _col13 (type: float), _col18 (type: int), _col19 (type: int), _col23 (type: int), _col25 (type: int), _col27 (type: int), _col29 (type: string), _col3 (type: int), _col30 (type: string), _col7 (type: int), _col9 (type: int)\n                            outputColumnNames: _col1, _col11, _col12, _col13, _col18, _col19, _col23, _col25, _col27, _col29, _col3, _col30, _col7, _col9\n                            Statistics: Num rows: 18493584 Data size: 1456655744 Basic stats: COMPLETE Column stats: NONE\n                            Map Join Operator\n                              condition map:\n                                   Inner Join 0 to 1\n                              condition expressions:\n                                0 {_col1}\n                                1 {_col1} {_col3} {_col7} {_col9} {_col11} {_col12} {_col13} {_col19} {_col23} {_col25} {_col27} {_col29} {_col30}\n                              keys:\n                                0 _col0 (type: int)\n                                1 _col18 (type: int)\n                              outputColumnNames: _col1, _col3, _col5, _col9, _col11, _col13, _col14, _col15, _col21, _col25, _col27, _col29, _col31, _col32\n                              input vertices:\n                                0 Map 27\n                              Statistics: Num rows: 20342942 Data size: 1602321408 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                condition expressions:\n                                  0 {_col1} {_col3} {_col9} {_col11} {_col13} {_col14} {_col15} {_col21} {_col25} {_col27} {_col29} {_col31} {_col32}\n                                  1 {_col0} {_col3}\n                                keys:\n                                  0 _col5 (type: int)\n                                  1 _col0 (type: int)\n                                outputColumnNames: _col1, _col3, _col9, _col11, _col13, _col14, _col15, _col21, _col25, _col27, _col29, _col31, _col32, _col38, _col41\n                                input vertices:\n                                  1 Map 39\n                                Statistics: Num rows: 22377236 Data size: 1762553600 Basic stats: COMPLETE Column stats: NONE\n                                Select Operator\n                                  expressions: _col1 (type: int), _col11 (type: int), _col13 (type: float), _col14 (type: float), _col15 (type: float), _col21 (type: int), _col25 (type: int), _col27 (type: int), _col29 (type: int), _col3 (type: int), _col31 (type: string), _col32 (type: string), _col38 (type: int), _col41 (type: string), _col9 (type: int)\n                                  outputColumnNames: _col1, _col11, _col13, _col14, _col15, _col21, _col25, _col27, _col29, _col3, _col31, _col32, _col38, _col41, _col9\n                                  Statistics: Num rows: 22377236 Data size: 1762553600 Basic stats: COMPLETE Column stats: NONE\n                                  Map Join Operator\n                                    condition map:\n                                         Inner Join 0 to 1\n                                    condition expressions:\n                                      0 \n                                      1 {_col1} {_col9} {_col11} {_col13} {_col14} {_col15} {_col21} {_col25} {_col27} {_col29} {_col31} {_col32} {_col38} {_col41}\n                                    keys:\n                                      0 _col0 (type: int)\n                                      1 _col3 (type: int)\n                                    outputColumnNames: _col2, _col10, _col12, _col14, _col15, _col16, _col22, _col26, _col28, _col30, _col32, _col33, _col39, _col42\n                                    input vertices:\n                                      0 Map 22\n                                    Statistics: Num rows: 24614960 Data size: 1938808960 Basic stats: COMPLETE Column stats: NONE\n                                    Select Operator\n                                      expressions: _col10 (type: int), _col12 (type: int), _col14 (type: float), _col15 (type: float), _col16 (type: float), _col2 (type: int), _col22 (type: int), _col26 (type: int), _col28 (type: int), _col30 (type: int), _col32 (type: string), _col33 (type: string), _col39 (type: int), _col42 (type: string)\n                                      outputColumnNames: _col10, _col12, _col14, _col15, _col16, _col2, _col22, _col26, _col28, _col30, _col32, _col33, _col39, _col42\n                                      Statistics: Num rows: 24614960 Data size: 1938808960 Basic stats: COMPLETE Column stats: NONE\n                                      Map Join Operator\n                                        condition map:\n                                             Inner Join 0 to 1\n                                        condition expressions:\n                                          0 \n                                          1 {_col10} {_col12} {_col14} {_col15} {_col16} {_col22} {_col26} {_col28} {_col30} {_col32} {_col33} {_col39} {_col42}\n                                        keys:\n                                          0 _col0 (type: int)\n                                          1 _col2 (type: int)\n                                        outputColumnNames: _col11, _col13, _col15, _col16, _col17, _col23, _col27, _col29, _col31, _col33, _col34, _col40, _col43\n                                        input vertices:\n                                          0 Map 30\n                                        Statistics: Num rows: 27076456 Data size: 2132689920 Basic stats: COMPLETE Column stats: NONE\n                                        Select Operator\n                                          expressions: _col11 (type: int), _col13 (type: int), _col15 (type: float), _col16 (type: float), _col17 (type: float), _col23 (type: int), _col27 (type: int), _col29 (type: int), _col31 (type: int), _col33 (type: string), _col34 (type: string), _col40 (type: int), _col43 (type: string)\n                                          outputColumnNames: _col11, _col13, _col15, _col16, _col17, _col23, _col27, _col29, _col31, _col33, _col34, _col40, _col43\n                                          Statistics: Num rows: 27076456 Data size: 2132689920 Basic stats: COMPLETE Column stats: NONE\n                                          Map Join Operator\n                                            condition map:\n                                                 Inner Join 0 to 1\n                                            condition expressions:\n                                              0 {_col1} {_col2} {_col3} {_col4}\n                                              1 {_col13} {_col15} {_col16} {_col17} {_col23} {_col27} {_col29} {_col31} {_col33} {_col34} {_col40} {_col43}\n                                            keys:\n                                              0 _col0 (type: int)\n                                              1 _col11 (type: int)\n                                            outputColumnNames: _col1, _col2, _col3, _col4, _col18, _col20, _col21, _col22, _col28, _col32, _col34, _col36, _col38, _col39, _col45, _col48\n                                            input vertices:\n                                              0 Map 32\n                                            Statistics: Num rows: 29784102 Data size: 2345958912 Basic stats: COMPLETE Column stats: NONE\n                                            Select Operator\n                                              expressions: _col1 (type: string), _col18 (type: int), _col2 (type: string), _col20 (type: float), _col21 (type: float), _col22 (type: float), _col28 (type: int), _col3 (type: string), _col32 (type: int), _col34 (type: int), _col36 (type: int), _col38 (type: string), _col39 (type: string), _col4 (type: string), _col45 (type: int), _col48 (type: string)\n                                              outputColumnNames: _col1, _col18, _col2, _col20, _col21, _col22, _col28, _col3, _col32, _col34, _col36, _col38, _col39, _col4, _col45, _col48\n                                              Statistics: Num rows: 29784102 Data size: 2345958912 Basic stats: COMPLETE Column stats: NONE\n                                              Map Join Operator\n                                                condition map:\n                                                     Inner Join 0 to 1\n                                                condition expressions:\n                                                  0 {_col1} {_col2} {_col3} {_col4}\n                                                  1 {_col1} {_col2} {_col3} {_col4} {_col18} {_col20} {_col21} {_col22} {_col32} {_col34} {_col36} {_col38} {_col39} {_col45} {_col48}\n                                                keys:\n                                                  0 _col0 (type: int)\n                                                  1 _col28 (type: int)\n                                                outputColumnNames: _col1, _col2, _col3, _col4, _col6, _col7, _col8, _col9, _col23, _col25, _col26, _col27, _col37, _col39, _col41, _col43, _col44, _col50, _col53\n                                                input vertices:\n                                                  0 Map 7\n                                                Statistics: Num rows: 32762512 Data size: 2580554752 Basic stats: COMPLETE Column stats: NONE\n                                                Select Operator\n                                                  expressions: _col1 (type: string), _col2 (type: string), _col23 (type: int), _col25 (type: float), _col26 (type: float), _col27 (type: float), _col3 (type: string), _col37 (type: int), _col39 (type: int), _col4 (type: string), _col41 (type: int), _col43 (type: string), _col44 (type: string), _col50 (type: int), _col53 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string)\n                                                  outputColumnNames: _col1, _col2, _col23, _col25, _col26, _col27, _col3, _col37, _col39, _col4, _col41, _col43, _col44, _col50, _col53, _col6, _col7, _col8, _col9\n                                                  Statistics: Num rows: 32762512 Data size: 2580554752 Basic stats: COMPLETE Column stats: NONE\n                                                  Map Join Operator\n                                                    condition map:\n                                                         Inner Join 0 to 1\n                                                    condition expressions:\n                                                      0 \n                                                      1 {_col1} {_col2} {_col3} {_col4} {_col6} {_col7} {_col8} {_col9} {_col25} {_col26} {_col27} {_col37} {_col39} {_col41} {_col43} {_col44} {_col50} {_col53}\n                                                    keys:\n                                                      0 _col0 (type: int)\n                                                      1 _col23 (type: int)\n                                                    outputColumnNames: _col2, _col3, _col4, _col5, _col7, _col8, _col9, _col10, _col26, _col27, _col28, _col38, _col40, _col42, _col44, _col45, _col51, _col54\n                                                    input vertices:\n                                                      0 Map 26\n                                                    Statistics: Num rows: 36038764 Data size: 2838610176 Basic stats: COMPLETE Column stats: NONE\n                                                    Select Operator\n                                                      expressions: _col54 (type: string), _col51 (type: int), _col44 (type: string), _col45 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col38 (type: int), _col40 (type: int), _col42 (type: int), _col26 (type: float), _col27 (type: float), _col28 (type: float)\n                                                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17\n                                                      Statistics: Num rows: 36038764 Data size: 2838610176 Basic stats: COMPLETE Column stats: NONE\n                                                      Group By Operator\n                                                        aggregations: count(), sum(_col15), sum(_col16), sum(_col17)\n                                                        keys: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                                        mode: hash\n                                                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                                                        Statistics: Num rows: 36038764 Data size: 2838610176 Basic stats: COMPLETE Column stats: NONE\n                                                        Reduce Output Operator\n                                                          key expressions: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                                          sort order: +++++++++++++++\n                                                          Map-reduce partition columns: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                                          Statistics: Num rows: 36038764 Data size: 2838610176 Basic stats: COMPLETE Column stats: NONE\n                                                          value expressions: _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double)\n        Reducer 12 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: count(VALUE._col0), sum(VALUE._col1), sum(VALUE._col2), sum(VALUE._col3)\n                keys: KEY._col0 (type: string), KEY._col1 (type: int), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: string), KEY._col5 (type: string), KEY._col6 (type: string), KEY._col7 (type: string), KEY._col8 (type: string), KEY._col9 (type: string), KEY._col10 (type: string), KEY._col11 (type: string), KEY._col12 (type: int), KEY._col13 (type: int), KEY._col14 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                Statistics: Num rows: 18019382 Data size: 1419305088 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col1 (type: int), _col2 (type: string), _col3 (type: string), _col12 (type: int), _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7\n                  Statistics: Num rows: 18019382 Data size: 1419305088 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)\n                    sort order: +++\n                    Map-reduce partition columns: _col0 (type: int), _col1 (type: string), _col2 (type: string)\n                    Statistics: Num rows: 18019382 Data size: 1419305088 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: _col3 (type: int), _col4 (type: bigint), _col5 (type: double), _col6 (type: double), _col7 (type: double)\n            Execution mode: vectorized\n        Reducer 13 \n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                condition expressions:\n                  0 {VALUE._col0} {KEY.reducesinkkey1} {KEY.reducesinkkey2} {VALUE._col1} {VALUE._col2} {VALUE._col3} {VALUE._col4} {VALUE._col5} {VALUE._col6} {VALUE._col7} {VALUE._col8} {VALUE._col9} {VALUE._col10} {VALUE._col11} {VALUE._col12} {VALUE._col13}\n                  1 {VALUE._col0} {VALUE._col1} {VALUE._col2} {VALUE._col3} {VALUE._col4}\n                outputColumnNames: _col0, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col20, _col21, _col22, _col23, _col24\n                Statistics: Num rows: 19821320 Data size: 1561235584 Basic stats: COMPLETE Column stats: NONE\n                Filter Operator\n                  predicate: (_col21 <= _col13) (type: boolean)\n                  Statistics: Num rows: 6607106 Data size: 520411808 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: _col0 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: bigint), _col14 (type: double), _col15 (type: double), _col16 (type: double), _col22 (type: double), _col23 (type: double), _col24 (type: double), _col20 (type: int), _col21 (type: bigint)\n                    outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20\n                    Statistics: Num rows: 6607106 Data size: 520411808 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: _col0 (type: string), _col1 (type: string), _col20 (type: bigint)\n                      sort order: +++\n                      Statistics: Num rows: 6607106 Data size: 520411808 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: int), _col12 (type: bigint), _col13 (type: double), _col14 (type: double), _col15 (type: double), _col16 (type: double), _col17 (type: double), _col18 (type: double), _col19 (type: int)\n        Reducer 14 \n            Reduce Operator Tree:\n              Select Operator\n                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: string), VALUE._col0 (type: string), VALUE._col1 (type: string), VALUE._col2 (type: string), VALUE._col3 (type: string), VALUE._col4 (type: string), VALUE._col5 (type: string), VALUE._col6 (type: string), VALUE._col7 (type: string), VALUE._col8 (type: string), VALUE._col9 (type: int), VALUE._col10 (type: bigint), VALUE._col11 (type: double), VALUE._col12 (type: double), VALUE._col13 (type: double), VALUE._col14 (type: double), VALUE._col15 (type: double), VALUE._col16 (type: double), VALUE._col17 (type: int), KEY.reducesinkkey2 (type: bigint)\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18, _col19, _col20\n                Statistics: Num rows: 6607106 Data size: 520411808 Basic stats: COMPLETE Column stats: NONE\n                File Output Operator\n                  compressed: false\n                  Statistics: Num rows: 6607106 Data size: 520411808 Basic stats: COMPLETE Column stats: NONE\n                  table:\n                      input format: org.apache.hadoop.mapred.TextInputFormat\n                      output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n                      serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n            Execution mode: vectorized\n        Reducer 20 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: sum(VALUE._col0), sum(VALUE._col1)\n                keys: KEY._col0 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2\n                Statistics: Num rows: 39400588 Data size: 5347397120 Basic stats: COMPLETE Column stats: NONE\n                Filter Operator\n                  predicate: (_col1 > (UDFToDouble(2) * _col2)) (type: boolean)\n                  Statistics: Num rows: 13133529 Data size: 1782465661 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: _col0 (type: int)\n                    outputColumnNames: _col0\n                    Statistics: Num rows: 13133529 Data size: 1782465661 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {_col1} {_col4} {_col5} {_col7} {_col9} {_col10} {_col11} {_col16} {_col17} {_col21} {_col23} {_col25} {_col27} {_col28}\n                        1 \n                      keys:\n                        0 _col1 (type: int)\n                        1 _col0 (type: int)\n                      outputColumnNames: _col1, _col4, _col5, _col7, _col9, _col10, _col11, _col16, _col17, _col21, _col23, _col25, _col27, _col28\n                      input vertices:\n                        0 Map 33\n                      Statistics: Num rows: 16812348 Data size: 1324232448 Basic stats: COMPLETE Column stats: NONE\n                      Select Operator\n                        expressions: _col1 (type: int), _col10 (type: float), _col11 (type: float), _col16 (type: int), _col17 (type: int), _col21 (type: int), _col23 (type: int), _col25 (type: int), _col27 (type: string), _col28 (type: string), _col4 (type: int), _col5 (type: int), _col7 (type: int), _col9 (type: float)\n                        outputColumnNames: _col1, _col10, _col11, _col16, _col17, _col21, _col23, _col25, _col27, _col28, _col4, _col5, _col7, _col9\n                        Statistics: Num rows: 16812348 Data size: 1324232448 Basic stats: COMPLETE Column stats: NONE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          condition expressions:\n                            0 {_col1}\n                            1 {_col1} {_col5} {_col7} {_col9} {_col10} {_col11} {_col16} {_col17} {_col21} {_col23} {_col25} {_col27} {_col28}\n                          keys:\n                            0 _col0 (type: int)\n                            1 _col4 (type: int)\n                          outputColumnNames: _col1, _col3, _col7, _col9, _col11, _col12, _col13, _col18, _col19, _col23, _col25, _col27, _col29, _col30\n                          input vertices:\n                            0 Map 9\n                          Statistics: Num rows: 18493584 Data size: 1456655744 Basic stats: COMPLETE Column stats: NONE\n                          Select Operator\n                            expressions: _col1 (type: int), _col11 (type: float), _col12 (type: float), _col13 (type: float), _col18 (type: int), _col19 (type: int), _col23 (type: int), _col25 (type: int), _col27 (type: int), _col29 (type: string), _col3 (type: int), _col30 (type: string), _col7 (type: int), _col9 (type: int)\n                            outputColumnNames: _col1, _col11, _col12, _col13, _col18, _col19, _col23, _col25, _col27, _col29, _col3, _col30, _col7, _col9\n                            Statistics: Num rows: 18493584 Data size: 1456655744 Basic stats: COMPLETE Column stats: NONE\n                            Map Join Operator\n                              condition map:\n                                   Inner Join 0 to 1\n                              condition expressions:\n                                0 {_col1}\n                                1 {_col1} {_col3} {_col7} {_col9} {_col11} {_col12} {_col13} {_col19} {_col23} {_col25} {_col27} {_col29} {_col30}\n                              keys:\n                                0 _col0 (type: int)\n                                1 _col18 (type: int)\n                              outputColumnNames: _col1, _col3, _col5, _col9, _col11, _col13, _col14, _col15, _col21, _col25, _col27, _col29, _col31, _col32\n                              input vertices:\n                                0 Map 44\n                              Statistics: Num rows: 20342942 Data size: 1602321408 Basic stats: COMPLETE Column stats: NONE\n                              Map Join Operator\n                                condition map:\n                                     Inner Join 0 to 1\n                                condition expressions:\n                                  0 {_col1} {_col3} {_col9} {_col11} {_col13} {_col14} {_col15} {_col21} {_col25} {_col27} {_col29} {_col31} {_col32}\n                                  1 {_col0} {_col3}\n                                keys:\n                                  0 _col5 (type: int)\n                                  1 _col0 (type: int)\n                                outputColumnNames: _col1, _col3, _col9, _col11, _col13, _col14, _col15, _col21, _col25, _col27, _col29, _col31, _col32, _col38, _col41\n                                input vertices:\n                                  1 Map 29\n                                Statistics: Num rows: 22377236 Data size: 1762553600 Basic stats: COMPLETE Column stats: NONE\n                                Select Operator\n                                  expressions: _col1 (type: int), _col11 (type: int), _col13 (type: float), _col14 (type: float), _col15 (type: float), _col21 (type: int), _col25 (type: int), _col27 (type: int), _col29 (type: int), _col3 (type: int), _col31 (type: string), _col32 (type: string), _col38 (type: int), _col41 (type: string), _col9 (type: int)\n                                  outputColumnNames: _col1, _col11, _col13, _col14, _col15, _col21, _col25, _col27, _col29, _col3, _col31, _col32, _col38, _col41, _col9\n                                  Statistics: Num rows: 22377236 Data size: 1762553600 Basic stats: COMPLETE Column stats: NONE\n                                  Map Join Operator\n                                    condition map:\n                                         Inner Join 0 to 1\n                                    condition expressions:\n                                      0 \n                                      1 {_col1} {_col9} {_col11} {_col13} {_col14} {_col15} {_col21} {_col25} {_col27} {_col29} {_col31} {_col32} {_col38} {_col41}\n                                    keys:\n                                      0 _col0 (type: int)\n                                      1 _col3 (type: int)\n                                    outputColumnNames: _col2, _col10, _col12, _col14, _col15, _col16, _col22, _col26, _col28, _col30, _col32, _col33, _col39, _col42\n                                    input vertices:\n                                      0 Map 37\n                                    Statistics: Num rows: 24614960 Data size: 1938808960 Basic stats: COMPLETE Column stats: NONE\n                                    Select Operator\n                                      expressions: _col10 (type: int), _col12 (type: int), _col14 (type: float), _col15 (type: float), _col16 (type: float), _col2 (type: int), _col22 (type: int), _col26 (type: int), _col28 (type: int), _col30 (type: int), _col32 (type: string), _col33 (type: string), _col39 (type: int), _col42 (type: string)\n                                      outputColumnNames: _col10, _col12, _col14, _col15, _col16, _col2, _col22, _col26, _col28, _col30, _col32, _col33, _col39, _col42\n                                      Statistics: Num rows: 24614960 Data size: 1938808960 Basic stats: COMPLETE Column stats: NONE\n                                      Map Join Operator\n                                        condition map:\n                                             Inner Join 0 to 1\n                                        condition expressions:\n                                          0 \n                                          1 {_col10} {_col12} {_col14} {_col15} {_col16} {_col22} {_col26} {_col28} {_col30} {_col32} {_col33} {_col39} {_col42}\n                                        keys:\n                                          0 _col0 (type: int)\n                                          1 _col2 (type: int)\n                                        outputColumnNames: _col11, _col13, _col15, _col16, _col17, _col23, _col27, _col29, _col31, _col33, _col34, _col40, _col43\n                                        input vertices:\n                                          0 Map 17\n                                        Statistics: Num rows: 27076456 Data size: 2132689920 Basic stats: COMPLETE Column stats: NONE\n                                        Select Operator\n                                          expressions: _col11 (type: int), _col13 (type: int), _col15 (type: float), _col16 (type: float), _col17 (type: float), _col23 (type: int), _col27 (type: int), _col29 (type: int), _col31 (type: int), _col33 (type: string), _col34 (type: string), _col40 (type: int), _col43 (type: string)\n                                          outputColumnNames: _col11, _col13, _col15, _col16, _col17, _col23, _col27, _col29, _col31, _col33, _col34, _col40, _col43\n                                          Statistics: Num rows: 27076456 Data size: 2132689920 Basic stats: COMPLETE Column stats: NONE\n                                          Map Join Operator\n                                            condition map:\n                                                 Inner Join 0 to 1\n                                            condition expressions:\n                                              0 {_col1} {_col2} {_col3} {_col4}\n                                              1 {_col13} {_col15} {_col16} {_col17} {_col23} {_col27} {_col29} {_col31} {_col33} {_col34} {_col40} {_col43}\n                                            keys:\n                                              0 _col0 (type: int)\n                                              1 _col11 (type: int)\n                                            outputColumnNames: _col1, _col2, _col3, _col4, _col18, _col20, _col21, _col22, _col28, _col32, _col34, _col36, _col38, _col39, _col45, _col48\n                                            input vertices:\n                                              0 Map 43\n                                            Statistics: Num rows: 29784102 Data size: 2345958912 Basic stats: COMPLETE Column stats: NONE\n                                            Select Operator\n                                              expressions: _col1 (type: string), _col18 (type: int), _col2 (type: string), _col20 (type: float), _col21 (type: float), _col22 (type: float), _col28 (type: int), _col3 (type: string), _col32 (type: int), _col34 (type: int), _col36 (type: int), _col38 (type: string), _col39 (type: string), _col4 (type: string), _col45 (type: int), _col48 (type: string)\n                                              outputColumnNames: _col1, _col18, _col2, _col20, _col21, _col22, _col28, _col3, _col32, _col34, _col36, _col38, _col39, _col4, _col45, _col48\n                                              Statistics: Num rows: 29784102 Data size: 2345958912 Basic stats: COMPLETE Column stats: NONE\n                                              Map Join Operator\n                                                condition map:\n                                                     Inner Join 0 to 1\n                                                condition expressions:\n                                                  0 {_col1} {_col2} {_col3} {_col4}\n                                                  1 {_col1} {_col2} {_col3} {_col4} {_col18} {_col20} {_col21} {_col22} {_col32} {_col34} {_col36} {_col38} {_col39} {_col45} {_col48}\n                                                keys:\n                                                  0 _col0 (type: int)\n                                                  1 _col28 (type: int)\n                                                outputColumnNames: _col1, _col2, _col3, _col4, _col6, _col7, _col8, _col9, _col23, _col25, _col26, _col27, _col37, _col39, _col41, _col43, _col44, _col50, _col53\n                                                input vertices:\n                                                  0 Map 28\n                                                Statistics: Num rows: 32762512 Data size: 2580554752 Basic stats: COMPLETE Column stats: NONE\n                                                Select Operator\n                                                  expressions: _col1 (type: string), _col2 (type: string), _col23 (type: int), _col25 (type: float), _col26 (type: float), _col27 (type: float), _col3 (type: string), _col37 (type: int), _col39 (type: int), _col4 (type: string), _col41 (type: int), _col43 (type: string), _col44 (type: string), _col50 (type: int), _col53 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string)\n                                                  outputColumnNames: _col1, _col2, _col23, _col25, _col26, _col27, _col3, _col37, _col39, _col4, _col41, _col43, _col44, _col50, _col53, _col6, _col7, _col8, _col9\n                                                  Statistics: Num rows: 32762512 Data size: 2580554752 Basic stats: COMPLETE Column stats: NONE\n                                                  Map Join Operator\n                                                    condition map:\n                                                         Inner Join 0 to 1\n                                                    condition expressions:\n                                                      0 \n                                                      1 {_col1} {_col2} {_col3} {_col4} {_col6} {_col7} {_col8} {_col9} {_col25} {_col26} {_col27} {_col37} {_col39} {_col41} {_col43} {_col44} {_col50} {_col53}\n                                                    keys:\n                                                      0 _col0 (type: int)\n                                                      1 _col23 (type: int)\n                                                    outputColumnNames: _col2, _col3, _col4, _col5, _col7, _col8, _col9, _col10, _col26, _col27, _col28, _col38, _col40, _col42, _col44, _col45, _col51, _col54\n                                                    input vertices:\n                                                      0 Map 34\n                                                    Statistics: Num rows: 36038764 Data size: 2838610176 Basic stats: COMPLETE Column stats: NONE\n                                                    Select Operator\n                                                      expressions: _col54 (type: string), _col51 (type: int), _col44 (type: string), _col45 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col38 (type: int), _col40 (type: int), _col42 (type: int), _col26 (type: float), _col27 (type: float), _col28 (type: float)\n                                                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17\n                                                      Statistics: Num rows: 36038764 Data size: 2838610176 Basic stats: COMPLETE Column stats: NONE\n                                                      Group By Operator\n                                                        aggregations: count(), sum(_col15), sum(_col16), sum(_col17)\n                                                        keys: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                                        mode: hash\n                                                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                                                        Statistics: Num rows: 36038764 Data size: 2838610176 Basic stats: COMPLETE Column stats: NONE\n                                                        Reduce Output Operator\n                                                          key expressions: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                                          sort order: +++++++++++++++\n                                                          Map-reduce partition columns: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: int), _col14 (type: int)\n                                                          Statistics: Num rows: 36038764 Data size: 2838610176 Basic stats: COMPLETE Column stats: NONE\n                                                          value expressions: _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double)\n        Reducer 21 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: count(VALUE._col0), sum(VALUE._col1), sum(VALUE._col2), sum(VALUE._col3)\n                keys: KEY._col0 (type: string), KEY._col1 (type: int), KEY._col2 (type: string), KEY._col3 (type: string), KEY._col4 (type: string), KEY._col5 (type: string), KEY._col6 (type: string), KEY._col7 (type: string), KEY._col8 (type: string), KEY._col9 (type: string), KEY._col10 (type: string), KEY._col11 (type: string), KEY._col12 (type: int), KEY._col13 (type: int), KEY._col14 (type: int)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16, _col17, _col18\n                Statistics: Num rows: 18019382 Data size: 1419305088 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col0 (type: string), _col1 (type: int), _col2 (type: string), _col3 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col15 (type: bigint), _col16 (type: double), _col17 (type: double), _col18 (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9, _col10, _col11, _col12, _col13, _col14, _col15, _col16\n                  Statistics: Num rows: 18019382 Data size: 1419305088 Basic stats: COMPLETE Column stats: NONE\n                  Reduce Output Operator\n                    key expressions: _col1 (type: int), _col2 (type: string), _col3 (type: string)\n                    sort order: +++\n                    Map-reduce partition columns: _col1 (type: int), _col2 (type: string), _col3 (type: string)\n                    Statistics: Num rows: 18019382 Data size: 1419305088 Basic stats: COMPLETE Column stats: NONE\n                    value expressions: _col0 (type: string), _col4 (type: string), _col5 (type: string), _col6 (type: string), _col7 (type: string), _col8 (type: string), _col9 (type: string), _col10 (type: string), _col11 (type: string), _col12 (type: int), _col13 (type: bigint), _col14 (type: double), _col15 (type: double), _col16 (type: double)\n            Execution mode: vectorized\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n      Processor Tree:\n        ListSink\n\n{code}\n\n\nQuery \n{code}\nselect cs1.product_name ,cs1.store_name ,cs1.store_zip ,cs1.b_street_number ,cs1.b_streen_name ,cs1.b_city\n     ,cs1.b_zip ,cs1.c_street_number ,cs1.c_street_name ,cs1.c_city ,cs1.c_zip ,cs1.syear ,cs1.cnt\n     ,cs1.s1 ,cs1.s2 ,cs1.s3\n     ,cs2.s1 ,cs2.s2 ,cs2.s3 ,cs2.syear ,cs2.cnt\nfrom\n(select i_product_name as product_name ,i_item_sk as item_sk ,s_store_name as store_name\n     ,s_zip as store_zip ,ad1.ca_street_number as b_street_number ,ad1.ca_street_name as b_streen_name\n     ,ad1.ca_city as b_city ,ad1.ca_zip as b_zip ,ad2.ca_street_number as c_street_number\n     ,ad2.ca_street_name as c_street_name ,ad2.ca_city as c_city ,ad2.ca_zip as c_zip\n     ,d1.d_year as syear ,d2.d_year as fsyear ,d3.d_year as s2year ,count(*) as cnt\n     ,sum(ss_wholesale_cost) as s1 ,sum(ss_list_price) as s2 ,sum(ss_coupon_amt) as s3\n  FROM   store_sales\n        JOIN store_returns ON store_sales.ss_item_sk = store_returns.sr_item_sk and store_sales.ss_ticket_number = store_returns.sr_ticket_number\n        JOIN customer ON store_sales.ss_customer_sk = customer.c_customer_sk\n        JOIN date_dim d1 ON store_sales.ss_sold_date_sk = d1.d_date_sk\n        JOIN date_dim d2 ON customer.c_first_sales_date_sk = d2.d_date_sk \n        JOIN date_dim d3 ON customer.c_first_shipto_date_sk = d3.d_date_sk\n        JOIN store ON store_sales.ss_store_sk = store.s_store_sk\n        JOIN customer_demographics cd1 ON store_sales.ss_cdemo_sk= cd1.cd_demo_sk\n        JOIN customer_demographics cd2 ON customer.c_current_cdemo_sk = cd2.cd_demo_sk\n        JOIN promotion ON store_sales.ss_promo_sk = promotion.p_promo_sk\n        JOIN household_demographics hd1 ON store_sales.ss_hdemo_sk = hd1.hd_demo_sk\n        JOIN household_demographics hd2 ON customer.c_current_hdemo_sk = hd2.hd_demo_sk\n        JOIN customer_address ad1 ON store_sales.ss_addr_sk = ad1.ca_address_sk\n        JOIN customer_address ad2 ON customer.c_current_addr_sk = ad2.ca_address_sk\n        JOIN income_band ib1 ON hd1.hd_income_band_sk = ib1.ib_income_band_sk\n        JOIN income_band ib2 ON hd2.hd_income_band_sk = ib2.ib_income_band_sk\n        JOIN item ON store_sales.ss_item_sk = item.i_item_sk\n        JOIN\n (select cs_item_sk\n        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund\n  from catalog_sales JOIN catalog_returns\n  ON catalog_sales.cs_item_sk = catalog_returns.cr_item_sk\n    and catalog_sales.cs_order_number = catalog_returns.cr_order_number\n  group by cs_item_sk\n  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)) cs_ui\nON store_sales.ss_item_sk = cs_ui.cs_item_sk\n  WHERE  \n         cd1.cd_marital_status <> cd2.cd_marital_status and\n         i_color in ('maroon','burnished','dim','steel','navajo','chocolate') and\n         i_current_price between 35 and 35 + 10 and\n         i_current_price between 35 + 1 and 35 + 15\ngroup by i_product_name ,i_item_sk ,s_store_name ,s_zip ,ad1.ca_street_number\n       ,ad1.ca_street_name ,ad1.ca_city ,ad1.ca_zip ,ad2.ca_street_number\n       ,ad2.ca_street_name ,ad2.ca_city ,ad2.ca_zip ,d1.d_year ,d2.d_year ,d3.d_year\n) cs1\nJOIN\n(select i_product_name as product_name ,i_item_sk as item_sk ,s_store_name as store_name\n     ,s_zip as store_zip ,ad1.ca_street_number as b_street_number ,ad1.ca_street_name as b_streen_name\n     ,ad1.ca_city as b_city ,ad1.ca_zip as b_zip ,ad2.ca_street_number as c_street_number\n     ,ad2.ca_street_name as c_street_name ,ad2.ca_city as c_city ,ad2.ca_zip as c_zip\n     ,d1.d_year as syear ,d2.d_year as fsyear ,d3.d_year as s2year ,count(*) as cnt\n     ,sum(ss_wholesale_cost) as s1 ,sum(ss_list_price) as s2 ,sum(ss_coupon_amt) as s3\n  FROM   store_sales\n        JOIN store_returns ON store_sales.ss_item_sk = store_returns.sr_item_sk and store_sales.ss_ticket_number = store_returns.sr_ticket_number\n        JOIN customer ON store_sales.ss_customer_sk = customer.c_customer_sk\n        JOIN date_dim d1 ON store_sales.ss_sold_date_sk = d1.d_date_sk\n        JOIN date_dim d2 ON customer.c_first_sales_date_sk = d2.d_date_sk \n        JOIN date_dim d3 ON customer.c_first_shipto_date_sk = d3.d_date_sk\n        JOIN store ON store_sales.ss_store_sk = store.s_store_sk\n        JOIN customer_demographics cd1 ON store_sales.ss_cdemo_sk= cd1.cd_demo_sk\n        JOIN customer_demographics cd2 ON customer.c_current_cdemo_sk = cd2.cd_demo_sk\n        JOIN promotion ON store_sales.ss_promo_sk = promotion.p_promo_sk\n        JOIN household_demographics hd1 ON store_sales.ss_hdemo_sk = hd1.hd_demo_sk\n        JOIN household_demographics hd2 ON customer.c_current_hdemo_sk = hd2.hd_demo_sk\n        JOIN customer_address ad1 ON store_sales.ss_addr_sk = ad1.ca_address_sk\n        JOIN customer_address ad2 ON customer.c_current_addr_sk = ad2.ca_address_sk\n        JOIN income_band ib1 ON hd1.hd_income_band_sk = ib1.ib_income_band_sk\n        JOIN income_band ib2 ON hd2.hd_income_band_sk = ib2.ib_income_band_sk\n        JOIN item ON store_sales.ss_item_sk = item.i_item_sk\n        JOIN\n (select cs_item_sk\n        ,sum(cs_ext_list_price) as sale,sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit) as refund\n  from catalog_sales JOIN catalog_returns\n  ON catalog_sales.cs_item_sk = catalog_returns.cr_item_sk\n    and catalog_sales.cs_order_number = catalog_returns.cr_order_number\n  group by cs_item_sk\n  having sum(cs_ext_list_price)>2*sum(cr_refunded_cash+cr_reversed_charge+cr_store_credit)) cs_ui\nON store_sales.ss_item_sk = cs_ui.cs_item_sk\n  WHERE  \n         cd1.cd_marital_status <> cd2.cd_marital_status and\n         i_color in ('maroon','burnished','dim','steel','navajo','chocolate') and\n         i_current_price between 35 and 35 + 10 and\n         i_current_price between 35 + 1 and 35 + 15\ngroup by i_product_name ,i_item_sk ,s_store_name ,s_zip ,ad1.ca_street_number\n       ,ad1.ca_street_name ,ad1.ca_city ,ad1.ca_zip ,ad2.ca_street_number\n       ,ad2.ca_street_name ,ad2.ca_city ,ad2.ca_zip ,d1.d_year ,d2.d_year ,d3.d_year\n) cs2\nON cs1.item_sk=cs2.item_sk\nwhere \n     cs1.syear = 2000 and\n     cs2.syear = 2000 + 1 and\n     cs2.cnt <= cs1.cnt and\n     cs1.store_name = cs2.store_name and\n     cs1.store_zip = cs2.store_zip\norder by cs1.product_name ,cs1.store_name ,cs2.cnt\n{code}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12671940","id":"12671940","filename":"HIVE-8263.1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhbutani","name":"rhbutani","key":"rhbutani","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Harish Butani","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-30T01:49:17.837+0000","size":1945,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12671940/HIVE-8263.1.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12671343","id":"12671343","filename":"Q64_cbo_on_explain_log.txt.zip","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-25T23:24:17.597+0000","size":1411987,"mimeType":"application/zip","content":"https://issues.apache.org/jira/secure/attachment/12671343/Q64_cbo_on_explain_log.txt.zip"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"CBO : TPC-DS Q64 is item is joined last with store_sales while it should be first as it is the most selective","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12744161/comment/14148482","id":"14148482","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"body":"Hive debug log logical plans\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-25T23:24:17.610+0000","updated":"2014-09-25T23:24:17.610+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12744161/comment/14153237","id":"14153237","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"body":"\n\n{color:red}Overall{color}: -1 at least one tests failed\n\nHere are the results of testing the latest attachment:\nhttps://issues.apache.org/jira/secure/attachment/12671940/HIVE-8263.1.patch\n\n{color:red}ERROR:{color} -1 due to 1 failed/errored test(s), 6371 tests executed\n*Failed tests:*\n{noformat}\norg.apache.hadoop.hive.cli.TestCliDriver.testCliDriver_groupby_bigdata\n{noformat}\n\nTest results: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1053/testReport\nConsole output: http://ec2-174-129-184-35.compute-1.amazonaws.com/jenkins/job/PreCommit-HIVE-TRUNK-Build/1053/console\nTest logs: http://ec2-174-129-184-35.compute-1.amazonaws.com/logs/PreCommit-HIVE-TRUNK-Build-1053/\n\nMessages:\n{noformat}\nExecuting org.apache.hive.ptest.execution.PrepPhase\nExecuting org.apache.hive.ptest.execution.ExecutionPhase\nExecuting org.apache.hive.ptest.execution.ReportingPhase\nTests exited with: TestsFailedException: 1 tests failed\n{noformat}\n\nThis message is automatically generated.\n\nATTACHMENT ID: 12671940","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hiveqa","name":"hiveqa","key":"hiveqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hiveqa&avatarId=17060","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hiveqa&avatarId=17060","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hiveqa&avatarId=17060","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hiveqa&avatarId=17060"},"displayName":"Hive QA","active":true,"timeZone":"America/Chicago"},"created":"2014-09-30T14:53:31.771+0000","updated":"2014-09-30T14:53:31.771+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12744161/comment/14153446","id":"14153446","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhbutani","name":"rhbutani","key":"rhbutani","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Harish Butani","active":true,"timeZone":"America/Los_Angeles"},"body":"Failure in 'groupby_bigdata' is not related to this patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rhbutani","name":"rhbutani","key":"rhbutani","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Harish Butani","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-30T17:43:11.175+0000","updated":"2014-09-30T17:43:11.175+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12744161/comment/14153548","id":"14153548","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"+1 \n[~vikram.dixit] It will be good to have this in 0.14 as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-09-30T18:47:28.224+0000","updated":"2014-09-30T18:47:28.224+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12744161/comment/14154082","id":"14154082","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vikram.dixit","name":"vikram.dixit","key":"vikram.dixit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vikram Dixit K","active":true,"timeZone":"America/Los_Angeles"},"body":"+1 for 0.14","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vikram.dixit","name":"vikram.dixit","key":"vikram.dixit","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vikram Dixit K","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-10-01T00:21:32.330+0000","updated":"2014-10-01T00:21:32.330+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12744161/comment/14154379","id":"14154379","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"Committed to 0.14 & trunk. Thanks, Harish!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-10-01T05:29:02.536+0000","updated":"2014-10-01T05:29:02.536+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12744161/comment/14210996","id":"14210996","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"body":"This has been fixed in 0.14 release. Please open new jira if you see any issues.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-11-13T19:43:35.258+0000","updated":"2014-11-13T19:43:35.258+0000"}],"maxResults":7,"total":7,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-8263/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i20i27:"}}