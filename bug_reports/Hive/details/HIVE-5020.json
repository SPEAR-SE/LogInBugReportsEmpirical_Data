{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12662490","self":"https://issues.apache.org/jira/rest/api/2/issue/12662490","key":"HIVE-5020","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2013-08-07T20:52:46.127+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Jul 02 23:32:06 UTC 2014","customfield_12310420":"342493","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-5020/watchers","watchCount":6,"isWatching":false},"created":"2013-08-07T20:46:47.672+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[{"id":"12390807","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12390807","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12723477","key":"HIVE-7282","self":"https://issues.apache.org/jira/rest/api/2/issue/12723477","fields":{"summary":"HCatLoader fail to load Orc map with null key","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12447209","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12447209","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12858212","key":"HIVE-11625","self":"https://issues.apache.org/jira/rest/api/2/issue/12858212","fields":{"summary":"Map instances with null keys are not properly handled for Parquet tables","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/7","id":"7","description":"The sub-task of the issue","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype","name":"Sub-task","subtask":true,"avatarId":21146}}}},{"id":"12447208","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12447208","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12861155","key":"HIVE-11713","self":"https://issues.apache.org/jira/rest/api/2/issue/12861155","fields":{"summary":"Map instances with null keys are not written unless table file format is ORC. ","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}},{"id":"12390518","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12390518","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"inwardIssue":{"id":"12723477","key":"HIVE-7282","self":"https://issues.apache.org/jira/rest/api/2/issue/12723477","fields":{"summary":"HCatLoader fail to load Orc map with null key","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-10-27T20:35:46.663+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12320409","id":"12320409","name":"HCatalog","description":"Tracks issues related to the HCatalog"}],"timeoriginalestimate":null,"description":"Currently, if someone has a null key in a map, HCatInputFormat will terminate with an NPE while trying to read it.\n\n{noformat}\njava.lang.NullPointerException\nat java.lang.String.compareTo(String.java:1167)\nat java.lang.String.compareTo(String.java:92)\nat java.util.TreeMap.put(TreeMap.java:545)\nat org.apache.hcatalog.data.HCatRecordSerDe.serializeMap(HCatRecordSerDe.java:222)\nat org.apache.hcatalog.data.HCatRecordSerDe.serializeField(HCatRecordSerDe.java:198)\nat org.apache.hcatalog.data.LazyHCatRecord.get(LazyHCatRecord.java:53)\nat org.apache.hcatalog.data.LazyHCatRecord.get(LazyHCatRecord.java:97)\nat org.apache.hcatalog.mapreduce.HCatRecordReader.nextKeyValue(HCatRecordReader.java:203)\n{noformat}\n\nThis is because we use a TreeMap to preserve order of elements in the map when reading from the underlying storage/serde.\n\nThis problem is easily fixed in a number of ways:\n\na) Switch to HashMap, which allows null keys. That does not preserve order of keys, which should not be important for map fields, but if we desire that, we have a solution for that too - LinkedHashMap, which would both retain order and allow us to insert null keys into the map.\n\nb) Ignore null keyed entries - check if the field we read is null, and if it is, then ignore that item in the record altogether. This way, HCat is robust in what it does - it does not terminate with an NPE, and it does not allow null keys in maps that might be problematic to layers above us that are not used to seeing nulls as keys in maps.\n\nWhy do I bring up the second fix? First, I bring it up because of the way we discovered this bug. When reading from an RCFile, we do not notice this bug. If the same query that produced the RCFile instead produces an Orcfile, and we try reading from it, we see this problem.\n\nRCFile seems to be quietly stripping any null key entries, whereas Orc retains them. This is why we didn't notice this problem for a long while, and suddenly, now, we are. Now, if we fix our code to allow nulls in map keys through to layers above, we expose layers above to this change, which may then cause them to break. (Technically, this is stretching the case because we already break now if they care) More importantly, though, we have a case now, where the same data will be exposed differently if it were stored as orc or if it were stored as rcfile. And as a layer that is supposed to make storage invisible to the end user, HCat should attempt to provide some consistency in how data behaves to the end user.\n\nSecondly, whether or not nulls should be supported as keys in Maps seems to be almost a religious view. Some people see it from a perspective of a \"mapping\", which lends itself to a \"Sure, if we encounter a null, we map to this other value\" kind of a view, whereas other people view it from a \"lookup index\" kind of view, which lends itself to a \"null as a key makes no sense - What kind of lookup do you expect to perform?\" kind of view. Both views have their points, and it makes sense to see if we need to support it.\n\nThat said...\n\nThere is another important concern at hand here: nulls in map keys might be due to bad data(corruption or loading error), and by stripping them, we might be silently hiding that from the user. So \"silent stripping\" is bad. This is an important point that does steer me towards the former approach, of passing it on to layers above, and standardize on an understanding that null keys in maps are acceptable data that layers above us have to handle. After that, it could be taken on as a further consistency fix, to fix RCFile so that it allows nulls in map keys.\n\nHaving gone through this discussion of standardization, another important question is whether or not there is actually a use-case for null keys in maps in data. If there isn't, maybe we shouldn't allow writing that in the first place, and both orc and rcfile must simply error out to the end user if they try to write a  null map key? Well, it is true that it is possible that data errors lead to null keys, but it's also possible that the user wants to store a mapping for value transformations, and they might have a transformation for null as well. In the case I encountered it, they were writing out an intermediate table after having read from a sparse table using a custom input format that generated an arbitrary number of columns, and were using the map to store column name mappings that would eventually be written out to another table. That seems a valid use, and we shouldn't prevent users from this sort of usage.\n\nAnother reason for not allowing null keys from a java perspective is locking and concurrency concerns, where locking on a null is a pain, per disagreements between Joshua Bloch and Doug Lea in the design of HashMap and ConcurrentHashMap. However, given that HCatalog reads are happening in a thread on a drone where there should be no parallel access of that record, and more importantly, this should strictly be used in a read-only kind of usage, we should not have to worry about that.\n\nIncreasingly, my preference is to change to LinkedHashMaps to allow null keys, and for consistency's sake, after this is tackled, to see if we should be fixing RCFile to allow null keys(this might be trickier since RCFile has a lot of other users that are probably currently working.)\n\nAnother option is to change to LinkedHashMap, but also add a conf key to hcat to allow the user to specify whether or not we want to strip nulls. That way, a user can specify what behaviour they like. That's more cruft though, and I don't want to go down that path unless there is a user that explicitly wants/needs that.\n\nAnyone have any other thoughts on the matter?","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"342798","customfield_12312823":null,"summary":"HCat reading null-key map entries causes NPE","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12662490/comment/13732719","id":"13732719","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=appodictic","name":"appodictic","key":"appodictic","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Edward Capriolo","active":true,"timeZone":"Etc/UTC"},"body":"If I had to hazard a guess I would say that the original implementation was about supporting thrift structures. Possibly if thrift does not support this case that design was not carried over.\n\nPersonally I think we SHOULD support NULL key and NULL value in maps. The map need not be sorted.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=appodictic","name":"appodictic","key":"appodictic","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Edward Capriolo","active":true,"timeZone":"Etc/UTC"},"created":"2013-08-07T20:52:46.127+0000","updated":"2013-08-07T20:52:46.127+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12662490/comment/13736421","id":"13736421","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dschorow","name":"dschorow","key":"dschorow","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Schorow","active":true,"timeZone":"America/Los_Angeles"},"body":"It sounds like b is the simplest and safest solution and would effectively make ORC work consistently with RC files.  \n\nIn Data Base semantics, NULL is a special value, so for example, NULL does not match NULL.  Hence I don't know what it means to have a NULL key, or to try to do a lookup with a NULL key.  I think such a lookup should never return a value, regardless of what is in the map.  It may be okay to have NULL values in a map.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dschorow","name":"dschorow","key":"dschorow","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"David Schorow","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-08-11T21:39:24.154+0000","updated":"2013-08-11T21:39:24.154+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12662490/comment/13740218","id":"13740218","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alangates","name":"alangates","key":"alangates","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alan Gates","active":true,"timeZone":"America/Los_Angeles"},"body":"I tend to agree with David that having a NULL key is dubious at best.  Though it's worth pointing out that SQL's semantics around NULL aren't consistent (NULL = NULL does not evaluate to true (nor false) but when grouping NULLs are collected together).  \n\nThe real question from an HCat perspective is \"What does Hive do?\"  If Hive allows you to have null keys (with ORC), then HCat should.  The question of whether Hive should have that is a bigger topic for a different day. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alangates","name":"alangates","key":"alangates","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alan Gates","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-08-14T21:30:27.150+0000","updated":"2013-08-14T21:30:27.150+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12662490/comment/14049238","id":"14049238","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"body":"Sorry for the late response to this jira, and thanks for the input, all. I'd initially wanted to give it time for more people to respond, and then this fell by the wayside.\n\nThrift structures do not support map null keys. I agree that sortedness is not important for maps, and in fact, we should not guarantee it for something that's just called a map.\n\nAnd while I'd like to see a usecase for nulls in keys supported, it looks like the conventional hive semantics for maps ignores null keys, and changing rcfile users so that they suddenly start getting null keys is a recipe for trouble for a lot of users. So having orc map to rc behaviour, and make that the standard \"hive\" behaviour might make more sense. [~owen.omalley]/[~prasanth_j], could you comment on what you think the impact of changing orc behaviour that way might be?\n\nHCat should adopt whatever behaviour we standardize on for hive, and can follow after that.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=sushanth","name":"sushanth","key":"sushanth","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=sushanth&avatarId=26812","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sushanth&avatarId=26812","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sushanth&avatarId=26812","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sushanth&avatarId=26812"},"displayName":"Sushanth Sowmyan","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-01T19:46:26.416+0000","updated":"2014-07-01T19:46:26.416+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12662490/comment/14050866","id":"14050866","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daijy","name":"daijy","key":"daijy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel Dai","active":true,"timeZone":"America/Los_Angeles"},"body":"I find the following comments in LazyMap.java: \n// LazyMap stores a map of Primitive LazyObjects to LazyObjects. Note that the\n// keys of the map cannot contain null.\n\nThis could be the reason when I try to load null map key from RC file, I end up with an infinite loop. \n\nTo be safe, it seems we shall disallow null map key. Even if we fix LazyMap, there could be other places we made the same assumption.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=daijy","name":"daijy","key":"daijy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Daniel Dai","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-07-02T23:32:06.625+0000","updated":"2014-07-02T23:32:06.625+0000"}],"maxResults":5,"total":5,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-5020/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1n2dz:"}}