{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12632497","self":"https://issues.apache.org/jira/rest/api/2/issue/12632497","key":"HIVE-4022","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2013-11-08T22:31:31.151+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Thu Jan 08 00:48:44 UTC 2015","customfield_12310420":"312993","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-4022/watchers","watchCount":7,"isWatching":false},"created":"2013-02-14T23:01:53.616+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2015-01-08T00:48:44.529+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12312585","id":"12312585","name":"Serializers/Deserializers","description":"Tracks issues dealing with serdes"}],"timeoriginalestimate":null,"description":"Originally thought to be Avro-specific, and first noted with respect to HIVE-3528 \"Avro SerDe doesn't handle serializing Nullable types that require access to a Schema\", it turns out even native Hive tables cannot store NULL in a STRUCT field or for the entire STRUCT itself, at least when the NULL is specified directly in the INSERT statement.\n\nAgain, this affects both Avro-backed tables and native Hive tables.\n\n***For native Hive tables:\n\nThe following:\n\necho 1,2 >twovalues.csv\nhive\nCREATE TABLE tc (x INT, y INT) ROW FORMAT DELIMITED FIELDS TERMINATED BY ',';\nLOAD DATA LOCAL INPATH 'twovalues.csv' INTO TABLE tc;\nCREATE TABLE oc (z STRUCT<a: int, b: int>);\nINSERT INTO TABLE oc SELECT null FROM tc;\n\nproduces the error\n\nFAILED: SemanticException [Error 10044]: Line 1:18 Cannot insert into target table because column number/types are different 'oc': Cannot convert column 0 from void to struct<a:int,b:int>.\n\nThe following:\n\nINSERT INTO TABLE oc SELECT named_struct('a', null, 'b', null) FROM tc;\n\nproduces the error:\n\nFAILED: SemanticException [Error 10044]: Line 1:18 Cannot insert into target table because column number/types are different 'oc': Cannot convert column 0 from struct<a:void,b:void> to struct<a:int,b:int>.\n\n***For Avro:\n\nIn HIVE-3528, there is in fact a null-struct test case in line 14 of\nhttps://github.com/apache/hive/blob/15cc604bf10f4c2502cb88fb8bb3dcd45647cf2c/data/files/csv.txt\n\nThe test script at\nhttps://github.com/apache/hive/blob/12d6f3e7d21f94e8b8490b7c6d291c9f4cac8a4f/ql/src/test/queries/clientpositive/avro_nullable_fields.q\n\ndoes indeed work.  But in that test, the query gets all of its data from a test table verbatim:\n\nINSERT OVERWRITE TABLE as_avro SELECT * FROM test_serializer;\n\nIf instead we stick in a hard-coded null for the struct directly into the query, it fails:\n\nINSERT OVERWRITE TABLE as_avro SELECT string1, int1, tinyint1, smallint1, bigint1, boolean1, float1, double1, list1, map1, null, enum1, nullableint, bytes1, fixed1 FROM test_serializer;\n\nwith the following error:\n\nFAILED: SemanticException [Error 10044]: Line 1:23 Cannot insert into target table because column number/types are different 'as_avro': Cannot convert column 10 from void to struct<sint:int,sboolean:boolean,sstring:string>.\n\nNote, though, that substituting a hard-coded null for string1 (and restoring struct1 into the query) does work:\n\nINSERT OVERWRITE TABLE as_avro SELECT null, int1, tinyint1, smallint1, bigint1, boolean1, float1, double1, list1, map1, struct1, enum1, nullableint, bytes1, fixed1 FROM test_serializer;\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"313339","customfield_12312823":null,"summary":"Structs and struct fields cannot be NULL in INSERT statements","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelmalak","name":"michaelmalak","key":"michaelmalak","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=michaelmalak&avatarId=22349","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=michaelmalak&avatarId=22349","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=michaelmalak&avatarId=22349","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=michaelmalak&avatarId=22349"},"displayName":"Michael Malak","active":true,"timeZone":"America/Denver"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelmalak","name":"michaelmalak","key":"michaelmalak","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=michaelmalak&avatarId=22349","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=michaelmalak&avatarId=22349","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=michaelmalak&avatarId=22349","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=michaelmalak&avatarId=22349"},"displayName":"Michael Malak","active":true,"timeZone":"America/Denver"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12632497/comment/13582662","id":"13582662","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelmalak","name":"michaelmalak","key":"michaelmalak","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=michaelmalak&avatarId=22349","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=michaelmalak&avatarId=22349","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=michaelmalak&avatarId=22349","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=michaelmalak&avatarId=22349"},"displayName":"Michael Malak","active":true,"timeZone":"America/Denver"},"body":"Note that there is a workaround for the case of setting STRUCT fields to NULL, but not for setting the whole STRUCT to a NULL.\n\nThe following workaround does work:\n\nINSERT INT TABLE oc SELECT named_struct('a', cast(null as int), 'b', cast(null as int)) FROM tc;\n\nBut there is no equivalent workaround to casting the whole STRUCT to NULL, as noted in the first comment of https://issues.apache.org/jira/browse/HIVE-1287","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=michaelmalak","name":"michaelmalak","key":"michaelmalak","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=michaelmalak&avatarId=22349","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=michaelmalak&avatarId=22349","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=michaelmalak&avatarId=22349","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=michaelmalak&avatarId=22349"},"displayName":"Michael Malak","active":true,"timeZone":"America/Denver"},"created":"2013-02-20T23:34:00.513+0000","updated":"2013-02-20T23:34:00.513+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12632497/comment/13817769","id":"13817769","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ahains","name":"ahains","key":"ahains","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Adrian Hains","active":true,"timeZone":"Etc/UTC"},"body":"I found a workaround to get me past this restriction. I had a need to add some struct columns to a table t1 by way of copying the data to a new table t2 with the correct updated schema. Trying to insert directly to t2 by selecting from t1 with null literals failed for me as described in this jira ticket. To work around this I created an additional table t2copy that has the same schema as t2. Then I did an insert to t1 selecting from t2 left outer join t2copy, and referencing the t2copy.newStructColumn instance to have a table-sourced null value pass to t1. This worked. It may be that t2copy having the same struct definition is unnecessary, and a simple empty table with a bogus struct column definition would have worked just as well.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ahains","name":"ahains","key":"ahains","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Adrian Hains","active":true,"timeZone":"Etc/UTC"},"created":"2013-11-08T22:31:31.151+0000","updated":"2013-11-08T22:31:31.151+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12632497/comment/14268625","id":"14268625","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alex.behm","name":"alex.behm","key":"alex.behm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alexander Behm","active":true,"timeZone":"Etc/UTC"},"body":"Easier workaround:\nIF(false, named_struct(\"a\", 1), NULL)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=alex.behm","name":"alex.behm","key":"alex.behm","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Alexander Behm","active":true,"timeZone":"Etc/UTC"},"created":"2015-01-08T00:48:44.529+0000","updated":"2015-01-08T00:48:44.529+0000"}],"maxResults":3,"total":3,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-4022/votes","votes":5,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1i0hr:"}}