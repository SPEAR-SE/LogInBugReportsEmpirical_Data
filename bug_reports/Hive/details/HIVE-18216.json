{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13122733","self":"https://issues.apache.org/jira/rest/api/2/issue/13122733","key":"HIVE-18216","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":null,"customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"2017-12-05 02:11:56.205","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-18216/watchers","watchCount":1,"isWatching":false},"created":"2017-12-05T02:11:56.205+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12342053","id":"12342053","name":"2.3.2","archived":false,"released":true,"releaseDate":"2017-11-13"}],"issuelinks":[],"customfield_12312339":null,"assignee":null,"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-12-05T02:11:56.205+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[],"timeoriginalestimate":null,"description":"When the Text is corrupted, the following loop become infinite.\r\nThis is because in hadoop.io.Text.bytesToCodePoint(), when extraBytesToRead == -1, the index in the ByteBuffer is not moved, and thus, ByteBuffer.remaining() is always > 0.\r\nAnd it deletionSet.contains(-1), then this loop become infinite.\r\n\r\n{code:java}\r\n  private String processInput(Text input) {\r\n    StringBuilder resultBuilder = new StringBuilder();\r\n    // Obtain the byte buffer from the input string so we can traverse it code point by code point\r\n    ByteBuffer inputBytes = ByteBuffer.wrap(input.getBytes(), 0, input.getLength());\r\n    // Traverse the byte buffer containing the input string one code point at a time\r\n    while (inputBytes.hasRemaining()) {\r\n      int inputCodePoint = Text.bytesToCodePoint(inputBytes);\r\n      // If the code point exists in deletion set, no need to emit out anything for this code point.\r\n      // Continue on to the next code point\r\n      if (deletionSet.contains(inputCodePoint)) {\r\n        continue;\r\n      }\r\n\r\n      Integer replacementCodePoint = replacementMap.get(inputCodePoint);\r\n      // If a replacement exists for this code point, emit out the replacement and append it to the\r\n      // output string. If no such replacement exists, emit out the original input code point\r\n      char[] charArray = Character.toChars((replacementCodePoint != null) ? replacementCodePoint\r\n          : inputCodePoint);\r\n      resultBuilder.append(charArray);\r\n    }\r\n    String resultString = resultBuilder.toString();\r\n    return resultString;\r\n  }\r\n{code}\r\n\r\nHere is the hadoop.io.Text.bytesToCodePoint() function.\r\n\r\n{code:java}\r\n  public static int bytesToCodePoint(ByteBuffer bytes) {\r\n    bytes.mark();\r\n    byte b = bytes.get();\r\n    bytes.reset();\r\n    int extraBytesToRead = bytesFromUTF8[(b & 0xFF)];\r\n    if (extraBytesToRead < 0) return -1; // trailing byte!\r\n    int ch = 0;\r\n\r\n    switch (extraBytesToRead) {\r\n    case 5: ch += (bytes.get() & 0xFF); ch <<= 6; /* remember, illegal UTF-8 */\r\n    case 4: ch += (bytes.get() & 0xFF); ch <<= 6; /* remember, illegal UTF-8 */\r\n    case 3: ch += (bytes.get() & 0xFF); ch <<= 6;\r\n    case 2: ch += (bytes.get() & 0xFF); ch <<= 6;\r\n    case 1: ch += (bytes.get() & 0xFF); ch <<= 6;\r\n    case 0: ch += (bytes.get() & 0xFF);\r\n    }\r\n    ch -= offsetsFromUTF8[extraBytesToRead];\r\n\r\n    return ch;\r\n  }\r\n{code}\r\n\r\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"When Text is corrupted, processInput() hangs indefinitely","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dustinday","name":"dustinday","key":"dustinday","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Doe","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dustinday","name":"dustinday","key":"dustinday","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Doe","active":true,"timeZone":"Etc/UTC"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[],"maxResults":0,"total":0,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-18216/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3nixz:"}}