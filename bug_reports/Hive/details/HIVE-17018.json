{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"13084444","self":"https://issues.apache.org/jira/rest/api/2/issue/13084444","key":"HIVE-17018","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_12312322":null,"customfield_12310220":"2017-07-05T17:19:53.351+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Tue Jul 18 22:23:35 UTC 2017","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":null,"customfield_12312321":null,"resolutiondate":null,"workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-17018/watchers","watchCount":6,"isWatching":false},"created":"2017-07-04T07:48:19.777+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"3.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[],"issuelinks":[],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2017-07-18T22:23:35.565+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"components":[],"timeoriginalestimate":null,"description":" we use \"hive.auto.convert.join.noconditionaltask.size\" as the threshold. it means  the sum of size for n-1 of the tables/partitions for a n-way join is smaller than it, it will be converted to a map join. for example, A join B join C join D join E. Big table is A(100M), small tables are B(10M),C(10M),D(10M),E(10M).  If we set hive.auto.convert.join.noconditionaltask.size=20M. In current code, E,D,B will be converted to map join but C will not be converted to map join. In my understanding, because hive.auto.convert.join.noconditionaltask.size can only contain E and D, so C and B should not be converted to map join.  \nLet's explain more why E can be converted to map join.\nin current code, [SparkMapJoinOptimizer#getConnectedMapJoinSize|https://github.com/apache/hive/blob/master/ql/src/java/org/apache/hadoop/hive/ql/optimizer/spark/SparkMapJoinOptimizer.java#L364] calculates all the mapjoins  in the parent path and child path. The search stops when encountering [UnionOperator or ReduceOperator|https://github.com/apache/hive/blob/master/ql/src/java/org/apache/hadoop/hive/ql/optimizer/spark/SparkMapJoinOptimizer.java#L381]. Because C is not converted to map join because {{connectedMapJoinSize + totalSize) > maxSize}} [see code|https://github.com/apache/hive/blob/master/ql/src/java/org/apache/hadoop/hive/ql/optimizer/spark/SparkMapJoinOptimizer.java#L330].The RS before the join of C remains. When calculating whether B will be converted to map join, {{getConnectedMapJoinSize}} returns 0 as encountering [RS |https://github.com/apache/hive/blob/master/ql/src/java/org/apache/hadoop/hive/ql/optimizer/spark/SparkMapJoinOptimizer.java#409] and causes  {{connectedMapJoinSize + totalSize) < maxSize}} matches.\n\n[~xuefuz] or [~jxiang]: can you help see whether this is a bug or not  as you are more familiar with SparkJoinOptimizer.\n","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12875926","id":"12875926","filename":"HIVE-17018_data_init.q","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-07-06T13:14:34.376+0000","size":791,"mimeType":"application/octet-stream","content":"https://issues.apache.org/jira/secure/attachment/12875926/HIVE-17018_data_init.q"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12875927","id":"12875927","filename":"HIVE-17018.q","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-07-06T13:14:34.085+0000","size":248,"mimeType":"application/octet-stream","content":"https://issues.apache.org/jira/secure/attachment/12875927/HIVE-17018.q"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12875925","id":"12875925","filename":"t3.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-07-06T13:14:44.896+0000","size":460,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12875925/t3.txt"}],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Small table is converted to map join even the total size of small tables exceeds the threshold(hive.auto.convert.join.noconditionaltask.size)","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16075106","id":"16075106","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xuefuz","name":"xuefuz","key":"xuefuz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xuefu Zhang","active":true,"timeZone":"America/Los_Angeles"},"body":"Ping [~csun] for comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=xuefuz","name":"xuefuz","key":"xuefuz","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Xuefu Zhang","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-07-05T17:19:53.351+0000","updated":"2017-07-05T17:19:53.351+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16075871","id":"16075871","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=csun","name":"csun","key":"csun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"},"displayName":"Chao Sun","active":true,"timeZone":"America/Los_Angeles"},"body":"[~kellyzly] I'm not sure if I understand what you described. Can you come up with a small example query that demonstrates the problem? thanks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=csun","name":"csun","key":"csun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"},"displayName":"Chao Sun","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-07-06T03:34:48.030+0000","updated":"2017-07-06T03:34:48.030+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16076105","id":"16076105","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"body":"[~csun]: attached an example(HIVE-17018_data_init.q, HIVE-17018.q)\nHIVE-17018\n{code}\nset hive.auto.convert.join.noconditionaltask.size=460;\nexplain select * from src,t1,t2,t3 where src.key=t1.key1 and src.value=t2.key2 and t1.value1=t3.value3;\n{code}\n\nthe explain \n{code}\n STAGE DEPENDENCIES:\n  Stage-2 is a root stage\n  Stage-3 depends on stages: Stage-2\n  Stage-1 depends on stages: Stage-3\n  Stage-0 depends on stages: Stage-1\n\nSTAGE PLANS:\n  Stage: Stage-2\n    Spark\n      DagName: root_20170706020353_8bc59675-8374-4ec7-ab9c-4904cd5fcadb:2\n      Vertices:\n        Map 5 \n            Map Operator Tree:\n                TableScan\n                  alias: t3\n                  Statistics: Num rows: 2 Data size: 460 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: value3 is not null (type: boolean)\n                    Statistics: Num rows: 2 Data size: 460 Basic stats: COMPLETE Column stats: NONE\n                    Spark HashTable Sink Operator\n                      keys:\n                        0 _col6 (type: string)\n                        1 value3 (type: string)\n            Local Work:\n              Map Reduce Local Work\n\n  Stage: Stage-3\n    Spark\n      DagName: root_20170706020353_8bc59675-8374-4ec7-ab9c-4904cd5fcadb:3\n      Vertices:\n        Map 3 \n            Map Operator Tree:\n                TableScan\n                  alias: t1\n                  Statistics: Num rows: 2 Data size: 460 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (key1 is not null and value1 is not null) (type: boolean)\n                    Statistics: Num rows: 2 Data size: 460 Basic stats: COMPLETE Column stats: NONE\n                    Spark HashTable Sink Operator\n                      keys:\n                        0 key (type: string)\n                        1 key1 (type: string)\n            Local Work:\n              Map Reduce Local Work\n\n  Stage: Stage-1\n    Spark\n      Edges:\n        Reducer 2 <- Map 1 (PARTITION-LEVEL SORT, 12), Map 4 (PARTITION-LEVEL SORT, 12)\n      DagName: root_20170706020353_8bc59675-8374-4ec7-ab9c-4904cd5fcadb:1\n      Vertices:\n        Map 1 \n            Map Operator Tree:\n                TableScan\n                  alias: src\n                  Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (key is not null and value is not null) (type: boolean)\n                    Statistics: Num rows: 29 Data size: 5812 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      keys:\n                        0 key (type: string)\n                        1 key1 (type: string)\n                      outputColumnNames: _col0, _col1, _col5, _col6\n                      input vertices:\n                        1 Map 3\n                      Statistics: Num rows: 31 Data size: 6393 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: string)\n                        sort order: +\n                        Map-reduce partition columns: _col1 (type: string)\n                        Statistics: Num rows: 31 Data size: 6393 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col0 (type: string), _col5 (type: string), _col6 (type: string)\n            Local Work:\n              Map Reduce Local Work\n        Map 4 \n            Map Operator Tree:\n                TableScan\n                  alias: t2\n                  Statistics: Num rows: 2 Data size: 460 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: key2 is not null (type: boolean)\n                    Statistics: Num rows: 2 Data size: 460 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      key expressions: key2 (type: string)\n                      sort order: +\n                      Map-reduce partition columns: key2 (type: string)\n                      Statistics: Num rows: 2 Data size: 460 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: value2 (type: string)\n        Reducer 2 \n            Local Work:\n              Map Reduce Local Work\n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                keys:\n                  0 _col1 (type: string)\n                  1 key2 (type: string)\n                outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11\n                Statistics: Num rows: 34 Data size: 7032 Basic stats: COMPLETE Column stats: NONE\n                Map Join Operator\n                  condition map:\n                       Inner Join 0 to 1\n                  keys:\n                    0 _col6 (type: string)\n                    1 value3 (type: string)\n                  outputColumnNames: _col0, _col1, _col5, _col6, _col10, _col11, _col15, _col16\n                  input vertices:\n                    1 Map 5\n                  Statistics: Num rows: 37 Data size: 7735 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ((_col0 = _col5) and (_col1 = _col10) and (_col6 = _col16)) (type: boolean)\n                    Statistics: Num rows: 4 Data size: 836 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: _col0 (type: string), _col1 (type: string), _col5 (type: string), _col6 (type: string), _col10 (type: string), _col11 (type: string), _col15 (type: string), _col16 (type: string)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7\n                      Statistics: Num rows: 4 Data size: 836 Basic stats: COMPLETE Column stats: NONE\n                      File Output Operator\n                        compressed: false\n                        Statistics: Num rows: 4 Data size: 836 Basic stats: COMPLETE Column stats: NONE\n                        table:\n                            input format: org.apache.hadoop.mapred.SequenceFileInputFormat\n                            output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat\n                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n      Processor Tree:\n        ListSink\n\n{code}\nThere are 4 tables src(TS\\[0\\] size:6393), t1(TS\\[1\\] size:460),t2(TS\\[2\\] size:460),t3(TS\\[3\\] size:460)\nthe {{hive.auto.convert.join.noconditionaltask.size}} is 460. Only t3 can be converted to map join. But in above explain you can see that both t3 and t1 are converted to map join.\nlet's explain more detaily:\n[maxSize|https://github.com/apache/hive/blob/master/ql/src/java/org/apache/hadoop/hive/ql/optimizer/spark/SparkMapJoinOptimizer.java#L188]:460\nthe logical plan is  \n{code}\nTS[0]-FIL[23]-RS[5]-JOIN[8]-RS[10]-JOIN[13]-RS[15]-JOIN[18]-FIL[22]-SEL[20]-FS[21]\nTS[1]-FIL[24]-RS[7]-JOIN[8]\nTS[2]-FIL[25]-RS[12]-JOIN[13]\nTS[3]-FIL[26]-RS[17]-JOIN[18]\n{code}\n\nafter TS\\[3\\] is converted to map join\n->\n{code}\nTS[0]-FIL[23]-RS[5]-JOIN[8]-RS[10]-JOIN[13]-MAPJOIN[27]-FIL[22]-SEL[20]-FS[21]\nTS[1]-FIL[24]-RS[7]-JOIN[8]\nTS[2]-FIL[25]-RS[12]-JOIN[13]\nTS[3]-FIL[26]-RS[17]-JOIN[18]\n{code}\n\nTS\\[2\\] can not converted to a map join because {{connectedMapJoinSize + sizeOf(TS\\[2\\]}} >maxSize, and TS\\[1\\] is converted to a map join\n{code}\nTS[0]-FIL[23]-MAPJOIN[28]-RS[10]-JOIN[13]-MAPJOIN[27]-FIL[22]-SEL[20]-FS[21]\nTS[1]-FIL[24]-RS[7]-JOIN[8]\nTS[2]-FIL[25]-RS[12]-JOIN[13]\nTS[3]-FIL[26]-RS[17]-JOIN[18]\n{code}\n\n\nthe reason why TS\\[1\\] can be converted to a map join(JOIN\\[8\\] can be converted to a map join):\n [SparkMapJoinOptimizer#getConnectedMapJoinSize| calculates all the mapjoins in the parent path and child path. \nBut the search stops when encountering UnionOperator or ReduceOperator. For {{RS\\[5\\]}}, it stop searching at RS\\[10\\], so {{SparkMapJoinOptimizer#getConnectedMapJoinSize}}\nis 0. {{connectedMapJoinSize + totalSize}} is 0+ sizeOf(TS\\[1\\])=460, {{connectedMapJoinSize + totalSize) < maxSize}} matches. \n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-07-06T07:41:33.588+0000","updated":"2017-07-06T07:41:33.588+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16076478","id":"16076478","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"body":"t3.txt, HIVE-17018_data_init.q, HIVE-17018.q is used to reproduce the case in the comment","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-07-06T13:15:21.416+0000","updated":"2017-07-06T13:15:21.416+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16078791","id":"16078791","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"body":"[~csun]: please spend some time to check whether this is a bug or not , have provided the example in the attachment,thanks!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-07-07T22:22:13.169+0000","updated":"2017-07-07T22:22:13.169+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16081648","id":"16081648","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=csun","name":"csun","key":"csun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"},"displayName":"Chao Sun","active":true,"timeZone":"America/Los_Angeles"},"body":"Thanks for the examples [~kellyzly]. Are you trying to explain that HoS is overly aggressive in turning JOINs to MAPJOINs when there're chained JOIN operators? E.g., the above {{JOIN 8}} cannot be converted.\n\nIf so, I'm thinking this may be OK since the two MAPJOINs are in different work (one in Map 1 and another in Reducer 2).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=csun","name":"csun","key":"csun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"},"displayName":"Chao Sun","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-07-11T04:40:32.002+0000","updated":"2017-07-11T04:40:32.002+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16081694","id":"16081694","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"body":"[~csun]: \n{quote}\nAre you trying to explain that HoS is overly aggressive in turning JOINs to MAPJOINs when there're chained JOIN operators?\n{quote}\nI can not explain. From the [code|https://github.com/apache/hive/blob/master/ql/src/java/org/apache/hadoop/hive/ql/optimizer/spark/SparkMapJoinOptimizer.java#L364], I guess this is what author wanted. \n\nBut from the definition of {{hive.auto.convert.join.noconditionaltask.size}}, I think this is confusing.\n{noformat}\nhive.auto.convert.join.noconditionaltask.size means the sum of size for n-1 of the tables/partitions for a n-way join is smaller than it, it will be converted to a map join. \n{noformat}\n\nThe code was committed by\n{noformat}\nHIVE-8943: Fix memory limit check for combine nested mapjoins [Spark Branch] (Szehon via Xuefu)  git-svn-id: https://svn.apache.org/repos/asf/hive/branches/spark@1643058 13f79535-47bb-0310-9956-ffa450edef68\n{noformat}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-07-11T05:34:31.731+0000","updated":"2017-07-11T05:34:31.731+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16081743","id":"16081743","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=csun","name":"csun","key":"csun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"},"displayName":"Chao Sun","active":true,"timeZone":"America/Los_Angeles"},"body":"[~kellyzly]: yes, this is to prevent a Spark task from using unbounded memory for small tables. I agree that the config {{hive.auto.convert.join.noconditionaltask.size}} is a little confusing. It has already diverged from its original purpose for MR in several ways (e.g., Spark uses in-memory data size while MR uses file size). A better way might be to have a separate config just for HoS, and maybe a limit on small table memory per executor.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=csun","name":"csun","key":"csun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"},"displayName":"Chao Sun","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-07-11T06:19:55.851+0000","updated":"2017-07-11T06:19:55.851+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16083058","id":"16083058","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"body":"[~csun]:  \n{quote}A better way might be to have a separate config just for HoS, and maybe a limit on small table memory per executor.{quote}\nwhat I confused is how to do this? the original code is to calculate whether the total mapjoin size in the same stage exceed the threshold or not.  Now create a new configure about calculating the threshold of all small tables according to the spark.executor.memory? If the total size of small tables in the same stage bigger than the spark.executor.memory, then not allow these small tables into the same stage but {{hive.auto.convert.join.nonconditionaltask.size}} is for caculating the total size of mapjoin size of small tables in the query? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-07-11T21:52:57.910+0000","updated":"2017-07-11T21:52:57.910+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16083411","id":"16083411","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=csun","name":"csun","key":"csun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"},"displayName":"Chao Sun","active":true,"timeZone":"America/Los_Angeles"},"body":"What I'm thinking is that the new config (say A) will be a value smaller than {{spark.executor.memory}} and will be divided among all tasks in the executor (so A / {{spark.executor.cores}}).\nAnother way is to specify A as the maximum hashtable memory for a single Spark task. This is the limit of the sum of the sizes for all hash tables in a single work (MapWork or ReduceWork). I think no change is needed for the code related to {{connectedMapJoinSize}}.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=csun","name":"csun","key":"csun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"},"displayName":"Chao Sun","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-07-12T04:12:48.571+0000","updated":"2017-07-12T04:12:48.571+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16083480","id":"16083480","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"body":"[~csun]: \n{quote}Another way is to specify A as the maximum hashtable memory for a single Spark task. This is the limit of the sum of the sizes for all hash tables in a single work (MapWork or ReduceWork).{quote}\nCurrently {{hvie.auto.convert.join.nonconditionaltask.size}} is the same behaviour as above.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-07-12T05:50:40.078+0000","updated":"2017-07-12T05:50:40.078+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16083610","id":"16083610","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=csun","name":"csun","key":"csun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"},"displayName":"Chao Sun","active":true,"timeZone":"America/Los_Angeles"},"body":"[~kellyzly] Yes. I think we don't need to change the existing behavior. I'm just suggesting that we might need a HoS specific config to replace {{hive.auto.convert.join.nonconditionaltask.size}}, so that it is less confusing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=csun","name":"csun","key":"csun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"},"displayName":"Chao Sun","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-07-12T07:58:40.194+0000","updated":"2017-07-12T07:58:40.194+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16084774","id":"16084774","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"body":"[~csun]: \n{quote}\nYes. I think we don't need to change the existing behavior. I'm just suggesting that we might need a HoS specific config to replace hive.auto.convert.join.nonconditionaltask.size\n{quote}\nrename {{hive.auto.convert.join.nonconditionaltask.size}} to {{hive.auto.convert.join.within.sparktask.size}}? and the description of the configuration \nis changed from\n{noformat} \nthe sum of size for n-1 of the tables/partitions for a n-way join is smaller than it\n{noformat}\n\nto \n{noformat}\n\nthe sum of size for n-1 of the tables/partitions for a n-way join is smaller than it in 1 MapTask or ReduceTask\n{noformat}\n\n\nCan you give some suggestion?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-07-12T21:48:55.457+0000","updated":"2017-07-14T01:19:53.148+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16088721","id":"16088721","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cartershanklin","name":"cartershanklin","key":"cartershanklin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Carter Shanklin","active":true,"timeZone":"America/Chicago"},"body":"My inputs:\n\nThat particular variable can't be renamed to something spark specific since all engines use it\nAdding a net new variable for Spark would increase confusion rather than decrease it.\n\nIt would be good to have some sort of descriptive name that applies to both Tez and MR. As pointed out there is no relation between what that variable used to do and what it does today, and the implication of changing that parameter is difficult to guess.\n\nMaybe a new variable like hive.auto.convert.join.max.hashtable.size could be introduced. Both engines switch to that variable at some point, then usage of the old variable could be deprecated and then removed.\n\nJust my inputs. /cc [~ashutoshc]","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=cartershanklin","name":"cartershanklin","key":"cartershanklin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Carter Shanklin","active":true,"timeZone":"America/Chicago"},"created":"2017-07-15T20:42:23.136+0000","updated":"2017-07-15T20:42:23.136+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16089220","id":"16089220","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"body":"[~cartershanklin]:  \n{quote}Maybe a new variable like hive.auto.convert.join.max.hashtable.size could be introduced. {quote}\n{{hive.auto.convert.join.max.hashtable.size}} is more understandable for users than {{hive.auto.convert.join.noconditionaltask.size}}. Actually, before this jira, what i understood about {{hive.auto.convert.join.noconditionaltask.size}} is the max size of all hash tables not the max size of all hash tables which can be contained in 1 Spark/Tez task.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kellyzly","name":"kellyzly","key":"kellyzly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"liyunzhang","active":true,"timeZone":"Asia/Shanghai"},"created":"2017-07-17T01:57:36.810+0000","updated":"2017-07-17T01:57:36.810+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/13084444/comment/16092277","id":"16092277","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=csun","name":"csun","key":"csun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"},"displayName":"Chao Sun","active":true,"timeZone":"America/Los_Angeles"},"body":"Agreed. I think in the mean time at least we should put more doc on how this affects Tez/Spark respectively. In the long term we should replace this with a new variable, perhaps (at the same time) gradually deprecating the old one.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=csun","name":"csun","key":"csun","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=csun&avatarId=23340","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=csun&avatarId=23340","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=csun&avatarId=23340","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=csun&avatarId=23340"},"displayName":"Chao Sun","active":true,"timeZone":"America/Los_Angeles"},"created":"2017-07-18T22:23:35.565+0000","updated":"2017-07-18T22:23:35.565+0000"}],"maxResults":16,"total":16,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-17018/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i3h2a7:"}}