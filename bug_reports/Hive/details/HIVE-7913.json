{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12737866","self":"https://issues.apache.org/jira/rest/api/2/issue/12737866","key":"HIVE-7913","fields":{"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310843","id":"12310843","key":"HIVE","name":"Hive","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310843&avatarId=11935","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310843&avatarId=11935","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310843&avatarId=11935","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310843&avatarId=11935"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10292","id":"10292","description":"Scalable Distributed Computing","name":"Hadoop"}},"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326450","id":"12326450","description":"released","name":"0.14.0","archived":false,"released":true,"releaseDate":"2014-11-12"}],"aggregatetimespent":null,"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/3","id":"3","description":"The problem is a duplicate of an existing issue.","name":"Duplicate"},"customfield_12312322":null,"customfield_12310220":"2014-10-11T01:45:34.005+0000","customfield_12312520":null,"customfield_12312323":null,"customfield_12312521":"Wed Dec 10 22:32:09 UTC 2014","customfield_12310420":"9223372036854775807","customfield_12312320":null,"customfield_12310222":"1_*:*_1_*:*_4052690921_*|*_5_*:*_1_*:*_0","customfield_12312321":null,"resolutiondate":"2014-10-15T15:50:03.264+0000","workratio":-1,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312923":null,"customfield_12312326":null,"customfield_12312920":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312921":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-7913/watchers","watchCount":3,"isWatching":false},"created":"2014-08-29T18:05:12.415+0000","customfield_12310192":null,"customfield_12310191":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12310230":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12310310":"0.0","customfield_12312331":null,"customfield_12312332":null,"timeestimate":null,"aggregatetimeoriginalestimate":null,"customfield_12311120":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12326829","id":"12326829","description":"0.13 maintenance release 1","name":"0.13.1","archived":false,"released":true,"releaseDate":"2014-06-06"}],"issuelinks":[{"id":"12395519","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12395519","type":{"id":"10020","name":"Cloners","inward":"is cloned by","outward":"is a clone of","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10020"},"inwardIssue":{"id":"12737893","key":"HIVE-7914","self":"https://issues.apache.org/jira/rest/api/2/issue/12737893","fields":{"summary":"Simplify join predicates for CBO to avoid cross products","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"customfield_12312337":null,"customfield_12312338":null,"updated":"2014-12-10T22:32:47.841+0000","customfield_12312335":null,"customfield_12312336":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12323402","id":"12323402","name":"CBO","description":"All issues dealing with Hive's cost based optimizer and its interaction with Optiq"}],"timeoriginalestimate":null,"description":"Simplify predicates for disjunctive predicates so that can get pushed down to the scan.\n\nFor TPC-DS query 13 we push down predicates in the following form \n\nwhere c_martial_status in ('M','D','U') etc.. \n\n{code}\nselect avg(ss_quantity)\n       ,avg(ss_ext_sales_price)\n       ,avg(ss_ext_wholesale_cost)\n       ,sum(ss_ext_wholesale_cost)\n from store_sales\n     ,store\n     ,customer_demographics\n     ,household_demographics\n     ,customer_address\n     ,date_dim\n where store.s_store_sk = store_sales.ss_store_sk\n and  store_sales.ss_sold_date_sk = date_dim.d_date_sk and date_dim.d_year = 2001\n and((store_sales.ss_hdemo_sk=household_demographics.hd_demo_sk\n  and customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk\n  and customer_demographics.cd_marital_status = 'M'\n  and customer_demographics.cd_education_status = '4 yr Degree'\n  and store_sales.ss_sales_price between 100.00 and 150.00\n  and household_demographics.hd_dep_count = 3   \n     )or\n     (store_sales.ss_hdemo_sk=household_demographics.hd_demo_sk\n  and customer_demographics.cd_demo_sk = store_sales.ss_cdemo_sk\n  and customer_demographics.cd_marital_status = 'D'\n  and customer_demographics.cd_education_status = 'Primary'\n  and store_sales.ss_sales_price between 50.00 and 100.00   \n  and household_demographics.hd_dep_count = 1\n     ) or \n     (store_sales.ss_hdemo_sk=household_demographics.hd_demo_sk\n  and customer_demographics.cd_demo_sk = ss_cdemo_sk\n  and customer_demographics.cd_marital_status = 'U'\n  and customer_demographics.cd_education_status = 'Advanced Degree'\n  and store_sales.ss_sales_price between 150.00 and 200.00 \n  and household_demographics.hd_dep_count = 1  \n     ))\n and((store_sales.ss_addr_sk = customer_address.ca_address_sk\n  and customer_address.ca_country = 'United States'\n  and customer_address.ca_state in ('KY', 'GA', 'NM')\n  and store_sales.ss_net_profit between 100 and 200  \n     ) or\n     (store_sales.ss_addr_sk = customer_address.ca_address_sk\n  and customer_address.ca_country = 'United States'\n  and customer_address.ca_state in ('MT', 'OR', 'IN')\n  and store_sales.ss_net_profit between 150 and 300  \n     ) or\n     (store_sales.ss_addr_sk = customer_address.ca_address_sk\n  and customer_address.ca_country = 'United States'\n  and customer_address.ca_state in ('WI', 'MO', 'WV')\n  and store_sales.ss_net_profit between 50 and 250  \n     ))\n;\n\n{code}\n\n\nThis is the plan currently generated without any predicate simplification \n{code}\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 depends on stages: Stage-1\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n      Edges:\n        Map 7 <- Map 8 (BROADCAST_EDGE)\n        Map 8 <- Map 5 (BROADCAST_EDGE), Map 6 (BROADCAST_EDGE)\n        Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 4 (BROADCAST_EDGE), Map 7 (SIMPLE_EDGE)\n        Reducer 3 <- Reducer 2 (SIMPLE_EDGE)\n      DagName: mmokhtar_20140828155050_7059c24b-501b-4683-86c0-4f3c023f0b0e:1\n      Vertices:\n        Map 1 \n            Map Operator Tree:\n                TableScan\n                  alias: customer_address\n                  Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: ca_address_sk (type: int), ca_state (type: string), ca_country (type: string)\n                    outputColumnNames: _col0, _col1, _col2\n                    Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      sort order: \n                      Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)\n            Execution mode: vectorized\n        Map 4 \n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: ((d_year = 2001) and d_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: ((d_year = 2001) and d_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 18262 Data size: 20435178 Basic stats: COMPLETE Column stats: NONE\n            Execution mode: vectorized\n        Map 5 \n            Map Operator Tree:\n                TableScan\n                  alias: household_demographics\n                  Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: hd_demo_sk (type: int), hd_dep_count (type: int)\n                    outputColumnNames: _col0, _col1\n                    Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\n                    Reduce Output Operator\n                      sort order: \n                      Statistics: Num rows: 7200 Data size: 770400 Basic stats: COMPLETE Column stats: NONE\n                      value expressions: _col0 (type: int), _col1 (type: int)\n            Execution mode: vectorized\n        Map 6 \n            Map Operator Tree:\n                TableScan\n                  alias: store\n                  filterExpr: (true and s_store_sk is not null) (type: boolean)\n                  Statistics: Num rows: 1704 Data size: 3256276 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: s_store_sk is not null (type: boolean)\n                    Statistics: Num rows: 852 Data size: 1628138 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: s_store_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 852 Data size: 1628138 Basic stats: COMPLETE Column stats: NONE\n                      Reduce Output Operator\n                        sort order: \n                        Statistics: Num rows: 852 Data size: 1628138 Basic stats: COMPLETE Column stats: NONE\n                        value expressions: _col0 (type: int)\n            Execution mode: vectorized\n        Map 7 \n            Map Operator Tree:\n                TableScan\n                  alias: store_sales\n                  filterExpr: (ss_store_sk is not null and ss_sold_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 82510879939 Data size: 7203833257964 Basic stats: COMPLETE Column stats: NONE\n                  Filter Operator\n                    predicate: (ss_store_sk is not null and ss_sold_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 20627719985 Data size: 1800958314512 Basic stats: COMPLETE Column stats: NONE\n                    Select Operator\n                      expressions: ss_sold_date_sk (type: int), ss_cdemo_sk (type: int), ss_hdemo_sk (type: int), ss_addr_sk (type: int), ss_store_sk (type: int), ss_quantity (type: int), ss_sales_price (type: float), ss_ext_sales_price (type: float), ss_ext_wholesale_cost (type: float), ss_net_profit (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7, _col8, _col9\n                      Statistics: Num rows: 20627719985 Data size: 1800958314512 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col0} {_col1} {_col2} {_col4} {_col5}\n                          1 {_col0} {_col1} {_col2} {_col3} {_col5} {_col6} {_col7} {_col8} {_col9}\n                        keys:\n                          0 _col3 (type: int)\n                          1 _col4 (type: int)\n                        outputColumnNames: _col0, _col1, _col2, _col4, _col5, _col6, _col7, _col8, _col9, _col11, _col12, _col13, _col14, _col15\n                        input vertices:\n                          0 Map 8\n                        Statistics: Num rows: 22690492416 Data size: 1981054320640 Basic stats: COMPLETE Column stats: NONE\n                        Filter Operator\n                          predicate: (((_col8 = _col4) and ((_col0 = _col7) and ((_col1 = 'M') and ((_col2 = '4 yr Degree') and (_col12 BETWEEN 100 AND 150 and (_col5 = 3)))))) or (((_col8 = _col4) and ((_col0 = _col7) and ((_col1 = 'D') and ((_col2 = 'Primary') and (_col12 BETWEEN 50 AND 100 and (_col5 = 1)))))) or ((_col8 = _col4) and ((_col0 = _col7) and ((_col1 = 'U') and ((_col2 = 'Advanced Degree') and (_col12 BETWEEN 150 AND 200 and (_col5 = 1)))))))) (type: boolean)\n                          Statistics: Num rows: 1063616832 Data size: 92861921280 Basic stats: COMPLETE Column stats: NONE\n                          Select Operator\n                            expressions: _col6 (type: int), _col9 (type: int), _col11 (type: int), _col13 (type: float), _col14 (type: float), _col15 (type: float)\n                            outputColumnNames: _col0, _col3, _col5, _col7, _col8, _col9\n                            Statistics: Num rows: 1063616832 Data size: 92861921280 Basic stats: COMPLETE Column stats: NONE\n                            Reduce Output Operator\n                              sort order: \n                              Statistics: Num rows: 1063616832 Data size: 92861921280 Basic stats: COMPLETE Column stats: NONE\n                              value expressions: _col0 (type: int), _col3 (type: int), _col5 (type: int), _col7 (type: float), _col8 (type: float), _col9 (type: float)\n            Execution mode: vectorized\n        Map 8 \n            Map Operator Tree:\n                TableScan\n                  alias: customer_demographics\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: cd_demo_sk (type: int), cd_marital_status (type: string), cd_education_status (type: string)\n                    outputColumnNames: _col0, _col1, _col2\n                    Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {_col0} {_col1} {_col2}\n                        1 {_col0}\n                      keys:\n                        0 \n                        1 \n                      outputColumnNames: _col0, _col1, _col2, _col3\n                      input vertices:\n                        1 Map 6\n                      Statistics: Num rows: 2112880 Data size: 790217152 Basic stats: COMPLETE Column stats: NONE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col0} {_col1} {_col2} {_col3}\n                          1 {_col0} {_col1}\n                        keys:\n                          0 \n                          1 \n                        outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5\n                        input vertices:\n                          1 Map 5\n                        Statistics: Num rows: 2324168 Data size: 869238912 Basic stats: COMPLETE Column stats: NONE\n                        Reduce Output Operator\n                          key expressions: _col3 (type: int)\n                          sort order: +\n                          Map-reduce partition columns: _col3 (type: int)\n                          Statistics: Num rows: 2324168 Data size: 869238912 Basic stats: COMPLETE Column stats: NONE\n                          value expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string), _col4 (type: int), _col5 (type: int)\n            Execution mode: vectorized\n        Reducer 2 \n            Reduce Operator Tree:\n              Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                condition expressions:\n                  0 {VALUE._col0} {VALUE._col3} {VALUE._col5} {VALUE._col7} {VALUE._col8} {VALUE._col9}\n                  1 {VALUE._col0} {VALUE._col1} {VALUE._col2}\n                outputColumnNames: _col0, _col3, _col5, _col7, _col8, _col9, _col16, _col17, _col18\n                Statistics: Num rows: 1169978496 Data size: 102148120576 Basic stats: COMPLETE Column stats: NONE\n                Filter Operator\n                  predicate: (((_col3 = _col16) and ((_col18 = 'United States') and ((_col17) IN ('KY', 'GA', 'NM') and _col9 BETWEEN 100 AND 200))) or (((_col3 = _col16) and ((_col18 = 'United States') and ((_col17) IN ('MT', 'OR', 'IN') and _col9 BETWEEN 150 AND 300))) or ((_col3 = _col16) and ((_col18 = 'United States') and ((_col17) IN ('WI', 'MO', 'WV') and _col9 BETWEEN 50 AND 250))))) (type: boolean)\n                  Statistics: Num rows: 219370968 Data size: 19152772608 Basic stats: COMPLETE Column stats: NONE\n                  Select Operator\n                    expressions: _col0 (type: int), _col5 (type: int), _col7 (type: float), _col8 (type: float)\n                    outputColumnNames: _col0, _col5, _col7, _col8\n                    Statistics: Num rows: 219370968 Data size: 19152772608 Basic stats: COMPLETE Column stats: NONE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 {_col5} {_col7} {_col8}\n                        1 \n                      keys:\n                        0 _col0 (type: int)\n                        1 _col0 (type: int)\n                      outputColumnNames: _col5, _col7, _col8\n                      input vertices:\n                        1 Map 4\n                      Statistics: Num rows: 241308080 Data size: 21068050432 Basic stats: COMPLETE Column stats: NONE\n                      Select Operator\n                        expressions: _col5 (type: int), _col7 (type: float), _col8 (type: float)\n                        outputColumnNames: _col0, _col1, _col2\n                        Statistics: Num rows: 241308080 Data size: 21068050432 Basic stats: COMPLETE Column stats: NONE\n                        Group By Operator\n                          aggregations: avg(_col0), avg(_col1), avg(_col2), sum(_col2)\n                          mode: hash\n                          outputColumnNames: _col0, _col1, _col2, _col3\n                          Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE\n                          Reduce Output Operator\n                            sort order: \n                            Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: NONE\n                            value expressions: _col0 (type: struct<count:bigint,sum:double,input:int>), _col1 (type: struct<count:bigint,sum:double,input:float>), _col2 (type: struct<count:bigint,sum:double,input:float>), _col3 (type: double)\n        Reducer 3 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: avg(VALUE._col0), avg(VALUE._col1), avg(VALUE._col2), sum(VALUE._col3)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3\n                Statistics: Num rows: 1 Data size: 32 Basic stats: COMPLETE Column stats: NONE\n                Select Operator\n                  expressions: _col0 (type: double), _col1 (type: double), _col2 (type: double), _col3 (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3\n                  Statistics: Num rows: 1 Data size: 32 Basic stats: COMPLETE Column stats: NONE\n                  File Output Operator\n                    compressed: false\n                    Statistics: Num rows: 1 Data size: 32 Basic stats: COMPLETE Column stats: NONE\n                    table:\n                        input format: org.apache.hadoop.mapred.TextInputFormat\n                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: -1\n      Processor Tree:\n        ListSink\n{code}","customfield_10010":null,"timetracking":{},"customfield_12312026":null,"customfield_12312023":null,"customfield_12310320":null,"customfield_12312024":null,"customfield_12312340":null,"attachment":[],"aggregatetimeestimate":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"9223372036854775807","customfield_12312823":null,"summary":"Simplify filter predicates for CBO","creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"customfield_12310291":null,"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"customfield_12310290":null,"aggregateprogress":{"progress":0,"total":0},"customfield_12311024":null,"environment":null,"customfield_12313520":null,"customfield_12311020":null,"duedate":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12737866/comment/14167934","id":"14167934","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jpullokkaran","name":"jpullokkaran","key":"jpullokkaran","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Laljo John Pullokkaran","active":true,"timeZone":"America/Los_Angeles"},"body":"Duplicate of HIVE-7914.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jpullokkaran","name":"jpullokkaran","key":"jpullokkaran","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Laljo John Pullokkaran","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-10-11T01:45:34.005+0000","updated":"2014-10-11T01:45:34.005+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12737866/comment/14172495","id":"14172495","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"body":"Fixed via HIVE-7914","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ashutoshc","name":"ashutoshc","key":"ashutoshc","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ashutosh Chauhan","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-10-15T15:50:03.300+0000","updated":"2014-10-15T15:50:03.300+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12737866/comment/14210251","id":"14210251","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"body":"This has been fixed in 0.14 release. Please open new jira if you see any issues.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=thejas","name":"thejas","key":"thejas","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=thejas&avatarId=15902","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=thejas&avatarId=15902","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=thejas&avatarId=15902","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=thejas&avatarId=15902"},"displayName":"Thejas M Nair","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-11-13T19:39:51.193+0000","updated":"2014-11-13T19:39:51.193+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12737866/comment/14241866","id":"14241866","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"body":"[~jpullokkaran]\nLooks like this is still an issue, some of the filters can be pushed down to the scan.\n\n{code}\nset hive.cbo.enable=true\nset hive.stats.fetch.column.stats=true\nset hive.exec.dynamic.partition.mode=nonstrict\nset hive.tez.auto.reducer.parallelism=true\nset hive.auto.convert.join.noconditionaltask.size=320000000\nset hive.exec.reducers.bytes.per.reducer=100000000\nset hive.txn.manager=org.apache.hadoop.hive.ql.lockmgr.DummyTxnManager\nset hive.support.concurrency=false\nset hive.tez.exec.print.summary=true\nexplain  \n\nselect  substr(r_reason_desc,1,20) as r\n       ,avg(ws_quantity) wq\n       ,avg(wr_refunded_cash) ref\n       ,avg(wr_fee) fee\n from web_sales, web_returns, web_page, customer_demographics cd1,\n      customer_demographics cd2, customer_address, date_dim, reason \n where web_sales.ws_web_page_sk = web_page.wp_web_page_sk\n   and web_sales.ws_item_sk = web_returns.wr_item_sk\n   and web_sales.ws_order_number = web_returns.wr_order_number\n   and web_sales.ws_sold_date_sk = date_dim.d_date_sk and d_year = 1998\n   and cd1.cd_demo_sk = web_returns.wr_refunded_cdemo_sk \n   and cd2.cd_demo_sk = web_returns.wr_returning_cdemo_sk\n   and customer_address.ca_address_sk = web_returns.wr_refunded_addr_sk\n   and reason.r_reason_sk = web_returns.wr_reason_sk\n   and\n   (\n    (\n     cd1.cd_marital_status = 'M'\n     and\n     cd1.cd_marital_status = cd2.cd_marital_status\n     and\n     cd1.cd_education_status = '4 yr Degree'\n     and \n     cd1.cd_education_status = cd2.cd_education_status\n     and\n     ws_sales_price between 100.00 and 150.00\n    )\n   or\n    (\n     cd1.cd_marital_status = 'D'\n     and\n     cd1.cd_marital_status = cd2.cd_marital_status\n     and\n     cd1.cd_education_status = 'Primary' \n     and\n     cd1.cd_education_status = cd2.cd_education_status\n     and\n     ws_sales_price between 50.00 and 100.00\n    )\n   or\n    (\n     cd1.cd_marital_status = 'U'\n     and\n     cd1.cd_marital_status = cd2.cd_marital_status\n     and\n     cd1.cd_education_status = 'Advanced Degree'\n     and\n     cd1.cd_education_status = cd2.cd_education_status\n     and\n     ws_sales_price between 150.00 and 200.00\n    )\n   )\n   and\n   (\n    (\n     ca_country = 'United States'\n     and\n     ca_state in ('KY', 'GA', 'NM')\n     and ws_net_profit between 100 and 200  \n    )\n    or\n    (\n     ca_country = 'United States'\n     and\n     ca_state in ('MT', 'OR', 'IN')\n     and ws_net_profit between 150 and 300  \n    )\n    or\n    (\n     ca_country = 'United States'\n     and\n     ca_state in ('WI', 'MO', 'WV')\n     and ws_net_profit between 50 and 250  \n    )\n   )\ngroup by r_reason_desc\norder by r, wq, ref, fee\nlimit 100\nOK\nSTAGE DEPENDENCIES:\n  Stage-1 is a root stage\n  Stage-0 depends on stages: Stage-1\n\nSTAGE PLANS:\n  Stage: Stage-1\n    Tez\n      Edges:\n        Map 9 <- Map 1 (BROADCAST_EDGE)\n        Reducer 3 <- Map 13 (SIMPLE_EDGE), Map 2 (SIMPLE_EDGE)\n        Reducer 4 <- Map 9 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)\n        Reducer 5 <- Map 14 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)\n        Reducer 6 <- Map 10 (SIMPLE_EDGE), Map 11 (BROADCAST_EDGE), Map 12 (BROADCAST_EDGE), Reducer 5 (SIMPLE_EDGE)\n        Reducer 7 <- Reducer 6 (SIMPLE_EDGE)\n        Reducer 8 <- Reducer 7 (SIMPLE_EDGE)\n      DagName: mmokhtar_20141111161818_f5fd23ba-d783-4b13-8507-7faa65851798:1\n      Vertices:\n        Map 1 \n            Map Operator Tree:\n                TableScan\n                  alias: web_page\n                  filterExpr: wp_web_page_sk is not null (type: boolean)\n                  Statistics: Num rows: 4602 Data size: 2696178 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: wp_web_page_sk is not null (type: boolean)\n                    Statistics: Num rows: 4602 Data size: 18408 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: wp_web_page_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 4602 Data size: 18408 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 4602 Data size: 18408 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 10 \n            Map Operator Tree:\n                TableScan\n                  alias: customer_address\n                  filterExpr: ((ca_country = 'United States') and ca_address_sk is not null) (type: boolean)\n                  Statistics: Num rows: 40000000 Data size: 40595195284 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((ca_country = 'United States') and ca_address_sk is not null) (type: boolean)\n                    Statistics: Num rows: 20000000 Data size: 3740000000 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ca_address_sk (type: int), ca_state (type: string)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 20000000 Data size: 1800000000 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 20000000 Data size: 1800000000 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: string)\n            Execution mode: vectorized\n        Map 11 \n            Map Operator Tree:\n                TableScan\n                  alias: date_dim\n                  filterExpr: ((d_year = 1998) and d_date_sk is not null) (type: boolean)\n                  Statistics: Num rows: 73049 Data size: 81741831 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((d_year = 1998) and d_date_sk is not null) (type: boolean)\n                    Statistics: Num rows: 652 Data size: 5216 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: d_date_sk (type: int)\n                      outputColumnNames: _col0\n                      Statistics: Num rows: 652 Data size: 2608 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 652 Data size: 2608 Basic stats: COMPLETE Column stats: COMPLETE\n                      Select Operator\n                        expressions: _col0 (type: int)\n                        outputColumnNames: _col0\n                        Statistics: Num rows: 652 Data size: 2608 Basic stats: COMPLETE Column stats: COMPLETE\n                        Group By Operator\n                          keys: _col0 (type: int)\n                          mode: hash\n                          outputColumnNames: _col0\n                          Statistics: Num rows: 326 Data size: 1304 Basic stats: COMPLETE Column stats: COMPLETE\n                          Dynamic Partitioning Event Operator\n                            Target Input: web_sales\n                            Partition key expr: ws_sold_date_sk\n                            Statistics: Num rows: 326 Data size: 1304 Basic stats: COMPLETE Column stats: COMPLETE\n                            Target column: ws_sold_date_sk\n                            Target Vertex: Map 9\n            Execution mode: vectorized\n        Map 12 \n            Map Operator Tree:\n                TableScan\n                  alias: reason\n                  filterExpr: r_reason_sk is not null (type: boolean)\n                  Statistics: Num rows: 72 Data size: 14400 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: r_reason_sk is not null (type: boolean)\n                    Statistics: Num rows: 72 Data size: 7272 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: r_reason_sk (type: int), r_reason_desc (type: string)\n                      outputColumnNames: _col0, _col1\n                      Statistics: Num rows: 72 Data size: 7272 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 72 Data size: 7272 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: string)\n            Execution mode: vectorized\n        Map 13 \n            Map Operator Tree:\n                TableScan\n                  alias: web_returns\n                  filterExpr: (((((wr_refunded_cdemo_sk is not null and wr_item_sk is not null) and wr_order_number is not null) and wr_returning_cdemo_sk is not null) and wr_refunded_addr_sk is not null) and wr_reason_sk is not null) (type: boolean)\n                  Statistics: Num rows: 2062802370 Data size: 185695406284 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: (((((wr_refunded_cdemo_sk is not null and wr_item_sk is not null) and wr_order_number is not null) and wr_returning_cdemo_sk is not null) and wr_refunded_addr_sk is not null) and wr_reason_sk is not null) (type: boolean)\n                    Statistics: Num rows: 1875154722 Data size: 58944640412 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: wr_item_sk (type: int), wr_refunded_cdemo_sk (type: int), wr_refunded_addr_sk (type: int), wr_returning_cdemo_sk (type: int), wr_reason_sk (type: int), wr_order_number (type: int), wr_fee (type: float), wr_refunded_cash (type: float)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6, _col7\n                      Statistics: Num rows: 1875154722 Data size: 58944640412 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col1 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col1 (type: int)\n                        Statistics: Num rows: 1875154722 Data size: 58944640412 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col0 (type: int), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: float), _col7 (type: float)\n            Execution mode: vectorized\n        Map 14 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  filterExpr: ((cd_demo_sk is not null and cd_marital_status is not null) and cd_education_status is not null) (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((cd_demo_sk is not null and cd_marital_status is not null) and cd_education_status is not null) (type: boolean)\n                    Statistics: Num rows: 1920800 Data size: 351506400 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cd_demo_sk (type: int), cd_marital_status (type: string), cd_education_status (type: string)\n                      outputColumnNames: _col0, _col1, _col2\n                      Statistics: Num rows: 1920800 Data size: 351506400 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int), _col1 (type: string), _col2 (type: string)\n                        sort order: +++\n                        Map-reduce partition columns: _col0 (type: int), _col1 (type: string), _col2 (type: string)\n                        Statistics: Num rows: 1920800 Data size: 351506400 Basic stats: COMPLETE Column stats: COMPLETE\n            Execution mode: vectorized\n        Map 2 \n            Map Operator Tree:\n                TableScan\n                  alias: cd1\n                  filterExpr: ((cd_demo_sk is not null and cd_marital_status is not null) and cd_education_status is not null) (type: boolean)\n                  Statistics: Num rows: 1920800 Data size: 718379200 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((cd_demo_sk is not null and cd_marital_status is not null) and cd_education_status is not null) (type: boolean)\n                    Statistics: Num rows: 1920800 Data size: 351506400 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: cd_demo_sk (type: int), cd_marital_status (type: string), cd_education_status (type: string)\n                      outputColumnNames: _col0, _col1, _col2\n                      Statistics: Num rows: 1920800 Data size: 351506400 Basic stats: COMPLETE Column stats: COMPLETE\n                      Reduce Output Operator\n                        key expressions: _col0 (type: int)\n                        sort order: +\n                        Map-reduce partition columns: _col0 (type: int)\n                        Statistics: Num rows: 1920800 Data size: 351506400 Basic stats: COMPLETE Column stats: COMPLETE\n                        value expressions: _col1 (type: string), _col2 (type: string)\n            Execution mode: vectorized\n        Map 9 \n            Map Operator Tree:\n                TableScan\n                  alias: web_sales\n                  filterExpr: ((ws_web_page_sk is not null and ws_item_sk is not null) and ws_order_number is not null) (type: boolean)\n                  Statistics: Num rows: 21594638446 Data size: 2850189889652 Basic stats: COMPLETE Column stats: COMPLETE\n                  Filter Operator\n                    predicate: ((ws_web_page_sk is not null and ws_item_sk is not null) and ws_order_number is not null) (type: boolean)\n                    Statistics: Num rows: 21591939929 Data size: 604541956128 Basic stats: COMPLETE Column stats: COMPLETE\n                    Select Operator\n                      expressions: ws_item_sk (type: int), ws_web_page_sk (type: int), ws_order_number (type: int), ws_quantity (type: int), ws_sales_price (type: float), ws_net_profit (type: float), ws_sold_date_sk (type: int)\n                      outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5, _col6\n                      Statistics: Num rows: 21591939929 Data size: 604541956128 Basic stats: COMPLETE Column stats: COMPLETE\n                      Map Join Operator\n                        condition map:\n                             Inner Join 0 to 1\n                        condition expressions:\n                          0 {_col0} {_col2} {_col3} {_col4} {_col5} {_col6}\n                          1 \n                        keys:\n                          0 _col1 (type: int)\n                          1 _col0 (type: int)\n                        outputColumnNames: _col0, _col2, _col3, _col4, _col5, _col6\n                        input vertices:\n                          1 Map 1\n                        Statistics: Num rows: 21591939072 Data size: 518206537728 Basic stats: COMPLETE Column stats: COMPLETE\n                        Reduce Output Operator\n                          key expressions: _col0 (type: int), _col2 (type: int)\n                          sort order: ++\n                          Map-reduce partition columns: _col0 (type: int), _col2 (type: int)\n                          Statistics: Num rows: 21591939072 Data size: 518206537728 Basic stats: COMPLETE Column stats: COMPLETE\n                          value expressions: _col3 (type: int), _col4 (type: float), _col5 (type: float), _col6 (type: int)\n            Execution mode: vectorized\n        Reducer 3 \n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                condition expressions:\n                  0 {VALUE._col0} {VALUE._col1} {VALUE._col2} {VALUE._col3} {VALUE._col4} {VALUE._col5} {VALUE._col6}\n                  1 {VALUE._col0} {VALUE._col1}\n                outputColumnNames: _col0, _col2, _col3, _col4, _col5, _col6, _col7, _col9, _col10\n                Statistics: Num rows: 1875154688 Data size: 373155782912 Basic stats: COMPLETE Column stats: COMPLETE\n                Select Operator\n                  expressions: _col0 (type: int), _col10 (type: string), _col2 (type: int), _col3 (type: int), _col4 (type: int), _col5 (type: int), _col6 (type: float), _col7 (type: float), _col9 (type: string)\n                  outputColumnNames: _col0, _col10, _col2, _col3, _col4, _col5, _col6, _col7, _col9\n                  Statistics: Num rows: 1875154688 Data size: 373155782912 Basic stats: COMPLETE Column stats: COMPLETE\n                  Reduce Output Operator\n                    key expressions: _col0 (type: int), _col5 (type: int)\n                    sort order: ++\n                    Map-reduce partition columns: _col0 (type: int), _col5 (type: int)\n                    Statistics: Num rows: 1875154688 Data size: 373155782912 Basic stats: COMPLETE Column stats: COMPLETE\n                    value expressions: _col2 (type: int), _col3 (type: int), _col4 (type: int), _col6 (type: float), _col7 (type: float), _col9 (type: string), _col10 (type: string)\n        Reducer 4 \n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                condition expressions:\n                  0 {VALUE._col1} {VALUE._col2} {VALUE._col3} {VALUE._col4}\n                  1 {VALUE._col1} {VALUE._col2} {VALUE._col3} {VALUE._col4} {VALUE._col5} {VALUE._col7} {VALUE._col8}\n                outputColumnNames: _col3, _col4, _col5, _col6, _col10, _col11, _col12, _col14, _col15, _col17, _col18\n                Statistics: Num rows: 57653145 Data size: 11472975855 Basic stats: COMPLETE Column stats: COMPLETE\n                Filter Operator\n                  predicate: (((_col17 = 'M') and ((_col18 = '4 yr Degree') and _col4 BETWEEN 100.0 AND 150.0)) or (((_col17 = 'D') and ((_col18 = 'Primary') and _col4 BETWEEN 50.0 AND 100.0)) or ((_col17 = 'U') and ((_col18 = 'Advanced Degree') and _col4 BETWEEN 150.0 AND 200.0)))) (type: boolean)\n                  Statistics: Num rows: 57653145 Data size: 11472975855 Basic stats: COMPLETE Column stats: COMPLETE\n                  Select Operator\n                    expressions: _col11 (type: int), _col12 (type: int), _col14 (type: float), _col15 (type: float), _col17 (type: string), _col18 (type: string), _col3 (type: int), _col5 (type: float), _col6 (type: int), _col10 (type: int)\n                    outputColumnNames: _col10, _col11, _col13, _col14, _col17, _col18, _col3, _col5, _col6, _col9\n                    Statistics: Num rows: 57653145 Data size: 11472975855 Basic stats: COMPLETE Column stats: COMPLETE\n                    Reduce Output Operator\n                      key expressions: _col10 (type: int), _col17 (type: string), _col18 (type: string)\n                      sort order: +++\n                      Map-reduce partition columns: _col10 (type: int), _col17 (type: string), _col18 (type: string)\n                      Statistics: Num rows: 57653145 Data size: 11472975855 Basic stats: COMPLETE Column stats: COMPLETE\n                      value expressions: _col3 (type: int), _col5 (type: float), _col6 (type: int), _col9 (type: int), _col11 (type: int), _col13 (type: float), _col14 (type: float)\n        Reducer 5 \n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                condition expressions:\n                  0 \n                  1 {VALUE._col3} {VALUE._col5} {VALUE._col6} {VALUE._col9} {VALUE._col10} {VALUE._col12} {VALUE._col13}\n                outputColumnNames: _col6, _col8, _col9, _col12, _col14, _col16, _col17\n                Statistics: Num rows: 3187317548 Data size: 50997080768 Basic stats: COMPLETE Column stats: COMPLETE\n                Select Operator\n                  expressions: _col12 (type: int), _col14 (type: int), _col16 (type: float), _col17 (type: float), _col6 (type: int), _col8 (type: float), _col9 (type: int)\n                  outputColumnNames: _col12, _col14, _col16, _col17, _col6, _col8, _col9\n                  Statistics: Num rows: 3187317548 Data size: 50997080768 Basic stats: COMPLETE Column stats: COMPLETE\n                  Reduce Output Operator\n                    key expressions: _col12 (type: int)\n                    sort order: +\n                    Map-reduce partition columns: _col12 (type: int)\n                    Statistics: Num rows: 3187317548 Data size: 50997080768 Basic stats: COMPLETE Column stats: COMPLETE\n                    value expressions: _col6 (type: int), _col8 (type: float), _col9 (type: int), _col14 (type: int), _col16 (type: float), _col17 (type: float)\n        Reducer 6 \n            Reduce Operator Tree:\n              Merge Join Operator\n                condition map:\n                     Inner Join 0 to 1\n                condition expressions:\n                  0 {VALUE._col0}\n                  1 {VALUE._col6} {VALUE._col8} {VALUE._col9} {VALUE._col13} {VALUE._col15} {VALUE._col16}\n                outputColumnNames: _col1, _col9, _col11, _col12, _col17, _col19, _col20\n                Statistics: Num rows: 1593658752 Data size: 156178557696 Basic stats: COMPLETE Column stats: COMPLETE\n                Filter Operator\n                  predicate: (((_col1) IN ('KY', 'GA', 'NM') and _col11 BETWEEN 100 AND 200) or (((_col1) IN ('MT', 'OR', 'IN') and _col11 BETWEEN 150 AND 300) or ((_col1) IN ('WI', 'MO', 'WV') and _col11 BETWEEN 50 AND 250))) (type: boolean)\n                  Statistics: Num rows: 1195244064 Data size: 117133918272 Basic stats: COMPLETE Column stats: COMPLETE\n                  Select Operator\n                    expressions: _col17 (type: int), _col19 (type: float), _col20 (type: float), _col9 (type: int), _col12 (type: int)\n                    outputColumnNames: _col11, _col13, _col14, _col3, _col6\n                    Statistics: Num rows: 1195244064 Data size: 14342928768 Basic stats: COMPLETE Column stats: COMPLETE\n                    Map Join Operator\n                      condition map:\n                           Inner Join 0 to 1\n                      condition expressions:\n                        0 \n                        1 {_col3} {_col11} {_col13} {_col14}\n                      keys:\n                        0 _col0 (type: int)\n                        1 _col6 (type: int)\n                      outputColumnNames: _col5, _col13, _col15, _col16\n                      input vertices:\n                        0 Map 11\n                      Statistics: Num rows: 1334416318 Data size: 16012995816 Basic stats: COMPLETE Column stats: COMPLETE\n                      Select Operator\n                        expressions: _col13 (type: int), _col15 (type: float), _col16 (type: float), _col5 (type: int)\n                        outputColumnNames: _col13, _col15, _col16, _col5\n                        Statistics: Num rows: 1334416318 Data size: 16012995816 Basic stats: COMPLETE Column stats: COMPLETE\n                        Map Join Operator\n                          condition map:\n                               Inner Join 0 to 1\n                          condition expressions:\n                            0 {_col1}\n                            1 {_col5} {_col15} {_col16}\n                          keys:\n                            0 _col0 (type: int)\n                            1 _col13 (type: int)\n                          outputColumnNames: _col1, _col7, _col17, _col18\n                          input vertices:\n                            0 Map 12\n                          Statistics: Num rows: 1334416256 Data size: 140113706880 Basic stats: COMPLETE Column stats: COMPLETE\n                          Select Operator\n                            expressions: _col1 (type: string), _col7 (type: int), _col18 (type: float), _col17 (type: float)\n                            outputColumnNames: _col0, _col1, _col2, _col3\n                            Statistics: Num rows: 1334416256 Data size: 140113706880 Basic stats: COMPLETE Column stats: COMPLETE\n                            Group By Operator\n                              aggregations: avg(_col1), avg(_col2), avg(_col3)\n                              keys: _col0 (type: string)\n                              mode: hash\n                              outputColumnNames: _col0, _col1, _col2, _col3\n                              Statistics: Num rows: 157024 Data size: 15231328 Basic stats: COMPLETE Column stats: COMPLETE\n                              Reduce Output Operator\n                                key expressions: _col0 (type: string)\n                                sort order: +\n                                Map-reduce partition columns: _col0 (type: string)\n                                Statistics: Num rows: 157024 Data size: 15231328 Basic stats: COMPLETE Column stats: COMPLETE\n                                value expressions: _col1 (type: struct<count:bigint,sum:double,input:int>), _col2 (type: struct<count:bigint,sum:double,input:float>), _col3 (type: struct<count:bigint,sum:double,input:float>)\n        Reducer 7 \n            Reduce Operator Tree:\n              Group By Operator\n                aggregations: avg(VALUE._col0), avg(VALUE._col1), avg(VALUE._col2)\n                keys: KEY._col0 (type: string)\n                mode: mergepartial\n                outputColumnNames: _col0, _col1, _col2, _col3\n                Statistics: Num rows: 112 Data size: 13552 Basic stats: COMPLETE Column stats: COMPLETE\n                Select Operator\n                  expressions: substr(_col0, 1, 20) (type: string), _col1 (type: double), _col2 (type: double), _col3 (type: double)\n                  outputColumnNames: _col0, _col1, _col2, _col3\n                  Statistics: Num rows: 112 Data size: 23296 Basic stats: COMPLETE Column stats: COMPLETE\n                  Reduce Output Operator\n                    key expressions: _col0 (type: string), _col1 (type: double), _col2 (type: double), _col3 (type: double)\n                    sort order: ++++\n                    Statistics: Num rows: 112 Data size: 23296 Basic stats: COMPLETE Column stats: COMPLETE\n                    TopN Hash Memory Usage: 0.04\n        Reducer 8 \n            Reduce Operator Tree:\n              Select Operator\n                expressions: KEY.reducesinkkey0 (type: string), KEY.reducesinkkey1 (type: double), KEY.reducesinkkey2 (type: double), KEY.reducesinkkey3 (type: double)\n                outputColumnNames: _col0, _col1, _col2, _col3\n                Statistics: Num rows: 112 Data size: 23296 Basic stats: COMPLETE Column stats: COMPLETE\n                Limit\n                  Number of rows: 100\n                  Statistics: Num rows: 100 Data size: 20800 Basic stats: COMPLETE Column stats: COMPLETE\n                  File Output Operator\n                    compressed: false\n                    Statistics: Num rows: 100 Data size: 20800 Basic stats: COMPLETE Column stats: COMPLETE\n                    table:\n                        input format: org.apache.hadoop.mapred.TextInputFormat\n                        output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat\n                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n            Execution mode: vectorized\n\n  Stage: Stage-0\n    Fetch Operator\n      limit: 100\n      Processor Tree:\n        ListSink\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mmokhtar","name":"mmokhtar","key":"mmokhtar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mmokhtar&avatarId=21863","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mmokhtar&avatarId=21863","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mmokhtar&avatarId=21863","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mmokhtar&avatarId=21863"},"displayName":"Mostafa Mokhtar","active":true,"timeZone":"America/Los_Angeles"},"created":"2014-12-10T22:32:09.665+0000","updated":"2014-12-10T22:32:09.665+0000"}],"maxResults":4,"total":4,"startAt":0},"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/HIVE-7913/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12311820":"0|i1zhwv:"}}